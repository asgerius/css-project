[{"tags": ["rust"], "comments": [{"owner": {"reputation": 92827, "user_id": 369, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/DHcF2.png?s=128&g=1", "display_name": "Blorgbeard", "link": "https://stackoverflow.com/users/369/blorgbeard"}, "edited": false, "score": 4, "creation_date": 1507754402, "post_id": 46697088, "comment_id": 80342067, "body": "I think <code>return Err(e)</code> is not setting the value of <code>f</code>, it&#39;s breaking out of the <code>match</code> and returning a value from the function."}, {"owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1507754957, "post_id": 46697088, "comment_id": 80342347, "body": "@LukasKalbertodt: If <code>f</code> has type <code>std::fs::File</code>, then <code>f</code> might have type <code>std::fs::File</code> hence not <code>Result&lt;_, _&gt;</code>. Type indeterminate means that <code>f</code> could have one of two unequal types."}], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 687467, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/SNsXy.jpg?s=128&g=1", "display_name": "yati sagade", "link": "https://stackoverflow.com/users/687467/yati-sagade"}, "is_accepted": true, "score": 5, "last_activity_date": 1507756164, "last_edit_date": 1507756164, "creation_date": 1507755689, "answer_id": 46697492, "question_id": 46697088, "link": "https://stackoverflow.com/questions/46697088/are-rust-match-expressions-type-indeterminate/46697492#46697492", "title": "Are Rust Match Expressions Type Indeterminate?", "body": "<p>No, types aren't indeterminate. You are first creating a binding of type <code>Result&lt;io::File, io::Error&gt;</code>. Then, you are creating a new (mutable) binding for <code>f</code> of type <code>io::File</code> (because that's what is contained in the <code>Ok</code> variant of the <code>Result</code> enum in your case) This new binding shadows the old one, just like a a block in, say, Perl (and C/C++ etc.) would introduce a new scope:</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>my $x = [42, 24];\n{\n    # new scope\n    my $x = $x-&gt;[0];\n    say Dumper $x; # 42, an INT\n}\nsay Dumper $x; # [42, 24], an ARRAY\n</code></pre>\n\n<p>In Rust, <code>let</code> can be thought of as introducing a new scope similarly, shadowing the previous binding.</p>\n\n<p>Since you also <code>return</code> <em>out of your function</em> when you encounter an <code>Err(_)</code>, the compiler is still able to infer the type of the second binding <code>f</code> to be <code>io::File</code>.</p>\n"}], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 46697492, "answer_count": 1, "score": 2, "last_activity_date": 1507756164, "creation_date": 1507754154, "last_edit_date": 1507754499, "question_id": 46697088, "link": "https://stackoverflow.com/questions/46697088/are-rust-match-expressions-type-indeterminate", "title": "Are Rust Match Expressions Type Indeterminate?", "body": "<p>Reading a Rust tutorial I found the following code snippet:</p>\n\n<pre><code>let f = File::open(\"hello.txt\");\n\nlet mut f = match f {\n    Ok(file) =&gt; file,\n    Err(e) =&gt; return Err(e)\n};\n</code></pre>\n\n<p>This seems that <code>f</code> could have the value of type <code>Result&lt;_, _&gt;</code> (if <code>f == Err(e)</code>) or a value of type <code>_</code> (i.e., whatever type <code>file</code> happens to be).</p>\n\n<p>So does this mean that match expressions in Rust are type indeterminate?</p>\n"}, {"tags": ["rust", "cross-compiling", "nanomsg"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507742155, "post_id": 46693282, "comment_id": 80335745, "body": "I don&#39;t think things are working as you intended. <code>&#47;usr&#47;local&#47;lib&#47;libnanomsg.so</code> would be a <i>very</i> strange place to install a cross-compiled native library. You need to find the location of your statically-linked cross-compiled version of nanomsg and link to that."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507742297, "post_id": 46693282, "comment_id": 80335830, "body": "Perhaps I didn&#39;t explain myself correctly. /usr/local/lib/libnanomsg.so is not the cross compiled version of the library, is the 64bit version of the library that works in my host machine (64bit Ubuntu). It seems reasonable that if cargo is picking it up for cross compilation, it would fail. That&#39;s one of my questions, how do I tell cargo to pick up a different version of the library?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507742352, "post_id": 46693282, "comment_id": 80335860, "body": "Or the more general: How do I cross compile a project that includes nanomsg from Ubuntu 64bit to Raspbian 32bit?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507742877, "post_id": 46693282, "comment_id": 80336147, "body": "Have you already read about <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build scripts</a>?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507756437, "post_id": 46693282, "comment_id": 80343029, "body": "I had not, I&#39;ll check it out, thanks."}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 258, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1507742084, "creation_date": 1507739346, "last_edit_date": 1507742084, "question_id": 46693282, "link": "https://stackoverflow.com/questions/46693282/resolving-dependencies-in-rust-32-bit-cross-compilation", "title": "Resolving dependencies in Rust 32 bit cross-compilation", "body": "<p>I'm working on a project that uses the <a href=\"https://crates.io/crates/nanomsg\" rel=\"nofollow noreferrer\">nanomsg</a> crate. The crate depends on the nanomsg library itself, which is a native library. So far so good.</p>\n\n<p>The problem comes when I cross compile the project to target the raspberry pi using the following command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --target=armv7-unknown-linux-gnueabihf\n</code></pre>\n\n<p>The build fails when trying to link the nanomsg library with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `arm-linux-gnueabihf-gcc-5` failed: exit code: 1\n...\n  = note: /usr/local/lib/libnanomsg.so: file not recognized: File format not recognised\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>I have configured my machine for such cross-compilation beforehand and confirmed it works with a simple hello world project.</p>\n\n<p>Some searching for the error message points to 64bit vs 32bit issues with the library. The nanomsg library I have installed is 64bit, built from source.</p>\n\n<p>Is there a way to tell cargo to statically link that library and resolve it at runtime? If I install a 32bit version of the library on my machine, will cargo simply \"pick it up\" and cross-compilation will succeed?</p>\n"}, {"tags": ["char", "rust", "stdin"], "owner": {"reputation": 83, "user_id": 3406881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf479e7b5c1f38127e0e071fac84a804?s=128&d=identicon&r=PG&f=1", "display_name": "user3406881", "link": "https://stackoverflow.com/users/3406881/user3406881"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 132, "favorite_count": 0, "closed_date": 1507734406, "answer_count": 0, "score": 1, "last_activity_date": 1507902866, "creation_date": 1507733297, "last_edit_date": 1507902866, "question_id": 46691303, "link": "https://stackoverflow.com/questions/46691303/how-to-read-one-single-char-in-rust", "closed_reason": "Duplicate", "title": "How to read one single char in Rust?", "body": "<p>I'm trying to build a game that reads characters from input in order to move the player. Every example I've seen reads complete lines, which means I have to press a key and then press <kbd>Enter</kbd>, clearly a no-go. How can I get just one single char, without waiting for any other char?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 2, "creation_date": 1507730460, "post_id": 46690115, "comment_id": 80328174, "body": "What&#39;s wrong with <code>.last()</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1507730940, "post_id": 46690115, "comment_id": 80328539, "body": "This is absolutely something you do <b>not</b> need <code>unsafe for</code>. If you really truly need a <i>pointer</i> and not a <i>reference</i>, you can cast the resulting reference to a pointer."}], "owner": {"reputation": 1455, "user_id": 1506301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ba34ad56376b81321544fc4e81ece91?s=128&d=identicon&r=PG&f=1", "display_name": "arkod", "link": "https://stackoverflow.com/users/1506301/arkod"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 369, "favorite_count": 0, "closed_date": 1507730588, "answer_count": 0, "score": 0, "last_activity_date": 1507800353, "creation_date": 1507730239, "last_edit_date": 1507800353, "question_id": 46690115, "link": "https://stackoverflow.com/questions/46690115/how-to-get-a-pointer-to-the-last-element-in-a-slice-using-rust", "closed_reason": "Duplicate", "title": "How to get a pointer to the last element in a slice using Rust?", "body": "<p>I would like to get rid of the cast to isize in the example below:</p>\n\n<pre><code>let s = &amp;[1, 2, 3];\nlet mut i = s.as_ptr();\nunsafe {\n    let mut j = i.offset(s.len() as isize - 1);\n    do pointer arithmetic on i and j...\n}\n</code></pre>\n\n<p>Is there a better way to do this? I've been looking in the Rust reference for something in the vein of <code>s.last_as_ptr()</code> but have not found it.</p>\n\n<p>EDIT: I should have read the pointer basics first <a href=\"https://doc.rust-lang.org/book/first-edition/raw-pointers.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/first-edition/raw-pointers.html</a></p>\n\n<blockquote>\n  <p>This is absolutely something you do not need unsafe for. If you really truly need a pointer and not a reference, you can cast the resulting reference to a pointer. \u2013 Shepmaster</p>\n</blockquote>\n\n<p>@Shepmaster &amp; @Josh Lee: I should have provided a complete example, I need to do pointer arithmetic on <code>i</code> and <code>j</code>. I edited the code to reflect this.\nThanks for pointing out .last(), that seems to be the obvious choice since it returns a reference.\nThe information I was missing when posting this question was that references/borrows can be cast to pointers.</p>\n\n<p>This seem to be what I was looking for <code>let mut j = s.last().unwrap() as *const _;</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 2, "creation_date": 1507729535, "post_id": 46689785, "comment_id": 80327436, "body": "Returning nothing is not the same as never returning."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1507729575, "post_id": 46689785, "comment_id": 80327452, "body": "@Lee so it seems you know the answer and you can answer here with a  detailed explanation."}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 1, "creation_date": 1507729725, "post_id": 46689785, "comment_id": 80327588, "body": "Well I&#39;ll wait for a Rust programmer to answer, but I believe <code>!</code> is the empty type, so a function with that return type will never return normally (e.g. it will panic or terminate the program). In contrast <code>()</code> is a type with one value so a function with that return type will only be executed for its side-effects."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1507729775, "post_id": 46689785, "comment_id": 80327632, "body": "@Lee looks like you are exactly right alleging this."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1507730558, "last_edit_date": 1507730558, "creation_date": 1507729660, "answer_id": 46689917, "question_id": 46689785, "link": "https://stackoverflow.com/questions/46689785/what-is-the-use-of-as-return-type-in-rust/46689917#46689917", "title": "What is the use of `!` as return type in Rust?", "body": "<p>Unit <code>()</code> is not nothing, it <em>is</em> a type, with one possible value also written <code>()</code>.</p>\n\n<p>Furthermore, when a function returns unit (or \"nothing\" as you say), it actually returns. The <code>Never</code> type <code>!</code> specify that the function <em>never</em> returns, <em>i.e.</em> quits the program.</p>\n\n<p>This is typically the return type of a <code>panic</code> macro:</p>\n\n<pre><code>let s = match i {\n    1 =&gt; \"one\",\n    2 =&gt; \"two\",\n    _ =&gt; panic!(\"Error\"),\n}\n</code></pre>\n\n<p>In this example, note that <code>!</code> can \"take the role\" of all the types. The compiler does not complain that one branch has type <code>&amp;str</code> and another has type <code>!</code>.</p>\n\n<p>For your information, here is a <a href=\"https://github.com/rust-lang/rfcs/pull/1216\" rel=\"nofollow noreferrer\">little history of the <code>Never</code> type</a>.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1709, "favorite_count": 0, "closed_date": 1507730861, "accepted_answer_id": 46689917, "answer_count": 1, "score": 6, "last_activity_date": 1507730558, "creation_date": 1507729340, "question_id": 46689785, "link": "https://stackoverflow.com/questions/46689785/what-is-the-use-of-as-return-type-in-rust", "closed_reason": "Duplicate", "title": "What is the use of `!` as return type in Rust?", "body": "<p>I have recently seen a code like this:</p>\n\n<pre><code>fn read() -&gt; ! {\n    unimplemented!()\n}\n\nfn read2() {\n}\n\nfn main() {\n    read2();\n    read();\n}\n</code></pre>\n\n<p>I could not find any information about the <code>!</code> as return type of <code>fn read()</code> anywhere so I don't have any idea what is this and what for.</p>\n\n<p>The only thing I have found seems useless for me:</p>\n\n<blockquote>\n  <p>Using ! as a return type indicates to the Rust compiler that this function never returns</p>\n</blockquote>\n\n<p>I don't understand what it does since omitting the type also says that the function returns nothing (the <code>unit</code> type actually).</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1507727684, "creation_date": 1507727684, "answer_id": 46689201, "question_id": 46688929, "link": "https://stackoverflow.com/questions/46688929/how-to-mutably-borrow-reference-from-mut-foo/46689201#46689201", "title": "How to mutably borrow reference from &amp;&amp;mut Foo?", "body": "<p>You cannot. You have an immutable reference, which means that <em>everything</em> behind the reference is immutable from the point of view of the owner of the reference.</p>\n\n<p>If this wasn't the case, then the whole concept of there only being a single mutable reference to each thing at a time would be trivially breakable.</p>\n"}], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 46689201, "answer_count": 1, "score": 1, "last_activity_date": 1507727684, "creation_date": 1507726968, "last_edit_date": 1507727597, "question_id": 46688929, "link": "https://stackoverflow.com/questions/46688929/how-to-mutably-borrow-reference-from-mut-foo", "title": "How to mutably borrow reference from &amp;&amp;mut Foo?", "body": "<pre><code>struct A;\nimpl A {\n    fn foo(&amp;mut self) {}\n}\n\nfn main() {\n    let mut a = A;\n    let x = &amp;{ &amp;mut a };\n    x.foo();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n --&gt; src/main.rs:9:5\n  |\n9 |     x.foo();\n  |     ^ assignment into an immutable reference\n</code></pre>\n"}, {"tags": ["memory", "rust"], "answers": [{"tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": false, "score": 8, "last_activity_date": 1507725540, "last_edit_date": 1507725540, "creation_date": 1507710494, "answer_id": 46683398, "question_id": 46683073, "link": "https://stackoverflow.com/questions/46683073/why-is-the-memory-address-printed-with-p-much-bigger-than-my-ram-specs/46683398#46683398", "title": "Why is the memory address printed with {:p} much bigger than my RAM specs?", "body": "<p>The pointers your program works with are in <a href=\"https://en.wikipedia.org/wiki/Virtual_address_space\" rel=\"noreferrer\">virtual address space</a>.  x86-64 uses 64-bit pointers.  This was one of the major goals of AMD64, along with adding more integer and XMM registers.  You are correct that i386 only has 32-bit pointers which only cover 4GB of address space in each process.</p>\n\n<p><code>0x7fff51ef6380</code> looks like a stack pointer, which I guess makes sense for that code.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/38977755/address-canonical-form-and-pointer-arithmetic/38983032#38983032\">Linux on x86-64 (for example) puts the stack near the top of the lower canonical address range</a>: current x86-64 hardware only implements 48-bit virtual addresses and this is the mechanism to prevent software from depending on it. This allows the address space to be extended in the future without breaking software.</p>\n\n<p>The amount of phyiscal RAM in your system has <em>nothing</em> to do with this.  You'd see (approximately) the same number on an x86-64 system with 128MB of RAM, +/- stack <a href=\"https://en.wikipedia.org/wiki/Address_space_layout_randomization\" rel=\"noreferrer\">address space layout randomization (ASLR)</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507752497, "post_id": 46683437, "comment_id": 80341148, "body": "BTW, it&#39;s a coincidence that current CPUs support 48-bit physical addresses.  First-gen AMD64 chips supported 40 bits of physical addresses, and x86-64&#39;s page-table format can support <a href=\"https://stackoverflow.com/questions/46509152/why-in-64bit-the-virtual-address-are-4-bits-short-48bit-long-compared-with-the\">52-bit physical addresses</a>.  Also, virtual address space is really only 48-bits (and addresses must be canonical, see my answer)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507752804, "post_id": 46683437, "comment_id": 80341295, "body": "re: point 2: no, every process has its own virtual address space.  This is one of the major benefits of virtual memory.  The kernel might reserve half of it for its own use (e.g. while in kernel mode from that process making a system call), but that&#39;s <i>all</i>.  A process always has 47 (or logically 63, and also in reality if x86-64 is extended to real 64-bit virtual addresses).  I know you&#39;re simplifying, but I think this point is important.  A process has its virtual address space to itself."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507754059, "post_id": 46683437, "comment_id": 80341879, "body": "@PeterCordes About point 2: I meant what you said (I even mentioned this advantage above), but I can now see that the way I wrote it, it is easy to misunderstand. Sorry about that. I&#39;ll fix it soon. Thanks!"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507754554, "post_id": 46683437, "comment_id": 80342152, "body": "Heh, I wondered if you meant &quot;effects&quot;.  I only skimmed before commenting."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507754973, "post_id": 46683437, "comment_id": 80342354, "body": "Minor quibble: modern CPU cores don&#39;t have a separate &quot;MMU&quot;.  Support for virtual memory is completely baked-in to each CPU core, and <a href=\"https://stackoverflow.com/questions/46480015/vipt-cache-connection-between-tlb-cache\">TLBs are intertwined with the level-1 caches</a>.  x86 has dedicated page-walk hardware, so all the OS has to do is put a page-directory pointer into CR3, or modify the existing page tables in memory and invalidate any affected translations."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1507755008, "post_id": 46683437, "comment_id": 80342372, "body": "I get that talking about &quot;the MMU&quot; is a useful mental model for beginners, but then people wonder &quot;<a href=\"https://stackoverflow.com/questions/34437371/is-the-tlb-shared-between-multiple-cores\">whether each core has its own MMU</a>&quot;...  I think I just wanted to rant about a pet peeve rather than get you to actually change your answer.  :P  But really the &quot;MMU&quot; functionality is split up into iTLB (coupled with L1I cache), dTLB (with L1D cache), a second-level TLB to service TLB misses from either L1TLB, and page-walk hardware to service L2 TLB misses.  And the CR3 control register..."}, {"owner": {"reputation": 1819, "user_id": 4368942, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0db50368a61694b00f992e60aad5817a?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/4368942/john-smith"}, "edited": false, "score": 0, "creation_date": 1507759912, "post_id": 46683437, "comment_id": 80344339, "body": "So behind the scenes the virtual memory address which could be a 64 bit number, is mapped with the physical location address which can only be as big as the memory size unless it is actually using an address mapped to a swap file . Right?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 1819, "user_id": 4368942, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0db50368a61694b00f992e60aad5817a?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/4368942/john-smith"}, "edited": false, "score": 0, "creation_date": 1507803138, "post_id": 46683437, "comment_id": 80360423, "body": "@JohnSmith: Close, but physical address space doesn&#39;t include swap files.  They&#39;re not physically hooked up to the memory bus!  You can have files mmaped into virtual address space, and they will be faulted into a physical page on demand if they weren&#39;t already.  This may need to evict other physical pages to make room.  (So going back and accessing a virtual page you touched earlier might fault again.)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1507710612, "creation_date": 1507710612, "answer_id": 46683437, "question_id": 46683073, "link": "https://stackoverflow.com/questions/46683073/why-is-the-memory-address-printed-with-p-much-bigger-than-my-ram-specs/46683437#46683437", "title": "Why is the memory address printed with {:p} much bigger than my RAM specs?", "body": "<p>What you see here is an effect of <a href=\"https://en.wikipedia.org/wiki/Virtual_memory\" rel=\"noreferrer\"><em>virtual memory</em></a>. Memory management is hard and it becomes even harder when the operating system and tens of hundreds of processes have to share the memory. In order to handle this huge complexity, the concept of <em>virtual memory</em> was used. I'll just briefly explain the basics here; the topic is far more complex and you should read about it somewhere else, too.</p>\n\n<p>On most modern computers, each process thinks that it owns (almost) the complete memory space. But processes never deal with <em>physical</em> addresses, but with <em>virtual</em> ones. These virtual addresses are mapped to physical ones each time the process actually reads from memory. This translation of addresses is done by the so called MMU (memory management unit). The rules for how to map the addresses are setup by the operating system. </p>\n\n<p>When you boot your PC, the operating system creates an initial mapping. Every time you start a process, the operating system adds a few slices of physical memory to the process and modifies the mapping appropriately. That way, the process has memory to play with.</p>\n\n<p>On x86_64, the address space is 64 bit wide, so each process thinks it owns all of those 2^64 addresses. This is not true, of course: </p>\n\n<ol>\n<li>There isn't a single PC on the world with that much memory. (In fact, most CPUs today can <em>merely</em> use 280 TB of RAM, since they internally can only use 48bit for addressing physical memory. And even these 280TB are enough for now, apparently.)</li>\n<li>Even if you had that much memory, there are other processes which use part of that memory, too.</li>\n</ol>\n\n<p>So what happens when you try to read an address which isn't mapped (which in 64bit land, are the vast majority of the addresses)? The MMU triggers a page fault. This makes the CPU notify the operating system to handle this. </p>\n\n<blockquote>\n  <p>What I mean is that in x86, usually first location starts at 0, then 1, 2, etc. so the highest number you can have is around 4 billion.</p>\n</blockquote>\n\n<p>That is true, but it is also true if your x86 system has less than 4GB of RAM. Virtual memory exists for quite some time already. </p>\n\n<hr>\n\n<p>So that's a short summary of why you see such big addresses. Again, please note that I glossed over many details here.</p>\n"}], "owner": {"reputation": 1819, "user_id": 4368942, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0db50368a61694b00f992e60aad5817a?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/4368942/john-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 577, "favorite_count": 1, "accepted_answer_id": 46683437, "answer_count": 2, "score": 8, "last_activity_date": 1507725540, "creation_date": 1507709446, "last_edit_date": 1507725362, "question_id": 46683073, "link": "https://stackoverflow.com/questions/46683073/why-is-the-memory-address-printed-with-p-much-bigger-than-my-ram-specs", "title": "Why is the memory address printed with {:p} much bigger than my RAM specs?", "body": "<p>I want to print the memory location (address) of a variable with:</p>\n\n<pre><code>let x = 1;\nprintln!(\"{:p}\", &amp;x);\n</code></pre>\n\n<p>This prints the hex value <code>0x7fff51ef6380</code> which in decimal is <code>140734568031104</code>.</p>\n\n<p>My computer has 16GB of RAM, so why this huge number? Does the x64 architecture use a big interval sequence instead of just simple 1 increment for accessing memory location?</p>\n\n<p>In x86, usually the first location starts at 0, then 1, 2, etc. so the highest number you can have is around 4 billion, so the address number was always equals or less than 4 billion.</p>\n\n<p>Why is this not the case with x64?</p>\n"}, {"tags": ["struct", "enums", "rust", "private-members"], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 4111393, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e7fc05ba15a344a02c328308e75bd12?s=128&d=identicon&r=PG&f=1", "display_name": "Vijay Selvan Ram", "link": "https://stackoverflow.com/users/4111393/vijay-selvan-ram"}, "edited": false, "score": 0, "creation_date": 1565818118, "post_id": 46680202, "comment_id": 101473572, "body": "To clarify, are you saying that in rust public code <i>cannot</i> access external private code, but private code <i>can</i> access external private code?"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 13, "last_activity_date": 1586914294, "last_edit_date": 1586914294, "creation_date": 1507698213, "answer_id": 46680202, "question_id": 46680064, "link": "https://stackoverflow.com/questions/46680064/why-does-cant-leak-private-type-only-apply-to-structs-and-not-enums/46680202#46680202", "title": "Why does &quot;can&#39;t leak private type&quot; only apply to structs and not enums?", "body": "<p>In the first example, the enum <code>List</code> is public.  That means that the enum variant <code>More</code> is also public.  However, <code>More</code> cannot be used by external code because <code>Node</code> <em>isn't</em> public.  Thus, you have a thing that is externally visible, but can't actually be <em>used</em>, which is probably not what you wanted.</p>\n\n<p>In the second example, the struct <code>List</code> is public.  However, the <code>head</code> field is <em>not</em> public.  Thus, it doesn't matter whether <code>Link</code> is public or not, because external code can't see the <code>head</code> field in the first place.</p>\n"}], "owner": {"reputation": 1674, "user_id": 5420686, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/2c318e16c4b5f17dd1375df8cb1425e5?s=128&d=identicon&r=PG&f=1", "display_name": "Jal", "link": "https://stackoverflow.com/users/5420686/jal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2114, "favorite_count": 0, "accepted_answer_id": 46680202, "answer_count": 1, "score": 10, "last_activity_date": 1586914294, "creation_date": 1507697430, "last_edit_date": 1586914055, "question_id": 46680064, "link": "https://stackoverflow.com/questions/46680064/why-does-cant-leak-private-type-only-apply-to-structs-and-not-enums", "title": "Why does &quot;can&#39;t leak private type&quot; only apply to structs and not enums?", "body": "<p>In <a href=\"https://rust-unofficial.github.io/too-many-lists/first-layout.html\" rel=\"nofollow noreferrer\"><em>Learning Rust With Entirely Too Many Linked Lists</em></a>, they show that a <code>pub enum</code> can't hold a private <code>struct</code>:,</p>\n\n<pre><code>struct Node {\n    elem: i32,\n    next: List,\n}\n\npub enum List {\n    Empty,\n    More(Box&lt;Node&gt;),\n}\n</code></pre>\n\n<p>This will cause the compiler to complain:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0446]: private type `Node` in public interface\n --&gt; src/main.rs:8:10\n  |\n8 |     More(Box&lt;Node&gt;),\n  |          ^^^^^^^^^^ can't leak private type\n</code></pre>\n\n<p>But this code will not cause an error even though <code>Link</code> is private:</p>\n\n<pre><code>pub struct List {\n    head: Link,\n}\n\nenum Link {\n    Empty,\n    More(Box&lt;Node&gt;),\n}\n\nstruct Node {\n    elem: i32,\n    next: Link,\n}\n</code></pre>\n\n<p>What is the reason for this discrepancy? Why does a private enum not cause an error while a private struct does?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507666273, "post_id": 46675103, "comment_id": 80298635, "body": "You are inside of a module. Idiomatically, <code>extern crate</code> lines goes at the crate root."}, {"owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507666441, "post_id": 46675103, "comment_id": 80298715, "body": "As a learner of Rust, how can I know what the idiomatic way is? I didn&#39;t see that either in the Rust Book or in Rust By Example. Really frustrating."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507667655, "post_id": 46675103, "comment_id": 80299361, "body": "I don&#39;t think anyone expects you to magically know everything; you learn things the same as the rest of us. <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch07-02-controlling-visibility-with-pub.html\" rel=\"nofollow noreferrer\">The Rust Programming Language</a> has this to say: <i>Also note that even if we\u2019re using an external crate within a submodule of our project, the extern crate should go in our root module (so in src/main.rs or src/lib.rs). Then, in our submodules, we can refer to items from external crates as if the items are top-level modules</i>"}, {"owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507668260, "post_id": 46675103, "comment_id": 80299653, "body": "This link is to the second edition of the book, which does not seem to be the official one yet, right? I&#39;ve learnt many languages before (C++, Java, Prolog, JS, Groovy, Haskell, Ceylon, Kotlin, TypeScript) and only with Rust do I have these infuriating issues with things that should just work and don&#39;t. I will persist because the only alternative I can see, C++, is even worse :) but these really basic things like &quot;use&quot; should just be documented more clearly (the 2nd edition seems to do that, great). Rust is nice, don&#39;t get me wrong, just feeling like stumbling the whole time right now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507670396, "post_id": 46675103, "comment_id": 80300746, "body": "<a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">The book index suggests</a>: <i>The second edition is a complete re-write. It is still under construction, though it is far enough along to learn most of Rust. We suggest reading the second edition and then checking out the first edition later to pick up some of the more esoteric parts of the language.</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507670607, "post_id": 46675103, "comment_id": 80300838, "body": "FWIW, many people have issues with the module system and there have been multiple proposals to change it. I&#39;m in the group that accepts the current system, so I don&#39;t have a great sense of the problems and whether or not any of the proposals improve the issues people have. <i>only with Rust do I have these infuriating issues with things that should just work and don&#39;t</i> \u2014 I doubt this is one of those cases, but the concept of something &quot;should be working but isn&#39;t&quot; is often a great signal that something is fundamentally wrong with our understanding. Rust&#39;s lifetimes are a good example."}], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1507666239, "answer_count": 0, "score": 0, "last_activity_date": 1507666038, "creation_date": 1507666038, "question_id": 46675103, "link": "https://stackoverflow.com/questions/46675103/why-doesnt-the-use-statement-work-in-rust-in-certain-cases", "closed_reason": "Duplicate", "title": "Why doesn&#39;t the use statement work in Rust in certain cases?", "body": "<p>I have been suffering while trying to get Rust's <code>use</code> statements to work.</p>\n\n<p>All I did was copy <a href=\"https://github.com/johannhof/difference.rs/blob/master/examples/github-style.rs\" rel=\"nofollow noreferrer\">some code</a> I found, change it for my needs and be done with it, but for whatever reason, the code I copied doesn't work when added into my test code!</p>\n\n<p>This is the code I want to use:</p>\n\n<pre><code>use difference::{Difference, Changeset};\nlet Changeset { diffs, .. } = Changeset::new(text1, text2, \"\\n\");\n</code></pre>\n\n<p>I added <code>extern crate difference;</code> to the top of this file, and <code>difference = \"0.4\"</code> to my toml file, so I was pretty sure it would work!</p>\n\n<p>But nope... I get this error:</p>\n\n<pre><code> use difference::{Difference, Changeset};\n                  ^^^^^^^^^^ Did you mean `self::difference`?\n</code></pre>\n\n<p>I certainly meant <code>Difference</code> as the original code seemed to work!!</p>\n\n<p>To test this a bit more, I wrote this instead:</p>\n\n<pre><code>println!(\"{:?}\", &amp;difference::Difference::Add(\"hi\".to_string()));\n</code></pre>\n\n<p>And that worked... so I figured I would just <code>use</code> <code>Add</code>:</p>\n\n<pre><code>use difference::Difference::Add;\nprintln!(\"{:?}\", &amp;Add(\"hi\".to_string()));\n</code></pre>\n\n<p>And that did not work at all.</p>\n\n<pre><code> use difference::Difference::Add;\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Did you mean `self::difference::Difference`?\n</code></pre>\n\n<p>That feels like a practical joke... so, now Rust all of a sudden knows about <code>Difference</code>!?!?</p>\n\n<p>What exactly am I doing wrong? How can I just <code>use</code> something confidently and understand it (I've read <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-03-importing-names-with-use.html\" rel=\"nofollow noreferrer\">the book</a>'s relevant part ten times, didn't help)? Why are my assumptions so wrong that this feels like Rust is playing on me and I am on the verge of getting insane?</p>\n"}, {"tags": ["serialization", "rust", "serde"], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1507665275, "answer_count": 0, "score": 1, "last_activity_date": 1538858939, "creation_date": 1507665203, "last_edit_date": 1538858939, "question_id": 46674893, "link": "https://stackoverflow.com/questions/46674893/how-do-i-use-serde-to-deserialize-an-optional-field-from-an-xml-file", "closed_reason": "Duplicate", "title": "How do I use serde to deserialize an optional field from an XML file?", "body": "<p>I'm trying to deserialize XML file which has element containing nested elements like this:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;element&gt;\n  &lt;nested1/&gt;\n  &lt;nested2&gt;\n  ..\n  &lt;nested2&gt;\n&lt;/element&gt;\n</code></pre>\n\n<p>But <code>nested2</code> is not mandatory and is in some cases not present. When this happens, serde throws an error. Is there a way to mark <code>nested2</code> as optional?</p>\n\n<pre><code>#[derive(Deserialize, Debug)]\nstruct Element {\n    nested1: (),\n    #[serde ??]\n    nested2: (),\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1507655999, "post_id": 46672399, "comment_id": 80293261, "body": "I&#39;m pretty sure it&#39;s already been answered but I cannot put my hand on it."}, {"owner": {"reputation": 623, "user_id": 3284063, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/22d05d22bd32fffe1a1a582f6d91ce8a?s=128&d=identicon&r=PG&f=1", "display_name": "user3284063", "link": "https://stackoverflow.com/users/3284063/user3284063"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1507656321, "post_id": 46672399, "comment_id": 80293443, "body": "The question, which you have deleted, would be: what does exactly &quot;T: &#39;a&quot; mean?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507656335, "post_id": 46672399, "comment_id": 80293448, "body": "From the linked duplicate: <i>What <code>T: &#39;a</code> is saying is that any references in <code>T</code> must outlive <code>&#39;a</code>.</i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507656351, "post_id": 46672399, "comment_id": 80293453, "body": "@user3284063 not <i>deleted</i> \u2014 moved the the questions title; where it belongs."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507656467, "post_id": 46672399, "comment_id": 80293523, "body": "And the answer to the implicit question about this particular function is that <i>this specific bound</i> is apparently meaningless."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1507663186, "post_id": 46672399, "comment_id": 80297162, "body": "I disagree with the premise that &quot;a reference [...] must come with minimal required lifetime <i>to be sure that object behind is not destroyed while function is still operating</i>&quot;. References come with lifetimes so the <i>caller</i> can be sure that the called function doesn&#39;t do something that would be illegal <i>for the caller to do</i> (e.g., storing a short-lived reference into a long-lived data structure, as in the first linked duplicate)."}], "owner": {"reputation": 623, "user_id": 3284063, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/22d05d22bd32fffe1a1a582f6d91ce8a?s=128&d=identicon&r=PG&f=1", "display_name": "user3284063", "link": "https://stackoverflow.com/users/3284063/user3284063"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 0, "closed_date": 1507656266, "answer_count": 0, "score": 0, "last_activity_date": 1507656280, "creation_date": 1507655874, "last_edit_date": 1507656119, "question_id": 46672399, "link": "https://stackoverflow.com/questions/46672399/what-does-constraining-a-generic-parameter-by-a-lifetime-t-a-mean", "closed_reason": "Duplicate", "title": "What does constraining a generic parameter by a lifetime (T: &#39;a) mean?", "body": "<p>I understand why a reference passed to a function must come with minimal required lifetime: to be sure that object behind is not destroyed while function is still operating. What puzzles me is the following:</p>\n\n<pre><code>fn a_function&lt;'a, 'b, T&gt;(arg: &amp;'b T)\nwhere\n    T: 'a,\n{\n    // ...\n}\n</code></pre>\n\n<p>The only reference that comes into the function has the lifetime <code>'b</code>.</p>\n"}, {"tags": ["linker", "rust", "anaconda", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507647362, "post_id": 46669678, "comment_id": 80288188, "body": "Settings in <code>Cargo.toml</code> would apply to <i>everyone</i> who would ever want to compile the crate. It does not make sense to me to put something that is so very machine-specific into such a generic location. Rather, it seems like you should adapt your build process to correctly link the libraries you need (or set an rpath, etc.)"}, {"owner": {"reputation": 1082, "user_id": 4256283, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2dc2b4976c7421d83d6f34770bc36046?s=128&d=identicon&r=PG&f=1", "display_name": "Jytug", "link": "https://stackoverflow.com/users/4256283/jytug"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507647882, "post_id": 46669678, "comment_id": 80288576, "body": "How would I go about setting the <code>rpath</code> correctly then? My intention is to find a portable build process"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507648115, "post_id": 46669678, "comment_id": 80288726, "body": "<a href=\"https://stackoverflow.com/q/40602708/155423\">Linking Rust application with a dynamic library not in the runtime linker search path</a> seems relevant. There&#39;s also <a href=\"https://stackoverflow.com/q/37017915/155423\">stackoverflow.com/q/37017915/155423</a>."}, {"owner": {"reputation": 1082, "user_id": 4256283, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2dc2b4976c7421d83d6f34770bc36046?s=128&d=identicon&r=PG&f=1", "display_name": "Jytug", "link": "https://stackoverflow.com/users/4256283/jytug"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507649869, "post_id": 46669678, "comment_id": 80289837, "body": "I have gone through both of those answers. The problem I encountered is that apparently <code>cargo rustc</code> doesn&#39;t support the -C option"}], "owner": {"reputation": 1082, "user_id": 4256283, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2dc2b4976c7421d83d6f34770bc36046?s=128&d=identicon&r=PG&f=1", "display_name": "Jytug", "link": "https://stackoverflow.com/users/4256283/jytug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 609, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1507862755, "creation_date": 1507646822, "last_edit_date": 1507862755, "question_id": 46669678, "link": "https://stackoverflow.com/questions/46669678/telling-cargo-to-look-for-dynamic-libraries-in-conda-prefix-lib", "title": "Telling Cargo to look for dynamic libraries in $CONDA_PREFIX/lib", "body": "<p>I'm working on a project in Rust on MacOS, with some additional C/Fortran dependencies. All my dependencies are installed in my Conda environment. Unfortunately, invoking <code>cargo test</code> yields a runtime failure, because it is unable to find <code>libfortran.3.dylib</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n...\ndyld: Library not loaded: @rpath/libgfortran.3.dylib\n  Referenced from: /Users/user1/my_project/... \n  Reason: image not found\n...\n</code></pre>\n\n<p>Setting <code>LD_LIBRARY_PATH</code> to point to the right place removes this issue:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib cargo test\n...\nrunning 208 tests\ntest test1 .. ok\n...\n</code></pre>\n\n<p>Is there a way to put that information in <code>Cargo.toml</code> so I don't have to explicitly modify the environment?</p>\n"}, {"tags": ["dynamic", "struct", "rust", "field"], "comments": [{"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 1, "creation_date": 1507641161, "post_id": 46667593, "comment_id": 80283734, "body": "It will be caught by the compiler.  Isn&#39;t it also the best case scenario that this is caught pre-execution?"}], "answers": [{"comments": [{"owner": {"reputation": 59217, "user_id": 156695, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3390f053c9414f150c48f700afaa3e7a?s=128&d=identicon&r=PG", "display_name": "Tigran", "link": "https://stackoverflow.com/users/156695/tigran"}, "edited": false, "score": 0, "creation_date": 1507643383, "post_id": 46667636, "comment_id": 80285351, "body": "Even though having <i>dynamic</i> macrosses in the language, where <code>AST</code> is parsed at runtime, will be very useful too (building your own <code>DSL</code> language..etc) . At the end, we have <code>unsafe</code> (you can shoot yourself in the foot) , so I would expect introduction of dynamic artifacts be something in the future of this language."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 59217, "user_id": 156695, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3390f053c9414f150c48f700afaa3e7a?s=128&d=identicon&r=PG", "display_name": "Tigran", "link": "https://stackoverflow.com/users/156695/tigran"}, "edited": false, "score": 1, "creation_date": 1507644182, "post_id": 46667636, "comment_id": 80285930, "body": "@Tigran Macros are not parsed at runtime, they are parsed during compilation just like regular Rust code. Rust is a systems programming language and so I very much doubt dynamic anything (a la Ruby/Javascript/Python) is going to be introduced in the future."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 59217, "user_id": 156695, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3390f053c9414f150c48f700afaa3e7a?s=128&d=identicon&r=PG", "display_name": "Tigran", "link": "https://stackoverflow.com/users/156695/tigran"}, "edited": false, "score": 0, "creation_date": 1507644211, "post_id": 46667636, "comment_id": 80285951, "body": "@Tigran You are probably looking for a parser or a scripting language engine, not a core language feature. Luckily, crates.io has you served on these ends."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1507641506, "last_edit_date": 1507641506, "creation_date": 1507641013, "answer_id": 46667636, "question_id": 46667593, "link": "https://stackoverflow.com/questions/46667593/is-there-a-way-to-catch-unknown-struct-fields/46667636#46667636", "title": "Is there a way to catch unknown struct fields?", "body": "<p>No. Rust is a statically compiled language; everything must be resolved at compile time. Either a field exists or it does not.</p>\n\n<p>Even if the field did conditionally exist, you wouldn't know what type it was so you wouldn't know what methods exist on it. The compiler wouldn't know what size the field is so it couldn't allocate space for the structure to begin with.</p>\n\n<p>It's more likely that you want to use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"noreferrer\"><code>Option</code></a>:</p>\n\n<pre><code>struct Test {\n    unexpected_field: Option&lt;i32&gt;,\n}\n</code></pre>\n\n<p>Or you could switch to a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"noreferrer\"><code>HashMap</code></a>.</p>\n\n<hr>\n\n<p>Editorially, this is a <em>huge</em> reason to have a statically-compiled language and it's a great thing. </p>\n"}], "owner": {"reputation": 247, "user_id": 7434592, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-yqnZP9IHDss/AAAAAAAAAAI/AAAAAAAAAPI/rerXfZvsW0U/photo.jpg?sz=128", "display_name": "\u0410\u043d\u0434\u0440\u0435\u0439 \u041b\u0435\u0434\u043e\u0432\u0441\u043a\u0438\u0445", "link": "https://stackoverflow.com/users/7434592/%d0%90%d0%bd%d0%b4%d1%80%d0%b5%d0%b9-%d0%9b%d0%b5%d0%b4%d0%be%d0%b2%d1%81%d0%ba%d0%b8%d1%85"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1507641506, "creation_date": 1507640906, "last_edit_date": 1507641046, "question_id": 46667593, "link": "https://stackoverflow.com/questions/46667593/is-there-a-way-to-catch-unknown-struct-fields", "title": "Is there a way to catch unknown struct fields?", "body": "<pre><code>struct Test;\n\n// here must be code to overload the standard field resolution methods\n\nfn main() {\n    let t = Test;\n    println!(\"I wanna catch request for unknown struct field {}\", t.unexpected_field)\n}\n</code></pre>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1507641125, "creation_date": 1507641125, "answer_id": 46667666, "question_id": 46667531, "link": "https://stackoverflow.com/questions/46667531/expr-is-followed-by-tt-which-is-not-allowed-for-expr-fragments/46667666#46667666", "title": "`:expr` is followed by `:tt`, which is not allowed for `expr` fragments", "body": "<blockquote>\n  <p>How can I support that grammar or alter the macro?</p>\n</blockquote>\n\n<p>You can't.  There is no workaround.  There is no trick.  The macro system is specifically written to <em>prevent</em> you from doing this.  The problem is that allowing arbitrary tokens after an expression (or a type, among other things) effectively prevents the Rust developers from <em>ever</em> expanding the language grammar whilst retaining backward compatibility.  Thus, it is forbidden.</p>\n\n<p>You can either change the input grammar to have an acceptable terminating token <em>after</em> the expressions (such as <code>,</code> or <code>;</code>), or change to procedural macros (and redefine the macro invocation as a <code>#[derive]</code> attribute on an item).</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 657, "favorite_count": 0, "accepted_answer_id": 46667666, "answer_count": 1, "score": 3, "last_activity_date": 1507641125, "creation_date": 1507640666, "last_edit_date": 1507640838, "question_id": 46667531, "link": "https://stackoverflow.com/questions/46667531/expr-is-followed-by-tt-which-is-not-allowed-for-expr-fragments", "title": "`:expr` is followed by `:tt`, which is not allowed for `expr` fragments", "body": "<p>I am trying to write macro that support a simple grammar like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>boo: 3 and foo: go or bar: 4+2\n</code></pre>\n\n<p>This is what I have tried:</p>\n\n<pre><code>macro_rules! solr {\n    ($TOPIC:ident : $VALUE:expr $($rest:tt)*) =&gt; {\n        println!(\"{} {}\", stringify!($TOPIC), stringify!($VALUE));\n    }\n}\n\nfn main() {\n    solr!(\n        boo: \"hola!\"\n    );\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e30f2841d4f841bb0db25c314c475509&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I'm receiving this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `$VALUE:expr` is followed by `$rest:tt`, which is not allowed for `expr` fragments\n --&gt; src/main.rs:2:35\n  |\n2 |     ($TOPIC:ident : $VALUE:expr $($rest:tt)*) =&gt; {\n  |                                   ^^^^^^^^\n</code></pre>\n\n<p>It makes sense, but I need to be able to accept an expression and pass the rest of the sentence to the macro again to fulfill the given sentence.</p>\n\n<p>How can I support that grammar or alter the macro?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 153, "user_id": 2033960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fe26130904a36e5e3f52133b3c3555?s=128&d=identicon&r=PG", "display_name": "zakm", "link": "https://stackoverflow.com/users/2033960/zakm"}, "edited": false, "score": 0, "creation_date": 1507604330, "post_id": 46657901, "comment_id": 80264764, "body": "Hah, a week of searching and I find nothing. Then minutes after posting this question I find <a href=\"https://gist.github.com/LukasKalbertodt/821ab8b85a25f4c54544cc43bed2c39f\" rel=\"nofollow noreferrer\">this</a> which may answer it. Will report back once I test it out."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1507621051, "post_id": 46657901, "comment_id": 80270564, "body": "In <a href=\"https://github.com/rust-lang/rust/blob/0defa208dcb5a0f3c1ca5bc4df7acf52759ece44/src/librustc_back/target/wasm32_unknown_emscripten.rs\" rel=\"nofollow noreferrer\">this file</a> pretty much everything about Rust&#39;s emscripten target is defined. And <a href=\"https://github.com/rust-lang/rust/blob/b2f67c8d5676d13d83523316ac95a7056dbd19c6/src/librustc_back/target/mod.rs\" rel=\"nofollow noreferrer\">here</a>, the comment says that one can add targets by writing a JSON file (without recompiling rustc!). So you could try that to add a custom target which passes the <code>SIDE_MODULE</code> flag to emcc. I would write a proper answer, but I don&#39;t have time right now. Sorry :&lt;"}], "answers": [{"comments": [{"owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "edited": false, "score": 0, "creation_date": 1507612849, "post_id": 46658944, "comment_id": 80266821, "body": "I&#39;ve just spotted, there&#39;s a toolkit built around this concept <a href=\"https://github.com/dcodeIO/webassembly\" rel=\"nofollow noreferrer\">github.com/dcodeIO/webassembly</a>"}, {"owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512743285, "post_id": 46658944, "comment_id": 82392793, "body": "@Shepmaster fair point - I&#39;ve completely re-written the answer"}], "tags": [], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "is_accepted": true, "score": 6, "last_activity_date": 1512743816, "last_edit_date": 1512743816, "creation_date": 1507611900, "answer_id": 46658944, "question_id": 46657901, "link": "https://stackoverflow.com/questions/46657901/how-do-i-generate-a-minimal-wasm-file-with-rust/46658944#46658944", "title": "How do I generate a minimal wasm file with Rust?", "body": "<p>With the <code>wasm32-unknown-emscripten</code> target, you're using an Emscripten-based compiler toolchain. Emscripten adds quite a bit of additional runtime code into the wasm module, as well as additional JavaScript code for integrating with this at runtime. As you have also observed, Emscripten can compile with a <code>SIDE_MODULE</code> option that removes the vast majority of this runtime code. This reduces the wasm binary size, but means that you must handle things such as binding complex types yourself.</p>\n\n<p>Very recently (Nov, 2017) a new <a href=\"https://www.hellorust.com/news/native-wasm-target.html\" rel=\"nofollow noreferrer\">wasm32-unknown-unknown target was added to Rust</a>, which uses the LLVM backend (rather than Emscripten and its fastcomp fork), resulting in a minimal output.</p>\n\n<p>This target can be used as described in the <a href=\"https://www.hellorust.com/setup/wasm-target/\" rel=\"nofollow noreferrer\">setup guide</a>:</p>\n\n<pre><code>rustup update\nrustup target add wasm32-unknown-unknown --toolchain nightly\nrustc +nightly --target wasm32-unknown-unknown -O hello.rs\n</code></pre>\n"}], "owner": {"reputation": 153, "user_id": 2033960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fe26130904a36e5e3f52133b3c3555?s=128&d=identicon&r=PG", "display_name": "zakm", "link": "https://stackoverflow.com/users/2033960/zakm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1082, "favorite_count": 1, "accepted_answer_id": 46658944, "answer_count": 1, "score": 7, "last_activity_date": 1512743816, "creation_date": 1507603498, "last_edit_date": 1507649527, "question_id": 46657901, "link": "https://stackoverflow.com/questions/46657901/how-do-i-generate-a-minimal-wasm-file-with-rust", "title": "How do I generate a minimal wasm file with Rust?", "body": "<p>I can generate a fairly minimal (203 bytes) wasm file from the following C code by running <code>emcc -O3 -s WASM=1 -s SIDE_MODULE=1 -o sum.wasm sum.c</code>.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;emscripten/emscripten.h&gt;\n\nint EMSCRIPTEN_KEEPALIVE sum(int a, int b) {\n    return a + b;\n}\n</code></pre>\n\n<p>Disassembled output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(module\n (type $0 (func (param i32 i32) (result i32)))\n ... trim 9 lines ...\n (export \"_sum\" (func $0))\n (func $0 (type $0) (param $var$0 i32) (param $var$1 i32) (result i32)\n  (i32.add\n   (get_local $var$1)\n   (get_local $var$0)\n  )   \n )   \n ... trim 17 lines ...\n)\n</code></pre>\n\n<p>But given the following Rust code</p>\n\n<pre><code>pub fn main() {}\n\n#[no_mangle]\npub extern fn sum(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n</code></pre>\n\n<p>I cannot seem to produce anything similar.</p>\n\n<p><code>rustc -O --target=wasm32-unknown-emscripten sum.rs</code> works but gives me an 85k wasm file and a 128k js file.</p>\n\n<p>I've tried exporting <code>EMMAKEN_CFLAGS='-s WASM=1 -s SIDE_MODULE=1'</code> but that gives me a number of warnings like</p>\n\n<blockquote>\n  <p>Input file \"/tmp/.../rust.metadata.bin\" exists but was not an LLVM bitcode file suitable for Emscripten. Perhaps accidentally mixing native built object files with Emscripten?</p>\n</blockquote>\n\n<p>and then fails to link.</p>\n\n<p>My Rust version is <code>1.22.0-nightly (c6884b12d 2017-09-30)</code> and my emcc version is <code>1.37.21</code>.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1507584784, "post_id": 46654791, "comment_id": 80259745, "body": "A common thing is to prefix the function name with some indicator that it&#39;s not public (e.g. <code>__private_hi()</code>) and then mark the function as <code>#[doc(hidden)]</code> so that it doesn&#39;t easily appear. It&#39;s also good practice to use the special <code>$crate</code> variable in the macro."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507593580, "post_id": 46654791, "comment_id": 80262390, "body": "<a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#the-variable-crate\" rel=\"nofollow noreferrer\">I&#39;m not sure why you say that</a>."}, {"owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507619377, "post_id": 46654791, "comment_id": 80269549, "body": "Because it doesn&#39;t work :) <code>^^^^^^^^^^^ not found in </code>$crate``"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 3, "creation_date": 1507629603, "post_id": 46654791, "comment_id": 80275925, "body": "<code>$crate</code> only gives you crate level; you need to append the module &quot;path&quot;. I.e. <code>$crate::macros::hi()</code> (and of course <code>pub mod macro</code> and <code>pub fn hi</code>)"}], "tags": [], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "is_accepted": true, "score": 3, "last_activity_date": 1507656002, "last_edit_date": 1507656002, "creation_date": 1507582393, "answer_id": 46654791, "question_id": 46654790, "link": "https://stackoverflow.com/questions/46654790/how-can-i-use-a-non-public-function-from-within-a-macro/46654791#46654791", "title": "How can I use a non-public function from within a macro?", "body": "<p>The first problem is that in the context of the caller of the macro, the function cannot be visible unless the function is public, thus I'm afraid it's not possible to call non-pub functions from macros.</p>\n\n<p>Another problem is that functions referred to by macros should always use their fully qualified paths (so that they work from any context). Assuming the function <code>hi</code> is made <code>pub</code>, this will work:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! say_hi {\n    () =&gt; {\n        $crate::macros::hi();\n    };\n}\n</code></pre>\n\n<blockquote>\n  <p>Note: use <code>$crate</code> to make sure the macro works when used from any crate, see the <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#the-variable-crate\" rel=\"nofollow noreferrer\">$crate documentation</a> for details.</p>\n</blockquote>\n"}], "owner": {"reputation": 10434, "user_id": 1007991, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a1254dabbec32d7cbc502dfd2fd0438d?s=128&d=identicon&r=PG", "display_name": "Renato", "link": "https://stackoverflow.com/users/1007991/renato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 717, "favorite_count": 1, "accepted_answer_id": 46654791, "answer_count": 1, "score": 4, "last_activity_date": 1507656002, "creation_date": 1507582393, "last_edit_date": 1507584685, "question_id": 46654790, "link": "https://stackoverflow.com/questions/46654790/how-can-i-use-a-non-public-function-from-within-a-macro", "title": "How can I use a non-public function from within a macro?", "body": "<p>I have a macro that is getting too big so I wanted to extract part of the code into a function. When I do that, I have a problem because the function is not in scope when the macro is expanded at the call-site:</p>\n\n<pre><code>#[macro_use]\nmod macros {\n    fn hi() {\n        println!(\"Hello\")\n    }\n\n    #[macro_export]\n    macro_rules! say_hi {\n        () =&gt; {\n            hi();\n        };\n    }\n}\n\nfn main() {\n    say_hi!();\n}\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find function `hi` in this scope\n  --&gt; src/main.rs:10:13\n   |\n10 |             hi();\n   |             ^^ not found in this scope\n...\n16 |     say_hi!();\n   |     ---------- in this macro invocation\n   |\nhelp: possible candidate is found in another module, you can import it into scope\n   |\n15 | fn main() use macros::hi;\n   |\n</code></pre>\n\n<p>I tried making <code>hi</code> public (though I didn't want to) but since it is not imported in the context of the caller, it doesn't work anyway.</p>\n\n<p>How can I solve this problem?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1507581256, "creation_date": 1507581256, "answer_id": 46654536, "question_id": 46653488, "link": "https://stackoverflow.com/questions/46653488/how-do-you-create-a-generic-function-in-rust-with-a-trait-requiring-a-lifetime/46654536#46654536", "title": "How do you create a generic function in Rust with a trait requiring a lifetime?", "body": "<p>You have the <code>'de</code> lifetime in the wrong place -- you need it to specify the argument to <code>Storable</code>, not the lifetime of the reference <code>obj</code>.</p>\n\n<p>Instead of</p>\n\n<pre><code>fn to_json&lt;'de, S: Storable&gt;(obj: &amp;'de S) -&gt; String {\n</code></pre>\n\n<p>use</p>\n\n<pre><code>fn to_json&lt;'de, S: Storable&lt;'de&gt;&gt;(obj: &amp;S) -&gt; String {\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=563c5c0397e22634ef186e903300ad1b&amp;version=undefined\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>The lifetime of <code>obj</code> doesn't actually matter here, because you're not returning any values derived from it. All you need to prove is that <code>S</code> implements <code>Storable&lt;'de&gt;</code> for some lifetime <code>'de</code>.</p>\n\n<p>If you want to eliminate the <code>'de</code> altogether, you should use <code>DeserializeOwned</code>, as <a href=\"https://stackoverflow.com/a/46654539/3650362\">the other answer</a> describes.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1507581899, "last_edit_date": 1507581899, "creation_date": 1507581274, "answer_id": 46654539, "question_id": 46653488, "link": "https://stackoverflow.com/questions/46653488/how-do-you-create-a-generic-function-in-rust-with-a-trait-requiring-a-lifetime/46654539#46654539", "title": "How do you create a generic function in Rust with a trait requiring a lifetime?", "body": "<p>You have defined <code>Storable</code> with a generic parameter, in this case a lifetime. That means that the generic parameter has to be propagated throughout the entire application:</p>\n\n<pre><code>fn put&lt;'de, S: Storable&lt;'de&gt;&gt;(obj: &amp;'de S) -&gt; Result&lt;(), String&gt; { /* ... */ }\n</code></pre>\n\n<p>You can also decide to make the generic specific. That can be done with a concrete type or lifetime (e.g. <code>'static</code>), or by putting it behind a trait object.</p>\n\n<p>Serde also has <a href=\"https://serde.rs/lifetimes.html\" rel=\"nofollow noreferrer\">a comprehensive page about deserializer lifetimes</a>. It mentions that you can choose to use <code>DeserializeOwned</code> as well.</p>\n\n<pre><code>trait Storable: Serialize + DeserializeOwned { /* ... */ }\n</code></pre>\n\n<p>You can use the same concept as <code>DeserializeOwned</code> for your own trait as well:</p>\n\n<pre><code>trait StorableOwned: for&lt;'de&gt; Storable&lt;'de&gt; { }\n\nfn put&lt;'de, S: StorableOwned&gt;(obj: &amp;'de S) -&gt; Result&lt;(), String&gt; {\n</code></pre>\n"}], "owner": {"reputation": 112, "user_id": 4404257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/51a5b1f67723ecf3d39704d89e608295?s=128&d=identicon&r=PG&f=1", "display_name": "Eadword", "link": "https://stackoverflow.com/users/4404257/eadword"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 480, "favorite_count": 1, "accepted_answer_id": 46654539, "answer_count": 2, "score": 4, "last_activity_date": 1507581899, "creation_date": 1507576478, "last_edit_date": 1507581652, "question_id": 46653488, "link": "https://stackoverflow.com/questions/46653488/how-do-you-create-a-generic-function-in-rust-with-a-trait-requiring-a-lifetime", "title": "How do you create a generic function in Rust with a trait requiring a lifetime?", "body": "<p>I am trying to write a trait which works with a database and represents something which can be stored. To do this, the trait inherits from others, which includes the <code>serde::Deserialize</code> trait.</p>\n\n<pre><code>trait Storable&lt;'de&gt;: Serialize + Deserialize&lt;'de&gt; {\n    fn global_id() -&gt; &amp;'static [u8];\n    fn instance_id(&amp;self) -&gt; Vec&lt;u8&gt;;\n}\n\nstruct Example {\n    a: u8,\n    b: u8\n}\n\nimpl&lt;'de&gt; Storable&lt;'de&gt; for Example {\n    fn global_id() -&gt; &amp;'static [u8] { b\"p\" }\n    fn instance_id(&amp;self) -&gt; Vec&lt;u8&gt; { vec![self.a, self.b] }\n}\n</code></pre>\n\n<p>Next, I am trying to write this data using a generic function:</p>\n\n<pre><code>pub fn put&lt;'de, S: Storable&gt;(&amp;mut self, obj: &amp;'de S) -&gt; Result&lt;(), String&gt; {\n    ...\n    let value = bincode::serialize(obj, bincode::Infinite);\n    ...\n    db.put(key, value).map_err(|e| e.to_string())\n}\n</code></pre>\n\n<p>However, I am getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n--&gt; src/database.rs:180:24\n    |\n180 |     pub fn put&lt;'de, S: Storable&gt;(&amp;mut self, obj: &amp;'de S) -&gt; Result&lt;(), String&gt; {\n    |                        ^^^^^^^^ expected lifetime parameter\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=94501043315e9b78718af49a5d3aac91&amp;version=stable\" rel=\"nofollow noreferrer\">Minimal example on the playground.</a></p>\n\n<p>How would I resolve this, possibly avoid it altogether?</p>\n"}, {"tags": ["vector", "rust", "predicate"], "comments": [{"owner": {"reputation": 3017, "user_id": 1546710, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/fe5e016e1bbe4bd9d20d8494453d50d4?s=128&d=identicon&r=PG", "display_name": "aug2uag", "link": "https://stackoverflow.com/users/1546710/aug2uag"}, "edited": false, "score": 0, "creation_date": 1509492206, "post_id": 46651354, "comment_id": 81039208, "body": "have you tried converting the array with to_vec?  <code>let drained: Vec&lt;i32&gt; = v.iter().filter(|e| (*e) % 2 == 0).to_vec().drain(..).collect();</code>"}], "answers": [{"comments": [{"owner": {"reputation": 253, "user_id": 1454178, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/61e7e41c5b5df8ee4d5c533ef997dc6f?s=128&d=identicon&r=PG", "display_name": "dj_bushido", "link": "https://stackoverflow.com/users/1454178/dj-bushido"}, "edited": false, "score": 1, "creation_date": 1538622751, "post_id": 46651758, "comment_id": 92209653, "body": "For future reference: the <a href=\"https://github.com/rust-lang/rfcs/issues/2140\" rel=\"nofollow noreferrer\">RFC</a>, and the <a href=\"https://github.com/rust-lang/rust/issues/43244\" rel=\"nofollow noreferrer\">tracking issue</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 16, "last_activity_date": 1554905838, "last_edit_date": 1554905838, "creation_date": 1507569410, "answer_id": 46651758, "question_id": 46651354, "link": "https://stackoverflow.com/questions/46651354/is-there-a-way-to-drain-parts-of-a-vector-based-on-a-predicate/46651758#46651758", "title": "Is there a way to drain parts of a vector based on a predicate?", "body": "<p>Not in stable Rust 1.33.0. There's an unstable nightly feature called <code>drain_filter</code> that does exactly what you want:</p>\n\n<pre><code>#![feature(drain_filter)]\n\nfn main() {\n    let mut v: Vec&lt;i32&gt; = vec![1, 2, 3, 4, 5, 6];\n\n    let drained: Vec&lt;i32&gt; = v.drain_filter(|&amp;mut e| e % 2 == 0).collect();\n\n    assert_eq!(v, vec![1, 3, 5]);\n    assert_eq!(drained, vec![2, 4, 6]);\n}\n</code></pre>\n\n<p>As a stable workaround, you may be able to use <code>Iterator::partition</code>, but it does not reuse the memory:</p>\n\n<pre><code>fn main() {\n    let v: Vec&lt;i32&gt; = vec![1, 2, 3, 4, 5, 6];\n\n    let (drained, v): (Vec&lt;_&gt;, Vec&lt;_&gt;) = v.into_iter().partition(|&amp;e| e % 2 == 0);\n\n    assert_eq!(v, vec![1, 3, 5]);\n    assert_eq!(drained, vec![2, 4, 6]);\n}\n</code></pre>\n"}], "owner": {"reputation": 4369, "user_id": 3102935, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/22985d9fffff3b76a11b1f2bccbf2f42?s=128&d=identicon&r=PG&f=1", "display_name": "WorldSEnder", "link": "https://stackoverflow.com/users/3102935/worldsender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1941, "favorite_count": 1, "accepted_answer_id": 46651758, "answer_count": 1, "score": 16, "last_activity_date": 1554905838, "creation_date": 1507567841, "last_edit_date": 1507569461, "question_id": 46651354, "link": "https://stackoverflow.com/questions/46651354/is-there-a-way-to-drain-parts-of-a-vector-based-on-a-predicate", "title": "Is there a way to drain parts of a vector based on a predicate?", "body": "<p>I'm trying to remove some elements from a vector, based on a predicate, and collecting the result. Here's a (not working) example with an expected result:</p>\n\n<pre><code>let mut v: Vec&lt;i32&gt; = vec![1, 2, 3, 4, 5, 6];\n\nlet drained: Vec&lt;i32&gt; = v.iter().filter(|e| (*e) % 2 == 0).drain(..).collect();\n\nassert_eq!(v, vec![1, 3, 5]);\nassert_eq!(drained, vec![2, 4, 6]);\n</code></pre>\n\n<p>This results in the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `drain` found for type `std::iter::Filter&lt;std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:4:45: 4:62]&gt;` in the current scope\n --&gt; src/main.rs:4:64\n  |\n4 |     let drained: Vec&lt;i32&gt; = v.iter().filter(|e| (*e) % 2 == 0).drain(..).collect();\n  |                                                                ^^^^^\n</code></pre>\n\n<p>There are several alternatives I looked at, none of them seem to be doing what I want:</p>\n\n<ul>\n<li><p><code>Vec::retain</code> removes the elements from the vector, but doesn't give back ownership of the removed elements.</p></li>\n<li><p><code>v.drain(..).filter(condition).collect()</code> returns the correct value for <code>drained</code> but empties the whole vector.</p></li>\n</ul>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1507887814, "post_id": 46650190, "comment_id": 80399931, "body": "Given the context it might be useful to note that Cargo <i>should</i> be searching <code>%USERPROFILE%\\.cargo</code>, since that&#39;s not necessarily a parent directory.  The Cargo documentation you linked doesn&#39;t appear to touch on where it searches on Windows at all."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1509371014, "post_id": 46650190, "comment_id": 80979807, "body": "@DK. Or I could update the original docs to be clearer about always checking <code>$HOME</code> ^_^."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1509371131, "post_id": 46650190, "comment_id": 80979905, "body": "Except it&#39;s not <i>called</i> <code>$HOME</code> on Windows, it&#39;s called <code>%USERPROFILE%</code> (unless you&#39;re using an environment that <i>fakes</i> a <code>HOME</code> variable, which is not universally true).  Hence why I specifically noted the OS."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1509371276, "post_id": 46650190, "comment_id": 80980037, "body": "@DK. Or <i>you</i> could update the original docs to be clearer that <code>$HOME</code> and <code>%USERPROFILE%</code> are interchangeable here ^_^."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1509370980, "last_edit_date": 1509370980, "creation_date": 1507563544, "answer_id": 46650190, "question_id": 46649992, "link": "https://stackoverflow.com/questions/46649992/where-can-i-find-cargo-config/46650190#46650190", "title": "Where can I find .cargo/config?", "body": "<p>As described in <a href=\"http://doc.crates.io/config.html\" rel=\"noreferrer\">the Cargo documentation</a>, there's no <em>one</em> place for <code>.cargo</code>:</p>\n\n<blockquote>\n  <p>Cargo allows local configuration for a particular project as well as\n  global configuration, like git. Cargo extends this to a hierarchical\n  strategy. If, for example, Cargo were invoked in\n  <code>/projects/foo/bar/baz</code>, then the following configuration files would\n  be probed for and unified in this order:</p>\n  \n  <ul>\n  <li><code>/projects/foo/bar/baz/.cargo/config</code></li>\n  <li><code>/projects/foo/bar/.cargo/config</code></li>\n  <li><code>/projects/foo/.cargo/config</code></li>\n  <li><code>/projects/.cargo/config</code></li>\n  <li><code>/.cargo/config</code></li>\n  <li><code>$HOME/.cargo/config</code></li>\n  </ul>\n</blockquote>\n\n<p>The <a href=\"https://github.com/rust-lang/cargo/blob/0.21.1/src/cargo/util/config.rs#L809-L835\" rel=\"noreferrer\">complete algorithm</a> also searches in your home directory.</p>\n\n<p><strong>You</strong> are supposed to create the directory in whichever place is most appropriate for your needs.</p>\n"}], "owner": {"reputation": 43, "user_id": 5893020, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/V72h6.jpg?s=128&g=1", "display_name": "Eliot Krone", "link": "https://stackoverflow.com/users/5893020/eliot-krone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5564, "favorite_count": 0, "accepted_answer_id": 46650190, "answer_count": 1, "score": 4, "last_activity_date": 1509370980, "creation_date": 1507562924, "last_edit_date": 1507937927, "question_id": 46649992, "link": "https://stackoverflow.com/questions/46649992/where-can-i-find-cargo-config", "title": "Where can I find .cargo/config?", "body": "<p>I don't have this file in <code>c:/user/me/.cargo/</code></p>\n"}, {"tags": ["rust", "stdin", "fs", "readdir"], "comments": [{"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 1, "creation_date": 1507537979, "post_id": 46641279, "comment_id": 80233099, "body": "I think it&#39;s because you have the new line char at the end of user input, try <code>new_directory.trim().to_string()</code>. BTW, rust can&#39;t prevent IO errors at compile time, that why almost all IO related code use results."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 2, "creation_date": 1507539439, "post_id": 46641279, "comment_id": 80234002, "body": "As @Gr&#233;goryOBANOS already said: the line you read contains the new-line character at the end. You can remove it by using <code>str::trim()</code> (as mentioned in the linked answer). I would recommend you to use <code>trim()</code> before checking if the user entered anything (before your <code>== &quot;\\n&quot;</code> test). With <code>trim()</code> you can simple check <code>if new_directory.is_empty()</code> which also works on other platforms with line endings different from <code>&#39;\\n&#39;</code>."}, {"owner": {"reputation": 1647, "user_id": 1313409, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/80fj2.png?s=128&g=1", "display_name": "Sparkmasterflex", "link": "https://stackoverflow.com/users/1313409/sparkmasterflex"}, "reply_to_user": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1507609489, "post_id": 46641279, "comment_id": 80265869, "body": "@Gr&#233;goryOBANOS that was totally it. Thanks!"}], "owner": {"reputation": 1647, "user_id": 1313409, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/80fj2.png?s=128&g=1", "display_name": "Sparkmasterflex", "link": "https://stackoverflow.com/users/1313409/sparkmasterflex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "closed_date": 1507539157, "answer_count": 0, "score": 1, "last_activity_date": 1507539291, "creation_date": 1507535492, "last_edit_date": 1507539291, "question_id": 46641279, "link": "https://stackoverflow.com/questions/46641279/rust-iostdin-to-get-set-directory", "closed_reason": "Duplicate", "title": "Rust io::stdin to get set directory", "body": "<p>I'm new to Rust and have been fighting with this for a while now and I'm sure there's just something about the language that I'm missing. So please excuse me if this obvious.</p>\n\n<p>I'm using the <code>io::stdin().read_line()</code> to get a path/directory inputed from the user and then use that to loop through the files and/or directories in that entered path.</p>\n\n<p>I'm also setting <em>default</em> path for if the user doesn't enter anything. For this I'm using <code>env::current_dir()</code>. When I use this default value <code>fs::read_dir()</code> works fine, but when I try to use the variable set by the user input the system does a panic while running.</p>\n\n<pre><code>let current_directory = env::current_dir().unwrap().display().to_string();\nlet mut new_directory = String::new();\n\nio::stdin().read_line(&amp;mut new_directory)\n    .expect(\"Failed to read line\");\n\nlet dir = if new_directory == \"\\n\" {\n    current_directory\n} else {\n    new_directory\n};\n\nlet paths = fs::read_dir(dir).unwrap();\n\nfor path in paths {\n    println!(\"Name: {}\", path.unwrap().path().display());\n}\n</code></pre>\n\n<p>As I mentioned I get a <code>panic</code> when it hits the <code>fs::read_dir(dir)</code> line while the program is running not during while it's compiling.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: \"No such file or directory\" } }', src/libcore/result.rs:860:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>and just incase it helps, here's with the backtrace:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 2, message: \"No such file or directory\" } }', src/libcore/result.rs:860:4\nstack backtrace:\n  0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\n  1: std::panicking::default_hook::{{closure}}\n  2: std::panicking::default_hook\n  3: std::panicking::rust_panic_with_hook\n  4: std::panicking::begin_panic_new\n  5: std::panicking::begin_panic_fmt\n  6: rust_begin_unwind\n  7: core::panicking::panic_fmt\n  8: core::result::unwrap_failed\n  9: &lt;core::result::Result&lt;T, E&gt;&gt;::unwrap\n  10: quad_videos::main\n  11: __rust_maybe_catch_panic\n  12: std::rt::lang_start\n  13: main\n</code></pre>\n\n<p>Thanks in advance</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "edited": false, "score": 0, "creation_date": 1507475407, "post_id": 46632613, "comment_id": 80214441, "body": "thanks! is rev() zero cost? i mean if i want efficiency?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "edited": false, "score": 0, "creation_date": 1507475648, "post_id": 46632613, "comment_id": 80214521, "body": "Yes, <code>.rev()</code> only exists for types that can be explicitly iterated from either end so it&#39;s efficient."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "edited": false, "score": 0, "creation_date": 1507475650, "post_id": 46632613, "comment_id": 80214523, "body": "@MartinAlgesten, yes, it&#39;s zero-cost. <code>rev()</code> is only implemented for <code>DoubleEndedIterator</code>s"}, {"owner": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "edited": false, "score": 0, "creation_date": 1507476312, "post_id": 46632613, "comment_id": 80214745, "body": "@loganfsmyth if I want to change to <code>type Output = Option&lt;Param&lt;&#39;a&gt;&gt;</code> to get away from that <code>unwrap()</code>?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1507477513, "post_id": 46632613, "comment_id": 80215129, "body": "The <code>Index</code> trait is specifically for returning an item that exists inside of something. Since there is no <code>Option</code> inside your struct, there isn&#39;t anything you could return that would satisfy that requirement. Generally if you want a non-panicing getter, you&#39;d implement it as a normal function like <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.get\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/struct.Vec.html#method.get</a>"}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1507475345, "creation_date": 1507475345, "answer_id": 46632613, "question_id": 46632474, "link": "https://stackoverflow.com/questions/46632474/index-trait-with-str-and-lifetimes/46632613#46632613", "title": "Index trait with &amp;str and lifetimes", "body": "<p>You're taking the reference in the wrong place, you want to take the reference inside your <code>.map</code> function.</p>\n\n<pre><code>self.params.iter()\n    .rposition(|ref p| p.name == index)\n    .map(|pos| &amp;self.params[pos])\n    .unwrap()\n</code></pre>\n\n<p>because you want a reference to the param that is in the <code>Vec</code> itself.</p>\n\n<p>It'd also be easier to do</p>\n\n<pre><code>self.params.iter()\n    .rev()\n    .find(|p| p.name == index)\n    .unwrap()\n</code></pre>\n"}], "owner": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 46632613, "answer_count": 1, "score": 1, "last_activity_date": 1507475789, "creation_date": 1507474610, "last_edit_date": 1507475789, "question_id": 46632474, "link": "https://stackoverflow.com/questions/46632474/index-trait-with-str-and-lifetimes", "title": "Index trait with &amp;str and lifetimes", "body": "<p>I'm trying to implement the <code>Index</code> trait for a struct with lifetimes and struggle. I want an internal vector to be indexable on a <code>&amp;str</code>. I.e. <code>myqstr[\"foo\"]</code>.</p>\n\n<p>Here is what I got:</p>\n\n<pre><code>pub struct QString&lt;'a&gt; {\n    pub params: Vec&lt;Param&lt;'a&gt;&gt;\n}\n\npub struct Param&lt;'a&gt; {\n    pub name: &amp;'a str,\n    pub value: &amp;'a str,\n}\n\nimpl&lt;'a, 'b&gt; ::std::ops::Index&lt;&amp;'b str&gt; for QString&lt;'a&gt; {\n    type Output = Param&lt;'a&gt;;\n    fn index(&amp;self, index: &amp;'b str) -&gt; &amp;Param&lt;'a&gt; {\n        &amp;self.params.iter()\n            .rposition(|ref p| p.name == index)\n            .map(|pos| self.params[pos])\n            .unwrap()\n    }\n}\n</code></pre>\n\n<p>And the error is the classic.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling qstring v0.1.0 (file:///Users/martin/dev/qstring)\nerror[E0597]: borrowed value does not live long enough\n   --&gt; src/lib.rs:113:10\n    |\n113 |           &amp;self.params.iter()\n    |  __________^\n114 | |             .rposition(|ref p| p.name == index)\n115 | |             .map(|pos| self.params[pos])\n116 | |             .unwrap()\n    | |_____________________^ does not live long enough\n117 |       }\n    |       - temporary value only lives until here\n    |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 112:5\n</code></pre>\n\n<p>I understand <code>Index</code> wants me to return a borrowed value of the indexed structure, and I know the lifetime of what I want to return is <code>'a</code>, but is that even possible in this instance?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1507459133, "post_id": 46629769, "comment_id": 80209873, "body": "Hi there! Could you clarify what you are actually asking? If you want to know the best way to translate the Go example and want to get comments on your solutions, you should rather ask on <a href=\"https://codereview.stackexchange.com/\"><code>codereview.SE</code></a>. If you want to ask something about the borrow checker, you should (1.) edit your title to reflect that, and (2.) make sure your question is focused: questions like &quot;what&#39;s the point of the borrow checker anyway?&quot; are usually way too broad for StackOverflow. Thanks!"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1507469837, "post_id": 46629769, "comment_id": 80212758, "body": "&quot;We do some tradeoff of safety for simplicity thanks to the GC.&quot; - how is Go&#39;s GC involved in this example?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1507469846, "post_id": 46629769, "comment_id": 80212760, "body": "<i>a degradation of performance as we need to create those same variables multiple times</i> \u2014 that&#39;s not really how compiled / statically typed languages with optimizing compilers work. Performance can only be decided at the bulk algorithmic level (e.g. <code>O(N)</code> vs <code>O(N^2)</code>) or via measurement. <i>clear them</i> \u2014 I don&#39;t think there&#39;s any such activity here. <i>hold the function in memory</i> \u2014 it&#39;s likely the function is inlined, but the memory difference between the two will be negligible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1507470179, "post_id": 46629769, "comment_id": 80212839, "body": "<i>What is the simple solution to this problem</i> \u2014 I&#39;d probably write it <a href=\"https://play.rust-lang.org/?gist=5d85f0fbdc9dac5cb82366308e7d8ca8&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a>. <i>writing something more massive than a single slice mutating program</i> \u2014 it&#39;s very rare, in practice, that you deliberately want to spread out overlapping mutable access, so Rust helps keep you from losing track of all your mutability."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1507470205, "post_id": 46629769, "comment_id": 80212848, "body": "<i>is this how it is supposed to be done</i> \u2014 yes, one of Rust&#39;s core tenets is that there can only be one thing at a time that is allowed to mutate a value. Amusingly, this is <a href=\"https://books.google.com/books?id=scyH562VXZUC&amp;pg=PA154&amp;lpg=PA154&amp;dq=aliasing+xor+mutability&amp;source=bl&amp;ots=MlsexzncZM&amp;sig=jbS4P41bxqKYSHfcNfEDHsxcS0o&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiy8_bKk-HWAhXKNSYKHb6tAbYQ6AEIRzAG#v=onepage&amp;q=aliasing%20xor%20mutability&amp;f=false\" rel=\"nofollow noreferrer\"><b>even advocated for in a book about programming in Go</b></a> and goes by the same phrase: mutability xor aliasing"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1507561393, "post_id": 46629769, "comment_id": 80248085, "body": "If you&#39;re wondering, you <i>can</i> <a href=\"https://play.rust-lang.org/?gist=4b9a483b2960cbce6c16733846b99fdb&amp;version=stable\" rel=\"nofollow noreferrer\">use internal mutability to write something nearly equivalent to the Go version</a>, but at the cost of (1) verbosity and (2) being non-<code>Sync</code>. (There is no runtime cost for using <code>Cell</code>.)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1507561673, "post_id": 46629769, "comment_id": 80248254, "body": "Also (3) the debug formatting is not right, but in real life you&#39;d probably wrap this in a zero-overhead type with its own <code>Debug</code> impl. Or something like that."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1507563754, "post_id": 46629769, "comment_id": 80249430, "body": "might also be worth mentioning that the aliasing here is due to the two slices being overlapping (which as noted by others is an anti-pattern also in Go). A similar example with non-overlapping slices is easily written in Rust using <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\">split_at_mut</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1507470569, "post_id": 46631772, "comment_id": 80212960, "body": "<i>If you moved those slices to different threads</i> \u2014 FWIW, I&#39;d expect a response around the lines of &quot;but I&#39;m not using multiple threads so this doesn&#39;t matter&quot;, so you might want to prepare a rebuttal if you feel like it."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1507488503, "post_id": 46631772, "comment_id": 80218843, "body": "Pro hint: a trivial <code>memcpy</code> implementation would have serious issues in some cases of aliased memory ranges."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": false, "score": 4, "last_activity_date": 1507471154, "last_edit_date": 1507471154, "creation_date": 1507470315, "answer_id": 46631772, "question_id": 46629769, "link": "https://stackoverflow.com/questions/46629769/is-rusts-borrow-checker-overly-complicating-this-slices-example/46631772#46631772", "title": "Is Rust&#39;s borrow checker overly complicating this slices example?", "body": "<p>The Go example is simply not safe. It performs a mutation on aliased memory. If you moved those slices to different threads you could see data races.</p>\n\n<p>Which means the Go compiler cannot perform <code>noalias</code> based optimizations. On the other hand the borrow checker in Rust ensure that mutable pointers are not aliased.</p>\n\n<blockquote>\n  <p>Rust creates all these safety measures but it either causes a degradation of performance as we need to create those same variables multiple times, clear them, hold the function in memory, etc. </p>\n</blockquote>\n\n<p>Have you actually observed such degradation or compared optimized compiler output?</p>\n"}], "owner": {"reputation": 63, "user_id": 5864275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Za8cU.jpg?s=128&g=1", "display_name": "Iceblaze", "link": "https://stackoverflow.com/users/5864275/iceblaze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1507471154, "creation_date": 1507456258, "last_edit_date": 1507468458, "question_id": 46629769, "link": "https://stackoverflow.com/questions/46629769/is-rusts-borrow-checker-overly-complicating-this-slices-example", "title": "Is Rust&#39;s borrow checker overly complicating this slices example?", "body": "<p>I am currently exploring the wonders of Rust by rewriting exercises from <a href=\"https://tour.golang.org/welcome/1\" rel=\"nofollow noreferrer\" title=\"A Tour of Go\">A Tour of Go</a>.</p>\n\n<p>I understand both Go and Rust have different features, not everything is fully rewritable and I had my share of fighting the borrow checker. However I got to one fairly simple exercise, yet all solutions I come up with seem very... complex.</p>\n\n<p><strong>The Go Example</strong></p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n  names := [4]string{\n    \"John\",\n    \"Paul\",\n    \"George\",\n    \"Ringo\",\n  }\n  fmt.Println(names) // [John Paul George Ringo]\n\n  a := names[0:2]\n  b := names[1:3]\n  fmt.Println(a, b) // [John Paul] [Paul George]\n\n  b[0] = \"XXX\"\n  fmt.Println(a, b) // [John XXX] [XXX George]\n  fmt.Println(names) // [John XXX George Ringo]\n}\n</code></pre>\n\n<p>In Go we just create 2 slices do a mutation through one and we are done. We do some tradeoff of safety for simplicity thanks to the GC.</p>\n\n<p><strong>The Rust Example - #1</strong></p>\n\n<pre><code>fn main() {\n    let mut names = [\"John\", \"Paul\", \"George\", \"Ringo\"];\n    println!(\"{:?}\", names); // [John Paul George Ringo]\n\n    {\n        let a = &amp;names[..2];\n        let b = &amp;names[1..3];\n        println!(\"{:?} {:?}\", a, b); // [John Paul] [Paul George]\n    }\n\n    {\n        // need a separate mutable slice identical to 'b'\n        let tmp = &amp;mut names[1..3];\n        tmp[0] = \"XXX\";\n    }\n\n    {\n        // need to assign same variables just to print them out\n        let a = &amp;names[..2];\n        let b = &amp;names[1..3];\n        println!(\"{:?} {:?}\", a, b); // [John XXX] [XXX George]\n    }\n\n    println!(\"{:?}\", names); // [John XXX George Ringo]\n}\n</code></pre>\n\n<p>This is as close to a one to one rewrite of the previous example as I can get, obviously this is far from optimal due to extra duplicity and overhead involved, so I created a second example.</p>\n\n<p><strong>The Rust Example - #2</strong></p>\n\n<pre><code>fn slice_writer(arr: &amp;[&amp;str]) {\n    let a = &amp;arr[..2];\n    let b = &amp;arr[1..3];\n    println!(\"{:?} {:?}\", a, b);\n}\n\nfn main() {\n    let mut names = [\"John\", \"Paul\", \"George\", \"Ringo\"];\n    println!(\"{:?}\", names);\n\n    slice_writer(&amp;names);\n\n    {\n        // still need to have the duplicity of '[1..3]'\n        let tmp = &amp;mut names[1..3];\n        tmp[0] = \"XXX\";\n    }\n\n    slice_writer(&amp;names);\n\n    println!(\"{:?}\", names);\n}\n</code></pre>\n\n<p>This feels really cumbersome to write; I need to create a separate function just to remove duplicity of assigning the same slices, a problem I shouldn't have in the first place. Rust creates all these safety measures but it either causes a degradation of performance as we need to create those same variables multiple times, clear them, hold the function in memory, etc. or I need to use some esoteric 'unsafe' procedures and what is the point of using the borrow checker then?</p>\n\n<p><strong>Summary</strong></p>\n\n<p>Am I missing something obvious here? What is the simple solution to this problem? Or is this how it is supposed to be done? In that case I can't imagine what it  will be like writing something more massive than a single slice mutating program.</p>\n"}, {"tags": ["vector", "rust", "gtk3", "lifetime"], "comments": [{"owner": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1507424765, "post_id": 46626425, "comment_id": 80203703, "body": "Don&#39;t have time to play with the compiler, but I think at the very least you need to assign lifetime &#39;a to parameter values_vector. Idea is to say the input and result have the same lifetime. It may also be required to assert the lifetime of the elements of values_vector, but I don&#39;t think so. I would also expect there to be lifetime issues when you go to use the result as if the TreeStore is holding references, you&#39;ll have to assert the lifetime on it as well, but I don&#39;t know what TreeStore is doing, etc. In general I&#39;m surprised you would need to do this..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507427402, "post_id": 46626425, "comment_id": 80204070, "body": "You will need to convert your <code>Vec&lt;String&gt;</code> into a <code>Vec&lt;&amp;ToValue&gt;</code>, something <a href=\"https://play.rust-lang.org/?gist=37d1b695aa30966391e1781e151361f3&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a>. See <a href=\"https://stackoverflow.com/q/46624591/155423\">this question which was asked immediately before yours</a> and has the exact same problem, albeit for a different library."}, {"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "reply_to_user": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1507456203, "post_id": 46626425, "comment_id": 80209135, "body": "@ZalmanStern Yes, I am trying to do that, still struggling with &quot;where to put that lifetime declaration?&quot;"}, {"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507461392, "post_id": 46626425, "comment_id": 80210489, "body": "@Shepmaster I do not understand how I can apply your answer to the other question to my case. I&#39;ll add more code to my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507468639, "post_id": 46626425, "comment_id": 80212422, "body": "@Zelphir I don&#39;t understand why you are trying to convert the items twice. <a href=\"https://play.rust-lang.org/?gist=d322872a172344d8dc07f5b330711c1b&amp;version=stable\" rel=\"nofollow noreferrer\">Just do it once</a>."}, {"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507470608, "post_id": 46626425, "comment_id": 80212976, "body": "@Shepmaster That&#39;s it, it works now. For some reason I build up the believe, that I could only translate <code>&amp;str</code> to <code>&amp;ToValue</code> and not <code>String</code>. That&#39;s why I tried it that way. Thanks for your help! If you make this an answer, I&#39;ll accept it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507471154, "post_id": 46626425, "comment_id": 80213142, "body": "<i>If you make this an answer, I&#39;ll accept it</i> \u2014 it&#39;s not possible to answer duplicate questions because they&#39;ve already been answered... by the duplicate. You can pop over to the duplicates and give the authors of those answers upvotes though."}], "owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 156, "favorite_count": 0, "closed_date": 1507427128, "answer_count": 0, "score": 0, "last_activity_date": 1507462781, "creation_date": 1507422608, "last_edit_date": 1507462781, "question_id": 46626425, "link": "https://stackoverflow.com/questions/46626425/how-can-i-convert-a-vecstring-to-a-gtktovalue", "closed_reason": "Duplicate", "title": "How can I convert a Vec&lt;String&gt; to a &amp;[&amp;gtk::ToValue]?", "body": "<p>I've been trying many things from nested loops and sequential duplicated nested loops to this:</p>\n\n<pre><code>pub fn values_to_references&lt;'a&gt;(values_vector: Vec&lt;String&gt;) -&gt; Vec&lt;&amp;'a gtk::ToValue&gt; {\n    values_vector\n        .into_iter()\n        .map(| item: String | &amp;item.to_value() as &amp;ToValue)\n        .collect()\n}\n</code></pre>\n\n<p>But whatever I try, the compiler always tells me that the lifetime of <code>item</code> is too short:</p>\n\n<pre><code>borrowed value must be valid for the lifetime 'a as defined on the body at 87:89...\nborrowed value does not live long enough (does not live long enough)\n</code></pre>\n\n<p>I need to convert to those references in order to add <code>String</code>s to a <code>gtk::TreeModel</code> (<code>gtk::TreeStore</code>), which will balk at anything other than that it seems. All examples I could find use references to static strings, which are known at compile time. That's not very useful. My strings come from a JSON file and cannot be known at compile time.</p>\n\n<p>I want to be able to do the following with the <code>gtk::TreeModel</code>:</p>\n\n<pre><code>model.insert_with_values(\n    None,\n    None,\n    &amp;[0, 1, 2, 3],\n    to_value_items.as_slice());\n</code></pre>\n\n<p>How can I achieve this?</p>\n\n<h1>Example Code</h1>\n\n<p>More code from my attempts to add stuff to a <code>gtk::TreeStore</code> or <code>gtk::TreeModel</code>:</p>\n\n<pre><code>pub fn add_to_tree_store(tree_store: &amp;TreeStore, row: Vec&lt;String&gt;) {\n    tree_store.insert_with_values(\n        None,\n        None,\n        &amp;[0, 1, 2, 3],\n        VocTreeView::strings_to_ampersand_str(row)\n            .iter()\n            .map(|x| x as &amp;ToValue)\n            .collect());\n}\n\npub fn strings_to_ampersand_str&lt;'res_ref&gt;(values_vector: Vec&lt;String&gt;) -&gt; Vec&lt;&amp;'res_ref str&gt; {\n    let append_values: Vec&lt;_&gt; = values_vector.iter().map(|x| &amp;x[..]).collect();\n    append_values\n}\n</code></pre>\n\n<p>This fails at <code>collect()</code>:</p>\n\n<pre><code>a collection of type `&amp;[&amp;gtk::ToValue]` cannot be built from an iterator over elements of type `&amp;gtk::ToValue` [E0277]\n\nthe trait bound `&amp;[&amp;gtk::ToValue]: std::iter::FromIterator&lt;&amp;gtk::ToValue&gt;` is not satisfied (the trait `std::iter::FromIterator&lt;&amp;gtk::ToValue&gt;` is not implemented for `&amp;[&amp;gtk::ToValue]`) [E0277]\n</code></pre>\n\n<p>Seems the same problem is again biting me.</p>\n\n<h1>Example Code 2</h1>\n\n<pre><code>pub fn add_to_tree_store(tree_store: &amp;TreeStore, row: Vec&lt;String&gt;) {\n    tree_store.insert_with_values(\n        None,\n        None,\n        &amp;[0, 1, 2, 3],\n        VocTreeView::values_to_references(&amp;row)\n            .iter()\n            .map(|x| x as &amp;gtk::ToValue)\n            .collect());\n}\n\npub fn values_to_references(values_vector: &amp;[String]) -&gt; Vec&lt;&amp;gtk::ToValue&gt; {\n    values_vector\n        .into_iter()\n        .map(|item| item as &amp;gtk::ToValue)\n        .collect()\n}\n</code></pre>\n\n<p>This runs into an error at <code>x</code> inside map and <code>collect</code> as well:</p>\n\n<p>At <code>x</code>:</p>\n\n<pre><code>required for the cast to the object type `gtk::ToValue` [E0277]\n\nrequired because of the requirements on the impl of `gtk::ToValue` for `&amp;gtk::ToValue` [E0277]\n\nrequired because of the requirements on the impl of `glib::value::SetValue` for `&amp;gtk::ToValue` [E0277]\n\nthe trait bound `gtk::ToValue: glib::value::SetValue` is not satisfied (the trait `glib::value::SetValue` is not implemented for `gtk::ToValue`) [E0277]\n</code></pre>\n\n<p>At <code>collect</code>:</p>\n\n<pre><code>a collection of type `&amp;[&amp;gtk::ToValue]` cannot be built from an iterator over elements of type `&amp;gtk::ToValue` [E0277]\n\nthe trait bound `&amp;[&amp;gtk::ToValue]: std::iter::FromIterator&lt;&amp;gtk::ToValue&gt;` is not satisfied (the trait `std::iter::FromIterator&lt;&amp;gtk::ToValue&gt;` is not implemented for `&amp;[&amp;gtk::ToValue]`) [E0277]\n</code></pre>\n"}, {"tags": ["tcp", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1542919574, "last_edit_date": 1542919574, "creation_date": 1507413738, "answer_id": 46625554, "question_id": 46625376, "link": "https://stackoverflow.com/questions/46625376/the-trait-bound-futuresfuture-is-not-satisfied-when-using-tcpconnectionn/46625554#46625554", "title": "The trait bound `(): futures::Future` is not satisfied when using TcpConnectionNew", "body": "<p>TL;DR: remove the semicolon after <code>io::write_all</code>.</p>\n\n<hr>\n\n<p>Review the definition of <a href=\"https://docs.rs/futures/0.1.16/futures/future/trait.Future.html#method.and_then\" rel=\"noreferrer\"><code>and_then</code></a>:</p>\n\n<pre><code>fn and_then&lt;F, B&gt;(self, f: F) -&gt; AndThen&lt;Self, B, F&gt; \nwhere\n    F: FnOnce(Self::Item) -&gt; B,\n    B: IntoFuture&lt;Error = Self::Error&gt;,\n    Self: Sized, \n</code></pre>\n\n<p>The closure (<code>F</code>) has to return some type (<code>B</code>) that can be converted into a future (<code>B: IntoFuture</code>) with an error type that matches the starting closure (<code>Error = Self::Error</code>).</p>\n\n<p>What does <em>your</em> closure return? <code>()</code>. Why is that? Because you've placed a semicolon (<code>;</code>) at the end of your line. <code>()</code> does not <a href=\"https://docs.rs/futures/0.1.18/futures/future/trait.IntoFuture.html#implementors\" rel=\"noreferrer\">implement the trait <code>IntoFuture</code></a>, which is indicated by the error message part \"on the impl of <code>futures::IntoFuture</code> for <code>()</code>\":</p>\n\n<pre><code>impl&lt;F: Future&gt; IntoFuture for F {\n    type Future = F;\n    type Item = F::Item;\n    type Error = F::Error;\n}\n</code></pre>\n\n<p>Removing the semicolon will cause the <code>Future</code> returned by <code>io::write_all</code> to be returned back to <code>and_then</code> and the program will compile.</p>\n\n<p>In general, futures work by combining together smaller components which are themselves futures. All of this works together to build a single large future which is essentially a state machine. It's good to keep this in mind, as you will almost always need to return a future when using such combinators.</p>\n"}, {"tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 9, "last_activity_date": 1521253518, "last_edit_date": 1521253518, "creation_date": 1521253173, "answer_id": 49331886, "question_id": 46625376, "link": "https://stackoverflow.com/questions/46625376/the-trait-bound-futuresfuture-is-not-satisfied-when-using-tcpconnectionn/49331886#49331886", "title": "The trait bound `(): futures::Future` is not satisfied when using TcpConnectionNew", "body": "<p>Unfortunately the answer here is quite specific, but the question turns up for any kind of search for:</p>\n\n<blockquote>\n  <p>the trait <code>futures::Future</code> is not implemented for <code>()</code></p>\n</blockquote>\n\n<p>A typical scenario for this kind of error is:</p>\n\n<pre><code>foo.then(|stream| {\n    // ... Do random things here\n    final_statement();\n});\n</code></pre>\n\n<p>This causes an error because the majority of the <a href=\"https://docs.rs/futures/0.2.0-alpha/futures/trait.FutureExt.html\" rel=\"noreferrer\">extension functions</a> require the return type to implement <code>IntoFuture</code>. However, <code>()</code> does not implement <code>IntoFuture</code>, and by terminating the block with a <code>;</code> the implicit return type is <code>()</code>.</p>\n\n<p>However, <code>IntoFuture</code> <em>is</em> implemented for <a href=\"https://docs.rs/futures/0.2.0-alpha/futures/trait.IntoFuture.html#foreign-impls\" rel=\"noreferrer\"><code>Option</code> and <code>Result</code></a>.</p>\n\n<p>Rather than just randomly removing semicolons vaguely in the hope this will somehow magically make your code compile, consider:</p>\n\n<p>You should be returning something that can be converted into a <code>Future</code> using <code>IntoFuture</code>.</p>\n\n<p>If you don't have a specific promise that you're returning, consider returning <code>Ok(())</code> to say simply 'this is done' from your callback:</p>\n\n<pre><code>foo.then(|stream| {\n    // ... Do random things here\n    final_statement();\n    return Ok(()); // &lt;-- Result(()) implements `IntoFuture`.\n});\n</code></pre>\n\n<p>Note specifically I terminate this block with an explicit return statement; this is deliberate. This is a typical example of how the ergonomics of 'can omit semicolon to implicitly return object' is tangibly harmful; terminating the block with <code>Ok(());</code> will continue to fail with the same error.</p>\n"}], "owner": {"reputation": 849, "user_id": 5745120, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/7127d653b208611f48e4d73b7b7f8aec?s=128&d=identicon&r=PG", "display_name": "Sergey", "link": "https://stackoverflow.com/users/5745120/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5927, "favorite_count": 2, "accepted_answer_id": 46625554, "answer_count": 2, "score": 10, "last_activity_date": 1542919574, "creation_date": 1507412315, "last_edit_date": 1507412936, "question_id": 46625376, "link": "https://stackoverflow.com/questions/46625376/the-trait-bound-futuresfuture-is-not-satisfied-when-using-tcpconnectionn", "title": "The trait bound `(): futures::Future` is not satisfied when using TcpConnectionNew", "body": "<p>I am trying to write a simple TCP client in Rust using <a href=\"https://tokio.rs/\" rel=\"noreferrer\">Tokio</a> crate. My code is pretty close to <a href=\"https://tokio.rs/docs/getting-started/tls/\" rel=\"noreferrer\">this example</a> minus the TLS:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::Future;\nuse tokio_core::net::TcpStream;\nuse tokio_core::reactor::Core;\nuse tokio_io::io;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let connection = TcpStream::connect(&amp;\"127.0.0.1:8080\".parse().unwrap(), &amp;handle);\n\n    let server = connection.and_then(|stream| {\n        io::write_all(stream, b\"hello\");\n    });\n\n    core.run(server).unwrap();\n}\n</code></pre>\n\n<p>However, compilation fails with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(): futures::Future` is not satisfied\n  --&gt; src/main.rs:16:29\n   |\n16 |     let server = connection.and_then(|stream| {\n   |                             ^^^^^^^^ the trait `futures::Future` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `()`\n\nerror[E0277]: the trait bound `(): futures::Future` is not satisfied\n  --&gt; src/main.rs:20:10\n   |\n20 |     core.run(server).unwrap();\n   |          ^^^ the trait `futures::Future` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `()`\n</code></pre>\n\n<p>I find it strange because according to <a href=\"https://docs.rs/tokio-core/0.1.10/tokio_core/net/struct.TcpStreamNew.html\" rel=\"noreferrer\">the documentation</a> it should be implemented.</p>\n\n<p>I'm using</p>\n\n<ul>\n<li>Rust 1.19.0</li>\n<li>futures 0.1.16</li>\n<li>tokio-core 0.1.10</li>\n<li>tokio-io 0.1.3</li>\n</ul>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 8728914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ac4c4015ba604cfc1c6515a8af58ed5?s=128&d=identicon&r=PG&f=1", "display_name": "Slater Th", "link": "https://stackoverflow.com/users/8728914/slater-th"}, "edited": false, "score": 0, "creation_date": 1507488692, "post_id": 46625932, "comment_id": 80218905, "body": "Thank you for the very detailed answer. This does not work because &quot;std::convert::From&lt;&amp;std::string::String&gt;&quot;  is not implemented for &quot;rusqlite::types::ToSqlOutput&lt;&#39;_&gt;&quot; I have not tried the generic solution, but since its basically the same code it should result in the same error. ( x as &amp;ToSql      is the problem)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 33, "user_id": 8728914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ac4c4015ba604cfc1c6515a8af58ed5?s=128&d=identicon&r=PG&f=1", "display_name": "Slater Th", "link": "https://stackoverflow.com/users/8728914/slater-th"}, "edited": false, "score": 0, "creation_date": 1507492410, "post_id": 46625932, "comment_id": 80219992, "body": "@SlaterTh I don&#39;t know what you mean. Both pieces of code that I have posted compile successfully and I&#39;ve now added links to the entire compilable examples. I&#39;m guessing that one of us has added or removed something without explicitly mentioning it."}, {"owner": {"reputation": 33, "user_id": 8728914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ac4c4015ba604cfc1c6515a8af58ed5?s=128&d=identicon&r=PG&f=1", "display_name": "Slater Th", "link": "https://stackoverflow.com/users/8728914/slater-th"}, "edited": false, "score": 0, "creation_date": 1507496221, "post_id": 46625932, "comment_id": 80221139, "body": "Your code is indeed correct, I used &amp;String inside the vec.... Thank you for your time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1606754748, "last_edit_date": 1606754748, "creation_date": 1507417269, "answer_id": 46625932, "question_id": 46624591, "link": "https://stackoverflow.com/questions/46624591/cannot-call-rusqlites-query-because-it-expects-the-type-rusqlitetypestos/46625932#46625932", "title": "Cannot call rusqlite&#39;s query because it expects the type &amp;[&amp;rusqlite::types::ToSql]", "body": "<p>The compiler message isn't lying to you. You have a <code>&amp;[&amp;String]</code> not a <code>&amp;[&amp;ToSql]</code>. A <em>trait object</em> is a different type and often a different size from the underlying type; both are important considerations when packing values into a vector.</p>\n<p>Another problem is that you cannot create a <code>String</code>, take a reference to it, then store that in a variable. The <code>String</code> would be deallocated immediately, leaving a dangling reference, so the compiler prevents that.</p>\n<p>The easiest thing you can do is to create a new <code>Vec</code> that contains the trait object references:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let vec_values = vec![\n    &quot;test1&quot;.to_string(),\n    &quot;test2&quot;.to_string(),\n    &quot;test3&quot;.to_string(),\n];\n\nlet query_values: Vec&lt;_&gt; = vec_values.iter().map(|x| x as &amp;dyn ToSql).collect();\n\nlet _rows = cached_statement.query(&amp;query_values).unwrap();\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e4a723a91a36aac82b6498bde06ba786\" rel=\"nofollow noreferrer\">complete example</a>)</p>\n<p>Or if you wanted an overly-generic function to perform the conversion:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn do_the_thing&lt;'a, I, T: 'a&gt;(things: I) -&gt; Vec&lt;&amp;'a dyn ToSql&gt;\nwhere\n    I: IntoIterator&lt;Item = &amp;'a T&gt;,\n    T: ToSql,\n{\n    things.into_iter().map(|x| x as &amp;dyn ToSql).collect()\n}\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>let _rows = cached_statement.query(&amp;do_the_thing(&amp;vec_values)).unwrap();\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f6919344afad7aecfd823b095042a653\" rel=\"nofollow noreferrer\">complete example</a>)</p>\n<p>In many cases, you can use the <a href=\"https://docs.rs/rusqlite/0.24.1/rusqlite/macro.params.html\" rel=\"nofollow noreferrer\"><code>params!</code></a> or <a href=\"https://docs.rs/rusqlite/0.24.1/rusqlite/macro.named_params.html\" rel=\"nofollow noreferrer\"><code>named_params!</code></a> macro:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let a = &quot;test1&quot;.to_string();\nlet b = &quot;test2&quot;.to_string();\nlet c = &quot;test3&quot;.to_string();\n\nlet _rows = cached_statement.query(params![a, b, c]).unwrap();\n</code></pre>\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f6919344afad7aecfd823b095042a653\" rel=\"nofollow noreferrer\">complete example</a>)</p>\n"}], "owner": {"reputation": 33, "user_id": 8728914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ac4c4015ba604cfc1c6515a8af58ed5?s=128&d=identicon&r=PG&f=1", "display_name": "Slater Th", "link": "https://stackoverflow.com/users/8728914/slater-th"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 660, "favorite_count": 0, "accepted_answer_id": 46625932, "answer_count": 1, "score": 3, "last_activity_date": 1606754748, "creation_date": 1507406602, "last_edit_date": 1507416632, "question_id": 46624591, "link": "https://stackoverflow.com/questions/46624591/cannot-call-rusqlites-query-because-it-expects-the-type-rusqlitetypestos", "title": "Cannot call rusqlite&#39;s query because it expects the type &amp;[&amp;rusqlite::types::ToSql]", "body": "<p>I want to use a prepared statement with <a href=\"https://github.com/jgallagher/rusqlite\" rel=\"nofollow noreferrer\" title=\"rusqlite\">rusqlite</a>. Rusqlite implements the trait <code>ToSql</code> for <code>String</code>, <code>&amp;str</code> and <a href=\"https://github.com/jgallagher/rusqlite/blob/master/src/types/to_sql.rs\" rel=\"nofollow noreferrer\">a bunch of other types</a>:</p>\n\n<pre><code>extern crate rusqlite;\n\nuse rusqlite::Connection;\n\nfn main() {\n    let mut connection = Connection::open(\"C:\\\\test_db.db\").unwrap();\n\n    let mut cached_statement = connection\n        .prepare_cached(\"SELECT ?, ?, ? FROM test\")\n        .unwrap();\n\n    let vec_values = vec![\n        &amp;\"test1\".to_string(),\n        &amp;\"test2\".to_string(),\n        &amp;\"test3\".to_string(),\n    ];\n\n    let rows = cached_statement.query(vec_values.as_slice()).unwrap();\n}\n</code></pre>\n\n<p>This does not compile with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:18:39\n   |\n18 |     let rows = cached_statement.query(vec_values.as_slice()).unwrap();\n   |                                       ^^^^^^^^^^^^^^^^^^^^^ expected trait rusqlite::types::ToSql, found struct `std::string::String`\n   |\n   = note: expected type `&amp;[&amp;rusqlite::types::ToSql]`\n              found type `&amp;[&amp;std::string::String]`\n</code></pre>\n"}, {"tags": ["rust", "ownership-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507383856, "post_id": 46620790, "comment_id": 80192581, "body": "Moving &quot;stuff&quot; out of a box is easy; <a href=\"https://stackoverflow.com/questions/42264041/how-do-i-get-an-owned-value-out-of-a-box\">you just dereference it</a>. Your case is more complicated because you no longer know how big the value stored inside the box was. This means you get an error: <i>cannot move a value of type Listener: the size of Listener cannot be statically determined</i>."}], "answers": [{"comments": [{"owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 0, "creation_date": 1531117034, "post_id": 46625787, "comment_id": 89457146, "body": "Does this work for trait objects? Like, if I have a <code>let box: Box&lt;Listener&gt;</code>, can I call <code>box.commit();</code>?"}, {"owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 0, "creation_date": 1531117059, "post_id": 46625787, "comment_id": 89457160, "body": "I ask because <code>Self</code> is going to be FooListener, not Listener, correct?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 0, "creation_date": 1531117251, "post_id": 46625787, "comment_id": 89457241, "body": "@Lucretiel Yes, the answer (and likely the question) was written with trait objects in mind."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 14, "last_activity_date": 1507575693, "last_edit_date": 1507575693, "creation_date": 1507415848, "answer_id": 46625787, "question_id": 46620790, "link": "https://stackoverflow.com/questions/46620790/how-to-call-a-method-that-consumes-self-on-a-boxed-trait-object/46625787#46625787", "title": "How to call a method that consumes self on a boxed trait object?", "body": "<p>Applying <code>commit</code> to the boxed object is not allowed because the trait object doesn't know its size (and it's not constant at compile-time). Since you plan to use listeners as boxed objects, what you can do is acknowledge that <code>commit</code> will be invoked on the box and change its signature accordingly:</p>\n\n<pre><code>trait Listener {\n    fn some_action(&amp;mut self);\n    fn commit(self: Box&lt;Self&gt;);\n}\n\nstruct FooListener {}\n\nimpl Listener for FooListener {\n    fn some_action(&amp;mut self) {\n        println!(\"{:?}\", \"Action!!\");\n    }\n\n    fn commit(self: Box&lt;Self&gt;) {\n        println!(\"{:?}\", \"Commit\");\n    }\n}\n</code></pre>\n\n<p>This enables <code>Transaction</code> to compile as you wrote it, because inside the implementation of <code>FooListener</code> the size of <code>Self</code> is well known and it is perfectly possible to move the object out of the box and consume both.</p>\n\n<p>The price of this solution is that <code>Listener::commit</code> now <em>requires</em> a <code>Box</code>. If that is not acceptable, you could declare both <code>commit(self)</code> and <code>commit_boxed(self: Box&lt;Self&gt;)</code> in the trait, requiring all types to implement both, possibly using private functions or macros to avoid code duplication. This is not very elegant, but it would satisfy both the boxed and unboxed use case without loss of performance.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1559665843, "creation_date": 1559665843, "answer_id": 56447952, "question_id": 46620790, "link": "https://stackoverflow.com/questions/46620790/how-to-call-a-method-that-consumes-self-on-a-boxed-trait-object/56447952#56447952", "title": "How to call a method that consumes self on a boxed trait object?", "body": "<p>With the <a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/unsized-locals.html\" rel=\"nofollow noreferrer\"><code>unsized_locals</code></a> feature enabled, the natural code <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=7552ddb6182b779e8c81a9011c2fab78\" rel=\"nofollow noreferrer\">works as-is</a>:</p>\n\n<pre><code>// 1.37.0-nightly 2019-06-03 6ffb8f53ee1cb0903f9d\n#![feature(unsized_locals)]\n\n// ...\n\nimpl Transaction {\n    fn commit(self) {\n        for l in self.listeners {\n            l.commit()\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4369, "user_id": 3102935, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/22985d9fffff3b76a11b1f2bccbf2f42?s=128&d=identicon&r=PG&f=1", "display_name": "WorldSEnder", "link": "https://stackoverflow.com/users/3102935/worldsender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2505, "favorite_count": 3, "accepted_answer_id": 46625787, "answer_count": 2, "score": 11, "last_activity_date": 1559665843, "creation_date": 1507383353, "last_edit_date": 1507383474, "question_id": 46620790, "link": "https://stackoverflow.com/questions/46620790/how-to-call-a-method-that-consumes-self-on-a-boxed-trait-object", "title": "How to call a method that consumes self on a boxed trait object?", "body": "<p>I have the following sketch of an implementation:</p>\n\n<pre><code>trait Listener {\n    fn some_action(&amp;mut self);\n    fn commit(self);\n}\n\nstruct FooListener {}\n\nimpl Listener for FooListener {\n    fn some_action(&amp;mut self) {\n        println!(\"{:?}\", \"Action!!\");\n    }\n\n    fn commit(self) {\n        println!(\"{:?}\", \"Commit\");\n    }\n}\n\nstruct Transaction {\n    listeners: Vec&lt;Box&lt;Listener&gt;&gt;,\n}\n\nimpl Transaction {\n    fn commit(self) {\n        // How would I consume the listeners and call commit() on each of them?\n    }\n}\n\nfn listener() {\n    let transaction = Transaction {\n        listeners: vec![Box::new(FooListener {})],\n    };\n    transaction.commit();\n}\n</code></pre>\n\n<p>I can have <code>Transaction</code>s with listeners on them that will call the listener when something happens on that transaction. Since <code>Listener</code> is a trait, I store a <code>Vec&lt;Box&lt;Listener&gt;&gt;</code>.</p>\n\n<p>I'm having a hard time implementing <code>commit</code> for <code>Transaction</code>. Somehow I have to consume the boxes by calling <code>commit</code> on each of the stored <code>Listener</code>s, but I can't move stuff out of a box as far as I know.</p>\n\n<p>How would I consume my listeners on commit?</p>\n"}, {"tags": ["syntax", "rust", "closures", "traits"], "answers": [{"comments": [{"owner": {"reputation": 6992, "user_id": 495157, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/UFMPn.png?s=128&g=1", "display_name": "JGFMK", "link": "https://stackoverflow.com/users/495157/jgfmk"}, "edited": false, "score": 0, "creation_date": 1597156821, "post_id": 46615691, "comment_id": 112038541, "body": "Hey can this error message be modified to be more in laymans terms? Something akin to you have used <code>()</code> for in a trait when you should have used <code>&lt;&gt;</code>? &#39;parenthetical notation&#39; means diddly to me!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 6992, "user_id": 495157, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/UFMPn.png?s=128&g=1", "display_name": "JGFMK", "link": "https://stackoverflow.com/users/495157/jgfmk"}, "edited": false, "score": 0, "creation_date": 1597668574, "post_id": 46615691, "comment_id": 112199846, "body": "@JGFMK you are encouraged to file issues on the <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">Rust repository</a> for such things."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1507338274, "last_edit_date": 1507338274, "creation_date": 1507337906, "answer_id": 46615691, "question_id": 46615275, "link": "https://stackoverflow.com/questions/46615275/how-can-i-define-a-trait-with-arguments-and-return-types-like-fn/46615691#46615691", "title": "How can I define a trait with arguments and return types like Fn?", "body": "<blockquote>\n  <p>How can I define a trait with arguments and return types like Fn?</p>\n</blockquote>\n\n<p>If you mean the syntax <code>MyTrait(A) -&gt; B</code>, you cannot. Traits with \"arguments\" and \"return types\" are special and are restricted to the <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code> traits. This is hard-coded into the compiler. There's even a specific error message for it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: parenthetical notation is only stable when used with `Fn`-family traits (see issue #29625)\n --&gt; src/main.rs:5:8\n  |\n5 |     A: MyTrait(A) -&gt; B,\n  |        ^^^^^^^^^^^^^^^\n</code></pre>\n\n<hr>\n\n<p>That being said, this syntax desugars into the standard trait syntax. You can see what <code>FnOnce</code> is from the docs:</p>\n\n<pre><code>pub trait FnOnce&lt;Args&gt; {\n    type Output;\n    extern \"rust-call\" fn call_once(self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>The compiler converts <code>Fn(A, B, C) -&gt; Z</code> into <code>Fn&lt;(A, B, C), Output = Z&gt;</code>. <code>Args</code> is a standard trait generic type parameter and <code>Output</code> is a standard associated type. The <code>\"rust-call\"</code> ABI is some internal compiler machinery that makes this a bit more efficient and can be ignored most of the time.</p>\n\n<p>You are completely allowed to create your own traits with generic parameters and associated types. You just are not allowed to use the parenthetical notation.</p>\n"}], "owner": {"reputation": 275, "user_id": 3879857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dd3c808907a3e9b7ffb5abf3d3b9c4?s=128&d=identicon&r=PG&f=1", "display_name": "MaPo", "link": "https://stackoverflow.com/users/3879857/mapo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 46615691, "answer_count": 1, "score": 3, "last_activity_date": 1507338274, "creation_date": 1507333413, "last_edit_date": 1507337850, "question_id": 46615275, "link": "https://stackoverflow.com/questions/46615275/how-can-i-define-a-trait-with-arguments-and-return-types-like-fn", "title": "How can I define a trait with arguments and return types like Fn?", "body": "<p>I'm confused by the following code (<a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">Listing 13-9</a>):</p>\n\n<pre><code>struct Cacher&lt;T&gt;\nwhere\n    T: Fn(i32) -&gt; i32,\n{\n    calculation: T,\n    value: Option&lt;i32&gt;,\n}\n</code></pre>\n\n<p>I understand that <code>Fn</code> is a trait, but usually a trait has no argument and returned type. How can I define a trait like <code>Fn</code>?</p>\n\n<p>I tried to look <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"nofollow noreferrer\">at the definition</a> (actually it's <code>FnOnce</code>, but <code>Fn</code> has <code>FnMut</code> bound and <code>FnMut</code> has <code>FnOnce</code> bound...), but I'm still confused. What is the meaning of that <code>&lt;Args&gt;</code>? Then also <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">something written about it in the Nomicon</a>; but I do not understand it:</p>\n\n<blockquote>\n  <p>Where <code>Fn(a, b, c) -&gt; d</code> is itself just sugar for the unstable <em>real</em> <code>Fn</code> trait</p>\n</blockquote>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1507317815, "post_id": 46612327, "comment_id": 80177294, "body": "Seems like it&#39;d be a lot easier to write your own procedural macro and apply it to your types, so long as you only need the name of structs you control."}], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 7488353, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fBJaZ.png?s=128&g=1", "display_name": "Peter Foxworth", "link": "https://stackoverflow.com/users/7488353/peter-foxworth"}, "edited": false, "score": 0, "creation_date": 1507324972, "post_id": 46613908, "comment_id": 80180363, "body": "Thanks! Btw, can you make it work for enums, too? :)"}, {"owner": {"reputation": 2870, "user_id": 2173453, "user_type": "registered", "accept_rate": 41, "profile_image": "https://i.stack.imgur.com/p92s9.jpg?s=128&g=1", "display_name": "Murali", "link": "https://stackoverflow.com/users/2173453/murali"}, "edited": false, "score": 0, "creation_date": 1535135468, "post_id": 46613908, "comment_id": 90970716, "body": "I update this to work for enums and published it as a crate. <a href=\"https://crates.io/crates/serde_type_name\" rel=\"nofollow noreferrer\">crates.io/crates/serde_type_name</a>"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 4, "last_activity_date": 1507334115, "last_edit_date": 1507334115, "creation_date": 1507323868, "answer_id": 46613908, "question_id": 46612327, "link": "https://stackoverflow.com/questions/46612327/using-serde-to-get-a-types-name-as-string-when-the-type-is-only-serialize/46613908#46613908", "title": "Using serde to get a type&#39;s name as String when the type is only Serialize", "body": "<p>Here is a <code>Serializer</code> that picks out the name of any struct / unit struct / newtype struct / tuple struct.</p>\n\n<hr>\n\n<pre><code>extern crate serde;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse serde::ser::{self, Serialize, Serializer, SerializeStruct, SerializeTupleStruct, Impossible};\nuse std::fmt::{self, Display};\n\nfn type_name&lt;T: Serialize&gt;(t: &amp;T) -&gt; &amp;'static str {\n    #[derive(Debug)]\n    struct NotStruct;\n    type Result&lt;T&gt; = std::result::Result&lt;T, NotStruct&gt;;\n    impl std::error::Error for NotStruct {\n        fn description(&amp;self) -&gt; &amp;str { \"not struct\" }\n    }\n    impl Display for NotStruct {\n        fn fmt(&amp;self, _f: &amp;mut fmt::Formatter) -&gt; fmt::Result { unimplemented!() }\n    }\n    impl ser::Error for NotStruct {\n        fn custom&lt;T: Display&gt;(_msg: T) -&gt; Self { NotStruct }\n    }\n\n    struct TypeName;\n    impl Serializer for TypeName {\n        type Ok = &amp;'static str;\n        type Error = NotStruct;\n        type SerializeSeq = Impossible&lt;Self::Ok, Self::Error&gt;;\n        type SerializeTuple = Impossible&lt;Self::Ok, Self::Error&gt;;\n        type SerializeTupleStruct = Struct;\n        type SerializeTupleVariant = Impossible&lt;Self::Ok, Self::Error&gt;;\n        type SerializeMap = Impossible&lt;Self::Ok, Self::Error&gt;;\n        type SerializeStruct = Struct;\n        type SerializeStructVariant = Impossible&lt;Self::Ok, Self::Error&gt;;\n        fn serialize_bool(self, _v: bool) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_i8(self, _v: i8) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_i16(self, _v: i16) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_i32(self, _v: i32) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_i64(self, _v: i64) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_u8(self, _v: u8) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_u16(self, _v: u16) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_u32(self, _v: u32) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_u64(self, _v: u64) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_f32(self, _v: f32) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_f64(self, _v: f64) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_char(self, _v: char) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_str(self, _v: &amp;str) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_bytes(self, _v: &amp;[u8]) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_none(self) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_some&lt;T: ?Sized + Serialize&gt;(self, _value: &amp;T) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_unit(self) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_unit_struct(self, name: &amp;'static str) -&gt; Result&lt;Self::Ok&gt; {\n            Ok(name)\n        }\n        fn serialize_unit_variant(self, _name: &amp;'static str, _variant_index: u32, _variant: &amp;'static str) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_newtype_struct&lt;T: ?Sized + Serialize&gt;(self, name: &amp;'static str, _value: &amp;T) -&gt; Result&lt;Self::Ok&gt; {\n            Ok(name)\n        }\n        fn serialize_newtype_variant&lt;T: ?Sized + Serialize&gt;(self, _name: &amp;'static str, _variant_index: u32, _variant: &amp;'static str, _value: &amp;T) -&gt; Result&lt;Self::Ok&gt; { Err(NotStruct) }\n        fn serialize_seq(self, _len: Option&lt;usize&gt;) -&gt; Result&lt;Self::SerializeSeq&gt; { Err(NotStruct) }\n        fn serialize_tuple(self, _len: usize) -&gt; Result&lt;Self::SerializeTuple&gt; { Err(NotStruct) }\n        fn serialize_tuple_struct(self, name: &amp;'static str, _len: usize) -&gt; Result&lt;Self::SerializeTupleStruct&gt; {\n            Ok(Struct(name))\n        }\n        fn serialize_tuple_variant(self, _name: &amp;'static str, _variant_index: u32, _variant: &amp;'static str, _len: usize) -&gt; Result&lt;Self::SerializeTupleVariant&gt; { Err(NotStruct) }\n        fn serialize_map(self, _len: Option&lt;usize&gt;) -&gt; Result&lt;Self::SerializeMap&gt; { Err(NotStruct) }\n        fn serialize_struct(self, name: &amp;'static str, _len: usize) -&gt; Result&lt;Self::SerializeStruct&gt; {\n            Ok(Struct(name))\n        }\n        fn serialize_struct_variant(self, _name: &amp;'static str, _variant_index: u32, _variant: &amp;'static str, _len: usize) -&gt; Result&lt;Self::SerializeStructVariant&gt; { Err(NotStruct) }\n    }\n\n    struct Struct(&amp;'static str);\n    impl SerializeStruct for Struct {\n        type Ok = &amp;'static str;\n        type Error = NotStruct;\n        fn serialize_field&lt;T: ?Sized + Serialize&gt;(&amp;mut self, _key: &amp;'static str, _value: &amp;T) -&gt; Result&lt;()&gt; { Ok(()) }\n        fn end(self) -&gt; Result&lt;Self::Ok&gt; {\n            Ok(self.0)\n        }\n    }\n    impl SerializeTupleStruct for Struct {\n        type Ok = &amp;'static str;\n        type Error = NotStruct;\n        fn serialize_field&lt;T: ?Sized + Serialize&gt;(&amp;mut self, _value: &amp;T) -&gt; Result&lt;()&gt; { Ok(()) }\n        fn end(self) -&gt; Result&lt;Self::Ok&gt; {\n            Ok(self.0)\n        }\n    }\n\n    t.serialize(TypeName).unwrap()\n}\n\n#[derive(Serialize)]\nstruct Vec2(f32, f32);\n\nfn main() {\n    println!(\"{}\", type_name(&amp;Vec2(0.0, 0.0)));\n}\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 7488353, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fBJaZ.png?s=128&g=1", "display_name": "Peter Foxworth", "link": "https://stackoverflow.com/users/7488353/peter-foxworth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 893, "favorite_count": 0, "accepted_answer_id": 46613908, "answer_count": 1, "score": 3, "last_activity_date": 1507334115, "creation_date": 1507316545, "last_edit_date": 1507326821, "question_id": 46612327, "link": "https://stackoverflow.com/questions/46612327/using-serde-to-get-a-types-name-as-string-when-the-type-is-only-serialize", "title": "Using serde to get a type&#39;s name as String when the type is only Serialize", "body": "<p>I need a function that returns a type's name, I have this function which works using serde, but now I need an alternative version that doesn't require the type to be <code>Deserialize</code> so that I can use it on structs that have borrowing members. </p>\n\n<p>How can I rewrite this function so that it works when the type is <code>Serialize</code>, but not <code>Deserialize</code>?</p>\n\n<pre><code>#[macro_use]\nextern crate serde;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse serde::de::{self, Deserialize, Deserializer, Visitor};\nuse std::fmt::{self, Display};\n\nfn type_name&lt;'de, D: Deserialize&lt;'de&gt;&gt;() -&gt; &amp;'static str {\n    #[derive(Debug)]\n    struct NoError;\n    impl std::error::Error for NoError {\n        fn description(&amp;self) -&gt; &amp;str {\n            \"no error\"\n        }\n    }\n\n    impl Display for NoError {\n        fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n            write!(f, \"NoError\")\n        }\n    }\n\n    impl de::Error for NoError {\n        fn custom&lt;T: Display&gt;(_msg: T) -&gt; Self {\n            NoError\n        }\n    }\n\n    struct NameDeserializer(Option&lt;&amp;'static str&gt;);\n    impl&lt;'a, 'de&gt; Deserializer&lt;'de&gt; for &amp;'a mut NameDeserializer {\n        type Error = NoError;\n        fn deserialize_any&lt;V&gt;(self, _visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n            where V: Visitor&lt;'de&gt;\n        {\n            Err(NoError)\n        }\n        fn deserialize_unit_struct&lt;V&gt;(self, name: &amp;'static str, _visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n            where V: Visitor&lt;'de&gt;\n        {\n            self.0 = Some(name);\n            Err(NoError)\n        }\n        fn deserialize_newtype_struct&lt;V&gt;(self, name: &amp;'static str, _visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n            where V: Visitor&lt;'de&gt;\n        {\n            self.0 = Some(name);\n            Err(NoError)\n        }\n        fn deserialize_tuple_struct&lt;V&gt;(self, name: &amp;'static str, _len: usize, _visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n            where V: Visitor&lt;'de&gt;\n        {\n            self.0 = Some(name);\n            Err(NoError)\n        }\n        fn deserialize_struct&lt;V&gt;(self, name: &amp;'static str, _fields: &amp;'static [&amp;'static str], _visitor: V) -&gt; Result&lt;V::Value, Self::Error&gt;\n            where V: Visitor&lt;'de&gt;\n        {\n            self.0 = Some(name);\n            Err(NoError)\n        }\n        forward_to_deserialize_any! {\n            bool i8 i16 i32 i64 u8 u16 u32 u64 f32 f64 char str string bytes\n            byte_buf option unit seq tuple map enum identifier ignored_any\n        }\n    }\n\n    let mut deserializer = NameDeserializer(None);\n    let _ = D::deserialize(&amp;mut deserializer);\n    deserializer.0.unwrap()\n}\n\n#[derive(Serialize, Deserialize)]\nstruct Vec2(f32, f32);\n\nfn main() {\n    println!(\"{}\", type_name::&lt;Vec2&gt;());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c328bdb887cd63903374a8103c904c61&amp;version=stable\" rel=\"nofollow noreferrer\">Here is a playground link.</a></p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1507296046, "post_id": 46606559, "comment_id": 80165257, "body": "I think code the OP <i>wanted</i> to post is <a href=\"https://play.rust-lang.org/?gist=39776f2b5554c07a764ebda48939d2dc&amp;version=stable\" rel=\"nofollow noreferrer\">something like this</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1507297036, "post_id": 46606559, "comment_id": 80165884, "body": "Rust standard naming says that your module should be snake_case (<code>btree</code>) and your types should be PascalCase (<code>Node</code>). Your variables should not have trailing underscores (<code>node_</code>). Your lifetime (<code>&lt;&#39;a&gt;</code>) is has zero effect and should be removed."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1507299897, "last_edit_date": 1507299897, "creation_date": 1507299249, "answer_id": 46607795, "question_id": 46606559, "link": "https://stackoverflow.com/questions/46606559/why-does-a-function-that-accepts-a-boxmytype-complain-of-a-value-being-moved-w/46607795#46607795", "title": "Why does a function that accepts a Box&lt;MyType&gt; complain of a value being moved when a function that accepts self works?", "body": "<p>You can only destructure a struct (move non-<code>Copy</code> elements out of it) if you have the struct itself in hand. Having a pointer to the struct on the heap is not sufficient, even if it's an owning pointer (e.g. <code>Box</code>). <a href=\"https://stackoverflow.com/a/46607851/3650362\">Shepmaster's answer</a> describes in more detail why this is the case.</p>\n\n<p>Fortunately, <code>node.left</code> is an <code>Option&lt;_&gt;</code>, so there is an easy fix for this: <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow noreferrer\"><code>Option::take</code></a>. <code>.take()</code> on an <code>Option</code> gives you the internal value (if there is one), but without consuming the <code>Option</code>, putting <code>None</code> in its place. So you can use <code>.take()</code> to swap <code>None</code> in temporarily while calling <code>Node::insert</code>, and then replace it with the return value.</p>\n\n<pre><code>pub mod btree {\n    pub struct Node {\n        pub id: u32,\n        pub red: bool,\n        pub left: Option&lt;Box&lt;Node&gt;&gt;,\n        pub right: Option&lt;Box&lt;Node&gt;&gt;,\n    }\n\n    impl Node {\n        pub fn insert(node: Option&lt;Box&lt;Node&gt;&gt;, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt; {\n            match node {\n                None =&gt; Some(Box::new(Node {\n                    id: id,\n                    red: true,\n                    left: None,\n                    right: None,\n                })),\n                Some(x) =&gt; Node::insert_(x, id),\n            }\n        }\n\n        pub fn insert_(mut node: Box&lt;Node&gt;, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt; {\n            node.left = Node::insert(node.left.take(), id);\n            Some(node)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=7a169721310c45ec5716245158b78764&amp;version=stable\" rel=\"nofollow noreferrer\">Playground.</a></p>\n\n<p>(I have renamed <code>Btree</code> and <code>Node</code> to follow Rust naming conventions and removed the <code>&lt;'a&gt;</code> lifetime.)</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1507299382, "creation_date": 1507299382, "answer_id": 46607851, "question_id": 46606559, "link": "https://stackoverflow.com/questions/46606559/why-does-a-function-that-accepts-a-boxmytype-complain-of-a-value-being-moved-w/46607851#46607851", "title": "Why does a function that accepts a Box&lt;MyType&gt; complain of a value being moved when a function that accepts self works?", "body": "<p><code>Box</code> is very special in Rust; it is well-known to the compiler and certain tricks happen. For example, <a href=\"https://stackoverflow.com/q/42264041/155423\">you can move out of a box by dereferencing it</a>. This is related to that.</p>\n\n<p>When your function accepts <code>self</code>, it's equivalent to saying:</p>\n\n<pre><code>pub fn insert_(node: Node, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt;\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">Rust performs a number of dereference steps automatically</a>, so your <code>Box&lt;Node&gt;</code> is <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html\" rel=\"nofollow noreferrer\">dereferenced</a> to just a <code>Node</code>, and then the function can be called. The expanded form of your original code is thus:</p>\n\n<pre><code>Some(x) =&gt; Node::insert_(*x, id),\n</code></pre>\n\n\n\n<pre><code>pub fn insert_(mut self: Node, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt; { /* ... */ }\n</code></pre>\n\n<p>Because the entire struct has been transferred to the function, it is safe to tear it apart and have invalid struct members. When you do so, the compiler tracks which members are valid and which are not in order to  properly call (or not call) their destructors.</p>\n\n<hr>\n\n<p>In your second form, the entire <code>Box&lt;Node&gt;</code> is passed to the function. When you try to modify a member of the the struct, you are attempting to reach into it and remove ownership of a member. You aren't allowed to take ownership of something that you only have a reference to \u2014\u00a0there's no way to inform the <em>true</em> owner of the reference which pieces are valid and which are not. </p>\n\n<p>In this case, <code>Box</code> <em>isn't special enough</em> for the compiler to deal with this.</p>\n\n<p>You can replicate what the compiler does by explicitly moving out of the <code>Box</code>. You also have to create the new <code>Box</code> when you return it:</p>\n\n<pre><code>Some(x) =&gt; Node::insert_(x, id),\n</code></pre>\n\n\n\n<pre><code>pub fn insert_(node: Box&lt;Node&gt;, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt; {\n    let mut node = *node;\n    node.left = Node::insert(node.left, id);\n    Some(Box::new(node))\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/a/46607795/155423\">trentcl's answer</a> solves the \"maybe invalid maybe not\" problem in a different way. <code>Option::take</code> <a href=\"https://stackoverflow.com/q/27098694/155423\">replaces one valid value with <em>another</em> valid value</a>. If the destructors need to be run for whatever reason, everything will still be safe and well-defined.</p>\n\n<hr>\n\n<p>You can even <a href=\"https://stackoverflow.com/q/25462935/155423\">use <code>Box&lt;...&gt;</code> as the <code>self</code> parameter type</a> \u2014 <code>Box</code> is special!</p>\n\n<pre><code>Some(x) =&gt; x.insert_(id),\n</code></pre>\n\n\n\n<pre><code>pub fn insert_(self: Box&lt;Node&gt;, id: u32) -&gt; Option&lt;Box&lt;Node&gt;&gt; {\n    let mut node = *self;\n    node.left = Node::insert(node.left, id);\n    Some(Box::new(node))\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8604790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e54888a024c4df0c751091603a11189?s=128&d=identicon&r=PG&f=1", "display_name": "CourtneyAccorso", "link": "https://stackoverflow.com/users/8604790/courtneyaccorso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1507299897, "creation_date": 1507295549, "last_edit_date": 1507297892, "question_id": 46606559, "link": "https://stackoverflow.com/questions/46606559/why-does-a-function-that-accepts-a-boxmytype-complain-of-a-value-being-moved-w", "title": "Why does a function that accepts a Box&lt;MyType&gt; complain of a value being moved when a function that accepts self works?", "body": "<p>I have the following code which compiles:</p>\n\n<pre><code>pub mod Btree {\n    pub struct node {\n        pub id: u32,\n        pub red: bool,\n        pub left: Option&lt;Box&lt;node&gt;&gt;,\n        pub right: Option&lt;Box&lt;node&gt;&gt;,\n    }\n\n    impl&lt;'a&gt; node {\n        pub fn insert(mut node_: Option&lt;Box&lt;node&gt;&gt;, id: u32) -&gt; Option&lt;Box&lt;node&gt;&gt; {\n            match node_ {\n                None =&gt; Some(Box::new(node {\n                    id: id,\n                    red: true,\n                    left: None,\n                    right: None,\n                })),\n                Some(x) =&gt; x.insert_(id),\n            }\n        }\n\n        pub fn insert_(mut self, id: u32) -&gt; Option&lt;Box&lt;node&gt;&gt; {\n            self.left = node::insert(self.left, id);\n            Some(Box::new(self))\n        }\n    }\n}\n</code></pre>\n\n<p>When I change <code>insert_()</code> to work with a <code>Box&lt;node&gt;</code> instead:</p>\n\n<pre><code>pub mod Btree {\n    pub struct node {\n        pub id: u32,\n        pub red: bool,\n        pub left: Option&lt;Box&lt;node&gt;&gt;,\n        pub right: Option&lt;Box&lt;node&gt;&gt;,\n    }\n\n    impl&lt;'a&gt; node {\n        pub fn insert(mut node_: Option&lt;Box&lt;node&gt;&gt;, id: u32) -&gt; Option&lt;Box&lt;node&gt;&gt; {\n            match node_ {\n                None =&gt; Some(Box::new(node {\n                    id: id,\n                    red: true,\n                    left: None,\n                    right: None,\n                })),\n                Some(x) =&gt; node::insert_(x, id),\n            }\n        }\n\n        pub fn insert_(mut node_: Box&lt;node&gt;, id: u32) -&gt; Option&lt;Box&lt;node&gt;&gt; {\n            node_.left = node::insert(node_.left, id);\n            Some(node_)\n        }\n    }\n}\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of partially moved value: `node_`\n  --&gt; src/main.rs:23:13\n   |\n23 |             node_.left = node::insert(node_.left, id);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^----------^^^^^\n   |             |                         |\n   |             |                         value moved here\n   |             value used here after move\n   |\n   = note: move occurs because `node_.left` has type `std::option::Option&lt;std::boxed::Box&lt;Btree::node&gt;&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I don't understand what that is. The code is very similar and in both cases there is a move.</p>\n"}, {"tags": ["casting", "rust", "unions"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1507283990, "post_id": 46602853, "comment_id": 80158021, "body": "If this type of dense packing is necessary, then perhaps the better approach is to just store the data as <code>[u8; 6]</code>. Then create accessor functions which read and write to the bit positions. For example: <code>get_protocol</code> and <code>set_protocol</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1507284795, "post_id": 46602853, "comment_id": 80158484, "body": "Do you need a FFI betwen Rust and C that passes bitfields around, or do you just wish to use bitfields within Rust?"}, {"owner": {"reputation": 65, "user_id": 4587872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrytg.jpg?s=128&g=1", "display_name": "Nicolas Rabault", "link": "https://stackoverflow.com/users/4587872/nicolas-rabault"}, "edited": false, "score": 0, "creation_date": 1507285553, "post_id": 46602853, "comment_id": 80158851, "body": "I don&#39;t need/want to use C, I just need to understand the best rust way to do  something similar."}, {"owner": {"reputation": 65, "user_id": 4587872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrytg.jpg?s=128&g=1", "display_name": "Nicolas Rabault", "link": "https://stackoverflow.com/users/4587872/nicolas-rabault"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1507286601, "post_id": 46602853, "comment_id": 80159420, "body": "For bitfield I also try to use <a href=\"https://crates.io/crates/bitfield\" rel=\"nofollow noreferrer\">this bitfield crate</a>, but that just create getter and setter as @PeterHall solution."}], "answers": [{"comments": [{"owner": {"reputation": 65, "user_id": 4587872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrytg.jpg?s=128&g=1", "display_name": "Nicolas Rabault", "link": "https://stackoverflow.com/users/4587872/nicolas-rabault"}, "edited": false, "score": 2, "creation_date": 1507289317, "post_id": 46603277, "comment_id": 80161006, "body": "To keep others values on your set_protocol function you should add some masks <code>self.tab[0] = (self.tab[0] &amp; 0b1111_0000) | (value &amp; 0b0000_1111);</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 65, "user_id": 4587872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrytg.jpg?s=128&g=1", "display_name": "Nicolas Rabault", "link": "https://stackoverflow.com/users/4587872/nicolas-rabault"}, "edited": false, "score": 0, "creation_date": 1507293604, "post_id": 46603277, "comment_id": 80163660, "body": "@NicolasRabault Yes, true!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1507294322, "last_edit_date": 1507294322, "creation_date": 1507284389, "answer_id": 46603277, "question_id": 46602853, "link": "https://stackoverflow.com/questions/46602853/bitfield-and-union-for-low-level-data-structures-and-type-conversion-in-rust/46603277#46603277", "title": "Bitfield and union for low level data structures and type conversion in Rust", "body": "<p>Rust (since quite recently) <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1444-union.md\" rel=\"nofollow noreferrer\">supports C-style unions</a>. However, unions require an <code>unsafe</code> block and are not idiomatic for pure Rust code if you don't have to interact with C unions.</p>\n\n<p>One approach is to model your underlying data just as a <code>[u8; 6]</code> and then provide more friendly accessor functions:</p>\n\n<pre><code>pub struct Header {\n    tab: [u8; 6],\n}\n\nimpl Header {\n    pub fn get_protocol(&amp;self) -&gt; u8 {\n        self.tab[0] &amp; 0b0000_1111\n    }\n\n    pub fn set_protocol(&amp;mut self, value: u8) {\n        self.tab[0] = self.tab[0] &amp; 0b1111_0000 | value &amp; 0b0000_1111;\n    }\n\n    // etc..\n}\n</code></pre>\n\n<p>As you mentioned in one of the question comments, you can keep the code simpler by using the <a href=\"https://crates.io/crates/bitfield\" rel=\"nofollow noreferrer\">bitfield</a> crate.</p>\n\n<p>Another approach could be to define your struct with the individual fields, but convert to <code>[u8; 6]</code>. As you have presented it though, the fields take up more space than the <code>[u8; 6]</code>, so there isn't a convenient conversion (e.g. unsafe <code>std::mem::transmute</code>) without having to shift around the bits for each individual field anyway. So probably the solution above is better.</p>\n\n<p>Regardless of the underlying representation, defining friendly accessors is probably a good idea in this situation. It's a cost-free abstraction, which will let you change your mind about the representation later without having to change how it is used.</p>\n"}], "owner": {"reputation": 65, "user_id": 4587872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lrytg.jpg?s=128&g=1", "display_name": "Nicolas Rabault", "link": "https://stackoverflow.com/users/4587872/nicolas-rabault"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 300, "favorite_count": 0, "accepted_answer_id": 46603277, "answer_count": 1, "score": 4, "last_activity_date": 1507296271, "creation_date": 1507282953, "last_edit_date": 1507296271, "question_id": 46602853, "link": "https://stackoverflow.com/questions/46602853/bitfield-and-union-for-low-level-data-structures-and-type-conversion-in-rust", "title": "Bitfield and union for low level data structures and type conversion in Rust", "body": "<p>I need to manage bitfield data and unions. Here is the code like I think it in C:</p>\n\n<pre><code>typedef struct __attribute__((__packed__)){\n    union {\n        struct __attribute__((__packed__)){\n            unsigned short protocol : 4;\n            unsigned short target : 12;\n            unsigned short target_mode : 4;\n            unsigned short source : 12;\n            unsigned char cmd;\n            unsigned char size;\n        };\n        unsigned char unmap[6]; // Unmapped form.\n    };\n}header_t;\n</code></pre>\n\n<p>I use this union to switch easily from a mapped to an unmapped form. I can write to <code>header_t.protocol</code> or <code>header_t.source</code> and get it back as an <code>u8</code> array using <code>header_t.unmap</code>. This switch uses no time and shares the same memory block.</p>\n\n<p>I tried to do the same thing in Rust but I didn't find a clean way to do it. I succeeded in making it using two structures and a dedicated <code>impl</code> to switch between them:</p>\n\n<pre><code>#[allow(dead_code)]\npub struct Header {\n    protocol:    u8,  // 4 bits used\n    target:      u16, // 12 bits used\n    target_mode: u8,  // 4 bits used\n    source:      u16, // 12 bits used\n    cmd:         u8,  // 8 bits used\n    size:        u8,  // 8 bits used\n}\n\n#[allow(dead_code)]\npub struct UnmapHeader{\n    tab:[u8; 6],\n}\n\nimpl Header {\n    #[allow(dead_code)]\n    pub fn unmap(&amp;self) -&gt; UnmapHeader {\n        let mut unmap_header = UnmapHeader { tab: [0; 6],};\n        unmap_header.tab[0] = (self.protocol &amp; 0b0000_1111) | (self.target &lt;&lt; 4) as u8;\n        unmap_header.tab[1] = (self.target &gt;&gt; 4) as u8;\n        unmap_header.tab[2] = ((self.target_mode as u8) &amp; 0b0000_1111) | (self.source &lt;&lt; 4) as u8;\n        unmap_header.tab[3] = (self.source &gt;&gt; 4) as u8;\n        unmap_header.tab[4] = self.cmd;\n        unmap_header.tab[5] = self.size;\n        unmap_header\n    }\n}\n\nimpl UnmapHeader {\n    #[allow(dead_code)]\n    pub fn map(&amp;self) -&gt; Header {\n        Header{\n        protocol: self.tab[0] &amp; 0b0000_1111,\n        target: ((self.tab[0] &amp; 0b1111_0000) &gt;&gt; 4) as u16 &amp; (self.tab[1] &lt;&lt; 4) as u16,\n        target_mode: self.tab[2] &amp; 0b0000_1111,\n        source: ((self.tab[2] &amp; 0b1111_0000) &gt;&gt; 4) as u16 &amp; (self.tab[3] &lt;&lt; 4) as u16,\n        cmd: self.tab[4],\n        size: self.tab[5],\n        }\n    }\n}\n\n#[test]\nfn switch() {\n    let header = Header {\n        protocol: 0b0000_1000,\n        target: 0b0000_0100_0000_0001,\n        target_mode: 0b0000_0100,\n        source: 0b0000_0100_0000_0001,\n        cmd: 0xAA,\n        size: 10,\n    };\n    let unmap_header = header.unmap();\n    assert_eq!(unmap_header.tab[0], 0b0001_1000);\n    assert_eq!(unmap_header.tab[1], 0b0100_0000);\n    assert_eq!(unmap_header.tab[2], 0b0001_0100);\n    assert_eq!(unmap_header.tab[3], 0b0100_0000);\n    assert_eq!(unmap_header.tab[4], 0xAA);\n    assert_eq!(unmap_header.tab[5], 10);\n}\n</code></pre>\n\n<p>Is there a more idiomatic Rust solution?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1507279483, "post_id": 46601201, "comment_id": 80155257, "body": "You have removed too much. When <a href=\"https://play.rust-lang.org/?gist=2bc4bcfc9a6db28a94c48667e3eddc68&amp;version=stable\" rel=\"nofollow noreferrer\">pasted into the playground</a>, compiling your code doesn&#39;t cause the error message you report. To get it to compile, I just needed to follow the compiler&#39;s instructions and change <code>let bot = self.bots[from_bot]</code> to <code>let bot = &amp;mut self.bots[from_bot]</code>."}], "answers": [{"tags": [], "owner": {"reputation": 702, "user_id": 4874344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ilamz.jpg?s=128&g=1", "display_name": "Voreny", "link": "https://stackoverflow.com/users/4874344/voreny"}, "is_accepted": false, "score": 1, "last_activity_date": 1507279840, "creation_date": 1507279840, "answer_id": 46601895, "question_id": 46601201, "link": "https://stackoverflow.com/questions/46601201/rust-the-type-of-this-value-must-be-known-in-this-context/46601895#46601895", "title": "Rust the type of this value must be known in this context", "body": "<p>I managed to fix it thanks to <a href=\"https://stackoverflow.com/users/1600898/user4815162342\">user4815162342</a>'s comment.</p>\n\n<p>I removed too much. In my code I previously had:</p>\n\n<pre><code>for capture in move_chips_regex.captures_iter(input) {\n    let from_bot = capture[1].parse().unwrap();\n</code></pre>\n\n<p>where <code>move_chips_regex</code> was a regular expression.</p>\n\n<p>The fix was annotating <code>from_bot</code> as <code>usize</code>, like so:</p>\n\n<pre><code>let from_bot: usize = capture[1].parse().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 702, "user_id": 4874344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ilamz.jpg?s=128&g=1", "display_name": "Voreny", "link": "https://stackoverflow.com/users/4874344/voreny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 316, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1507295457, "creation_date": 1507277446, "last_edit_date": 1507295457, "question_id": 46601201, "link": "https://stackoverflow.com/questions/46601201/rust-the-type-of-this-value-must-be-known-in-this-context", "title": "Rust the type of this value must be known in this context", "body": "<p>I'm having a problem fixing the following error in Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0619]: the type of this value must be known in this context\n  --&gt; src\\factory\\mod.rs:35:7\n   |\n35 |       bot.add_new_instruction(transfer_instruction);\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><strong>factory/mod.rs</strong>:</p>\n\n<pre><code>mod bot;\nuse self::bot::*;\n\npub struct Factory {\n    bots: Vec&lt;Bot&gt;,\n}\n\nimpl Factory {\n    pub fn new() -&gt; Factory {\n        Factory { bots: Vec::new() }\n    }\n\n    pub fn interpret_instruction(&amp;mut self) {\n        let low_chip_transfer_target = ChipTransferTarget::Bot(5);\n        let high_chip_transfer_target = ChipTransferTarget::Bot(1);\n        let from_bot = 2;\n\n        let transfer_instruction =\n            ChipTransferInstruction::new(low_chip_transfer_target, high_chip_transfer_target);\n        let bot = self.bots[from_bot];\n\n        // Erroneous line below\n        bot.add_new_instruction(transfer_instruction);\n    }\n}\n</code></pre>\n\n<p><strong>factory/bot.rs</strong>:</p>\n\n<pre><code>#[derive(Debug)]\npub enum ChipTransferTarget {\n    Output(usize),\n    Bot(usize),\n}\n\n#[derive(Debug)]\npub struct ChipTransferInstruction {\n    pub low_value_target: ChipTransferTarget,\n    pub high_value_target: ChipTransferTarget,\n}\n\nimpl ChipTransferInstruction {\n    pub fn new(\n        low_value_target: ChipTransferTarget,\n        high_value_target: ChipTransferTarget,\n    ) -&gt; ChipTransferInstruction {\n        ChipTransferInstruction {\n            low_value_target,\n            high_value_target,\n        }\n    }\n}\n\npub struct Bot {\n    id: usize,\n    transfer_instructions: Vec&lt;ChipTransferInstruction&gt;,\n}\n\nimpl Bot {\n    pub fn new(id: usize) -&gt; Bot {\n        Bot {\n            id,\n            transfer_instructions: Vec::new(),\n        }\n    }\n\n    pub fn add_new_instruction(&amp;mut self, instruction: ChipTransferInstruction) {\n        self.transfer_instructions.push(instruction);\n    }\n}\n</code></pre>\n\n<p>I've removed the code that is irrelevant to this error, as there is more logic.</p>\n\n<p>I have tried annotating <code>bot</code> and <code>transfer_instruction</code> in the <code>interpret_instruction</code> method, but I still get the same error and I'm not sure that is wrong.</p>\n\n<p>I've researched this error message and most of the problems are regarding vectors and streams that are not annotated, but from what I can tell the compiler is able to infer the type of every variable here.</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1507274407, "post_id": 46597528, "comment_id": 80152484, "body": "Hi! Your post had two minor questions: 1. your example was not minimal and 2. your asked two different questions. I tried to fix both issues by editing your post to avoid you being downvoted (your actual question is really good). If you think I changed too much or you disagree with the edit for another reason, just roll it back!"}], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1507280091, "post_id": 46600337, "comment_id": 80155655, "body": "Also. <code>for i in v { ... }</code> desugars to <code>let mut iter = v.into_iter(); while let Some(i) = iter.next { ... }</code>. <code>into_iter</code> consumes <code>v</code>, <code>(&amp;mut *v).into_iter()</code> consumes freshly created reference."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1507274421, "creation_date": 1507274421, "answer_id": 46600337, "question_id": 46597528, "link": "https://stackoverflow.com/questions/46597528/move-error-in-for-loop-when-not-reborrowing-a-mutable-slice/46600337#46600337", "title": "Move error in for-loop when not reborrowing a mutable slice", "body": "<p><code>&amp;mut *v</code> is doing a so-called \"reborrow\".</p>\n\n<p>This means that instead of iterating over the original reference, you are iterating over a new reference.</p>\n\n<p>Think about it this way:</p>\n\n<hr>\n\n<p>If you have an <em>owned</em> vector, and you iterate over it, then you get the same error if you try iterating over it again, because it has been moved into the for loop.</p>\n\n<p>If instead you borrow the vector and iterate over the borrow, then you can do that as many times as you want.</p>\n\n<hr>\n\n<p>If you have a mutable borrow, and you iterate over it, then you are moving the mutable borrow into the for loop. So it's gone now.</p>\n\n<p>If instead you create a new reference pointing into the mutable borrow, you are just moving out of the new reference. Once the iteration finishes, the new mutable borrow is gone, meaning that the original mutable borrow can be accessed again.</p>\n"}], "owner": {"reputation": 43, "user_id": 8729691, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/307a16f2df8c1a7d05689b7f3d156e9c?s=128&d=identicon&r=PG&f=1", "display_name": "K.Cho", "link": "https://stackoverflow.com/users/8729691/k-cho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 708, "favorite_count": 0, "accepted_answer_id": 46600337, "answer_count": 1, "score": 4, "last_activity_date": 1507295240, "creation_date": 1507258020, "last_edit_date": 1507295240, "question_id": 46597528, "link": "https://stackoverflow.com/questions/46597528/move-error-in-for-loop-when-not-reborrowing-a-mutable-slice", "title": "Move error in for-loop when not reborrowing a mutable slice", "body": "<p>I'm trying to pass a mutable slice to a function and use it in several loops inside it.</p>\n\n<p><code>function1</code> produces an error. Changing to <code>function2</code> or <code>function3</code> makes the errors disappear, but I don't understand the differences between <code>function1</code> and <code>function2</code>. <code>v</code> and <code>&amp;mut *v</code> seem similar to me.</p>\n\n<p>Why doesn't <code>function1</code> work while the others do?</p>\n\n<pre><code>fn main() {\n    let mut v = Vec::new();\n\n    function1(&amp;mut v);\n    function2(&amp;mut v);\n    function3(&amp;mut v);\n}\n\n// Move Error \nfn function1(v: &amp;mut [i32]) {\n    for l in v {}\n    for l in v {} // &lt;-- Error Here !!!\n}\n\n// Works Fine\nfn function2(v: &amp;mut [i32]) {\n    for l in &amp;mut *v {}\n    for l in &amp;mut *v {}\n}\n\n// Works Fine\nfn function3(v: &amp;mut [i32]) {\n    for l in v.iter_mut() {}\n    for l in v.iter_mut() {}\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `v`\n  --&gt; src/main.rs:12:14\n   |\n11 |     for l in v {}\n   |              - value moved here\n12 |     for l in v {} // &lt;-- Error Here !!!\n   |              ^ value used here after move\n   |\n   = note: move occurs because `v` has type `&amp;mut [i32]`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1507253606, "creation_date": 1507253606, "answer_id": 46597036, "question_id": 46596461, "link": "https://stackoverflow.com/questions/46596461/provide-default-trait-implementation-based-on-trait-type-parameter/46597036#46597036", "title": "Provide default trait implementation based on trait type parameter", "body": "<p>You can have a <em>blanket implementation</em> of the trait for any type that implements <code>From&lt;Vec&lt;u8&gt;&gt;</code> instead:</p>\n\n<pre><code>use std::io::{self, Read};\nuse std::fs::File;\n\npub trait Asset&lt;D&gt; {\n    fn load_data(path: &amp;str) -&gt; io::Result&lt;D&gt;;\n\n    // many more methods...\n}\n\nimpl&lt;D&gt; Asset&lt;D&gt; for D\nwhere\n    D: From&lt;Vec&lt;u8&gt;&gt;,\n{\n    fn load_data(path: &amp;str) -&gt; io::Result&lt;D&gt; {\n        let file = File::open(path)?;\n        let bytes_result: io::Result&lt;Vec&lt;u8&gt;&gt; = file.bytes().collect();\n\n        Ok(D::from(bytes_result?))\n    }\n}\n\nstruct Other;\n\nimpl Asset&lt;Other&gt; for Other {\n    fn load_data(_path: &amp;str) -&gt; io::Result&lt;Other&gt; {\n        unimplemented!()\n    }\n}\n\nimpl Asset&lt;f64&gt; for Other {\n    fn load_data(_path: &amp;str) -&gt; io::Result&lt;f64&gt; {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>You probably want to use <code>Into</code> instead of <code>From</code> (it's the opposite logic as <a href=\"https://stackoverflow.com/questions/29812530/when-should-i-implement-stdconvertfrom-vs-stdconvertinto\">When should I implement std::convert::From vs std::convert::Into?</a>)</p>\n"}], "owner": {"reputation": 145, "user_id": 4983930, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/e2d50ab284fecc7f6b2ba41bb6a522ec?s=128&d=identicon&r=PG&f=1", "display_name": "rytone", "link": "https://stackoverflow.com/users/4983930/rytone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1507253606, "creation_date": 1507248258, "last_edit_date": 1507253237, "question_id": 46596461, "link": "https://stackoverflow.com/questions/46596461/provide-default-trait-implementation-based-on-trait-type-parameter", "title": "Provide default trait implementation based on trait type parameter", "body": "<p>Given this trait:</p>\n\n<pre><code>use std::io::{self, Read};\nuse std::fs::File;\n\npub trait Asset&lt;D&gt; {\n    fn load_data(path: &amp;str) -&gt; io::Result&lt;D&gt;\n    where\n        D: From&lt;Vec&lt;u8&gt;&gt;\n    {\n        let file = File::open(path)?;\n        let bytes_result: io::Result&lt;Vec&lt;u8&gt;&gt; = file.bytes().collect();\n\n        Ok(D::from(bytes_result?))\n    }\n\n    // many more methods...\n}\n</code></pre>\n\n<p>the <code>load_data</code> method is only available when <code>D</code> implements <code>From&lt;Vec&lt;u8&gt;&gt;</code>, which makes sense. However, I would like every type implementing <code>Asset&lt;D&gt;</code> to have <code>load_data</code>, where if <code>D</code> implements <code>From&lt;Vec&lt;u8&gt;&gt;</code>, then it uses the default implementation. Otherwise, the type would have to implement <code>load_data</code> itself.</p>\n"}, {"tags": ["xml", "rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "edited": false, "score": 2, "creation_date": 1507208515, "post_id": 46585888, "comment_id": 80125484, "body": "This is a correct and very well elaborated answer. Note I tried #[serde(default)], but only on the first struct :/  Thank you!"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 7, "last_activity_date": 1507207865, "last_edit_date": 1507207865, "creation_date": 1507207270, "answer_id": 46585888, "question_id": 46585332, "link": "https://stackoverflow.com/questions/46585332/failed-to-parse-xml-with-an-optional-element-with-serde-xml-rs/46585888#46585888", "title": "Failed to parse XML with an optional element with serde-xml-rs", "body": "<p>It would appear <code>Option&lt;T&gt;</code> means that the item <em>does exist</em>, it just is void of content.</p>\n\n<p><a href=\"https://serde.rs/field-attrs.html#serdedefault\" rel=\"noreferrer\">The documentation seems to suggest using</a> the <code>default</code> attribute, to tell the deserializer to use the implementation of the <a href=\"https://doc.rust-lang.org/std/default/trait.Default.html\" rel=\"noreferrer\"><code>Default</code> trait</a> for the type <em>if it cannot be found</em>.</p>\n\n<p>With that in mind, perhaps this would work for you:</p>\n\n<pre><code>#[derive(Serialize,Deserialize, Debug)]\nstruct A {  \n    #[serde(rename = \"bmsg\")]\n    messages: B,\n}\n\n#[derive(Serialize,Deserialize, Debug)]\nstruct B {  // bmsg\n    #[serde(rename = \"cmsg\", default)] // &lt;----- use default to call `Default::default()` against this vector\n    list: Vec&lt;C&gt;,\n}\n</code></pre>\n\n<p>You can find <a href=\"http://play.integer32.com/?gist=3780a988aa21c7a6525bea438af0f2fd&amp;version=stable\" rel=\"noreferrer\">the code I used to check this in the Playground</a>. It won't run in the Playground, but it produces your expected results running locally.</p>\n"}], "owner": {"reputation": 447, "user_id": 2816391, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4a81809defa9e2b3b0b1e0540b699616?s=128&d=identicon&r=PG&f=1", "display_name": "user103185", "link": "https://stackoverflow.com/users/2816391/user103185"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 649, "favorite_count": 0, "accepted_answer_id": 46585888, "answer_count": 1, "score": 6, "last_activity_date": 1507665482, "creation_date": 1507205515, "last_edit_date": 1507665482, "question_id": 46585332, "link": "https://stackoverflow.com/questions/46585332/failed-to-parse-xml-with-an-optional-element-with-serde-xml-rs", "title": "Failed to parse XML with an optional element with serde-xml-rs", "body": "<p>I have a tree of serde-annotated structs and it succeeds in parsing the sample XML, including this fragment:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;bmsg&gt;\n    &lt;cmsg&gt;\n         &lt;!-- ... --&gt;\n    &lt;cmsg&gt;\n&lt;bmsg&gt;\n</code></pre>\n\n<p>Now I am testing with a large sample XML file and the following structs fail because sometimes <code>&lt;cmsg&gt;..&lt;/cmsg&gt;</code> is missing. I was deserializing this using:</p>\n\n<pre><code>#[derive(Serialize,Deserialize, Debug)]\nstruct A {  \n    #[serde(rename=\"bmsg\")]\n    messages: B,                 // &lt;====\n}\n\n#[derive(Serialize,Deserialize, Debug)]\nstruct B {  // bmsg\n    #[serde(rename=\"cmsg\")]\n    list: Vec&lt;C&gt;,\n}\n</code></pre>\n\n<p>Which resulted in an error in the second struct:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>panicked at 'called `Result::unwrap()` on an `Err` value: missing field `cmsg`\n</code></pre>\n\n<p>I changed the first struct to have a <code>Vec&lt;&gt;</code> so it can deal with an optional element:</p>\n\n<pre><code>#[derive(Serialize,Deserialize, Debug)]\nstruct A {  \n    #[serde(rename=\"bmsg\")]\n    messages: Vec&lt;B&gt;,            // &lt;====\n}\n\n#[derive(Serialize,Deserialize, Debug)]\nstruct B {  // bmsg\n    #[serde(rename=\"cmsg\")]\n    list: Vec&lt;C&gt;,\n}\n</code></pre>\n\n<p>But serde continues to give the same error. I tried <code>Option&lt;&gt;</code> too, but didn't get anywhere. </p>\n\n<p>What baffles me the most is that I use <code>Vec&lt;&gt;</code> all over the place and never ran into this problem. </p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1507210372, "post_id": 46584818, "comment_id": 80126946, "body": "It&#39;s the closure that should live as long as <code>issues</code> and <code>self</code>, not the other way around."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1507211049, "post_id": 46584818, "comment_id": 80127504, "body": "Lifetime annotations don&#39;t change actual lifetimes. Adding <code>move</code> will prevent you from having a reference to deallocated vector, that&#39;s all. Not adding <code>move</code> will not allow a program to compile, because closure captures reference to the function parameter <code>self</code>, which exist only inside a function."}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1507211722, "post_id": 46584818, "comment_id": 80128048, "body": "why move <code>i</code> which comes from <code>issues</code> if the problem is with <code>self</code>?"}, {"owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 0, "creation_date": 1507211775, "post_id": 46584818, "comment_id": 80128090, "body": "besided have you tried that? Is will result in another error."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "edited": false, "score": 2, "creation_date": 1507216620, "post_id": 46584818, "comment_id": 80131558, "body": "<code>i</code> is a closure parameter, it isn&#39;t affected by <code>move</code>. Another error (cannot move out of borrowed content) isn&#39;t directly related to your question. <code>into_iter()</code> tries to consume <code>*issues</code>, but it cannot move out of borrowed content. Replace <code>&amp;I</code> with <code>I</code> to get rid of it."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 1, "last_activity_date": 1507203931, "creation_date": 1507203931, "answer_id": 46584818, "question_id": 46582039, "link": "https://stackoverflow.com/questions/46582039/how-to-define-lifetimes-properly-in-closure/46584818#46584818", "title": "How to define lifetimes properly in closure", "body": "<p>Add <code>move</code> to the closure. <code>self</code> has type <code>&amp;Vec&lt;VolumeRanged&gt;</code>, so closure will not take ownership of the vector, it will capture the reference to the vector.</p>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1507203931, "creation_date": 1507195301, "last_edit_date": 1507195478, "question_id": 46582039, "link": "https://stackoverflow.com/questions/46582039/how-to-define-lifetimes-properly-in-closure", "title": "How to define lifetimes properly in closure", "body": "<pre><code>impl Rate for Vec&lt;VolumeRanged&gt; {\n    fn costs&lt;'a, I&gt;(&amp;'a self, issues: &amp;I, period: u32) -&gt; Box&lt;'a + Iterator&lt;Item = f32&gt;&gt;\n    where\n        I: IntoIterator&lt;Item=f32&gt;,\n        I::IntoIter: 'a\n    {\n        fn issue_cost(issue: f32, percentage: f32, constant: f32, max: f32) -&gt; f32 {\n            let r = issue * percentage / 100.0 + constant;\n            match r.partial_cmp(&amp;max) {\n                Some(Less) =&gt; r,\n                _ =&gt; max\n            }\n        }\n        Box::new(issues.into_iter().map(|i| {\n            let (pr, nr) = pairwise(self)\n                        .find(|&amp;(_, n)| in_range(&amp;i, &amp;n.range))\n                        .expect(\"No range found\");\n            issue_cost(\n                i,\n                nr.percentage,\n                pr.map_or(0.0, |x| x.max),\n                nr.max,\n            )\n        }))\n    }\n}\n</code></pre>\n\n<p>Rust is saying</p>\n\n<pre><code>error[E0373]: closure may outlive the current function, but it borrows `self`, which is owned by the current function\n  --&gt; src/main.rs:43:41\n   |\n43 |         Box::new(issues.into_iter().map(|i| {\n   |                                         ^^^ may outlive borrowed value `self`\n44 |             let (pr, nr) = pairwise(self)\n   |                                     ---- `self` is borrowed here\n   |\nhelp: to force the closure to take ownership of `self` (and any other referenced variables), use the `move` keyword\n   |\n43 |         Box::new(issues.into_iter().map(move |i| {\n   |                                         ^\n</code></pre>\n\n<p>But I don't want to move ownership into closure. What I want is that returned boxed iterator should live as long as both <code>self</code> and <code>issues</code>. As soon as they go away - it should go away.</p>\n\n<p>I know that this can be solved by passing cloned iterator to <code>issues</code> instead of a reference to it, I don't think that It's needed here.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=032ed5fe2896dd6eaef4ae63d6c3e72b&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["build", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 2303909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90241860b54b23a77364d028c5c01409?s=128&d=identicon&r=PG", "display_name": "user2303909", "link": "https://stackoverflow.com/users/2303909/user2303909"}, "edited": false, "score": 0, "creation_date": 1507285620, "post_id": 46586521, "comment_id": 80158887, "body": "Ok, thank you. I hoped that there&#39;s enough to use just Cargo. But I also have known that Cargo cannot perform post-build script so in this situation external build tool should be used."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1507209141, "creation_date": 1507209141, "answer_id": 46586521, "question_id": 46580535, "link": "https://stackoverflow.com/questions/46580535/different-target-names-using-rust-cargo-for-build/46586521#46586521", "title": "Different target names using Rust Cargo for build", "body": "<p>No. Debug vs release information is controlled by a <em>profile</em>. You can see <a href=\"https://github.com/rust-lang/cargo/blob/5b0bf5459d296c3e49b22d66c5a3870d42597d25/src/cargo/core/manifest.rs#L154-L179\" rel=\"nofollow noreferrer\">all the profile-related manifest keys in the source code</a>. The only related one I see is <code>rustc_options</code>. Running the build in verbose mode, you can see how cargo calls rustc:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --verbose\n   Compiling namez v0.1.0 (file:///private/tmp/namez)\n     Running `rustc --crate-name namez src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=5444c772a04e08f3 -C extra-filename=-5444c772a04e08f3 --out-dir /private/tmp/namez/target/debug/deps -L dependency=/private/tmp/namez/target/debug/deps`\n    Finished dev [unoptimized + debuginfo] target(s) in 0.45 secs\n</code></pre>\n\n<p>Unfortunately, changing <code>--crate-name</code> does not have the effect you'd like.</p>\n\n<hr>\n\n<p>Instead, I'd point out that you <em>already</em> have a different filename, you just have to look broader:</p>\n\n<pre><code>target/debug/libname.a\ntarget/release/libname.a\n</code></pre>\n\n<p>The debug and release files are in <strong>different</strong> directories. Whatever you were going to do to move separately named libraries would have to deal with the <code>debug</code> and <code>release</code> directories <em>anyway</em>. Just update your script: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mv target/debug/libname.a libnamed.a\nmv target/release/libname.a libname.a\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 2303909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90241860b54b23a77364d028c5c01409?s=128&d=identicon&r=PG", "display_name": "user2303909", "link": "https://stackoverflow.com/users/2303909/user2303909"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 0, "accepted_answer_id": 46586521, "answer_count": 1, "score": 4, "last_activity_date": 1507862730, "creation_date": 1507189885, "last_edit_date": 1507862730, "question_id": 46580535, "link": "https://stackoverflow.com/questions/46580535/different-target-names-using-rust-cargo-for-build", "title": "Different target names using Rust Cargo for build", "body": "<p>Is there a way to set different target names for development and release configurations using Cargo for building? For example, rustlibd.a and rustlib.a?</p>\n"}, {"tags": ["initialization", "rust", "match"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 3, "creation_date": 1507195124, "post_id": 46578050, "comment_id": 80116720, "body": "<code>match</code> can be used in expression context; it can serve as the last expression which is used as return value, or as the right hand side of <code>let x = match { ... };</code> - this avoids your problem completely (but strictly speeking not an answer to your question)."}], "answers": [{"comments": [{"owner": {"reputation": 4241, "user_id": 48026, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/NBv5r.jpg?s=128&g=1", "display_name": "Hern&#225;n", "link": "https://stackoverflow.com/users/48026/hern%c3%a1n"}, "edited": false, "score": 0, "creation_date": 1507231134, "post_id": 46578225, "comment_id": 80139487, "body": "Your comment is correct as <i>alternative</i>, altough the reason of the message is currently an issue. See my edit and the end of my post :)"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 4241, "user_id": 48026, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/NBv5r.jpg?s=128&g=1", "display_name": "Hern&#225;n", "link": "https://stackoverflow.com/users/48026/hern%c3%a1n"}, "edited": false, "score": 1, "creation_date": 1507260207, "post_id": 46578225, "comment_id": 80148027, "body": "I suspect this issue will not be resolved anytime soon. Too little payoff for significant compiler complexity increase."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 4241, "user_id": 48026, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/NBv5r.jpg?s=128&g=1", "display_name": "Hern&#225;n", "link": "https://stackoverflow.com/users/48026/hern%c3%a1n"}, "edited": false, "score": 0, "creation_date": 1507260628, "post_id": 46578225, "comment_id": 80148118, "body": "Also, I like unbound variable semantics more than uninitialized variable semantics. The first is more functional."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 9, "last_activity_date": 1507209286, "last_edit_date": 1507209286, "creation_date": 1507180058, "answer_id": 46578225, "question_id": 46578050, "link": "https://stackoverflow.com/questions/46578050/why-does-the-compiler-warn-about-an-uninitialized-variable-even-though-ive-assi/46578225#46578225", "title": "Why does the compiler warn about an uninitialized variable even though I&#39;ve assigned each field of that variable?", "body": "<p><code>let x: MyStruct;</code> doesn't set <code>x</code> to an empty value, it declares a variable. You still need to assign a value to it. </p>\n\n<pre><code>fn f(y: MyEnum) -&gt; MyStruct {\n    let x;\n\n    match y {\n        MyEnum::One =&gt; {\n            x = MyStruct { a: 1, b: 1 };\n        }\n        MyEnum::Two =&gt; {\n            x = MyStruct { a: 2, b: 2 };\n        }\n        MyEnum::Three =&gt; {\n            x = MyStruct { a: 3, b: 3 };\n        }\n    }\n\n    x\n}\n</code></pre>\n\n<p>In other words, <code>let x;</code> creates an unbound variable, a variable which doesn't have a value associated with it. Thus you need to bind some value to it later.</p>\n\n<p>If you only want to return a value from the function, you can take advantage of the fact that almost every statement in Rust produces a value, and a value of the last statement is the return value of a function.</p>\n\n<pre><code>fn f(y: MyEnum) -&gt; MyStruct {\n    use MyEnum::*;\n\n    let x = match y {\n        One   =&gt; MyStruct { a: 1, b: 1 },\n        Two   =&gt; MyStruct { a: 2, b: 2 },\n        Three =&gt; MyStruct { a: 3, b: 3 },\n    };\n    x\n}\n</code></pre>\n\n<p>You can also completely eliminate <code>x</code>, if you so choose.</p>\n\n<pre><code>fn f(y: MyEnum) -&gt; MyStruct {\n    use MyEnum::*;\n\n    match y {\n        One   =&gt; MyStruct { a: 1, b: 1 },\n        Two   =&gt; MyStruct { a: 2, b: 2 },\n        Three =&gt; MyStruct { a: 3, b: 3 },\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4241, "user_id": 48026, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/NBv5r.jpg?s=128&g=1", "display_name": "Hern&#225;n", "link": "https://stackoverflow.com/users/48026/hern%c3%a1n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 847, "favorite_count": 0, "accepted_answer_id": 46578225, "answer_count": 1, "score": 2, "last_activity_date": 1507231850, "creation_date": 1507178995, "last_edit_date": 1507231850, "question_id": 46578050, "link": "https://stackoverflow.com/questions/46578050/why-does-the-compiler-warn-about-an-uninitialized-variable-even-though-ive-assi", "title": "Why does the compiler warn about an uninitialized variable even though I&#39;ve assigned each field of that variable?", "body": "<p>I'm completely assigning the fields of the <code>MyStruct</code> instance named <code>x</code> in every possible brace of the match:</p>\n\n<pre><code>enum MyEnum {\n    One,\n    Two,\n    Three,\n}\n\nstruct MyStruct {\n    a: u32,\n    b: u32,\n}\n\n\nfn main() {\n    f(MyEnum::One);\n    f(MyEnum::Two);\n    f(MyEnum::Three);\n}\n\nfn f(y: MyEnum) -&gt; MyStruct {\n    let mut x: MyStruct;\n\n    match y {\n        MyEnum::One =&gt; {\n            x.a = 1;\n            x.b = 1;\n        }\n        MyEnum::Two =&gt; {\n            x.a = 2;\n            x.b = 2;\n        }\n        MyEnum::Three =&gt; {\n            x.a = 3;\n            x.b = 3;\n        }\n    }\n\n    x\n}\n</code></pre>\n\n<p>Why does the compiler return the following error?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `x`\n  --&gt; src/main.rs:37:5\n   |\n37 |     x\n   |     ^ use of possibly uninitialized `x`\n</code></pre>\n\n<p>I think this is <a href=\"https://github.com/rust-lang/rust/issues/31947\" rel=\"nofollow noreferrer\">a known issue</a> (see also its related issue).</p>\n"}]