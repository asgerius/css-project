[{"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 7, "last_activity_date": 1542298185, "last_edit_date": 1542298185, "creation_date": 1542236615, "answer_id": 53310045, "question_id": 53309958, "link": "https://stackoverflow.com/questions/53309958/why-do-i-not-have-to-implement-the-any-trait-for-a-type-even-though-it-is-a-requ/53310045#53310045", "title": "Why do I not have to implement the Any trait for a type even though it is a required?", "body": "<p><code>std::any</code> contains <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html#impl-Any\" rel=\"nofollow noreferrer\">the implementation</a>:</p>\n\n<pre><code>impl&lt;T&gt; Any for T\nwhere\n    T: 'static + ?Sized, \n</code></pre>\n\n<p>That means that any type implements <code>Any</code> as long as any references it contains are <code>'static</code> and the type is sized. Your <code>Thing</code> struct meets both of those requirements so it does implement <code>Any</code> and your code compiles.</p>\n"}], "owner": {"reputation": 6244, "user_id": 1074400, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/52386dc6c94ab9b807981c9616dc2bb5?s=128&d=identicon&r=PG", "display_name": "Aakil Fernandes", "link": "https://stackoverflow.com/users/1074400/aakil-fernandes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 53310045, "answer_count": 1, "score": 6, "last_activity_date": 1542298185, "creation_date": 1542236177, "last_edit_date": 1542298071, "question_id": 53309958, "link": "https://stackoverflow.com/questions/53309958/why-do-i-not-have-to-implement-the-any-trait-for-a-type-even-though-it-is-a-requ", "title": "Why do I not have to implement the Any trait for a type even though it is a required?", "body": "<p>When defining a trait, my understanding is that trait names on the right side of the <code>:</code> are required any time the left side is implemented. If so, why does the following compile:</p>\n\n<pre><code>use std::any::Any;\n\ntrait Trait: Any {}\n\nstruct Thing {}\n\nimpl Trait for Thing {}\n</code></pre>\n\n<p>The following does not compile (which matches my understanding of what is correct)</p>\n\n<pre><code>trait RequiredTrait {}\ntrait Trait: RequiredTrait {}\n\nstruct Thing {}\n\nimpl Trait for Thing {}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1542228356, "post_id": 53307834, "comment_id": 93497666, "body": "It isn&#39;t possible to &quot;cast&quot; one trait object into another. Probably a more idiomatic approach would be to use an <code>enum</code> of the possible encoders, rather than traits."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1542228939, "post_id": 53307834, "comment_id": 93497902, "body": "For example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a8193cbc1a72d00bf552b657a89142de\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 6244, "user_id": 1074400, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/52386dc6c94ab9b807981c9616dc2bb5?s=128&d=identicon&r=PG", "display_name": "Aakil Fernandes", "link": "https://stackoverflow.com/users/1074400/aakil-fernandes"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1542229433, "post_id": 53307834, "comment_id": 93498110, "body": "@PeterHall thanks! I&#39;ll try integrating and see if it works out. Very much appreciated"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1542229453, "post_id": 53307834, "comment_id": 93498119, "body": "This answer may help to explain why you can&#39;t cast between traits - even if you know the type implements them: <a href=\"https://stackoverflow.com/a/25247480/493729\">stackoverflow.com/a/25247480/493729</a>"}, {"owner": {"reputation": 6244, "user_id": 1074400, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/52386dc6c94ab9b807981c9616dc2bb5?s=128&d=identicon&r=PG", "display_name": "Aakil Fernandes", "link": "https://stackoverflow.com/users/1074400/aakil-fernandes"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1542230091, "post_id": 53307834, "comment_id": 93498382, "body": "@PeterHall thanks for the link. I was aware of the inability to cast between traits and <i>sorta</i> understand why (that link certainly helps). I was looking for a workaround an I think the enum solution you provided should work (integrating now)."}], "answers": [{"tags": [], "owner": {"reputation": 6244, "user_id": 1074400, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/52386dc6c94ab9b807981c9616dc2bb5?s=128&d=identicon&r=PG", "display_name": "Aakil Fernandes", "link": "https://stackoverflow.com/users/1074400/aakil-fernandes"}, "is_accepted": true, "score": 0, "last_activity_date": 1542237523, "creation_date": 1542237523, "answer_id": 53310213, "question_id": 53307834, "link": "https://stackoverflow.com/questions/53307834/how-can-i-test-an-objects-other-trait-functions/53310213#53310213", "title": "How can I test an object&#39;s other-trait functions", "body": "<p>I was able to accomplish this by using <code>Any</code>.</p>\n\n<ol>\n<li>Add an <code>as_any</code> declaration to <code>Encoder</code></li>\n<li>Add an <code>as_any</code> function to <code>FixedEncoder</code></li>\n<li>Use <code>.as_any().downcast_ref().unwrap()</code> on the retreived <code>Encoder</code></li>\n</ol>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=29c5a825aea64446c50bbf87264bc2ce\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>use std::any::Any;\n\npub struct Template {\n    encoder: Box&lt;Encoder&gt;\n}\n\nimpl Template {\n    fn new(encoder: Box&lt;Encoder&gt;) -&gt; Template{\n        Template {\n            encoder\n        }\n    }\n    fn encoder(&amp;self) -&gt; &amp;Box&lt;Encoder&gt; {\n        &amp;self.encoder\n    }\n}\n\npub trait Encoder {\n    fn isEncoder(&amp;self) -&gt; bool {\n        true\n    }\n    fn as_any(&amp;self) -&gt; &amp;dyn Any;\n}\n\npub struct FixedEncoder {\n    length: usize\n}\nimpl FixedEncoder {\n    pub fn new(length: usize) -&gt; FixedEncoder {\n        FixedEncoder { length }\n    }\n    pub fn length(&amp;self) -&gt; usize {\n        self.length\n    }\n}\n\n\n\nimpl Encoder for FixedEncoder {\n    fn as_any(&amp;self) -&gt; &amp;dyn Any {\n        self\n    }\n}\n\nfn main() {\n    let fixed_encoder = FixedEncoder::new(1);\n    let template = Template::new(Box::new(fixed_encoder));\n    assert_eq!(template.encoder().isEncoder(), true); // works\n\n    let fixed_encoder_from_template : &amp;FixedEncoder = &amp;template.encoder().as_any().downcast_ref().unwrap();\n    assert_eq!(&amp;fixed_encoder_from_template.length, &amp;(1 as usize));\n}\n</code></pre>\n"}], "owner": {"reputation": 6244, "user_id": 1074400, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/52386dc6c94ab9b807981c9616dc2bb5?s=128&d=identicon&r=PG", "display_name": "Aakil Fernandes", "link": "https://stackoverflow.com/users/1074400/aakil-fernandes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 53310213, "answer_count": 1, "score": 0, "last_activity_date": 1542237523, "creation_date": 1542225228, "last_edit_date": 1542229608, "question_id": 53307834, "link": "https://stackoverflow.com/questions/53307834/how-can-i-test-an-objects-other-trait-functions", "title": "How can I test an object&#39;s other-trait functions", "body": "<p>I have a <code>Template</code> struct implementing a <code>encoder</code> function that returns a reference to a <code>Box</code>ed <code>Encoder</code>.</p>\n\n<p>I also have a <code>FixedEncoder</code> struct that implements <code>Encoder</code></p>\n\n<p>I can create the <code>Template</code> and get the <code>Encoder</code> out, but how do I test the functions of <code>FixedEncoder</code>? I'm only looking to get <code>FixedEncoder</code> for testing purposes, so \"unsafe\" solutions are fine (though safe ones are preferred)</p>\n\n<p>In my following example I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `length` found for type `&amp;std::boxed::Box&lt;(dyn Encoder + 'static)&gt;` in the current scope\n</code></pre>\n\n<p>Example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=367f28a96807ce8b513714cfa7f1cd37\" rel=\"nofollow noreferrer\">playground</a>): </p>\n\n<pre><code>pub struct Template {\n    encoder: Box&lt;Encoder&gt;\n}\n\nimpl Template {\n    fn new(encoder: Box&lt;Encoder&gt;) -&gt; Template {\n        Template { encoder }\n    }\n\n    fn encoder(&amp;self) -&gt; &amp;Box&lt;Encoder&gt; {\n        &amp;self.encoder\n    }\n}\n\npub trait Encoder {\n    fn isEncoder(&amp;self) -&gt; bool {\n        true\n    }\n}\n\npub struct FixedEncoder {\n    length: usize\n}\n\nimpl FixedEncoder {\n    pub fn new(length: usize) -&gt; FixedEncoder {\n        FixedEncoder { length }\n    }\n\n    pub fn length(&amp;self) -&gt; usize {\n        self.length\n    }\n}\n\nimpl Encoder for FixedEncoder {}\n\nfn main() {\n    let fixed_encoder = FixedEncoder::new(1);\n    let template = Template::new(Box::new(fixed_encoder));\n    assert_eq!(template.encoder().isEncoder(), true); // works\n    assert_eq!(&amp;template.encoder().length(), 1); // error[E0599]: no method named `length` found for type `&amp;std::boxed::Box&lt;(dyn Encoder + 'static)&gt;` in the current scope\n}\n</code></pre>\n"}, {"tags": ["javascript", "rust", "webassembly"], "comments": [{"owner": {"reputation": 796429, "user_id": 34397, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/7deca8ec973c3c0875e9a36e1e3e2c44?s=128&d=identicon&r=PG", "display_name": "SLaks", "link": "https://stackoverflow.com/users/34397/slaks"}, "edited": false, "score": 0, "creation_date": 1542213330, "post_id": 53304832, "comment_id": 93490542, "body": "The browser cannot load files directly.  You need to use AJAX."}, {"owner": {"reputation": 1626, "user_id": 4206735, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bccfa766f0da76e534334083c87d6033?s=128&d=identicon&r=PG", "display_name": "christopher clark", "link": "https://stackoverflow.com/users/4206735/christopher-clark"}, "reply_to_user": {"reputation": 796429, "user_id": 34397, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/7deca8ec973c3c0875e9a36e1e3e2c44?s=128&d=identicon&r=PG", "display_name": "SLaks", "link": "https://stackoverflow.com/users/34397/slaks"}, "edited": false, "score": 0, "creation_date": 1542213368, "post_id": 53304832, "comment_id": 93490571, "body": "The file has already been packed and shipped with webpack"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1542214672, "post_id": 53304832, "comment_id": 93491297, "body": "@christopherclark If Webpack is bundling it, then you&#39;re not loading a file at all, you&#39;re either loading a string or an array buffer that happens to originally come from a file."}], "answers": [{"comments": [{"owner": {"reputation": 1626, "user_id": 4206735, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bccfa766f0da76e534334083c87d6033?s=128&d=identicon&r=PG", "display_name": "christopher clark", "link": "https://stackoverflow.com/users/4206735/christopher-clark"}, "edited": false, "score": 0, "creation_date": 1542218166, "post_id": 53305717, "comment_id": 93493059, "body": "Thank you. I am curious though, because that file is &quot;somewhere&quot; on the client. It should be retrievable, maybe not using the standard library, but there should be some way to retrieve it no? or is wasm even sandboxed from the client?"}, {"owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "reply_to_user": {"reputation": 1626, "user_id": 4206735, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bccfa766f0da76e534334083c87d6033?s=128&d=identicon&r=PG", "display_name": "christopher clark", "link": "https://stackoverflow.com/users/4206735/christopher-clark"}, "edited": false, "score": 0, "creation_date": 1542350196, "post_id": 53305717, "comment_id": 93544856, "body": "Wasm in general for the web is just as sandboxed as a normal web page, so you&#39;d access the file the same way in wasm that you would through a normal web page."}, {"owner": {"reputation": 1626, "user_id": 4206735, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bccfa766f0da76e534334083c87d6033?s=128&d=identicon&r=PG", "display_name": "christopher clark", "link": "https://stackoverflow.com/users/4206735/christopher-clark"}, "edited": false, "score": 1, "creation_date": 1542402157, "post_id": 53305717, "comment_id": 93569661, "body": "So i could theoretically make an ajax call to localhost/png/location.png and this would work! Thanks."}, {"owner": {"reputation": 2117, "user_id": 4593433, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/mXZY7.png?s=128&g=1", "display_name": "frankenapps", "link": "https://stackoverflow.com/users/4593433/frankenapps"}, "edited": false, "score": 0, "creation_date": 1613837366, "post_id": 53305717, "comment_id": 117202064, "body": "Would it also be possible to use the <code>include_bytes!()</code> macro, to embed a ressource like an Image into the .wasm binary?"}], "tags": [], "owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "is_accepted": true, "score": 6, "last_activity_date": 1542216429, "creation_date": 1542216429, "answer_id": 53305717, "question_id": 53304832, "link": "https://stackoverflow.com/questions/53304832/loading-a-file-from-wasm/53305717#53305717", "title": "Loading a file From Wasm?", "body": "<p>Loading a file from the filesystem doesn't work with the Rust standard library and the <code>wasm32-unknown-unknown</code> target. This error is, consequently, an expected runtime error for using <code>File::open</code>.</p>\n\n<p>The Rust standard library currently provides a uniform API surface area for all targets, regardless of whether the target actually supports the functionality or not. It turns out that almost all platforms implement basically all of the stable surface area of the standard library, but the <code>wasm32-unknown-unknown</code> target in specific is a bit of an odd-one-out. On this wasm target the standard library notably has no way to implement functions in modules like <code>std::net</code> or <code>std::fs</code>, so the functions unconditionally return an error. What you're seeing here is that <code>File::open</code> unconditionally returns an error on the <code>wasm32-unknown-unknown</code> target.</p>\n\n<p>Speaking specifically about the <code>wasm32-unknown-unknown</code> target, this target is used to represent the \"base layer of compatibility for Rust and wasm\". On this target the standard library can only assume the WebAssembly instruction set, nothing else. Because WebAssembly provides no means of doing I/O or loading files, it means that these stubs are left to return errors in the standard library.</p>\n\n<p>Note that an alternative way for us to provide the standard library on the <code>wasm32-unknown-unknown</code> target is to simply not provide these functions at all, causing a compile time error when they're attempted to be used. We chose to not take this route, for better or worse, to remain consistent across targets in Rust. It's hoped that something like the <a href=\"https://github.com/rust-lang/rust/issues/41619\" rel=\"noreferrer\">proposed portability lint</a> can change the calculus of this story, but Rust isn't quite there yet!</p>\n\n<hr>\n\n<p>In the meantime, though, you probably still want to get this done! The <code>wasm-bindgen</code> project has a few guides about the <code>wasm32-unknown-unknown</code> target which may help you make some progress here:</p>\n\n<ul>\n<li><a href=\"https://rustwasm.github.io/book/reference/which-crates-work-with-wasm.html#which-crates-will-work-off-the-shelf-with-webassembly\" rel=\"noreferrer\">Which crates will work off the shelf with WebAssembly?</a></li>\n<li><a href=\"https://rustwasm.github.io/book/reference/add-wasm-support-to-crate.html\" rel=\"noreferrer\">How to add WebAssembly support to a general purpose crate</a></li>\n</ul>\n\n<p>Notably the web platform doesn't currently provide the ability to load files from the filesystem, so there's no great way to implement <code>File::open</code> as an API in Rust for the <code>wasm32-unknown-unknown</code> target, even if JS is used. If you're using Node.js, though, I'd recommend reading about <a href=\"https://rustwasm.github.io/book/reference/js-ffi.html\" rel=\"noreferrer\">JS interop</a> as well as checking out the <a href=\"https://rustwasm.github.io/wasm-bindgen/\" rel=\"noreferrer\"><code>wasm-bindgen</code> guide</a> for importing Node.js functions to implement this. </p>\n"}], "owner": {"reputation": 1626, "user_id": 4206735, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bccfa766f0da76e534334083c87d6033?s=128&d=identicon&r=PG", "display_name": "christopher clark", "link": "https://stackoverflow.com/users/4206735/christopher-clark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2002, "favorite_count": 0, "accepted_answer_id": 53305717, "answer_count": 1, "score": 3, "last_activity_date": 1542216429, "creation_date": 1542213205, "last_edit_date": 1542213464, "question_id": 53304832, "link": "https://stackoverflow.com/questions/53304832/loading-a-file-from-wasm", "title": "Loading a file From Wasm?", "body": "<p>I am using rust and webassembly. I am getting this error message <code>operation not supported on wasm yet</code>. So either one of two things is happening, and I was curious if anyone knew the answer. So either my filepath is not correct and this is the least helpful error message, or wasm doesn't support loading files.</p>\n\n<pre><code>#[wasm_bindgen]\n#[macro_use]\npub fn file() -&gt; () {\n    let mut data: Vec&lt;u8&gt; = Vec::new();\n    ///I would load the png with the same path in my javascript.\n    let opened = File::open(\"./png/A_SingleCell.png\");\n    let unwraped = match opened {\n        Ok(a) =&gt; log(&amp;format!(\"opened {}\", \"worked\")),\n        Err(e) =&gt; log(&amp;format!(\"{}\", e)),\n    };\n    // .read_to_end(&amp;mut data)\n    // .unwrap();\n    return ();\n}\n\n#[wasm_bindgen]\nextern \"C\" {\n    #[wasm_bindgen(js_namespace = console)]\n    fn log(msg: &amp;str);\n}\n</code></pre>\n\n<p>and the javascript call is merely just <code>file()</code>.</p>\n\n<p>Is there a different directory path I need to use to get the png or can you truly not load a file?</p>\n\n<p><strong>Edit</strong>\nAdding my index.js to show that webpack has already loaded the png.</p>\n\n<pre><code>import { memory } from \"break-game/break_game_bg\";\nimport A from './png/A_SingleCell.png';\nimport { alloc, fill, decode, file } from \"break-game\";\n\n\nfile();\n</code></pre>\n"}, {"tags": ["testing", "rust", "integration-testing"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1542222970, "post_id": 53304433, "comment_id": 93495267, "body": "For what it&#39;s worth, your code <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=baab91bc01b0db3b36e849c314f6c53e\" rel=\"nofollow noreferrer\">works without any changes when enabling non-lexical lifetimes</a>."}, {"owner": {"reputation": 2762, "user_id": 1273147, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/548faf49e84b43366018d1cb7a8cb874?s=128&d=identicon&r=PG", "display_name": "Phuong Nguyen", "link": "https://stackoverflow.com/users/1273147/phuong-nguyen"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542237752, "post_id": 53304433, "comment_id": 93501258, "body": "@SvenMarnach interesting, I don&#39;t know about that"}], "answers": [{"tags": [], "owner": {"reputation": 10246, "user_id": 762363, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cec6320f5a5a8253b3dbfbb8177e001?s=128&d=identicon&r=PG", "display_name": "Tarmil", "link": "https://stackoverflow.com/users/762363/tarmil"}, "is_accepted": true, "score": 3, "last_activity_date": 1542212277, "creation_date": 1542212277, "answer_id": 53304563, "question_id": 53304433, "link": "https://stackoverflow.com/questions/53304433/cannot-borrow-as-immutable-because-it-is-also-borrowed-as-mutable-when-verifing/53304563#53304563", "title": "Cannot borrow as immutable because it is also borrowed as mutable when verifing that a closure was called", "body": "<p>You can put the anonymous function in a local scope, so that it is dropped by the time you assert:</p>\n\n<pre><code>#[test]\nfn should_work() {\n    let mut output_message = String::from(\"\");\n\n    let result = {\n        let output = |message: String| {\n            output_message = message;\n        };\n\n        handle(output)\n    };\n\n    assert!(result.is_ok());\n    assert_eq!(\"blah\", output_message);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2762, "user_id": 1273147, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/548faf49e84b43366018d1cb7a8cb874?s=128&d=identicon&r=PG", "display_name": "Phuong Nguyen", "link": "https://stackoverflow.com/users/1273147/phuong-nguyen"}, "edited": false, "score": 0, "creation_date": 1542330622, "post_id": 53322984, "comment_id": 93540396, "body": "thanks a lot. Coincidentally I also just saw your answer on sharing test utilities: <a href=\"https://stackoverflow.com/a/44545091/1273147\">stackoverflow.com/a/44545091/1273147</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1542296559, "creation_date": 1542296559, "answer_id": 53322984, "question_id": 53304433, "link": "https://stackoverflow.com/questions/53304433/cannot-borrow-as-immutable-because-it-is-also-borrowed-as-mutable-when-verifing/53322984#53322984", "title": "Cannot borrow as immutable because it is also borrowed as mutable when verifing that a closure was called", "body": "<p>Inline the closure:</p>\n\n<pre><code>#[test]\nfn should_work() {\n    let mut output_message = String::from(\"\");\n\n    let result = handle(|message| {\n        output_message = message;\n    });\n\n    assert!(result.is_ok());\n    assert_eq!(\"blah\", output_message);\n}\n</code></pre>\n\n<p>This way, the closure is a temporary and doesn't borrow the value for a long time. As a bonus, you can avoid the type specification on the closure argument.</p>\n\n<p>Or wait a few weeks until Rust 1.31 and turn on Rust 2018 mode, which has <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a>.</p>\n"}], "owner": {"reputation": 2762, "user_id": 1273147, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/548faf49e84b43366018d1cb7a8cb874?s=128&d=identicon&r=PG", "display_name": "Phuong Nguyen", "link": "https://stackoverflow.com/users/1273147/phuong-nguyen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 53304563, "answer_count": 2, "score": 0, "last_activity_date": 1542296612, "creation_date": 1542211859, "last_edit_date": 1542296612, "question_id": 53304433, "link": "https://stackoverflow.com/questions/53304433/cannot-borrow-as-immutable-because-it-is-also-borrowed-as-mutable-when-verifing", "title": "Cannot borrow as immutable because it is also borrowed as mutable when verifing that a closure was called", "body": "<p>I have a function that takes a closure to perform output-related logic (e.g. display to stdout):</p>\n\n<pre><code>fn handle(mut output: impl FnMut(String) -&gt; ()) -&gt; Result&lt;(), String&gt; {\n    // do something that produces output string `message`\n    let message = \"example\".to_string();\n    Ok(output(message))\n}\n</code></pre>\n\n<p>I'm trying to write an integration test for this function, where I define a stub output function, which saves the output string to local mutable variable:</p>\n\n<pre><code>#[test]\nfn should_work() {\n    let mut output_message = String::from(\"\");\n    let output = |message: String| {\n        output_message = message;\n    };\n\n    let result = handle(output);\n\n    assert!(result.is_ok());\n    assert_eq!(\"blah\", output_message);\n}\n</code></pre>\n\n<p>However I have error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `output_message` as immutable because it is also borrowed as mutable\n  --&gt; src/lib.rs:18:24\n   |\n11 |     let output = |message: String| {\n   |                  ----------------- mutable borrow occurs here\n12 |         output_message = message;\n   |         -------------- previous borrow occurs due to use of `output_message` in closure\n...\n18 |     assert_eq!(\"blah\", output_message);\n   |                        ^^^^^^^^^^^^^^ immutable borrow occurs here\n19 | }\n   | - mutable borrow ends here\n</code></pre>\n\n<p>Is there any way I can test using this approach? I briefly searched for some mock crates but all of the crates don't seem to be updated very often and they are a bit overkill for my scenario anyway.</p>\n\n<p>If not, any better alternative to test this function?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1542212030, "post_id": 53304428, "comment_id": 93489712, "body": "Can you provide your reasoning that led you to think that you could push a number into a vector of <code>T</code>? This <code>T</code> is universal in the context of this function, it could be anything that obeys the given constraints."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1542212058, "post_id": 53304428, "comment_id": 93489735, "body": "Side note, <a href=\"https://stackoverflow.com/q/40006219/1233251\">&amp;Vec&lt;T&gt; as a function parameter is discouraged</a>, you can do <code>&amp;[T]</code> instead."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1542342059, "last_edit_date": 1542342059, "creation_date": 1542214122, "answer_id": 53305107, "question_id": 53304428, "link": "https://stackoverflow.com/questions/53304428/why-do-i-get-the-error-expected-type-parameter-found-integral-variable/53305107#53305107", "title": "Why do I get the error &quot;Expected type parameter, found integral variable&quot;?", "body": "<blockquote>\n  <p>I have no clue why it expected type <code>T</code></p>\n</blockquote>\n\n<p>It's expecting a value of type <code>T</code> because you are trying to push a value into a <code>Vec&lt;T&gt;</code>.</p>\n\n<p>The problem is that the only information you have given the compiler about <code>T</code> is that it is <code>Ord + Clone</code> - but neither of those traits say that <code>1</code> is a value of <code>T</code>. There is a trait called <code>One</code> in the <code>num</code> crate, which provides this:</p>\n\n<pre><code>extern crate num; // 0.2.0\n\nuse num::One;\nuse std::collections::BTreeMap;\n\nfn frequency&lt;T&gt;(vec: &amp;mut Vec&lt;T&gt;) -&gt; BTreeMap&lt;T, u32&gt; \nwhere\n    T: Ord + Clone + One,\n{\n    let mut movie_reviews = BTreeMap::new();\n    vec.push(T::one());\n    movie_reviews\n}\n</code></pre>\n\n<hr>\n\n<p>As others have commented, your code has one or two other issues, which I won't address here since this will fix the error that you have asked about.</p>\n"}, {"tags": [], "owner": {"reputation": 2683, "user_id": 829676, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e916c9f302b0c20d575ee6fb3b22276d?s=128&d=identicon&r=PG", "display_name": "Fredszaq", "link": "https://stackoverflow.com/users/829676/fredszaq"}, "is_accepted": false, "score": 2, "last_activity_date": 1542214237, "creation_date": 1542214237, "answer_id": 53305137, "question_id": 53304428, "link": "https://stackoverflow.com/questions/53304428/why-do-i-get-the-error-expected-type-parameter-found-integral-variable/53305137#53305137", "title": "Why do I get the error &quot;Expected type parameter, found integral variable&quot;?", "body": "<p>In you code, you have two similarly names variables <code>vec</code> from the function definition that is an immutable reference to a <code>Vec&lt;T&gt;</code> (with <code>T: Ord+Clone</code>) and <code>vec_</code> with is a <code>Vec&lt;_&gt;</code> (I've put an <code>_</code> here to show that you let the compiler infer the type)</p>\n\n<p>You cannot push <code>1</code> in <code>vec</code>: first you only have an immuable reference to it and push would need a mutable one, second <code>vec</code> is is a <code>Vec</code> of <code>T</code> which in that case can be pretty much everything that implements <code>Ord</code> and <code>Clone</code> and the compiler can't ensure you can push an integer in it.</p>\n\n<p>You can however push <code>1</code> in <code>vec_</code> and the compiler will infer the type of it to be a <code>Vec</code> of integers  </p>\n"}], "owner": {"reputation": 269, "user_id": 7272130, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4f731e81d96903d3a06439adf360512d?s=128&d=identicon&r=PG&f=1", "display_name": "Felix Ha", "link": "https://stackoverflow.com/users/7272130/felix-ha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1175, "favorite_count": 0, "closed_date": 1542296874, "accepted_answer_id": 53305107, "answer_count": 2, "score": 1, "last_activity_date": 1546955866, "creation_date": 1542211841, "last_edit_date": 1546955866, "question_id": 53304428, "link": "https://stackoverflow.com/questions/53304428/why-do-i-get-the-error-expected-type-parameter-found-integral-variable", "closed_reason": "Duplicate", "title": "Why do I get the error &quot;Expected type parameter, found integral variable&quot;?", "body": "<p>I am getting familiar with Rust generics, but I can't figure out what's going wrong. </p>\n\n<pre><code>use std::collections::BTreeMap;\n\nfn frequency&lt;T: Ord + Clone&gt;(vec: &amp;Vec&lt;T&gt;) -&gt; BTreeMap&lt;T, u32&gt; {\n    let mut movie_reviews = BTreeMap::new();\n    let mut vec_ = Vec::new();\n    vec.push(1);\n    movie_reviews\n}\n</code></pre>\n\n<p>I have no clue why it expected type <code>T</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:6:14\n  |\n6 |     vec.push(1);\n  |              ^ expected type parameter, found integral variable\n  |\n  = note: expected type `T`\n             found type `{integer}`\n</code></pre>\n"}, {"tags": ["async-await", "rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542331766, "post_id": 53309215, "comment_id": 93540625, "body": "Based on chatting with some of the implementors, it sounds like <code>Sink</code> is not an abstraction that is going to continue to exist in the new futures world. You can tell it hasn&#39;t been updated because it still has the split <code>Item</code> / <code>Error</code> associated types, unlike <code>Future</code> and <code>Stream</code>."}, {"owner": {"reputation": 4782, "user_id": 1339698, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/7d43d1dd397dceade900eb917cec4167?s=128&d=identicon&r=PG", "display_name": "jsdw", "link": "https://stackoverflow.com/users/1339698/jsdw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542699591, "post_id": 53309215, "comment_id": 93651946, "body": "Thanks, that&#39;s interesting to know. I am maybe a bit surprised that Stream would continue to exist but not Sink (piping Streams to Sinks seems useful for instance, though easy with async/await I guess!), but Sink does feel like the least useful of the abstractions to keep around!"}], "tags": [], "owner": {"reputation": 4782, "user_id": 1339698, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/7d43d1dd397dceade900eb917cec4167?s=128&d=identicon&r=PG", "display_name": "jsdw", "link": "https://stackoverflow.com/users/1339698/jsdw"}, "is_accepted": false, "score": 1, "last_activity_date": 1542331682, "last_edit_date": 1542331682, "creation_date": 1542232089, "answer_id": 53309215, "question_id": 53302482, "link": "https://stackoverflow.com/questions/53302482/why-does-boxdyn-sink-not-implement-the-sink-trait-when-using-tokio-and-the/53309215#53309215", "title": "Why does `Box&lt;dyn Sink&gt;` not implement the `Sink` trait when using Tokio and the experimental async/await support?", "body": "<p>My fix was to wrap the <code>Box</code>ed <code>Sink</code>s into a newtype and implement the <code>Sink</code> trait on that. I think that perhaps <code>Box&lt;dyn Sink&gt;</code> does not implement <code>Sink</code> in this nightly, which is basically what the error message implies (I guess the async/await shims redefine <code>Sink</code> and don't implement it on <code>Box</code>).</p>\n\n<p>My wrapper ended up looking like this:</p>\n\n<pre><code>struct BoxedSink&lt;I, E&gt;(Box&lt;dyn Sink&lt;SinkItem = I, SinkError = E&gt; + Send + Sync + 'static&gt;);\n\nimpl&lt;I, E&gt; Sink for BoxedSink&lt;I, E&gt; {\n    type SinkItem = I;\n    type SinkError = E;\n\n    fn start_send(\n        &amp;mut self,\n        input: Self::SinkItem,\n    ) -&gt; Result&lt;AsyncSink&lt;Self::SinkItem&gt;, Self::SinkError&gt; {\n        self.0.start_send(input)\n    }\n\n    fn poll_complete(&amp;mut self) -&gt; Poll&lt;(), Self::SinkError&gt; {\n        self.0.poll_complete()\n    }\n}\n</code></pre>\n\n<p>You have to wrap your <code>Box&lt;Sinks&gt;</code> in this to make them once again implement <code>Sink</code>.</p>\n"}], "owner": {"reputation": 4782, "user_id": 1339698, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/7d43d1dd397dceade900eb917cec4167?s=128&d=identicon&r=PG", "display_name": "jsdw", "link": "https://stackoverflow.com/users/1339698/jsdw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 282, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1542331682, "creation_date": 1542205591, "last_edit_date": 1542331615, "question_id": 53302482, "link": "https://stackoverflow.com/questions/53302482/why-does-boxdyn-sink-not-implement-the-sink-trait-when-using-tokio-and-the", "title": "Why does `Box&lt;dyn Sink&gt;` not implement the `Sink` trait when using Tokio and the experimental async/await support?", "body": "<p>I am having a play with async/await by using Tokio with the async/await feature enabled in my <code>Cargo.toml</code> (and the latest Rust nightly with 2018 edition):</p>\n\n<pre><code>tokio = { version = \"0.1.11\", features = [\"async-await-preview\"] }\n</code></pre>\n\n<p>I've run into an error I don't understand, which is reproduced in this minimal example:</p>\n\n<pre><code>#![feature(await_macro, async_await, futures_api)]\nuse tokio::prelude::*;\n\npub fn main() {\n    tokio::run_async(async {\n        let s: Option&lt;Box&lt;dyn Sink&lt;SinkItem = u8, SinkError = ()&gt; + Send + Sync + 'static&gt;&gt; = None;\n\n        if let Some(sink) = s {\n            await!(sink.send_async(100));\n        }\n    });\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'r&gt; (dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 'r): futures::sink::Sink` is not satisfied\n --&gt; src/main.rs:5:5\n  |\n5 |     tokio::run_async(async {\n  |     ^^^^^^^^^^^^^^^^ the trait `for&lt;'r&gt; futures::sink::Sink` is not implemented for `dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send`\n  |\n  = note: required because of the requirements on the impl of `futures::sink::Sink` for `std::boxed::Box&lt;dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send&gt;`\n  = note: required because it appears within the type `tokio_async_await::sink::send::Send&lt;'_, std::boxed::Box&lt;dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send&gt;&gt;`\n  = note: required because it appears within the type `for&lt;'r, 's, 't0, 't1&gt; {std::option::Option&lt;std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 'r)&gt;&gt;, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 's)&gt;, tokio_async_await::sink::send::Send&lt;'t0, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 't1)&gt;&gt;, ()}`\n  = note: required because it appears within the type `[static generator@src/main.rs:5:28: 11:6 for&lt;'r, 's, 't0, 't1&gt; {std::option::Option&lt;std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 'r)&gt;&gt;, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 's)&gt;, tokio_async_await::sink::send::Send&lt;'t0, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 't1)&gt;&gt;, ()}]`\n  = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:28: 11:6 for&lt;'r, 's, 't0, 't1&gt; {std::option::Option&lt;std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 'r)&gt;&gt;, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 's)&gt;, tokio_async_await::sink::send::Send&lt;'t0, std::boxed::Box&lt;(dyn futures::sink::Sink&lt;SinkItem=u8, SinkError=()&gt; + std::marker::Sync + std::marker::Send + 't1)&gt;&gt;, ()}]&gt;`\n  = note: required because it appears within the type `impl std::future::Future`\n  = note: required by `tokio::async_await::run_async`\n</code></pre>\n\n<p>and it goes away if I remove the line beginning \"await!\". </p>\n\n<p>When using Tokio without the experimental async/await support, my program is happy with the idea that a <code>Box&lt;dyn Sink&gt;</code> is a <code>Sink</code>, so I'm not really sure why the error crops up using async/await stuff.</p>\n\n<p>What does the error mean? How can I get around this?</p>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1542197559, "post_id": 53299891, "comment_id": 93480466, "body": "I would say a <code>Option&lt;Result&lt;Option&lt;_&gt;, _&gt;&gt;</code> is not an adequate structure. Try unwrapping it beforehand with the <code>?</code> operator"}, {"owner": {"reputation": 336, "user_id": 2115405, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe3e511f82696b9306e063bffaa0e913?s=128&d=identicon&r=PG", "display_name": "Kristoffer", "link": "https://stackoverflow.com/users/2115405/kristoffer"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542197935, "post_id": 53299891, "comment_id": 93480673, "body": "That is not what i want, I just want a shorter way of expression the exact combination of Variants, because in just that case i have to do something, otherwise I do not need to"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542203819, "post_id": 53301769, "comment_id": 93484369, "body": "Upvote for <i>&quot;I would however consider refactoring your code&quot;</i> (TIL I cannot post +1 in the beginning of a comment)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542205447, "post_id": 53301769, "comment_id": 93485451, "body": "@hellow That is because commenting on your vote is considered noise, and can be removed from the site. ;)"}, {"owner": {"reputation": 336, "user_id": 2115405, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe3e511f82696b9306e063bffaa0e913?s=128&d=identicon&r=PG", "display_name": "Kristoffer", "link": "https://stackoverflow.com/users/2115405/kristoffer"}, "edited": false, "score": 0, "creation_date": 1542230215, "post_id": 53301769, "comment_id": 93498433, "body": "Oh believe me, I am itching to refactor myself. But I actually gave it a shot and I cannot understand the codebase nearly good enough to start refactoring it. This structure is returned from a library call from a crate  I am using, and I wish i had the time and skill to rewrite it."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 8, "last_activity_date": 1542203330, "creation_date": 1542203330, "answer_id": 53301769, "question_id": 53299891, "link": "https://stackoverflow.com/questions/53299891/is-there-some-syntactic-sugar-for-matching-on-deeply-nested-option-and-result-ch/53301769#53301769", "title": "Is there some syntactic sugar for matching on deeply nested Option and Result chains?", "body": "<p>You don't need such an alias, just use a function to retrieve the one case you want:</p>\n\n<pre><code>fn oneCaseICareAbout(value: &amp;Option&lt;Result&lt;Option&lt;Foo&gt;, Bar&gt;&gt;) -&gt; Option&lt;&amp;Foo&gt; {\n    if let Some(Ok(Some(CustomVariant(Some(value)))) = value {\n        Some(value)\n    } else {\n        None\n    }\n}\n\nif let Some(value) = oneCaseICareAbout(expr) {\n    //handle value\n}\n</code></pre>\n\n<hr>\n\n<p>I would however consider refactoring your code not to use such a type. <code>Option&lt;Result&lt;_, _&gt;&gt;</code> is already a red flag, but <code>Some(Ok(Some(CustomVariant(Some(\u2026))))</code> is just on the edge of insanity!</p>\n"}], "owner": {"reputation": 336, "user_id": 2115405, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/fe3e511f82696b9306e063bffaa0e913?s=128&d=identicon&r=PG", "display_name": "Kristoffer", "link": "https://stackoverflow.com/users/2115405/kristoffer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 53301769, "answer_count": 1, "score": 0, "last_activity_date": 1542296125, "creation_date": 1542197265, "last_edit_date": 1542296125, "question_id": 53299891, "link": "https://stackoverflow.com/questions/53299891/is-there-some-syntactic-sugar-for-matching-on-deeply-nested-option-and-result-ch", "title": "Is there some syntactic sugar for matching on deeply nested Option and Result chains?", "body": "<p>I am issuing calls that return an <code>Option</code> that contains a <code>Result</code> which contains another <code>Option</code> that contains custom variants.<br>\nI am only ever interested in a specific chain of variant results like this:</p>\n\n<pre><code>if let Some(Ok(Some(CustomVariant(Some(value))))) = expr {\n    // handle value case\n}\n</code></pre>\n\n<p>This is getting quite verbose and not really helpful, since I actually treat it as a single <code>Result</code> in all of my code. Can I somehow alias this code so that instead of writing the entire chain of <code>Option</code>s and <code>Result</code>s I can do something similar to:</p>\n\n<pre><code>alias TheCase(value) = Some(Ok(Some(CustomVariant(Some(value))));\nif let TheCase(value) = expr {\n    //handle value\n}\n</code></pre>\n"}, {"tags": ["c++", "rust", "shared-ptr", "ffi"], "comments": [{"owner": {"reputation": 205167, "user_id": 4323, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qqgFU.png?s=128&g=1", "display_name": "John Zwinck", "link": "https://stackoverflow.com/users/4323/john-zwinck"}, "edited": false, "score": 0, "creation_date": 1542195149, "post_id": 53299119, "comment_id": 93479109, "body": "Is it at all possible for you to design your code in such a way that either C++ or Rust owns the object and manages its lifetime?  You could trigger a callback when it is destroyed, to tell the &quot;other&quot; language to stop holding references to it."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1542197165, "post_id": 53299119, "comment_id": 93480272, "body": "You can also return a <code>new shared_ptr&lt;Foo&gt;(...)</code>... a bit like the double <code>Box</code> trick that is done sometimes from the Rust side."}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542197572, "post_id": 53299119, "comment_id": 93480475, "body": "Just to clarify this is an existing c++ library and I can&#39;t control how the pointer is created. I just get given a shared_ptr&lt;Foo&gt;  from a function."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542201300, "post_id": 53299119, "comment_id": 93482649, "body": "So you want to be able to access to pointer inner type ?"}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542201551, "post_id": 53299119, "comment_id": 93482826, "body": "@Stargateur yep but I don&#39;t want it to be free&#39;d while I&#39;m using it and if I just use the raw pointer I can&#39;t guarantee that."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1542195769, "post_id": 53299350, "comment_id": 93479433, "body": "<i>&quot;C++ abi is not stable&quot;</i> -&gt; &quot;Is not specified&quot;"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542195786, "post_id": 53299350, "comment_id": 93479444, "body": "That means it has not been stabilized I guess :)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542195848, "post_id": 53299350, "comment_id": 93479478, "body": "It&#39;s a difference, because is has not been stabilized means (IMHO), that is about to stabilize and there is a standard for it. Not specified means there no specification at all."}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542196200, "post_id": 53299350, "comment_id": 93479688, "body": "Thanks for the suggestion. If I return a raw pointer how do I make sure c++ doesn&#39;t free the pointer? <code>Foo * create_foo() { shared_ptr&lt;Foo&gt; smart_p = lib::create_foo(); return smart_p.get(); } </code> Here smart_p&#39;s desctructor will be called at the end of the function and if its the last one it will free the pointer"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542196570, "post_id": 53299350, "comment_id": 93479923, "body": "@Tom good question, that&#39;s up to you. I would suggest creating a struct that contains the shared pointer and if rust decides to give up the struct (e.g. call <code>destroy_foo</code>) you will also drop the shared pointer."}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542197766, "post_id": 53299350, "comment_id": 93480577, "body": "@hellow Yeh that&#39;s what I&#39;m thinking. Basically rust holds a struct that has the shared_ptr as an opaque_blob and returns it to c++ for destruction when I&#39;m done with it. The downside is all work on the Foo must be done by passing it back to c++"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542197818, "post_id": 53299350, "comment_id": 93480606, "body": "@Tom I would say, that&#39;s worth a new question."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542199037, "post_id": 53299350, "comment_id": 93481358, "body": "@E_net4 That&#39;s correct, thanks, I did not know it is so. What to use for owning a C pointer then?"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542199859, "post_id": 53299350, "comment_id": 93481807, "body": "@E_net4 At first, it is a link-only comment, at second, the <code>Box::from_raw</code> is used there, and third, it is about exporting Rust object to the outside, not import <code>C</code> pointers into <code>Rust</code> - there is a difference a little."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542200202, "post_id": 53299350, "comment_id": 93482013, "body": "Again &quot;stable C ABI&quot;, there is no such thing, the rule are the same than C++ &quot;may change between compiler versions&quot; because as C++ and Rust. The C ABI &quot;Is not specified&quot;."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542200409, "post_id": 53299350, "comment_id": 93482121, "body": "Right, sorry, I&#39;m currently in a poor position to go into details. The C API has to expose a freeing function. In Rust land, we may then make a wrapper type that calls this function on  drop."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542200696, "post_id": 53299350, "comment_id": 93482288, "body": "@Stargateur Okay, should I be more clear then, like to say that the only thing we need is to disable name mangling for the symbol? I was probably mistaken because name mangling is a part of ABI."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542200803, "post_id": 53299350, "comment_id": 93482341, "body": "@E_net4 You&#39;re right, we have to use the same (de)allocation mechanism everywhere: new/delete, malloc/free and so on, because there may be different allocators we don&#39;t know about or at least other things like internal structure pointers which we will simply not deallocate using <code>free</code>.  So, it is still an open question what to use for wrapping C code then."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542201767, "post_id": 53299350, "comment_id": 93482976, "body": "@E_net4 I have added my own version of code I&#39;d write for this thing. Could you check it out please?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1542297215, "post_id": 53299350, "comment_id": 93526834, "body": "TL;DR: <i>How do you work with a C++ shared_ptr&lt;T&gt; in FFI?</i> \u2014 <b>you don&#39;t</b>."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": false, "score": 4, "last_activity_date": 1542297172, "last_edit_date": 1542297172, "creation_date": 1542195432, "answer_id": 53299350, "question_id": 53299119, "link": "https://stackoverflow.com/questions/53299119/how-do-you-work-with-a-c-function-that-returns-a-shared-ptrt-when-calling-it/53299350#53299350", "title": "How do you work with a C++ function that returns a shared_ptr&lt;T&gt; when calling it from Rust over FFI?", "body": "<p><code>std::shared_ptr</code> is a C++ class and a non-trivial type that can not be exported as is from a library \u2014 you need its definition in your target language to conform to the one in C++. To use FFI you need to provide your library functions with a simple C ABI (the C++ ABI is not stable and may change between compiler versions (as might Rust's ABI)) and I doubt that all of functions related to <code>std::shared_ptr</code> are such, so there is one more obstacle for that.</p>\n\n<p>I'd suggest to return a raw C-pointer from your library instead and own it in Rust.</p>\n\n<p>Even in C++, to load a C++ library you provide C-ABI functions (via <code>extern C</code>) to gain access to a pointer of your type and then you use it in C++ as how as you want.</p>\n\n<p>So, a few points:</p>\n\n<ol>\n<li><p>Return a raw C pointer from a function without name mangling so that we know its name and can link to it:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>extern \"C\" Foo* create_foo();\n</code></pre></li>\n<li><p>Add a deleter which knows how to properly deallocate the object:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>extern \"C\" void delete_foo(Foo *);\n</code></pre></li>\n<li><p>Let the library user (Rust) decide how to own it, for example, by <code>boxing</code> the value and using it with atomic reference counter via <code>std::sync::Arc</code> (as <code>std::shared_ptr</code> does):</p>\n\n<pre><code>extern \"C\" {\n    fn create_foo() -&gt; *mut Foo;\n    fn delete_foo(p: *mut Foo);\n}\n\nstruct MyFoo {\n    raw: *mut Foo,\n}\n\nimpl MyFoo {\n    fn new() -&gt; MyFoo {\n        unsafe { MyFoo { raw: create_foo() } }\n    }\n}\n\nimpl Drop for MyFoo {\n    fn drop(&amp;mut self) {\n        unsafe {\n            delete_foo(self.raw);\n        }\n    }\n}\n\nfn main() {\n    use std::sync::Arc;\n\n    let value = Arc::new(MyFoo::new());\n    let another_value = value.clone();\n    println!(\"Shared counter: {}\", Arc::strong_count(&amp;value));\n}\n</code></pre></li>\n<li><p>Let the C++ side forget about owning this pointer - you can't rely on it if it is used from outside the library and you give a raw pointer to it.</p></li>\n</ol>\n\n<p>If you don't have any access to the library sources, can't do anything with it: the <code>std::shared_ptr</code> object will not release the pointer ever and we can't make it not to delete the pointer.</p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542204393, "post_id": 53301874, "comment_id": 93484743, "body": "I <i>think</i> that <code>std::shared_ptr&lt;Foo&gt; &amp;&amp;create_foo()</code> is wrong and makes no sense at all."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542204951, "post_id": 53301874, "comment_id": 93485136, "body": "@E_net4 Yes I just create something that compile in Rust, but indeed this struct need to match the actual struct <code>std::shared_ptr</code> if not Rust can&#39;t move it correctly."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542205148, "post_id": 53301874, "comment_id": 93485255, "body": "@hellow I not sure too, as we tell to rust to use C semantic, I suppose it doesn&#39;t but in this case <code>destroy_foo(std::shared_ptr&lt;Foo&gt; &amp;&amp;foo)</code> also don&#39;t make sense. Because rust will copy the value ? is this work ? I really don&#39;t know."}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542244565, "post_id": 53301874, "comment_id": 93503045, "body": "In you&#39;re example if we wrap the shared_ptr&lt;Foo&gt; in a struct and make it opaque then we can maintain ownership and still get the raw ptr eg: <code>struct SmartPtr {</code> <code>smart_ptr: opaque_blob[u64; 2],</code> <code>raw_ptr: * mut Foo,</code> <code>}</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542247169, "post_id": 53301874, "comment_id": 93503562, "body": "@Tom That a bad idea to keep the raw pointer separate of shared_ptr, in my exemple I do it but I would advise you to create a structure that hide the raw pointer of shared_ptr."}, {"owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542249404, "post_id": 53301874, "comment_id": 93504051, "body": "@Stargateur if this is not done then what prevents c++ from calling the destructor at the end of get_foo?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "edited": false, "score": 0, "creation_date": 1542285729, "post_id": 53301874, "comment_id": 93519440, "body": "@Tom It&#39;s a reference ? <code>get_foo()</code> do not own shared_ptr, it don&#39;t have the right to call the destructor. It&#39;s just I give you this temporally."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1542297287, "last_edit_date": 1542297287, "creation_date": 1542203680, "answer_id": 53301874, "question_id": 53299119, "link": "https://stackoverflow.com/questions/53299119/how-do-you-work-with-a-c-function-that-returns-a-shared-ptrt-when-calling-it/53301874#53301874", "title": "How do you work with a C++ function that returns a shared_ptr&lt;T&gt; when calling it from Rust over FFI?", "body": "<blockquote>\n  <p>I can't just take the raw pointer because then the C++ code is unaware that I have a reference to <code>Foo</code> and might calls it's deconstructor.</p>\n</blockquote>\n\n<p>Yes and no. With your actual example. C++ will give ownership of the <code>shared_ptr</code> to the one who called <code>create_foo</code>, so C++ knows that there is still something that owns the pointer.</p>\n\n<p>You need to add a <code>get</code> function that will get the value for you without losing ownership of the pointer, something like this:</p>\n\n<pre><code>extern \"C\" {\n    std::shared_ptr&lt;Foo&gt; create_foo() {\n        // do the thing\n    }\n    /* or maybe this\n    std::shared_ptr&lt;Foo&gt; &amp;&amp;create_foo() {\n        // do the thing\n    }\n    */\n\n    Foo *get_foo(std::shared_ptr&lt;Foo&gt; &amp;foo) {\n        foo.get();\n    }\n\n    void destroy_foo(std::shared_ptr&lt;Foo&gt; foo) {\n    }\n    /* or maybe this\n    void destroy_foo(std::shared_ptr&lt;Foo&gt; &amp;&amp;foo) {\n    }\n    */\n}\n</code></pre>\n\n<p>Also <code>shared_ptr&lt;Foo&gt;</code> is not valid C, so I don't know if bindgen and C++ with accept this (probably a warning) but that is already present in your code.</p>\n\n<p>On the Rust side, you could do this:</p>\n\n<pre><code>// must be generated by bindgen and this might create a lot of problems\n// this need to be the same struct as the shared_ptr on the C++ side.\n// if even one octet is not correct you will run into bugs\n// BE SURE that bindgen don't implement Copy for this\nstruct shared_ptr&lt;T&gt;; \n\nstruct Foo(i32);\n\nextern \"C\" {\n    fn create_foo() -&gt; shared_ptr&lt;Foo&gt;;\n\n    fn get_foo(foo: &amp;shared_ptr&lt;Foo&gt;) -&gt; *mut Foo;\n\n    fn destroy_foo(foo: shared_ptr&lt;Foo&gt;);\n}\n\nfn main() {\n    unsafe {\n        let my_shared_foo = create_foo();\n        let foo = get_foo(&amp;my_shared_foo);\n        (*foo).0;\n        destroy_foo(my_shared_foo);\n    }\n}\n</code></pre>\n\n<p>Of course this is just an example, and nothing is really safe in any of this. And as I can't test, please let me know if I wrote something that doesn't work. <code>bindgen</code> should do the job.</p>\n"}, {"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": -1, "last_activity_date": 1542217369, "last_edit_date": 1542217369, "creation_date": 1542216912, "answer_id": 53305861, "question_id": 53299119, "link": "https://stackoverflow.com/questions/53299119/how-do-you-work-with-a-c-function-that-returns-a-shared-ptrt-when-calling-it/53305861#53305861", "title": "How do you work with a C++ function that returns a shared_ptr&lt;T&gt; when calling it from Rust over FFI?", "body": "<p>You can return a pointer to a dynamically allocated <code>std::shared_ptr</code></p>\n\n<p>In the C++ side:</p>\n\n<pre class=\"lang-cxx prettyprint-override\"><code>shared_ptr&lt;Foo&gt; create_foo();\nextern \"C\" void *rust_create_foo()\n{\n    shared_ptr&lt;Foo&gt; foo = create_foo();\n    return static_cast&lt;void*&gt;(new shared_ptr&lt;Foo&gt;(foo));        \n}\nextern \"C\" void rust_delete_foo(void *ptr)\n{\n    shared_ptr&lt;Foo&gt; *foo = static_cast&lt;shared_ptr&lt;Foo&gt;*&gt;(ptr);\n    delete foo;\n}\n</code></pre>\n\n<p>And in the Rust side:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" {\n    pub fn rust_create_foo() -&gt; *const c_void;\n    pub fn rust_delete_foo(foo: *const c_void);\n}\n</code></pre>\n\n<p>If you fail to call <code>rust_delete_foo</code> then the dynamically allocated pointer will leak and so the object will never be deallocated.</p>\n\n<p>Then, when you want to use the object, you will have to write wrapper functions that take that <code>void*</code>, do the cast and call the appropriate function.</p>\n"}], "owner": {"reputation": 126, "user_id": 10651210, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69f82885b4b34d792d719830d3159ce1?s=128&d=identicon&r=PG&f=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/10651210/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 753, "favorite_count": 0, "answer_count": 3, "score": 7, "last_activity_date": 1542297287, "creation_date": 1542194750, "last_edit_date": 1542296983, "question_id": 53299119, "link": "https://stackoverflow.com/questions/53299119/how-do-you-work-with-a-c-function-that-returns-a-shared-ptrt-when-calling-it", "title": "How do you work with a C++ function that returns a shared_ptr&lt;T&gt; when calling it from Rust over FFI?", "body": "<p>C++</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>shared_ptr&lt;Foo&gt; create_foo();\n</code></pre>\n\n<p>Rust</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" {\n    pub fn create_foo() -&gt; ???;\n}\n</code></pre>\n\n<p>Bindgen turns a <code>shared_ptr</code> into an opaque blob.</p>\n\n<p>I can't just take the raw pointer because then the C++ code is unaware that I have a reference to <code>Foo</code> and might call its deconstructor.</p>\n"}, {"tags": ["static", "rust", "lifetime", "mutable"], "answers": [{"comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1542189462, "post_id": 53297356, "comment_id": 93475665, "body": "Well, I was pretty close to it. I actually tried the <code>mut</code> modifyer after the static, but even if I read about the <code>FnMut</code> I forgot to use it! Thanks!!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 1, "creation_date": 1542190994, "post_id": 53297356, "comment_id": 93476628, "body": "@Netwave I optimized the code a litte bit \ud83d\ude38. Of course you can omit <code>res</code> as such and just write <code>.clone()</code> at the end of the first closure line: <code>cache.entry(value).or_insert_with(|| f(value)).clone()</code>"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1542295902, "last_edit_date": 1542295902, "creation_date": 1542189305, "answer_id": 53297356, "question_id": 53297128, "link": "https://stackoverflow.com/questions/53297128/why-cant-a-static-hashmap-for-a-memoizing-function-be-borrowed-as-mutable/53297356#53297356", "title": "Why cant a static hashmap for a memoizing function be borrowed as mutable?", "body": "<p>A variable is immutable by default in Rust, therefore you cannot mutate a variable that is not declared as <code>mut</code>. The <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#the-static-lifetime\" rel=\"nofollow noreferrer\"><code>'static</code> lifetime</a> does not influence the mutability, but only how long the variable lives.</p>\n\n<p>A <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\"><code>Fn</code></a> <em>\"[...] can be called repeatedly without mutating state.\"</em>. And exactly here is the problem. You want to mutate the environment (in this case your <code>HashMap</code>).</p>\n\n<p>You have to use a <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"nofollow noreferrer\"><code>FnMut</code></a> to be able to mutate the environment.</p>\n\n<p>If you use the <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\">Entry API</a>, you can simplify your code:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::Hash;\n\nfn memoize&lt;A, B, F&gt;(f: F, cache: &amp;'static mut HashMap&lt;A, B&gt;) -&gt; impl FnMut(A) -&gt; B\nwhere\n    A: Eq + Hash + Copy,\n    B: Clone,\n    F: Fn(A) -&gt; B,\n{\n    move |value: A| {\n        let res = cache.entry(value).or_insert_with(|| f(value));\n        res.clone()\n    }\n}\n</code></pre>\n\n<p>As a sidenote, if you compile your code with <code>#[feature(nll)]</code> the error message is actually very good.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow `*cache` as mutable, as `Fn` closures cannot mutate their captured variables\n  --&gt; src/lib.rs:14:13\n   |\n14 |             cache.insert(value, f(value.clone()));\n   |             ^^^^^ cannot borrow as mutable\n   |\nhelp: consider changing this to accept closures that implement `FnMut`\n</code></pre>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 362, "favorite_count": 0, "accepted_answer_id": 53297356, "answer_count": 1, "score": 3, "last_activity_date": 1542296018, "creation_date": 1542188649, "last_edit_date": 1542296018, "question_id": 53297128, "link": "https://stackoverflow.com/questions/53297128/why-cant-a-static-hashmap-for-a-memoizing-function-be-borrowed-as-mutable", "title": "Why cant a static hashmap for a memoizing function be borrowed as mutable?", "body": "<p>I'm trying to create a memoization function in <code>Rust</code>. The problem comes when getting a mutable reference for the cache <code>HashMap</code>. I'm not still confident with the type system and I'm struggling a bit.</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::Hash;\n\nfn memoize&lt;A, B, F&gt;(f: F, cache: &amp;'static HashMap&lt;A, B&gt;) -&gt; impl Fn(A) -&gt; B\nwhere\n    A: Eq + Hash + Copy,\n    B: Clone,\n    F: Fn(A) -&gt; B,\n{\n    move |value: A| {\n        if !cache.contains_key(&amp;value) {\n            cache.insert(value, f(value.clone()));\n        }\n        let res = cache.get(&amp;value).unwrap();\n        res.clone()\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content `**cache` as mutable\n  --&gt; src/lib.rs:12:13\n   |\n12 |             cache.insert(value, f(value.clone()));\n   |             ^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>Why cannot a static lifetime parameter be mutable?</p>\n"}, {"tags": ["rust", "reqwest"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 4, "last_activity_date": 1542182296, "creation_date": 1542182296, "answer_id": 53295410, "question_id": 53295387, "link": "https://stackoverflow.com/questions/53295387/why-does-creating-a-reqwest-client-panic-at-optionunwrap/53295410#53295410", "title": "Why does creating a Reqwest Client panic at Option::unwrap()?", "body": "<p>Quoting <a href=\"https://docs.rs/reqwest/0.9.5/reqwest/struct.Client.html#method.new\" rel=\"nofollow noreferrer\">the documentation of reqwest::Client::new</a></p>\n\n<blockquote>\n  <p>This method panics if native TLS backend cannot be created or initialized. Use <code>Client::builder()</code> if you wish to handle the failure as an <code>Error</code> instead of panicking.</p>\n</blockquote>\n"}], "owner": {"reputation": 115, "user_id": 9354514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3a6b458ede726b0c01adce9a4c1be38?s=128&d=identicon&r=PG&f=1", "display_name": "Nipun Garg", "link": "https://stackoverflow.com/users/9354514/nipun-garg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1598237433, "creation_date": 1542182190, "last_edit_date": 1542295766, "question_id": 53295387, "link": "https://stackoverflow.com/questions/53295387/why-does-creating-a-reqwest-client-panic-at-optionunwrap", "title": "Why does creating a Reqwest Client panic at Option::unwrap()?", "body": "<pre><code>extern crate reqwest;\n\nfn main() {\n    let client = reqwest::Client::new();\n}\n</code></pre>\n\n<p>When I run this I get this error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:345:21\n</code></pre>\n\n<p>I also tried it with the builder but the error remains same.</p>\n\n<pre><code>extern crate reqwest;\n\nfn main() {\n    let mut client = reqwest::Client::builder(); // Panics here \n    match client.build() {\n        Err(e) =&gt; {println!(\"{:?}\", e);}\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>Here the full stack backtrace of this code.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', libcore/option.rs:345:21\n    stack backtrace:\n       0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:511\n   5: std::panicking::continue_panic_fmt\n             at libstd/panicking.rs:426\n   6: rust_begin_unwind\n             at libstd/panicking.rs:337\n   7: core::panicking::panic_fmt\n             at libcore/panicking.rs:92\n   8: core::panicking::panic\n             at libcore/panicking.rs:53\n   9: &lt;core::option::Option&lt;T&gt;&gt;::unwrap\n             at /checkout/src/libcore/macros.rs:20\n  10: openssl::ssl::SslContextBuilder::set_options\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/ssl/mod.rs:905\n  11: openssl::ssl::connector::ctx\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/ssl/connector.rs:42\n  12: openssl::ssl::connector::SslConnectorBuilder::new\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.9.24/src/ssl/connector.rs:67\n  13: native_tls::imp::TlsConnector::builder\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/native-tls-0.1.5/src/imp/openssl.rs:186\n  14: native_tls::TlsConnector::builder\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/native-tls-0.1.5/src/lib.rs:390\n  15: reqwest::async_impl::client::ClientBuilder::new\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.8.6/src/async_impl/client.rs:79\n  16: reqwest::client::ClientBuilder::new\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.8.6/src/client.rs:63\n  17: reqwest::client::Client::builder\n             at /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.8.6/src/client.rs:281\n  18: project::proj::tp_app::uploader::start\n             at src/proj/tp_app/uploader.rs:4\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8454, "user_id": 958529, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c3ec25db39c63bab1a11037649e326b8?s=128&d=identicon&r=PG", "display_name": "halfelf", "link": "https://stackoverflow.com/users/958529/halfelf"}, "edited": false, "score": 0, "creation_date": 1542182385, "post_id": 53294663, "comment_id": 93471722, "body": "Also TRPL says this: <code>When the Deref trait is defined for the types involved, Rust will analyze the types and use Deref::deref as many times as necessary to get a reference to match the parameter\u2019s type.</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1542204943, "post_id": 53294663, "comment_id": 93485129, "body": "I don&#39;t think the duplicate target is appropriate. That question is about auto-dereferencing (which only happens for a method receiver); this question is about <code>Deref</code> coercion (which can happen at any coercion site)."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1542352587, "post_id": 53294663, "comment_id": 93545654, "body": "I think that <code>autoderef</code> applies also in the <code>function(&amp;&amp;&amp;&amp;&amp;x)</code> case, not only in the context of methods receivers.  In this case I could agree with tagging this question as duplicate, but @trentcl expresses another point of view. Some more consideration for helping to clarify?"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 5, "last_activity_date": 1542181362, "creation_date": 1542181362, "answer_id": 53295232, "question_id": 53294663, "link": "https://stackoverflow.com/questions/53294663/program-with-multiple-ampersand-works-fine/53295232#53295232", "title": "Program with multiple ampersand works fine", "body": "<p>From <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html#implicit-deref-coercions-with-functions-and-methods\" rel=\"noreferrer\">the Rust book</a>:</p>\n\n<blockquote>\n  <p>Deref coercion is a convenience that Rust performs on arguments to\n  functions and methods. Deref coercion converts a reference to a type\n  that implements Deref into a reference to a type that Deref can\n  convert the original type into. Deref coercion happens automatically\n  when we pass a reference to a particular type\u2019s value as an argument\n  to a function or method that doesn\u2019t match the parameter type in the\n  function or method definition. A sequence of calls to the deref method\n  converts the type we provided into the type the parameter needs.</p>\n</blockquote>\n\n<p>So basically, in function arguments the compiler will automatically remove any <code>&amp;</code> written or implied until it gets to a type that can be passed to the function.</p>\n"}, {"comments": [{"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1542270374, "post_id": 53295331, "comment_id": 93510451, "body": "I&#39;ve added a note to my answer, i&#39;m hope it clarifies what I&#39;m saying"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 3, "last_activity_date": 1542640447, "last_edit_date": 1542640447, "creation_date": 1542181888, "answer_id": 53295331, "question_id": 53294663, "link": "https://stackoverflow.com/questions/53294663/program-with-multiple-ampersand-works-fine/53295331#53295331", "title": "Program with multiple ampersand works fine", "body": "<p>Because the compiler automatically dereference the chain of references you can mentally think that it insert as many * as necessary to get the right type:</p>\n\n<pre><code>foo(&amp;&amp;&amp;f)\n</code></pre>\n\n<p>is converted to:</p>\n\n<pre><code>foo(*&amp;*&amp;*&amp;f)\n</code></pre>\n\n<p>that leads to the right invocation:</p>\n\n<pre><code>foo(f)\n</code></pre>\n\n<p>The insertions of as many <code>*</code> as needed is actually performed by <a href=\"https://doc.rust-lang.org/src/core/ops/deref.rs.html#86-90\" rel=\"nofollow noreferrer\">this blanket implementation</a> of <code>Deref</code> trait:</p>\n\n<pre><code>impl&lt;'a, T: ?Sized&gt; Deref for &amp;'a T {\n    type Target = T;\n\n    fn deref(&amp;self) -&gt; &amp;T { *self }\n}\n</code></pre>\n\n<p><strong>Note</strong>: I've update my answer because in the original I used the term <code>autoderef</code> in the wrong way, see <a href=\"https://stackoverflow.com/questions/53341819/what-is-the-relation-between-auto-dereferencing-and-deref-coercion\">this post</a> for details.  </p>\n"}], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "closed_date": 1542188807, "accepted_answer_id": 53295232, "answer_count": 2, "score": 4, "last_activity_date": 1542640447, "creation_date": 1542178650, "last_edit_date": 1542337499, "question_id": 53294663, "link": "https://stackoverflow.com/questions/53294663/program-with-multiple-ampersand-works-fine", "closed_reason": "Duplicate", "title": "Program with multiple ampersand works fine", "body": "<p>The following program works fine:</p>\n\n<pre><code>pub fn foo(_v: &amp;str) -&gt; bool {\n    false\n}\n\nfn main() {\n    let f = \"hello world\";\n    println!(\"{}\", foo(&amp;&amp;&amp;&amp;f)); // note the number of &amp; here\n}\n</code></pre>\n\n<p>In fact it works on passing any number of <code>&amp;</code>. How should I interpret what is going on ?</p>\n\n<p>My rust version:</p>\n\n<pre><code>$ rustc --version\nrustc 1.32.0-nightly (13dab66a6 2018-11-05)\n</code></pre>\n"}, {"tags": ["rust", "traits", "timing", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542162802, "post_id": 53291554, "comment_id": 93466152, "body": "<i>Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow</i> \u2014 I&#39;ve removed your sentence pertaining to that. Besides that, this is a top-notch first question; it&#39;s clear, concise, provides a code example, etc. Nicely done!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1542165142, "creation_date": 1542165142, "answer_id": 53292665, "question_id": 53291554, "link": "https://stackoverflow.com/questions/53291554/whats-a-clean-way-to-get-how-long-a-future-takes-to-resolve/53292665#53292665", "title": "What&#39;s a clean way to get how long a future takes to resolve?", "body": "<p>The act of writing the future is easy enough, and adding a chainable method is the same technique as that shown in <a href=\"https://stackoverflow.com/q/30540766/155423\">How can I add new methods to Iterator?</a>.</p>\n\n<p>The only really tricky aspect is deciding when the time starts \u2014 is it when the future is <em>created</em> or when it is <em>first polled</em>?</p>\n\n<p>I chose to use when it's first polled, as that seems more useful:</p>\n\n<pre><code>extern crate futures; // 0.1.25\nextern crate tokio; // 0.1.11\n\nuse std::time::{Duration, Instant};\n\nuse futures::{try_ready, Async, Future, Poll};\nuse tokio::{runtime::current_thread::Runtime, timer::Delay};\n\nstruct Timed&lt;Fut, F&gt;\nwhere\n    Fut: Future,\n    F: FnMut(&amp;Fut::Item, Duration),\n{\n    inner: Fut,\n    f: F,\n    start: Option&lt;Instant&gt;,\n}\n\nimpl&lt;Fut, F&gt; Future for Timed&lt;Fut, F&gt;\nwhere\n    Fut: Future,\n    F: FnMut(&amp;Fut::Item, Duration),\n{\n    type Item = Fut::Item;\n    type Error = Fut::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        let start = self.start.get_or_insert_with(Instant::now);\n\n        let v = try_ready!(self.inner.poll());\n\n        let elapsed = start.elapsed();\n        (self.f)(&amp;v, elapsed);\n\n        Ok(Async::Ready(v))\n    }\n}\n\ntrait TimedExt: Sized + Future {\n    fn timed&lt;F&gt;(self, f: F) -&gt; Timed&lt;Self, F&gt;\n    where\n        F: FnMut(&amp;Self::Item, Duration),\n    {\n        Timed {\n            inner: self,\n            f,\n            start: None,\n        }\n    }\n}\n\nimpl&lt;F: Future&gt; TimedExt for F {}\n\nfn main() {\n    let when = Instant::now() + Duration::from_millis(100);\n\n    let f = Delay::new(when).timed(|res, elapsed| println!(\"{:?} elapsed, got {:?}\", elapsed, res));\n\n    let mut runtime = Runtime::new().unwrap();\n    runtime.block_on(f).unwrap();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 402, "user_id": 531650, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f48c610bba004ec446b2ccebf3c1b20b?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/531650/adam"}, "is_accepted": false, "score": 1, "last_activity_date": 1591068893, "last_edit_date": 1591068893, "creation_date": 1580144679, "answer_id": 59935743, "question_id": 53291554, "link": "https://stackoverflow.com/questions/53291554/whats-a-clean-way-to-get-how-long-a-future-takes-to-resolve/59935743#59935743", "title": "What&#39;s a clean way to get how long a future takes to resolve?", "body": "<p>Shepmaster's answer is great. However, the version of <code>futures</code> they used is out-of-date and incompatible with stdlib futures. Here's my rewrite to use stdlib futures.</p>\n\n<pre><code>use pin_project::pin_project;\nuse std::future::Future;\nuse std::pin::Pin;\nuse std::task::{Context, Poll};\nuse std::time::{Duration, Instant};\nuse tokio::time; // 0.2\n\n/// A wrapper around a Future which adds timing data.\n#[pin_project]\nstruct Timed&lt;Fut, F&gt;\nwhere\n    Fut: Future,\n    F: FnMut(&amp;Fut::Output, Duration),\n{\n    #[pin]\n    inner: Fut,\n    f: F,\n    start: Option&lt;Instant&gt;,\n}\n\nimpl&lt;Fut, F&gt; Future for Timed&lt;Fut, F&gt;\nwhere\n    Fut: Future,\n    F: FnMut(&amp;Fut::Output, Duration),\n{\n    type Output = Fut::Output;\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        let this = self.project();\n        let start = this.start.get_or_insert_with(Instant::now);\n\n        match this.inner.poll(cx) {\n            // If the inner future is still pending, this wrapper is still pending.\n            Poll::Pending =&gt; Poll::Pending,\n\n            // If the inner future is done, measure the elapsed time and finish this wrapper future.\n            Poll::Ready(v) =&gt; {\n                let elapsed = start.elapsed();\n                (this.f)(&amp;v, elapsed);\n\n                Poll::Ready(v)\n            }\n        }\n    }\n}\n\ntrait TimedExt: Sized + Future {\n    fn timed&lt;F&gt;(self, f: F) -&gt; Timed&lt;Self, F&gt;\n    where\n        F: FnMut(&amp;Self::Output, Duration),\n    {\n        Timed {\n            inner: self,\n            f,\n            start: None,\n        }\n    }\n} \n\n// All futures can use the `.timed` method defined above\nimpl&lt;F: Future&gt; TimedExt for F {}\n\n#[tokio::main]\nasync fn main() {\n    let when = Instant::now() + Duration::from_millis(100);\n\n    let fut = time::delay_until(when.into())\n        .timed(|res, elapsed| println!(\"{:?} elapsed, got {:?}\", elapsed, res));\n    fut.await;\n}\n</code></pre>\n"}], "owner": {"reputation": 55, "user_id": 2460955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wRJjj.png?s=128&g=1", "display_name": "davidrjonas", "link": "https://stackoverflow.com/users/2460955/davidrjonas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 280, "favorite_count": 0, "accepted_answer_id": 53292665, "answer_count": 2, "score": 4, "last_activity_date": 1591068893, "creation_date": 1542156134, "last_edit_date": 1542162739, "question_id": 53291554, "link": "https://stackoverflow.com/questions/53291554/whats-a-clean-way-to-get-how-long-a-future-takes-to-resolve", "title": "What&#39;s a clean way to get how long a future takes to resolve?", "body": "<p>I'm working with Tokio doing some UDP stuff.</p>\n\n<p>I want to record the amount of time my UDP probe future takes to resolve. I came up with the following function, <code>time_future()</code>, to wrap a future and give me the result and a duration. The function seems very naive and I think Rust has the power to express the concept much more cleanly.</p>\n\n<p>My working code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=226bb285060d702727787af3aa0be5bc\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>extern crate futures; // 0.1.25\nextern crate tokio; // 0.1.11\n\nuse std::time::{Duration, Instant};\n\nuse futures::future::{lazy, ok};\nuse futures::Future;\nuse tokio::runtime::current_thread::Runtime;\nuse tokio::timer::Delay;\n\nstruct TimedFutureResult&lt;T, E&gt; {\n    elapsed: Duration,\n    result: Result&lt;T, E&gt;,\n}\n\nimpl&lt;T, E&gt; TimedFutureResult&lt;T, E&gt; {\n    pub fn elapsed_ms(&amp;self) -&gt; i64 {\n        return (self.elapsed.as_secs() * 1000 + (self.elapsed.subsec_nanos() / 1000000) as u64)\n            as i64;\n    }\n}\n\nfn time_future&lt;F: Future&gt;(f: F) -&gt; impl Future&lt;Item = TimedFutureResult&lt;F::Item, F::Error&gt;&gt; {\n    lazy(|| {\n        let start = Instant::now();\n\n        f.then(move |result| {\n            ok::&lt;TimedFutureResult&lt;F::Item, F::Error&gt;, ()&gt;(TimedFutureResult {\n                elapsed: start.elapsed(),\n                result: result,\n            })\n        })\n    })\n}\n\nfn main() {\n    let when = Instant::now() + Duration::from_millis(100);\n\n    let f = time_future(Delay::new(when)).then(|r| match r {\n        Ok(r) =&gt; {\n            println!(\"resolved in {}ms\", r.elapsed_ms());\n            r.result\n        }\n        _ =&gt; unreachable!(),\n    });\n\n    let mut runtime = Runtime::new().unwrap();\n    runtime.block_on(f).unwrap();\n}\n</code></pre>\n\n<p>How can I improve this and make it more idiomatic? Can I somehow get the interface to work similarly to <code>inspect()</code> or <code>then()</code>?</p>\n\n<pre><code>Delay::new(when)\n  .timed(|res, elapsed| println!(\"{}ms!\", elapsed))\n  .and_then(...);\n</code></pre>\n\n<p>I tried creating a <code>Timed</code> trait and implementing it for <code>Future</code> but I didn't feel at all confident in how I was going about it. The types just really threw me for a loop.</p>\n\n<p>Am I at least barking up the right tree?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542134864, "post_id": 53287384, "comment_id": 93457258, "body": "enable nll give a more precise error; <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1542135960, "post_id": 53287384, "comment_id": 93457756, "body": "I can&#39;t explain to you why it doesn&#39;t work, but here a solution, <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=e3c64132b2065080b23330b67d94da86\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. I wonder if we could add this to std, but I don&#39;t see any use case of this on a Vec. I think a hashmap would be more suitable for this kind of thing but without know all detail from your project it&#39;s impossible to be sure. <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/collections/hash_map/&hellip;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1542138146, "post_id": 53287384, "comment_id": 93458772, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on\">Double mutable borrow error in a loop happens even with NLL on</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542138230, "post_id": 53287384, "comment_id": 93458811, "body": "Also related: <a href=\"https://stackoverflow.com/q/53034769/279627\">If let borrow stays after return even with #!&#91;feature(nll)&#93;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542138381, "post_id": 53287384, "comment_id": 93458863, "body": "You aren&#39;t missing anything here. Your code is actually safe, but the borrow checker can&#39;t handle this case. The type checker infers a <i>single</i> lifetime for the first borrow, and that lifetime must be long enough to return <code>value</code>.  There aren&#39;t two different lifetimes for both branches of the <code>if let</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542143175, "post_id": 53287384, "comment_id": 93460742, "body": "Note that your while loop terminates once <code>v.len() == index</code>, which is one iteration too early. Stargateur&#39;s code fixes this issue as well."}, {"owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542147738, "post_id": 53287384, "comment_id": 93462556, "body": "Thanks all, I\u2019ll try @Stargateur\u2019s solution in the larger program and report back. I\u2019m working on a fast ordered map where the frequently accessed elements at one end is backed by a vector (actually a VecDeque) and the rest are kept in a BTreeMap, The above code comes from attempting to implement a HashMap-style entry API."}], "answers": [{"tags": [], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "is_accepted": false, "score": 1, "last_activity_date": 1542218083, "last_edit_date": 1542218083, "creation_date": 1542194604, "answer_id": 53299078, "question_id": 53287384, "link": "https://stackoverflow.com/questions/53287384/mutable-borrow-goes-out-of-scope-but-cant-re-borrow/53299078#53299078", "title": "Mutable borrow goes out of scope but can&#39;t re-borrow", "body": "<p>The key point is that, even with NLL, the lifetime of the return value spans the whole function. The fact that the function returns early on line 4 is not taken into account when deciding whether the <code>v</code> reference is accessible in the code lower down.</p>\n\n<p>The fix suggested by @Stargateur is to grow the vector if needed before accessing an element:</p>\n\n<pre><code>fn get_or_insert(v: &amp;mut Vec&lt;Option&lt;i32&gt;&gt;, index: usize, value: i32) -&gt; &amp;mut i32 {\n    if v.len() &lt; index {\n        v.resize(index + 1, None);\n    }\n    v[index].get_or_insert(value)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=e3c64132b2065080b23330b67d94da86\" rel=\"nofollow noreferrer\">playground link</a></p>\n\n<p><a href=\"https://github.com/1tgr/rust-top-map/blob/fcf18db951281f401574226e77944ae002e655cc/src/lib.rs#L138-L142\" rel=\"nofollow noreferrer\">Here's where I used the technique in the final code.</a></p>\n"}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1542218083, "creation_date": 1542133752, "last_edit_date": 1542194630, "question_id": 53287384, "link": "https://stackoverflow.com/questions/53287384/mutable-borrow-goes-out-of-scope-but-cant-re-borrow", "title": "Mutable borrow goes out of scope but can&#39;t re-borrow", "body": "<p>I'm having trouble understanding why I can't use <code>v</code> a second time, when it seems that the first mutable borrow has gone out of scope:</p>\n\n<pre><code>fn get_or_insert(v: &amp;mut Vec&lt;Option&lt;i32&gt;&gt;, index: usize, default: i32) -&gt; &amp;mut i32 {\n    if let Some(entry) = v.get_mut(index) { // &lt;-- first borrow here\n        if let Some(value) = entry.as_mut() {\n            return value;\n        }\n    }\n\n    // error[E0502]: cannot borrow `*v` as immutable because it is also borrowed as mutable    \n    while v.len() &lt;= index {                // &lt;-- compiler error here\n        v.push(None);\n    }\n\n    // error[E0499]: cannot borrow `*v` as mutable more than once at a time\n    let entry = v.get_mut(index).unwrap();  // &lt;-- compiler error here\n    *entry = Some(default);\n    entry.as_mut().unwrap()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=cb0595cef839760932a61488e65cf375\" rel=\"nofollow noreferrer\">playground link</a></p>\n\n<p>Do I have my variable scopes wrong, or is the borrow checker protecting me from something I'm not seeing?</p>\n\n<p><strong>Edit:</strong> the error message with NLL enabled is pretty good:</p>\n\n<pre><code>error[E0502]: cannot borrow `*v` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:10:11\n   |\n3  | fn get_or_insert(v: &amp;mut Vec&lt;Option&lt;i32&gt;&gt;, index: usize, default: i32) -&gt; &amp;mut i32 {\n   |                     - let's call the lifetime of this reference `'1`\n4  |     if let Some(entry) = v.get_mut(index) {\n   |                          - mutable borrow occurs here\n5  |         if let Some(value) = entry.as_mut() {\n6  |             return value;\n   |                    ----- returning this value requires that `*v` is borrowed for `'1`\n...\n10 |     while v.len() &lt;= index {\n   |           ^ immutable borrow occurs here\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1542117904, "post_id": 53280539, "comment_id": 93447163, "body": "@Stargateur there you go. Any idea on how I could solve this?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542126430, "post_id": 53280539, "comment_id": 93452766, "body": "That much better but your question is still unclear. We don&#39;t know if you want to be able to deserialize <code>r#&quot;{&quot;single&quot;: [49, 11.75, 0]}&quot;#</code> or <code>r#&quot;[[49, 11.75, 0], [42, 9, 1]]&quot;#</code> or both."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1542126870, "post_id": 53280539, "comment_id": 93453068, "body": "What trouble you with <code>let parent: Vec&lt;Child&gt; = serde_json::from_str(parent_data).unwrap()</code> ?"}], "answers": [{"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1542136343, "post_id": 53285352, "comment_id": 93457954, "body": "Thanks @Stargateur indeed I just needed to implement manually <code>Deserialize</code> for <code>Child</code> instead of deriving it"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1542126336, "creation_date": 1542126336, "answer_id": 53285352, "question_id": 53280539, "link": "https://stackoverflow.com/questions/53280539/custom-deserialization-of-an-array-or-array-of-values-using-serde/53285352#53285352", "title": "Custom deserialization of an array or array of values using Serde", "body": "<p>I'm not sure if this is what you want but using the <a href=\"https://serde.rs/deserialize-map.html\" rel=\"nofollow noreferrer\">doc for deserialize a map</a>:</p>\n\n<pre><code>extern crate serde; // 1.0.80\nextern crate serde_json; // 1.0.32\n\nuse serde::de::{Deserialize, Deserializer, SeqAccess, Visitor};\nuse std::fmt;\n\n#[derive(Debug)]\nstruct Child {\n    a: u64,\n    b: f32,\n    c: usize,\n}\n\nstruct ChildVisitor;\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for ChildVisitor {\n    type Value = Child;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"[u64, f32, usize]\")\n    }\n\n    fn visit_seq&lt;A: SeqAccess&lt;'de&gt;&gt;(self, mut access: A) -&gt; Result&lt;Self::Value, A::Error&gt; {\n        let a = access.next_element::&lt;u64&gt;()?.unwrap_or(Default::default());\n\n        let b = access.next_element::&lt;f32&gt;()?.unwrap_or(Default::default());\n\n        let c = access\n            .next_element::&lt;usize&gt;()?\n            .unwrap_or(Default::default());\n\n        Ok(Child { a, b, c })\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Child {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        deserializer.deserialize_seq(ChildVisitor {})\n    }\n}\n\n#[derive(Debug)]\nstruct Parent {\n    childs: Vec&lt;Child&gt;,\n}\n\nstruct ParentVisitor {}\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for ParentVisitor {\n    type Value = Parent;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"[[Child]]\")\n    }\n\n    fn visit_seq&lt;A: SeqAccess&lt;'de&gt;&gt;(self, mut access: A) -&gt; Result&lt;Self::Value, A::Error&gt; {\n        let mut childs = Vec::with_capacity(access.size_hint().unwrap_or(0));\n\n        while let Some(child) = access.next_element::&lt;Child&gt;()? {\n            childs.push(child);\n        }\n\n        Ok(Parent { childs })\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Parent {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        deserializer.deserialize_seq(ParentVisitor {})\n    }\n}\n\nfn main() {\n    let child_data = r#\"[49, 11.75, 0]\"#;\n    let child: Child = serde_json::from_str(child_data).unwrap();\n    println!(\"Child = {:#?}\", child);\n\n    let parent_data = r#\"[[49, 11.75, 0], [42, 9, 1]]\"#;\n    let parent: Parent = serde_json::from_str(parent_data).unwrap();\n    println!(\"Parent = {:#?}\", parent);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1542136990, "post_id": 53286697, "comment_id": 93458246, "body": "Thanks a lot @dtolnay that&#39;s a super neat way to do it indeed. I didn&#39;t know (or understand) serde could deserialize struct from arrays directly"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542295647, "post_id": 53286697, "comment_id": 93525720, "body": "I&#39;d suggest adding the <code>transparent</code> example to the linked duplicate."}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1542130817, "creation_date": 1542130817, "answer_id": 53286697, "question_id": 53280539, "link": "https://stackoverflow.com/questions/53280539/custom-deserialization-of-an-array-or-array-of-values-using-serde/53286697#53286697", "title": "Custom deserialization of an array or array of values using Serde", "body": "<p>I would implement this as:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_json;\n\n#[derive(Deserialize, Debug)]\n#[serde(transparent)]\nstruct Parent {\n    array: Vec&lt;Child&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Child {\n    a: u64,\n    b: f32,\n    c: usize,\n}\n\nfn main() {\n    let j = r#\" [[49, 11.75, 0], [42, 9, 1]] \"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;Parent&gt;(j).unwrap());\n}\n</code></pre>\n\n<p>Or more concisely:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_json;\n\n#[derive(Deserialize, Debug)]\nstruct Child {\n    a: u64,\n    b: f32,\n    c: usize,\n}\n\nfn main() {\n    let j = r#\" [[49, 11.75, 0], [42, 9, 1]] \"#;\n    let array: Vec&lt;Child&gt; = serde_json::from_str(j).unwrap();\n    println!(\"{:#?}\", array);\n}\n</code></pre>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1940, "favorite_count": 0, "closed_date": 1542295621, "accepted_answer_id": 53286697, "answer_count": 2, "score": 3, "last_activity_date": 1542130817, "creation_date": 1542110207, "last_edit_date": 1542117862, "question_id": 53280539, "link": "https://stackoverflow.com/questions/53280539/custom-deserialization-of-an-array-or-array-of-values-using-serde", "closed_reason": "Duplicate", "title": "Custom deserialization of an array or array of values using Serde", "body": "<p>I would like to build a custom deserializer to deserialize an array of arrays of values into a <code>Vec&lt;Child&gt;</code> where I have already written a custom serde deserializer to parse an array of values into a <code>Child</code>.</p>\n\n<p>One idea would be to add a customer deserializer for a <code>Vec&lt;Child&gt;</code> directly but I was wondering whether a more elegant solution would exist.</p>\n\n<hr>\n\n<p>As an illustration I'm trying to make something like the below but with field <code>array</code> in Parent instead of <code>single</code>.</p>\n\n<pre><code>extern crate serde_json; // 1.0.32\nextern crate serde; // 1.0.80\n#[macro_use] extern crate serde_derive;\n\nuse serde::de::{Deserializer, SeqAccess, Visitor};\nuse std::fmt;\n\n#[derive(Debug, Deserialize)]\nstruct Parent {\n    #[serde(deserialize_with = \"parse_child\")]\n    single: Child,\n    //#[serde(deserialize_with = \"parse_child\")]\n    //array: Vec&lt;Child&gt;,\n}\n\n#[derive(Default, Debug, Deserialize)]\nstruct Child {\n    a: u64,\n    b: f32,\n    c: usize,\n}\n\nfn parse_child&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Child, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    struct ChildParser;\n    impl&lt;'de&gt; Visitor&lt;'de&gt; for ChildParser\n    {\n        type Value = Child;\n\n        fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n            formatter.write_str(\"[u64, f32, usize]\")\n        }\n\n        fn visit_seq&lt;A: SeqAccess&lt;'de&gt;&gt;(self, mut seq: A) -&gt; Result&lt;Self::Value, A::Error&gt; {\n            println!(\"In custom deserializer\");\n            let mut child = Child { ..Default::default() };\n\n            let tmp = seq.next_element::&lt;u64&gt;()?;\n            if let Some(a) = tmp {\n                child.a = a;\n            };\n\n            let tmp = seq.next_element::&lt;f32&gt;()?;\n            if let Some(b) = tmp {\n                child.b = b;\n            };\n\n            let tmp = seq.next_element::&lt;usize&gt;()?;\n            if let Some(c) = tmp {\n                child.c = c;\n            };\n\n            Ok(child)\n        }\n    }\n\n    deserializer.deserialize_any(ChildParser{})\n}\n\nfn main() {\n    let child_data = r#\"[49, 11.75, 0]\"#;\n    let child : Child = serde_json::from_str(child_data).unwrap();\n    println!(\"Child = {:?}\", &amp;child);\n\n    let parent_data = r#\"{\"single\": [49, 11.75, 0]}\"#;\n    let parent : Parent = serde_json::from_str(parent_data).expect(\"to be able to deserialize it\");\n    println!(\"Parent = {:?}\", &amp;parent);\n\n}\n</code></pre>\n\n<p>Link to a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0b85ef5751659d0ff0a0b7756564f8de\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Sample input I want to deserialize: <code>[[49, 11.75, 0], [42, 9, 1]]</code></p>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1542098579, "post_id": 53276642, "comment_id": 93435943, "body": "There is a reason why I edited your post, please don&#39;t roll it back unless you think I did something wrong. <a href=\"https://meta.stackoverflow.com/questions/260776/should-i-remove-fluff-when-editing-questions\">Removing fluff</a> is appreciated by stackoverflow! Also there is not <i>&#39;the best&#39;</i> solution, so I changed it to <i>&#39;a good&#39;</i> solution which is better than asking for an absolute."}, {"owner": {"reputation": 826, "user_id": 542825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8450ee8725542418165ffbb0921a7024?s=128&d=identicon&r=PG", "display_name": "Ned Ruggeri", "link": "https://stackoverflow.com/users/542825/ned-ruggeri"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542216293, "post_id": 53276642, "comment_id": 93492155, "body": "Edits that change sentiments or remove personal expressions feel uncomfortable to me and like putting words in my mouth. (Edits for clarity, correction, or for punctuation or spelling seem not weird). For instance: maybe you think there is no &quot;best&quot;, but perhaps I do. In fact, I <i>do</i> think you&#39;re right, yet it is odd to see one&#39;s own writing changed. The norms of SO are what they are, so you must do as you see fit, and it is I who must conform. OTOH, I hope SO has taken into account a feeling that maybe others hold, too. I hope that you receive this comment as in the spirit of honest feedback."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542266664, "post_id": 53276642, "comment_id": 93508724, "body": "I understand, but stackoverflow tries to be simple. A simple, well formed question, no phrasing around and no fluff. On the other hand answer should also be very straight and do not contain any unneeded things. I feel you, if you say, that the question is not your wording anymore, but I think, that is okay, because you are not asking only for yourself, but for everyone who has the same/simlar question and needs an answer. I hope you do understand."}], "answers": [{"comments": [{"owner": {"reputation": 826, "user_id": 542825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8450ee8725542418165ffbb0921a7024?s=128&d=identicon&r=PG", "display_name": "Ned Ruggeri", "link": "https://stackoverflow.com/users/542825/ned-ruggeri"}, "edited": false, "score": 0, "creation_date": 1542097652, "post_id": 53276680, "comment_id": 93435476, "body": "Thank you; you are indeed correct. I had confused myself because I was using references to Rcs in my actual code, which made things more complicated.  Thanks for the help!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1542098478, "post_id": 53276680, "comment_id": 93435898, "body": "You even can do <code>let animal: Rc&lt;Animal&gt; = horse</code>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 6, "last_activity_date": 1542098454, "last_edit_date": 1542098454, "creation_date": 1542097372, "answer_id": 53276680, "question_id": 53276642, "link": "https://stackoverflow.com/questions/53276642/casting-rcconcretetype-to-an-rctrait/53276680#53276680", "title": "Casting Rc&lt;ConcreteType&gt; to an Rc&lt;Trait&gt;", "body": "<p>I <em>think</em> that your solution is correct, while I'm not a specialist for unsafe code. But, you do not have to use unsafe code to do such simple things as upcasting:</p>\n\n<pre><code>use std::rc::Rc;\n\ntrait Animal {}\n\nstruct Horse;\n\nimpl Animal for Horse {}\n\nfn main() {\n    let horse = Rc::new(Horse);\n    let animal = horse as Rc&lt;Animal&gt;;\n}\n</code></pre>\n\n<p>If you want to pass it to a function, you do not even have to cast:</p>\n\n<pre><code>fn gimme_an_animal(_animal: Rc&lt;Animal&gt;) {}\n\nfn main() {\n    let horse = Rc::new(Horse);\n    gimme_an_animal(horse);\n}\n</code></pre>\n\n<p>Because <code>Horse</code> implements <code>Animal</code>, an horse <strong>is</strong> an animal. You do not have to do anything special for casting it. Note that this transformation is destructive, and you cannot make an <code>Rc&lt;Horse&gt;</code> from an <code>Rc&lt;Animal&gt;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 826, "user_id": 542825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8450ee8725542418165ffbb0921a7024?s=128&d=identicon&r=PG", "display_name": "Ned Ruggeri", "link": "https://stackoverflow.com/users/542825/ned-ruggeri"}, "edited": false, "score": 0, "creation_date": 1542216283, "post_id": 53281123, "comment_id": 93492148, "body": "Thank you for your detailed answer! I figured something like that must have been happening behind the scenes. Thank you!"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1542151522, "last_edit_date": 1542151522, "creation_date": 1542112507, "answer_id": 53281123, "question_id": 53276642, "link": "https://stackoverflow.com/questions/53276642/casting-rcconcretetype-to-an-rctrait/53281123#53281123", "title": "Casting Rc&lt;ConcreteType&gt; to an Rc&lt;Trait&gt;", "body": "<p>The <a href=\"https://stackoverflow.com/a/53276680/279627\">answer by Boiethios</a> already explains that upcasting can be explicitly performed using <code>as</code>, or even happens implicitly in certain situaions. I'd like to add a few more detail on the mechanisms.</p>\n\n<p>I'll start with explaining why your unsafe code works correctly.</p>\n\n<pre><code>let animal = unsafe {\n    let ptr = Rc::into_raw(horse);\n    Rc::&lt;Animal&gt;::from_raw(ptr)\n};\n</code></pre>\n\n<p>The first line in the <code>unsafe</code> block consumes <code>horse</code> and returns a <code>*const Horse</code>, which is a pointer to a concrete type. The pointer is exactly what you'd expect it to be \u2013 the memory address of <code>horse</code>'s data (ignoring the fact that in your example <code>Horse</code> is zero-sized and has no data). In the second line, we call <code>Rc::from_raw()</code>; let's look at the protoype of that function:</p>\n\n<pre><code>pub unsafe fn from_raw(ptr: *const T) -&gt; Rc&lt;T&gt;\n</code></pre>\n\n<p>Since we are calling this function for <code>Rc::&lt;Animal&gt;</code>, the expected argument type is <code>*const Animal</code>. Yet the <code>ptr</code> we have has type <code>*const Horse</code>, so why does the compiler accept the code? The answer is that the compiler performs an <em>unsized coercion</em>, a type of implicit cast that is <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">performed in certain places for certain types</a>. Specifically, we convert a pointer to a concrete type to a pointer to <em>any</em> type implementing the <code>Animal</code> trait. Since we don't know the exact type, now the pointer isn't a mere memory address anymore \u2013 it's a memory address together with an identifier of the actual type of the object, a so-called <em>fat pointer</em>. This way, the <code>Rc</code> created from the fat pointer can retain the information of the underlying concrete type, and can call the correct methods for <code>Horse</code>'s implementation of <code>Animal</code> (if there are any; in your example <code>Animal</code> doesn't have any functions, but of course this should continue to work if there are).</p>\n\n<p>We can see the difference between the two kinds of pointer by printing their size</p>\n\n<pre><code>let ptr = Rc::into_raw(horse);\nprintln!(\"{}\", std::mem::size_of_val(&amp;ptr));\nlet ptr: *const Animal = ptr;\nprintln!(\"{}\", std::mem::size_of_val(&amp;ptr));\n</code></pre>\n\n<p>This code first makes <code>ptr</code> a <code>*const Horse</code>, prints the size of the pointer, then uses an unsized coercion to convert <code>ptr</code> to and <code>*const Animal</code> and prints its size again. On a 64-bit system, this will print</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>8\n16\n</code></pre>\n\n<p>The first one is just a simple memory address, while the second one is a memory address together with information on the concrete type of the pointee. (Specifically, the fat pointer contains a pointer to the <a href=\"https://en.wikipedia.org/wiki/Virtual_method_table\" rel=\"nofollow noreferrer\">virtual method table</a>.)</p>\n\n<p>Now let's look at what happens in the code in Boethios' answer</p>\n\n<pre><code>let animal = horse as Rc&lt;Animal&gt;;\n</code></pre>\n\n<p>or equivalently</p>\n\n<pre><code>let animal: Rc&lt;Animal&gt; = horse;\n</code></pre>\n\n<p>also perform an unsized coercion. How does the compiler know how to do this for a <code>Rc</code> rather than a raw pointer? The answer is that <a href=\"https://doc.rust-lang.org/nightly/std/rc/struct.Rc.html#impl-CoerceUnsized%3CRc%3CU%3E%3E\" rel=\"nofollow noreferrer\">the trait <code>CoerceUnsized</code> exists specifically for this purpose</a>. You can read the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\" rel=\"nofollow noreferrer\">RFC on coercions for dynamically sized types</a> for further details.</p>\n"}], "owner": {"reputation": 826, "user_id": 542825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8450ee8725542418165ffbb0921a7024?s=128&d=identicon&r=PG", "display_name": "Ned Ruggeri", "link": "https://stackoverflow.com/users/542825/ned-ruggeri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "accepted_answer_id": 53281123, "answer_count": 2, "score": 2, "last_activity_date": 1542151522, "creation_date": 1542097210, "last_edit_date": 1542146423, "question_id": 53276642, "link": "https://stackoverflow.com/questions/53276642/casting-rcconcretetype-to-an-rctrait", "title": "Casting Rc&lt;ConcreteType&gt; to an Rc&lt;Trait&gt;", "body": "<p><code>Horse</code> is a struct which implements the <code>Animal</code> trait. I have an <code>Rc&lt;Horse&gt;</code> and a function that needs to take in an <code>Rc&lt;Animal&gt;</code>, so I want to convert from <code>Rc&lt;Horse&gt;</code> to <code>Rc&lt;Animal&gt;</code>.</p>\n\n<p>I did this:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct Horse;\n\ntrait Animal {}\n\nimpl Animal for Horse {}\n\nfn main() {\n    let horse = Rc::new(Horse);\n    let animal = unsafe {\n        // Consume the Rc&lt;Horse&gt;\n        let ptr = Rc::into_raw(horse);\n        // Now it's an Rc&lt;Animal&gt; pointing to the same data!\n        Rc::&lt;Animal&gt;::from_raw(ptr)\n    };\n}\n</code></pre>\n\n<p>Is this a good solution? Is it correct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6779, "user_id": 1342941, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a77b35477fab1e681d7e14f7ea78b178?s=128&d=identicon&r=PG", "display_name": "happydave", "link": "https://stackoverflow.com/users/1342941/happydave"}, "edited": false, "score": 8, "creation_date": 1542081307, "post_id": 53273517, "comment_id": 93429949, "body": "I&#39;m no rust expert, but it seems like the problem is that you never mention the generic parameter (uppercase) C in the function, so it can&#39;t infer its type from the arguments.  So you probably need to drop C or explicitly supply the types when calling lifetime_tester"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1542087111, "post_id": 53273517, "comment_id": 93431354, "body": "There is no link between <code>C</code> and <code>c</code>, your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> don&#39;t make much sense."}], "answers": [{"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 6, "last_activity_date": 1542295266, "last_edit_date": 1542295266, "creation_date": 1542097678, "answer_id": 53276747, "question_id": 53273517, "link": "https://stackoverflow.com/questions/53273517/why-is-a-type-annotation-needed-on-a-function-that-declares-more-generic-types-t/53276747#53276747", "title": "Why is a type annotation needed on a function that declares more generic types than it uses?", "body": "<p>Since there is no link between the arguments to your function and the generic type <code>C</code>, the compiler has no idea which type you mean to replace <code>C</code> in the function call. In this case your code doesn't even use the type <code>C</code> so it doesn't matter, but Rust is big about \"local reasoning\" - i.e. it won't peek inside your function to determine you're not using <code>C</code> at the syntax checking stage. </p>\n\n<p>You can explicitly tell it what your types are using the \"turbofish\" operator, <code>::&lt;&gt;</code>, like this</p>\n\n<pre><code>println!(\"{}\", lifetime_tester::&lt;_, _, i32&gt;(a, b, &amp;c));\n</code></pre>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 0, "accepted_answer_id": 53276747, "answer_count": 1, "score": 0, "last_activity_date": 1542295266, "creation_date": 1542081063, "last_edit_date": 1542295238, "question_id": 53273517, "link": "https://stackoverflow.com/questions/53273517/why-is-a-type-annotation-needed-on-a-function-that-declares-more-generic-types-t", "title": "Why is a type annotation needed on a function that declares more generic types than it uses?", "body": "<pre><code>fn lifetime_tester&lt;A, B, C&gt;(a: Box&lt;A&gt;, b: Box&lt;B&gt;, c: &amp;i32) -&gt; &amp;i32 {\n    c\n}\n\nfn main() {\n    let a = Box::new(String::from(\"Test1\"));\n    let b = Box::new(55 as i32);\n    let c: i32;\n    {\n        c = 34 as i32;\n    }\n    println!(\"{}\", lifetime_tester(a, b, &amp;c));\n}\n</code></pre>\n\n<p>Error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:12:20\n   |\n12 |     println!(\"{}\", lifetime_tester(a, b, &amp;c));\n   |                    ^^^^^^^^^^^^^^^ cannot infer type for `C`\n</code></pre>\n\n<p>I am baffled about where a \"type annotation\" needs to go. I've specified a return type as <code>&amp;i32</code>, I've specified an argument type of <code>&amp;i32</code> and I've also specified that <code>c</code> is an <code>i32</code>.</p>\n"}, {"tags": ["rust", "nix", "musl"], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1542103396, "post_id": 53277737, "comment_id": 93438839, "body": "Robert, please indent (code-)blocks with four spaces instead of three backticks."}, {"owner": {"reputation": 4592, "user_id": 1556108, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/1b3e85776ce504861dbf96a3c8f7980e?s=128&d=identicon&r=PG", "display_name": "LB2", "link": "https://stackoverflow.com/users/1556108/lb2"}, "edited": false, "score": 0, "creation_date": 1582942317, "post_id": 53277737, "comment_id": 106960945, "body": "Note that referencing <code>pkgsMusl</code> or any package inside of it causes a massive build that runs for hours, thus limiting its usability.  Some packages don&#39;t even build without some overrides (or at least in pkgsStatic space).  But it seems to be the only way to get MUSL clang if you need to build with clang using MUSL library for static compilation. :("}], "tags": [], "owner": {"reputation": 4232, "user_id": 428586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yHNYS.jpg?s=128&g=1", "display_name": "Robert Hensing", "link": "https://stackoverflow.com/users/428586/robert-hensing"}, "is_accepted": true, "score": 3, "last_activity_date": 1542103373, "last_edit_date": 1542103373, "creation_date": 1542101230, "answer_id": 53277737, "question_id": 53272197, "link": "https://stackoverflow.com/questions/53272197/how-do-i-override-the-libc-in-a-nix-package-to-be-musl/53277737#53277737", "title": "How do I override the libc in a Nix package to be musl?", "body": "<p>Try the <code>pkgsMusl</code> convenience attribute <a href=\"https://github.com/NixOS/nixpkgs/blob/dd3aca2d0b9dcb4888779bfb08805d79596607c9/pkgs/top-level/stage.nix#L136\" rel=\"nofollow noreferrer\">(source)</a></p>\n\n<pre><code>rec {\n  pkgs = (import &lt;nixpkgs&gt; {}).pkgsMusl;\n  # ...\n}\n</code></pre>\n"}], "owner": {"reputation": 1149, "user_id": 1570219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/26bf6dcd3a00a8b83144efdfcdb3071c?s=128&d=identicon&r=PG", "display_name": "Julian Stecklina", "link": "https://stackoverflow.com/users/1570219/julian-stecklina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 823, "favorite_count": 1, "accepted_answer_id": 53277737, "answer_count": 1, "score": 4, "last_activity_date": 1542103373, "creation_date": 1542070165, "question_id": 53272197, "link": "https://stackoverflow.com/questions/53272197/how-do-i-override-the-libc-in-a-nix-package-to-be-musl", "title": "How do I override the libc in a Nix package to be musl?", "body": "<p>I'm using Nix as a dependency manager for a Rust program. I have the following default.nix (simplified, but working):</p>\n\n<pre><code>rec {\n  pkgs = import &lt;nixpkgs&gt; {};\n\n  hello = pkgs.stdenv.mkDerivation rec {\n    name = \"rust-hello\";\n\n    buildInputs = [\n      pkgs.rustc\n    ];\n\n    src = ./source;\n\n    buildPhase = \"rustc main.rs -o rust-hello\";\n    installPhase = ''\n      mkdir -p $out/bin\n      install -s rust-hello $out/bin\n    '';\n  };\n}\n</code></pre>\n\n<p>I'm trying to override the libc for all dependencies (including the Rust compiler) to be pkg.musl, but I fail to do so. How can this be achieved?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1542066199, "post_id": 53271597, "comment_id": 93426850, "body": "Basically, <code>text_to_convert</code> includes the new line character, but your function can&#39;t handler non-hexadecimal characters. Duplicate applied to your question: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=94bae32ba5024f4c942c68873b82bf42\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 73, "user_id": 6184106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c27da4d6722464209264f99044d51fad?s=128&d=identicon&r=PG&f=1", "display_name": "jupper", "link": "https://stackoverflow.com/users/6184106/jupper"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1542066565, "post_id": 53271597, "comment_id": 93426954, "body": "Thank you, it&#39;s working now!"}], "owner": {"reputation": 73, "user_id": 6184106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c27da4d6722464209264f99044d51fad?s=128&d=identicon&r=PG&f=1", "display_name": "jupper", "link": "https://stackoverflow.com/users/6184106/jupper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 856, "favorite_count": 0, "closed_date": 1542072620, "answer_count": 0, "score": 0, "last_activity_date": 1542065330, "creation_date": 1542065330, "question_id": 53271597, "link": "https://stackoverflow.com/questions/53271597/rust-thread-main-panicked-at-called-optionunwrap-on-a-none-value", "closed_reason": "Duplicate", "title": "Rust &quot;thread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;&quot;", "body": "<p>I'm learning some rust and do the challanges from cryptopals, <a href=\"https://cryptopals.com/sets/1/challenges/1\" rel=\"nofollow noreferrer\">https://cryptopals.com/sets/1/challenges/1</a> , I want to convert a hex String to Base64 String. </p>\n\n<p>Therefor I wrote this programm, but it throws an error, when I execute it.</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut text_to_convert = String::new();\n    println!(\"Please enter the string to convert!\");\n    io::stdin().read_line(&amp;mut text_to_convert).expect(\"Failed to read line\");\n\n    println!(\"Base64: {}\", string_to_base64(text_to_convert));\n}\n\nfn string_to_base64(text: String) -&gt; String {\n    let mut base64_string = String::new();\n    for c in text.chars() {\n        base64_string.push_str(&amp;hex_to_bits(c));\n    }\n    base64_string\n}\n\nfn hex_to_bits(c: char) -&gt; String {\n    let mut result = String::new();\n    let x = c.to_digit(16).unwrap();\n    let mut tmp = x;\n    while tmp != 0 {\n        result = (tmp % 2).to_string() + &amp;result;\n        tmp = tmp/2;\n    }\n    while result.len() &lt; 4 {\n        result = \"0\".to_string() + &amp;result;\n    }\n    print!(\"{}\", result);\n    result\n}\n</code></pre>\n\n<p>To learn the language I want not to use crates and programm the functions I need by myself. So I started with a hex to bits converter.</p>\n\n<p>When I start my program I get this error:</p>\n\n<pre><code>cargo run\nFinished dev [unoptimized + debuginfo] target(s) in 0.0 secs\nRunning `target/debug/nr1`\nPlease enter the string to convert!\nF\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value',     /checkout/src/libcore/option.rs:335:21\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n1010\n</code></pre>\n"}, {"tags": ["rust", "for-in-loop"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1542064361, "post_id": 53271083, "comment_id": 93426366, "body": "Is this the <code>LinkedList</code> from the standard library? If not, perhaps it is a circularly linked list that iterates infinitely by linking the tail to the head."}, {"owner": {"reputation": 4243, "user_id": 10319970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FUiGY.jpg?s=128&g=1", "display_name": "streletss", "link": "https://stackoverflow.com/users/10319970/streletss"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1542064485, "post_id": 53271083, "comment_id": 93426396, "body": "Yes, it is. <code>use std::collections::LinkedList;</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1542070293, "post_id": 53271083, "comment_id": 93427774, "body": "even better <code>self.body.iter().any(|block| block.x == x &amp;&amp; block.y == y)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1542077434, "post_id": 53271083, "comment_id": 93429167, "body": "The presented code has numerous non-idiomatic aspects, so I would not trust that tutorial strongly."}], "answers": [{"tags": [], "owner": {"reputation": 103, "user_id": 10537682, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/81ee70db99df436c479d25584e74efbb?s=128&d=identicon&r=PG", "display_name": "dave", "link": "https://stackoverflow.com/users/10537682/dave"}, "is_accepted": true, "score": 2, "last_activity_date": 1542070515, "creation_date": 1542070515, "answer_id": 53272234, "question_id": 53271083, "link": "https://stackoverflow.com/questions/53271083/does-manually-breaking-early-from-a-for-loop-make-sense-when-testing-if-a-linked/53272234#53272234", "title": "Does manually breaking early from a for loop make sense when testing if a linked list contains an item?", "body": "<p>As written in the original 'tutorial' version, it doesn't seem to look at the last element. Consider a list of length 2 where the second element is the one you're looking for.</p>\n\n<p>After the first comparison, <code>ch</code> becomes 1.  It's now equal to the list length minus 1, so you break out of the loop just before the loop would (if executed one more time) find the last element.</p>\n\n<p>That doesn't make much sense, so I conclude yours is not only shorter but correct.</p>\n"}], "owner": {"reputation": 4243, "user_id": 10319970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FUiGY.jpg?s=128&g=1", "display_name": "streletss", "link": "https://stackoverflow.com/users/10319970/streletss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 53272234, "answer_count": 1, "score": 3, "last_activity_date": 1542077400, "creation_date": 1542062110, "last_edit_date": 1542077400, "question_id": 53271083, "link": "https://stackoverflow.com/questions/53271083/does-manually-breaking-early-from-a-for-loop-make-sense-when-testing-if-a-linked", "title": "Does manually breaking early from a for loop make sense when testing if a linked list contains an item?", "body": "<p>While following a basic tutorial, I'm faced with this function: </p>\n\n<pre><code>use std::collections::LinkedList;\n\n// ...\n\npub fn contains(&amp;self, x: i32, y: i32) -&gt; bool {\n    let mut ch = 0;\n    let list: &amp;LinkedList&lt;Block&gt; = &amp;self.body;\n\n    for block in list {\n        if block.x == x &amp;&amp; block.y == y {\n            return true;\n        }\n        ch += 1;\n        if ch == list.len() - 1 {\n            break;\n        }\n    }\n\n    return false;\n}\n</code></pre>\n\n<p>It felt obvious that I could get rid of the whole <code>if ch == list.len() - 1</code> part and write it like so:</p>\n\n<pre><code>pub fn contains(&amp;self, x: i32, y: i32) -&gt; bool {\n    for block in &amp;self.body {\n        if block.x == x &amp;&amp; block.y == y {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>It seems to work fine, but maybe there is something that I've missed? Is it just an unnecessary overhead that an author of the tutorial made by mistake?</p>\n"}, {"tags": ["string", "rust", "sum", "byte", "slice"], "answers": [{"comments": [{"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 1, "creation_date": 1542056987, "post_id": 53269848, "comment_id": 93423960, "body": "What&#39;s the difference of your solutions compared to the fold one, in terms of memory usage and performance?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1542058507, "post_id": 53269848, "comment_id": 93424571, "body": "It&#39;d be good to touch on why OP can&#39;t do <code>word.as_bytes().iter().sum::&lt;u32&gt;()</code> as they tried originally."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1542058869, "post_id": 53269848, "comment_id": 93424679, "body": "I just tried and looked at the assembly. When compiling with optimization, the compiler indeed <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=6bc9e1d988e1f00fc1b9d5eca59ddc95\" rel=\"nofollow noreferrer\">generates exactly the same code</a>. For private functions, the compiler simply removes one of them since they are identical. When I tried with a fixed string, the compiler computed the sum at compile time, and the only code emitted for the function was <code>movd eax, 1234; ret</code> or similar, so I added code to generate a random string."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542060195, "post_id": 53269848, "comment_id": 93425168, "body": "@Shepmaster Yes please, would be interesting to know."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1542061453, "post_id": 53269848, "comment_id": 93425547, "body": "@SvenMarnach if you drop the <code>main</code> off and make the functions public, you can avoid that inlining."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1542103459, "post_id": 53269848, "comment_id": 93438874, "body": "@ljedrz thanks, it would have been interesting to know the reason behind this decision."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 2, "creation_date": 1542110900, "post_id": 53269848, "comment_id": 93443047, "body": "@Nick TBH, I don&#39;t know why the widening versions haven&#39;t been added. I assume it&#39;s just that no one has done it yet. Maybe you can submit a pull request to add them!"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 6, "last_activity_date": 1542146230, "last_edit_date": 1542146230, "creation_date": 1542055586, "answer_id": 53269848, "question_id": 53269574, "link": "https://stackoverflow.com/questions/53269574/how-to-sum-a-slice-of-bytes-reducing-the-possibility-of-overflow/53269848#53269848", "title": "How to sum a slice of bytes reducing the possibility of overflow", "body": "<p>You can use <code>map</code> to cast each byte to a bigger type:</p>\n\n<pre><code>let sum: u32 = word.as_bytes().iter().map(|&amp;b| b as u32).sum();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>let sum: u32 = word.as_bytes().iter().cloned().map(u32::from).sum();\n</code></pre>\n\n<p>The reason why you can't sum to <code>u32</code> using your original attempt is that the <a href=\"https://doc.rust-lang.org/std/iter/trait.Sum.html\" rel=\"nofollow noreferrer\"><code>Sum</code> trait</a> which provides it has the following definition:</p>\n\n<pre><code>pub trait Sum&lt;A = Self&gt; {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: Iterator&lt;Item = A&gt;;\n}\n</code></pre>\n\n<p>Which means that its method <code>sum</code> returns by default the same type as the items of the iterator it is built from. You can see it's the case with <code>u8</code> by looking at its <a href=\"https://doc.rust-lang.org/std/iter/trait.Sum.html#impl-Sum%3Cu8%3E\" rel=\"nofollow noreferrer\">implementation of <code>Sum</code></a>:</p>\n\n<pre><code>fn sum&lt;I&gt;(iter: I) -&gt; u8\nwhere\n    I: Iterator&lt;Item = u8&gt;,\n</code></pre>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 53269848, "answer_count": 1, "score": 4, "last_activity_date": 1542146230, "creation_date": 1542054340, "last_edit_date": 1542055893, "question_id": 53269574, "link": "https://stackoverflow.com/questions/53269574/how-to-sum-a-slice-of-bytes-reducing-the-possibility-of-overflow", "title": "How to sum a slice of bytes reducing the possibility of overflow", "body": "<p>I have an ASCII string slice and I need to compute the sum of all characters when seen as bytes.</p>\n\n<pre><code>let word = \"Hello, World\";\nlet sum = word.as_bytes().iter().sum::&lt;u8&gt;();\n</code></pre>\n\n<p>I need to specify the type for sum, otherwise Rust will not compile. The problem is that <code>u8</code> is a too small type, and if the sum overflows the program will panic.</p>\n\n<p>I'd like to avoid that, but I cannot find a way to specify a bigger type such as <code>u16</code> or <code>u32</code> for example, when using <code>sum()</code>.</p>\n\n<p>I may try to use <code>fold()</code>, but I was wondering if there is a way to use <code>sum()</code> by specifying another type.</p>\n\n<pre><code>let sum = word.as_bytes().iter().fold(0u32, |acc, x| acc + *x as u32);\n</code></pre>\n"}, {"tags": ["design-patterns", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1542112407, "post_id": 53267844, "comment_id": 93443821, "body": "I feel there is a lot more to this question than what you&#39;ve put here. What you want is for someone to review your whole program/library and make a suggestion, but from just this snippet and your description, we&#39;d just be guessing. If you can post the whole program, and your question is <a href=\"https://codereview.stackexchange.com/help/on-topic\">otherwise on-topic for Code Review</a>, perhaps you would get better results there."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1542113926, "post_id": 53267844, "comment_id": 93444655, "body": "For what it&#39;s worth, you can do the equivalent of <code>static_cast</code> in Rust, you just have to use <code>unsafe</code> because you&#39;re asserting a type relationship the compiler can&#39;t verify. The conversion would look like <code>&amp;mut *(state as *mut _ as *mut Type0)</code>. The first <code>as</code> converts the reference to a raw pointer; the second <code>as</code> just discards the vtable pointer. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=565c3d1e90d6902801aa3429ead4cb3e\" rel=\"nofollow noreferrer\">Here&#39;s a more complete example</a>"}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1542116074, "post_id": 53267844, "comment_id": 93445966, "body": "Ah sorry, i did say &quot;and static_cast were it available in safe-rust would have worked too&quot; - but perhaps didn&#39;t make it more explicit. What i meant was that I know what the concrete type is due to some other meta-data elsewhere (like the <code>u32</code> id here) so i would have normally gone for <code>static_cast</code>. So I&#39;m not really using <code>dynamic_cast</code> here to find out if it&#39;s really the type i want and then do something with it - rather i know what it is and just want to get the concrete type out of it. Is casting bad even in such cases ?"}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1542116135, "post_id": 53267844, "comment_id": 93446005, "body": "Agree on putting up more code. I&#39;ll do that in code-review part of stackexchange if it helps. It might take me a while to trim out to minimal compilable example to explain my scenario."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1542120476, "post_id": 53267844, "comment_id": 93448740, "body": "I don&#39;t think downcasting is <i>bad</i>; that&#39;s too simplistic. Rather, downcasting should offer enough mental friction to make you think, &quot;Hmm, I wonder if there&#39;s a better way to build this.&quot; You definitely shouldn&#39;t turn a simple, performant solution into a complicated, sluggish one, just to avoid downcasting! But you <i>should</i> think about why you believe downcasting is necessary and whether it would make sense to eliminate it by refactoring."}], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1542046714, "creation_date": 1542046384, "last_edit_date": 1542046714, "question_id": 53267844, "link": "https://stackoverflow.com/questions/53267844/is-it-necessary-to-add-code-to-avoid-casting-when-interface-alone-is-no-longer-s", "title": "Is it necessary to add code to avoid casting when interface alone is no longer sufficient", "body": "<pre><code>// ===== library code: =====\n\ntrait Sate { // Or in C++ imagine this is a class containing only pure virtuals.\n    fn ready(&amp;mut self, ..);\n    fn terminate(&amp;mut self, ..);\n    fn timeout(&amp;mut self, .. );\n    fn ....; // a few more functions\n    fn as_any(&amp;mut self) -&gt; &amp;mut Any; // for downcasting in Rust; not necessary in C++\n}\n\nstates: HashMap&lt;u32, Rc&lt;RefCell&lt;State&gt;&gt;&gt;; // Or in C++ just a map of numbers to shared-ptr of State\n\nfn event_loop_on_some_trigger(trigger_for: u32, trigger: Blah) {\n    let state = states[trigger_for];\n    if trigger == for_timeout { state.borrow_mut().timeout(...) }\n    else if trigger = for_readiness { state.borrow_mut().timeout(...) }\n    ...\n}\n\n\n//==== User Code: ====\n\nstruct Type0 { ... }\nimpl State for Type0 { /* provide concrete impls */ } // In C++ this would be inheritance for Type0\n\nstruct Type1 { ... }\nimpl State for Type1 { /* provide concrete impls */ } // In C++ this would be inheritance for Type1\n\n// ... etc.\n</code></pre>\n\n<p>I was using this library and everything was working fine. But now there are a few types that have to do\nsome specific work which is beyond what's there in the <code>State</code> trait above. So i gradually seem\nto be running into the \"Expressions Problem\" in design. I don't control the library providing\nthe trait and the event-loop and even if i did i wouldn't have added 2 or 3 extra functions\nthere as it does not feel right since it's going to be used only for some concrete types and\nthat too occassionally.</p>\n\n<p>What i have additionally is a Map in the user code like <code>HashMap&lt;u32, SomeDetail&gt;</code> which\ncorresponds to the map in the event-loop thread stack above. So if i need to perform a special\noperation on one of the types i can get the <code>u32</code> value for the state (by analysing the <code>SomeDetail</code>\nor whatever), get the state from the map in the event-loop and downcast it to the type to call\none of the special functions.</p>\n\n<p>At this point in C++ i would probably have used <code>static_cast&lt;&gt;</code> as I'm sure what type it is\n(unless there's something wrong in the bookeeping of the id's or it's allocation which would be\na logic error in the program). In Rust i'm forced to use <code>downcast_mut</code> (<code>dynamic_cast</code> in C++),\nwhich I'm OK with (so far I've never got any runtime error from it, showing that the logic is\nsound and <code>static_cast</code> were it available in safe-rust would have worked too).</p>\n\n<p>Now my question is that I read that casting is bad design etc. So I was thinking what could I\nhave done differently here. One idea was to store the weak (or strong if we don't care) references in the\nmap that i have in my user code. So while the event loop uses the map it has to fire some\nfunction for the <code>State</code>, I would use my map to get the concrete type out whenever I want it\nand invoke function on it. However since my code is outside the eventloop thread I would have\nto slap a Mutex on the states, which is useless in 99% of the time as most of the time it's the\neventloop invoking it and types doing what they are coded to do.</p>\n\n<ol>\n<li>Should i keep a few maps of (reference to) concrete types the\nspecial functionality on which i want to call occasionally and\nslap a mutex there ?</li>\n<li>Just do a dynamic_cast in those cases and this is justifiable ?</li>\n<li>Eventloop should have been templatised     giving an opportunity for the user to store some state in the eventloop thread stack and deal with it. In this case I would store a few of my    maps of <code>&lt;u32, ConcreteTypeReferences&gt;</code> so that I can post the request to the event-loop in rare cases I want to interact with the concrete-types and they can continue living without mutex or atomic-referece-counted objects (in Rust Rc is non-atomic-ref-counted smart-ptr, I don't know if there's an equivalent in C++)</li>\n</ol>\n\n<p>The last option and also partly the 1st one requires I have access to that code - so more of a wish-list but just wanting to know what would have been the suggestion if that were the case. In absence of that (2) <code>dynamic_cast</code> seems the only viable solution ?</p>\n"}, {"tags": ["openssl", "rust", "smtp", "starttls"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542054104, "post_id": 53266542, "comment_id": 93422811, "body": "I think you should open an issue, they could help you more than us."}], "answers": [{"tags": [], "owner": {"reputation": 6904, "user_id": 60462, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/64fd87fd2c140ee93f638a624bcc97c9?s=128&d=identicon&r=PG", "display_name": "Volker Stolz", "link": "https://stackoverflow.com/users/60462/volker-stolz"}, "is_accepted": false, "score": 0, "last_activity_date": 1542297625, "creation_date": 1542297625, "answer_id": 53323326, "question_id": 53266542, "link": "https://stackoverflow.com/questions/53266542/how-do-i-create-a-connection-with-the-equivalent-of-starttls-smtp-using-rust/53323326#53323326", "title": "How do I create a connection with the equivalent of `-starttls smtp` using rust-openssl?", "body": "<p>Take a more detailed look in the openssl-sources on what <code>-starttls smtp</code> actually does, and replay that in Rust? It will just be a few library calls, but first you need to speak STMP to your server, and <em>then</em> switch to TLS. (Maybe that's already bundled up in the openssl-library in a single call.)</p>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 256, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1542297625, "creation_date": 1542040978, "last_edit_date": 1542295549, "question_id": 53266542, "link": "https://stackoverflow.com/questions/53266542/how-do-i-create-a-connection-with-the-equivalent-of-starttls-smtp-using-rust", "title": "How do I create a connection with the equivalent of `-starttls smtp` using rust-openssl?", "body": "<p>When I run the following command in the terminal</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>openssl s_client -connect gmail-smtp-in.l.google.com:25 -starttls smtp\n</code></pre>\n\n<p>I get a <code>CONNECTED(00000005)</code> response.</p>\n\n<p>I am trying to achieve the same connection with Rust using <code>rust-openssl</code> (I am open to other libraries though), and here's what I have:</p>\n\n<pre><code>extern crate openssl;\n\nuse openssl::ssl::{SslConnector, SslMethod};\n\nuse std::net::TcpStream;\n\nfn main() {\n    let connector = SslConnector::builder(SslMethod::tls()).unwrap().build();\n    let stream = TcpStream::connect(\"gmail-smtp-in.l.google.com:25\").unwrap();\n    let e = connector\n        .connect(\"gmail-smtp-in.l.google.com\", stream)\n        .unwrap_err();\n    eprintln!(\"{:#?}\", e);\n}\n</code></pre>\n\n<p>However, the response I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Failure(\n    MidHandshakeSslStream {\n        stream: SslStream {\n            stream: TcpStream {\n                addr: V6(\n                    [2001:41d0:a:2346::1]:57190\n                ),\n                peer: V6(\n                    [2a00:1450:400c:c0c::1b]:25\n                ),\n                fd: 3\n            },\n            ssl: Ssl {\n                state: \"SSLv3/TLS write client hello\",\n                verify_result: X509VerifyResult {\n                    code: 0,\n                    error: \"ok\"\n                }\n            }\n        },\n        error: Error {\n            code: ErrorCode(\n                1\n            ),\n            cause: Some(\n                Ssl(\n                    ErrorStack(\n                        [\n                            Error {\n                                code: 336130315,\n                                library: \"SSL routines\",\n                                function: \"ssl3_get_record\",\n                                reason: \"wrong version number\",\n                                file: \"ssl/record/ssl3_record.c\",\n                                line: 252\n                            }\n                        ]\n                    )\n                )\n            )\n        }\n    }\n)\n</code></pre>\n\n<p>I'm guessing I'm missing the <code>-starttls smtp</code> part in the Rust code, but can't figure out how to add it.</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1542078322, "post_id": 53263942, "comment_id": 93429355, "body": "Where does <code>futures::done</code> come from? It&#39;s not a part of the current version of the <a href=\"https://docs.rs/futures/0.1.25/futures/future/index.html?search=done\" rel=\"nofollow noreferrer\">futures crate</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1542079823, "creation_date": 1542079823, "answer_id": 53273374, "question_id": 53263942, "link": "https://stackoverflow.com/questions/53263942/how-can-i-implement-a-blocking-queue-mechanism-with-futuressyncmpscchannel/53273374#53273374", "title": "How can I implement a blocking queue mechanism with futures::sync::mpsc::channel?", "body": "<ol>\n<li><p>Never call <code>wait</code> inside of a future. That's blocking, and blocking should never be done inside a future.</p></li>\n<li><p>Never call <code>sleep</code> inside of a future. That's blocking, and blocking should never be done inside a future.</p></li>\n<li><p>Channel backpressure is implemented by the fact that <a href=\"https://docs.rs/futures/0.1.25/futures/sink/trait.Sink.html#method.send\" rel=\"nofollow noreferrer\"><code>send</code> consumes the <code>Sender</code></a> and returns a future. The future yields the <code>Sender</code> back to you <em>when there is room in the queue</em>.</p></li>\n</ol>\n\n\n\n<pre><code>extern crate futures; // 0.1.25\nextern crate tokio; // 0.1.11\n\nuse futures::{future, sync::mpsc, Future, Sink, Stream};\nuse std::time::Duration;\nuse tokio::timer::Interval;\n\n#[derive(Debug)]\nstruct Stats {\n    pub success: usize,\n    pub failure: usize,\n}\n\nfn main() {\n    tokio::run(future::lazy(|| {\n        let (tx, rx) = mpsc::channel::&lt;Result&lt;(), ()&gt;&gt;(1);\n\n        tokio::spawn({\n            Interval::new_interval(Duration::from_millis(10))\n                .map_err(|e| panic!(\"Interval error: {}\", e))\n                .fold(tx, |tx, _| {\n                    tx.send(Ok(())).map_err(|e| panic!(\"Send error: {}\", e))\n                })\n                .map(drop) // discard the tx\n        });\n\n        let mut stats = Stats {\n            success: 0,\n            failure: 0,\n        };\n\n        let i = Interval::new_interval(Duration::from_millis(20))\n            .map_err(|e| panic!(\"Interval error: {}\", e));\n\n        rx.zip(i).for_each(move |(res, _)| {\n            println!(\"Received\");\n            match res {\n                Ok(_) =&gt; stats.success += 1,\n                Err(_) =&gt; stats.failure += 1,\n            }\n            println!(\"stats = {:?}\", stats);\n\n            Ok(())\n        })\n    }));\n}\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 745, "favorite_count": 0, "accepted_answer_id": 53273374, "answer_count": 1, "score": 3, "last_activity_date": 1542079823, "creation_date": 1542031871, "last_edit_date": 1542078283, "question_id": 53263942, "link": "https://stackoverflow.com/questions/53263942/how-can-i-implement-a-blocking-queue-mechanism-with-futuressyncmpscchannel", "title": "How can I implement a blocking queue mechanism with futures::sync::mpsc::channel?", "body": "<p>I am trying to understand how <a href=\"https://docs.rs/futures/0.1.25/futures/sync/mpsc/struct.Receiver.html\" rel=\"nofollow noreferrer\"><code>futures::sync::mpsc::Receiver</code></a> works. In the below example, the  receiver thread sleeps for two seconds and the sender sends every second. </p>\n\n<p>I expect that the sender will need to be blocked because of the wait and then send when the buffer is released. </p>\n\n<p>What I see instead is that it is deadlocked after a time. Increasing the buffer of the channel only extends the time until it is blocked.</p>\n\n<p>What should I do to make the sender send data when the buffer is available and put some backpressure to the sender in such cases? <a href=\"https://docs.rs/futures/0.1.25/futures/sync/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\"><code>futures::sync::mpsc::channel</code></a> has its own documentation, but I do not understand how to use it properly.</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\n\nuse std::{thread, time};\n\nuse futures::sync::mpsc;\nuse futures::{Future, Sink, Stream};\n\nuse tokio_core::reactor::Core;\n\n#[derive(Debug)]\nstruct Stats {\n    pub success: usize,\n    pub failure: usize,\n}\n\nfn main() {\n    let mut core = Core::new().expect(\"Failed to create core\");\n    let remote = core.remote();\n\n    let (tx, rx) = mpsc::channel(1);\n\n    thread::spawn(move || loop {\n        let tx = tx.clone();\n\n        let delay = time::Duration::from_secs(1);\n        thread::sleep(delay);\n        let f = ::futures::done::&lt;(), ()&gt;(Ok(()));\n\n        remote.spawn(|_| {\n            f.then(|res| {\n                println!(\"Sending\");\n                tx.send(res).wait();\n                println!(\"Sent\");\n                Ok(())\n            })\n        });\n    });\n\n    let mut stats = Stats {\n        success: 0,\n        failure: 0,\n    };\n\n    let f2 = rx.for_each(|res| {\n        println!(\"Received\");\n        let delay = time::Duration::from_secs(2);\n        thread::sleep(delay);\n\n        match res {\n            Ok(_) =&gt; stats.success += 1,\n            Err(_) =&gt; stats.failure += 1,\n        }\n        println!(\"stats = {:?}\", stats);\n\n        Ok(())\n    });\n\n    core.run(f2).expect(\"Core failed to run\");\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi", "unsafe"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542031953, "post_id": 53263849, "comment_id": 93411976, "body": "As far as I know what you are doing is undefined behavoir. You have to use an <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\">Unsafecell</a> to achieve it. But I&#39;m not very experienced with FFIs so this is not an answer ;)"}, {"owner": {"reputation": 73, "user_id": 5353482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb5dd65a8923b1c08c96972d5b3451ea?s=128&d=identicon&r=PG&f=1", "display_name": "Sisyphe", "link": "https://stackoverflow.com/users/5353482/sisyphe"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1542032127, "post_id": 53263849, "comment_id": 93412091, "body": "Thanks, not taking this as an answer but I will definitely take a look at UnsafeCell to see if I can use it to make a safe wrapper."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542032499, "post_id": 53263849, "comment_id": 93412322, "body": "If you want to know anything about FFI, read the <a href=\"https://doc.rust-lang.org/nomicon/ffi.html\" rel=\"nofollow noreferrer\">rustonomicon</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1542032697, "post_id": 53263849, "comment_id": 93412449, "body": "I see no reason to go to <code>UnsafeCell</code>. That&#39;s used for building your own abstractions, but existing abstractions are sufficient."}], "answers": [{"comments": [{"owner": {"reputation": 73, "user_id": 5353482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb5dd65a8923b1c08c96972d5b3451ea?s=128&d=identicon&r=PG&f=1", "display_name": "Sisyphe", "link": "https://stackoverflow.com/users/5353482/sisyphe"}, "edited": false, "score": 0, "creation_date": 1542033883, "post_id": 53264086, "comment_id": 93413145, "body": "The struct is still mutably borrowed but I think it&#39;s a mistype (I can&#39;t edit your pose since stackoverflow request at least 6 characters modification). The RefCell example seems fine. Is there something to worry about with unsafe usage of RefCell ? (the doc doesn&#39;t mention anything)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 73, "user_id": 5353482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb5dd65a8923b1c08c96972d5b3451ea?s=128&d=identicon&r=PG&f=1", "display_name": "Sisyphe", "link": "https://stackoverflow.com/users/5353482/sisyphe"}, "edited": false, "score": 1, "creation_date": 1542034086, "post_id": 53264086, "comment_id": 93413282, "body": "No, <code>RefCell</code> will panic and stop your program if you ever attempt to get two aliased mutable references, ensuring your program&#39;s memory safety."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1542033948, "last_edit_date": 1542033948, "creation_date": 1542032305, "answer_id": 53264086, "question_id": 53263849, "link": "https://stackoverflow.com/questions/53263849/is-storing-data-and-a-mutable-pointer-to-that-data-in-a-struct-safe/53264086#53264086", "title": "Is storing data and a mutable pointer to that data in a struct safe?", "body": "<p>This is generally a <strong>bad idea</strong> and it can go wrong <em>very</em> easily.</p>\n\n<p>First, go read <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a> for an in-depth explanation about why safe Rust prevents this construct at compile time.</p>\n\n<p>TL;DR, if you <em>ever</em> move the <code>Wrapper</code> struct, the pointer will be invalid. Dereferencing it will cause undefined behavior (a bad thing).</p>\n\n<p>If you can ensure that either of:</p>\n\n<ol>\n<li>The <code>Wrapper</code> is never moved.</li>\n<li>The <code>ptr</code> is updated every time you move the struct.</li>\n</ol>\n\n<p>Then the pointer will be valid and safe to dereference (assuming all the other caveats about unsafe code are upheld).</p>\n\n<hr>\n\n<p>What's worse is that there's no <em>reason</em> to keep the pointer in the first place; you can take a reference to a value and convert it into a pointer whenever you need:</p>\n\n<pre><code>extern \"C\" {\n    fn ffi_fn(data: *mut struct_from_c_t);\n}\n\nstruct Wrapper {\n    data: struct_from_c_t,\n}\n\nimpl Wrapper {\n    fn do_thing(&amp;mut self) {\n        unsafe { ffi_fn(&amp;mut self.data) }\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>from functions borrowing <code>Wrapper</code> non-mutably</p>\n</blockquote>\n\n<p>Without context, this seems like a dubious decision, but Rust has tools for interior mutability:</p>\n\n<pre><code>use std::cell::RefCell;\n\nstruct Wrapper {\n    data: RefCell&lt;struct_from_c_t&gt;,\n}\n\nimpl Wrapper {\n    fn do_thing(&amp;self) {\n        unsafe { ffi_fn(&amp;mut *self.data.borrow_mut()) }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 5353482, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb5dd65a8923b1c08c96972d5b3451ea?s=128&d=identicon&r=PG&f=1", "display_name": "Sisyphe", "link": "https://stackoverflow.com/users/5353482/sisyphe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 53264086, "answer_count": 1, "score": 1, "last_activity_date": 1542033948, "creation_date": 1542031589, "last_edit_date": 1542032521, "question_id": 53263849, "link": "https://stackoverflow.com/questions/53263849/is-storing-data-and-a-mutable-pointer-to-that-data-in-a-struct-safe", "title": "Is storing data and a mutable pointer to that data in a struct safe?", "body": "<p>Let's consider a Rust wrapper library around a C library. This C library defines a struct and uses it as a mutable pointer throughout it's API.</p>\n\n<p>The Rust wrapper defines the following struct with <code>ptr</code> pointing at <code>data</code>.</p>\n\n<pre><code>struct Wrapper {\n    data: struct_from_c_t,\n    ptr: *mut struct_from_c_t,\n}\n</code></pre>\n\n<p>If all uses of this pointer are made within the <code>Wrapper</code> struct's lifetime, what other potential issues can I run into when using this pointer in unsafe code ?</p>\n\n<p>Is dereference and use of this pointer always safe in this construct?</p>\n\n<p>For detailed context, the goal is to be able to call FFI functions using this pointer from functions borrowing <code>Wrapper</code> non-mutably.</p>\n"}, {"tags": ["callback", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1542027796, "post_id": 53262644, "comment_id": 93409730, "body": "I don&#39;t understand the question, <code>on_state_changed(new_state);</code> works, so does <code>let f = &amp;mut on_state_changed; f(new_state);</code>."}, {"owner": {"reputation": 1171, "user_id": 3758543, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a4a349f90341d8d2b1045f6cf8cc54b3?s=128&d=identicon&r=PG&f=1", "display_name": "lhahn", "link": "https://stackoverflow.com/users/3758543/lhahn"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1542028247, "post_id": 53262644, "comment_id": 93409988, "body": "Yes, I just explained the reason in the answer."}], "answers": [{"comments": [{"owner": {"reputation": 1171, "user_id": 3758543, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a4a349f90341d8d2b1045f6cf8cc54b3?s=128&d=identicon&r=PG&f=1", "display_name": "lhahn", "link": "https://stackoverflow.com/users/3758543/lhahn"}, "edited": false, "score": 0, "creation_date": 1542028206, "post_id": 53262758, "comment_id": 93409965, "body": "Well, my bad. I was fighting the borrow checker. I was changing things to make it compile and I added the <code>mut</code> on the parameter at the end, so I thought that the whole combination made the code compile and not only the <code>mut</code> in the parameter."}, {"owner": {"reputation": 1171, "user_id": 3758543, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a4a349f90341d8d2b1045f6cf8cc54b3?s=128&d=identicon&r=PG&f=1", "display_name": "lhahn", "link": "https://stackoverflow.com/users/3758543/lhahn"}, "edited": false, "score": 0, "creation_date": 1542028280, "post_id": 53262758, "comment_id": 93410003, "body": "Regarding this comment <code>&#39;I want to call it multiple times&#39; you can&#39;t, since you move your closure into the function.</code>, I have a loop inside <code>thread_func</code> in my implementation, so this should work right?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1542029480, "last_edit_date": 1542029480, "creation_date": 1542027755, "answer_id": 53262758, "question_id": 53262644, "link": "https://stackoverflow.com/questions/53262644/weird-callback-call-syntax-need-explanation/53262758#53262758", "title": "Weird callback call syntax (need explanation)", "body": "<p>You are overcomplicating things.</p>\n\n<p>You might explain, why you think, that you have to do <code>borrow_mut()</code>, since there is no borrowing involved in your signature.</p>\n\n<p>Your function <code>thread_func</code> can be simplified to this:</p>\n\n<pre><code>fn thread_func(mut on_state_changed: StateChangedCallback) {\n    let new_state = ConnectionState::NotStarted;\n    on_state_changed(new_state);\n}\n</code></pre>\n\n<p>Please note, that in contrast to your sentence <em>\"I want to call it (the callback) multiple times\"</em> you can't, because you move your closure into the function.</p>\n"}], "owner": {"reputation": 1171, "user_id": 3758543, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a4a349f90341d8d2b1045f6cf8cc54b3?s=128&d=identicon&r=PG&f=1", "display_name": "lhahn", "link": "https://stackoverflow.com/users/3758543/lhahn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 53262758, "answer_count": 1, "score": 1, "last_activity_date": 1542029480, "creation_date": 1542027345, "question_id": 53262644, "link": "https://stackoverflow.com/questions/53262644/weird-callback-call-syntax-need-explanation", "title": "Weird callback call syntax (need explanation)", "body": "<p>The following example is a minimal example that I found that explains the problem I am having: </p>\n\n<pre><code>use std::borrow::BorrowMut;\nuse std::ops::DerefMut;\n\n#[derive(Debug, Clone)]\nenum ConnectionState {\n    NotStarted,\n}\n\ntype StateChangedCallback = Box&lt;FnMut(ConnectionState) + Send + Sync&gt;;\n\nfn thread_func(mut on_state_changed: StateChangedCallback) {\n    let new_state = ConnectionState::NotStarted;\n    let f: &amp;mut BorrowMut&lt;StateChangedCallback&gt; = &amp;mut on_state_changed;\n    f.borrow_mut().deref_mut()(new_state);\n}\n\nfn main() {\n    let on_state_changed = Box::new(|new_state| {\n        println!(\"New state: {:?}\", new_state);\n    });\n\n    let join_handle = std::thread::spawn(|| thread_func(on_state_changed));\n\n    join_handle.join().unwrap();\n}\n</code></pre>\n\n<p>I have a simple thread that needs to call a callback passed from main. The callback is the signature <code>Box&lt;FnMut(ConnectionState) + Send + Sync&gt;</code>, since I want to call it multiple times. The only way I managed to call the callback was with this weird syntax: </p>\n\n<pre><code>let f: &amp;mut BorrowMut&lt;StateChangedCallback&gt; = &amp;mut on_state_changed;\nf.borrow_mut().deref_mut()(new_state);\n</code></pre>\n\n<p>I searched and did not find a reasonable explanation for this. I am doing something wrong? Or is this the way Rust works?</p>\n\n<p>If it is so, could someone explain the reason for this syntax?</p>\n"}, {"tags": ["async-await", "rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1542111738, "post_id": 53260931, "comment_id": 93443461, "body": "Thanks for the tip. actix seems to be useful here, although I had hoped for an even more transparent way of achieving this. Maybe I&#39;ll look into writing some macros for this, but for now this seems sufficient."}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "reply_to_user": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1542121579, "post_id": 53260931, "comment_id": 93449514, "body": "The other approach I&#39;ve taken (though not tried with Diesel) is to use <a href=\"https://docs.rs/r2d2/0.8.3/r2d2/\" rel=\"nofollow noreferrer\">r2d2</a> and futures for this. I&#39;d create a new future with the r2d2 pool handle, which delegates getting/returning connections to r2d2, so no message passing/locking etc. needed, even with a single connection and multiple futures."}, {"owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1542134328, "post_id": 53260931, "comment_id": 93457004, "body": "So you essentially limit the pool size to 1 in r2d2?"}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "reply_to_user": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1542136357, "post_id": 53260931, "comment_id": 93457960, "body": "@mrspl yup, if that&#39;s a requirement, though looking at the Diesel r2d2 module (which I&#39;m guessing is just a re-export of r2d2), they have a test case with a pool size of 2: <a href=\"https://docs.diesel.rs/src/diesel/r2d2.rs.html#165\" rel=\"nofollow noreferrer\">docs.diesel.rs/src/diesel/r2d2.rs.html#165</a>"}], "tags": [], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "is_accepted": true, "score": 1, "last_activity_date": 1542021106, "creation_date": 1542021106, "answer_id": 53260931, "question_id": 53260710, "link": "https://stackoverflow.com/questions/53260710/run-async-function-in-specific-thread/53260931#53260931", "title": "Run async function in specific thread", "body": "<p>If external crates are an option, I'd consider taking a look at <a href=\"https://actix.rs\" rel=\"nofollow noreferrer\">actix</a>, an Actor Framework for Rust.</p>\n\n<p>This will let you spawn an Actor in a separate thread that effectively owns the connection to the DB. It can then listen for messages, execute work/queries based on those messages, and return either sync results or futures.</p>\n\n<p>It takes care of most of the boilerplate for message passing, spawning, etc. at a higher level.</p>\n\n<p>There's also a <a href=\"https://actix.rs/docs/databases/\" rel=\"nofollow noreferrer\">Diesel example</a> in the actix documentation, which sounds quite close to the use case you had in mind.</p>\n"}], "owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1024, "favorite_count": 0, "accepted_answer_id": 53260931, "answer_count": 1, "score": 3, "last_activity_date": 1542021106, "creation_date": 1542020354, "question_id": 53260710, "link": "https://stackoverflow.com/questions/53260710/run-async-function-in-specific-thread", "title": "Run async function in specific thread", "body": "<p>I would like to run specific long-running functions (which execute database queries) on a separate thread. However, let's assume that the underlying database engine only allows one connection at a time and the connection struct isn't <code>Sync</code> (I think at least the latter is true for <code>diesel</code>).</p>\n\n<p>My solution would be to have a single separate thread (as opposed to a thread pool) where all the database-work happens and which runs as long as the main thread is alive.\nI think I know how I would have to do this with passing messages over channels, but that requires quite some boilerplate code (e.g. explicitly sending the function arguments over the channel etc.).</p>\n\n<p>Is there a more direct way of achieving something like this with rust (and possibly tokio and the new async/await notation that is in nightly)?</p>\n\n<p>I'm hoping to do something along the lines of:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let handle = spawn_thread_with_runtime(...);\n\nlet future = run_on_thread!(handle, query_function, argument1, argument2);\n</code></pre>\n\n<p>where <code>query_function</code> would be a function that immediately returns a future and does the work on the other thread.</p>\n\n<p>Rust nightly and external crates / macros would be ok.</p>\n"}, {"tags": ["rust", "language-concepts"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 6, "creation_date": 1542007938, "post_id": 53257404, "comment_id": 93399651, "body": "Trying to define a general concept of &quot;shallow&quot; and &quot;deep&quot; copy and then expecting a language to &quot;support&quot; this is a mistake in the first place."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1542015805, "post_id": 53257594, "comment_id": 93403261, "body": "strict aliasing is not only about two pointer or reference to the same data, there also need to have the same type (expections types in C are character type). Put it simply you can&#39;t have a u32 * and a u16 * that refer to the same memory because the compiler assume it&#39;s not possible. Strict mean you can only have u32 * that refer the this memory (or char * in C), Strict != No aliasing. I don&#39;t know if it&#39;s true in Rust, but I will not take the risk, this kind of bug is hard to find."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542016244, "post_id": 53257594, "comment_id": 93403480, "body": "Thanks for that. I would like to add, that safe rust won&#39;t let you do that, so there is no worry about that."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1542016596, "post_id": 53257594, "comment_id": 93403678, "body": "Rust does not have a strict aliasing rule for pointers. Even pointers of different types are allowed to refer to the same memory. Of course you need unsafe code to dereference them."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1542007869, "creation_date": 1542007869, "answer_id": 53257594, "question_id": 53257404, "link": "https://stackoverflow.com/questions/53257404/shallow-copy-and-move-in-rust/53257594#53257594", "title": "Shallow Copy and Move in rust", "body": "<p>You have to differentiate based on the underlying type.</p>\n\n<p>You can't do a shallow copy of <code>struct Foo(String);</code> because two instances of <code>Foo</code> would point at the very same <code>String</code>, which would violate the <a href=\"https://stackoverflow.com/questions/26163272/strict-aliasing-in-rust\">strict aliasing rule</a> .</p>\n\n<p>However, if you are having a reference counter, e.g. <code>struct Foo(Rc&lt;String&gt;);</code> it is possible, because <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> will prevent you from doing unsafe things, e.g. having a mutable reference, when there are others references on the <code>String</code>.</p>\n\n<p>It is also possible for types that implement [<code>Clone</code>] to make a \"shallow\" copy, because <code>Copy</code> implies, that the type can be copied by using <code>memcpy</code> (e.g. a <code>u32</code> or a <code>&amp;T</code>).</p>\n\n<p><a href=\"https://stackoverflow.com/questions/31012923/what-is-the-difference-between-copy-and-clone\">What is the difference between Copy and Clone?</a> is also very worth reading.</p>\n\n<hr>\n\n<p>So, in general no: Exceptions are reference counted structs (<a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>) , <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Cloneables</code></a>, or references (<code>&amp;T</code>), because they don't violate the strict aliasing rule.</p>\n"}], "owner": {"reputation": 43, "user_id": 10626864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qgzUX.jpg?s=128&g=1", "display_name": "roberthayek", "link": "https://stackoverflow.com/users/10626864/roberthayek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 911, "favorite_count": 0, "accepted_answer_id": 53257594, "answer_count": 1, "score": 0, "last_activity_date": 1542007869, "creation_date": 1542006926, "question_id": 53257404, "link": "https://stackoverflow.com/questions/53257404/shallow-copy-and-move-in-rust", "title": "Shallow Copy and Move in rust", "body": "<p>Is is possible for rust to have shallow copies, because it would appear that a move replaces a shallow copy?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1541988447, "post_id": 53254645, "comment_id": 93394894, "body": "Looks like you&#39;re not the only one to find this frustrating: <a href=\"https://github.com/gfx-rs/gfx/issues/2452\" rel=\"nofollow noreferrer\">github.com/gfx-rs/gfx/issues/2452</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1542018585, "post_id": 53254645, "comment_id": 93404751, "body": "Couldn&#39;t you use a NewType for <code>T</code> that implements <code>Drop</code> and calls <code>destroy()</code>. That way, the <code>Drop</code> for <code>S</code> would be automatically generated."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1542019958, "post_id": 53254645, "comment_id": 93405521, "body": "@rodrigo Isn&#39;t that exactly what the OP was trying to do?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542020547, "post_id": 53254645, "comment_id": 93405836, "body": "@SvenMarnach: Oh, I see. I was assuming <code>S</code> was some composite type. But then the NewType would be exactly like this <code>S</code>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1541988820, "last_edit_date": 1541988820, "creation_date": 1541988113, "answer_id": 53255135, "question_id": 53254645, "link": "https://stackoverflow.com/questions/53254645/how-can-i-move-a-value-out-of-the-argument-to-dropdrop/53255135#53255135", "title": "How can I move a value out of the argument to Drop::drop()?", "body": "<p>The <strong>safest</strong>, easiest way to do this is to use an <code>Option</code>:</p>\n\n<pre><code>struct T;\n\nimpl Drop for T {\n    fn drop(&amp;mut self) {\n        println!(\"dropping T\");\n    }\n}\n\nstruct S {\n    member: Option&lt;T&gt;,\n}\n\nimpl Drop for S {\n    fn drop(&amp;mut self) {\n        if let Some(t) = self.member.take() {\n            destroy_t(t);\n        }\n    }\n}\n\nfn destroy_t(_t: T) {\n    println!(\"destroy T\");\n}\n\nfn main() {\n    let _x = S { member: Some(T) };\n}\n</code></pre>\n\n<hr>\n\n<p>You could choose to use unsafe code with <a href=\"https://doc.rust-lang.org/std/mem/struct.ManuallyDrop.html\" rel=\"noreferrer\"><code>ManuallyDrop</code></a> and <a href=\"https://stackoverflow.com/q/29570781/155423\">swap out the current value</a> for an uninitialized one<sup>1</sup>:</p>\n\n<pre><code>use std::mem::{self, ManuallyDrop};\n\nstruct T;\n\nimpl Drop for T {\n    fn drop(&amp;mut self) {\n        println!(\"dropping T\");\n    }\n}\n\nstruct S {\n    member: ManuallyDrop&lt;T&gt;,\n}\n\nimpl Drop for S {\n    fn drop(&amp;mut self) {\n        unsafe {\n            let valid_t = mem::replace(&amp;mut *self.member, mem::uninitialized());\n            destroy_t(valid_t);\n            // do *not* call ManuallyDrop::drop\n        };\n    }\n}\n\nfn destroy_t(_t: T) {\n    println!(\"destroy T\");\n}\n\nfn main() {\n    let _x = S {\n        member: ManuallyDrop::new(T),\n    };\n}\n</code></pre>\n\n<p><strong>1</strong> Using <code>mem::uninitialized</code> is <a href=\"https://stackoverflow.com/q/50184028/155423\">extremely dangerous and hard to get right, <em>especially</em> in generic contexts</a>. Using the nightly <code>MaybeUninit</code>, this might look like</p>\n\n<pre><code>#![feature(maybe_uninit)]\n\nuse std::mem::{self, ManuallyDrop, MaybeUninit};\n\nstruct T;\n\nimpl Drop for T {\n    fn drop(&amp;mut self) {\n        println!(\"dropping T\");\n    }\n}\n\nstruct S {\n    member: ManuallyDrop&lt;MaybeUninit&lt;T&gt;&gt;,\n}\n\nimpl Drop for S {\n    fn drop(&amp;mut self) {\n        let invalid_t = MaybeUninit::uninitialized();\n        let valid_t = mem::replace(&amp;mut *self.member, invalid_t);\n        let valid_t = unsafe { valid_t.into_inner() };\n        destroy_t(valid_t);\n        // do *not* call ManuallyDrop::drop\n    }\n}\n\nfn destroy_t(_t: T) {\n    println!(\"destroy T\");\n}\n\nfn main() {\n    let _x = S {\n        member: ManuallyDrop::new(MaybeUninit::new(T)),\n    };\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31307680/155423\">How to move one field out of a struct that implements Drop trait?</a></li>\n</ul>\n"}], "owner": {"reputation": 4655, "user_id": 1513559, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/NIt1y.jpg?s=128&g=1", "display_name": "Ben Pious", "link": "https://stackoverflow.com/users/1513559/ben-pious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 535, "favorite_count": 1, "accepted_answer_id": 53255135, "answer_count": 1, "score": 9, "last_activity_date": 1541988820, "creation_date": 1541982814, "last_edit_date": 1541986837, "question_id": 53254645, "link": "https://stackoverflow.com/questions/53254645/how-can-i-move-a-value-out-of-the-argument-to-dropdrop", "title": "How can I move a value out of the argument to Drop::drop()?", "body": "<p>I'm using <code>gfx-hal</code>, which requires me to create resources which need to be explicitly destroyed using functions specific to their type. I'd like to store instances of these types in structs, and I'd also like to tie cleaning them up to the lifetime of the owning struct, instead of managing their lifetimes manually and potentially having objects on the GPU/in the driver live forever. </p>\n\n<p>However, all the functions in the <code>destroy</code> family of functions take the type directly, rather than a reference, so when I try to pass them from my structs, I get errors like the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n --&gt; src/lib.rs:9:18\n  |\n9 |         destroyT(self.member)\n  |                  ^^^^^^^^^^^ cannot move out of here\n</code></pre>\n\n<p>It seems like there should be some way around this issue, as I'm currently in the <code>Drop::drop</code> function itself, so <code>self</code> is already \"consumed.\" How do I get the instances of these types out of <code>self</code> as <code>T</code>, and not <code>&amp;T</code>? </p>\n\n<pre><code>struct T;\n\nstruct S {\n    member: T,\n}\n\nimpl Drop for S {\n    fn drop(&amp;mut self) {\n        destroyT(self.member)\n    }\n}\n\n// elsewhere, in a library\n\nfn destroyT(t: T) {\n    //...\n}\n</code></pre>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1541986671, "post_id": 53254757, "comment_id": 93394527, "body": "It&#39;s worth noting that this would normally idiomatically be written as <code>list.iter().max().unwrap()</code>"}, {"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1589605105, "post_id": 53254757, "comment_id": 109365812, "body": "for item in list {} works as well, without .iter(), interesting. Who may help to explain it?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 1, "creation_date": 1589610157, "post_id": 53254757, "comment_id": 109366650, "body": "@Charlie\u6728\u5320 You may want to read up on <a href=\"https://doc.rust-lang.org/stable/std/keyword.for.html\" rel=\"nofollow noreferrer\"><code>for</code></a>. Also note that <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\" rel=\"nofollow noreferrer\"><code>&amp;[T]</code></a> implements <code>IntoIterator</code>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1541983969, "creation_date": 1541983969, "answer_id": 53254757, "question_id": 53254540, "link": "https://stackoverflow.com/questions/53254540/how-do-i-convert-the-largest-value-in-a-vec-example-in-the-rust-book-to-not-us/53254757#53254757", "title": "How do I convert the &quot;largest value in a Vec&quot; example in the Rust book to not use the Copy trait?", "body": "<p>When you write <code>for &amp;item</code>, this destructures each reference returned by the iterator, making the type of <code>item</code> <code>T</code>. You don't want to destructure these references, you want to keep them! Otherwise, when you take a reference to <code>item</code>, you are taking a reference to a local variable, which you can't return because local variables don't live long enough.</p>\n\n<pre><code>fn largest&lt;T: PartialOrd&gt;(list: &amp;[T]) -&gt; &amp;T {\n    let mut largest = &amp;list[0];\n\n    for item in list.iter() {\n        if item &gt; largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n</code></pre>\n\n<p>Note also how we can compare references directly, because <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.PartialOrd.html#impl-PartialOrd%3C%26%27b%20B%3E\" rel=\"noreferrer\">references to types implementing <code>PartialOrd</code> also implement <code>PartialOrd</code></a>, deferring the comparison to their referents (i.e. it's not a pointer comparison, unlike for <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.PartialOrd.html#impl-PartialOrd%3C*const%20T%3E\" rel=\"noreferrer\">raw pointers</a>).</p>\n"}], "owner": {"reputation": 492, "user_id": 3059546, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/528688700/picture?type=large", "display_name": "WarSame", "link": "https://stackoverflow.com/users/3059546/warsame"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "accepted_answer_id": 53254757, "answer_count": 1, "score": 1, "last_activity_date": 1541986592, "creation_date": 1541981658, "last_edit_date": 1541986592, "question_id": 53254540, "link": "https://stackoverflow.com/questions/53254540/how-do-i-convert-the-largest-value-in-a-vec-example-in-the-rust-book-to-not-us", "title": "How do I convert the &quot;largest value in a Vec&quot; example in the Rust book to not use the Copy trait?", "body": "<p>I'm trying to accomplish an exercise \"left to the reader\" in <a href=\"https://doc.rust-lang.org/book/2018-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">the 2018 Rust book</a>. The example they have, 10-15, uses the <code>Copy</code> trait. However, they recommend implementing the same without <code>Copy</code> and I've been really struggling with it.</p>\n\n<p>Without <code>Copy</code>, I cannot use <code>largest = list[0]</code>. The compiler recommends using a reference instead. I do so, making <code>largest</code> into a <code>&amp;T</code>. The compiler then complains that the <code>largest</code> used in the comparison is a <code>&amp;T</code>, not <code>T</code>, so I change it to <code>*largest</code> to dereference the pointer. This goes fine, but then stumbles on <code>largest = item</code>, with complaints about <code>T</code> instead of <code>&amp;T</code>. I switch to <code>largest = &amp;item</code>. Then I get an error I cannot deal with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `item` does not live long enough\n --&gt; src/main.rs:6:24\n  |\n6 |             largest = &amp;item;\n  |                        ^^^^ borrowed value does not live long enough\n7 |         }\n8 |     }\n  |     - borrowed value only lives until here\n  |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 1:1...\n</code></pre>\n\n<p>I do not understand how to lengthen the life of this value. It lives and dies in the <code>list.iter()</code>. How can I extend it while still only using references?</p>\n\n<p>Here is my code for reference:</p>\n\n<pre><code>fn largest&lt;T: PartialOrd&gt;(list: &amp;[T]) -&gt; &amp;T {\n    let mut largest = &amp;list[0];\n\n    for &amp;item in list.iter() {\n        if item &gt; *largest {\n            largest = &amp;item;\n        }\n    }\n\n    largest\n}\n</code></pre>\n"}, {"tags": ["macos", "rust", "rust-piston"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1542008988, "post_id": 53254447, "comment_id": 93400088, "body": "Have you checked for any errors? Is there anything in the console (stdout/stderr)? What do you expect from us not providing us with anything? :) We can only say that &quot;something has happened&quot;."}, {"owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1542035246, "post_id": 53254447, "comment_id": 93413936, "body": "There is nothing being printed to the console. I&#39;ve tried making print statements for many of the variables in the code and checking to see if each section is being accessed. None of the variables seemed to have unusual values and each section of the code was being run during the while loop. I&#39;ve tried specifying OpenGL::V2_1, OpenGL::V3_2, OpenGL::V3_3, and OpenGL::V4_0. Nothing seems of out the ordinary except the lack of graphics rendering. I get the same issue when trying to run the project <a href=\"https://github.com/a5huynh/defender-game\" rel=\"nofollow noreferrer\">github.com/a5huynh/defender-game</a>."}, {"owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1542035253, "post_id": 53254447, "comment_id": 93413942, "body": "However all of the piston examples at <a href=\"https://github.com/PistonDevelopers/piston-examples\" rel=\"nofollow noreferrer\">github.com/PistonDevelopers/piston-examples</a> work correctly and render graphics."}], "owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 209, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1542177802, "creation_date": 1541980625, "last_edit_date": 1542177802, "question_id": 53254447, "link": "https://stackoverflow.com/questions/53254447/why-does-piston-render-a-blank-window-on-macos", "title": "Why does Piston render a blank window on macOS?", "body": "<p>I am trying to run the Piston <a href=\"https://github.com/PistonDevelopers/Piston-Tutorials/tree/master/getting-started\" rel=\"nofollow noreferrer\">Getting Started Tutorial</a> on my MacBook Pro. When running the example with <code>cargo run</code>, only a blank window appears with no rendering:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Qf7XK.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Qf7XK.png\" alt=\"a blank window with no rendering\"></a></p>\n\n<p>Why are the graphics are not rendering?</p>\n\n<p>Edit: For anyone in a similar situation, deleting my Cargo.lock file and rebuilding the example fixed the problem.</p>\n"}, {"tags": ["rust", "tuples"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1541981925, "creation_date": 1541981925, "answer_id": 53254566, "question_id": 53254221, "link": "https://stackoverflow.com/questions/53254221/why-does-matching-on-the-result-of-regexfind-complain-about-expecting-a-struct/53254566#53254566", "title": "Why does matching on the result of Regex::find complain about expecting a struct regex::Match but found tuple?", "body": "<p>The code you are referencing is over two years old. Notably, that predates regex 1.0. Version <a href=\"https://docs.rs/regex/0.1.80/regex/struct.Regex.html#method.find\" rel=\"nofollow noreferrer\">0.1.80 defines <code>Regex::find</code></a> as:</p>\n\n<pre><code>fn find(&amp;self, text: &amp;str) -&gt; Option&lt;(usize, usize)&gt;\n</code></pre>\n\n<p>while <a href=\"https://docs.rs/regex/1.0.6/regex/struct.Regex.html#method.find\" rel=\"nofollow noreferrer\">version 1.0.6 defines it as</a>:</p>\n\n<pre><code>pub fn find&lt;'t&gt;(&amp;self, text: &amp;'t str) -&gt; Option&lt;Match&lt;'t&gt;&gt;\n</code></pre>\n\n<p>However, <a href=\"https://docs.rs/regex/1.0.6/regex/struct.Match.html\" rel=\"nofollow noreferrer\"><code>Match</code></a> defines methods to get the starting and ending indices the code was written assuming. In this case, since you only care about the end index, you can call <code>Match::end</code>:</p>\n\n<pre><code>let (token, rest) = match self.number.find(input).map(|x| x.end()) {\n    Some(end) =&gt; {\n    // ...\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 9824518, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a7a11a57ca2d6cb59c71131b0970520?s=128&d=identicon&r=PG&f=1", "display_name": "fread", "link": "https://stackoverflow.com/users/9824518/fread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 53254566, "answer_count": 1, "score": 1, "last_activity_date": 1541981925, "creation_date": 1541978300, "last_edit_date": 1541981514, "question_id": 53254221, "link": "https://stackoverflow.com/questions/53254221/why-does-matching-on-the-result-of-regexfind-complain-about-expecting-a-struct", "title": "Why does matching on the result of Regex::find complain about expecting a struct regex::Match but found tuple?", "body": "<p>I copied <a href=\"https://codereview.stackexchange.com/a/140987/32521\">this code from Code Review</a> into IntelliJ IDEA to try and play around with it. I have a homework assignment that is similar to this one (I need to write a version of Linux's bc in Rust), so I am using this code only for reference purposes.</p>\n\n<pre><code>use std::io;\nextern crate regex;\n#[macro_use]\nextern crate lazy_static;\n\nuse regex::Regex;\n\nfn main() {\n    let tokenizer = Tokenizer::new();\n\n    loop {\n        println!(\"Enter input:\");\n        let mut input = String::new();\n        io::stdin()\n            .read_line(&amp;mut input)\n            .expect(\"Failed to read line\");\n        let tokens = tokenizer.tokenize(&amp;input);\n        let stack = shunt(tokens);\n        let res = calculate(stack);\n        println!(\"{}\", res);\n    }\n}\n\n#[derive(Debug, PartialEq)]\nenum Token {\n    Number(i64),\n    Plus,\n    Sub,\n    Mul,\n    Div,\n    LeftParen,\n    RightParen,\n}\n\nimpl Token {\n    /// Returns the precedence of op\n    fn precedence(&amp;self) -&gt; usize {\n        match *self {\n            Token::Plus | Token::Sub =&gt; 1,\n            Token::Mul | Token::Div =&gt; 2,\n            _ =&gt; 0,\n        }\n    }\n}\n\nstruct Tokenizer {\n    number: Regex,\n}\n\nimpl Tokenizer {\n    fn new() -&gt; Tokenizer {\n        Tokenizer {\n            number: Regex::new(r\"^[0-9]+\").expect(\"Unable to create the regex\"),\n        }\n    }\n\n    /// Tokenizes the input string into a Vec of Tokens.\n    fn tokenize(&amp;self, mut input: &amp;str) -&gt; Vec&lt;Token&gt; {\n        let mut res = vec![];\n\n        loop {\n            input = input.trim_left();\n            if input.is_empty() { break }\n\n            let (token, rest) = match self.number.find(input) {\n                Some((_, end)) =&gt; {\n                    let (num, rest) = input.split_at(end);\n                    (Token::Number(num.parse().unwrap()), rest)\n                },\n                _ =&gt; {\n                    match input.chars().next() {\n                        Some(chr) =&gt; {\n                            (match chr {\n                                '+' =&gt; Token::Plus,\n                                '-' =&gt; Token::Sub,\n                                '*' =&gt; Token::Mul,\n                                '/' =&gt; Token::Div,\n                                '(' =&gt; Token::LeftParen,\n                                ')' =&gt; Token::RightParen,\n                                _ =&gt; panic!(\"Unknown character!\"),\n                            }, &amp;input[chr.len_utf8()..])\n                        }\n                        None =&gt; panic!(\"Ran out of input\"),\n                    }\n                }\n            };\n\n            res.push(token);\n            input = rest;\n        }\n\n        res\n    }\n}\n\n/// Transforms the tokens created by `tokenize` into RPN using the\n/// [Shunting-yard algorithm](https://en.wikipedia.org/wiki/Shunting-yard_algorithm)\nfn shunt(tokens: Vec&lt;Token&gt;) -&gt; Vec&lt;Token&gt; {\n    let mut queue = vec![];\n    let mut stack: Vec&lt;Token&gt; = vec![];\n    for token in tokens {\n        match token {\n            Token::Number(_) =&gt; queue.push(token),\n            Token::Plus | Token::Sub | Token::Mul | Token::Div =&gt; {\n                while let Some(o) = stack.pop() {\n                    if token.precedence() &lt;= o.precedence() {\n                        queue.push(o);\n                    } else {\n                        stack.push(o);\n                        break;\n                    }\n                }\n                stack.push(token)\n            },\n            Token::LeftParen =&gt; stack.push(token),\n            Token::RightParen =&gt; {\n                let mut found_paren = false;\n                while let Some(op) = stack.pop() {\n                    match op {\n                        Token::LeftParen =&gt; {\n                            found_paren = true;\n                            break;\n                        },\n                        _ =&gt; queue.push(op),\n                    }\n                }\n                assert!(found_paren)\n            },\n        }\n    }\n    while let Some(op) = stack.pop() {\n        queue.push(op);\n    }\n    queue\n}\n\n/// Takes a Vec of Tokens converted to RPN by `shunt` and calculates the result\nfn calculate(tokens: Vec&lt;Token&gt;) -&gt; i64 {\n    let mut stack = vec![];\n    for token in tokens {\n        match token {\n            Token::Number(n) =&gt; stack.push(n),\n            Token::Plus =&gt; {\n                let (b, a) = (stack.pop().unwrap(), stack.pop().unwrap());\n                stack.push(a + b);\n            },\n            Token::Sub =&gt; {\n                let (b, a) = (stack.pop().unwrap(), stack.pop().unwrap());\n                stack.push(a - b);\n            },\n            Token::Mul =&gt; {\n                let (b, a) = (stack.pop().unwrap(), stack.pop().unwrap());\n                stack.push(a * b);\n            },\n            Token::Div =&gt; {\n                let (b, a) = (stack.pop().unwrap(), stack.pop().unwrap());\n                stack.push(a / b);\n            },\n            _ =&gt; {\n                // By the time the token stream gets here, all the LeftParen\n                // and RightParen tokens will have been removed by shunt()\n                unreachable!();\n            },\n        }\n    }\n    stack[0]\n}\n</code></pre>\n\n<p>When I run it, however, it gives me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:66:22\n   |\n66 |                 Some((_, end)) =&gt; {\n   |                      ^^^^^^^^ expected struct `regex::Match`, found tuple\n   |\n   = note: expected type `regex::Match&lt;'_&gt;`\n              found type `(_, _)`\n</code></pre>\n\n<p>It's complaining that I am using a tuple for the <code>Some()</code> method when I am supposed to use a token. I am not sure what to pass for the token, because it appears that the tuple is traversing through the <code>Token</code> options. How do I re-write this to make the <code>Some()</code> method recognize the tuple as a <code>Token</code>? I have been working on this for a day but I have not found any really good solutions.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 1, "creation_date": 1541977693, "post_id": 53254119, "comment_id": 93392828, "body": "I start to hate their way of teaching things . They could at least tell before hand that this isnt a working example"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 2, "creation_date": 1542006506, "post_id": 53254119, "comment_id": 93399112, "body": "@nikoss If you are aren&#39;t happy with the current situation (which I can understand) you&#39;re always welcome to open an issue/pull request <a href=\"https://github.com/rust-lang/book\" rel=\"nofollow noreferrer\">at github</a> and improve the situation. This is an important step, because somebody who already knows rust, does not stumple upon these errors, because they know what&#39;s up. But newcommers like you are having a hard time, and I think this should be improved. Feel free to be part of the rust community &lt;3"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1541977348, "creation_date": 1541977348, "answer_id": 53254119, "question_id": 53254039, "link": "https://stackoverflow.com/questions/53254039/why-does-the-multithreaded-web-server-example-from-the-rust-book-not-compile/53254119#53254119", "title": "Why does the multithreaded web server example from the Rust book not compile?", "body": "<p>It seems that you are referring to the section of the book that is immediately followed by the text:</p>\n\n<blockquote>\n  <p>Theoretically, this code should compile. Unfortunately, the Rust\n  compiler isn\u2019t perfect yet, and we get this error:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type std::ops::FnOnce() +\nstd::marker::Send: the size of std::ops::FnOnce() + std::marker::Send cannot be\nstatically determined\n  --&gt; src/lib.rs:63:17\n   |\n63 |                 (*job)();\n   |                 ^^^^^^\n</code></pre>\n</blockquote>\n\n<p>Thus no, it's <strong>not</strong> a bug in the book; they deliberately included that to show a problem. Please continue reading the chapter to see how they suggest addressing it.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30411594/155423\">&quot;cannot move a value of type FnOnce&quot; when moving a boxed function</a></li>\n</ul>\n"}], "owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "accepted_answer_id": 53254119, "answer_count": 1, "score": 1, "last_activity_date": 1541977755, "creation_date": 1541976747, "last_edit_date": 1541977755, "question_id": 53254039, "link": "https://stackoverflow.com/questions/53254039/why-does-the-multithreaded-web-server-example-from-the-rust-book-not-compile", "title": "Why does the multithreaded web server example from the Rust book not compile?", "body": "<p>This is a <a href=\"https://doc.rust-lang.org/book/2018-edition/ch20-02-multithreaded.html\" rel=\"nofollow noreferrer\">code sample from the book</a>:</p>\n\n<pre><code>use std::{\n    sync::{mpsc, Arc, Mutex},\n    thread,\n};\n\nstruct Worker {\n    id: usize,\n    thread: thread::JoinHandle&lt;()&gt;,\n}\n\nimpl Worker {\n    fn new(\n        id: usize,\n        receiver: Arc&lt;Mutex&lt;mpsc::Receiver&lt;Box&lt;dyn FnOnce() + Send + 'static&gt;&gt;&gt;&gt;,\n    ) -&gt; Worker {\n        let thread = thread::spawn(move || loop {\n            let job = receiver.lock().unwrap().recv().unwrap();\n\n            println!(\"Worker {} got a job; executing.\", id);\n\n            (*job)();\n        });\n\n        Worker { id, thread }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=e3f0ed7a145426b37829374481355807\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>It doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type dyn std::ops::FnOnce() + std::marker::Send: the size of dyn std::ops::FnOnce() + std::marker::Send cannot be statically determined\n  --&gt; src/lib.rs:21:13\n   |\n21 |             (*job)();\n   |             ^^^^^^\n</code></pre>\n\n<p>Is this a bug in the book or am I missing something?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542020679, "post_id": 53253983, "comment_id": 93405914, "body": "The usual solution to implement an external trait for an external type is to use a newtype, e.g. <code>struct Float(f64)</code>. You can then implement <code>From</code> for <code>Float</code>, and use <code>Float</code> in your enum."}, {"owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542061345, "post_id": 53253983, "comment_id": 93425515, "body": "@SvenMarnach Thanks! That seemed to do the trick! If you want, you can post it as an answer and I&#39;ll accept. (I just posted all the code that I ended up writing for reference)."}], "answers": [{"tags": [], "owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "is_accepted": true, "score": 2, "last_activity_date": 1542061316, "creation_date": 1542061316, "answer_id": 53270950, "question_id": 53253983, "link": "https://stackoverflow.com/questions/53253983/can-i-use-strum-to-convert-a-string-to-f64/53270950#53270950", "title": "Can I use strum to convert a string to f64?", "body": "<p>Based off of Sven Marnach's comment I added a <code>struct Float(f64)</code>. Here is all the code for reference:</p>\n\n<pre><code>extern crate strum;\n#[macro_use]\nextern crate strum_macros;\n\nstruct Float(f64);\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for Float {\n    #[inline]\n    fn from(s: &amp;'a str) -&gt; Self {\n        Float(s.parse::&lt;f64&gt;().unwrap_or(0.0).to_owned())\n    }\n}\n\n#[derive(EnumString)]\nenum Token {\n    #[strum(default=\"true\")]\n    Number(Float)\n}\n\nfn main() {\n}\n</code></pre>\n"}], "owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 776, "favorite_count": 0, "accepted_answer_id": 53270950, "answer_count": 1, "score": 1, "last_activity_date": 1542061316, "creation_date": 1541976192, "last_edit_date": 1541976760, "question_id": 53253983, "link": "https://stackoverflow.com/questions/53253983/can-i-use-strum-to-convert-a-string-to-f64", "title": "Can I use strum to convert a string to f64?", "body": "<p>I am refactoring a <a href=\"https://codereview.stackexchange.com/questions/206745/small-stack-based-language-in-rust\">small stack based language</a> I wrote and decided I would have a parser phase separated from the execution phase and as a result I would parse strings to a <code>Token</code> enum. I tried using <a href=\"https://github.com/Peternator7/strum\" rel=\"nofollow noreferrer\"><code>strum</code></a> to do this, here is the smallest example I could manage:</p>\n\n<pre><code>extern crate strum; // 0.11.0\n#[macro_use]\nextern crate strum_macros; // 0.11.0\n\n#[derive(EnumString)]\nenum Token {\n    #[strum(default=\"true\")]\n    Number(f64)\n}\n\nfn main() {\n}\n</code></pre>\n\n<p>Basically, what this should do is if nothing is matched, default to parsing a float. So, convert anything it is given to float in this case. Which gave:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `f64: std::convert::From&lt;&amp;str&gt;` is not satisfied\n --&gt; src/main.rs:5:10\n  |\n5 | #[derive(EnumString)]\n  |          ^^^^^^^^^^ the trait `std::convert::From&lt;&amp;str&gt;` is not implemented for `f64`\n  |\n  = help: the following implementations were found:\n            &lt;f64 as std::convert::From&lt;u32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;f32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i8&gt;&gt;\n          and 3 others\n  = note: required because of the requirements on the impl of `std::convert::Into&lt;f64&gt;` for `&amp;str`\n</code></pre>\n\n<p>I also tried adding a <code>impl</code> for the conversion:</p>\n\n<pre><code>extern crate strum;\n#[macro_use]\nextern crate strum_macros;\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for f64 {\n    #[inline]\n    fn from(s: &amp;'a str) -&gt; Self {\n        // See footnote [1] for why conversion is done this way.\n        s.parse::&lt;f64&gt;().unwrap_or(0.0).to_owned();\n    }\n}\n\n#[derive(EnumString)]\nenum Token {\n    #[strum(default=\"true\")]\n    Number(f64)\n}\n\nfn main() {\n}\n</code></pre>\n\n<p>However, this gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n --&gt; src/main.rs:5:1\n  |\n5 | impl&lt;'a&gt; From&lt;&amp;'a str&gt; for f64 {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n  |\n  = note: the impl does not reference any types defined in this crate\n  = note: define and implement a trait or new type instead\n</code></pre>\n\n<p>Because I use <code>strum</code> I could not put this on Rust Playground, but the <code>Cargo.toml</code> is:</p>\n\n<pre><code>[package]\nname = \"strum_test\"\nversion = \"0.1.0\"\n\n[dependencies]\nstrum = \"0.11.0\"\nstrum_macros = \"0.11.0\"\n</code></pre>\n\n<p>And the file I edited was in <code>strum_test/src/main.rs</code>. Is there a way to handle this behavior in <code>strum</code>, or is there at least another graceful way of handling this conversion from <code>&amp;str</code> to <code>enum Token</code>?</p>\n\n<p><hr>\n<sup>1 In the language by design is supposed to be hard to make an error. Does it make sense to convert, for instance, <code>\"lol\"</code> to <code>0</code>? Not really, but my language does it anyway. More information is given in the CodeReview link.</sup></p>\n"}, {"tags": ["rust", "rust-cargo", "rust-compiler-plugin"], "answers": [{"comments": [{"owner": {"reputation": 129, "user_id": 5730289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88e7739f314b3092d61ae80e68a444be?s=128&d=identicon&r=PG&f=1", "display_name": "SSM", "link": "https://stackoverflow.com/users/5730289/ssm"}, "edited": false, "score": 2, "creation_date": 1541973676, "post_id": 53253528, "comment_id": 93391910, "body": "Thanks. It works now."}], "tags": [], "owner": {"reputation": 560, "user_id": 8551315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NZw6F.jpg?s=128&g=1", "display_name": "CFV", "link": "https://stackoverflow.com/users/8551315/cfv"}, "is_accepted": true, "score": 15, "last_activity_date": 1541972520, "creation_date": 1541972520, "answer_id": 53253528, "question_id": 53253483, "link": "https://stackoverflow.com/questions/53253483/can-not-compile-a-simple-rust-program/53253528#53253528", "title": "Can not compile a simple rust program", "body": "<p>This is a very common problem on MacOS. \nYou can fix it by typing <code>xcode-select --install</code> in terminal.\nIt means developer tools are not installed.</p>\n"}], "owner": {"reputation": 129, "user_id": 5730289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88e7739f314b3092d61ae80e68a444be?s=128&d=identicon&r=PG&f=1", "display_name": "SSM", "link": "https://stackoverflow.com/users/5730289/ssm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 1, "closed_date": 1541974044, "accepted_answer_id": 53253528, "answer_count": 1, "score": 7, "last_activity_date": 1541972520, "creation_date": 1541972242, "question_id": 53253483, "link": "https://stackoverflow.com/questions/53253483/can-not-compile-a-simple-rust-program", "closed_reason": "Duplicate", "title": "Can not compile a simple rust program", "body": "<p>Today I decided to learn and start coding in rust since it is a very promising language. However, I tried to compile and run a simple Hello world program in rust but I get this error for some reason. Could someone tell me what's wrong?</p>\n\n<p>Here is my rust code:</p>\n\n<pre><code>fn main(){\n        println!(\"Hi\");\n}\n</code></pre>\n\n<p>and here is the error message:</p>\n\n<blockquote>\n  <p>error: linking with <code>cc</code> failed: exit code: 1   |   = note: \"cc\"\n  \"-m64\" \"-L\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\"\n  \"test.test.7rcbfp3g-cgu.0.rcgu.o\" \"test.test.7rcbfp3g-cgu.1.rcgu.o\"\n  \"test.test.7rcbfp3g-cgu.2.rcgu.o\" \"test.test.7rcbfp3g-cgu.3.rcgu.o\"\n  \"test.test.7rcbfp3g-cgu.4.rcgu.o\" \"test.test.7rcbfp3g-cgu.5.rcgu.o\"\n  \"-o\" \"test\" \"test.5fi6c8ty3hqyycqf.rcgu.o\" \"-Wl,-dead_strip\"\n  \"-nodefaultlibs\" \"-L\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-a5984f6fc2a4870f.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-7c9487d161f01b59.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-e146b9b98ab73364.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-acb39784a181deae.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_system-89f97a4bae8c89d2.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-cd336d4bb1fade3c.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-d6545438808205eb.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-8aa8397108285683.rlib\"\n  \"/Users/moo7md/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-83c21e81fef8188c.rlib\"\n  \"-lSystem\" \"-lresolv\" \"-lpthread\" \"-lc\" \"-lm\"   = note: xcrun: error:\n  invalid active developer path (/Library/Developer/CommandLineTools),\n  missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</p>\n</blockquote>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541955094, "post_id": 53250976, "comment_id": 93386747, "body": "Related: <a href=\"https://stackoverflow.com/q/45086595/155423\">Is it considered a bad practice to implement Deref for newtypes?</a>."}], "tags": [], "owner": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "is_accepted": true, "score": 6, "last_activity_date": 1541955163, "last_edit_date": 1541955163, "creation_date": 1541955010, "answer_id": 53250976, "question_id": 53250856, "link": "https://stackoverflow.com/questions/53250856/can-i-borrow-a-slice-from-a-custom-type/53250976#53250976", "title": "Can I borrow a slice from a custom type?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>std::ops::Deref</code></a>:</p>\n\n<blockquote>\n  <p>In addition to being used for explicit dereferencing operations with the (unary) <code>*</code> operator in immutable contexts, <code>Deref</code> is also used implicitly by the compiler in many circumstances. This mechanism is called <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#more-on-deref-coercion\" rel=\"nofollow noreferrer\">'<code>Deref</code> coercion'</a>. In mutable contexts, <a href=\"https://doc.rust-lang.org/std/ops/trait.DerefMut.html\" rel=\"nofollow noreferrer\"><code>DerefMut</code></a> is used.</p>\n</blockquote>\n\n<p>Modified code:</p>\n\n<pre><code>use std::ops::Deref;\n\nstruct MyArray([u32; 5]);\n\nimpl MyArray {\n    fn new() -&gt; MyArray {\n        MyArray([42; 5])\n    }\n}\n\nimpl Deref for MyArray {\n    type Target = [u32];\n\n    fn deref(&amp;self) -&gt; &amp;[u32] {\n        &amp;self.0\n    }\n}\n\nfn main() {\n    let ma = MyArray::new();\n    let _: &amp;[u32] = &amp;ma;\n}\n</code></pre>\n"}], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 424, "favorite_count": 0, "accepted_answer_id": 53250976, "answer_count": 1, "score": 2, "last_activity_date": 1541955163, "creation_date": 1541954262, "last_edit_date": 1541955027, "question_id": 53250856, "link": "https://stackoverflow.com/questions/53250856/can-i-borrow-a-slice-from-a-custom-type", "title": "Can I borrow a slice from a custom type?", "body": "<p>It's possible to borrow a <code>Vec&lt;u32&gt;</code> into either a <code>&amp;Vec&lt;u32&gt;</code> or a <code>&amp;[u32]</code>. I thought this was thanks to either the <code>AsRef</code> or <code>Borrow</code> traits. However, I was unable to implement such borrowing on my own custom type. Am I barking up the wrong tree here?</p>\n\n<pre><code>use std::borrow::Borrow;\n\nstruct MyArray([u32; 5]);\n\nimpl MyArray {\n    fn new() -&gt; MyArray {\n        MyArray([42; 5])\n    }\n}\n\nimpl AsRef&lt;[u32]&gt; for MyArray {\n    fn as_ref(&amp;self) -&gt; &amp;[u32] {\n        &amp;self.0\n    }\n}\n\nimpl Borrow&lt;[u32]&gt; for MyArray {\n    fn borrow(&amp;self) -&gt; &amp;[u32] {\n        &amp;self.0\n    }\n}\n\nfn main() {\n    let ma = MyArray::new();\n    let _: &amp;[u32] = &amp;ma; // compilation failure\n}\n</code></pre>\n"}, {"tags": ["rust", "typechecking"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1541955331, "post_id": 53250631, "comment_id": 93386803, "body": "Related: <a href=\"https://stackoverflow.com/q/51485765/155423\">Run <code>rustc</code> to check a program without generating any files</a>"}], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 0, "creation_date": 1541956034, "post_id": 53250674, "comment_id": 93387005, "body": "&quot;without generating <i>any</i> code&quot; - I think that cargo still must compile and run <code>build.rs</code> scripts."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 0, "creation_date": 1541956555, "post_id": 53250674, "comment_id": 93387143, "body": "@ozkriff: True, &quot;code&quot; here does not mean &quot;source code&quot;. I am not sure how to improve the wording, though."}, {"owner": {"reputation": 37324, "user_id": 513198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/edf7f2190e60b6470bb6e4aab30152e7?s=128&d=identicon&r=PG", "display_name": "Xavier T.", "link": "https://stackoverflow.com/users/513198/xavier-t"}, "edited": false, "score": 0, "creation_date": 1542014622, "post_id": 53250674, "comment_id": 93402656, "body": "Additionally, <code>cargo check</code> has the benefit of being slightly quicker that a full build, so it makes sense to use primarily when developing."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1541953087, "creation_date": 1541953087, "answer_id": 53250674, "question_id": 53250631, "link": "https://stackoverflow.com/questions/53250631/does-rust-have-a-way-to-perform-syntax-and-semantic-analysis-without-generating/53250674#53250674", "title": "Does Rust have a way to perform syntax and semantic analysis without generating code?", "body": "<p>The <code>cargo check</code> command instructs <code>cargo</code> to do just that.</p>\n\n<p>It will check the syntax, types and borrows without generating any code.</p>\n"}], "owner": {"reputation": 11007, "user_id": 683710, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/NNKIH.jpg?s=128&g=1", "display_name": "Nordl&#246;w", "link": "https://stackoverflow.com/users/683710/nordl%c3%b6w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 53250674, "answer_count": 1, "score": 1, "last_activity_date": 1541954162, "creation_date": 1541952821, "last_edit_date": 1541954162, "question_id": 53250631, "link": "https://stackoverflow.com/questions/53250631/does-rust-have-a-way-to-perform-syntax-and-semantic-analysis-without-generating", "title": "Does Rust have a way to perform syntax and semantic analysis without generating code?", "body": "<p>Compilers such as gcc, clang and gccgo all have the switch <code>-fsyntax-only</code> used in single-buffer syntax checkers such as Flycheck. These only perform syntactic and, I assume, semantic analysis, thereby skipping code generation. Does Rust have something similar?</p>\n"}, {"tags": ["rust", "filesystems"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541935904, "post_id": 53248086, "comment_id": 93381442, "body": "&quot;Are there any other solutions that ignore the read-only flag?&quot; be root ? You are saying is there a solution to ignore permission in linux... I hope there is none ;)"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1541936695, "post_id": 53248086, "comment_id": 93381653, "body": "@Stargateur: Actually, to delete a file (or directory) in Unix you need write permissions to the parent directory, not to the file itself... except in sticky directories."}, {"owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541938134, "post_id": 53248086, "comment_id": 93382051, "body": "@Stargateur I need something akin to <code>rm -rf</code>. Now, <code>rm -rf</code> surely does delete &quot;000&quot; directories and their children."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 3, "creation_date": 1541938346, "post_id": 53248086, "comment_id": 93382118, "body": "Actually, I&#39;ve just tested it in my Linux box and <code>rm -rf</code> does <b>not</b> delete <code>000</code>, non-empty directories. It fails with <code>EPERM</code>."}, {"owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "edited": false, "score": 0, "creation_date": 1541939063, "post_id": 53248086, "comment_id": 93382308, "body": "Oh, indeed. Though it does remove &quot;000&quot; directories if they have no children. Like my latest example above in the question."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1541946281, "post_id": 53248086, "comment_id": 93384176, "body": "@rodrigo Yes, but I never say that read was needed."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541953409, "post_id": 53248086, "comment_id": 93386242, "body": "I cannot think of any way of removing a non-empty directory with <code>000</code> mode which does not involved first changing the permissions on the directory to be able to (1) read its content and (2) write to it (so as to delete said content). I&#39;d advise leaving it up to the user (<code>chmod -R</code> changes permissions recursively)."}, {"owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1541958244, "post_id": 53248086, "comment_id": 93387625, "body": "@MatthieuM note that I&#39;m not asking to remove a non-empty directory. I&#39;m basically asking the same behavior of <code>rm -rf</code>. It removes <b>empty</b> &quot;000&quot; directories, as well as accessible non-empty ones."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541964764, "post_id": 53248086, "comment_id": 93389474, "body": "Ah; that&#39;s interesting. I wonder if this is an edge case which <code>remove_dir_all</code> should cover. That is, if the user does not have the permission to read the directory content, simply attempt to remove it (which will fail if it contains anything). You may want to file a bug against <code>std::fs::remove_dir_all</code> and see if the larger Rust community is amenable to the suggestion."}, {"owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541965835, "post_id": 53248086, "comment_id": 93389773, "body": "@MatthieuM I was wondering about that as well. I&#39;ll look into it. Thanks for giving some confirmation. P.S. Meanwhile I&#39;ve made a micro-crate for that."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541936152, "post_id": 53248223, "comment_id": 93381503, "body": "<a href=\"https://doc.rust-lang.org/std/fs/fn.set_permissions.html\" rel=\"nofollow noreferrer\">set_permissions</a> is a possible solution but I believe that it&#39;s uncommon for a program to change permission on the file, it&#39;s better to let the user fix the problem by using chmod or equivalent."}, {"owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "edited": false, "score": 0, "creation_date": 1541938094, "post_id": 53248223, "comment_id": 93382040, "body": "The problem is that I want to do it recursively. Like some inner folder can have &quot;000&quot; permissions. I&#39;ll update the question. UPD: done, updated the question."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 3, "last_activity_date": 1541935439, "creation_date": 1541935439, "answer_id": 53248223, "question_id": 53248086, "link": "https://stackoverflow.com/questions/53248086/how-to-remove-directories-i-dont-have-permission-to-access-in-rust/53248223#53248223", "title": "How to remove directories I don&#39;t have permission to access in Rust?", "body": "<p>The problem is that <code>remove_dir_all()</code> first walks the contents of the directory to delete any file or subdirectory that may be there. And you do not have permissions to read the directory, thus the error.</p>\n\n<p>You can call instead:</p>\n\n<pre><code>std::fs::remove_dir(\"dir\").unwrap();\n</code></pre>\n\n<p>It does not try to walk the directory, instead assumes that it is already empty, and fails if it is not.</p>\n\n<p>If you want to delete a non-empty, <code>000</code> moded directory you will have to change the permissions first back to a sensible value and then you can call <code>remove_dir_all()</code> safely.</p>\n"}, {"tags": [], "owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "is_accepted": false, "score": 0, "last_activity_date": 1567561079, "last_edit_date": 1567561079, "creation_date": 1541965917, "answer_id": 53252588, "question_id": 53248086, "link": "https://stackoverflow.com/questions/53248086/how-to-remove-directories-i-dont-have-permission-to-access-in-rust/53252588#53252588", "title": "How to remove directories I don&#39;t have permission to access in Rust?", "body": "<p>No easy answer was found yet, so I've written my own implementation: <a href=\"https://crates.io/crates/rm_rf\" rel=\"nofollow noreferrer\">https://crates.io/crates/rm_rf</a></p>\n\n<p>Usage:</p>\n\n<pre><code>rm_rf::force_remove_all(\"target\").expect(\"Failed to remove target\");\n</code></pre>\n\n<p>This will remove read-only files on Windows and empty directories lacking read access on Linux.</p>\n"}], "owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 523, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1567561079, "creation_date": 1541934323, "last_edit_date": 1541945342, "question_id": 53248086, "link": "https://stackoverflow.com/questions/53248086/how-to-remove-directories-i-dont-have-permission-to-access-in-rust", "title": "How to remove directories I don&#39;t have permission to access in Rust?", "body": "<p>How to remove a directory recursively in Rust, deleting empty directories with Unix permissions of <code>000</code> as well? These permissions are read as \"no reading, writing or executing is allowed by any user\".</p>\n\n<p>I've previously created the directory like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mkdir -p dir/trap\nchmod 000 dir/trap\n</code></pre>\n\n<p>I've tried this method:</p>\n\n<pre><code>std::fs::remove_dir_all(\"dir\").unwrap();\n</code></pre>\n\n<p>It fails with \"Permission denied\" however. Are there any other solutions that still remove such directory, like <code>rm -rf</code> would?</p>\n"}, {"tags": ["concurrency", "rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542025163, "post_id": 53258979, "comment_id": 93408317, "body": "Thank you for the answer, but I&#39;m not convinced yet. Let me reword my assumption using &quot;future&quot; and &quot;task&quot;. The sender future awaits for receiver notification if the buffer is full at the time of the sending attempt. However, notification is sent against the task, not the sender future. Usually the notification is propagated down to the sender future, but that&#39;s not always the case in presence of selection; the whole task may have even been dropped without seeing notification. Then no alive sender future can wake despite non-full buffer. There may be something wrong but I&#39;m not sure where."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542031870, "post_id": 53258979, "comment_id": 93411929, "body": "It is the receiver that notify, not the sender. It is a &quot;sending&quot; future that you select from: this means that there are no notifications from select in every case. It is <code>Receiver::unpark_one</code> that notifies one sender in the queue of parked senders that a slot in the buffer is available."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542034033, "post_id": 53258979, "comment_id": 93413246, "body": "I know. The receiver notifies a sender (in case of the full buffer). However, if I understand correctly, the notification goes to the sender <i>task</i>, not directly to the sender <i>future</i>. Then the sender task recursively calls <code>poll</code> that will eventually reach the sender future. But is this guaranteed that the <code>poll</code> reaches the leaf future we intend? I thought not, because if one arm of <code>select!</code> completes (<code>ready</code> in my case), the <code>select!</code> will ignore other futures (<code>send</code> in my case) even if they&#39;re waiting for something. If so, what if the notification disappears there? That&#39;s my question."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542103259, "post_id": 53258979, "comment_id": 93438758, "body": "Future don&#39;t wait for something, they are to be polled: when <code>select!</code> complete the <code>sending</code> future is left in an incomplete state and in your code no one will poll it again for resolving it. the only side effect that I see it is that <code>-3</code> is not sent through the channel."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542116575, "post_id": 53258979, "comment_id": 93446274, "body": "Yes, then my concern is that, after that, the buffer may be vacant (because <code>-3</code> is not sent) but no one sends an item against the channel, because other sending tasks are not notified. What prevents this bad (at least counterintuitive) situation?"}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542119029, "post_id": 53258979, "comment_id": 93447862, "body": "Suppose the buffer is full: in this case <code>-3</code> is not sent and <code>select!</code> finishes with immediate <code>fallback</code>. At this point there are no any vacant slot in the buffer.  All sending tasks will blocks until the receiver (look at the line <code>await recv.next()</code>) reads an item from the channel queue and unblocks one active sender (obviously not the <code>select!</code> <code>sending</code> future that at this time is dropped)."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542120785, "post_id": 53258979, "comment_id": 93448971, "body": "Ah, that&#39;s the point. I&#39;m interested in how the last parenthesized sentence is guaranteed. I couldn&#39;t figure out that at a first glance on the <code>futures</code> source code. Doesn&#39;t it notify a <code>Waker</code> (task handle) that pointed to a dropped task (task structure)?"}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1542123492, "post_id": 53258979, "comment_id": 93450839, "body": "A deep study of <code>futures-rs</code> is needed to fully understand, not an easy task ... but clearly it does not works like your assumption.  If it can help (a very coarse explanation): notify is a signal send to a Task. A Task is a manager of resources. In this case resources are <code>sending</code> and <code>receiver</code> stream/future. It is a Task that it is <code>notified</code> and there are the <code>sending&#47;receiver</code> active futures that are polled at the right time."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 1, "last_activity_date": 1542014000, "creation_date": 1542014000, "answer_id": 53258979, "question_id": 53245906, "link": "https://stackoverflow.com/questions/53245906/why-futureschannelmpsc-can-just-notify-one-sender/53258979#53258979", "title": "Why `futures::channel::mpsc` can just notify one sender?", "body": "<blockquote>\n  <p>I doubt this works in presense of select!, because select! may lead to false notification. </p>\n</blockquote>\n\n<p>No, You can't \"confuse\" a <code>mpsc</code> channel using <code>select!</code>:</p>\n\n<p><code>select!</code> does not trigger any mspc related notification, it just return the future that finishes first.</p>\n\n<p>When the message queue is full it is  <code>await!(recv.next())</code> that notifies one producer that a slot into the bounded channel is now available.</p>\n\n<p>In other words: there are no <code>true waiters</code> and <code>false waiters</code>:\nwhen a channel message queue is full the producers block and await that the receiver side consumes the enqueued messages.</p>\n"}, {"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": false, "score": 2, "last_activity_date": 1542466544, "creation_date": 1542466544, "answer_id": 53352368, "question_id": 53245906, "link": "https://stackoverflow.com/questions/53245906/why-futureschannelmpsc-can-just-notify-one-sender/53352368#53352368", "title": "Why `futures::channel::mpsc` can just notify one sender?", "body": "<p>Further investigation on the <code>futures</code> source code solved my problem. At last, I cannot confuse the mpsc in this way.</p>\n\n<p>The point is that, the size of <code>mpsc</code> is flexible and can grow more than initially specified. This behavior is <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.9/futures/channel/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\">mentioned in the docs</a>:</p>\n\n<blockquote>\n  <p>The channel's capacity is equal to <code>buffer + num-senders</code>. In other words, each sender gets a guaranteed slot in the channel capacity, and on top of that there are buffer \"first come, first serve\" slots available to all senders.</p>\n</blockquote>\n\n<p>Yes, I've first read this before experimenting, but I couldn't figure out the importance of this at that time.</p>\n\n<h2>Problem with fixed buffer</h2>\n\n<p>Think of a typical bounded queue implementation, where the size of a queue cannot grow more than initially specified. The spec is this:</p>\n\n<ul>\n<li>When the queue is empty, receivers block.</li>\n<li>When the queue is full (that is, the size is hitting the bound), senders block.</li>\n</ul>\n\n<p>In this situation, if the queue is full, <strong>multiple senders are waiting for a single resource</strong> (the size of the queue).</p>\n\n<p>In multithread programming, this is accomplished by primitives like <code>notify_one</code>. However, in <code>futures</code>, this is fallible: unlike multithreaded programming, <strong>the notified task doesn't necessarily make use of the resource</strong>, because the task may already have given up acquiring the resource (due to constructions like <code>select!</code> or <code>Deadline</code>) Then the spec is simply broken (the queue isn't full, but all alive senders are blocked).</p>\n\n<h2><code>mpsc</code> is flexible</h2>\n\n<p>As pointed out above, <strong>the buffer size for <code>futures::channel::mpsc::channel</code> isn't strict</strong>. The spec is summarized as:</p>\n\n<ul>\n<li>When <code>message_queue.len() == 0</code>, receivers block.</li>\n<li>When <code>message_queue.len() &gt;= buffer</code>, senders <strong>may</strong> block.</li>\n<li>When <code>message_queue.len() &gt;= buffer + num_senders</code>, senders block.</li>\n</ul>\n\n<p>Here, <code>num_senders</code> is <em>basically</em> the number of clones of <code>Sender</code>, but more than that in some cases. More precisely, <code>num_senders</code> is the number of <code>SenderTask</code>s.</p>\n\n<p>So, how do we avoid resource sharing? We have additional states for that:</p>\n\n<ul>\n<li>Each sender (an instance of <code>SenderTask</code>) has <code>is_parked</code> boolean state.</li>\n<li>The channel has another queue called <code>parked_queue</code>, a queue of <code>Arc</code> references to <code>SenderTask</code>.</li>\n</ul>\n\n<p>The channel maintains the following invariants:</p>\n\n<ul>\n<li><code>message_queue.len() &lt;= buffer + num_parked_senders</code>. Note that we don't know the value of <code>num_parked_senders</code>.</li>\n<li><code>parked_queue.len() == min(0, message_queue.len() - buffer)</code></li>\n<li>Each parked sender has at least one message in <code>parked_queue</code>.</li>\n</ul>\n\n<p>This is accomplished by the following algorithm:</p>\n\n<ul>\n<li>For receiving,\n\n<ul>\n<li>it pops off a <code>SenderTask</code> from <code>parked_queue</code> and, if the sender is parked, unpark it.</li>\n</ul></li>\n<li>For sending,\n\n<ul>\n<li>It always waits for <code>is_parked</code> to be <code>false</code>. If <code>message_queue.len() &lt; buffer</code>, as <code>parked_queue.len() == 0</code>, all senders are unparked. Therefore we can guarantee progress in this case.</li>\n<li>If <code>is_parked</code> is <code>false</code>, push the message to the queue anyway.</li>\n<li>After that, if <code>message_queue.len() &lt;= buffer</code>, it needs to do nothing further.</li>\n<li>if <code>message_queue.len() &gt; buffer</code>, the sender is made unparked and pushed to <code>parked_queue</code>.</li>\n</ul></li>\n</ul>\n\n<p>You can easily check the invariant is maintained in the algorithm above.</p>\n\n<p>Surprisingly, <strong>the senders no more wait for a shared resource</strong>. Instead, A sender waits for its <code>is_parked</code> state. Even if the sending task is dropped before completion, it just remains in <code>parked_queue</code> for a while and doesn't block anything. How clever it is!</p>\n"}], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 786, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1542466544, "creation_date": 1541911227, "question_id": 53245906, "link": "https://stackoverflow.com/questions/53245906/why-futureschannelmpsc-can-just-notify-one-sender", "title": "Why `futures::channel::mpsc` can just notify one sender?", "body": "<p>I'm reading <code>futures-preview</code> 0.3 sources to find out how to do \"notify any\" correctly. In <code>mpsc::channel</code> (which is bounded), multiple senders may wait for a receipt (in case of full buffer).</p>\n\n<p>Looking into the implementation of <a href=\"https://github.com/rust-lang-nursery/futures-rs/blob/0.3.0-alpha.9/futures-channel/src/mpsc/mod.rs#L860-L894\" rel=\"nofollow noreferrer\"><code>next_message</code></a> and <a href=\"https://github.com/rust-lang-nursery/futures-rs/blob/0.3.0-alpha.9/futures-channel/src/mpsc/mod.rs#L896-L914\" rel=\"nofollow noreferrer\"><code>unpark_one</code></a>, the receiver seems to only notify one sender per one receipt.</p>\n\n<p>I doubt this works in presense of <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.9/futures/macro.select.html\" rel=\"nofollow noreferrer\"><code>select!</code></a>, because <code>select!</code> may lead to false notification. However, I couldn't produce a problem case.</p>\n\n<p>Here's my attempt to confuse <code>mpsc</code>:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\nname = \"futures-mpsc-test\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nfutures-preview = { version = \"0.3.0-alpha.9\", features = [\"tokio-compat\"] }\ntokio = \"0.1.11\"\n</code></pre>\n\n<p>and this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await, await_macro, futures_api, pin)]\n\nuse std::collections::HashSet;\n\nuse futures::prelude::*;\n\nuse futures::channel::mpsc::{channel, Sender};\nuse futures::channel::oneshot;\nuse futures::select;\n\nasync fn main2() {\n    let channel_len = 1;\n    let num_false_wait = 1000;\n    let num_expected_messages = 100;\n\n    let (mut send, mut recv) = channel(channel_len);\n    // One extra capacity per sender. Fill the extras.\n    await!(send.send(-2)).unwrap();\n\n    // Fill buffers\n    for _ in 0..channel_len {\n        await!(send.send(-1)).unwrap();\n    }\n\n    // False waits. Should resolve and produce false waiters.\n    for _ in 0..num_false_wait {\n        await!(false_wait(&amp;send));\n    }\n\n    // True messages.\n    {\n        let mut send = send.clone();\n        await!(send.send(-2)).unwrap();\n        tokio::spawn(async move {\n            for i in 0..num_expected_messages {\n                await!(send.send(i)).unwrap();\n            }\n            Ok(())\n        }.boxed().compat());\n    }\n\n    // Drain receiver until all true messages are received.\n    let mut expects = (0..num_expected_messages).collect::&lt;HashSet&lt;_&gt;&gt;();\n    while !expects.is_empty() {\n        let i = await!(recv.next()).unwrap();\n        expects.remove(&amp;i);\n        eprintln!(\"Received: {}\", i);\n    }\n}\n\n// If `send` is full, it will produce false waits.\nasync fn false_wait(send: &amp;Sender&lt;i32&gt;) {\n    let (wait_send, wait_recv) = oneshot::channel();\n    let mut send = send.clone();\n    await!(send.send(-2)).unwrap();\n    tokio::spawn(async move {\n        let mut sending = send.send(-3);\n        let mut fallback = future::ready(());\n        select! {\n            sending =&gt; {\n                sending.unwrap();\n            },\n            fallback =&gt; {\n                eprintln!(\"future::ready is selected\");\n            },\n        };\n        wait_send.send(()).unwrap();\n        Ok(())\n    }.boxed().compat());\n    await!(wait_recv).unwrap();\n}\n\nfn main() {\n    tokio::run(async {\n        await!(main2());\n        Ok(())\n    }.boxed().compat());\n}\n</code></pre>\n\n<p>I expect this to happen:</p>\n\n<ol>\n<li>The buffer is filled by <code>-1</code>. Therefore later senders are blocked.</li>\n<li>There are both \"true waiters\" and \"false waiters\".\nFalse waiters already exited, because the other arm of <code>select!</code>\nimmediately completes.</li>\n<li>In each call to <code>await!(recv.next())</code>, at most <em>one</em> waiting sender is\nnotified. If a false waiter is notified, no one can push to the buffer,\neven if the buffer has a vacant room.</li>\n<li>If all elements are drained without true notification,\nthe entire system is stuck.</li>\n</ol>\n\n<p>Despite my expectation, the <code>main2</code> async function successfully completed. Why?</p>\n"}, {"tags": ["stream", "rust", "future"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541909077, "post_id": 53245412, "comment_id": 93376579, "body": "<code>for x in stream { file.write_all(&amp;x) }</code> something like that..."}, {"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1541909386, "post_id": 53245412, "comment_id": 93376624, "body": "That would require StreamingBody to be an iterator, which it is not."}], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1541990753, "post_id": 53252769, "comment_id": 93395325, "body": "One question about this. Where you call <code>streaming_body().for_each(...)</code>, is that more or less equivalent to doing <code>for chunk in streaming_body().wait() { ... }</code>, other than one using a closure and the other using an iterator?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 1, "creation_date": 1542017578, "post_id": 53252769, "comment_id": 93404210, "body": "@NicholasBishop There is a relevant difference between the two. The for loop you suggest blocks the current thread, so the thread can&#39;t do any other work until the complete stream is resolved. The stream combinator <code>for_each()</code>, on the other hand, yields control to the event loop whenever it would block. (Of course the test code in this answer does not use an event loop, and also blocks until the future is resolved. However, the whole point of asynchronous code is not to unnecessarily block the current thread, so you wouldn&#39;t do this in real code.)"}, {"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1542035513, "post_id": 53252769, "comment_id": 93414082, "body": "For my use case I do actually want to block the thread -- just because the API provided is async doesn&#39;t mean that the calling code is."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1542036433, "post_id": 53252769, "comment_id": 93414602, "body": "@NicholasBishop Then both versions are fine. I&#39;d probably use <code>Stream::wait()</code> in that case, since working with stream combinators can be cumbersome."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1542040188, "post_id": 53252769, "comment_id": 93416665, "body": "<code>Stream::wait</code> is fine for now, but it&#39;s being removed in the futures rework (just like <code>Future::wait</code>). There will be a direct replacement for <code>Future::wait</code>, but I don&#39;t know of one for <code>Stream::wait</code>."}, {"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 0, "creation_date": 1548676981, "post_id": 53252769, "comment_id": 95613610, "body": "@Shepmaster wouldn&#39;t <code>stream.collect().wait()</code> work fine?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 0, "creation_date": 1548683812, "post_id": 53252769, "comment_id": 95617520, "body": "@jbg I think I&#39;m missing something about your suggestion; <code>collect</code> will place everything in memory at once, but the OP states <i>without storing it entirely in memory first</i>."}, {"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 0, "creation_date": 1548820814, "post_id": 53252769, "comment_id": 95675859, "body": "@Shepmaster apologies, I was replying to you in isolation without reading the OP&#39;s question. stream.collect().wait() is clearly not appropriate if you don&#39;t know the stream will fit in memory, or for some other reason don&#39;t want it buffered in memory. I also don&#39;t know of a replacement for Stream::wait in futures-preview."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1542031957, "last_edit_date": 1542031957, "creation_date": 1541967112, "answer_id": 53252769, "question_id": 53245412, "link": "https://stackoverflow.com/questions/53245412/how-do-i-write-a-futuresstream-to-disk-without-storing-it-entirely-in-memory-f/53252769#53252769", "title": "How do I write a futures::Stream to disk without storing it entirely in memory first?", "body": "<p>Since <code>StreamingBody</code> implements <code>Stream&lt;Item = Vec&lt;u8&gt;, Error = Error&gt;</code>, we can construct a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> that represents that:</p>\n\n<pre><code>extern crate futures; // 0.1.25\n\nuse futures::{prelude::*, stream};\n\ntype Error = Box&lt;std::error::Error&gt;;\n\nfn streaming_body() -&gt; impl Stream&lt;Item = Vec&lt;u8&gt;, Error = Error&gt; {\n    const DUMMY_DATA: &amp;[&amp;[u8]] = &amp;[b\"0123\", b\"4567\", b\"89AB\", b\"CDEF\"];\n    let iter_of_owned_bytes = DUMMY_DATA.iter().map(|&amp;b| b.to_owned());\n    stream::iter_ok(iter_of_owned_bytes)\n}\n</code></pre>\n\n<p>We can then get a \"streaming body\" somehow and use <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.for_each\" rel=\"nofollow noreferrer\"><code>Stream::for_each</code></a> to process each element in the <code>Stream</code>. Here, we just call <code>write_all</code> with some provided output location:</p>\n\n<pre><code>use std::{fs::File, io::Write};\n\nfn save_to_disk(mut file: impl Write) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n    streaming_body().for_each(move |chunk| file.write_all(&amp;chunk).map_err(Into::into))\n}\n</code></pre>\n\n<p>We can then write a little testing main:</p>\n\n<pre><code>fn main() {\n    let mut file = Vec::new();\n\n    {\n        let fut = save_to_disk(&amp;mut file);\n        fut.wait().expect(\"Could not drive future\");\n    }\n\n    assert_eq!(file, b\"0123456789ABCDEF\");\n}\n</code></pre>\n\n<p>Important notes about the quality of this na\u00efve implementation:</p>\n\n<ol>\n<li><p>The call to <code>write_all</code> may potentially block, which you should not do in an asynchronous program. It would be better to hand off that blocking work to a threadpool.</p></li>\n<li><p>The usage of <code>Future::wait</code> forces the thread to block until the future is done, which is great for tests but may not be correct for your real use case.</p></li>\n</ol>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 955, "favorite_count": 0, "accepted_answer_id": 53252769, "answer_count": 1, "score": 1, "last_activity_date": 1542031957, "creation_date": 1541904408, "last_edit_date": 1541910416, "question_id": 53245412, "link": "https://stackoverflow.com/questions/53245412/how-do-i-write-a-futuresstream-to-disk-without-storing-it-entirely-in-memory-f", "title": "How do I write a futures::Stream to disk without storing it entirely in memory first?", "body": "<p>There's an example of downloading a file with Rusoto S3 here:\n<a href=\"https://stackoverflow.com/questions/51287360/how-to-save-a-file-downloaded-from-s3-with-rusoto-to-my-hard-drive\">How to save a file downloaded from S3 with Rusoto to my hard drive?</a></p>\n\n<p>The problem is that it looks like it's downloading the whole file into memory and then writing it to disk, because it uses the <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\" rel=\"nofollow noreferrer\"><code>write_all</code></a> method which takes an array of bytes, not a stream. How can I use the <a href=\"https://rusoto.github.io/rusoto/rusoto_s3/struct.StreamingBody.html\" rel=\"nofollow noreferrer\"><code>StreamingBody</code></a>, which implements <a href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html\" rel=\"nofollow noreferrer\"><code>futures::Stream</code></a> to stream the file to disk?</p>\n"}, {"tags": ["multithreading", "syntax", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541905452, "post_id": 53244968, "comment_id": 93376116, "body": "<i>it doesn&#39;t seem that T is actually set or used for anything</i> \u2014 what do you think <code>pub fn join(self) -&gt; Result&lt;T&gt;</code> is using then?"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541906831, "post_id": 53244968, "comment_id": 93376305, "body": "Therein lies the missing link. I didn&#39;t realize a thread-moved closure could actually return a value, as this fact is not particularly emphasized in the Rust documentation."}], "answers": [{"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 2, "last_activity_date": 1541905532, "last_edit_date": 1541905532, "creation_date": 1541899396, "answer_id": 53245037, "question_id": 53244968, "link": "https://stackoverflow.com/questions/53244968/why-does-threadjoinhandlet-have-a-type-parameter/53245037#53245037", "title": "Why does `thread::JoinHandle&lt;T&gt;` have a type parameter?", "body": "<p>It's the type that's returned from the threaded code. You can always auto-deduce the type, and you generally don't want to write the type explicitly. There's a few examples in the documentation for <code>join</code>, which returns a <code>Result&lt;T&gt;</code>.</p>\n\n<p>The following example is from the documentation:</p>\n\n<p><code>spawn</code> returns a JoinHandle, which when joined returns the Result.</p>\n\n<pre><code>let computation = thread::spawn(|| { \n    // Some expensive computation.\n    42\n});\nlet result = computation.join().unwrap();\nprintln!(\"{}\", result);\n</code></pre>\n"}], "owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "accepted_answer_id": 53245037, "answer_count": 1, "score": 1, "last_activity_date": 1541905532, "creation_date": 1541898670, "last_edit_date": 1541905411, "question_id": 53244968, "link": "https://stackoverflow.com/questions/53244968/why-does-threadjoinhandlet-have-a-type-parameter", "title": "Why does `thread::JoinHandle&lt;T&gt;` have a type parameter?", "body": "<p>In Rust, the <code>thread::JoinHandle&lt;T&gt;</code> type included with the standard library has the type parameter <code>T</code>. However, it doesn't seem that <code>T</code> is actually set or used for anything.</p>\n\n<p>Indeed, <a href=\"https://doc.rust-lang.org/std/thread/struct.JoinHandle.html\" rel=\"nofollow noreferrer\">Rust's own documentation</a> mostly just uses <code>thread::JoinHandle&lt;_&gt;</code> whenever it needs to assign a <code>JoinHandle&lt;T&gt;</code> to something. What does this <code>T</code> actually do?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1541897739, "post_id": 53244854, "comment_id": 93375019, "body": "You can&#39;t <code>impl Trait for Type</code> if neither <code>Trait</code> nor <code>Type</code> are defined in your crate."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1541903660, "post_id": 53244854, "comment_id": 93375875, "body": "@PitaJ It looks like OP has defined their own type named <code>Cell</code>. std&#39;s <code>Cell</code> doesn&#39;t have a lifetime parameter."}, {"owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "edited": false, "score": 0, "creation_date": 1541904826, "post_id": 53244854, "comment_id": 93376030, "body": "Yeah, Cell is a type defined by me"}, {"owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "edited": false, "score": 0, "creation_date": 1541906170, "post_id": 53244854, "comment_id": 93376228, "body": "Here is a playground that reproduces the problem: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0ba74d4022cbe87ec3103ca19b6bee42\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  If I remove the Display impl for TableCell it works but I don&#39;t understand why"}], "owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1541905797, "answer_count": 0, "score": 0, "last_activity_date": 1541965892, "creation_date": 1541897301, "last_edit_date": 1541965892, "question_id": 53244854, "link": "https://stackoverflow.com/questions/53244854/implement-from-trait-for-t-where-t-implements-display", "closed_reason": "Duplicate", "title": "Implement From trait for T where T implements Display", "body": "<p>I'm trying to implement <code>From&lt;T&gt;</code> where <code>T</code> implements <code>Display</code> for my custom type <code>Cell</code>:</p>\n\n<pre><code>use std::borrow::Cow;\nuse std::fmt::{Display, Formatter, Result};\n\npub struct TableCell&lt;'data&gt; {\n    pub data: Cow&lt;'data, str&gt;,\n    pub col_span: usize,\n    pub pad_content: bool,\n}\n\nimpl&lt;'data&gt; TableCell&lt;'data&gt; {\n    pub fn new&lt;T&gt;(data: T) -&gt; TableCell&lt;'data&gt;\n    where\n        T: ToString,\n    {\n        return TableCell {\n            data: data.to_string().into(),\n            col_span: 1,\n            pad_content: true,\n        };\n    }\n}\n\nimpl&lt;'data&gt; Display for TableCell&lt;'data&gt; {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; Result {\n        write!(f, \"{}\", self.data)\n    }\n}\n\nimpl&lt;'data, T&gt; From&lt;T&gt; for TableCell&lt;'data&gt;\nwhere\n    T: ToString,\n{\n    fn from(other: T) -&gt; Self {\n        return TableCell::new(other);\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I keep running into the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::convert::From&lt;TableCell&lt;'_&gt;&gt;` for type `TableCell&lt;'_&gt;`:\n  --&gt; src/main.rs:29:1\n   |\n29 | / impl&lt;'data, T&gt; From&lt;T&gt; for TableCell&lt;'data&gt;\n30 | | where\n31 | |     T: ToString,\n32 | | {\n...  |\n35 | |     }\n36 | | }\n   | |_^\n   |\n   = note: conflicting implementation in crate `core`:\n           - impl&lt;T&gt; std::convert::From&lt;T&gt; for T;\n</code></pre>\n\n<p>Is this sort of thing possible, or do I need to implement <code>From</code> for specific types?</p>\n"}, {"tags": ["rust", "yaml"], "answers": [{"comments": [{"owner": {"reputation": 4429, "user_id": 102133, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/561a3a55352fe6a5343e541a6894b541?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/102133/ben"}, "edited": false, "score": 0, "creation_date": 1575904885, "post_id": 53243962, "comment_id": 104713451, "body": "This example returns <code>Error: Scan(ScanError { mark: Marker { index: 7, line: 2, col: 4 }, info: &quot;mapping values are not allowed in this context&quot; })</code>; does anything changed since your answer @Shepmaster ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4429, "user_id": 102133, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/561a3a55352fe6a5343e541a6894b541?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/102133/ben"}, "edited": false, "score": 1, "creation_date": 1575905631, "post_id": 53243962, "comment_id": 104713886, "body": "@Ben sounds like your YAML file is malformed or doesn&#39;t match with the type that you are attempting to parse."}, {"owner": {"reputation": 4429, "user_id": 102133, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/561a3a55352fe6a5343e541a6894b541?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/102133/ben"}, "edited": false, "score": 0, "creation_date": 1575905851, "post_id": 53243962, "comment_id": 104713984, "body": "humm sorry (rust beginner here); i was more trying to parse key/value&#39;d yaml file (a one liner like <code>a: &#39;b&#39;</code> ) to get started). but i guess it goes well beyond the scope of the initial issue here"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4429, "user_id": 102133, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/561a3a55352fe6a5343e541a6894b541?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/102133/ben"}, "edited": false, "score": 1, "creation_date": 1575906027, "post_id": 53243962, "comment_id": 104714061, "body": "@Ben that&#39;s what &quot;You can deserialize into the looser-typed Value if you don&#39;t know your format &quot; and &quot;read the Serde guide for full details of how to do type-directed&quot; refer to."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 16, "last_activity_date": 1575905611, "last_edit_date": 1575905611, "creation_date": 1541888117, "answer_id": 53243962, "question_id": 53243795, "link": "https://stackoverflow.com/questions/53243795/how-do-you-read-a-yaml-file-in-rust/53243962#53243962", "title": "How do you read a YAML file in Rust?", "body": "<p><a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/\" rel=\"noreferrer\">serde-yaml's documentation</a> has the following 4 functions:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/fn.from_reader.html\" rel=\"noreferrer\"><code>from_reader</code></a> \u2014 Deserialize an instance of type <code>T</code> from an IO stream of YAML.</li>\n<li><a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/fn.from_slice.html\" rel=\"noreferrer\"><code>from_slice</code></a> \u2014  Deserialize an instance of type <code>T</code> from bytes of YAML text.</li>\n<li><a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/fn.from_str.html\" rel=\"noreferrer\"><code>from_str</code></a> \u2014 Deserialize an instance of type <code>T</code> from a string of YAML text.</li>\n<li><a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/fn.from_value.html\" rel=\"noreferrer\"><code>from_value</code></a> \u2014 Interpret a <code>serde_yaml::Value</code> as an instance of type <code>T</code>.</li>\n</ul>\n\n<p>Using <code>from_reader</code> as an example:</p>\n\n<pre><code>use serde_yaml; // 0.8.7\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let f = std::fs::File::open(\"something.yaml\")?;\n    let d: String = serde_yaml::from_reader(f)?;\n    println!(\"Read YAML string: {}\", d);\n    Ok(())\n}\n</code></pre>\n\n<p><strong>something.yaml</strong>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"I am YAML\"\n</code></pre>\n\n<p>You can deserialize into the looser-typed <a href=\"https://docs.rs/serde_yaml/0.8.7/serde_yaml/enum.Value.html\" rel=\"noreferrer\"><code>Value</code></a> if you don't know your format (<code>String</code> in this example), but be sure to read the <a href=\"https://serde.rs/\" rel=\"noreferrer\">Serde guide</a> for full details of how to do type-directed serialization and deserialization instead.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/49950214/155423\">How do I parse a JSON File?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/48641541/deserializing-toml-into-vector-of-enum-with-values\">Deserializing TOML into vector of enum with values</a></li>\n</ul>\n\n<p>In general, using <em>any</em> Serde format is pretty much the same as all the rest.</p>\n"}, {"tags": [], "owner": {"reputation": 1988, "user_id": 10446, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6baf8275b8eb95f464d38c73398e6f14?s=128&d=identicon&r=PG", "display_name": "sbeskur", "link": "https://stackoverflow.com/users/10446/sbeskur"}, "is_accepted": false, "score": 7, "last_activity_date": 1551405218, "last_edit_date": 1551405218, "creation_date": 1551403899, "answer_id": 54936715, "question_id": 53243795, "link": "https://stackoverflow.com/questions/53243795/how-do-you-read-a-yaml-file-in-rust/54936715#54936715", "title": "How do you read a YAML file in Rust?", "body": "<p>This example uses the <a href=\"https://crates.io/crates/yaml-rust\" rel=\"noreferrer\">yaml_rust crate</a></p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\nuse yaml_rust::yaml::{Hash, Yaml};\nuse yaml_rust::YamlLoader;\n\nfn main() {\n    println!(\"Hello, Yaml\");\n    let file = \"./etc/my_yaml_file.yaml\";\n    load_file(file);\n}\n\nfn load_file(file: &amp;str) {\n    let mut file = File::open(file).expect(\"Unable to open file\");\n    let mut contents = String::new();\n\n    file.read_to_string(&amp;mut contents)\n        .expect(\"Unable to read file\");\n\n    let docs = YamlLoader::load_from_str(&amp;contents).unwrap();\n\n    // iterate / process doc[s] ..\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 12296, "user_id": 461597, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/7fa573d21875f5b980a2d81c695c71f3?s=128&d=identicon&r=PG", "display_name": "Unapiedra", "link": "https://stackoverflow.com/users/461597/unapiedra"}, "is_accepted": false, "score": 0, "last_activity_date": 1605663772, "creation_date": 1605663772, "answer_id": 64885817, "question_id": 53243795, "link": "https://stackoverflow.com/questions/53243795/how-do-you-read-a-yaml-file-in-rust/64885817#64885817", "title": "How do you read a YAML file in Rust?", "body": "<p>The above answer is great if you want to do it properly. Here's a complete example to get started with.</p>\n<p><code>data['foo']['bar'].as_str()</code> returns an <code>Option&lt;str&gt;</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn example() -&gt; Result&lt;String&gt; {\n    let f = std::fs::File::open(&quot;something.yaml&quot;)?;\n    let data: serde_yaml::Value = serde_yaml::from_reader(f)?;\n    data[&quot;foo&quot;][&quot;bar&quot;]\n        .as_str()\n        .map(|s| s.to_string())\n        .ok_or(anyhow!(&quot;Could not find key foo.bar in something.yaml&quot;))\n}\n</code></pre>\n"}], "owner": {"reputation": 925, "user_id": 4701228, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a51e05717e2b8a78ae0876d705757d41?s=128&d=identicon&r=PG&f=1", "display_name": "semore_1267", "link": "https://stackoverflow.com/users/4701228/semore-1267"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8808, "favorite_count": 3, "accepted_answer_id": 53243962, "answer_count": 3, "score": 7, "last_activity_date": 1605663772, "creation_date": 1541886975, "last_edit_date": 1541888142, "question_id": 53243795, "link": "https://stackoverflow.com/questions/53243795/how-do-you-read-a-yaml-file-in-rust", "title": "How do you read a YAML file in Rust?", "body": "<p>I've poked the <a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"noreferrer\">serde-yaml</a> and <a href=\"https://github.com/chyh1990/yaml-rust\" rel=\"noreferrer\">yaml-rust</a> crates a bit, but I haven't seen any examples. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1541937196, "creation_date": 1541937196, "answer_id": 53248469, "question_id": 53243613, "link": "https://stackoverflow.com/questions/53243613/whats-the-idiomatic-way-to-convert-a-result-to-a-custom-fail-impl/53248469#53248469", "title": "What&#39;s the idiomatic way to convert a Result to a custom Fail impl?", "body": "<p>That very simple just use <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.map_err\" rel=\"nofollow noreferrer\"><code>map_err()</code></a>:</p>\n\n<pre><code>fs::write(\"/proc/acpi/bbswitch\", data)\n    .map_err(|e| BbswitchError::BbswitchNotAvailable { cause: e }.into())\n</code></pre>\n"}], "owner": {"reputation": 3442, "user_id": 5951320, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aZ8G2.jpg?s=128&g=1", "display_name": "Ash", "link": "https://stackoverflow.com/users/5951320/ash"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 53248469, "answer_count": 1, "score": 0, "last_activity_date": 1541937196, "creation_date": 1541885550, "question_id": 53243613, "link": "https://stackoverflow.com/questions/53243613/whats-the-idiomatic-way-to-convert-a-result-to-a-custom-fail-impl", "title": "What&#39;s the idiomatic way to convert a Result to a custom Fail impl?", "body": "<p>Currently, I'm turning a <code>Result</code> into an instance of my error enum that impls <code>Fail</code> like this:</p>\n\n<pre><code>fn bbswitch_write(data: &amp;str) -&gt; Result&lt;(), BbswitchError&gt; {\n    match fs::write(\"/proc/acpi/bbswitch\", data) {\n        Ok(_) =&gt; Ok(()),\n        Err(e) =&gt; Err(BbswitchError::BbswitchNotAvailable { cause: e }.into()),\n    }\n}\n</code></pre>\n\n<p>but this feels very verbose, and I'd rather not write a four-line <code>match</code> statement every time I do something like this:</p>\n\n<pre><code>let contents = fs::read_to_string(\"/proc/acpi/bbswitch\").expect(\"bbswitch not available\");\n</code></pre>\n\n<p>Is there something I'm doing wrong that's making error handling unreasonably difficult, or a way I could structure something better to make it more convenient?</p>\n\n<p>The rest of my code looks something like this:</p>\n\n<pre><code>#[macro_use]\nextern crate failure;\n\nuse std::fs;\nuse std::process::exit;\nuse failure::Error;\n\n#[derive(Debug, Fail)]\nenum BbswitchError {\n    #[fail(display = \"bbswitch not available\")]\n    BbswitchNotAvailable {\n        #[fail(cause)]\n        cause: std::io::Error,\n    },\n}\n\nfn bbswitch_write(data: &amp;str) -&gt; Result&lt;(), Error&gt; {\n    match fs::write(\"/proc/acpi/bbswitch\", data) {\n        Ok(_) =&gt; Ok(()),\n        Err(e) =&gt; Err(BbswitchError::BbswitchNotAvailable { cause: e }.into()),\n    }\n}\n\nfn power_on() -&gt; Result&lt;(), Error&gt; {\n    bbswitch_write(\"ON\")?;\n    Ok(())\n}\n\nfn main() {\n    match power_on() {\n        Ok(_) =&gt; {},\n        Err(_) =&gt; exit(1),\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1541879778, "post_id": 53242628, "comment_id": 93371157, "body": "<i>l if I could instead create a generic version of this struct, and instantiate one of the two versions</i> \u2014 yes, do that. What is stopping you?"}, {"owner": {"reputation": 319, "user_id": 7698902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/504b47ca61e2dea92102495da1750314?s=128&d=identicon&r=PG&f=1", "display_name": "vandenheuvel", "link": "https://stackoverflow.com/users/7698902/vandenheuvel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541928671, "post_id": 53242628, "comment_id": 93379646, "body": "You answer clarified a lot. I opted for your first option; it fulfills most the requirements and preferences described above. I hadn&#39;t thought about creating two entirely new structs without any attributes (which is still slightly odd to me, it seems like that&#39;s not really what structs should be used for). Also, there is still the downside that the trait in this case doesn&#39;t describe any general behavior. There can only be two variants. This is however more or less mitigated by keeping the trait private to the current module. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1541881532, "last_edit_date": 1541881532, "creation_date": 1541880442, "answer_id": 53242966, "question_id": 53242628, "link": "https://stackoverflow.com/questions/53242628/subtypes-using-generics-like-construction/53242966#53242966", "title": "Subtypes using generics-like construction", "body": "<p>Use <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">a trait</a> for behavior that has multiple implementations. There's many combinations of ways you can use them, here's one:</p>\n\n<pre><code>use std::marker::PhantomData;\n\ntrait Core {\n    fn print();\n}\n\n#[derive(Debug, Default)]\nstruct PrintA;\nimpl Core for PrintA {\n    fn print() {\n        print!(\"a\")\n    }\n}\n\n#[derive(Debug, Default)]\nstruct PrintB;\nimpl Core for PrintB {\n    fn print() {\n        print!(\"b\")\n    }\n}\n\n#[derive(Debug, Default)]\nstruct Thing&lt;C&gt;(PhantomData&lt;C&gt;);\n\nimpl&lt;C: Core&gt; Thing&lt;C&gt; {\n    fn common() {\n        print!(\"&gt;\");\n        C::print();\n        println!(\"&lt;\")\n    }\n}\n\nfn main() {\n    Thing::&lt;PrintA&gt;::common();\n    Thing::&lt;PrintB&gt;::common();\n}\n</code></pre>\n\n<p>Or another:</p>\n\n<pre><code>trait Core {\n    fn select&lt;'a&gt;(left: &amp;'a i32, right: &amp;'a i32) -&gt; &amp;'a i32;\n}\n\n#[derive(Debug, Default)]\nstruct Left;\nimpl Core for Left {\n    fn select&lt;'a&gt;(left: &amp;'a i32, _right: &amp;'a i32) -&gt; &amp;'a i32 {\n        left\n    }\n}\n\n#[derive(Debug, Default)]\nstruct Right;\nimpl Core for Right {\n    fn select&lt;'a&gt;(_left: &amp;'a i32, right: &amp;'a i32) -&gt; &amp;'a i32 {\n        right\n    }\n}\n\n#[derive(Debug, Default)]\nstruct Thing&lt;C&gt; {\n    kind: C,\n    left: i32,\n    right: i32,\n}\n\nimpl Thing&lt;Left&gt; {\n    fn new_left(left: i32, right: i32) -&gt; Self {\n        Self {\n            left,\n            right,\n            kind: Left,\n        }\n    }\n}\nimpl Thing&lt;Right&gt; {\n    fn new_right(left: i32, right: i32) -&gt; Self {\n        Self {\n            left,\n            right,\n            kind: Right,\n        }\n    }\n}\n\nimpl&lt;C: Core&gt; Thing&lt;C&gt; {\n    fn add_one(&amp;self) -&gt; i32 {\n        self.select() + 1\n    }\n\n    fn select(&amp;self) -&gt; &amp;i32 {\n        C::select(&amp;self.left, &amp;self.right)\n    }\n}\n\npub fn l() -&gt; i32 {\n    let l = Thing::new_left(100, 200);\n    l.add_one()\n}\n\npub fn r() -&gt; i32 {\n    let r = Thing::new_right(100, 200);\n    r.add_one()\n}\n</code></pre>\n\n<p>Of note, this last example compiles down to the following LLVM IR:</p>\n\n<pre><code>define i32 @_playground_l() {\nstart:\n  ret i32 101\n}\n\ndefine i32 @_playground_r()  {\nstart:\n  ret i32 201\n}\n</code></pre>\n\n<blockquote>\n  <p>I considered moving all of the code into a trait, but this didn't seem appropriate: dynamic dispatch is not necessary, almost all methods will not have the <code>self</code> parameter</p>\n</blockquote>\n\n<ul>\n<li>traits don't imply dynamic dispatch. See <em>monomorphization</em>.</li>\n<li>trait methods don't require <code>self</code></li>\n</ul>\n\n<blockquote>\n  <p>It it wasn't for maintainability, I would just copy all code</p>\n</blockquote>\n\n<p>Sounds like a place that <a href=\"https://doc.rust-lang.org/book/second-edition/appendix-04-macros.html\" rel=\"nofollow noreferrer\">macros</a> might be a fit, if you cannot handle traits.</p>\n"}], "owner": {"reputation": 319, "user_id": 7698902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/504b47ca61e2dea92102495da1750314?s=128&d=identicon&r=PG&f=1", "display_name": "vandenheuvel", "link": "https://stackoverflow.com/users/7698902/vandenheuvel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 37, "favorite_count": 0, "accepted_answer_id": 53242966, "answer_count": 1, "score": 0, "last_activity_date": 1541881532, "creation_date": 1541878011, "last_edit_date": 1541880805, "question_id": 53242628, "link": "https://stackoverflow.com/questions/53242628/subtypes-using-generics-like-construction", "title": "Subtypes using generics-like construction", "body": "<p>I have a struct of which precisely two versions exist. That is, the struct has an attribute describing which version it is (a <code>bool</code> or <code>enum</code> with two variants) which is passed as an argument in the constructor. Which version the struct will have is known at compile time. In the majority of the methods of this struct, a corresponding method (on an attribute of this struct) is called, depending on the value of the attribute. This results in many if-statements throughout the <code>impl</code> of this struct.</p>\n\n<p>I considered moving all of the code into a trait, but this didn't seem appropriate: dynamic dispatch is not necessary, almost all methods will not have the <code>self</code> parameter and setters / getters for all attributes will be required. I'd still be left with two identical struct declarations. Also, the trait doesn't describe any generic behavior that other structs should implement.</p>\n\n<p>It would be ideal if I could instead create a generic version of this struct, and instantiate one of the two versions. To make, for lack of a better word, two \"sub-types\" of my struct, with only a single method that has different behavior. Is such a thing possible?</p>\n\n<p>It concerns a performance critical application, and the methods on this struct will be called many times. It it wasn't for maintainability, I would just copy all code. I would create two almost identical structs, where inside the methods, there is either one version of an external method being called, or the other.</p>\n"}, {"tags": ["list", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541874597, "post_id": 53242052, "comment_id": 93369787, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/53242052/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541874669, "post_id": 53242052, "comment_id": 93369809, "body": "See also the <a href=\"https://stackoverflow.com/questions/linked/37986640?lq=1\">26 previous questions that are linked to the suggested duplicate</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541874766, "post_id": 53242052, "comment_id": 93369839, "body": "Especially <a href=\"https://stackoverflow.com/q/51134192/155423\">Deleting a node from singly linked list has the error \u201ccannot move out of borrowed content\u201d</a>"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541874856, "post_id": 53242052, "comment_id": 93369867, "body": "@Shepmaster The first link you provided does what I do with the fast &quot;pointer&quot;, but my problem arises when I need to follow also the slow pointer, because the anchor/head has been moved already."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541875158, "post_id": 53242052, "comment_id": 93369946, "body": "See this quote from <a href=\"https://stackoverflow.com/q/51134192/155423\">the last question I linked</a>: <i>If your code were able to compile, you&#39;d have a mutable reference to <code>previous</code> as well as a mutable reference to <code>current</code>. However, you can get a mutable reference to <code>current</code> from <code>previous</code>. This would allow you to break Rust&#39;s memory safety guarantees!</i>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541875249, "post_id": 53242052, "comment_id": 93369969, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51134192/deleting-a-node-from-singly-linked-list-has-the-error-cannot-move-out-of-borrow\">Deleting a node from singly linked list has the error &quot;cannot move out of borrowed content&quot;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541878222, "post_id": 53242052, "comment_id": 93370720, "body": "Here&#39;s a (dumb) way to make the borrow checker happy by using recursion: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=b63cbd2560c18a0477a03a3c87013845\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541891865, "post_id": 53242052, "comment_id": 93374037, "body": "@trentcl thanks for the example, can you explain how this line works exactly? <code>*list = list.as_mut().unwrap().next.take();</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541894160, "post_id": 53242052, "comment_id": 93374447, "body": "I used <code>.take()</code> to get the value of the <code>.next</code> field, replacing it with <code>None</code>. Effectively, I first divide the list into a head and a tail, and then replace the head with the tail. The head doesn&#39;t retain any references to the tail nor vice versa, so the borrow checker is fine with this."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1541894463, "post_id": 53242052, "comment_id": 93374511, "body": "On reflection, I think I would instead write that as <code>*list = list.take().and_then(|l| l.next);</code>. You should familiarize yourself with <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a>&#39;s methods; there is often a conversion that does just what you want. <code>and_then</code> returns <code>None</code> if <code>list.take()</code> is <code>None</code>, so this version of <code>remove_helper</code> won&#39;t panic if you call it with an empty list and <code>n</code> of zero."}], "answers": [{"comments": [{"owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1541931510, "post_id": 53244595, "comment_id": 93380312, "body": "@Stargateur of course recursion is less efficient, since space complexity would be O(N) compared to the O(1) of the runner pattern."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1541935229, "post_id": 53244595, "comment_id": 93381261, "body": "Every iterative function can be write in the form of tail recursive function, what you are saying is completely false. recursion can do this in O(1) like iterative can do this in O(1). Everything iterative can do recursive can and vice versa."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1541943553, "post_id": 53244595, "comment_id": 93383425, "body": "@Stargateur If you were to rewrite this recursively, you&#39;d have to write two recursive algorithms, because it contains two loops. <a href=\"https://stackoverflow.com/questions/53242052/how-to-remove-the-nth-node-from-the-end-of-a-linked-list?noredirect=1#comment93370720_53242052\">My recursive solution</a> traverses the list only once, but at the cost of O(n) space. So that is the comparison being made here, not recursion vs. iteration in general."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541943675, "post_id": 53244595, "comment_id": 93383459, "body": "I think by &quot;runner pattern&quot; gliderkite means the algorithm OP was trying to use, i.e. two pointers that traverse the list <code>n</code> nodes apart. When the first pointer reaches the end, the second pointer is pointing at the node to be removed. But to be honest... I don&#39;t really see how this solution is more efficient than that. Perhaps I&#39;m missing something."}, {"owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "edited": false, "score": 1, "creation_date": 1541944838, "post_id": 53244595, "comment_id": 93383771, "body": "Pheraps I didn&#39;t explain myself well. My solution is less efficient than the runner pattern the OP was trying to use, because it needs to iterate in the worst case twice the list (to get its length first), while using the runner pattern you only need to iterate the list once. Nevertheless it&#39;s still O(N) time complexity and O(1) space complexity, while the recursive solution is O(N) for both (time and space)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541947986, "post_id": 53244595, "comment_id": 93384674, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a916d3d68e8c8520c54acc05c0ed4a80\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, that simply false here the prove this is the equivalent of your O(1) in space and O(N) in time."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1541979435, "post_id": 53244595, "comment_id": 93393178, "body": "@gliderkite Yeah, the OP&#39;s solution would be more efficient if it worked, because it could advance both pointers in the same loop to save a branch per iteration. But the cost of the branch, unless mispredicted, is probably much less than the cost of following two pointers, so it wouldn&#39;t be a huge savings. You could do a comparison using <code>&amp;</code> pointers and <code>RefCell</code> to find the difference."}], "tags": [], "owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "is_accepted": true, "score": 1, "last_activity_date": 1541894190, "creation_date": 1541894190, "answer_id": 53244595, "question_id": 53242052, "link": "https://stackoverflow.com/questions/53242052/how-to-remove-the-nth-node-from-the-end-of-a-linked-list/53244595#53244595", "title": "How to remove the Nth node from the end of a linked list?", "body": "<p>This is how you could write the method without using recursion.</p>\n\n<pre><code>fn remove_nth(list: &amp;mut Link, n: usize) {\n    if list.is_none() {\n        return;\n    }\n    let get_length = |l: &amp;Link| {\n        let mut length = 0;\n        let mut current = l;\n        while let Some(n) = {current} {\n            length += 1;\n            current = &amp;n.next;\n        }\n        length\n    };\n    let length = get_length(list);\n    let mut i = 0;\n    let mut current = list;\n    while i &lt; length - n {\n        if let Some(link) = {current} {\n            current = &amp;mut link.next;\n        } else {\n            panic!(\"Invalid node!\");\n        }\n        i += 1;\n    }\n    *current = current.as_mut().unwrap().next.take();\n}\n</code></pre>\n\n<p>Unfortunately, I didn't manage to make the borrow checker happy by using the more efficient runner pattern.</p>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 477, "favorite_count": 1, "accepted_answer_id": 53244595, "answer_count": 1, "score": 3, "last_activity_date": 1541894190, "creation_date": 1541874095, "last_edit_date": 1541875477, "question_id": 53242052, "link": "https://stackoverflow.com/questions/53242052/how-to-remove-the-nth-node-from-the-end-of-a-linked-list", "title": "How to remove the Nth node from the end of a linked list?", "body": "<p>This is the data structure I am using to represent a single linked list:</p>\n\n<pre><code>type Link = Option&lt;Box&lt;Node&gt;&gt;;\n\npub struct Node {\n    elem: i32,\n    next: Link,\n}\n</code></pre>\n\n<p>I would like to implement a method to remove the Nth node from the end of the list:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>// Original list\nA -&gt; B -&gt; C -&gt; D -&gt; None\n\n// remove 1 from the end of the original list\nA -&gt; B -&gt; C -&gt; None\n\n// Remove 2 from the end of the original list\nA -&gt; B -&gt; D -&gt; None\n</code></pre>\n\n<p>I am fighting with the borrow checker all the time:</p>\n\n<pre><code>fn remove_nth_node_from_end(list: &amp;mut Link, n: usize) {\n    if list.is_none() {\n        return;\n    }\n    let mut i = 0;\n    let mut fast = list;\n    while let Some(ref mut node) = {fast} {\n        if i == n {\n            break;\n        }\n        i += 1;\n        fast = &amp;mut node.next;\n    }\n\n    // issues start here, since I need to mutably borrow\n    // the list (and it has already been moved above for fast)\n    // but without moving I have troubles implementing the above loop\n    let mut slow = &amp;mut list;\n    // iterate over the list using slow and fast\n    // when fast is None\n    //   slow.next = slow.next.next\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable argument `list` as mutable\n  --&gt; src/lib.rs:25:25\n   |\n25 |     let mut slow = &amp;mut list;\n   |                         ^^^^ cannot borrow mutably\nhelp: consider removing the `&amp;mut`, as it is an immutable binding to a mutable reference\n   |\n25 |     let mut slow = list;\n   |                    ^^^^\n\nerror[E0382]: use of moved value: `list`\n  --&gt; src/lib.rs:25:25\n   |\n13 |     let mut fast = list;\n   |         -------- value moved here\n...\n25 |     let mut slow = &amp;mut list;\n   |                         ^^^^ value used here after move\n   |\n   = note: move occurs because `list` has type `&amp;mut std::option::Option&lt;std::boxed::Box&lt;Node&gt;&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>How can I implement the remaining part of the method?</p>\n\n<p>Please note my methods does not take <code>self</code> as argument and the list argument needs to be moved twice at least with the current implementation.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541856956, "post_id": 53237153, "comment_id": 93364817, "body": "I think this answer could be improved by laying down guidelines for when to use either alternatives: use <code>replace</code> if you can and <code>Option&lt;_&gt;</code> if you must. With the difference being that when the <code>T</code> in <code>RwLock&lt;T&gt;</code> can be cheaply built (like an empty <code>Vec</code>), then is better for ease of use to avoid the superfluous layer of wrapping, but otherwise a slightly more awkward ease of use might be worth the performance gain."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1541837363, "creation_date": 1541837363, "answer_id": 53237153, "question_id": 53237152, "link": "https://stackoverflow.com/questions/53237152/replace-the-content-of-an-rwlockwriteguard/53237153#53237153", "title": "Replace the content of an RwLockWriteGuard", "body": "<p>The special circumstance here is, that your <code>T</code> is not Cloneable, therefore you cannot use <code>guard.iter().filter(...).cloned().collect()</code>.</p>\n\n<p>I see two options here. </p>\n\n<ol>\n<li><p>Instead of <code>RwLock&lt;Vec&lt;NotCloneable&gt;&gt;</code> you could use <code>RwLock&lt;Option&lt;Vec&lt;NotCloneable&gt;&gt;&gt;</code> and then use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"noreferrer\"><code>Option::take()</code></a> to get the value the <code>RwLock</code> was holding and leaving <code>None</code></p></li>\n<li><p>You could use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"noreferrer\"><code>std::mem::replace()</code></a> to get the <code>vec</code> from the guard without triggering the error, because there is no way that you leave the value of the RwLock in an undefined state, where it does not hold any value</p></li>\n</ol>\n\n<p></p>\n\n<pre><code>use std::sync::RwLock;\n\npub struct NotCloneable(u8);\n\npub struct Foo {\n    value: RwLock&lt;Vec&lt;NotCloneable&gt;&gt;,\n}\n\nimpl Foo {\n    pub fn filter_out_values(&amp;self) {\n        let mut guard = self.value.write().unwrap();\n        let vec = std::mem::replace(&amp;mut *guard, vec![]);\n        *guard = vec.into_iter().filter(|nc| nc.0 != 0).collect();\n    }\n}\n\npub struct Foo1 {\n    value: RwLock&lt;Option&lt;Vec&lt;NotCloneable&gt;&gt;&gt;,\n}\n\nimpl Foo1 {\n    pub fn filter_out_values(&amp;self) {\n        let mut guard = self.value.write().unwrap();\n        let vec = guard.take();\n        *guard = Some(vec.unwrap().into_iter().filter(|nc| nc.0 != 0).collect());\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=5a9352cf29413dd3e9412b040d27c734\" rel=\"noreferrer\">playground</a>)</p>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 523, "favorite_count": 0, "accepted_answer_id": 53237153, "answer_count": 1, "score": 5, "last_activity_date": 1541837363, "creation_date": 1541837363, "question_id": 53237152, "link": "https://stackoverflow.com/questions/53237152/replace-the-content-of-an-rwlockwriteguard", "title": "Replace the content of an RwLockWriteGuard", "body": "<p>Let's assume the following code:</p>\n\n<pre><code>use std::sync::RwLock;\n\npub struct NotCloneable(u8);\n\npub struct Foo {\n    value: RwLock&lt;Vec&lt;NotCloneable&gt;&gt;,\n}\n\nimpl Foo {\n    // does not work\n    pub fn filter_out_values(&amp;self) {\n        let mut guard = self.value.write().unwrap();\n        *guard = guard.into_iter().filter(|nc| nc.0 != 0).collect();\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:12:18\n   |\n12 |         *guard = guard.into_iter().filter(|nc| nc.0 != 0).collect();\n   |                  ^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=36e4a1dcbf5e86cd345038e7b0946c0d\" rel=\"noreferrer\">playground</a>)</p>\n\n<p>How do I make the function <code>filter_out_values</code> work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541835003, "post_id": 53236388, "comment_id": 93360005, "body": "I don&#39;t get your question, because you already came up with an solution. What is your concern?"}, {"owner": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541844171, "post_id": 53236388, "comment_id": 93361752, "body": "Also @hellow, the error message you posted is different. It&#39;s for the same error code, but not related.  The message posted above is full message.  Did you try running the code?  You can do it here:  <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541858720, "post_id": 53236388, "comment_id": 93365257, "body": "Please don&#39;t accuse anyone on downvoting or voting for close your question. First, I did not downvote it, second it you should look at the full error message! As I posted (it&#39;s gone?!) the error message is telling you what to do."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1541862829, "post_id": 53236388, "comment_id": 93366359, "body": "Sid, when you ask a question and there are some comments, e.g. recommendations or questions regarding the question, then we ask them. When we think, that the question already has been answered, we mark it as an duplicate. It doesn&#39;t mean, that it is necessarily a bad question, just that it has been answered. We are happy to help you, when your questions are good, which means they are clear and have a good mcve (when it is about a programming problem). Please read the <a href=\"https://stackoverflow.com/tags/rust/info\">info page for rust</a>."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1541857951, "creation_date": 1541857951, "answer_id": 53239645, "question_id": 53236388, "link": "https://stackoverflow.com/questions/53236388/why-do-i-get-the-error-e0277-the-size-for-values-of-type-integer-cannot-b/53239645#53239645", "title": "Why do I get the error E0277: the size for values of type `[{integer}]` cannot be known at compilation time?", "body": "<p><code>numbers[1..]</code> doesn't have a size because it is a bare\u00b9 <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-03-slices.html\" rel=\"nofollow noreferrer\">slice</a> of <code>numbers</code>. Slices can only be used behind some kind of pointer, e.g. <code>&amp;[T]</code>, <code>Box&lt;[T]&gt;</code>, or <code>Arc&lt;[T]&gt;</code>. The following questions have more information about slices:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/30794235/what-is-the-difference-between-a-slice-and-an-array\">What is the difference between a slice and an array?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/51650259/how-can-i-fix-the-error-e0277-the-trait-bound-usize-stdmarkersized-is\">How can I fix the error E0277: the trait bound `[usize]: std::marker::Sized` is not satisfied?</a></li>\n</ul>\n\n<p>Because it is unsized, <code>[T]</code> cannot implement <code>IntoIterator</code>, which is the trait used for iterating over things in <code>for</code> loops. (See <a href=\"https://stackoverflow.com/questions/34572784/why-can-i-iterate-over-a-slice-twice-but-not-a-vector\">Why can I iterate over a slice twice, but not a vector?</a>) <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#tymethod.into_iter\" rel=\"nofollow noreferrer\"><code>IntoIterator::into_iter</code></a> has the following prototype:</p>\n\n<pre><code>fn into_iter(self) -&gt; Self::IntoIter;\n</code></pre>\n\n<p><code>Self</code> cannot be an unsized type because <code>into_iter</code> takes <code>self</code> by value.</p>\n\n<p><code>&amp;numbers[1..]</code> is a reference (type <code>&amp;[T]</code>), which both has a size and implements <code>IntoIterator</code>, so it works fine.</p>\n\n<p>The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0b55e482967a403c19e70a77c89569cc\" rel=\"nofollow noreferrer\">full compiler output</a> also gives an error message about <code>IntoIterator</code>, and helpfully suggests using <code>numbers[1..].iter()</code> instead. Because <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter\" rel=\"nofollow noreferrer\"><code>.iter()</code></a> takes <code>&amp;self</code>, it can be called on an unsized type, so this is another way to fix the problem.</p>\n\n<hr>\n\n<p>\u00b9In many places, including the official documentation, the unqualified term \"slice\" is used to refer to the reference type <code>&amp;[T]</code>. I call <code>numbers[1..]</code> a <em>bare</em> slice because it is not a reference; its type is just <code>[T]</code>.</p>\n"}], "owner": {"reputation": 4480, "user_id": 259889, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/aba1af6d6197093c880797a82e1bc2a2?s=128&d=identicon&r=PG", "display_name": "Sid", "link": "https://stackoverflow.com/users/259889/sid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2524, "favorite_count": 0, "closed_date": 1541860762, "accepted_answer_id": 53239645, "answer_count": 1, "score": 0, "last_activity_date": 1541860789, "creation_date": 1541829524, "last_edit_date": 1541860731, "question_id": 53236388, "link": "https://stackoverflow.com/questions/53236388/why-do-i-get-the-error-e0277-the-size-for-values-of-type-integer-cannot-b", "closed_reason": "Duplicate", "title": "Why do I get the error E0277: the size for values of type `[{integer}]` cannot be known at compilation time?", "body": "<p>In the following code I am getting the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `[{integer}]` cannot be\nknown at compilation time at the line `for n in numbers[1..] {`\n</code></pre>\n\n<p>I did some searching around, but found nothing.  </p>\n\n<pre><code>fn main() {\n    let mut numbers = Vec::new();\n    numbers.push(1);\n    numbers.push(32);\n    numbers.push(43);\n    numbers.push(42);\n    // ... And many more\n    println!(\"{:?}\", numbers); // Sanity\n\n    let mut sum = 0;\n\n    // Problem code area\n    for n in numbers[1..] {\n        sum = sum + n;\n    } \n    // Problem code area\n\n    println!(\"{}\", sum);\n}\n</code></pre>\n\n<p>Also, the problem lines work if I replace them with following (adding <code>&amp;</code> and <code>*</code> for ownership/borrowing and dereferencing)</p>\n\n<pre><code>for n in &amp;numbers[1..] {\n    sum = sum + *n;\n}\n</code></pre>\n\n<p>Why is the compilation failing in the former way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 4, "creation_date": 1541842511, "post_id": 53235477, "comment_id": 93361356, "body": "You might find <a href=\"https://crates.io/crates/if_chain\" rel=\"nofollow noreferrer\">this library</a> interesting."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1541977223, "post_id": 53235477, "comment_id": 93392737, "body": "@Michail That library looks awesome! I was wondering whether this could be achieved through macros. I figured it was worth its own answer and have added one. Hope that&#39;s OK with you."}, {"owner": {"reputation": 16020, "user_id": 9716597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f97c613dca0b157b40551a0d756abeb?s=128&d=identicon&r=PG&f=1", "display_name": "L. F.", "link": "https://stackoverflow.com/users/9716597/l-f"}, "edited": false, "score": 0, "creation_date": 1596871151, "post_id": 53235477, "comment_id": 111954848, "body": "How about <code>if let [Token::Type1(value1), Token::Type2(value2), Token::Type3(value3), ..] = v</code>?"}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 16020, "user_id": 9716597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f97c613dca0b157b40551a0d756abeb?s=128&d=identicon&r=PG&f=1", "display_name": "L. F.", "link": "https://stackoverflow.com/users/9716597/l-f"}, "edited": false, "score": 0, "creation_date": 1596873957, "post_id": 53235477, "comment_id": 111955347, "body": "@L.F. That is certainly an option now. This only landed in stable rust in 1.42.0 on 12 Mar 2020. You can see the release notes here. <a href=\"https://blog.rust-lang.org/2020/03/12/Rust-1.42.html#subslice-patterns\" rel=\"nofollow noreferrer\">blog.rust-lang.org/2020/03/12/Rust-1.42.html#subslice-patter&zwnj;&#8203;ns</a>."}, {"owner": {"reputation": 16020, "user_id": 9716597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f97c613dca0b157b40551a0d756abeb?s=128&d=identicon&r=PG&f=1", "display_name": "L. F.", "link": "https://stackoverflow.com/users/9716597/l-f"}, "edited": false, "score": 0, "creation_date": 1596875250, "post_id": 53235477, "comment_id": 111955612, "body": "Oh that&#39;s right .. Time for me to learn some history."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1541861366, "post_id": 53237008, "comment_id": 93366029, "body": "Notably, when the RFC is implemented, <b>both</b> Rust 2015 and 2018 will support it."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1590809989, "post_id": 53237008, "comment_id": 109828515, "body": "Ah, so <i><code>let</code> expressions in this position are experimental see issue #53667 &lt;<a href=\"https://github.com/rust-lang/rust/issues/53667\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/53667</a>&gt; for more information rustc(E0658)</i> means &quot;Sorry, not implemented&quot;.."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 15, "last_activity_date": 1541860545, "last_edit_date": 1541860545, "creation_date": 1541835945, "answer_id": 53237008, "question_id": 53235477, "link": "https://stackoverflow.com/questions/53235477/does-rust-2018-support-if-let-chaining/53237008#53237008", "title": "Does Rust 2018 support &quot;if let&quot; chaining?", "body": "<p><a href=\"https://github.com/rust-lang/rfcs/pull/2497\" rel=\"noreferrer\">RFC #2497</a> has <a href=\"https://github.com/rust-lang/rust/issues/53667\" rel=\"noreferrer\">not been implemented yet</a>. The <a href=\"https://github.com/rust-lang/rust/issues/53668\" rel=\"noreferrer\">GitHub issue you linked</a> is only for describing how <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2497-if-let-chains.md#rollout-plan-and-transitioning-to-rust-2018\" rel=\"noreferrer\">to deal with the ambiguity</a>.</p>\n\n<blockquote>\n  <p>To enable the second interpretation in the previous section a warning must be emitted in Rust 2015 informing the user that [...] will both become hard errors, in the first version of Rust where the 2018 edition is stable, without the let_chains features having been stabilized.</p>\n</blockquote>\n\n<p>So no, you cannot use the syntax yet, but instead use tuples as a workaround, as you already did.</p>\n\n<pre><code>if v.len() &gt;= 3 {\n    if let (Token::Type1(value1), Token::Type2(value2), Token::Type3(value3)) =\n        (&amp;v[0], &amp;v[1], &amp;v[2])\n    {\n        return Parsed123(value1, value2, value3);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 5, "last_activity_date": 1614680923, "last_edit_date": 1614680923, "creation_date": 1541977096, "answer_id": 53254086, "question_id": 53235477, "link": "https://stackoverflow.com/questions/53235477/does-rust-2018-support-if-let-chaining/53254086#53254086", "title": "Does Rust 2018 support &quot;if let&quot; chaining?", "body": "<p>While hellow is correct that RFC #2497 is not yet supported in 2018 (and 2015), I felt the <code>if_chain</code> library mentioned by Michail was worthy of an answer.</p>\n<p>The <a href=\"https://docs.rs/if_chain\" rel=\"nofollow noreferrer\"><code>if_chain</code></a> library provides a macro that transforms some code that is almost in the form of RFC #2497 into valid Rust.</p>\n<p>You can write:</p>\n<pre><code>if_chain! {\n    if v.len() &gt;= 3;\n    if let Token::Type1(value1) = &amp;v[0]; \n    if let Token::Type2(value2) = &amp;v[1]; \n    if let Token::Type3(value3) = &amp;v[2];\n    then {\n        return Parsed123(value1, value2, value3);\n    }\n}\n</code></pre>\n<p>which the compiler treats as:</p>\n<pre><code>if v.len() &gt;= 3 {\n    if let Token::Type1(value1) = &amp;v[0] {\n        if let Token::Type2(value2) = &amp;v[1] {\n            if let Token::Type(value3) = &amp;v[2] {\n                return Parsed123(value1, value2, value3);\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 2, "last_activity_date": 1596895258, "last_edit_date": 1596895258, "creation_date": 1596874197, "answer_id": 63313155, "question_id": 53235477, "link": "https://stackoverflow.com/questions/53235477/does-rust-2018-support-if-let-chaining/63313155#63313155", "title": "Does Rust 2018 support &quot;if let&quot; chaining?", "body": "<p>As mentioned in the comments by L.F., in 2020 there is now another alternative. It still doesn't give us chained <code>if let</code>, but does allow us to match on slices - which is enough to make this example quite neat. The code could now be written as</p>\n<pre><code>if let [Token::Type1(value1), Token::Type2(value2), Token::Type3(value3), ..] = v {\n   return Parsed123(value1, value2, value);\n}\n</code></pre>\n"}], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2021, "favorite_count": 0, "accepted_answer_id": 53237008, "answer_count": 3, "score": 10, "last_activity_date": 1614680923, "creation_date": 1541816275, "last_edit_date": 1541860430, "question_id": 53235477, "link": "https://stackoverflow.com/questions/53235477/does-rust-2018-support-if-let-chaining", "title": "Does Rust 2018 support &quot;if let&quot; chaining?", "body": "<p>I'm parsing a vector of tokens, each of enum type. This means I get a lot of code like:</p>\n\n<pre><code>if v.len() &gt;= 3 {\n    if let Token::Type1(value1) = &amp;v[0] {\n        if let Token::Type2(value2) = &amp;v[1] {\n            if let Token::Type(value3) = &amp;v[2] {\n                return Parsed123(value1, value2, value3);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>This is pretty ugly - and I've worked out that I can do this to make it a little nicer:</p>\n\n<pre><code>if v.len() &gt;= 3 {\n    if let (Token::Type1(value1), Token::Type2(value2), Token::Type3(value3)) =\n        (&amp;v[0], &amp;v[1], &amp;v[2])\n    {\n        return Parsed123(value1, value2, value3);\n    }\n}\n</code></pre>\n\n<p>But honestly, its not much better. </p>\n\n<p>However, there's some closed issues / RFCs for chaining these conditions and \"if let\" bits in what feels a lot more ergonomic way -- <a href=\"https://github.com/rust-lang/rust/issues/53668\" rel=\"noreferrer\">Tracking issue for eRFC 2497 \"if- and while-let-chains take 2\"</a> and <a href=\"https://github.com/rust-lang/rfcs/issues/929\" rel=\"noreferrer\">Support &amp;&amp; in if let expressions</a> -- this would let me write something like:</p>\n\n<pre><code>if v.len() &gt;= 3 &amp;&amp;\n    let Token::Type1(value1) = &amp;v[0] &amp;&amp; \n    let Token::Type2(value2) = &amp;v[1] &amp;&amp; \n    let Token::Type3(value3) = &amp;v[2]\n{\n    return Parsed123(value1, value2, value3);\n}\n</code></pre>\n\n<p>However, I can't seem to get this to compile in my copy of nightly Rust with <code>edition=\"2018\"</code> (exact version is <code>1.32.0-nightly (653da4fd0 2018-11-08)</code>). So either I've got the syntax wrong or I've misinterpreted the RFCs / issues and this feature hasn't landed yet. Either way, I'd love some info on how this feature stands.</p>\n"}, {"tags": ["variables", "rust", "immutability", "mutability"], "answers": [{"comments": [{"owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "edited": false, "score": 0, "creation_date": 1541816902, "post_id": 53235438, "comment_id": 93357635, "body": "Excellent answer, especially the part about failure due to being borrowed.  I&#39;ll wait a few days then accept.  Is there a way to print all the values chained to the same variable (ie in this example if I wanted to see all x_i for x, in this case x_0 and x_1)?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "edited": false, "score": 0, "creation_date": 1541859235, "post_id": 53235438, "comment_id": 93365411, "body": "@d8aninja nope."}, {"owner": {"reputation": 534, "user_id": 884423, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xtCCz.jpg?s=128&g=1", "display_name": "bN_", "link": "https://stackoverflow.com/users/884423/bn"}, "edited": false, "score": 1, "creation_date": 1593188208, "post_id": 53235438, "comment_id": 110701924, "body": "Nobody&#39;s shocked by the expression &quot;immutable variable&quot; ? Aren&#39;t they antonyms ?"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 35, "last_activity_date": 1541859222, "last_edit_date": 1541859222, "creation_date": 1541815764, "answer_id": 53235438, "question_id": 53235334, "link": "https://stackoverflow.com/questions/53235334/in-rust-whats-the-difference-between-shadowing-and-mutability/53235438#53235438", "title": "In Rust, what&#39;s the difference between &quot;shadowing&quot; and &quot;mutability&quot;?", "body": "<p>I believe the confusion is because you're conflating names with storage.</p>\n\n<pre><code>fn main() {\n    let x = 5; // x_0\n    println!(\"The value of x is {}\", x);\n    let x = 6; // x_1\n    println!(\"The value of x is {}\", x);\n}\n</code></pre>\n\n<p>In this example, there is one name (<code>x</code>), and two storage locations (<code>x_0</code> and <code>x_1</code>).  The second <code>let</code> is simply re-binding the name <code>x</code> to refer to storage location <code>x_1</code>.  The <code>x_0</code> storage location is entirely unaffected.</p>\n\n<pre><code>fn main() {\n    let mut x = 5; // x_0\n    println!(\"The value of x is {}\", x);\n    x = 6;\n    println!(\"The value of x is {}\", x);\n}\n</code></pre>\n\n<p>In this example, there is one name (<code>x</code>), and one storage location (<code>x_0</code>).  The <code>x = 6</code> assignment is directly changing the bits of storage location <code>x_0</code>.</p>\n\n<p>You might argue that these do the same thing.  If so, you would be wrong:</p>\n\n<pre><code>fn main() {\n    let x = 5; // x_0\n    let y = &amp;x; // y_0\n    println!(\"The value of y is {}\", y);\n    let x = 6; // x_1\n    println!(\"The value of y is {}\", y);\n}\n</code></pre>\n\n<p>This outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>The value of y is 5\nThe value of y is 5\n</code></pre>\n\n<p>This is because changing which storage location <code>x</code> refers to has absolutely no effect on the storage location <code>x_0</code>, which is what <code>y_0</code> contains a pointer to.  However,</p>\n\n<pre><code>fn main() {\n    let mut x = 5; // x_0\n    let y = &amp;x; // y_0\n    println!(\"The value of y is {}\", y);\n    x = 6;\n    println!(\"The value of y is {}\", y);\n}\n</code></pre>\n\n<p>This fails to compile because you cannot mutate <code>x_0</code> while it is borrowed.</p>\n\n<p>Rust cares about protecting against unwanted mutation effects <em>as observed through references</em>.  This doesn't conflict with allowing shadowing, because you're not changing values when you shadow, you're just changing what a particular name means in a way that cannot be observed anywhere else.  Shadowing is a strictly local change.</p>\n\n<p>So yes, you absolutely can keep the value of <code>x</code> from being changed.  What you <em>can't</em> do is keep what the name <code>x</code> refers to from being changed.  At most, you can use something like <a href=\"https://crates.io/crates/clippy\" rel=\"noreferrer\"><code>clippy</code></a> to deny shadowing as a lint.</p>\n"}], "owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2297, "favorite_count": 5, "accepted_answer_id": 53235438, "answer_count": 1, "score": 21, "last_activity_date": 1541859222, "creation_date": 1541814315, "last_edit_date": 1541859178, "question_id": 53235334, "link": "https://stackoverflow.com/questions/53235334/in-rust-whats-the-difference-between-shadowing-and-mutability", "title": "In Rust, what&#39;s the difference between &quot;shadowing&quot; and &quot;mutability&quot;?", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/2018-edition/ch03-01-variables-and-mutability.html\" rel=\"noreferrer\">Chapter 3 of the Rust Book</a>, <em>Variables and Mutability</em>, we go through a couple iterations on this theme in order to demonstrate the default, immutable behavior of variables in Rust:</p>\n\n<pre><code>fn main() {\n    let x = 5;\n    println!(\"The value of x is {}\", x);\n    x = 6;\n    println!(\"The value of x is {}\", x);\n}\n</code></pre>\n\n<p>Which outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0384]: cannot assign twice to immutable variable `x`\n --&gt; src/main.rs:4:5\n  |\n2 |     let x = 5;\n  |         -\n  |         |\n  |         first assignment to `x`\n  |         help: make this binding mutable: `mut x`\n3 |     println!(\"The value of x is {}\", x);\n4 |     x = 6;\n  |     ^^^^^ cannot assign twice to immutable variable\n</code></pre>\n\n<p>However, because of Rust's take on <em>shadowing</em> variables, we can simply do this to change the value of the nonetheless \"immutable\" <code>x</code>:</p>\n\n<pre><code>fn main() {\n    let x = 5;\n    println!(\"The value of x is {}\", x);\n    let x = 6;\n    println!(\"The value of x is {}\", x);\n}\n</code></pre>\n\n<p>Which outputs (skipping the details):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>The value of x is 5\nThe value of x is 6\n</code></pre>\n\n<p>Funnily enough, this code also produces the above pair of lines as output, despite the fact that we don't call <code>let</code> but instead <code>mut</code> the first time <code>x</code> is bound to <code>5</code>:</p>\n\n<pre><code>fn main() {\n    let mut x = 5;\n    println!(\"The value of x is {}\", x);\n    x = 6;\n    println!(\"The value of x is {}\", x);\n}\n</code></pre>\n\n<p>This ambiguity in how variables are (not really) protected from reassignment seems contrary to the stated goal of protecting the values bound to immutable - by Rust default - variables. From the same chapter (which also contains the section <em>Shadowing</em>):</p>\n\n<blockquote>\n  <p>It\u2019s important that we get compile-time errors when we attempt to\n  change a value that we previously designated as immutable because this\n  very situation can lead to bugs. If one part of our code operates on\n  the assumption that a value will never change and another part of our\n  code changes that value, it\u2019s possible that the first part of the code\n  won\u2019t do what it was designed to do. The cause of this kind of bug can\n  be difficult to track down after the fact, especially when the second\n  piece of code changes the value only sometimes.</p>\n  \n  <p>In Rust, the compiler guarantees that when you state that a value\n  won\u2019t change, it really won\u2019t change. That means that when you\u2019re\n  reading and writing code, you don\u2019t have to keep track of how and\n  where a value might change. Your code is thus easier to reason\n  through.</p>\n</blockquote>\n\n<p>If I can cause this important feature of my immutable <code>x</code> to be side-stepped with an innocent enough call to <code>let</code>, why do I need <code>mut</code>? Is there some way to really, seriously-you-guys make <code>x</code> immutable, such that no <code>let x</code> can reassign its value?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "is_accepted": true, "score": 0, "last_activity_date": 1542033605, "last_edit_date": 1542033605, "creation_date": 1541994448, "answer_id": 53255713, "question_id": 53235095, "link": "https://stackoverflow.com/questions/53235095/automatically-forward-operations-while-keeping-the-result-wrapped/53255713#53255713", "title": "Automatically forward operations while keeping the result wrapped", "body": "<p>There are a number of ways to do this, primarily involving either macros or procedural macros. This method is actually pretty well described in <a href=\"https://stackoverflow.com/a/38815035/1129436\">one of Shepmaster's answers</a>, but the route I'm going to take will probably use the <a href=\"https://github.com/JelteF/derive_more\" rel=\"nofollow noreferrer\">derive_more</a> crate which will allow me to very easily provide these convenience functions.</p>\n\n<p>Then I can just</p>\n\n<pre><code>#[macro_use]\nextern crate derive_more;\n\n#[derive(Add)]\nstruct Angle {\n    radians: Float,\n}\n</code></pre>\n"}], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 53255713, "answer_count": 1, "score": 0, "last_activity_date": 1542033605, "creation_date": 1541811458, "last_edit_date": 1541861510, "question_id": 53235095, "link": "https://stackoverflow.com/questions/53235095/automatically-forward-operations-while-keeping-the-result-wrapped", "title": "Automatically forward operations while keeping the result wrapped", "body": "<p>I'm trying to create a nice interface for physics measures like angles, mass, velocities, etc. I want them to offer dimensional analysis checking at compile-time, ideally with zero runtime overhead. I think Rust could be very well-suited for this, especially with traits.</p>\n\n<p>What I have so far looks something like this:</p>\n\n<pre><code>pub trait Measure {\n    type Underlying: Clone; // the underlying storage type (most often a Float)\n\n    fn name() -&gt; &amp;'static str;\n    fn default_unit() -&gt; &amp;'static str;\n    fn in_default_unit(&amp;self) -&gt; Self::Underlying;\n    fn from_default_unit(m: Self::Underlying) -&gt; Self;\n}\n</code></pre>\n\n<p>and an implementation would be something like:</p>\n\n<pre><code>#[derive(Debug, Clone, PartialEq)]\npub struct Angle&lt;'a&gt; {\n    radians: Float, // dynamic but either a `f64` or `f32`\n}\n\nimpl&lt;'a&gt; Angle&lt;'a&gt; {\n    fn from_radians(radians: Float) -&gt; Self {\n        Self { radians }\n    }\n}\n\nimpl&lt;'a&gt; Measure&lt;'a&gt; for Angle&lt;'a&gt; {\n    type Underlying = Float;\n\n    fn name() -&gt; &amp;'static str {\n        \"angle\"\n    }\n\n    fn default_unit() -&gt; &amp;'static str {\n        \"radian\"\n    }\n\n    fn in_default_unit(&amp;self) -&gt; Self::Underlying {\n        self.radians\n    }\n\n    fn from_default_unit(m: Self::Underlying) -&gt; Self {\n        Self::from_radians(m)\n    }\n}\n</code></pre>\n\n<p>I want to add common operations like overloading the <code>+</code> operator and similar, but I want to do this in such a way that it's linked to the <code>Measure</code> trait so I don't have to create it for every <code>Measure</code>.</p>\n\n<p>I've tried making an intermediate class for operations that <code>Angle</code> could <code>Deref</code> but ran into some issues with lifetimes, and I think that route might actually be impossible.</p>\n\n<p>This seems to me like it's a common enough need that there's a solution. How can I do this?</p>\n"}, {"tags": ["rust", "closures", "move-semantics"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1541803197, "last_edit_date": 1541803197, "creation_date": 1541801397, "answer_id": 53233898, "question_id": 53233803, "link": "https://stackoverflow.com/questions/53233803/why-is-calling-a-fnonce-closure-a-move/53233898#53233898", "title": "Why is calling a FnOnce closure a move?", "body": "<blockquote>\n  <p>Why is calling a <code>FnOnce</code> a move?</p>\n</blockquote>\n\n<p>Because that's <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"noreferrer\">the <em>definition</em> of what makes a closure <code>FnOnce</code></a>:</p>\n\n<pre><code>extern \"rust-call\" fn call_once(self, args: Args) -&gt; Self::Output\n//                              ^^^^\n</code></pre>\n\n<p>Contrast this to <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"noreferrer\"><code>FnMut</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"noreferrer\"><code>Fn</code></a>:</p>\n\n<pre><code>extern \"rust-call\" fn call_mut(&amp;mut self, args: Args) -&gt; Self::Output\n//                             ^^^^^^^^^\n</code></pre>\n\n\n\n<pre><code>extern \"rust-call\" fn call(&amp;self, args: Args) -&gt; Self::Output\n//                         ^^^^^\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30177395/155423\">When does a closure implement Fn, FnMut and FnOnce?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30411594/155423\">&quot;cannot move a value of type FnOnce&quot; when moving a boxed function</a></li>\n<li><a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content</a></li>\n</ul>\n\n<hr>\n\n<p>You probably want</p>\n\n<pre><code>pub fn call_something(callback: impl FnOnce(&amp;mut Vec&lt;i32&gt;))\n</code></pre>\n\n<p>or </p>\n\n<pre><code>pub fn call_something&lt;F&gt;(callback: F)\nwhere\n    F: FnOnce(&amp;mut Vec&lt;i32&gt;),\n</code></pre>\n\n<p>These are identical. They both take ownership of the closure, which means that you can call the closure and consume it in the process.</p>\n"}], "owner": {"reputation": 73, "user_id": 10631039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/175abf97989da64fe49cd82ed276a235?s=128&d=identicon&r=PG", "display_name": "user96425", "link": "https://stackoverflow.com/users/10631039/user96425"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 530, "favorite_count": 0, "accepted_answer_id": 53233898, "answer_count": 1, "score": 7, "last_activity_date": 1541803197, "creation_date": 1541800873, "last_edit_date": 1541801316, "question_id": 53233803, "link": "https://stackoverflow.com/questions/53233803/why-is-calling-a-fnonce-closure-a-move", "title": "Why is calling a FnOnce closure a move?", "body": "<p>I'm trying to pass in a closure to a function that will then mutate something passed into it within the scope of the function.  Based on my current understanding of Rust, that should look something like this:</p>\n\n<pre><code>pub fn call_something(callback: &amp;FnOnce(&amp;mut Vec&lt;i32&gt;)) {\n    let mut my_vec = vec![0, 1, 2, 3, 4];\n    callback(&amp;mut my_vec);\n}\n</code></pre>\n\n<p>That results in these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type dyn for&lt;'r&gt; std::ops::FnOnce(&amp;'r mut std::vec::Vec&lt;i32&gt;): the size of dyn for&lt;'r&gt; std::ops::FnOnce(&amp;'r mut std::vec::Vec&lt;i32&gt;) cannot be statically determined\n --&gt; src/lib.rs:3:5\n  |\n3 |     callback(&amp;mut my_vec);\n  |     ^^^^^^^^\n\nerror[E0507]: cannot move out of borrowed content\n --&gt; src/lib.rs:3:5\n  |\n3 |     callback(&amp;mut my_vec);\n  |     ^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Why is calling a <code>FnOnce</code> a move?  What am I missing here?</p>\n"}, {"tags": ["rust", "locking", "lifetime", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541784907, "post_id": 53230295, "comment_id": 93348202, "body": "Regardless of the error you get, locking a handle to stdout doesn&#39;t actually buy you anything \u2013 it only locks this specific handle.  You can easily create and use a different handle, even while the handle you hold is locked."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541860721, "post_id": 53230731, "comment_id": 93365839, "body": "So a theoretical option would be to lock stdout in a <i>different</i> thread, and push all desired output to a queue which is then printed to stdout by the thread that holds the lock.  However, this would lead to a deadlock as soon as the main thread tries to use <code>println!()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541861003, "post_id": 53230731, "comment_id": 93365929, "body": "@SvenMarnach and it still wouldn&#39;t technically meet OPs requirement to use <i>the type system</i> to solve the problem, as AFAICT Rust&#39;s type system is simply not powerful enough to provide that restriction."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1541784897, "creation_date": 1541784897, "answer_id": 53230731, "question_id": 53230295, "link": "https://stackoverflow.com/questions/53230295/how-to-use-the-rust-type-system-to-prevent-output-to-stdout/53230731#53230731", "title": "How to use the Rust type system to prevent output to stdout?", "body": "<p>You cannot. The standard output lock is <a href=\"https://en.wikipedia.org/wiki/Reentrant_mutex\" rel=\"nofollow noreferrer\"><em>reentrant</em></a>:</p>\n\n<pre><code>use std::io::{self, Write};\n\nfn main() {\n    let out = io::stdout();\n    let mut handle = out.lock();\n    writeln!(handle, \"handle: {}\", 1);\n\n    println!(\"Debugging output\");\n\n    writeln!(handle, \"handle: {}\", 2);\n    drop(handle)\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>handle: 1\nDebugging output\nhandle: 2\n</code></pre>\n\n<p>No amount of type juggling can prevent the same thread from re-acquiring a lock to standard out / error and printing in the middle of your output.</p>\n\n<hr>\n\n<p>Your compiler errors are addressed by:</p>\n\n<ul>\n<li>Returning an <code>&amp; impl ...</code>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n</ul></li>\n<li>Trying to return <code>stdout</code> and its lock together\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41549516/155423\">Is there a way to use locked standard input and output in a constructor to live as long as the struct you&#39;re constructing?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 510, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1541784897, "creation_date": 1541783071, "last_edit_date": 1541784344, "question_id": 53230295, "link": "https://stackoverflow.com/questions/53230295/how-to-use-the-rust-type-system-to-prevent-output-to-stdout", "title": "How to use the Rust type system to prevent output to stdout?", "body": "<p>I'm working on a data pipeline node, an application that takes a continuous supply of data from <code>stdin</code>, processes it, and outputs the result continuously to <code>stdout</code> in a streaming fashion.</p>\n\n<p>Considering the data interchange format is pre-determined, I need a handy way of barring my debug output from feeding to stdout simultaneously. Essentially, a global lock. True, I could just get rid of all the debug statements, but it's more of an academic exercise.</p>\n\n<p><strong>So let's make a function which can write to <code>stdout</code>, and locks <code>stdout</code> as long as it remains in scope so the type system itself prevents other places in the code from writing to <code>stdout</code></strong>:</p>\n\n<pre><code>use std::io::{self, Write};\n\npub fn make_push_output&lt;'a&gt;() -&gt; &amp;'a impl Fn(String) -&gt; io::Result&lt;()&gt; {\n    let handle = io::stdout().lock();\n\n    &amp;|output: String| {\n        handle.write(output.to_string().as_bytes())?;\n\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>Cool, a global lock on <code>stdout</code> that stays in place until the output <code>push_output()</code> function goes out of scope, but it doesn't work. I get a whole list of borrow checker errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n --&gt; src/lib.rs:4:18\n  |\n4 |     let handle = io::stdout().lock();\n  |                  ^^^^^^^^^^^^       - temporary value only lives until here\n  |                  |\n  |                  temporary value does not live long enough\n  |\n  = note: borrowed value must be valid for the static lifetime...\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/lib.rs:6:6\n   |\n6  |       &amp;|output: String| {\n   |  ______^\n7  | |         handle.write(output.to_string().as_bytes())?;\n8  | |\n9  | |         Ok(())\n10 | |     }\n   | |_____^ temporary value does not live long enough\n11 |   }\n   |   - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 3:25...\n  --&gt; src/lib.rs:3:25\n   |\n3  | pub fn make_push_output&lt;'a&gt;() -&gt; &amp;'a impl Fn(String) -&gt; io::Result&lt;()&gt; {\n   |                         ^^\n\nerror[E0373]: closure may outlive the current function, but it borrows `handle`, which is owned by the current function\n --&gt; src/lib.rs:6:6\n  |\n6 |     &amp;|output: String| {\n  |      ^^^^^^^^^^^^^^^^ may outlive borrowed value `handle`\n7 |         handle.write(output.to_string().as_bytes())?;\n  |         ------ `handle` is borrowed here\nhelp: to force the closure to take ownership of `handle` (and any other referenced variables), use the `move` keyword\n  |\n6 |     &amp;move |output: String| {\n  |      ^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0387]: cannot borrow data mutably in a captured outer variable in an `Fn` closure\n --&gt; src/lib.rs:7:9\n  |\n7 |         handle.write(output.to_string().as_bytes())?;\n  |         ^^^^^^\n  |\nhelp: consider changing this closure to take self by mutable reference\n --&gt; src/lib.rs:6:6\n  |\n6 |       &amp;|output: String| {\n  |  ______^\n7 | |         handle.write(output.to_string().as_bytes())?;\n8 | |\n9 | |         Ok(())\n10| |     }\n  | |_____^\n</code></pre>\n\n<p>I've been trying for well over an hour to fix this sequence of borrow checker errors on these 7 lines of code. Here's a non-exhaustive list of steps I've taken so far that haven't worked:</p>\n\n<ul>\n<li>Change the lifetime of <code>make_push_output</code></li>\n<li>Add explicit type and lifetime annotation to <code>handle</code></li>\n<li>Declare a variable for <code>io::stdout()</code> and annotate with type and lifetime</li>\n<li>Add explicit type and lifetime annotation to the closure</li>\n<li>Declare a local function instead of using a closure, couldn't capture the environment</li>\n<li>Use <code>move</code> semantics on the closure, not the brightest move, but I was grasping at straws</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541779096, "post_id": 53229116, "comment_id": 93344992, "body": "This syntax requires that the lifetime <code>&#39;a</code> outlives <code>&#39;b</code>.  See also <a href=\"https://doc.rust-lang.org/book/2018-edition/ch19-02-advanced-lifetimes.html#ensuring-one-lifetime-outlives-another-with-lifetime-subtyping\" rel=\"nofollow noreferrer\">the relevant chapter in the book</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541779153, "post_id": 53229116, "comment_id": 93345040, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/29861388/155423\">When is it useful to define multiple lifetimes in a struct?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/53229116/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541779262, "post_id": 53229116, "comment_id": 93345110, "body": "See also <a href=\"https://stackoverflow.com/q/30768063/155423\">Does &lt;&#39;a, &#39;b: &#39;a&gt; mean that the lifetime &#39;b must outlive the lifetime &#39;a?</a>"}], "owner": {"reputation": 5570, "user_id": 281460, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/cU05x.jpg?s=128&g=1", "display_name": "jwir3", "link": "https://stackoverflow.com/users/281460/jwir3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "closed_date": 1541780123, "answer_count": 0, "score": 0, "last_activity_date": 1541780135, "creation_date": 1541778920, "last_edit_date": 1541779216, "question_id": 53229116, "link": "https://stackoverflow.com/questions/53229116/what-does-it-mean-when-a-struct-has-two-lifetime-parameters", "closed_reason": "Duplicate", "title": "What does it mean when a struct has two lifetime parameters?", "body": "<p>I'm looking at the source for clap's <a href=\"https://docs.rs/crate/clap/2.32.0/source/src/app/parser.rs\" rel=\"nofollow noreferrer\"><code>Parser</code></a> which has the following declaration:</p>\n\n<pre><code>pub struct Parser&lt;'a, 'b&gt;\nwhere\n    'a: 'b,\n{\n   ...\n}\n</code></pre>\n\n<p>What do the lifetime specifiers mean here? I understand that specifying a <em>single</em> lifetime parameter indicates that member references annotated with that lifetime parameter means that an instance of that struct can't outlive the lifetime of that member.</p>\n\n<p>How is this declaration different?</p>\n"}, {"tags": ["recursion", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1541767897, "post_id": 53225992, "comment_id": 93338879, "body": "Please use <code>rustfmt</code> to format your code properly next time. Second, in rust we do not use camelCase, but snake_case, e.g. your function name should be hail_seq. Third, don&#39;t use an explicit <code>return</code> for the last statement, that is very unrusty. Just write <code>vec</code> (withouth return and <code>;</code>)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1541767924, "post_id": 53225992, "comment_id": 93338891, "body": "You may explain or link how to generate a hail sequence."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1541769019, "post_id": 53225992, "comment_id": 93339425, "body": "The more idiomatic in Rust is to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7ddbd3323cc319175982ef50bc2955c5\" rel=\"nofollow noreferrer\">use an iterator</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541769034, "post_id": 53225992, "comment_id": 93339429, "body": "The fun is there is an implementation for Rust on the link that I added <a href=\"https://rosettacode.org/wiki/Hailstone_sequence#Rust\" rel=\"nofollow noreferrer\">rosettacode.org/wiki/Hailstone_sequence#Rust</a> ;)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541770749, "post_id": 53225992, "comment_id": 93340346, "body": "See also <a href=\"https://stackoverflow.com/a/52905147/279627\">stackoverflow.com/a/52905147/279627</a>"}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1541775647, "last_edit_date": 1541775647, "creation_date": 1541768368, "answer_id": 53226178, "question_id": 53225992, "link": "https://stackoverflow.com/questions/53225992/why-does-my-hailstone-sequence-function-using-recursion-only-output-two-values/53226178#53226178", "title": "Why does my Hailstone Sequence function using recursion only output two values?", "body": "<p>Your problem is not Rust-specific, but a more general problem.</p>\n\n<p>On every call of <code>hailSeq</code> you create a new <code>Vec</code> every time, so that only the first <code>vec</code> (from the first call) would be used and returned, hence the <code>[11, 34]</code> (<code>11</code> from the third line, <code>34</code> from the tenth line).</p>\n\n<p>To fix this you have two options, I will provide one here.</p>\n\n<p>The first one would be to extend the current <code>vec</code> with the returned <code>vec</code>, e.g. <code>myvec.extend_from_slice(&amp;returned_vec)</code>.</p>\n\n<p>The second solution involves creating a <code>vec</code> on startup and passing the same instance to every call of the function.</p>\n\n<pre><code>fn hail_seq(number: i32) -&gt; Vec&lt;i32&gt; {\n    fn inner(number: i32, vec: &amp;mut Vec&lt;i32&gt;) {\n        vec.push(number);\n        if number == 1 {\n            return;\n        }\n        if number % 2 == 0 {\n            let num = number / 2;\n            inner(num, vec);\n        } else {\n            let num = 3 * number + 1;\n            inner(num, vec);\n        }   \n    }\n    let mut v = vec![];\n    inner(number, &amp;mut v);\n    v\n}\n\nfn main() {\n    println!(\"{:?}\", hail_seq(11));\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=9b9794d0379770c6676ad8933ef7fe62\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>As a side-note: If you know that a number can't be negative, use a <code>u32</code> instead because you will find errors at compile time instead of runtime.</p>\n"}], "owner": {"reputation": 97, "user_id": 10422222, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9a66ede9ebac7c16933020177bc488f?s=128&d=identicon&r=PG&f=1", "display_name": "SeePlusPlus", "link": "https://stackoverflow.com/users/10422222/seeplusplus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 53226178, "answer_count": 1, "score": 2, "last_activity_date": 1541775647, "creation_date": 1541767639, "last_edit_date": 1541775523, "question_id": 53225992, "link": "https://stackoverflow.com/questions/53225992/why-does-my-hailstone-sequence-function-using-recursion-only-output-two-values", "title": "Why does my Hailstone Sequence function using recursion only output two values?", "body": "<p>I have the following code:</p>\n\n<pre><code>fn hailSeq(number: i32) -&gt; Vec&lt;i32&gt; {\n    let mut vec = Vec::new();\n    vec.push(number);\n    if number == 1 {\n        vec.push(1);\n        return vec;\n    }\n    if number % 2 == 0 {\n        let num = number / 2;\n        vec.push(num);\n        hailSeq(num);\n    } else {\n        let num = 3 * number + 1;\n        vec.push(num);\n        hailSeq(num);\n    }\n    return vec;\n}\n</code></pre>\n\n<p>It calculates the <a href=\"https://rosettacode.org/wiki/Hailstone_sequence\" rel=\"nofollow noreferrer\">Hailstone sequence</a> and stops at 1. The output should look like this for <code>hailSeq(11)</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1]\n</code></pre>\n\n<p>However, my output looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[11, 34]\n</code></pre>\n\n<p>I am not really sure why this is occurring. Perhaps there is a limit on recursion in Rust that I don't know about, but I'm sure there's probably just an error in my code.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541769240, "post_id": 53225972, "comment_id": 93339542, "body": "Doing so leads down a rabbit whole, with the next trait error message. I have looked at the API of nalgebra, which does not contain such complicated trait chains. For example the <code>to_homogenous</code> method. I am not sure if my approach is even the right way."}, {"owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "edited": false, "score": 1, "creation_date": 1541845817, "post_id": 53225972, "comment_id": 93362164, "body": "Thanks for pointing this out, I fixed the typo (<code>na::Matrix</code> -&gt; <code>na::MatrixN</code>). Compilation now leads to the error above. Unfortunately, it seems that <code>nalgebra</code> is not supported by the Rust playground."}], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542279162, "post_id": 53258865, "comment_id": 93515574, "body": "<a href=\"https://github.com/anowell/are-we-learning-yet/issues/14\" rel=\"nofollow noreferrer\">This thread</a> might have some interesting insights. The complexity of these methods is usually narrowed down to the lack of <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">const generics</a>."}], "tags": [], "owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "is_accepted": true, "score": 5, "last_activity_date": 1542013633, "creation_date": 1542013633, "answer_id": 53258865, "question_id": 53225972, "link": "https://stackoverflow.com/questions/53225972/how-do-i-create-a-struct-containing-a-nalgebra-matrix-with-higher-dimensions/53258865#53258865", "title": "How do I create a struct containing a nalgebra matrix with higher dimensions?", "body": "<p><a href=\"https://discourse.nphysics.org/t/using-nalgebra-in-generics/90/3\" rel=\"noreferrer\">This post</a> pointed me in the right direction. The way to do this is in <code>nalgebra</code> is a little bit convoluted: </p>\n\n<pre><code>extern crate nalgebra as na;\n\nuse crate::na::{Dim, DimName, DimNameAdd, DimNameSum, MatrixN, U1, DefaultAllocator};\nuse crate::na::allocator::Allocator;\n\npub struct Homogenous&lt;D: Dim + DimName&gt;\nwhere\n    D: DimNameAdd&lt;U1&gt;,\n    DefaultAllocator: Allocator&lt;f32, DimNameSum&lt;D, U1&gt;, DimNameSum&lt;D, U1&gt;&gt;,\n{\n    mat: MatrixN&lt;f32, DimNameSum&lt;D, U1&gt;&gt;,\n}\n</code></pre>\n\n<p>Hopefully, these type of generic manipulations become more ergonomic in future versions of Rust and nalgebra, since these rather cumbersome type annotations need to be repeated quite often.</p>\n\n<p>By the way, just storing these generic types in a struct still requires the <code>DefaultAllocator</code>:</p>\n\n<pre><code>extern crate nalgebra as na;\n\nuse crate::na::{Dim, DimName, MatrixN, DefaultAllocator};\nuse crate::na::allocator::Allocator;\n\npub struct Homogenous&lt;D: Dim + DimName&gt;\nwhere\n    DefaultAllocator: Allocator&lt;f32, D, D&gt;,\n{\n    mat: MatrixN&lt;f32, D&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 53258865, "answer_count": 1, "score": 4, "last_activity_date": 1542013633, "creation_date": 1541767534, "last_edit_date": 1541861074, "question_id": 53225972, "link": "https://stackoverflow.com/questions/53225972/how-do-i-create-a-struct-containing-a-nalgebra-matrix-with-higher-dimensions", "title": "How do I create a struct containing a nalgebra matrix with higher dimensions?", "body": "<p>I want to create a <code>struct</code> that contains a <code>nalgebra::MatrixN</code> that is <code>U1</code> larger:</p>\n\n<pre><code>extern crate nalgebra as na;\n\nuse na::{DimName, DimNameAdd, DimNameSum, MatrixN, U1};\n\npub struct Homogenous&lt;D: DimName&gt;\nwhere\n    D: DimNameAdd&lt;U1&gt;,\n{\n    mat: na::MatrixN&lt;f32, DimNameSum&lt;D, U1&gt;&gt;,\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: cannot multiply `&lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value` to `&lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value`\n --&gt; src/main.rs:9:5\n  |\n9 |     mat: na::MatrixN&lt;f32, DimNameSum&lt;D, U1&gt;&gt;,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `&lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value * &lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value`\n  |\n  = help: the trait `std::ops::Mul` is not implemented for `&lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value`\n  = help: consider adding a `where &lt;&lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output as na::DimName&gt;::Value: std::ops::Mul` bound\n  = note: required because of the requirements on the impl of `na::allocator::Allocator&lt;f32, &lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output, &lt;D as na::DimNameAdd&lt;na::U1&gt;&gt;::Output&gt;` for `na::DefaultAllocator`\n</code></pre>\n\n<p>Trying to follow the error message leads down a rabbit hole with the next trait error message. I have looked at the API of nalgebra, which does not contain such complicated trait chains. For example the <code>to_homogenous</code> method. I am not sure if my approach is even the right way.</p>\n\n<p>There is also the trait <code>Dim</code> with corresponding <code>DimAdd</code> and <code>DimSum</code>, however since that part of <code>nalgebra</code> is not really documented, </p>\n\n<p>I don't know if I am on the right path - or if what I want to do is even possible. </p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1541777884, "post_id": 53226970, "comment_id": 93344299, "body": "Could you add to the answer what the file should look like; I would suppose it should be a binary (ie, have a <code>fn main()</code> item), but without clicking the links I cannot be sure."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 4, "last_activity_date": 1541780356, "last_edit_date": 1541780356, "creation_date": 1541771365, "answer_id": 53226970, "question_id": 53225235, "link": "https://stackoverflow.com/questions/53225235/what-are-examples-and-what-are-they-used-for/53226970#53226970", "title": "What are examples and what are they used for?", "body": "<p>Examples are useful in library crates to show how the crate is used.</p>\n\n<p>An example can be an executable with a main method or a library; it can either be in a single file <code>examples/example-name.rs</code> or consist of several files in a subdirectory <code>examples/example-name/</code>, with the main method in <code>main.rs</code>.  To compile a library example you need to specify its crate type in <code>Cargo.toml</code>:</p>\n\n<pre><code>[[example]]\nname = \"example-name\"\ncrate-type = [\"lib\"]\n</code></pre>\n\n<p>Examples are compiled by <code>cargo test</code> to ensure that they are up to date with the crate. You can run a specific executable example by</p>\n\n<pre><code>cargo run --example &lt;example-name&gt;\n</code></pre>\n\n<p>and selectively build any example with</p>\n\n<pre><code>cargo build --example &lt;example-name&gt;\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#examples\" rel=\"nofollow noreferrer\">This is documented</a> in the <a href=\"https://doc.rust-lang.org/cargo/reference/\" rel=\"nofollow noreferrer\">Cargo Reference</a>.</p>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 53226970, "answer_count": 1, "score": 5, "last_activity_date": 1541780356, "creation_date": 1541764345, "last_edit_date": 1541777282, "question_id": 53225235, "link": "https://stackoverflow.com/questions/53225235/what-are-examples-and-what-are-they-used-for", "title": "What are examples and what are they used for?", "body": "<p>The directory layout of a Rust project should look like this (<a href=\"https://doc.rust-lang.org/stable/cargo/guide/project-layout.html\" rel=\"nofollow noreferrer\">source</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 benches\n\u2502   \u2514\u2500\u2500 large-input.rs\n\u251c\u2500\u2500 examples\n\u2502   \u2514\u2500\u2500 simple.rs\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 bin\n\u2502   \u2502   \u2514\u2500\u2500 another_executable.rs\n\u2502   \u251c\u2500\u2500 lib.rs\n\u2502   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 some-integration-tests.rs\n</code></pre>\n\n<p>What is the file <code>simple.rs</code> under examples? How do I execute it? How should the file look like?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1769, "user_id": 822068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0LKR7.jpg?s=128&g=1", "display_name": "behnam", "link": "https://stackoverflow.com/users/822068/behnam"}, "edited": false, "score": 2, "creation_date": 1541733035, "post_id": 53219141, "comment_id": 93325948, "body": "Have you tried printing your value to see what it actually is? Like, <code>printl!(&quot;{?}&quot;, t);</code> ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1541748144, "post_id": 53219141, "comment_id": 93329597, "body": "Please provide a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> in the future. You don&#39;t need to post your full program, but instead only the snippet that is interesting together will all the required functions and types. See the <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a>-tag for more information about rust specific mcves, e.g. using the playground"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1541747981, "post_id": 53219427, "comment_id": 93329535, "body": "I seem to remember that <code>unreachable!()</code> now accepts parameters, so you may be able to just use <code>unreachable!(&quot;t = {:?}&quot;, t&quot;),</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541748057, "post_id": 53219427, "comment_id": 93329560, "body": "Yes it does. Look at the declaration at <a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\" rel=\"nofollow noreferrer\"><code>unreachable!()</code></a>"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 2, "creation_date": 1541749132, "post_id": 53219427, "comment_id": 93329945, "body": "Interesting. Though I kind of wrote this code unthinkingly and just realized that <code>unreachable()</code> is entirely inappropriate in this situation where <code>t</code> comes from user input."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1541751990, "post_id": 53219427, "comment_id": 93331119, "body": "Indeed reach an unreachable code is a bug (safe in this case but still a bug)."}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 12, "last_activity_date": 1541749227, "last_edit_date": 1541749227, "creation_date": 1541734019, "answer_id": 53219427, "question_id": 53219141, "link": "https://stackoverflow.com/questions/53219141/why-is-rust-program-not-returning-values-from-if-statements/53219427#53219427", "title": "Why is Rust program not returning values from if statements?", "body": "<p>You should make a habit of handling all cases, even ones you don't expect. If you had done so, you would have found the problem. So instead of this:</p>\n\n<pre><code>if &amp;t == \"C\" {\n    println!(\"{}\", ctof(temp));\n} else if &amp;t == \"F\" {\n    println!(\"{}\", ftoc(temp));\n}\n</code></pre>\n\n<p>You could write this (<em>you could also use a final else branch with no if, but match is much more appealing</em>):</p>\n\n<pre><code>match t.as_str() {\n    \"C\" =&gt; println!(\"{}\", ctof(temp)),\n    \"F\" =&gt; println!(\"{}\", ftoc(temp)),\n    _ =&gt; println!(\"please enter C or F\"),\n}\n</code></pre>\n\n<p>And when you ran your program, you would see that <code>t</code> seemed to be equal to neither <code>\"C\"</code> nor <code>\"F\"</code>. That would hopefully lead you to check the value of <code>t</code>, by doing a debug print.</p>\n\n<pre><code>match t.as_str() {\n    \"C\" =&gt; println!(\"{}\", ctof(temp)),\n    \"F\" =&gt; println!(\"{}\", ftoc(temp)),\n    _ =&gt; println!(\"t = {:?}\", t),\n}\n</code></pre>\n\n<p>At which point you would see that the value of <code>t</code> is not <code>\"C\"</code>, but <code>\"C\\n\"</code> or <code>\"C\\r\\n\"</code>. And you would then realize that <code>read_line</code> was not stripping the newline from your string for you.</p>\n"}], "owner": {"reputation": 43, "user_id": 10626864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qgzUX.jpg?s=128&g=1", "display_name": "roberthayek", "link": "https://stackoverflow.com/users/10626864/roberthayek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "closed_date": 1541775370, "accepted_answer_id": 53219427, "answer_count": 1, "score": 3, "last_activity_date": 1541775432, "creation_date": 1541731665, "last_edit_date": 1541775432, "question_id": 53219141, "link": "https://stackoverflow.com/questions/53219141/why-is-rust-program-not-returning-values-from-if-statements", "closed_reason": "Duplicate", "title": "Why is Rust program not returning values from if statements?", "body": "<p>I am making a simple console program that converts between Celsius and Fahrenheit. The program takes user input multiple times, once for the type of conversion and once for the value to convert. When I run the program it compiles and runs without error, however, it does not actually return any value.</p>\n\n<p>Here is the program:</p>\n\n<pre><code>use std::io;\n\n// C to F: F = C*(9/5) + 32\n// F to C: C = (F-32)*(5/9)\n\n/**********Converts between Fahrenheit and Celsius*********/\n\nfn main() -&gt; () {\n    println!(\"Do you want to convert to Celsius or Fahrenheit? Input C or F\");\n    let mut convert_type = String::new();\n\n    io::stdin()\n        .read_line(&amp;mut convert_type)\n        .expect(\"Failed to conversion type.\");\n\n    let t = String::from(convert_type);\n\n    println!(\"You want to convert to: {}\", t);\n    println!(\"What temperature would you like to convert?\");\n    let mut temp = String::new();\n\n    io::stdin()\n        .read_line(&amp;mut temp)\n        .expect(\"Failed to read temperature.\");\n\n    let temp: i32 = match temp.trim().parse() {\n        Ok(temp) =&gt; temp,\n        Err(_e) =&gt; -1,\n    };\n\n    if &amp;t == \"C\" {\n        println!(\"{}\", ctof(temp));\n    } else if &amp;t == \"F\" {\n        println!(\"{}\", ftoc(temp));\n    }\n}\n\n// Celsius to Fahrenheit\nfn ctof(c: i32) -&gt; i32 {\n    (c * (9 / 5)) + 32\n}\n\n//Fahrenheit to Celsius\nfn ftoc(f: i32) -&gt; i32 {\n    (f - 32) * (5 / 9)\n}\n</code></pre>\n\n<p>Here is a snippet of the console, as you can see it does not output the conversion:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo run --verbose\n   Compiling ftoc v0.1.0 (/Users/roberthayek/rustprojects/ftoc)\n     Running `rustc --crate-name ftoc src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=8f02d379c2e5c97d -C extra-filename=-8f02d379c2e5c97d --out-dir /Users/roberthayek/rustprojects/ftoc/target/debug/deps -C incremental=/Users/roberthayek/rustprojects/ftoc/target/debug/incremental -L dependency=/Users/roberthayek/rustprojects/ftoc/target/debug/deps`\n    Finished dev [unoptimized + debuginfo] target(s) in 1.16s\n     Running `target/debug/ftoc`\nDo you want to convert to Celsius or Fahrenheit? Input C or F\nC\nYou want to convert to: C\n\nWhat temperature would you like to convert?\n0\n</code></pre>\n"}, {"tags": ["rust", "trait-objects"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1541713924, "post_id": 53216593, "comment_id": 93321073, "body": "The best way accomplish this is to either implement your types within an <code>enum</code>, or to create a newtype enum like <code>enum D { E(A), F(B) }</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1541714400, "post_id": 53216593, "comment_id": 93321245, "body": "&quot;\u2026because of the runtime overhead that they impose.&quot; \u2013 Whatever technique you use, you will always have to dynamically dispatch to the methods of your trait, since what method to call on a particular element can only be decided at runtime."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 6, "last_activity_date": 1541714154, "last_edit_date": 1541714154, "creation_date": 1541713841, "answer_id": 53216686, "question_id": 53216593, "link": "https://stackoverflow.com/questions/53216593/vec-of-generics-of-different-concrete-types/53216686#53216686", "title": "Vec of Generics of Different Concrete Types", "body": "<p>A vector is a densely packed array in memory, and it requires that all its element occupy the same amount of space. The size of the elements needs to be known at compile time. Trait objects don't have a known size, so you can't store them in a <code>Vec</code>.</p>\n\n<p>If you want to store a vector of elements that are either <code>A</code> or <code>B</code>, your best option is to use an enum:</p>\n\n<pre><code>pub struct A;\npub struct B;\n\nenum Either {\n    A(A),\n    B(B),\n}\n\nfn main() {\n    let mut v = vec![];\n    v.push(Either::A(A));\n    v.push(Either::B(B));\n}\n</code></pre>\n\n<p>The enum <code>Either</code> has a size equal to the maximum of the sizes of <code>A</code> and <code>B</code>, possibly plus space for a discriminant that indicates what the current variant is.  This size is known at compile time, so <code>Either</code> can be used in a vector.</p>\n\n<p>If <code>A</code> and <code>B</code> implement a common trait, and you want to be able to call methods of this trait on the elements of the vector, you can implement the trait on <code>Either</code> as well, by forwarding all method calls to the correct variant.</p>\n"}, {"tags": [], "owner": {"reputation": 1985, "user_id": 2080712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/NyaqQ.jpg?s=128&g=1", "display_name": "Bernardo Meurer", "link": "https://stackoverflow.com/users/2080712/bernardo-meurer"}, "is_accepted": false, "score": 2, "last_activity_date": 1541713984, "creation_date": 1541713984, "answer_id": 53216718, "question_id": 53216593, "link": "https://stackoverflow.com/questions/53216593/vec-of-generics-of-different-concrete-types/53216718#53216718", "title": "Vec of Generics of Different Concrete Types", "body": "<p>The issue here is that there is no guarantee that just because both <code>A</code> and <code>B</code> implement <code>Foo</code> they will have the same size. Since Rust's <code>Vec</code> is homogeneous we need to statically guarantee that all elements in it are sized.</p>\n\n<p>The solution, then, is to Box the types binding them to the trait. </p>\n\n<pre><code>trait Foo { }\n\npub struct A {}\npub struct B {}\n\nimpl Foo for A {}\nimpl Foo for B {}\n\ntype FooT = Box&lt;dyn Foo&gt;;\n\nfn test() -&gt; Vec&lt;FooT&gt; {\n    let mut generic_vec: Vec&lt;FooT&gt; = Vec::new();\n    generic_vec.push(Box::new(A {}));\n    generic_vec.push(Box::new(B {}));\n    return generic_vec;\n}\n</code></pre>\n\n<p>Now the types may not have the same size, but the pointer (Box) will, so we avoid the issue altogether, although at some cost since we must dereference to access the elements.</p>\n\n<p>Note that here I defined the type alias <code>FooT</code> just for readability, but you could've, of course, just used <code>Box&lt;dyn Foo&gt;</code> instead.</p>\n"}], "owner": {"reputation": 11, "user_id": 9225616, "user_type": "registered", "profile_image": "https://graph.facebook.com/1996341653929716/picture?type=large", "display_name": "Andrew Pham", "link": "https://stackoverflow.com/users/9225616/andrew-pham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1752, "favorite_count": 0, "closed_date": 1541714069, "answer_count": 2, "score": 1, "last_activity_date": 1541714154, "creation_date": 1541713362, "question_id": 53216593, "link": "https://stackoverflow.com/questions/53216593/vec-of-generics-of-different-concrete-types", "closed_reason": "Duplicate", "title": "Vec of Generics of Different Concrete Types", "body": "<p>I have a trait Foo, and concrete types A and B are both bounded by the trait Foo. I want to return a <code>Vec&lt;Foo&gt;</code>, where Foo could be either concrete type A or B, like shown below:</p>\n\n<pre><code>trait Foo { }\n\npub struct A {}\npub struct B {}\n\nimpl Foo for A {}\nimpl Foo for B {}\n\n\nfn test() -&gt; Vec&lt;Foo&gt; {\n    let generic_vec: Vec&lt;Foo&gt; = Vec::new();\n    generic_vec.push(A {});\n    generic_vec.push(B {});\n    return generic_vec;\n}\n</code></pre>\n\n<p>The compiler at the moment is throwing the error that the sized trait is not implemented for Foo. I could wrap Foo in a Box, but I don't want to return a Vec of trait objects because of the runtime overhead that they impose. </p>\n\n<p>I was wondering if there was some Rust Generics feature that would allow me to return a Vec of generic types without having to use trait objects. </p>\n"}, {"tags": ["vim", "rust"], "comments": [{"owner": {"reputation": 15486, "user_id": 719547, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/51e61f099c7b1ac0588ecda69193f75c?s=128&d=identicon&r=PG", "display_name": "Jim Stewart", "link": "https://stackoverflow.com/users/719547/jim-stewart"}, "edited": false, "score": 2, "creation_date": 1541709773, "post_id": 53215774, "comment_id": 93319350, "body": "This question might be too broad or elicit too many opinions. In any event, I&#39;d look into using ctags for this. ctags will semantically index the code, and then you could use a shell command/alias to start Vim with the right filename and line number offset, or you could simply use the tag inside Vim to quickly navigate to that location."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1541710460, "post_id": 53215774, "comment_id": 93319627, "body": "The project may have multiple <code>fn main()</code>, or none at all."}], "answers": [{"comments": [{"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1541718570, "post_id": 53216557, "comment_id": 93322761, "body": "I was hoping for a more semantic approach, but that&#39;s a good start!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1541728202, "post_id": 53216557, "comment_id": 93324896, "body": "Yeah, I guessed maybe so, but that&#39;s outside of my expertise. Furthermore, &quot;smarter&quot; solutions can be more brittle, in a way -- as Sven pointed out in the question comments, a project may have any number of <code>main</code> functions, for example. Finally, I spent about half an hour on this answer, and that&#39;s probably more time than I will spend typing <code>vim src&#47;main.rs</code> for the rest of my life! So I&#39;m not all that willing to spend more time making it clever."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 8, "last_activity_date": 1541713267, "creation_date": 1541713267, "answer_id": 53216557, "question_id": 53215774, "link": "https://stackoverflow.com/questions/53215774/how-do-i-open-vim-at-a-rust-programs-main-function/53216557#53216557", "title": "How do I open Vim at a Rust program&#39;s `main` function?", "body": "<p>To open the file <code>main.rs</code> at the <em>first</em> line beginning with <code>fn main</code>, simply run:</p>\n\n<pre><code>$ vim main.rs +/'^fn main'\n</code></pre>\n\n<p>If you want every file named <code>main.rs</code> to automatically open to the first line beginning with <code>fn main</code>, you can add the following to your <code>.vimrc</code> file:</p>\n\n<pre><code>autocmd BufRead main.rs /^fn main\n</code></pre>\n\n<p>You can extend this to all files ending in <code>.rs</code> by changing <code>main.rs</code> to <code>*.rs</code>. However, if the file does not contain any matching lines, you will get an error message (<code>Error detected while processing BufRead Auto commands for &lt;filename&gt;</code>). The <code>silent!</code> command suppresses errors:</p>\n\n<pre><code>autocmd BufRead *.rs silent! /^fn main\n</code></pre>\n\n<p>This will search to <code>fn main</code> if it exists, but fail silently if it does not.</p>\n"}], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1541714231, "creation_date": 1541709498, "last_edit_date": 1541714231, "question_id": 53215774, "link": "https://stackoverflow.com/questions/53215774/how-do-i-open-vim-at-a-rust-programs-main-function", "title": "How do I open Vim at a Rust program&#39;s `main` function?", "body": "<p>I'm in the terminal, I <code>cd &lt;projectdirectory&gt;</code>. How can I open Vim positioned at the <code>fn main()</code> of this project. </p>\n\n<p>I don't need a ready solution: ideas will be helpful. Could  I potentially make Vim use <code>racer</code> to jump to a symbol automatically on start?</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1541716926, "post_id": 53214434, "comment_id": 93322205, "body": "<i>I can&#39;t make it work</i> \u2014 why not? What &quot;doesn&#39;t work&quot;? Do you expect that a potential answerer to randomly try code until they get some kind of error and hope that it&#39;s whatever error you got? Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53214434/edit\">edit</a> your question to include it. Try to reproduce your error in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 2684, "user_id": 784519, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8ed38b4892e7d5f106d8dfde7a4df4fe?s=128&d=identicon&r=PG", "display_name": "davidkomer", "link": "https://stackoverflow.com/users/784519/davidkomer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541922945, "post_id": 53214434, "comment_id": 93378578, "body": "There are dozens of ways to fail and it would be silly to show each of those with their specific errors. The accepted answer illustrates quite well where the potential roadblocks are and how to work around them."}], "answers": [{"tags": [], "owner": {"reputation": 58, "user_id": 5980786, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xOZr4.jpg?s=128&g=1", "display_name": "Dmitrii Petrov", "link": "https://stackoverflow.com/users/5980786/dmitrii-petrov"}, "is_accepted": false, "score": 0, "last_activity_date": 1541723114, "creation_date": 1541723114, "answer_id": 53218123, "question_id": 53214434, "link": "https://stackoverflow.com/questions/53214434/how-to-return-a-rust-closure-to-javascript-via-webassembly/53218123#53218123", "title": "How to return a Rust closure to JavaScript via WebAssembly?", "body": "<p>As far as I understand from documentation, it isn't supposed to export Rust closures, they only might be passed over as parameters to imported JS functions, but all this happens in Rust code.<br><br>\n<a href=\"https://rustwasm.github.io/wasm-bindgen/reference/passing-rust-closures-to-js.html#passing-rust-closures-to-imported-javascript-functions\" rel=\"nofollow noreferrer\">https://rustwasm.github.io/wasm-bindgen/reference/passing-rust-closures-to-js.html#passing-rust-closures-to-imported-javascript-functions</a><br><br>\nI made couple of experiments, and when a Rust function returns the mentioned 'Closure' type, compiler throws exception: <code>the trait wasm_bindgen::convert::IntoWasmAbi is not implemented for wasm_bindgen::prelude::Closure&lt;(dyn std::ops::FnMut() -&gt; u32 + 'static)&gt;</code><br><br>\nIn all examples, closures are wrapped into an arbitrary sctuct, but after that you already can't call this on JS side.</p>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1541756128, "post_id": 53219594, "comment_id": 93333068, "body": "Any particular reason for the <code>return ret</code> at the end of the function?"}, {"owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1541789470, "post_id": 53219594, "comment_id": 93350275, "body": "Ah that&#39;s just my own personal style, not necessary!"}, {"owner": {"reputation": 2684, "user_id": 784519, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8ed38b4892e7d5f106d8dfde7a4df4fe?s=128&d=identicon&r=PG", "display_name": "davidkomer", "link": "https://stackoverflow.com/users/784519/davidkomer"}, "edited": false, "score": 0, "creation_date": 1541923128, "post_id": 53219594, "comment_id": 93378603, "body": "Thanks @alexcrichton - I&#39;ll need to print this up and sit with it until I really understand it, and I appreciate the thorough breakdown!"}, {"owner": {"reputation": 2684, "user_id": 784519, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8ed38b4892e7d5f106d8dfde7a4df4fe?s=128&d=identicon&r=PG", "display_name": "davidkomer", "link": "https://stackoverflow.com/users/784519/davidkomer"}, "edited": false, "score": 0, "creation_date": 1541923748, "post_id": 53219594, "comment_id": 93378711, "body": "&quot;In the example above we&#39;re calling forget() which leaks memory and can be a problem if the Rust function is called many times (as it would leak a lot of memory).&quot;  I take this to mean that if I&#39;m just calling the function as like a &quot;setup&quot;, then it&#39;s all good? I.e. calling the closure multiple times is fine?"}, {"owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "edited": false, "score": 0, "creation_date": 1542036106, "post_id": 53219594, "comment_id": 93414438, "body": "Correct, yeah. If the whole function is only called once then you&#39;ll only &quot;leak&quot; memory once which arguably isn&#39;t a leak at all! The returned closure can be called any number of times though and it won&#39;t leak memory per invocation, so you should be good there."}], "tags": [], "owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "is_accepted": true, "score": 10, "last_activity_date": 1541774982, "last_edit_date": 1541774982, "creation_date": 1541735325, "answer_id": 53219594, "question_id": 53214434, "link": "https://stackoverflow.com/questions/53214434/how-to-return-a-rust-closure-to-javascript-via-webassembly/53219594#53219594", "title": "How to return a Rust closure to JavaScript via WebAssembly?", "body": "<p>This is a good question, and one that has some nuance too! It's worth calling out the <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/closures.html\" rel=\"noreferrer\">closures example</a> in the <code>wasm-bindgen</code> guide (and the <a href=\"https://rustwasm.github.io/wasm-bindgen/reference/passing-rust-closures-to-js.html\" rel=\"noreferrer\">section about passing closures to JavaScript</a>) as well, and it'd be good to contribute back to that as well if necessary!</p>\n\n<p>To get you started, though, you can do something like this:</p>\n\n<pre><code>use wasm_bindgen::{Closure, JsValue};\n\n#[wasm_bindgen]\npub fn start_game(\n    start_time: f64,\n    screen_width: f32,\n    screen_height: f32,\n    on_render: &amp;js_sys::Function,\n    on_collision: &amp;js_sys::Function,\n) -&gt; JsValue {\n    let cb = Closure::wrap(Box::new(move |time| {\n        time * 4.2\n    }) as Box&lt;FnMut(f64) -&gt; f64&gt;);\n\n    // Extract the `JsValue` from this `Closure`, the handle\n    // on a JS function representing the closure\n    let ret = cb.as_ref().clone();\n\n    // Once `cb` is dropped it'll \"neuter\" the closure and\n    // cause invocations to throw a JS exception. Memory\n    // management here will come later, so just leak it\n    // for now.\n    cb.forget();\n\n    return ret;\n}\n</code></pre>\n\n<p>Above the return value is just a plain-old JS object (here as a <code>JsValue</code>) and we create that with the <code>Closure</code> type you've seen already. This will allow you to quickly return a closure to JS and you'll be able to call it from JS as well.</p>\n\n<p>You've also asked about storing mutable objects and such, and that can all be done through normal Rust closures, capturing, etc. For example the declaration of <code>FnMut(f64) -&gt; f64</code> above is the signature of the JS function, and that can be any set of types such as <code>FnMut(String, MyCustomWasmBindgenType, f64) -&gt;\nVec&lt;u8&gt;</code> if you really want. For capturing local objects you can do:</p>\n\n<pre><code>let mut camera = Camera::new();\nlet mut state = State::new();\nlet cb = Closure::wrap(Box::new(move |arg1, arg2| { // note the `move`\n    if arg1 {\n        camera.update(&amp;arg2);\n    } else {\n        state.update(&amp;arg2);\n    }\n}) as Box&lt;_&gt;);\n</code></pre>\n\n<p>(or something like that)</p>\n\n<p>Here the <code>camera</code> and <code>state</code> variables will be owned by the closure and dropped at the same time. More info about just closures <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"noreferrer\">can be found in the Rust book</a>.</p>\n\n<p>It's also worth briefly covering the memory management aspect here. In the\nexample above we're calling <code>forget()</code> which leaks memory and can be a problem if the Rust function is called many times (as it would leak a lot of memory). The fundamental problem here is that there's memory allocated on the WASM heap which the created JS function object references. This allocated memory in theory needs to be deallocated whenever the JS function object is GC'd, but we have no way of knowing when that happens (until <a href=\"https://github.com/tc39/proposal-weakrefs\" rel=\"noreferrer\"><code>WeakRef</code> exists</a>!).</p>\n\n<p>In the meantime we've chosen an alternate strategy. The associated memory is\ndeallocated whenever the <code>Closure</code> type itself is dropped, providing\ndeterministic destruction. This, however, makes it difficult to work with as we need to figure out manually when to drop the <code>Closure</code>. If <code>forget</code> doesn't work for your use case, some ideas for dropping the <code>Closure</code> are:</p>\n\n<ul>\n<li><p>First, if it's a JS closure only invoked once, then you can use <code>Rc</code>/<code>RefCell</code>\nto drop the <code>Closure</code> inside the the closure itself (using some interior\nmutability shenanigans). We should also <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/1022\" rel=\"noreferrer\">eventually\nprovide</a> native support\nfor <code>FnOnce</code> in <code>wasm-bindgen</code> as well!</p></li>\n<li><p>Next, you can return an auxiliary JS object to Rust which has a manual <code>free</code>\nmethod. For example a <code>#[wasm_bindgen]</code>-annotated wrapper. This wrapper would\nthen need to be manually freed in JS when appropriate.</p></li>\n</ul>\n\n<p>If you can get by, <code>forget</code> is by far the easiest thing to do for\nnow, but this is definitely a pain point! We can't wait for <code>WeakRef</code> to exist :)</p>\n"}], "owner": {"reputation": 2684, "user_id": 784519, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/8ed38b4892e7d5f106d8dfde7a4df4fe?s=128&d=identicon&r=PG", "display_name": "davidkomer", "link": "https://stackoverflow.com/users/784519/davidkomer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 893, "favorite_count": 1, "accepted_answer_id": 53219594, "answer_count": 2, "score": 2, "last_activity_date": 1541774982, "creation_date": 1541703548, "last_edit_date": 1541716746, "question_id": 53214434, "link": "https://stackoverflow.com/questions/53214434/how-to-return-a-rust-closure-to-javascript-via-webassembly", "title": "How to return a Rust closure to JavaScript via WebAssembly?", "body": "<p>The comments on <a href=\"https://github.com/rustwasm/wasm-bindgen/blob/master/src/closure.rs\" rel=\"nofollow noreferrer\">closure.rs</a> are pretty great, however I can't make it work for returning a closure from a WebAssembly library.</p>\n\n<p>I have a function like this:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn start_game(\n    start_time: f64,\n    screen_width: f32,\n    screen_height: f32,\n    on_render: &amp;js_sys::Function,\n    on_collision: &amp;js_sys::Function,\n) -&gt; ClosureTypeHere {\n    // ...\n}\n</code></pre>\n\n<p>Inside that function I make a closure, assuming <code>Closure::wrap</code> is one piece of the puzzle, and copying from closure.rs):</p>\n\n<pre><code>let cb = Closure::wrap(Box::new(move |time| time * 4.2) as Box&lt;FnMut(f64) -&gt; f64&gt;);\n</code></pre>\n\n<p>How do I return this callback from <code>start_game</code> and what should <code>ClosureTypeHere</code> be?</p>\n\n<p>The idea is that <code>start_game</code> will create local mutable objects - like a camera, and the JavaScript side should be able to call the function Rust returns in order to update that camera.</p>\n"}, {"tags": ["rust", "rust-piston"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1541700627, "post_id": 53213025, "comment_id": 93315076, "body": "What does conversion mean in this case? What is the converted value of <code>vec![[10, 20, 30], [5, 15, 25]]</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1541700671, "post_id": 53213025, "comment_id": 93315097, "body": "@trentcl I&#39;m assuming flattened."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1541704428, "post_id": 53213025, "comment_id": 93316808, "body": "Well, to go the other way, I&#39;d do it with <code>.chunks(3)</code>, so I assume you could use <code>.map(|x| x.iter()).flatten()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541758841, "post_id": 53214954, "comment_id": 93334518, "body": "For what it&#39;s worth, the image library basically provides such a fa&#231;ade in the form of the <a href=\"https://docs.rs/image/0.20.1/image/struct.ImageBuffer.html\" rel=\"nofollow noreferrer\"><code>ImageBuffer</code> struct</a>, so the right answer is probably to simply use that."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1541762029, "post_id": 53214954, "comment_id": 93336112, "body": "I didn&#39;t use <code>ImageBuffer</code> because it has a fixed width &amp; height and as I noted in the question I want to grow by <code>Vec&lt;&gt;</code> dynamically."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 2, "last_activity_date": 1541708099, "last_edit_date": 1541708099, "creation_date": 1541705838, "answer_id": 53214954, "question_id": 53213025, "link": "https://stackoverflow.com/questions/53213025/how-to-convert-vecrgbu8-to-vecu8/53214954#53214954", "title": "How to convert Vec&lt;Rgb&lt;u8&gt;&gt; to Vec&lt;u8&gt;", "body": "<p>You choose the <code>Vec&lt;Rgb&lt;u8&gt;&gt;</code> storage format because it's easier to deal with and you want it to grow dynamically. But as you noticed, there's no guarantee of compatibility of its storage with a <code>Vec&lt;u8&gt;</code>, and no safe conversion.</p>\n\n<p>Why not take the problem the other way and build a convenient facade for a <code>Vec&lt;u8&gt;</code> ?</p>\n\n<pre><code>type Rgb = [u8; 3];\n\n#[derive(Debug)]\nstruct Img(Vec&lt;u8&gt;);\n\nimpl Img {\n    fn new() -&gt; Img {\n        Img(Vec::new())\n    }\n\n    fn push(&amp;mut self, rgb: &amp;Rgb) {\n        self.0.push(rgb[0]);\n        self.0.push(rgb[1]);\n        self.0.push(rgb[2]);\n    }\n\n    // other convenient methods\n}\n\nfn main() {\n    let mut img = Img::new();\n    let rgb : Rgb = [1, 2, 3];\n    img.push(&amp;rgb);\n    img.push(&amp;rgb);\n    println!(\"{:?}\", img);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1541707991, "post_id": 53214985, "comment_id": 93318474, "body": "The entire paragraph explaining why the programmer believes this to be safe should be a comment directly next to the <code>unsafe</code> block."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1541720256, "post_id": 53214985, "comment_id": 93323257, "body": "C doesn&#39;t guarantee anything about potential padding bytes at the end of such structure. A valid implementation can align <code>data</code> to 4 bytes for exemple. <a href=\"https://port70.net/~nsz/c/c11/n1570.html#6.7.2.1p14\" rel=\"nofollow noreferrer\">port70.net/~nsz/c/c11/n1570.html#6.7.2.1p14</a>, <a href=\"https://port70.net/~nsz/c/c11/n1570.html#6.7.2.1p17\" rel=\"nofollow noreferrer\">port70.net/~nsz/c/c11/n1570.html#6.7.2.1p17</a>, (C17 didn&#39;t change that). So <code>#[repr(C)]</code> doesn&#39;t change the problem. That very rare and unexpected but that exist on some embedded system."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541754633, "post_id": 53214985, "comment_id": 93332317, "body": "@Stargateur When I wrote the answer, I looked up the rules of <code>repr(C)</code> in the <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md#c-compatible-layout-repr-c\" rel=\"nofollow noreferrer\">unsafe code guidelines</a> \u2013 specifically &quot;The total size of the struct is rounded up to its overall alignment.&quot; However, I missed that this is only valid for &quot;most&quot; platforms."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541755907, "post_id": 53214985, "comment_id": 93332960, "body": "@Stargateur While it&#39;s clear that the standard allows the additional padding, I&#39;m not convinced that this can actually happen in practice. I tried to find evidence that there are targets that would actually add additional padding in this particular case, but couldn&#39;t find any. Do you have a link by any chance?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541759050, "post_id": 53214985, "comment_id": 93334630, "body": "<a href=\"https://rextester.com/UOC10348\" rel=\"nofollow noreferrer\">Exemple</a> (Of course, this use an extension for simplicity) but the idea is that the memory layout of <code>struct data</code> is valid according to C ISO, Rust <b>and C</b> doesn&#39;t give a lot of guarantee about memory layout. C have few guarantee however but not the one you need to say &quot;this is safe in any implementation&quot;. ABI C is implemented defined, there is <b>NOT</b> one standard ABI in C. ABI is not even quoted in the ISO. People can assume anything but that doesn&#39;t concern C."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541759077, "post_id": 53214985, "comment_id": 93334649, "body": "As the Rust book say <a href=\"https://doc.rust-lang.org/nomicon/other-reprs.html#reprc\" rel=\"nofollow noreferrer\">&quot;The order, size, and alignment of fields is exactly what you would <b>expect</b> from C or C++&quot;</a> and as your link say &quot;<b>Assuming</b> the struct is not packed, each field&#39;s offset is aligned[^aligned] to the ABI-mandated alignment for that field&#39;s type, possibly creating unused padding bits.&quot;."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541759081, "post_id": 53214985, "comment_id": 93334651, "body": "<code>repr(C)</code> is by definition not safe because implementation are free to do a lot of thing for the same reason Rust didn&#39;t give guarantee to allow optimisation. <code>repr(C)</code> is a quick way to assume a lot of thing. I would advise to use <code>#[repr(align(N))]</code> or <code>#[repr(packed(N))]</code> instead, and to add static assert to unsure data layout is what we need. According to ISO C, and I don&#39;t really need an exemple, this is not safe. But yes, this will probably work in most case if not all."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541759765, "post_id": 53214985, "comment_id": 93334985, "body": "@Stargateur Of course, if you explicily require a different alignment, you will get padding. And I never doubted that the standard theoretically allows this. What I doubt is that there is any target supported by LLVM that would actually add the padding without explicit annotation in practice.  There is simply no reason to have a different alignment for a single-member struct than for its member, and the single member is guaranteed to have an alignment of 1."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541759770, "post_id": 53214985, "comment_id": 93334988, "body": "&quot;Assuming the struct is not packed&quot; \u2013 this should read &quot;assuming the struct isn&#39;t <code>repr(packed)</code>.  It&#39;s not an assumption about ABI implementation details. I already addressed your other points in the updated answer."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541760926, "post_id": 53214985, "comment_id": 93335583, "body": "&quot;no reason to have a different alignment for a single-member struct than for its member, and the single member is guaranteed to have an alignment of 1.&quot;, I agree.  In general, Rust or C don&#39;t have a reason to do something else. My point is <code>repr(C)</code> on this case doesn&#39;t change anything, Rust and C have almost the same guarantee on data layout. The only big difference is the field order and its imply that the first field begins at offset 0 but in this case there is only one field. Just saying be aware that C doesn&#39;t guarantee anymore than Rust in this case."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1541767420, "post_id": 53214985, "comment_id": 93338653, "body": "@Stargateur Fair enough, agreed that the guarantees of <code>repr(C)</code> aren&#39;t necessarily <i>stronger</i>, just <i>different</i>. I will reword the answer accordingly."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 6, "last_activity_date": 1541768618, "last_edit_date": 1541768618, "creation_date": 1541705966, "answer_id": 53214985, "question_id": 53213025, "link": "https://stackoverflow.com/questions/53213025/how-to-convert-vecrgbu8-to-vecu8/53214985#53214985", "title": "How to convert Vec&lt;Rgb&lt;u8&gt;&gt; to Vec&lt;u8&gt;", "body": "<p>The answer depends on whether you are fine with copying the data. If copying is not an issue for you, you can do something like this:</p>\n\n<pre><code>let img: Vec&lt;Rgb&lt;u8&gt;&gt; = ...;\nlet buf: Vec&lt;u8&gt; = img.iter().flat_map(|rgb| rgb.data.iter()).cloned().collect();\n</code></pre>\n\n<p>If you want to perform the conversion without copying, though, we first need to make sure that your source and destination types actually have the same memory layout. Rust makes very few guarantees about the memory layout of structs. It currently does not even guarantee that a struct with a single member has the same memory layout as the member itself.</p>\n\n<p>In this particular case, the Rust memory layout is not relevant though, since <a href=\"http://www.piston.rs/image/image/struct.Rgb.html\" rel=\"nofollow noreferrer\"><code>Rgb</code> is defined as</a></p>\n\n<pre><code>#[repr(C)]\npub struct Rgb&lt;T: Primitive&gt; {\n    pub data: [T; 3],\n}\n</code></pre>\n\n<p>The <code>#[repr(C)]</code> attribute specifies that the memory layout of the struct should be the same as an equivalent C struct. The C memory layout is not fully specified in the C standard, but according to the <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md#c-compatible-layout-repr-c\" rel=\"nofollow noreferrer\">unsafe code guidelines</a>, there are some rules that hold for \"most\" platforms:</p>\n\n<blockquote>\n  <ul>\n  <li>Field order is preserved.</li>\n  <li>The first field begins at offset 0.</li>\n  <li>Assuming the struct is not packed, each field's offset is aligned to the ABI-mandated alignment for that field's type, possibly creating unused padding bits.</li>\n  <li>The total size of the struct is rounded up to its overall alignment.</li>\n  </ul>\n</blockquote>\n\n<p>As pointed out in the comments, the C standard theoretically allows additional padding at the end of the struct.  However, the Piston image library itself <a href=\"https://github.com/PistonDevelopers/image/blob/50e29cda9470ddb579948c590c8b4b09e90e2863/src/color.rs#L112-L119\" rel=\"nofollow noreferrer\">makes the assumption that a slice of channel data has the same memory layout as the <code>Rgb</code> struct</a>, so if you are on a platform where this assumption does not hold, all bets are off anyway (and I couldnt' find any evidence that such a platform exists).</p>\n\n<p>Rust does guarantee that arrays, slices and vectors are densely packed, and that structs and arrays have an alignment equal to the maximum alignment of their elements. Together with the assumption that the layout of <code>Rgb</code> is as specified by the rules I quotes above, this guarantees that <code>Rgb&lt;u8&gt;</code> is indeed laid out as three consecutive bytes in memory, and that <code>Vec&lt;Rgb&lt;u8&gt;&gt;</code> is indeed a consecutive, densely packed buffer of RGB values, so our conversion is safe. We still need to use unsafe code to write it:</p>\n\n<pre><code>let p = img.as_mut_ptr();\nlet len = img.len() * mem::size_of::&lt;Rgb&lt;u8&gt;&gt;();\nlet cap = img.capacity() * mem::size_of::&lt;Rgb&lt;u8&gt;&gt;();\nmem::forget(img);\nlet buf: Vec&lt;u8&gt; = unsafe { Vec::from_raw_parts(p as *mut u8, len, cap) };\n</code></pre>\n\n<p>If you want to protect against the case that there is additional padding at the end of <code>Rgb</code>, you can check whether <code>size_of::&lt;Rgb&lt;u8&gt;&gt;()</code> is indeed 3.  If it is, you can use the unsafe non-copying version, otherwise you have to use the first version above.</p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 639, "favorite_count": 0, "accepted_answer_id": 53214985, "answer_count": 2, "score": 2, "last_activity_date": 1541768618, "creation_date": 1541697645, "question_id": 53213025, "link": "https://stackoverflow.com/questions/53213025/how-to-convert-vecrgbu8-to-vecu8", "title": "How to convert Vec&lt;Rgb&lt;u8&gt;&gt; to Vec&lt;u8&gt;", "body": "<p>Using the Piston <code>image</code> crate, I can write an image by feeding it a <code>Vec&lt;u8&gt;</code>, but my actual data is <code>Vec&lt;Rgb&lt;u8&gt;&gt;</code> (because that is a lot easier to deal with, and I want to grow it dynamically).</p>\n\n<p>How can I convert <code>Vec&lt;Rgb&lt;u8&gt;&gt;</code> to <code>Vec&lt;u8&gt;</code>? <code>Rgb&lt;u8&gt;</code> is really <code>[u8; 3]</code>. Does this have to be an <code>unsafe</code> conversion?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1541701013, "post_id": 53212843, "comment_id": 93315256, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=92c738dd64712afd928d510f57e91626\" rel=\"nofollow noreferrer\">Return a vector of values</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1541749159, "post_id": 53212843, "comment_id": 93329957, "body": "I&#39;d say the real question here is: &quot;Why does it work when <a href=\"https://play.integer32.com/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=1ee53f0144306fecf751c680dea89a0f\" rel=\"nofollow noreferrer\">replacing the <code>String</code>s with <code>u16</code>s</a>&quot;. I would expect the references to the <code>X</code> temporaries to be too short-lived too\u2026"}, {"owner": {"reputation": 111, "user_id": 9022186, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/024dcdd534febffe42c27139fcb018d1?s=128&d=identicon&r=PG&f=1", "display_name": "Eduardo Braun", "link": "https://stackoverflow.com/users/9022186/eduardo-braun"}, "edited": false, "score": 0, "creation_date": 1541759397, "post_id": 53212843, "comment_id": 93334793, "body": "While the question has an answer it does not highlight your mistake, that was creating a vector of pointers and allocate the pointers inside the <code>get_d</code> function. You should instead move the structs out or allocate them on the heap using Box. <code>fn get_d() -&gt; Vec&lt;X&gt; {     vec![         X {             x: String::new(),             y: String::new(),         },         X {             x: String::new(),             y: String::new(),         },     ]; }</code>"}], "owner": {"reputation": 975, "user_id": 2148352, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/HcT8H.jpg?s=128&g=1", "display_name": "James May", "link": "https://stackoverflow.com/users/2148352/james-may"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 223, "favorite_count": 0, "closed_date": 1541700951, "answer_count": 0, "score": 0, "last_activity_date": 1541701169, "creation_date": 1541697047, "last_edit_date": 1541700929, "question_id": 53212843, "link": "https://stackoverflow.com/questions/53212843/temporary-value-does-not-live-long-enough-at-custom-struct", "closed_reason": "Duplicate", "title": "temporary value does not live long enough at custom struct", "body": "<p>I'm trying to parse an array with customer structures from JSON using Serde. I simplified the example to reproduce the problem, but the idea is the same - I have vector with customer structs:</p>\n\n<pre><code>#[derive(Debug)]\nstruct X {\n    x: String,\n    y: String,\n}\n\nfn get_d&lt;'a&gt;() -&gt; Vec&lt;&amp;'a X&gt; {\n    let mut y: Vec&lt;&amp;X&gt; = vec![];\n    let x = vec![\n        &amp;X {\n            x: String::new(),\n            y: String::new(),\n        },\n        &amp;X {\n            x: String::new(),\n            y: String::new(),\n        },\n    ];\n    for i in x.iter() {\n        y.push(i);\n    }\n\n    y\n}\n\nfn main() {\n    let d = get_d();\n    println!(\"{:?}\", d);\n}\n</code></pre>\n\n<p>I got the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:10:10\n   |\n10 |           &amp;X {\n   |  __________^\n11 | |             x: String::new(),\n12 | |             y: String::new(),\n13 | |         },\n   | |_________^ temporary value does not live long enough\n...\n18 |       ];\n   |        - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 7:10...\n  --&gt; src/main.rs:7:10\n   |\n7  | fn get_d&lt;'a&gt;() -&gt; Vec&lt;&amp;'a X&gt; {\n   |          ^^\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>If I change <code>String</code> to <code>u16</code> at <code>x</code> and <code>y</code> fields in the <code>X</code> struct then it works. The idea is I want to return some part of the vector from the function, nevermind values or pointers. </p>\n\n<p>If I try to return a vector of values I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>14 |         y.push(*i);\n   |                ^^ cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["image", "rust", "rust-piston"], "answers": [{"tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": false, "score": 0, "last_activity_date": 1541700438, "last_edit_date": 1541700438, "creation_date": 1541697496, "answer_id": 53212979, "question_id": 53212611, "link": "https://stackoverflow.com/questions/53212611/function-or-associated-item-not-found-for-imageimagebufferfrom-vec/53212979#53212979", "title": "function or associated item not found for image::ImageBuffer::from_vec()", "body": "<p>Ah it has to be a <code>Vec&lt;P::Subpixel&gt;</code>, i.e. <code>Vec&lt;u8&gt;</code> rather than a <code>Vec&lt;Rgb&lt;u8&gt;&gt;</code>. That is a little annoying.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1541700474, "last_edit_date": 1541700474, "creation_date": 1541698256, "answer_id": 53213189, "question_id": 53212611, "link": "https://stackoverflow.com/questions/53212611/function-or-associated-item-not-found-for-imageimagebufferfrom-vec/53213189#53213189", "title": "function or associated item not found for image::ImageBuffer::from_vec()", "body": "<p>Expanding a bit: In the example above, we have a <code>ImageBuffer::&lt;Rgb&lt;u8&gt;, Vec&lt;Rgb&lt;u8&gt;&gt;</code>. And <code>ImageBuffer</code> provides two implementations of <code>from_vec</code>, depending on its type parameters:</p>\n\n<pre><code>impl&lt;P, Container&gt; ImageBuffer&lt;P, Container&gt;\nwhere\n    P: Pixel&lt;Subpixel = u8&gt; + 'static,\n    Container: Deref&lt;Target = [u8]&gt;, \n</code></pre>\n\n\n\n<pre><code>impl&lt;P: Pixel + 'static&gt; ImageBuffer&lt;P, Vec&lt;P::Subpixel&gt;&gt;\nwhere\n    P::Subpixel: 'static, \n</code></pre>\n\n<p>Neither of these worked here because the <code>Container</code> parameter type in <code>ImageBuffer&lt;Rgb&lt;u8&gt;, Vec&lt;Rgb&lt;u8&gt;&gt;</code> is a vector of <code>Rgb&lt;u8&gt;</code> values. It will dereference to a slice of <code>[Rgb&lt;u8&gt;]</code>, making it incompatible with the first implementation, and the second one expects a vector of subpixel values (<a href=\"https://docs.rs/image/0.20.0/image/trait.Pixel.html\" rel=\"nofollow noreferrer\"><code>&lt;P as Pixel&gt;::Subpixel</code></a>) rather than actual pixel values (<code>Rgb&lt;u8&gt;</code>). This is generally what the <code>ImageBuffer</code> type in this crate expects as its pixel data container.</p>\n\n<p>Working example:</p>\n\n<pre><code>extern crate image;\n\nuse image::{ImageBuffer, Pixel, Rgb};\n\nfn main() {\n    let width = 64;\n    let height = 64;\n    let image = vec![0x7F_u8; width as usize * height as usize * 3];\n\n    let image_buffer =\n        ImageBuffer::&lt;Rgb&lt;u8&gt;, Vec&lt;u8&gt;&gt;::from_vec(width, height, image).unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=e03819050adcb81a2e7979de65bc3eb3\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1136, "favorite_count": 0, "accepted_answer_id": 53213189, "answer_count": 2, "score": 0, "last_activity_date": 1541700474, "creation_date": 1541696279, "last_edit_date": 1541700430, "question_id": 53212611, "link": "https://stackoverflow.com/questions/53212611/function-or-associated-item-not-found-for-imageimagebufferfrom-vec", "title": "function or associated item not found for image::ImageBuffer::from_vec()", "body": "<p>I'm using Piston's <code>image</code> crate, with this code:</p>\n\n<pre><code>use image::{Rgb, ImageBuffer, Pixel};\n\nlet image = Vec::&lt;Rgb&lt;u8&gt;&gt;::new();\n\nlet image_buffer = ImageBuffer::&lt;Rgb&lt;u8&gt;, Vec&lt;Rgb&lt;u8&gt;&gt;&gt;::from_vec(\n    width, height\n    image,\n).unwrap();\n</code></pre>\n\n<p>However I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `from_vec` found for type `image::ImageBuffer&lt;image::Rgb&lt;u8&gt;, std::vec::Vec&lt;image::Rgb&lt;u8&gt;&gt;&gt;` in the current scope\n   --&gt; src/main.rs:348:21\n    |\n348 |     let image_buffer = ImageBuffer::&lt;Rgb&lt;u8&gt;, Vec&lt;Rgb&lt;u8&gt;&gt;&gt;::from_vec(\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `image::ImageBuffer&lt;image::Rgb&lt;u8&gt;, std::vec::Vec&lt;image::Rgb&lt;u8&gt;&gt;&gt;`\n</code></pre>\n\n<p>I can't work out why. It's clearly in <a href=\"https://docs.rs/image/0.20.1/image/struct.ImageBuffer.html#method.from_vec\" rel=\"nofollow noreferrer\">the documentation</a>, and the types seem right as far as I can tell.</p>\n"}, {"tags": ["rust", "cross-compiling"], "answers": [{"comments": [{"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "edited": false, "score": 0, "creation_date": 1541689693, "post_id": 53210209, "comment_id": 93308948, "body": "I only looked at <code>rustup target --help</code> before, didn&#39;t know there is more information to be requested for each sub-command."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 26, "last_activity_date": 1541689567, "last_edit_date": 1541689567, "creation_date": 1541688741, "answer_id": 53210209, "question_id": 53210121, "link": "https://stackoverflow.com/questions/53210121/how-to-install-a-rust-target-for-a-specific-rustup-toolchain/53210209#53210209", "title": "How to install a Rust target for a specific rustup toolchain?", "body": "<p>Read the help for <code>rustup target add</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup target add --help\nrustup-target-add\nAdd a target to a Rust toolchain\n\nUSAGE:\n    rustup target add [OPTIONS] &lt;target&gt;...\n\nFLAGS:\n    -h, --help    Prints help information\n\nOPTIONS:\n        --toolchain &lt;toolchain&gt;    Toolchain name, such as 'stable', 'nightly', or '1.8.0'. For more information see\n                                   `rustup help toolchain`\n</code></pre>\n\n<p>Thus you want:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup target add i686-pc-windows-msvc --toolchain beta\n</code></pre>\n\n<p>I believe it will add the target to the \"current\" toolchain by default, so you could also do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup override set beta               # in your project directory\nrustup target add i686-pc-windows-msvc #\ncargo build                            # no more +beta\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p><code>rustup target list</code> even displays it as \"installed\"</p>\n</blockquote>\n\n<p>Read the help for <code>rustup target list</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup target list --help\nrustup-target-list\nList installed and available targets\n\nUSAGE:\n    rustup target list [OPTIONS]\n\nFLAGS:\n    -h, --help    Prints help information\n\nOPTIONS:\n        --toolchain &lt;toolchain&gt;    Toolchain name, such as 'stable', 'nightly', or '1.8.0'. For more information see\n                                   `rustup help toolchain`\n</code></pre>\n\n<p>Thus you want:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup target list --toolchain beta\n</code></pre>\n"}], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12615, "favorite_count": 2, "accepted_answer_id": 53210209, "answer_count": 1, "score": 12, "last_activity_date": 1541689567, "creation_date": 1541688410, "last_edit_date": 1541688820, "question_id": 53210121, "link": "https://stackoverflow.com/questions/53210121/how-to-install-a-rust-target-for-a-specific-rustup-toolchain", "title": "How to install a Rust target for a specific rustup toolchain?", "body": "<p>I am using <code>rustc</code> and <code>cargo</code> on my 64-bit Windows machine to compile a 32-bit application. This work fine when using the stable toolchain, but when I try to use the beta toolchain it fails.</p>\n\n<p>The beta toolchain was successfully installed with <code>rustup install beta</code>. In the project folder there is a <code>.cargo/config</code> file containing the following lines:</p>\n\n<pre><code>[build]\ntarget = \"i686-pc-windows-msvc\"\n\n[target.i686-pc-windows-msvc]\nrustflags = [\"-Ctarget-feature=+crt-static\"]\n</code></pre>\n\n<p>When running <code>cargo +beta build</code> the following error occurs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0463]: can't find crate for `core`\n  |\n  = note: the `i686-pc-windows-msvc` target may not be installed\n</code></pre>\n\n<p>I have tried running <code>rustup target add i686-pc-windows-msvc</code> to fix the issue but it didn't help; <code>rustup target list</code> even displays it as \"installed\". Possibly this command only adds the target for stable, and I couldn't find out how to specify the beta toolchain.</p>\n\n<p>How can I add another (non-default) target for the beta toolchain?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1541681798, "post_id": 53207980, "comment_id": 93304324, "body": "I would suggest opening an issue or providing a pull request and remove that type in that crate completly ;)"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 2, "creation_date": 1541682140, "post_id": 53207980, "comment_id": 93304504, "body": "Maybe <code>as_built_in</code>? (<a href=\"https://docs.rs/extprim/1.6.0/src/extprim/u128.rs.html#178\" rel=\"nofollow noreferrer\">docs.rs/extprim/1.6.0/src/extprim/u128.rs.html#178</a>)"}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1541683907, "post_id": 53207980, "comment_id": 93305417, "body": "@phimuemue that looks like a great option - I didn&#39;t find it in the public docs, I guess because it&#39;s only conditionally available?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1541684544, "post_id": 53207980, "comment_id": 93305793, "body": "@phimuemue look at my answer, it is even easier than that, thanks for the hint! ;)"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "edited": false, "score": 1, "creation_date": 1541683978, "post_id": 53208301, "comment_id": 93305454, "body": "You could convert the <code>extprim::u128</code> to a string and then parse a <code>u128</code> out of the string, that would be a way too, but not very efficient :D"}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "edited": false, "score": 0, "creation_date": 1541685068, "post_id": 53208301, "comment_id": 93306102, "body": "yup, that&#39;s the implementation I wanted to avoid :)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1541684930, "last_edit_date": 1541684930, "creation_date": 1541682084, "answer_id": 53208301, "question_id": 53207980, "link": "https://stackoverflow.com/questions/53207980/converting-between-extprimu128u128-and-primitive-u128-in-rust/53208301#53208301", "title": "Converting between extprim::u128::u128 and primitive u128 in Rust?", "body": "<p>Update:</p>\n\n<p>When your rustc version is greater than <a href=\"https://github.com/kennytm/extprim/blob/master/build.rs#L13-L15\" rel=\"nofollow noreferrer\">1.26.0</a> the <a href=\"https://docs.rs/extprim/1.6.0/src/extprim/u128.rs.html#1609\" rel=\"nofollow noreferrer\">From trait is implemented</a> and you can use <code>into</code> respectively <code>from</code> easily.</p>\n\n<p>For a lower version than that see below.</p>\n\n<hr>\n\n<p>As a note: <em>\"The most efficient way\"</em> is very subjective.</p>\n\n<p>I would use the <code>low64()</code> and <code>high64()</code> methods to generate a rust <code>u128</code>.</p>\n\n<pre><code>extern crate extprim; // 1.6.0\n\nuse extprim::u128;\n\nfn main() {\n    let number = u128::u128::from_parts(6_692_605_942, 14_083_847_773_837_265_618);\n    println!(\"{:?}\", number);\n\n    // going forth    \n    let real_number = u128::from(number.high64()) &lt;&lt; 64 | u128::from(number.low64());\n    println!(\"{:?}\", number);\n    assert_eq!(number.to_string(), real_number.to_string());\n\n    // and back\n    let old_number = u128::u128::from_parts((real_number &gt;&gt; 64) as u64, (real_number) as u64);\n    assert_eq!(number, old_number);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=d2e44293b7deb2824a9ebe592494ce29\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>Since you can't compare both directly, I used the <code>to_string()</code> function to convert them to a string and compare those.</p>\n"}], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 53208301, "answer_count": 1, "score": 1, "last_activity_date": 1541685024, "creation_date": 1541680969, "last_edit_date": 1541685024, "question_id": 53207980, "link": "https://stackoverflow.com/questions/53207980/converting-between-extprimu128u128-and-primitive-u128-in-rust", "title": "Converting between extprim::u128::u128 and primitive u128 in Rust?", "body": "<p>I'm working with an old Rust module that uses the <a href=\"https://docs.rs/extprim/\" rel=\"nofollow noreferrer\">extprim</a> crate to provide a <a href=\"https://docs.rs/extprim/1.6.0/extprim/u128/struct.u128.html\" rel=\"nofollow noreferrer\">u128</a> type.</p>\n\n<p>I'm trying to use this with a newer crate that uses Rust's primitive <a href=\"https://doc.rust-lang.org/std/primitive.u128.html\" rel=\"nofollow noreferrer\">u128</a> type (available since Rust 1.26).</p>\n\n<p>What's an efficient way to convert back and forth between these two types?</p>\n"}, {"tags": ["design-patterns", "rust", "traits"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541667572, "post_id": 53204327, "comment_id": 93296802, "body": "You can put the private function in a private trait, and make the public trait depend on it."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541668258, "post_id": 53204327, "comment_id": 93297126, "body": "@SvenMarnach I don&#39;t think that it will work in this context. I tried a few different solutions, but cannot satisfy the compiler. Do you have a POC?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541669046, "post_id": 53204327, "comment_id": 93297566, "body": "@SvenMarnach This is forbidden: <code>private trait in public interface</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541669123, "post_id": 53204327, "comment_id": 93297617, "body": "You need to put the trait in a private module, but make the trait itself public. The associated type is a further complication, though."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1541669198, "post_id": 53204327, "comment_id": 93297656, "body": "@Boiethios Here&#39;s an <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=6a4c94b9ec3eca0872453d7014231a35\" rel=\"nofollow noreferrer\">example on the playground without the associated type</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541669407, "post_id": 53204327, "comment_id": 93297770, "body": "This actually works with the associated type as well."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541669796, "post_id": 53204327, "comment_id": 93297994, "body": "@SvenMarnach Well, this is crazy: you cannot leak a private type, but you can leak a public type in a private module... I will accept your answer when you post it."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1541670038, "post_id": 53204327, "comment_id": 93298155, "body": "Yep, <code>byteorder</code> does that as well <a href=\"https://docs.rs/byteorder/1.2.7/src/byteorder/lib.rs.html#166\" rel=\"nofollow noreferrer\">docs.rs/byteorder/1.2.7/src/byteorder/lib.rs.html#166</a> to protect others from implementing their trait"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541670748, "post_id": 53204327, "comment_id": 93298571, "body": "@SvenMarnach: This public trait in private message not triggering the warning seems more like an oversight than a desired behavior to me..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541670928, "post_id": 53204327, "comment_id": 93298685, "body": "@Boiethios: It is not clear from your example whether <code>MyType</code> is supposed to be an internal struct or a struct written by a user of the library; could you specify?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541671641, "post_id": 53204327, "comment_id": 93299048, "body": "@MatthieuM. <code>MyType</code> is an internal struct. I want to have a trait only to share the code."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541671724, "post_id": 53204327, "comment_id": 93299105, "body": "Thanks to @SvenMarnach, I&#39;ve a working code: <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=f6c8a751095c008fd86ef12cff572547\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541673155, "post_id": 53204327, "comment_id": 93299896, "body": "@MatthieuM. I&#39;ve seen this pattern in the wild for a few times, but thinking about it, you are right.  Something feels off here."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541673388, "post_id": 53204327, "comment_id": 93300027, "body": "@Boiethios I&#39;m not posting an answer \u2013 this doesn&#39;t feel quite right, but I don&#39;t know a better way.  One problem I see is that you now have a public method returning a private associated type.  So you can&#39;t really name the return type of <code>forward()</code> in application code using <code>MyTrait</code>, which seems odd.  There are workarounds, like introducing yet another public trait containing the associated type, and making the private trait depend on it, but I&#39;m still not convinced this is the way to go."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541673745, "post_id": 53204327, "comment_id": 93300210, "body": "Related: <a href=\"https://stackoverflow.com/questions/41326566/is-there-a-way-to-have-private-functions-in-public-traits\" title=\"is there a way to have private functions in public traits\">stackoverflow.com/questions/41326566/&hellip;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1541674088, "post_id": 53204327, "comment_id": 93300366, "body": "@MatthieuM. <a href=\"https://rust-lang-nursery.github.io/api-guidelines/future-proofing.html#sealed-traits-protect-against-downstream-implementations-c-sealed\" rel=\"nofollow noreferrer\">The &quot;sealed&quot; pattern is even mentioned in the API guidelines</a>, so it doesn&#39;t seem to be an oversight after all."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541674847, "post_id": 53204327, "comment_id": 93300749, "body": "@SvenMarnach I don&#39;t think that the associated type is an issue. It is only an alias: when you write <code>type Next = MyPublicType;</code>, everything is ok."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541675459, "post_id": 53204327, "comment_id": 93301028, "body": "@Boiethios The problem occurs if you accept a generic type parameter <code>&lt;T: MyTrait&gt;</code> and want to name the associated type. You&#39;d need to write <code>&lt;T as DoTheJob&gt;::Next</code>, but can&#39;t, since <code>DoTheJob</code> is inaccessible."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1541675576, "post_id": 53204327, "comment_id": 93301086, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/183293/discussion-between-boiethios-and-sven-marnach\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1541682506, "post_id": 53207767, "comment_id": 93304694, "body": "I&#39;ve read up a bit on this, and it looks like making a public trait dependent on a private trait <i>won&#39;t</i> become an error in the future.  See allso <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2145-type-privacy.md\" rel=\"nofollow noreferrer\">RFC 2145</a> for the new proposed rules."}], "tags": [], "owner": {"reputation": 18483, "user_id": 497600, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/9d2bd51b0d7a3e483cb42919119d2e8d?s=128&d=identicon&r=PG", "display_name": "lhk", "link": "https://stackoverflow.com/users/497600/lhk"}, "is_accepted": true, "score": 9, "last_activity_date": 1541685749, "last_edit_date": 1541685749, "creation_date": 1541680141, "answer_id": 53207767, "question_id": 53204327, "link": "https://stackoverflow.com/questions/53204327/how-to-have-a-private-part-of-a-trait/53207767#53207767", "title": "How to have a private part of a trait?", "body": "<p>Traits are similar to <a href=\"https://blog.rust-lang.org/2015/05/11/traits.html\" rel=\"noreferrer\">interfaces</a>:</p>\n\n<blockquote>\n  <p>Traits are Rust\u2019s sole notion of interface.</p>\n</blockquote>\n\n<p>An interface is meant to document available methods, to have an interface with private methods makes no sense. Correspondingly, in Rust you can't have different levels of visibility in one trait. If you can see the trait, you can always see all of it. However, Rust traits are subtly different from interfaces: they combine declarations and implementations. I see how it would be intuitive to have a trait with some private functions.</p>\n\n<p>For some time it was possible to split a trait into a public and private part. You would have two traits, one containing your public interface, the other with your private functionality, but this is <a href=\"https://github.com/rust-lang/rust/issues/34537\" rel=\"noreferrer\">being removed in newer versions of Rust</a>.</p>\n\n<p>The current workaround is still splitting the trait, but the private part must now be represented by a public trait within a private module. To explain this, here is some sample code:</p>\n\n<pre><code>// this module contains a public trait Inc, to increment a value\n// and it implements it by using a private trait Add\nmod my_math {\n    pub struct Val {\n        pub val: i32,\n    }\n\n    // this is necessary to encapsulate the private trait\n    // the module is private, so the trait is not exported\n    mod private_parts {\n        pub trait Add {\n            fn add(&amp;mut self, i32);\n        }\n    }\n\n    // in the following code, we have to use adequate namespacing\n    impl private_parts::Add for Val {\n        fn add(&amp;mut self, other: i32) {\n            self.val += other;\n        }\n    }\n\n    pub trait Inc: private_parts::Add {\n        fn inc(&amp;mut self);\n    }\n\n    impl Inc for Val {\n        fn inc(&amp;mut self) {\n            use my_math::private_parts::Add;\n            self.add(1)\n        }\n    }\n}\n\nfn main() {\n    use my_math::Inc;\n    let mut b = my_math::Val { val: 3 };\n    println!(\"value: {}\", b.val);\n    b.inc();\n    println!(\"value: {}\", b.val);\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3108, "favorite_count": 2, "accepted_answer_id": 53207767, "answer_count": 1, "score": 13, "last_activity_date": 1541759324, "creation_date": 1541667386, "last_edit_date": 1541759324, "question_id": 53204327, "link": "https://stackoverflow.com/questions/53204327/how-to-have-a-private-part-of-a-trait", "title": "How to have a private part of a trait?", "body": "<p>In a crate I write, I have a bunch of internal <code>struct</code>s public to the user and that share some code. Some of the shared code is public, some is an internal implementation. To share efficiently the code, I am using macros, but now that the project has more features, this begins to be messy, and I am not satisfied by the semantic of this.</p>\n\n<p>I would like to use a trait, but without exposing the implementation. For example:</p>\n\n<pre><code>pub trait MyTrait {\n    type Next;\n\n    // This function is for the user.\n    fn forward(&amp;self) -&gt; Self::Next {\n        self.do_the_job()\n    }\n\n    // This function is for the user.\n    fn stop(&amp;self) {\n        self.do_the_job();\n    }\n\n    // This function is an implementation detail.\n    fn do_the_job(&amp;self) -&gt; Self::Next;\n}\n</code></pre>\n\n<p>I want the user to see and use <code>forward</code> and <code>stop</code>, but not <code>do_the_job</code>, while my data would only implement <code>do_the_job</code>.</p>\n\n<p>Is it possible to design my code to do something like that? I have tried to imagine some solutions, but nothing has come to my mind.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=d28280b46dbc1f78dfee30f0fba0b438\" rel=\"noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>In an object oriented language with inheritance, I would do (pseudo code):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>public interface MyTrait {\n    type Next;\n\n    fn forward(&amp;self) -&gt; Self::Next;\n\n    fn stop(&amp;self);\n}\n\npublic abstract class MyCommonCode extends MyTrait {\n    fn forward(&amp;self) -&gt; Self::Next {\n        self.do_the_job()\n    }\n\n    fn stop(&amp;self) {\n        self.do_the_job();\n    }\n\n    protected abstract fn do_the_job(&amp;self) -&gt; Self::Next;\n}\n\npublic MyType extends MyCommonCode {\n    type Next = i32;\n\n    protected override fn do_the_job(&amp;self) -&gt; Self::Next {\n        // etc.\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "gtk3", "gtk-rs"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541660919, "post_id": 53200089, "comment_id": 93293987, "body": "Sorry to say, but this is offtopic, as you want us to either find a tutorial for you or act as a code-writing-service. Stackoverflow is neither of both. You may ask on the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">rust forum</a> or try some of the online tutorials from gtk-rs. Please take yourself the time to <a href=\"https://doc.rust-lang.org/stable/book/second-edition/index.html\" rel=\"nofollow noreferrer\">learn rust</a> as well as it seems, that you don&#39;t have much experience with it. Building a GUI is too hard for your first experiments."}, {"owner": {"reputation": 161, "user_id": 9016051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e3f378cbb330dacb7357da9c6763b5b?s=128&d=identicon&r=PG&f=1", "display_name": "casualcoder", "link": "https://stackoverflow.com/users/9016051/casualcoder"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1541681775, "post_id": 53200089, "comment_id": 93304312, "body": "I apologize. :-("}], "answers": [{"comments": [{"owner": {"reputation": 161, "user_id": 9016051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e3f378cbb330dacb7357da9c6763b5b?s=128&d=identicon&r=PG&f=1", "display_name": "casualcoder", "link": "https://stackoverflow.com/users/9016051/casualcoder"}, "edited": false, "score": 0, "creation_date": 1541681852, "post_id": 53204151, "comment_id": 93304352, "body": "I looked everywhere, but not the start page of the crate.  I did some more research on what each lines does and customized it to my needs. Thank you so much for your help!"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 161, "user_id": 9016051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e3f378cbb330dacb7357da9c6763b5b?s=128&d=identicon&r=PG&f=1", "display_name": "casualcoder", "link": "https://stackoverflow.com/users/9016051/casualcoder"}, "edited": false, "score": 0, "creation_date": 1541683351, "post_id": 53204151, "comment_id": 93305142, "body": "You should always start from the <code>Documentation</code> link on the crate page on <code>crates.io</code>."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 2, "last_activity_date": 1541666880, "last_edit_date": 1541666880, "creation_date": 1541666680, "answer_id": 53204151, "question_id": 53200089, "link": "https://stackoverflow.com/questions/53200089/how-do-i-create-a-simple-gtk-messagedialog-in-rust-gtk-rs/53204151#53204151", "title": "How do I create a simple Gtk MessageDialog in Rust / gtk-rs?", "body": "<p><a href=\"http://gtk-rs.org/docs/gtk/\" rel=\"nofollow noreferrer\">There is an example</a> demonstrating a message box:</p>\n\n<pre><code>extern crate gtk;\nuse gtk::prelude::*;\nuse gtk::{ButtonsType, DialogFlags, MessageType, MessageDialog, Window};\n\nfn main() {\n    if gtk::init().is_err() {\n        println!(\"Failed to initialize GTK.\");\n        return;\n    }\n    MessageDialog::new(None::&lt;&amp;Window&gt;,\n                       DialogFlags::empty(),\n                       MessageType::Info,\n                       ButtonsType::Ok,\n                       \"Hello World\").run();\n}\n</code></pre>\n"}], "owner": {"reputation": 161, "user_id": 9016051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e3f378cbb330dacb7357da9c6763b5b?s=128&d=identicon&r=PG&f=1", "display_name": "casualcoder", "link": "https://stackoverflow.com/users/9016051/casualcoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 764, "favorite_count": 0, "accepted_answer_id": 53204151, "answer_count": 1, "score": 1, "last_activity_date": 1541666880, "creation_date": 1541638397, "question_id": 53200089, "link": "https://stackoverflow.com/questions/53200089/how-do-i-create-a-simple-gtk-messagedialog-in-rust-gtk-rs", "title": "How do I create a simple Gtk MessageDialog in Rust / gtk-rs?", "body": "<p>I am trying out gtk-rs and while there is certainly documentation available, it is much too hard to understand for a beginner. I just see many different impls and traits and generics, but there never are any code examples from which I can learn. Usually I look at code, use it, and then go through it line by line so I can understand it. But this isn't possible here.</p>\n\n<p>Can somebody please help me?</p>\n\n<p>I used to program in PyGTK and I found an old sample code:</p>\n\n<pre><code>def report_error(self, reason):\n    dialog = Gtk.MessageDialog(Gtk.Window(), 0, Gtk.MessageType.INFO, Gtk.ButtonsType.OK, \"You did something wrong\")\n    dialog.format_secondary_text(reason)\n    dialog.run()\n    dialog.destroy()\n</code></pre>\n\n<p>But how, just how can I do this in Rust/gtk-rs? I am completely lost.</p>\n"}]