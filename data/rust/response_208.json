[{"tags": ["intellij-idea", "rust", "clion", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 66, "user_id": 11033641, "user_type": "registered", "profile_image": "https://graph.facebook.com/2401732543180505/picture?type=large", "display_name": "Ann Filippova", "link": "https://stackoverflow.com/users/11033641/ann-filippova"}, "is_accepted": true, "score": 5, "last_activity_date": 1549629579, "creation_date": 1549629579, "answer_id": 54592689, "question_id": 54014584, "link": "https://stackoverflow.com/questions/54014584/how-to-set-the-nocapture-flag-for-all-rust-cargo-tests-in-intellij/54592689#54592689", "title": "How to set the --nocapture flag for all Rust/Cargo tests in IntelliJ?", "body": "<p>You can customise the template for all configurations. Please enable <code>Show stdout/stderr in tests (and disable tool window)</code> option on the <code>Run | Edit Configurations</code> tab: <a href=\"https://i.stack.imgur.com/AVEan.png\" rel=\"noreferrer\">screenshot</a></p>\n"}, {"tags": [], "owner": {"reputation": 563, "user_id": 1527127, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9741e1b63a8c2f53045ea6ebddbd5b69?s=128&d=identicon&r=PG", "display_name": "Christian", "link": "https://stackoverflow.com/users/1527127/christian"}, "is_accepted": false, "score": 0, "last_activity_date": 1563260741, "creation_date": 1563260741, "answer_id": 57051754, "question_id": 54014584, "link": "https://stackoverflow.com/questions/54014584/how-to-set-the-nocapture-flag-for-all-rust-cargo-tests-in-intellij/57051754#57051754", "title": "How to set the --nocapture flag for all Rust/Cargo tests in IntelliJ?", "body": "<p>For command line usage add an alias:</p>\n\n<pre><code>.cargo/config:\n\n[alias]\nt = \"test -- --nocapture\"\n</code></pre>\n\n<p>run with:</p>\n\n<pre><code>$ cargo t\n</code></pre>\n\n<p>Or to preserve color:</p>\n\n<pre><code>[alias]\nt = \"test -- --nocapture --color always\"\n</code></pre>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 909, "favorite_count": 1, "accepted_answer_id": 54592689, "answer_count": 2, "score": 4, "last_activity_date": 1563260741, "creation_date": 1546472173, "last_edit_date": 1546740193, "question_id": 54014584, "link": "https://stackoverflow.com/questions/54014584/how-to-set-the-nocapture-flag-for-all-rust-cargo-tests-in-intellij", "title": "How to set the --nocapture flag for all Rust/Cargo tests in IntelliJ?", "body": "<p>Is there a way to make IntelliJ's/CLion's Rust plugin use the <code>--nocapture</code> flag for Rust tests?</p>\n\n<p>I see I could create a \"Run\" configuration for each test, but that's not scalable.</p>\n\n<p>Also, IntelliJ used to print the Cargo command it was running for tests.  Now the output window just shows <code>Testing started at 15:31 ...</code></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2485, "user_id": 15087, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/03fefcb8c50f14151d4efa9eac394e68?s=128&d=identicon&r=PG", "display_name": "Cetra", "link": "https://stackoverflow.com/users/15087/cetra"}, "is_accepted": false, "score": 1, "last_activity_date": 1546469316, "creation_date": 1546469316, "answer_id": 54014173, "question_id": 54013760, "link": "https://stackoverflow.com/questions/54013760/modeling-layered-tree-in-rust/54014173#54014173", "title": "Modeling layered tree in rust", "body": "<p>You can use a memory arena that uses indices instead of reference counted pointers.</p>\n\n<p>Using <a href=\"https://crates.io/crates/indextree\" rel=\"nofollow noreferrer\">indextree</a> as an example:</p>\n\n<pre><code>pub struct NodeId {\n    index: usize,\n}\n\npub struct Node&lt;T&gt; {\n    parent: Option&lt;NodeId&gt;,\n    previous_sibling: Option&lt;NodeId&gt;,\n    next_sibling: Option&lt;NodeId&gt;,\n    first_child: Option&lt;NodeId&gt;,\n    last_child: Option&lt;NodeId&gt;,\n    removed: bool,\n\n    /// The actual data which will be stored within the tree\n    pub data: T,\n}\n\npub struct Arena&lt;T&gt; {\n    nodes: Vec&lt;Node&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>The <code>NodeId</code> struct is a simple integer index.</p>\n\n<p>The nodes contain references to close by nodes (<code>parent</code>, <code>previous_sibling</code>, etc..) so to make for easy traversal.  </p>\n\n<p>A downside of this method is that it's very similar to manual memory management, in that you need to ensure that nodes are added/removed correctly to avoid dangling references. <code>indextree</code> has a lot of <a href=\"https://github.com/saschagrunert/indextree/blob/a28ad6aa731c152206ba185cc159c73de11ac633/src/lib.rs#L410\" rel=\"nofollow noreferrer\">error checking</a> when adding/removing nodes in the tree for this reason.</p>\n\n<p>You might also want to have a look at <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\">petgraph</a>:  While this is a <code>Graph</code> instead of a <code>Tree</code> you can use it as a tree.</p>\n"}], "owner": {"reputation": 1773, "user_id": 662994, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/8a2720f7ae6c05086114e4bee8498078?s=128&d=identicon&r=PG", "display_name": "Emil Sj&#246;lander", "link": "https://stackoverflow.com/users/662994/emil-sj%c3%b6lander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1546469316, "creation_date": 1546466532, "question_id": 54013760, "link": "https://stackoverflow.com/questions/54013760/modeling-layered-tree-in-rust", "title": "Modeling layered tree in rust", "body": "<p>I'm trying to model a structure for a UI library where there exists a ViewNode which owns a RenderNode which owns a LayoutNode. These structures should at the same time form three distinct trees. A ViewTree, a RenderTree, and a Layout tree.</p>\n\n<p>Is there any way of modeling this ownership without resorting to use of Rc? I don't want to use Rc&lt;> because the ownership is clear from my point of view, The trees should never own their children (except for ViewNode), the wrapper is the owner. Each layer should also be able to be pulled out into a library and I don't want to force users of the library to use Rc&lt;>.</p>\n\n<p>Below is what I would <em>want</em> to do but what doesn't work. Should I go about this in a different way perhaps? </p>\n\n<pre><code>#[derive(Debug)]\nstruct LayoutNode&lt;'a&gt; {\n    // .. Some fields\n    children: Vec&lt;&amp;'a LayoutNode&lt;'a&gt;&gt;,\n}\n\n#[derive(Debug)]\nstruct RenderNode&lt;'a&gt; {\n    // .. Some fields\n    layout_node: LayoutNode&lt;'a&gt;,\n    children: Vec&lt;&amp;'a RenderNode&lt;'a&gt;&gt;,\n}\n\n#[derive(Debug)]\nstruct ViewNode&lt;'a&gt; {\n    // .. Some fields\n    render_node: RenderNode&lt;'a&gt;,\n    children: Vec&lt;ViewNode&lt;'a&gt;&gt;,\n}\n\nfn make_tree&lt;'a&gt;() -&gt; ViewNode&lt;'a&gt; {\n    let layout_child = LayoutNode { children: vec![] };\n    let layout = LayoutNode { children: vec![&amp;layout_child] };\n\n    let render_child = RenderNode { layout_node: layout_child, children: vec![] };\n    let render = RenderNode { layout_node: layout, children: vec![&amp;render_child] };\n\n    let view_child = ViewNode { render_node: render_child, children: vec![] };\n    let view = ViewNode { render_node: render, children: vec![view_child] };\n\n    view\n}\n\n\nfn main() {\n    println!(\"{:?}\", make_tree())\n}\n</code></pre>\n"}, {"tags": ["rust", "pipe", "tty"], "comments": [{"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 8, "creation_date": 1546467347, "post_id": 54013753, "comment_id": 94864842, "body": "To rephrase this: you want to check whether <code>stdout</code> is a TTY. You might want to check the <code>isatty</code> function or a crate wrapping it for compatibility, eg. <a href=\"https://crates.io/crates/atty\" rel=\"nofollow noreferrer\">crates.io/crates/atty</a>."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548767957, "post_id": 54420086, "comment_id": 95653711, "body": "Is there any reason to go via <code>libc</code>? The atty crate is cross-platform."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1548768885, "post_id": 54420086, "comment_id": 95654299, "body": "The only reason I can think of is avoiding an extra dependency, while not needing to be cross-platform."}], "tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 5, "last_activity_date": 1548799538, "last_edit_date": 1548799538, "creation_date": 1548761472, "answer_id": 54420086, "question_id": 54013753, "link": "https://stackoverflow.com/questions/54013753/is-there-a-cross-platform-way-to-check-if-stdout-is-being-piped-into-another-pro/54420086#54420086", "title": "Is there a cross-platform way to check if stdout is being piped into another program in Rust?", "body": "<p>Translated into the POSIX language, your question would be: \"is stdout not a TTY\", so the answer on *nix can be obtained by <a href=\"https://stackoverflow.com/a/36258285/1026\"><code>!isatty(STDOUT_FILENO)</code></a>. The <a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\">libc</a> crate can be used to call this from Rust.</p>\n\n<p>On Windows, it's complicated, so you're better off using the <a href=\"https://crates.io/crates/atty\" rel=\"nofollow noreferrer\">atty</a> crate.</p>\n"}], "owner": {"reputation": 2479, "user_id": 1627744, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b9e025d9d85f02fe52b6c38575f2a238?s=128&d=identicon&r=PG", "display_name": "Narigo", "link": "https://stackoverflow.com/users/1627744/narigo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 547, "favorite_count": 0, "accepted_answer_id": 54420086, "answer_count": 1, "score": 3, "last_activity_date": 1548799538, "creation_date": 1546466488, "last_edit_date": 1546470223, "question_id": 54013753, "link": "https://stackoverflow.com/questions/54013753/is-there-a-cross-platform-way-to-check-if-stdout-is-being-piped-into-another-pro", "title": "Is there a cross-platform way to check if stdout is being piped into another program in Rust?", "body": "<p>I'd like to disable colors when the output is piped somewhere else than a terminal.</p>\n"}, {"tags": ["rust", "deserialization", "traits", "serde"], "comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546468721, "post_id": 54013125, "comment_id": 94865321, "body": "@Shepmaster I don&#39;t think it&#39;s a duplicate. The suggested dup: A struct has a field that references a trait. How do I deserialize? This question: I want to mass implement Deserialize for all types that implement a specific trait."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546469798, "post_id": 54013125, "comment_id": 94865612, "body": "If all of your structs have the same implementation for deserialization, then why not  make them the same actual struct (or all contain the same struct) and implement <code>Deserialize</code> for that? If they <i>aren&#39;t</i> the same, then what&#39;s the benefit of adding extra indirection?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546470080, "post_id": 54013125, "comment_id": 94865709, "body": "The error is relatively straight-forward. Serde <a href=\"https://docs.rs/serde/1.0.84/serde/trait.Deserialize.html#impl-Deserialize%3C%27de%3E-90\" rel=\"nofollow noreferrer\">implements <code>Deserialize</code> for <code>Box&lt;T&gt;</code></a>. Your implementation covers for <code>T</code>, which might be a <code>Box&lt;T&gt;</code>. A user of both crates could construct a type that could be deserialized as either your code or the one in Serde. This is disallowed."}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546470278, "post_id": 54013125, "comment_id": 94865762, "body": "@Shepmaster Maybe I am doing a basic mistake here. I thought by specifying <code>where T: Configurable&lt;Config = C&gt;</code> my implementation of <code>Deserialize</code> would only cover implementors of <code>Configurable</code>. <code>Box&lt;T&gt;</code> is not an implementor of <code>Configurable</code>, so I figured there wouldn&#39;t be a problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1546470394, "post_id": 54013125, "comment_id": 94865793, "body": "What prevents someone from implementing <code>Configurable</code> for <code>Box&lt;MyOwnType&gt;</code> when <code>MyOwnType</code> also implements <code>Deserialize</code>?"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546470754, "post_id": 54013125, "comment_id": 94865875, "body": "Oh. Did not think about that. Thanks. :-)"}], "answers": [{"comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 0, "creation_date": 1546468921, "post_id": 54013923, "comment_id": 94865379, "body": "Nice idea with a macro, and thanks for showing how to do it! I don&#39;t understand what&#39;s up with the conflicting implementations, though. There is no type that implements both Configurable and Deserialize from some other source."}, {"owner": {"reputation": 7240, "user_id": 327201, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0ee53216660fae93d26f8dcaba3945a0?s=128&d=identicon&r=PG", "display_name": "Ramon Snir", "link": "https://stackoverflow.com/users/327201/ramon-snir"}, "reply_to_user": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 1, "creation_date": 1546469064, "post_id": 54013923, "comment_id": 94865420, "body": "@Anders honestly - I don&#39;t know. I tried finding a solution with the trait, got various error messages. Maybe someone with a deeper understanding of Rust traits can explain how to do it / why it isn&#39;t possible."}], "tags": [], "owner": {"reputation": 7240, "user_id": 327201, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0ee53216660fae93d26f8dcaba3945a0?s=128&d=identicon&r=PG", "display_name": "Ramon Snir", "link": "https://stackoverflow.com/users/327201/ramon-snir"}, "is_accepted": true, "score": 2, "last_activity_date": 1546469681, "last_edit_date": 1546469681, "creation_date": 1546467604, "answer_id": 54013923, "question_id": 54013125, "link": "https://stackoverflow.com/questions/54013125/how-can-i-mass-implement-deserialize-for-all-types-that-implement-a-specific-tra/54013923#54013923", "title": "How can I mass implement Deserialize for all types that implement a specific trait?", "body": "<p>I am not sure if there's a way to define such a broad trait without causing conflicting implementations. What you could do is use a macro to avoid repetition:</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\nuse serde_json;\n\nuse serde_json::Error;\n\n#[macro_use]\nextern crate serde_derive;\n\nstruct Message {\n    text: String,\n}\n\n#[derive(Deserialize)]\nstruct MessageConfig {\n    first_half: String,\n    second_half: String,\n}\n\nimpl Message {\n    fn from_config(config: MessageConfig) -&gt; Message {\n        Message {\n            text: format!(\"{} {}\", config.first_half, config.second_half),\n        }\n    }\n}\n\nmacro_rules! derive_configurable_serializer {\n    ( $t:ident, $c:ident ) =&gt; {\n        impl&lt;'de&gt; Deserialize&lt;'de&gt; for $t {\n            fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;$t, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n            {\n                $c::deserialize(deserializer).map(|config| $t::from_config(config))\n            }\n        }\n    };\n}\n\nderive_configurable_serializer!(Message, MessageConfig);\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let data = r#\"{ \"first_half\": \"John\", \"second_half\": \"Doe\" }\"#;\n\n    let p: Message = serde_json::from_str(data)?;\n\n    println!(\"Hello, {}!\", p.text);\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 493, "favorite_count": 1, "accepted_answer_id": 54013923, "answer_count": 1, "score": 3, "last_activity_date": 1546469681, "creation_date": 1546462853, "last_edit_date": 1546469627, "question_id": 54013125, "link": "https://stackoverflow.com/questions/54013125/how-can-i-mass-implement-deserialize-for-all-types-that-implement-a-specific-tra", "title": "How can I mass implement Deserialize for all types that implement a specific trait?", "body": "<p>I am deserializing a YAML config file with Serde. For most structs I deserialize into, things are quite simple \u2014 there's a one-to-one relationship between the fields of the structs and the properties in my YAML file.</p>\n\n<p>In a few cases, things are a bit more complicated. For these, the properties in the YAML file are better viewed as parameters to the constructor. The actual struct will have different fields, calculated from those.</p>\n\n<p>For these cases, I have written separate config structs that I deserialize into. For simplicity, consider this silly example:</p>\n\n<pre><code>struct Message {\n    text: String,\n}\n\nimpl Message {\n    fn from_config(config: MessageConfig) -&gt; Message {\n        Message {\n            text: format!(\"{} {}\", config.first_half, config.second_half),\n        }\n    }\n}\n\n#[derive(Deserialize)]\nstruct MessageConfig {\n    first_half: String,\n    second_half: String,\n}\n</code></pre>\n\n<p>To have Serde do the conversion from <code>MessageConfig</code> to <code>Message</code> for me, I implemented <code>Deserialize</code> for <code>Message</code>:</p>\n\n<pre><code>impl&lt;'de&gt; Deserialize&lt;'de&gt; for Message {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Message, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        MessageConfig::deserialize(deserializer).map(|config| Message::from_config(config))\n    }\n}\n</code></pre>\n\n<p>This works, but there would be a lot of copy pasting of the deserialization code involved if I were to do this for every struct, so I figured I should make a trait out of it:</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\nuse serde_json;\n#[macro_use]\nextern crate serde_derive;\n\ntrait Configurable {\n    type Config;\n    fn from_config(config: Self::Config) -&gt; Self;\n}\n\nimpl&lt;'de, T, C&gt; Deserialize&lt;'de&gt; for T\nwhere\n    T: Configurable&lt;Config = C&gt;,\n    C: Deserialize&lt;'de&gt;,\n{\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;T, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        Self::Config::deserialize(deserializer).map(|config| Self::from_config(config))\n    }\n}\n\nstruct Message {\n    text: String,\n}\n\nimpl&lt;'de&gt; Configurable for Message {\n    type Config = MessageConfig;\n\n    fn from_config(config: MessageConfig) -&gt; Message {\n        Message {\n            text: format!(\"{} {}\", config.first_half, config.second_half),\n        }\n    }\n}\n\n#[derive(Deserialize)]\nstruct MessageConfig {\n    first_half: String,\n    second_half: String,\n}\n</code></pre>\n\n<p>However, the compiler is not happy about this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `_IMPL_DESERIALIZE_FOR_MessageConfig::_serde::Deserialize&lt;'_&gt;` for type `std::boxed::Box&lt;_&gt;`:\n  --&gt; src/lib.rs:11:1\n   |\n11 | / impl&lt;'de, T, C&gt; Deserialize&lt;'de&gt; for T\n12 | | where\n13 | |     T: Configurable&lt;Config = C&gt;,\n14 | |     C: Deserialize&lt;'de&gt;,\n...  |\n21 | |     }\n22 | | }\n   | |_^\n   |\n   = note: conflicting implementation in crate `serde`:\n           - impl&lt;'de, T&gt; _IMPL_DESERIALIZE_FOR_MessageConfig::_serde::Deserialize&lt;'de&gt; for std::boxed::Box&lt;T&gt;\n             where T: _IMPL_DESERIALIZE_FOR_MessageConfig::_serde::Deserialize&lt;'de&gt;;\n   = note: downstream crates may implement trait `Configurable` for type `std::boxed::Box&lt;_&gt;`\n\nerror[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g. `MyStruct&lt;T&gt;`)\n  --&gt; src/lib.rs:11:1\n   |\n11 | / impl&lt;'de, T, C&gt; Deserialize&lt;'de&gt; for T\n12 | | where\n13 | |     T: Configurable&lt;Config = C&gt;,\n14 | |     C: Deserialize&lt;'de&gt;,\n...  |\n21 | |     }\n22 | | }\n   | |_^ type parameter `T` must be used as the type parameter for some local type\n   |\n   = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n\n<p>The error messages make little sense to me. What does <code>Box</code> have to do with anything? And is it somehow possible to make this trait work?</p>\n"}, {"tags": ["rust", "smart-pointers", "dereference"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1571234605, "last_edit_date": 1571234605, "creation_date": 1546466428, "answer_id": 54013733, "question_id": 54012660, "link": "https://stackoverflow.com/questions/54012660/unwrap-and-access-t-from-an-optionrcrefcellt/54013733#54013733", "title": "Unwrap and access T from an Option&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;", "body": "<blockquote>\n  <p><strong>Unwrap</strong> and access <code>T</code> from an <code>Option&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;</code></p>\n</blockquote>\n\n<p>You <strong>really</strong> don't want to try to remove the value from the <code>Option</code>, the <code>Rc</code> or the <code>RefCell</code> via <code>unwrap</code> / <code>try_unwrap</code> / <code>into_inner</code>. Instead, pattern match on the <code>Option</code> and then call <code>borrow</code> on the <code>RefCell</code> to get a reference to the <code>T</code>.</p>\n\n<p>Additionally:</p>\n\n<ol>\n<li>Use <code>if let</code> instead of a <code>match</code> statement when you only care about one arm.</li>\n<li>Variables use <code>snake_case</code>. <code>V</code> is not an appropriate name.</li>\n<li>There's no need to use a struct here, or to define the helper function publicly. A plain function and a nested function are simpler and exposes less detail.</li>\n<li>There's no need to provide an explicit type when constructing <code>ret</code>.</li>\n</ol>\n\n<pre><code>pub fn inorder_traversal(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    fn helper(node: &amp;Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, ret: &amp;mut Vec&lt;i32&gt;) {\n        if let Some(v) = node {\n            let v = v.borrow();\n\n            helper(&amp;v.left, ret);\n            ret.push(v.val);\n            helper(&amp;v.right, ret);\n        }\n    }\n\n    let mut ret = vec![];\n\n    if let Some(v) = root {\n        helper(&amp;Some(v), &amp;mut ret);\n    }\n\n    ret\n}\n</code></pre>\n\n<p>Personally, I'm not a fan of being forced to construct the <code>Some</code>, so I'd probably reorganize the code, which also allows me to stick it as a method on <code>TreeNode</code>:</p>\n\n<pre><code>impl TreeNode {\n    pub fn inorder_traversal(&amp;self) -&gt; Vec&lt;i32&gt; {\n        fn helper(node: &amp;TreeNode, ret: &amp;mut Vec&lt;i32&gt;) {\n            if let Some(ref left) = node.left {\n                helper(&amp;left.borrow(), ret);\n            }\n\n            ret.push(node.val);\n\n            if let Some(ref right) = node.right {\n                helper(&amp;right.borrow(), ret);\n            }\n        }\n\n        let mut ret = vec![];\n        helper(self, &amp;mut ret);\n        ret\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53691655/155423\">Why does Arc::try_unwrap() cause a panic?</a></li>\n</ul>\n"}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2284, "favorite_count": 1, "accepted_answer_id": 54013733, "answer_count": 1, "score": 3, "last_activity_date": 1571234605, "creation_date": 1546460475, "last_edit_date": 1546465553, "question_id": 54012660, "link": "https://stackoverflow.com/questions/54012660/unwrap-and-access-t-from-an-optionrcrefcellt", "title": "Unwrap and access T from an Option&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;", "body": "<p>I am trying to solve some Leetcode problems with Rust. However, I ran into some difficulties with LeetCode's <code>TreeNode</code> implementation. </p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\n// TreeNode data structure\n#[derive(Debug, PartialEq, Eq)]\npub struct TreeNode {\n    pub val: i32,\n    pub left: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    pub right: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n}\n\nimpl TreeNode {\n    #[inline]\n    pub fn new(val: i32) -&gt; Self {\n        TreeNode {\n            val,\n            left: None,\n            right: None,\n        }\n    }\n}\n</code></pre>\n\n<p>If I want to do an inorder traversal, how to unwrap the <code>TreeNode</code>'s <code>Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;</code> object, access its <code>.val</code> <code>.left</code> <code>.right</code> and pass them as inputs into a recursive function?</p>\n\n<p>I have tried:</p>\n\n<pre><code>pub struct Solution;\n\nimpl Solution {\n    pub fn inorder_traversal(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n        let mut ret: Vec&lt;i32&gt; = vec![];\n        match root {\n            Some(V) =&gt; Solution::helper(&amp;Some(V), &amp;mut ret),\n            None =&gt; (),\n        }\n\n        ret\n    }\n\n    fn helper(node: &amp;Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, ret: &amp;mut Vec&lt;i32&gt;) {\n        match node {\n            None =&gt; return,\n            Some(V) =&gt; {\n                // go to the left branch\n                Solution::helper(\n                    (*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n                        .into_inner()\n                        .left,\n                    ret,\n                );\n                // push root value on the vector\n                ret.push(Rc::try_unwrap(Rc::clone(V)).unwrap_err().into_inner().val);\n                // go right branch\n                Solution::helper(\n                    (*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n                        .into_inner()\n                        .right,\n                    ret,\n                );\n            }\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99b7fd163ad8179d1d63e7383b1a99dc\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:42:21\n   |\n42 | /                     (*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n43 | |                         .into_inner()\n44 | |                         .left,\n   | |_____________________________^ expected reference, found enum `std::option::Option`\n   |\n   = note: expected type `&amp;std::option::Option&lt;std::rc::Rc&lt;std::cell::RefCell&lt;TreeNode&gt;&gt;&gt;`\n              found type `std::option::Option&lt;std::rc::Rc&lt;std::cell::RefCell&lt;TreeNode&gt;&gt;&gt;`\nhelp: consider borrowing here\n   |\n42 |                     &amp;(*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n43 |                         .into_inner()\n44 |                         .left,\n   |\n</code></pre>\n\n<p>But if I try the suggestion, it complains as well:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of an `Rc`\n  --&gt; src/lib.rs:42:22\n   |\n42 |                     &amp;(*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of an `Rc`\n\nerror[E0507]: cannot move out of data in a `&amp;` reference\n  --&gt; src/lib.rs:42:22\n   |\n42 |                     &amp;(*Rc::try_unwrap(Rc::clone(V)).unwrap_err())\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |                      |\n   |                      cannot move out of data in a `&amp;` reference\n   |                      cannot move\n</code></pre>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546457721, "post_id": 54011718, "comment_id": 94861052, "body": "Please define what you mean by <i>character</i>. There are many possible meanings."}], "answers": [{"comments": [{"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546457249, "post_id": 54012018, "comment_id": 94860863, "body": "I&#39;m not really asking whether the regex crate supports incremental searching on streams - what really want is how far the regex matcher has had to search. The suggestion of intercepting <code>&amp;str</code> is just one (possibly infeasible) solution for how to make that work, I&#39;m open to other suggestions. At the limit, I suspect this could be done by forking the library myself and keeping track of the furthest char, but that sounds like a lot of work."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1546458021, "post_id": 54012018, "comment_id": 94861167, "body": "&quot;how far the regex matcher has had to search&quot; - The regex matcher might just decide to start from the end of the string."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1546458636, "post_id": 54012018, "comment_id": 94861441, "body": "@SebastianRedl: Honestly, that&#39;s fine/what I want for my usecase (but I suspect for most regexes that don&#39;t have a <code>$</code> in them it won&#39;t do that)"}, {"owner": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "reply_to_user": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546461008, "post_id": 54012018, "comment_id": 94862334, "body": "@CallumRogers This still seems to be an instance of the XY problem. What are you planning on doing with this information? Which characters looked at depends heavily on the regex engine implementation. For instance, some parts of the regex engine use SIMD instructions to match multiple bytes at a time with a single instruction. This may look further ahead in the string than you were expecting. Or it could do reverse search. And it can&#39;t be intercepted; the regex engine matches on raw byte sequences directly. With more information on your eventual goal, we may be able to provide an alternative."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "reply_to_user": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "edited": false, "score": 0, "creation_date": 1546463046, "post_id": 54012018, "comment_id": 94863179, "body": "@BrianCampbell: I&#39;m going to use this information to try and do fast incremental re-lexing in an experimental lexer I&#39;m writing. I don&#39;t think this is an instance of the XY problem because the question I&#39;m not asking is &quot;how do I write an incremental re-lexer&quot; (that&#39;s way too big for SO!) it&#39;s &quot;I&#39;m experimenting with a way of incremental lexing, I need this specific feature from a library to try out to see if it works, how do I do it?&quot;."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "reply_to_user": {"reputation": 287982, "user_id": 69755, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/6aa87e056bd2ee342fbd56eb2110603c?s=128&d=identicon&r=PG", "display_name": "Brian Campbell", "link": "https://stackoverflow.com/users/69755/brian-campbell"}, "edited": false, "score": 0, "creation_date": 1546463105, "post_id": 54012018, "comment_id": 94863209, "body": "@BrianCampbell: Also, this is a specific regex engine so I can work out exactly what it&#39;s going to do. It also doesn&#39;t work on raw bytes directly, it is abstracted over with <a href=\"https://github.com/rust-lang/regex/blob/d4b9419ed41907d5e8b43166ce7aef77e6fb93d9/src/input.rs#L81\" rel=\"nofollow noreferrer\"><code>Input</code></a>. I&#39;m actually having some success with writing a <code>TrackingInout</code> that should do what I want in a forked version of the library."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1546463984, "post_id": 54012018, "comment_id": 94863555, "body": "Input is only used in the slower engines, so the result will not be fast, although you might consider it fast enough. The approach of forking and modifying the slower engines is exactly what I suggested in the linked issue. Regardless, your question is answered. You cannot do what you want with the regex crate as of today."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1546464337, "post_id": 54012018, "comment_id": 94863697, "body": "Note that I will be releasing a crate imminently that <i>may</i> make your use case substantially easier, depending on a few factors, without sacrficing speed. But I can&#39;t say for certain. (More specifically, it is a lower level regex library that exposes a more traditional finite automaton interface than what you typically find in a general purpose regex engine.)"}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546465966, "post_id": 54012018, "comment_id": 94864326, "body": "@BurntSushi5: As to be expected, you&#39;re right - just realised <code>Input</code> is only used with the NFA engines. This is probably good enough for me (although is there a reason the DFA ones couldn&#39;t use a trait for getting bytes/slices from the text and recording the max value? Other than a likely perf hit?). The new crate sounds very interesting."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546466686, "post_id": 54012018, "comment_id": 94864599, "body": "Am I right in thinking forward DFAs never backtrack? Then it looks like the <code>Result&lt;usize&gt;</code> will always return the furthest seen character. I can discount backwards searches being used as I won&#39;t accept <code>^</code> or <code>$</code> in my lexer."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546466709, "post_id": 54012018, "comment_id": 94864607, "body": "@CallumRogers I am legitimately happy to answer specific questions, but please ask them on the issue tracker, ideally against something specific that has already been covered in my issue comments. Truthfully, questions like, &quot;is there a reason why your specific implementation doesn&#39;t do X&quot; in this context take a long time to answer, which is why I tried to dump all my thoughts on to the issue tracker so that I wouldn&#39;t need to continually go over this every time it comes up. :-)"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1546466840, "post_id": 54012018, "comment_id": 94864664, "body": "A forward DFA never backtracks, yes. If you don&#39;t care about the start of a match---e.g., you are executing an anchored search---then the DFA can be made to report the end of a leftmost-first match in a single pass. This API is not exposed in the regex crate."}, {"owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "edited": false, "score": 0, "creation_date": 1546466915, "post_id": 54012018, "comment_id": 94864694, "body": "@BurntSushi5: thanks for your help, it has been appreciated! Looks like I can get this all working with a light fork of the crate."}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 5, "last_activity_date": 1546457640, "last_edit_date": 1546457640, "creation_date": 1546456844, "answer_id": 54012018, "question_id": 54011718, "link": "https://stackoverflow.com/questions/54011718/find-how-many-characters-a-regex-has-looked-at-in-a-string-before-succeeding-fai/54012018#54012018", "title": "Find how many characters a regex has looked at in a string before succeeding/failing", "body": "<p>This looks like an instance of the <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a>. Namely, it sounds like what you're asking is whether the regex crate supports incremental searching on streams. More specifically, whether you can use the regex crate to search text that does not necessarily live contiguously in memory.</p>\n\n<p>In any case, the answer to both questions is: you can't, in general.</p>\n\n<p>If you're curious about the complexities of supporting search on streams, <a href=\"https://github.com/rust-lang/regex/issues/425\" rel=\"nofollow noreferrer\">issue 425</a> tracks that feature. </p>\n"}], "owner": {"reputation": 14787, "user_id": 139766, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6352d881fa53799e7452d6edb2d1df89?s=128&d=identicon&r=PG", "display_name": "Callum Rogers", "link": "https://stackoverflow.com/users/139766/callum-rogers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 54012018, "answer_count": 1, "score": 0, "last_activity_date": 1546457791, "creation_date": 1546455438, "last_edit_date": 1546457791, "question_id": 54011718, "link": "https://stackoverflow.com/questions/54011718/find-how-many-characters-a-regex-has-looked-at-in-a-string-before-succeeding-fai", "title": "Find how many characters a regex has looked at in a string before succeeding/failing", "body": "<p>I want to see how many characters the regex has looked at before it succeeds or fails (to support incrementally re-lexing something). I haven't noticed a direct way to do this in the <a href=\"https://github.com/rust-lang/regex\" rel=\"nofollow noreferrer\">Rust regex library's</a> API.</p>\n\n<p>If I could somehow intercept the <code>&amp;str</code> I give to library, I could record the furthest character it's had to observe. I'm not sure how to do this, as I am new to Rust. If this were Java, I would use a proxy/implement <code>CharSequence</code>.</p>\n\n<p>Bonus points if it works with <a href=\"https://docs.rs/regex/1.1.0/regex/struct.RegexSet.html\" rel=\"nofollow noreferrer\"><code>RegexSet</code></a>.</p>\n"}, {"tags": ["windows", "rust", "filesystems"], "comments": [{"owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "edited": false, "score": 1, "creation_date": 1547447375, "post_id": 54011526, "comment_id": 95181814, "body": "It seems you have to use <code>winapi</code> crate to achieve it. See <a href=\"https://docs.rs/winapi/0.3.6/winapi/um/fileapi/fn.SetFileAttributesA.html\" rel=\"nofollow noreferrer\">this</a> function and <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-setfileattributesa\" rel=\"nofollow noreferrer\">docs</a> for it"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 269, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1546457908, "creation_date": 1546454436, "last_edit_date": 1546457908, "question_id": 54011526, "link": "https://stackoverflow.com/questions/54011526/how-to-set-the-hidden-attribute-on-a-windows-directory-in-rust", "title": "How to set the hidden attribute on a Windows directory in Rust?", "body": "<p>I see how to create a <em>file</em> with the attribute.   </p>\n\n<pre><code>let file = OpenOptions::new()\n    .write(true)\n    .create(true)\n    .attributes(winapi::FILE_ATTRIBUTE_HIDDEN)\n    .open(\"foo.txt\");\n</code></pre>\n\n<p>I also see that <a href=\"https://doc.rust-lang.org/std/os/windows/fs/trait.MetadataExt.html\" rel=\"nofollow noreferrer\"><code>std::os::windows::fs::MetadataExt</code></a> will return the attribute mask.</p>\n\n<p>However, I'd like to create a directory or set a directory's attribute with the hidden flag. I dug through the <code>fs::</code> and Windows sources and I don't see anything.</p>\n"}, {"tags": ["rust", "parser-combinators", "nom"], "answers": [{"comments": [{"owner": {"reputation": 32271, "user_id": 75652, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/303ee8d24a8776dcf67b30c1d4e8b064?s=128&d=identicon&r=PG", "display_name": "janneb", "link": "https://stackoverflow.com/users/75652/janneb"}, "edited": false, "score": 0, "creation_date": 1546548277, "post_id": 54010039, "comment_id": 94895364, "body": "Thanks, got it to work with this. Or well, I had to use CompleteByteSlice since I&#39;m using bytes rather than strings."}], "tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": true, "score": 2, "last_activity_date": 1546447406, "creation_date": 1546447406, "answer_id": 54010039, "question_id": 54009610, "link": "https://stackoverflow.com/questions/54009610/how-to-gobble-a-string-until-a-delimiter-or-the-end-with-rust-nom/54010039#54010039", "title": "How to gobble a string until a delimiter or the end with rust/nom", "body": "<p>You can do this with the <code>take_while!</code> macro. This code:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse nom::types::CompleteStr\n\nnamed!(gobbledygook&lt;CompleteStr, CompleteStr&gt;,\n    take_while!(|ch| ch != '/')\n);\n\nfn main() {\n    println!(\"1: {}\", gobbledygook(CompleteStr(\"foo/bar\")).unwrap().1);\n    println!(\"2: {}\", gobbledygook(CompleteStr(\"foo\")).unwrap().1);\n}\n</code></pre>\n\n<p>prints:</p>\n\n<pre><code>1: foo\n2: foo\n</code></pre>\n\n<p>Note that you need to use <code>CompleteStr</code> to tell nom that <code>foo</code> is the full string (ie. there is no risk the full string is actually <code>foofoo/bar</code> in which cas the returned value would be different). See this document for details about <code>CompleteStr</code>: <a href=\"https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_4.md#dealing-with-incomplete-usage\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_4.md#dealing-with-incomplete-usage</a></p>\n"}], "owner": {"reputation": 32271, "user_id": 75652, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/303ee8d24a8776dcf67b30c1d4e8b064?s=128&d=identicon&r=PG", "display_name": "janneb", "link": "https://stackoverflow.com/users/75652/janneb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 754, "favorite_count": 0, "accepted_answer_id": 54010039, "answer_count": 1, "score": 0, "last_activity_date": 1546447406, "creation_date": 1546445624, "question_id": 54009610, "link": "https://stackoverflow.com/questions/54009610/how-to-gobble-a-string-until-a-delimiter-or-the-end-with-rust-nom", "title": "How to gobble a string until a delimiter or the end with rust/nom", "body": "<p>I'm learning nom, and as a test example I'm trying to parse a string until a delimiter. If my delimiter is, say, <code>/</code>, then I want to match everything until that delimiter. For that, a parser like</p>\n\n<pre><code>named!(gobbledygook, take_until!(\"/\"));\n</code></pre>\n\n<p>works. But I also want to match a string that ends before that delimiter. So I want both <code>foo/bar</code> and <code>foo</code> to return \"foo\". I can't seem to find anything suitable in the list at <a href=\"https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md</a> .</p>\n\n<p>I guess it would be possible to scan for either the delimiter or the end of the string, but it seems this is such a common case that there should be something obvious that I'm missing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1546439469, "post_id": 54008023, "comment_id": 94852789, "body": "<code>return</code> will raise the returned value to the function&#39;s return, not to the matched expression."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546445849, "post_id": 54009621, "comment_id": 94856025, "body": "May I advise <code>expect</code> instead of <code>unwrap</code>? Doesn&#39;t change the semantics, but it&#39;s nice to have a reason..."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546445957, "post_id": 54009621, "comment_id": 94856070, "body": "@MatthieuM. I tried to match the semantics of the original code, but fair enough, edited the answer."}, {"owner": {"reputation": 129, "user_id": 8647757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfd8bd7e051c26adc67e55756dd10ae4?s=128&d=identicon&r=PG&f=1", "display_name": "Macelaru Tiberiu", "link": "https://stackoverflow.com/users/8647757/macelaru-tiberiu"}, "edited": false, "score": 0, "creation_date": 1546448398, "post_id": 54009621, "comment_id": 94857272, "body": "The former gives &quot;temporary value dropped while borrowed&quot; so I will use the latter one"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 129, "user_id": 8647757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfd8bd7e051c26adc67e55756dd10ae4?s=128&d=identicon&r=PG&f=1", "display_name": "Macelaru Tiberiu", "link": "https://stackoverflow.com/users/8647757/macelaru-tiberiu"}, "edited": false, "score": 2, "creation_date": 1546456526, "post_id": 54009621, "comment_id": 94860558, "body": "@MacelaruTiberiu I don&#39;t have an explanation why you see that error, but I don&#39;t know your full code and the prototype of the <code>enumerate_instances()</code> function, so I can&#39;t really know what&#39;s going on there."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1546515196, "last_edit_date": 1546515196, "creation_date": 1546445665, "answer_id": 54009621, "question_id": 54008023, "link": "https://stackoverflow.com/questions/54008023/how-do-i-return-from-an-expresion/54009621#54009621", "title": "How do I &quot;return&quot; from an expresion?", "body": "<p>You probably want</p>\n\n<pre><code>let adapter = instance\n    .enumerate_adapters()\n    .into_iter()\n    .find(|adapter| adapter.info.device_type == DeviceType::DiscreteGpu)\n    .expect(\"no discrete GPU adapter found\");\n</code></pre>\n\n<p>As for your actual question, if you want to exit a for loop early without returning from the function, you need to use <code>break</code>:</p>\n\n<pre><code>let adapter = {\n    let adapters = instance.enumerate_adapters();\n    let mut found = None;\n    for adapter in adapters {\n        if adapter.info.device_type == DeviceType::DiscreteGpu {           \n            found = Some(adapter);\n            break;\n        }\n    }\n    found\n};\n</code></pre>\n"}], "owner": {"reputation": 129, "user_id": 8647757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfd8bd7e051c26adc67e55756dd10ae4?s=128&d=identicon&r=PG&f=1", "display_name": "Macelaru Tiberiu", "link": "https://stackoverflow.com/users/8647757/macelaru-tiberiu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 54009621, "answer_count": 1, "score": 0, "last_activity_date": 1546515196, "creation_date": 1546439014, "last_edit_date": 1546456969, "question_id": 54008023, "link": "https://stackoverflow.com/questions/54008023/how-do-i-return-from-an-expresion", "title": "How do I &quot;return&quot; from an expresion?", "body": "<p>This function works well: when it finds an adapter it stops and returns.</p>\n\n<pre><code>fn choose_adapter(instance: vk::Instance) -&gt; Option&lt;Adapter&lt;vk::Backend&gt;&gt; {\n    let adapters = instance.enumerate_adapters();\n\n    for adapter in adapters {\n        if adapter.info.device_type == DeviceType::DiscreteGpu {\n            return Some(adapter);\n        }\n    }\n    return None;\n}\n</code></pre>\n\n<p>The following modification doesn't compile. Adding <code>;</code> to <code>Some(adapter)</code> makes it fall through and always evaluate to <code>None</code>.</p>\n\n<pre><code>let adapter = match {\n    let adapters = instance.enumerate_adapters();\n\n    for adapter in adapters {\n        if adapter.info.device_type == DeviceType::DiscreteGpu {\n            Some(adapter)\n        }\n    }\n    None\n} {\n    Some(val) =&gt; val,\n    None =&gt; panic!(\"\"),\n};\n</code></pre>\n\n<p>How can I make the latter expression work like the function?</p>\n"}, {"tags": ["rust", "mime", "iron"], "comments": [{"owner": {"reputation": 5385, "user_id": 936494, "user_type": "registered", "accept_rate": 34, "profile_image": "https://i.stack.imgur.com/TCqih.jpg?s=128&g=1", "display_name": "Jignesh Gohel", "link": "https://stackoverflow.com/users/936494/jignesh-gohel"}, "edited": false, "score": 0, "creation_date": 1546440287, "post_id": 54007531, "comment_id": 94853184, "body": "An update: I switched <code>mime</code> to <code>0.2.3</code> and used the macro <code>mime!</code> as shown above under <b>Note</b> and the code compiled successfully. So I guess there is some compatibility issue between <code>iron 0.6.0</code> and <code>mime 0.3.12</code>."}], "answers": [{"comments": [{"owner": {"reputation": 5385, "user_id": 936494, "user_type": "registered", "accept_rate": 34, "profile_image": "https://i.stack.imgur.com/TCqih.jpg?s=128&g=1", "display_name": "Jignesh Gohel", "link": "https://stackoverflow.com/users/936494/jignesh-gohel"}, "edited": false, "score": 0, "creation_date": 1549549965, "post_id": 54564160, "comment_id": 95948848, "body": "That looks too much to set just a mime type. I hope the crate authors resolves the compatibility issue and also facilitate a concise way to do this like it is the case with older version. Thanks."}, {"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "reply_to_user": {"reputation": 5385, "user_id": 936494, "user_type": "registered", "accept_rate": 34, "profile_image": "https://i.stack.imgur.com/TCqih.jpg?s=128&g=1", "display_name": "Jignesh Gohel", "link": "https://stackoverflow.com/users/936494/jignesh-gohel"}, "edited": false, "score": 1, "creation_date": 1549551122, "post_id": 54564160, "comment_id": 95949575, "body": "I&#39;m not sure it&#39;s too much, you can even squash it to: <code>response.set_mut(&quot;text&#47;html; charset=utf-8&quot;.parse::&lt;Mime&gt;().unwrap());</code>. I suppose it&#39;s a matter of taste."}, {"owner": {"reputation": 176, "user_id": 3824335, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ae0922692fa4a70eb89c910e8442a00c?s=128&d=identicon&r=PG&f=1", "display_name": "user2319066", "link": "https://stackoverflow.com/users/3824335/user2319066"}, "edited": false, "score": 0, "creation_date": 1579686102, "post_id": 54564160, "comment_id": 105845300, "body": "@Le\u015bnyRumcajs Yes, you can use it. Just verified. But you need to use <code>iron::mime::Mime</code>, if not, you get an error message <b>error[E0412]: cannot find type Mime in this scope</b>. Also whole line should be <code>response.set_mut(&quot;text&#47;html; charset=utf-8&quot;.parse::&lt;iron::mime::Mime&gt;().unwrap());</code>."}], "tags": [], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "is_accepted": false, "score": 2, "last_activity_date": 1549552151, "last_edit_date": 1549552151, "creation_date": 1549495795, "answer_id": 54564160, "question_id": 54007531, "link": "https://stackoverflow.com/questions/54007531/ironmodifierresponse-is-not-implemented-while-trying-to-set-content-type-o/54564160#54564160", "title": "&quot;iron::Modifier&lt;Response&gt; is not implemented&quot; while trying to set content-type on response using iron and mime", "body": "<p>As you've noticed, newest versions of <em>mime</em> and <em>iron</em> are not compatible with the example code from the book. The <a href=\"https://github.com/ProgrammingRust/examples/issues/2\" rel=\"nofollow noreferrer\">issue was raised on the official book's repository</a>.</p>\n\n<p>You could use the old <em>mime</em> crate, but in the long run it would be best to use <em>mime</em> from the <em>iron</em> crate <a href=\"https://insanitybit.github.io/Cricket/iron/headers/struct.ContentType.html\" rel=\"nofollow noreferrer\">as explained in the docs</a>.</p>\n\n<p>For <em>iron</em> 0.6.0 you can replace the faulty line:</p>\n\n<pre><code>response.set_mut(mime::TEXT_HTML_UTF_8);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>response.set_mut(mime!(Text/Html; Charset=Utf8));\n</code></pre>\n\n<p>with one of the following:</p>\n\n<pre><code>response.headers.set(iron::headers::ContentType(\"text/html; charset=utf-8\".parse::&lt;iron::mime::Mime&gt;().unwrap()));\n</code></pre>\n\n<p>or</p>\n\n<pre><code>response.headers.set(iron::headers::ContentType(\n    iron::mime::Mime(\n        iron::mime::TopLevel::Text,\n        iron::mime::SubLevel::Html,\n            vec![(iron::mime::Attr::Charset, iron::mime::Value::Utf8)])\n    )\n);\n</code></pre>\n"}], "owner": {"reputation": 5385, "user_id": 936494, "user_type": "registered", "accept_rate": 34, "profile_image": "https://i.stack.imgur.com/TCqih.jpg?s=128&g=1", "display_name": "Jignesh Gohel", "link": "https://stackoverflow.com/users/936494/jignesh-gohel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1549552258, "creation_date": 1546437021, "last_edit_date": 1549552258, "question_id": 54007531, "link": "https://stackoverflow.com/questions/54007531/ironmodifierresponse-is-not-implemented-while-trying-to-set-content-type-o", "title": "&quot;iron::Modifier&lt;Response&gt; is not implemented&quot; while trying to set content-type on response using iron and mime", "body": "<p>I am trying to run the examples from the book <em>Programming Rust</em> published by O'Reilly and I am stuck at making the following code compile successfully:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"gcd-online\"\nversion = \"0.1.0\"\nauthors = [\"Jignesh Gohel &lt;abc@example.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\niron = \"0.6.0\"\nmime = \"0.3.12\"\nrouter = \"0.6.0\"\nurlencoded = \"0.6.0\"\n</code></pre>\n\n<p><strong>/src/main.rs</strong></p>\n\n<pre><code>extern crate iron;\nextern crate mime;\n\nuse iron::prelude::*;\nuse iron::status;\n\nfn main() {\n    println!(\"Serving on http://localhost:3000...\");\n    Iron::new(get_form).http(\"localhost:3000\").unwrap();\n}\n\n\nfn get_form(_request: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let mut response = Response::new();\n\n    response.set_mut(status::Ok);\n    response.set_mut(mime::TEXT_HTML_UTF_8);\n    response.set_mut(r#\"\n        &lt;title&gt;GCD Calculator&lt;/title&gt;\n        &lt;form action=\"/gcd\" method=\"post\"&gt;\n            &lt;input type=\"text\" name=\"n\" /&gt;\n            &lt;input type=\"text\" name=\"m\" /&gt;\n            &lt;button type=\"submit\"&gt;Compute GCD&lt;/button&gt;\n        &lt;/form&gt;\n    \"#);\n\n    Ok(response)\n}\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling gcd-online v0.1.0 (~/oreilly-programming-rust-book-examples/chapter-1/gcd-online)                                                          \nerror[E0277]: the trait bound `mime::Mime: iron::modifier::Modifier&lt;iron::Response&gt;` is not satisfied                                                                           \n  --&gt; src/main.rs:17:14                                                                                                                                                         \n   |                                                                                                                                                                            \n17 |     response.set_mut(mime::TEXT_HTML_UTF_8);                                                                                                                               \n   |              ^^^^^^^ the trait `iron::modifier::Modifier&lt;iron::Response&gt;` is not implemented for `mime::Mime`\n</code></pre>\n\n<p>My <strong>Cargo.toml</strong> uses latest version of dependencies, however book author uses following versions</p>\n\n<pre><code>[dependencies]\niron = \"0.5.1\"\nmime = \"0.2.3\"\nrouter = \"0.5.1\"\nurlencoded = \"0.5.0\"\n</code></pre>\n\n<p>and as part of which author used following code</p>\n\n<pre><code>#[macro_use] extern crate mime;\n\nfn get_form(_request: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let mut response = Response::new();\n\n    response.set_mut(mime!(Text/Html; Charset=Utf8));\n\n    Ok(response)\n}\n</code></pre>\n\n<p>I think the difference in versions is what is causing the compilation error. </p>\n\n<p>I tried to go through the docs of the <a href=\"https://docs.rs/iron/0.6.0/iron/\" rel=\"nofollow noreferrer\">iron</a> and <a href=\"https://docs.rs/crate/mime/0.3.12\" rel=\"nofollow noreferrer\">mime</a> crates but I couldn't figure out how to get past this error.</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1546446109, "post_id": 54007235, "comment_id": 94856138, "body": "You could use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or\" rel=\"nofollow noreferrer\"><code>map_or</code></a> on <code>boo.field</code> instead of <code>match</code>: <code>boo.field.map_or(false, |name| name.starts_with(&quot;boo&quot;) || name.starts_with(&quot;moo&quot;))</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546447071, "post_id": 54007235, "comment_id": 94856602, "body": "@MatthieuM. Indeed. And now it is reduced to one line and can be used easily in the main guard. In the auxiliary function I need to add <code>as_ref()</code> (<code>boo.field.as_ref().map_or(...)</code>), as I would expect it, but curiously in the match guard it works without it. Maybe because of the <code>match</code> ergonomics?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546447118, "post_id": 54007235, "comment_id": 94856633, "body": "Yeah, I am not sure why the <code>as_ref</code> is needed only in the function :/"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546447183, "post_id": 54007235, "comment_id": 94856667, "body": "@MatthieuM. And the same in your answer, I would expect the <code>unwrap()</code> to try and consume the <code>field</code> and fail because it is borrowed, but it just works..."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546448149, "post_id": 54007235, "comment_id": 94857151, "body": "@MatthieuM. I think I got why you don&#39;t need <code>as_ref()</code> in the <code>match</code> even though <code>boo</code> is borrowed: it is because of the <code>let foo: Foo = unimplemented!();</code>, the compiler sees that the <code>match</code> will never be executed and the borrow checked goes into <code>everything goes</code> mode. Replacing that line with <code>let foo: Foo = Foo::Boo(Boo { field: Some(&quot;x&quot;.to_string()) });</code> fails as expected."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 3, "last_activity_date": 1546447451, "last_edit_date": 1546447451, "creation_date": 1546435704, "answer_id": 54007235, "question_id": 54007032, "link": "https://stackoverflow.com/questions/54007032/how-do-i-get-a-reference-to-a-destructured-structure-or-fall-through/54007235#54007235", "title": "How do I get a reference to a destructured structure or fall through?", "body": "<p>My workaround for these cases is to write an auxiliary function to implement the guard. That way you can capture <code>boo</code> without destructuring and still use the match guard:</p>\n\n<pre><code>fn main() {\n    let foo: Foo = unimplemented!();\n\n    fn is_my_boo(boo: &amp;Boo) -&gt; bool {\n        match boo.field {\n            Some(ref name) =&gt; name.starts_with(\"boo\") || name.starts_with(\"moo\"),\n            None =&gt; false\n        }\n    }\n\n    match foo {\n        Foo::Boo(ref boo) if is_my_boo(boo) =&gt; {\n            //you can reference boo here\n            unimplemented!();\n        }\n        _ =&gt; unimplemented!(),\n    }\n}\n</code></pre>\n\n<p>You could also write the auxiliary function as a closure if you like, but for pure functions I prefer the <code>fn</code> syntax.</p>\n\n<p>If you feel that local functions are ugly, you could try and mash up the whole function body in the guard, with mandatory extra parenthesis:</p>\n\n<pre><code>fn main() {\n    let foo: Foo = unimplemented!();\n\n    match foo {\n        Foo::Boo(ref boo) if {\n                match boo.field {\n                    Some(ref name) =&gt; name.starts_with(\"boo\") || name.starts_with(\"moo\"),\n                    None =&gt; false\n                }\n            } =&gt; {\n            //you can reference boo here\n            unimplemented!();\n        }\n        _ =&gt; unimplemented!(),\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1546446964, "creation_date": 1546446964, "answer_id": 54009929, "question_id": 54007032, "link": "https://stackoverflow.com/questions/54007032/how-do-i-get-a-reference-to-a-destructured-structure-or-fall-through/54009929#54009929", "title": "How do I get a reference to a destructured structure or fall through?", "body": "<p>There is a <strong>Binding</strong> syntax in pattern matches, unfortunately it's not allowed to bind inside a binding...</p>\n\n<p>A guard + binding can be helpful as it allows matching <em>other</em> fields in <code>Boo</code>, while having a limited guard:</p>\n\n<pre><code>fn has_expected_name(name: &amp;str) -&gt; bool {\n    name.starts_with(\"boo\") || name.starts_with(\"moo\")\n}\n\nmatch foo {\n    Foo::Boo(ref boo @ Boo { field: Some(_) })\n        if has_expected_name(boo.field.as_ref().unwrap()) =&gt;\n    {\n        unimplemented!(\"{:?}\", boo);\n    }\n    _ =&gt; unimplemented!(),\n}\n</code></pre>\n\n<p>This makes it clear, even if the definition of <code>has_expected_name</code> is a bit far away, that it only accesses <code>boo.field</code>, and nothing else.</p>\n\n<hr>\n\n<p>It's also possible to just use the binding:</p>\n\n<pre><code>match foo {\n    Foo::Boo(ref boo @ Boo {\n        field: Some(_),\n    }) if boo.field.unwrap().starts_with(\"moo\") || boo.field.unwrap().starts_with(\"boo\") =&gt; {\n        unimplemented!(\"{:?}\", boo);\n    }\n    _ =&gt; unimplemented!(),\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 54009929, "answer_count": 2, "score": 2, "last_activity_date": 1546458167, "creation_date": 1546434861, "last_edit_date": 1546458167, "question_id": 54007032, "link": "https://stackoverflow.com/questions/54007032/how-do-i-get-a-reference-to-a-destructured-structure-or-fall-through", "title": "How do I get a reference to a destructured structure or fall through?", "body": "<p>I have <code>struct Boo</code> inside an <code>enum Foo</code>. I use a <code>match</code> that checks different variants. To jump to one of the variants, I need to destructure <code>Boo</code>, but after I jump to it I need a reference to it:</p>\n\n<pre><code>enum Foo {\n    Boo(Boo),\n    //other variants\n}\n\nstruct Boo {\n    field: Option&lt;String&gt;,\n    //other fields\n}\n\nfn main() {\n    let foo: Foo = unimplemented!();\n\n    match foo {\n        Foo::Boo(Boo {\n            field: Some(ref name),\n        }) if name.starts_with(\"moo\") || name.starts_with(\"boo\") =&gt; {\n            // I need a reference to boo here\n            unimplemented!();\n        }\n        _ =&gt; unimplemented!(),\n    }\n}\n</code></pre>\n\n<p>Note that in the code hidden by <code>_ =&gt; unimplemented!()</code>, I also check the <code>Foo::Boo</code> variant with another <code>name.starts_with</code> and without an <code>if</code>.</p>\n\n<p>Is this possible? If it is impossible, maybe it's possible to return control to the <code>match</code> checking code path after test failure? Is there another workaround?</p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546432052, "post_id": 54006221, "comment_id": 94849206, "body": "I don&#39;t understand, this is just json, why not use serde_json ? And then just parse <code>tags</code> field <i>after</i> with whatever you like. serde is not mean to be a parser."}, {"owner": {"reputation": 43, "user_id": 5896191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f3cf0a694aca0b3b5adb1b4ca2a99e0?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian", "link": "https://stackoverflow.com/users/5896191/fabian"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546433904, "post_id": 54006221, "comment_id": 94850126, "body": "@Stargateur Yes, this is also my backup plan if this does not work directly with serde. However, I would like to have a more <i>elegant</i> solution especially because I already basically did the same vice-versa for my output data and there I got it working."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 5896191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f3cf0a694aca0b3b5adb1b4ca2a99e0?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian", "link": "https://stackoverflow.com/users/5896191/fabian"}, "edited": false, "score": 0, "creation_date": 1546444684, "post_id": 54008190, "comment_id": 94855423, "body": "Thank you @attdona . Your solution works great :D  The only thing left was that I was at first not sure which error to return when deserializing does not work but I found out that <code>return Err(serde::de::Error::custom(&quot;Custom error string&quot;));</code> is sufficient for me."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 1, "last_activity_date": 1546459821, "last_edit_date": 1546459821, "creation_date": 1546439691, "answer_id": 54008190, "question_id": 54006221, "link": "https://stackoverflow.com/questions/54006221/how-can-i-deserialize-a-comma-separated-json-string-as-a-vector-of-separate-stri/54008190#54008190", "title": "How can I deserialize a comma-separated JSON string as a vector of separate strings?", "body": "<p>A workaround is to deserialize the string sequence \"tag1,tag2,tag3\" as a <code>String</code> value and then convert it to a <code>Vec</code> of strings, for example: </p>\n\n<pre><code>fn tags_deserialize&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Vec&lt;String&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let str_sequence = String::deserialize(deserializer)?;\n    Ok(str_sequence\n        .split(',')\n        .map(|item| item.to_owned())\n        .collect())\n}\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 5896191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f3cf0a694aca0b3b5adb1b4ca2a99e0?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian", "link": "https://stackoverflow.com/users/5896191/fabian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 869, "favorite_count": 0, "closed_date": 1546459771, "accepted_answer_id": 54008190, "answer_count": 1, "score": 2, "last_activity_date": 1546459821, "creation_date": 1546431368, "last_edit_date": 1546459749, "question_id": 54006221, "link": "https://stackoverflow.com/questions/54006221/how-can-i-deserialize-a-comma-separated-json-string-as-a-vector-of-separate-stri", "closed_reason": "Duplicate", "title": "How can I deserialize a comma-separated JSON string as a vector of separate strings?", "body": "<p>I would like to deserialize my incoming data from Rocket with Serde with my own deserializer for one field. The <code>tags</code> field is originally a string and should be deserialized into a <code>Vec&lt;String&gt;</code>. The format of the string is more-or-less comma-separated values with a special treatment of some characters.</p>\n\n<p>The documentation of Serde is completely unclear for me how to treat that case. The basic structure of <code>tags_deserialize</code> I just copied from the <a href=\"https://serde.rs/variant-attrs.html#deserialize_with\" rel=\"nofollow noreferrer\">documentation</a>.</p>\n\n<p>Currently my code is as follows:</p>\n\n<pre><code>#[derive(Deserialize)]\n#[serde(deny_unknown_fields)]\npub struct TaskDataJson {\n    pub name: String,\n    pub description: String,\n    #[serde(deserialize_with = \"tags_deserialize\")]\n    pub tags: Vec&lt;String&gt;\n}\n\nfn tags_deserialize&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Vec&lt;String&gt;, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n{\n    ??? - How do I access the string coming from the response and how do I set it??\n}\n</code></pre>\n\n<p>A sample of incoming data is:</p>\n\n<pre><code>{\n    \"name\":\"name_sample\",\n    \"description\":\"description_sample\",\n    \"tags\":\"tag1,tag2,tag5\"\n}\n</code></pre>\n\n<p>where this should lead to:</p>\n\n<pre><code>name = \"name_sample\";\ndescription = \"description_sample\"\ntags = [\"tag1\", \"tag2\", \"tag5\"]\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1546417687, "post_id": 54002743, "comment_id": 94843107, "body": "<i>&quot;you could return a Cow, but that complicates usage of the method&quot;</i> : Isn&#39;t that the perfect use case for a <code>Cow</code> ? Your comment makes it look like it&#39;s not the best solution here and I fear it might be badly interpreted."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1546423295, "post_id": 54002743, "comment_id": 94845368, "body": "The perfect use case for <code>Cow</code> is when the efficiency gain is worth the usability loss. Since I don&#39;t know what the use case is, I can&#39;t say what the best way is. But I could formulate the post in a more neutral manner."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546423722, "post_id": 54002743, "comment_id": 94845538, "body": "I don&#39;t understand what you mean by usability loss, Cow has been design to be a user friendly tool. Also in my opinion the most important is that cow feature have a overheat, people often forget that, small I agree, but always keep in mind that some feature doesn&#39;t come for free. (but that a free abstraction ofc)"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1546424085, "post_id": 54002743, "comment_id": 94845704, "body": "I&#39;ve rewritten the post to be more balanced. The usability loss comes from having a wrapper. Yes, deref coercion means that many usages are the same, but under some circumstances, the user actually has to understand what having a cow means."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 10, "last_activity_date": 1546456714, "last_edit_date": 1546456714, "creation_date": 1546414395, "answer_id": 54002743, "question_id": 54002638, "link": "https://stackoverflow.com/questions/54002638/what-should-the-return-type-be-for-a-method-that-returns-str-or-new-string-with/54002743#54002743", "title": "What should the return type be for a method that returns &amp;str or new string with the lifetime of the parent?", "body": "<p>There are three ways you can implement this, with different trade-offs.</p>\n\n<h1>Return an owned string</h1>\n\n<p>You return <code>String</code> and use <code>self.title.clone()</code>.</p>\n\n<ul>\n<li>Pros: Simple.  </li>\n<li>Cons: Allocates a new string on every call, even in the simple case.</li>\n</ul>\n\n<p>Use when you have no reason to think that this might become a performance issue, and you want the simplicity of simply returning <code>String</code>.</p>\n\n<h1>Store the id in the struct</h1>\n\n<p>Build it in the constructor function. (Building it on-demand is also possible, but incurs complicated lifetime issues.) Return a <code>&amp;str</code>. There is hardly ever a good reason to use <code>&amp;String</code>.</p>\n\n<ul>\n<li>Pros: Very cheap call.  </li>\n<li>Cons: Need to store the id. Need to keep it up-to-date when the <code>title</code> or <code>page_num</code> fields change.</li>\n</ul>\n\n<p>Use if accessed <em>very</em> frequently.</p>\n\n<h1>Return a <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a></h1>\n\n<p>This type is capable of representing either a borrowed or an owned thing, and via deref coercion acts like the borrowed thing in usage.</p>\n\n<pre><code>fn id(&amp;self) -&gt; Cow&lt;str&gt; {\n    match self.ty {\n        PageType::Type1 =&gt; Cow::Owned(format!(\"{}-{}\", self.title, self.page_num)),\n        PageType::Type2 =&gt; Cow::Borrowed(&amp;self.title),\n    }\n}\n</code></pre>\n\n<ul>\n<li>Pros: Efficient in the simple case. Doesn't increase struct size. Doesn't need complicated code to maintain the id.  </li>\n<li>Cons: The usage is slightly more complicated, depending on what the user does with the result. Still allocates a new string in the complex case.</li>\n</ul>\n\n<p>This makes a good default to use, unless you really want to keep the API as simple as possible.</p>\n"}], "owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1546587369, "creation_date": 1546413677, "last_edit_date": 1546587369, "question_id": 54002638, "link": "https://stackoverflow.com/questions/54002638/what-should-the-return-type-be-for-a-method-that-returns-str-or-new-string-with", "title": "What should the return type be for a method that returns &amp;str or new string with the lifetime of the parent?", "body": "<p>I want to create an <code>id</code> method which either returns an id, which is a struct attribute, or a new string.</p>\n\n<p>What should be my return type? <code>&amp;str</code> for returning a struct attribute <code>self.title</code>, but then what is the return type of a new string with lifetime of the calling scope?</p>\n\n<pre><code>fn id(&amp;self) -&gt; &amp;str {\n    match self.type {\n        PageType::Type1 =&gt; format!(\"{}-{}\", self.title, self.page_num),\n        PageType::Type2 =&gt; &amp;self.title,\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 5056, "user_id": 4276090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/r87tb.jpg?s=128&g=1", "display_name": "Skam", "link": "https://stackoverflow.com/users/4276090/skam"}, "edited": false, "score": 0, "creation_date": 1546406178, "post_id": 54001208, "comment_id": 94839840, "body": "why are you trying to print the vector?"}, {"owner": {"reputation": 324, "user_id": 9163282, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qWl426BCFtI/AAAAAAAAAAI/AAAAAAAAAAs/tg3jyXbxcPE/photo.jpg?sz=128", "display_name": "fekky Dev", "link": "https://stackoverflow.com/users/9163282/fekky-dev"}, "reply_to_user": {"reputation": 5056, "user_id": 4276090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/r87tb.jpg?s=128&g=1", "display_name": "Skam", "link": "https://stackoverflow.com/users/4276090/skam"}, "edited": false, "score": 0, "creation_date": 1546406860, "post_id": 54001208, "comment_id": 94839983, "body": "just for curious, but seems not working but  when i use for _item in vector.iter() can able to get reference of vector."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546409037, "post_id": 54001208, "comment_id": 94840522, "body": "your code don&#39;t make much sense"}], "owner": {"reputation": 324, "user_id": 9163282, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qWl426BCFtI/AAAAAAAAAAI/AAAAAAAAAAs/tg3jyXbxcPE/photo.jpg?sz=128", "display_name": "fekky Dev", "link": "https://stackoverflow.com/users/9163282/fekky-dev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 123, "favorite_count": 0, "closed_date": 1546414227, "answer_count": 0, "score": 0, "last_activity_date": 1546410282, "creation_date": 1546403391, "last_edit_date": 1546410282, "question_id": 54001208, "link": "https://stackoverflow.com/questions/54001208/how-to-fix-borrowed-issue-in-the-rust-programming", "closed_reason": "Duplicate", "title": "How to fix &quot;borrowed&quot; issue in the RUST programming?", "body": "<p>I'm trying to iterate over a vector in Rust. I am able to print the all the values, but when I take a reference of the vector inside the for loop I'm getting a \"<em>value borrowed here after move</em>\" error.</p>\n\n<p>Can anyone please explain to me the ownership concept using below code?   </p>\n\n<pre><code>fn main() {\n    let vector = vec![1,2,3,5];\n    for _item in vector{\n        //println!(\"item{:?}\",_item);\n        println!(\"item{:?}\",vector);\n    }\n}\n\nerror[E0382]: borrow of moved value: `vector`\n --&gt; src/main.rs:7:29\n  |\n5 |     for _item in vector{\n  |                  ------ value moved here\n6 |         //println!(\"item{:?}\",_item);\n7 |         println!(\"item{:?}\",vector);\n  |                             ^^^^^^ value borrowed here after move\n  |\n  = note: move occurs because `vector` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n</code></pre>\n"}, {"tags": ["rust", "out-of-memory", "rust-piston"], "answers": [{"comments": [{"owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "edited": false, "score": 0, "creation_date": 1546449365, "post_id": 54000795, "comment_id": 94857685, "body": "Thanks - I was pointed to the same conclusion and posted it at about the same time."}], "tags": [], "owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "is_accepted": false, "score": 2, "last_activity_date": 1546449387, "last_edit_date": 1546449387, "creation_date": 1546398529, "answer_id": 54000795, "question_id": 54000664, "link": "https://stackoverflow.com/questions/54000664/piston-application-crashes-after-a-few-minutes-with-a-memory-allocation-error/54000795#54000795", "title": "Piston application crashes after a few minutes with a memory allocation error", "body": "<p>That's about an 8 GB allocation it's doing; way too large to be reasonable. 8 GB is probably related to your system RAM. One half, equal or double to it, depending on your system setup.</p>\n\n<p>The problem has to be in the loop and it has to be small. The loop isn't very big, is it? Which is the nice thing about small examples. It looks like it was the event code. I have no idea why.</p>\n\n<p>Here's a version that does not appear to have a memory leak:</p>\n\n<pre><code>extern crate graphics;\nextern crate opengl_graphics;\nextern crate piston;\nextern crate piston_window;\n\nuse opengl_graphics::OpenGL;\nuse piston::event_loop::*;\nuse piston::input::*;\nuse piston_window::{PistonWindow, WindowSettings};\n\nconst BLACK: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\nconst WHITE: [f32; 4] = [1.0, 1.0, 1.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n\n    let mut window: PistonWindow = WindowSettings::new(\"maze\", [800, 600])\n        .opengl(opengl)\n        .exit_on_esc(true)\n        .build()\n        .unwrap();\n\n    while let Some(event) = window.next() {\n        window.draw_2d(&amp;event, |c, gl| {\n            graphics::clear(BLACK, gl);\n\n            for _row in 0..72 {\n                for _col in 0..120 {\n                    let color = WHITE;\n                    let box_rect =\n                        graphics::rectangle::rectangle_by_corners(0.0, 0.0, 10.0, 10.0);\n                    graphics::rectangle(color, box_rect, c.transform, gl);\n                }\n            }\n        });\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1546449458, "post_id": 54010483, "comment_id": 94857725, "body": "See also <a href=\"https://github.com/PistonDevelopers/piston/issues/1174\" rel=\"nofollow noreferrer\">Piston issue #1174</a>. This is... pretty sloppy and embarrassing for their project it seems."}], "tags": [], "owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "is_accepted": true, "score": 5, "last_activity_date": 1546449249, "creation_date": 1546449249, "answer_id": 54010483, "question_id": 54000664, "link": "https://stackoverflow.com/questions/54000664/piston-application-crashes-after-a-few-minutes-with-a-memory-allocation-error/54010483#54010483", "title": "Piston application crashes after a few minutes with a memory allocation error", "body": "<p>The problem is located here:</p>\n\n<pre><code>let mut events = Events::new(EventSettings::new());\n\nwhile let Some(event) = events.next(&amp;mut window) {\n</code></pre>\n\n<p>Instead, one should use this:</p>\n\n<pre><code>while let Some(event) = window.next() {\n</code></pre>\n\n<p>It turns out that <code>window.next()</code> runs some cleanup steps that <code>events.next(&amp;mut window)</code> omits, and these cleanup steps free the relevant memory. As far as I can tell, the documentation makes no mention of this, and the examples use both patterns without indicating the difference.</p>\n\n<p>This cleanup is mentioned <a href=\"https://docs.piston.rs/piston_window/src/piston_window/lib.rs.html#281-288\" rel=\"noreferrer\">in the comments here</a>, as was pointed out by <a href=\"https://www.reddit.com/r/rust/comments/abq8vz/memory_allocation_crash_in_piston/ed2oeln\" rel=\"noreferrer\">Tiriosaurus on reddit</a>.</p>\n"}], "owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "accepted_answer_id": 54010483, "answer_count": 2, "score": 1, "last_activity_date": 1546449387, "creation_date": 1546397177, "last_edit_date": 1546447124, "question_id": 54000664, "link": "https://stackoverflow.com/questions/54000664/piston-application-crashes-after-a-few-minutes-with-a-memory-allocation-error", "title": "Piston application crashes after a few minutes with a memory allocation error", "body": "<p>I've developed a maze game using Piston in Rust in order to teach myself graphics/UI programming. The game mostly works fine, but when I run it with a large maze (e.g. 120 x 72 rectangles), the game crashes with a memory allocation error after a couple minutes.</p>\n\n<p>A reduced example is as follows:</p>\n\n<pre><code>extern crate graphics;\nextern crate opengl_graphics;\nextern crate piston;\nextern crate piston_window;\n\nuse opengl_graphics::OpenGL;\nuse piston::event_loop::*;\nuse piston::input::*;\nuse piston_window::{PistonWindow, WindowSettings};\n\nconst BLACK: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\nconst WHITE: [f32; 4] = [1.0, 1.0, 1.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n\n    let mut window: PistonWindow = WindowSettings::new(\"maze\", [800, 600])\n        .opengl(opengl)\n        .exit_on_esc(true)\n        .build()\n        .unwrap();\n\n    let mut events = Events::new(EventSettings::new());\n\n    while let Some(event) = events.next(&amp;mut window) {\n        if let Some(_args) = event.render_args() {\n            window.draw_2d(&amp;event, |c, gl| {\n                graphics::clear(BLACK, gl);\n\n                for _row in 0..72 {\n                    for _col in 0..120 {\n                        let color = WHITE;\n                        let box_rect =\n                            graphics::rectangle::rectangle_by_corners(0.0, 0.0, 10.0, 10.0);\n                        graphics::rectangle(color, box_rect, c.transform, gl);\n                    }\n                }\n            });\n        }\n    }\n}\n</code></pre>\n\n<p>When I run this, I get a memory allocation error, followed by a process abort:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time cargo run --release\n   Compiling maze v0.1.0 (/home/isaac/prog/rust/test-maze)\n    Finished release [optimized] target(s) in 5.28s\n     Running `target/release/maze`\nmemory allocation of 7927496704 bytes failedAborted (core dumped)\n\nreal    2m24.317s\nuser    1m29.515s\nsys     0m3.644s\n</code></pre>\n\n<p>Running it in the debugger, I get the following backtrace:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(gdb) backtrace\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\n#1  0x00007ffff71e1801 in __GI_abort () at abort.c:79\n#2  0x0000555555708fc7 in std::sys::unix::abort_internal () at src/libstd/sys/unix/mod.rs:157\n#3  0x000055555570419d in rust_oom () at src/libstd/alloc.rs:211\n#4  0x0000555555717f37 in alloc::alloc::handle_alloc_error () at src/liballoc/alloc.rs:224\n#5  0x00005555556eaf7d in &lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T, I&gt;&gt;::spec_extend ()\n#6  0x00005555556e64aa in &lt;gfx_core::handle::Manager&lt;R&gt;&gt;::extend ()\n#7  0x00005555556da204 in &lt;gfx_device_gl::Device as gfx_core::Device&gt;::pin_submitted_resources ()\n#8  0x000055555559d654 in &lt;gfx::encoder::Encoder&lt;R, C&gt;&gt;::flush ()\n#9  0x000055555558f8af in maze::main ()\n#10 0x000055555558bb73 in std::rt::lang_start::{{closure}} ()\n#11 0x0000555555704913 in std::rt::lang_start_internal::{{closure}} () at src/libstd/rt.rs:49\n#12 std::panicking::try::do_call () at src/libstd/panicking.rs:297\n#13 0x000055555570927a in __rust_maybe_catch_panic () at src/libpanic_unwind/lib.rs:92\n#14 0x0000555555705466 in std::panicking::try () at src/libstd/panicking.rs:276\n#15 std::panic::catch_unwind () at src/libstd/panic.rs:388\n#16 std::rt::lang_start_internal () at src/libstd/rt.rs:48\n#17 0x000055555558fae2 in main ()\n</code></pre>\n\n<p>I am using Ubuntu Linux 18.04.</p>\n\n<p>Should my program be written differently to prevent this problem? Is there something wrong with Piston?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546395265, "post_id": 54000449, "comment_id": 94838005, "body": "<i>since the function needs to be used on variables declared inside functions, it cannot be <code>&#39;static</code>.</i> \u2014 that&#39;s not what <code>&#39;static</code> means in a trait bound. It means that the generic type cannot have any references within it.  You can create a value in the function and move it to a thread just fine. You can also own a value that contains references. See also <a href=\"https://stackoverflow.com/q/48504103/155423\">What does the &#39;static lifetime mean in a trait bound in a Rust future?</a> and linked duplicates."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546395458, "post_id": 54000449, "comment_id": 94838035, "body": "As an aside, your two usages of <code>return</code> are non-idiomatic. Leave them off."}], "owner": {"reputation": 1, "user_id": 10853215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7768fe0e8aa44373affc32327f4471f1?s=128&d=identicon&r=PG&f=1", "display_name": "The Acorn", "link": "https://stackoverflow.com/users/10853215/the-acorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 18, "favorite_count": 0, "closed_date": 1546395186, "answer_count": 0, "score": 0, "last_activity_date": 1546395166, "creation_date": 1546394724, "last_edit_date": 1546395166, "question_id": 54000449, "link": "https://stackoverflow.com/questions/54000449/how-to-specify-lifetime-on-generic-for-thread", "closed_reason": "Duplicate", "title": "How to specify lifetime on generic for thread", "body": "<p>I want to use a generic type in a function that moves a variable of that type to a thread:</p>\n\n<pre><code>use std::thread;\n\nfn ret_x&lt;T: Send&gt;(x: T) -&gt; T {\n    let handle = thread::spawn(move || return x);\n    return handle.join().unwrap();\n}\n</code></pre>\n\n<p>When I do this, it gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n --&gt; src/lib.rs:4:18\n  |\n3 | fn ret_x&lt;T: Send&gt;(x: T) -&gt; T {\n  |          -- help: consider adding an explicit lifetime bound `T: 'static`...\n4 |     let handle = thread::spawn(move || return x);\n  |                  ^^^^^^^^^^^^^\n  |\nnote: ...so that the type `[closure@src/lib.rs:4:32: 4:48 x:T]` will meet its required lifetime bounds\n --&gt; src/lib.rs:4:18\n  |\n4 |     let handle = thread::spawn(move || return x);\n  |                  ^^^^^^^^^^^^^\n\nerror[E0310]: the parameter type `T` may not live long enough\n --&gt; src/lib.rs:4:18\n  |\n3 | fn ret_x&lt;T: Send&gt;(x: T) -&gt; T {\n  |          -- help: consider adding an explicit lifetime bound `T: 'static`...\n4 |     let handle = thread::spawn(move || return x);\n  |                  ^^^^^^^^^^^^^\n  |\nnote: ...so that the type `T` will meet its required lifetime bounds\n --&gt; src/lib.rs:4:18\n  |\n4 |     let handle = thread::spawn(move || return x);\n  |                  ^^^^^^^^^^^^^\n</code></pre>\n\n<p>If I give <code>T</code> a lifetime bound of <code>'static</code>, it compiles without error, but since the function needs to be used on variables declared inside functions, it cannot be <code>'static</code>.</p>\n\n<p><code>T</code> will be owned, not a reference. Is there any way I can specify that, and would it help?</p>\n"}, {"tags": ["string", "rust", "range"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1546385889, "post_id": 53999655, "comment_id": 94836536, "body": "Check the error message. It says more than just test failed."}, {"owner": {"reputation": 21, "user_id": 8440648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/326277921ac06f91bd30262b9817c26b?s=128&d=identicon&r=PG&f=1", "display_name": "BSpirit", "link": "https://stackoverflow.com/users/8440648/bspirit"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1546386171, "post_id": 53999655, "comment_id": 94836571, "body": "You were right, I didn&#39;t check and it helped me understand the issue. It&#39;s &quot;attempt to subtract with overflow&quot; x)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1546388048, "post_id": 53999655, "comment_id": 94836825, "body": "Do <b>not</b> prepend your variable names with an underscore (<code>_</code>). This is an indication that the variable is <i>unused</i>, which is not true for either of yours."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546430981, "post_id": 53999655, "comment_id": 94848720, "body": "As a side note, your code would become a lot easier if you use <code>&amp;[u8]</code> instead of the string types. Your <code>series</code> function would simply become <code>digits.windows(len).collect()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1546387208, "creation_date": 1546387208, "answer_id": 53999887, "question_id": 53999655, "link": "https://stackoverflow.com/questions/53999655/arithmetic-operation-order-issue-with-a-range/53999887#53999887", "title": "Arithmetic operation order issue with a range", "body": "<p>This happens because in debug mode, arithmetic operations that would overflow instead panic, and panicking causes tests to fail.</p>\n\n<p>With the rearranged version (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1ede51787e162280f218ea84889e26e8\" rel=\"nofollow noreferrer\">playground</a>), in <code>series(\"12345\", 6)</code>, <code>digits.len() - len + 1</code> becomes <code>5usize - 6usize + 1usize</code>. The program doesn't even get to the <code>+ 1</code>, because just <code>5usize - 6usize</code> panics. (<code>usize</code> can't represent negative numbers, so subtracting <code>6</code> from <code>5</code> causes overflow.)</p>\n\n<p>The error message contains a strong hint at the nature of the failure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>---- test_too_long stdout ----\nthread 'test_too_long' panicked at 'attempt to subtract with overflow', src/lib.rs:2:9\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p><code>digits.len() + 1 - len</code> works, however, because <code>6</code> is <em>exactly</em> one more than the length of the string, and so <code>5 + 1 - 6</code> can evaluate to zero without overflow. But if you change <code>test_too_long</code> to call <code>series(\"12345\", 7)</code> instead, both versions panic. This seems like an oversight on the part of whoever wrote the test suite, especially considering that the instructions don't specify the expected behavior:</p>\n\n<blockquote>\n  <p>And if you ask for a 6-digit series from a 5-digit string, you deserve whatever you get.</p>\n</blockquote>\n\n<p>For what it's worth, here's one way to make <code>series</code> return an empty vector for any <code>len</code> greater than the length of the input: <code>(digits.len() + 1).saturating_sub(len)</code> is like <code>digits.len() + 1 - len</code>, but if the result of the subtraction would be less than <code>0</code>, it just returns <code>0</code>.</p>\n"}], "owner": {"reputation": 21, "user_id": 8440648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/326277921ac06f91bd30262b9817c26b?s=128&d=identicon&r=PG&f=1", "display_name": "BSpirit", "link": "https://stackoverflow.com/users/8440648/bspirit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1546387940, "creation_date": 1546384238, "last_edit_date": 1546387940, "question_id": 53999655, "link": "https://stackoverflow.com/questions/53999655/arithmetic-operation-order-issue-with-a-range", "title": "Arithmetic operation order issue with a range", "body": "<p>I'm trying to learn Rust using the Rust book and the Exercism.io website.\nI have an issue with <a href=\"https://exercism.io/tracks/rust/exercises/series/solutions/b969296d2ea146ce98a9fa27b599c269\" rel=\"nofollow noreferrer\">this specific exercise</a>. The code is as follows:</p>\n\n<pre><code>pub fn series(_digits: &amp;str, _len: usize) -&gt; Vec&lt;String&gt; {\n    (0.._digits.len() + 1 - _len)\n        .map(|i| _digits[i..i + _len].to_string())\n        .collect()\n}\n</code></pre>\n\n<p>For example, <code>series(\"12345\", 3)</code>should return a <code>Vec</code> containing <code>[\"123\", \"234\", \"345\"]</code>.</p>\n\n<p>Instead of <code>(0.._digits.len() + 1 - _len)</code>, I experimented using <code>(0.._digits.len() - _len + 1)</code> instead, but in this case, the unit test \"test_too_long\" fails:</p>\n\n<pre><code>#[test]\n#[ignore]\nfn test_too_long() {\n    let expected: Vec&lt;String&gt; = vec![];\n    assert_eq!(series(\"92017\", 6), expected);\n}\n</code></pre>\n\n<p>I'm surprised because it looks like it's the same to me. Why did it fail?</p>\n"}, {"tags": ["reference", "rust", "borrowing", "newtype"], "answers": [{"comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1546429627, "post_id": 53999847, "comment_id": 94848173, "body": "Thanks for mentioning <code>repr(transparent)</code>, I didn&#39;t know about that. How should I argue that the cast is safe - surely if the values have the same memory representation, I should be able to call methods from both types on the same memory location? Do I need to assess any other aspect?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1546429934, "post_id": 53999847, "comment_id": 94848281, "body": "I had attempted the safe solution where a <code>&amp;mut Val</code> is wrapped, but as hinted at in the question <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6d97d932ee73c996ad2a28b605ebe92b\" rel=\"nofollow noreferrer\">I couldn&#39;t get the lifetimes right</a>. I don&#39;t want to litter my code (especially <code>Outer</code>) with lifetime parameters  that will only be needed locally in one method for <code>WrappedVal</code>, am I approaching this wrong? I&#39;m already surprised that you could omit the lifetime argument in <code>FnOnce(WrappedVal) -&gt; WrappedVal</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1546455634, "post_id": 53999847, "comment_id": 94860172, "body": "@Bergi yes, using lifetimes like that in a trait is beyond what Rust can currently express; <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">generic associated types (GATs)</a> need to be implemented first. Traits are more complicated than plain functions due to their flexibility."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1546456304, "post_id": 53999847, "comment_id": 94860467, "body": "@Bergi My comment inside the code is meant to dissuade future people from just copy-pasting the code without reading the rest of the answer. My belief that the code is safe comes from the usage of <code>repr(transparent)</code>, so that&#39;s what I&#39;d use in my comment, yeah."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1546456214, "last_edit_date": 1546456214, "creation_date": 1546386723, "answer_id": 53999847, "question_id": 53999600, "link": "https://stackoverflow.com/questions/53999600/how-to-wrap-a-borrowed-value-in-a-newtype-that-is-also-a-borrowed-value/53999847#53999847", "title": "How to wrap a borrowed value in a newtype that is also a borrowed value?", "body": "<p>There is no safe way with your current definition, and your unsafe code is not guaranteed to be safe. There's no contract that the layout of a <code>WrappedVal</code> matches that of a <code>Val</code>, even though that's all it holds.</p>\n\n<h1>Solution not using <code>unsafe</code></h1>\n\n<p>Don't do it. Instead, wrap the reference:</p>\n\n<pre><code>struct WrappedVal&lt;'a&gt;(&amp;'a mut Val);\n\nimpl Outer {\n    fn modify&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce(WrappedVal) -&gt; WrappedVal,\n    {\n        self.0.modify(|v| f(WrappedVal(v)).0)\n    }\n}\n</code></pre>\n\n<h1>Solution using <code>unsafe</code></h1>\n\n<p>You can state that your type has the same <em>representation</em> as the type it wraps, making the pointers compatible via <a href=\"https://doc.rust-lang.org/reference/type-layout.html#the-transparent-representation\" rel=\"nofollow noreferrer\"><code>repr(transparent)</code></a>:</p>\n\n<pre><code>#[repr(transparent)]\nstruct WrappedVal(given::Val);\n\nimpl Outer {\n    fn modify&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce(&amp;mut WrappedVal) -&gt; &amp;mut WrappedVal,\n    {\n        self.0.modify(|v| {\n            // Insert documentation why **you** think this is safe\n            // instead of copy-pasting from Stack Overflow\n            let wv = unsafe { &amp;mut *(v as *mut given::Val as *mut WrappedVal) };\n            let wv = f(wv);\n            unsafe { &amp;mut *(wv as *mut WrappedVal as *mut given::Val) }\n        })\n    }\n}\n</code></pre>\n\n<p>With <code>repr(transparent)</code> in place, the two pointers are interchangable. I ran <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ba52173d1b9ab1eecc0ee811f930d97f\" rel=\"nofollow noreferrer\">a quick test with Miri and your full example</a> and didn't receive any errors, but that's not a silver bullet that I didn't mess something else up.</p>\n"}, {"tags": [], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "is_accepted": false, "score": 2, "last_activity_date": 1583935396, "creation_date": 1583935396, "answer_id": 60637879, "question_id": 53999600, "link": "https://stackoverflow.com/questions/53999600/how-to-wrap-a-borrowed-value-in-a-newtype-that-is-also-a-borrowed-value/60637879#60637879", "title": "How to wrap a borrowed value in a newtype that is also a borrowed value?", "body": "<p>Using the <a href=\"https://docs.rs/ref-cast/1.0.0/ref_cast/\" rel=\"nofollow noreferrer\">ref_cast</a> library you can write:</p>\n\n<pre><code>#[derive(RefCast)]\n#[repr(transparent)]\nstruct WrappedVal(Val);\n</code></pre>\n\n<p>Then you can convert using <code>WrappedVal::ref_cast_mut(v)</code>.</p>\n"}], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "accepted_answer_id": 53999847, "answer_count": 2, "score": 2, "last_activity_date": 1583935396, "creation_date": 1546383596, "last_edit_date": 1546455226, "question_id": 53999600, "link": "https://stackoverflow.com/questions/53999600/how-to-wrap-a-borrowed-value-in-a-newtype-that-is-also-a-borrowed-value", "title": "How to wrap a borrowed value in a newtype that is also a borrowed value?", "body": "<p>I am trying to use the <a href=\"https://github.com/rust-unofficial/patterns/blob/master/patterns/newtype.md\" rel=\"nofollow noreferrer\">newtype pattern</a> to wrap a pre-existing type. That inner type has a <code>modify</code> method which lets us work with a borrowed mutable value in a callback:</p>\n\n<pre><code>struct Val;\n\nstruct Inner(Val);\n\nimpl Inner {\n    fn modify&lt;F&gt;(&amp;self, f: F)\n    where F: FnOnce(&amp;mut Val) -&gt; &amp;mut Val { \u2026 }\n}\n</code></pre>\n\n<p>Now I want to provide a very similar method on my newtype <code>Outer</code>, which however should not work on <code>Val</code>s but again a newtype wrapper <code>WrappedVal</code>:</p>\n\n<pre><code>struct Outer(Inner);\nstruct WrappedVal(Val);\n\nimpl Outer {\n    fn modify&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce(&amp;mut WrappedVal) -&gt; &amp;mut WrappedVal,\n    {\n        self.0.modify(|v| f(/* ??? */));\n    }\n}\n</code></pre>\n\n<p>This code is a reduced example from the original API. I don't know why the reference is returned from the closure, maybe to facilitate chaining, but it shouldn't be necessary. It takes <code>&amp;self</code> because it uses internal mutability - it's a type representing a peripheral register on an embedded system</p>\n\n<p><strong>How do I get a <code>&amp;mut WrappedVal</code> from a <code>&amp;mut Val</code>?</strong></p>\n\n<p>I have tried various things, but all were busted by the borrow-checker. I cannot move the <code>Val</code> out of the mutable reference to construct a proper <code>WrappedVal</code>, and I couldn't get lifetimes to compile either when experimenting around with <code>struct WrappedVal(&amp;'? mut Val)</code> (which I don't really want actually, since they are complicating a trait implementation).</p>\n\n<p>I eventually got it to compile (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9cea24b6cd2da5e4439aba11ff5002fd\" rel=\"nofollow noreferrer\">Rust playground demo</a>) using the absolute horror of</p>\n\n<pre><code>self.0.modify(|v| unsafe {\n    (f((v as *mut Val as *mut WrappedVal).as_mut().unwrap()) as *mut WrappedVal as *mut Val)\n        .as_mut()\n        .unwrap()\n});\n</code></pre>\n\n<p>but surely there must be a better way?</p>\n"}, {"tags": ["rust", "traits", "type-constraints", "associated-types"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1546394926, "last_edit_date": 1546394926, "creation_date": 1546372781, "answer_id": 53998526, "question_id": 53998181, "link": "https://stackoverflow.com/questions/53998181/how-to-impose-a-type-constraint-on-the-associated-type-of-an-associated-type-e/53998526#53998526", "title": "How to impose a type constraint on the associated type of an associated type (e.g. Iterator::Item)?", "body": "<p>You can make one small improvement, but otherwise the current syntax for this is as you have discovered:</p>\n\n<pre><code>trait Note\nwhere\n    &lt;Self::FieldsIter as Iterator&gt;::Item: AsRef&lt;str&gt;,\n{\n    type FieldsIter: Iterator;\n}\n</code></pre>\n\n<p>This is the disambiguated syntax, the only problem is there isn't yet a way to make the ambiguous version! <a href=\"https://github.com/rust-lang/rust/issues/38078\" rel=\"nofollow noreferrer\">Rust issue #38078</a> is open to allow the <code>Foo::Bar::Baz</code> syntax.</p>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2289-associated-type-bounds.md\" rel=\"nofollow noreferrer\">RFC 2289</a> is also open as a way to improve this. With the RFC implemented, your second example should work:</p>\n\n<pre><code>trait Note {\n    type FieldsIter: Iterator&lt;Item: AsRef&lt;str&gt;&gt;;\n}\n</code></pre>\n\n<p>One way you can work around this now is similar to <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a>. This introduces another associated type:</p>\n\n<pre><code>trait Note {\n    type FieldsIter: Iterator&lt;Item = Self::Item&gt;;\n    type Item: AsRef&lt;str&gt;;\n}\n</code></pre>\n\n<p>I'm not a fan of this because it introduces types that at first look to be orthogonal to each other, but in the end are tightly related.</p>\n"}], "owner": {"reputation": 137, "user_id": 1894121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68684ee18306f0f64fb8105b1b16b070?s=128&d=identicon&r=PG", "display_name": "flopacero", "link": "https://stackoverflow.com/users/1894121/flopacero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 906, "favorite_count": 0, "accepted_answer_id": 53998526, "answer_count": 1, "score": 3, "last_activity_date": 1585058327, "creation_date": 1546369579, "last_edit_date": 1585058327, "question_id": 53998181, "link": "https://stackoverflow.com/questions/53998181/how-to-impose-a-type-constraint-on-the-associated-type-of-an-associated-type-e", "title": "How to impose a type constraint on the associated type of an associated type (e.g. Iterator::Item)?", "body": "<p>I'm trying to define a trait with an associated type. I also want the associated type to implement <code>Iterator</code> with its <code>Item</code> associated type implementing <code>AsRef&lt;str&gt;</code>.</p>\n\n<p>While I know how to do it for a function or for a concrete <code>Iterator::Item</code> type, I can't come up with a clear and concise solution for the original case.</p>\n\n<p>Thanks to the helpful error messages, my compiling solution is:</p>\n\n<pre><code>trait Note\nwhere\n    &lt;&lt;Self as Note&gt;::FieldsIter as Iterator&gt;::Item: AsRef&lt;str&gt;,\n{\n    type FieldsIter: Iterator;\n    //other fields and methods omitted\n}\n</code></pre>\n\n<p>The ugly <code>where</code> clause makes me think that there should be a better way.</p>\n\n<p>This doesn't compile since <code>Item: AsRef&lt;str&gt;</code> is an illegal construction:</p>\n\n<pre><code>trait Note {\n    type FieldsIter: Iterator&lt;Item: AsRef&lt;str&gt;&gt;;\n    //other fields and methods omitted\n}\n</code></pre>\n\n<p>This fails since <code>impl</code> is not allowed here:</p>\n\n<pre><code>trait Note {\n    type FieldsIter: Iterator&lt;Item = impl AsRef&lt;str&gt;&gt;;\n    //other fields and methods omitted\n}\n</code></pre>\n\n<p>This doesn't compile since I want <code>Iterator::Item</code> to implement a certain trait, not to be a concrete type.</p>\n\n<pre><code>trait Note {\n    type FieldsIter: Iterator&lt;Item = AsRef&lt;str&gt;&gt;;\n    //other fields and methods omitted\n}\n</code></pre>\n"}, {"tags": ["rust", "pattern-matching", "aliases"], "answers": [{"comments": [{"owner": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "edited": false, "score": 0, "creation_date": 1546369578, "post_id": 53997822, "comment_id": 94833449, "body": "Not intending to overoptimize, just interested if this is less efficient or harder to optimize because of the function call instead of an inline pattern. it does require and extra match statement and introduces a boolean value and a function call."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "edited": false, "score": 2, "creation_date": 1546372510, "post_id": 53997822, "comment_id": 94834017, "body": "@stimulate: Well, first of all, yes it will be slower in Debug. In Release, it will depend whether the guard is inlined or not; with inlining there should be no performance difference... operative word being &quot;should&quot; since optimizers can be finicky."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1546366703, "creation_date": 1546366703, "answer_id": 53997822, "question_id": 53997708, "link": "https://stackoverflow.com/questions/53997708/can-i-name-a-pattern-in-rust/53997822#53997822", "title": "Can I name a pattern in Rust?", "body": "<p>There are no aliases for patterns in Rust (1.31).</p>\n\n<p>There are guard clauses, though, and they can invoke functions:</p>\n\n<pre><code>match event {\n    n if is_quit_event(n) =&gt; winit::ControlFlow::Break,\n    _ =&gt; winit::ControlFlow::Continue,\n}\n</code></pre>\n\n<p>Would therefore be possible, and of course within the function you can do any computation.</p>\n\n<p>Here, the function would be:</p>\n\n<pre><code>fn is_quit_event(event: winit::Event) -&gt; bool {\n    match event {\n        winit::Event::WindowEvent { // match against close request event\n            event: winit::WindowEvent::CloseRequested,\n            ..\n        } =&gt; true,\n        _ =&gt; false,\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "closed_date": 1546366747, "accepted_answer_id": 53997822, "answer_count": 1, "score": -1, "last_activity_date": 1546366703, "creation_date": 1546365711, "question_id": 53997708, "link": "https://stackoverflow.com/questions/53997708/can-i-name-a-pattern-in-rust", "closed_reason": "Duplicate", "title": "Can I name a pattern in Rust?", "body": "<p>I am using <a href=\"https://docs.rs/winit/0.18.0/winit/\" rel=\"nofollow noreferrer\">winit</a> to create a window and get input from the user through the window. The window creates variants of the enum <a href=\"https://docs.rs/winit/0.18.0/winit/enum.Event.html\" rel=\"nofollow noreferrer\"><code>Event</code></a> and passes it to a \"callback function\" (I am not sure how accurate this is) for processing. </p>\n\n<p>I am using match statements to decide what to do with the event:</p>\n\n<pre><code>fn process_event(event: winit::Event) -&gt; winit::ControlFlow /*potentially break EventsLoop and exit*/ {\n    match event {\n        winit::Event::WindowEvent { // match against close request event\n            event: winit::WindowEvent::CloseRequested,\n            ..\n        } =&gt; winit::ControlFlow::Break,\n        _ =&gt; winit::ControlFlow::Continue\n    }\n}\n</code></pre>\n\n<p>However, this is getting very noisy quickly. I am currently splitting all the different cases up into functions, so that I can make this code a bit more expressive, but in the end, the patterns remain this verbose. It would be very nice if I could give a pattern to match against a name, I mean something like this:</p>\n\n<pre><code>pattern quitEvent =\n    winit::Event::WindowEvent {\n        event: winit::WindowEvent::CloseRequested,\n        ..\n    };\n\nfn process_event(event: winit::Event) -&gt; winit::ControlFlow {\n    match event {\n        quitEvent =&gt; winit::ControlFlow::Break,\n        _ =&gt; winit::ControlFlow::Continue\n    }\n}\n</code></pre>\n\n<p>Is this possible? Even better would be if we could alias a combination of patterns aswell, in an \"or\" manner.</p>\n"}, {"tags": ["rust", "traits", "default-implementation"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1546361481, "post_id": 53997145, "comment_id": 94831691, "body": "tl;dr - <code>impl MyTrait {...}</code> is the old way of writing <code>impl dyn MyTrait {...}</code> and is how you add inherent methods to trait objects of <code>MyTrait</code>. See also <a href=\"https://stackoverflow.com/questions/27567849/what-makes-something-a-trait-object\">What makes something a &quot;trait object&quot;?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546369315, "post_id": 53997145, "comment_id": 94833396, "body": "Note that it&#39;s <a href=\"https://github.com/rust-lang/rust/issues/51402\" rel=\"nofollow noreferrer\">currently impossible to disambiguate</a> between the two <code>foo</code> calls you have, even though both exist and are distinct."}], "owner": {"reputation": 5576, "user_id": 767632, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/75a05c23a398c887e8f085b9c870586c?s=128&d=identicon&r=PG", "display_name": "yeputons", "link": "https://stackoverflow.com/users/767632/yeputons"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1546363953, "answer_count": 0, "score": 2, "last_activity_date": 1546360657, "creation_date": 1546360657, "question_id": 53997145, "link": "https://stackoverflow.com/questions/53997145/what-does-impl-mytrait-do-without-for-mystruct-in-rust", "closed_reason": "Duplicate", "title": "What does &#39;impl MyTrait&#39; do without &#39;for MyStruct&#39; in Rust?", "body": "<p>Traits in Rust allow default implementation for trait methods: you can write some implementation right inside <code>trait MyTrait {...}</code> and it will be used in <code>impl MyTrait for MyStruct</code> later.</p>\n\n<p>However, you can also write plain <code>impl MyTrait</code>, which does not appear to change program's behaviour:</p>\n\n<pre><code>trait MyTrait {\n    fn foo(&amp;self) {  // Default implementation\n        println!(\"1\");\n    }\n}\n\nimpl MyTrait for i32 {\n}\n\nfn main() {\n    1i32.foo();  // Prints '1'\n}\n\nimpl MyTrait {  // What is this?\n    fn foo(&amp;self) {\n        println!(\"2\");  // Does nothing?\n    }\n}\n</code></pre>\n\n<p>What is that <code>impl MyTrait</code> without any <code>for SomeType</code>? It compiles with only \"dead code\" warning, so I suppose it has some meaning for the compiler. But I don't understand if there is a way to call it.</p>\n"}, {"tags": ["rust", "yaml", "deserialization", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546362400, "post_id": 53996911, "comment_id": 94831897, "body": "See also <a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a>"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 27, "favorite_count": 0, "closed_date": 1546362369, "answer_count": 0, "score": 1, "last_activity_date": 1546362242, "creation_date": 1546358685, "last_edit_date": 1546362242, "question_id": 53996911, "link": "https://stackoverflow.com/questions/53996911/deserialize-into-different-implementors-of-trait-with-serde", "closed_reason": "Duplicate", "title": "Deserialize into different implementors of trait with serde?", "body": "<p>I am trying to deserialize a YAML config file in Rust using the Serde library. On many places, the format uses a convention of drivers, i.e. a field named \"driver\" determines what kind of object the configuration is for. For example, this would be two valid configurations:</p>\n\n<pre class=\"lang-yaml prettyprint-override\"><code>reader:\n  driver: file\n  path: /var/log/foo\n</code></pre>\n\n<pre class=\"lang-yaml prettyprint-override\"><code>reader:\n  driver: http\n  port: 8080\n  endpoint: /api/bar\n</code></pre>\n\n<p>I have the following structs that I want to deserialize into:</p>\n\n<pre><code>struct Settings {\n    reader: Reader,\n}\n\ntrait Reader {}\n\nstruct FileReader {\n    path: String,\n}\n\nimpl Reader for FileReader {}\n\nstruct HttpReader {\n    port: u32,\n    endpoint: String,\n}\n\nimpl Reader for HttpReader {}\n</code></pre>\n\n<p>Is there any way I can instruct Serde to deserialize into these structs, preferably without having to do the implementation myself? Can I somehow modify my structs to make them easier to deserialize into, perhaps by introducing an enum or something?</p>\n"}, {"tags": ["caching", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 12866, "user_id": 110488, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/21369d30fe2c6c976ffe735f2fd0ee91?s=128&d=identicon&r=PG", "display_name": "Chen Levy", "link": "https://stackoverflow.com/users/110488/chen-levy"}, "is_accepted": false, "score": 3, "last_activity_date": 1546356141, "creation_date": 1546356141, "answer_id": 53996618, "question_id": 53996611, "link": "https://stackoverflow.com/questions/53996611/is-it-possible-to-configure-the-directory-where-cargo-caches-the-crates-it-downl/53996618#53996618", "title": "Is it possible to configure the directory where Cargo caches the crates it downloads?", "body": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-reads\" rel=\"nofollow noreferrer\">Found it</a>:</p>\n\n<pre><code>variables:\n  CARGO_HOME: \"/cache/cargo/\"\n</code></pre>\n"}], "owner": {"reputation": 12866, "user_id": 110488, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/21369d30fe2c6c976ffe735f2fd0ee91?s=128&d=identicon&r=PG", "display_name": "Chen Levy", "link": "https://stackoverflow.com/users/110488/chen-levy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 861, "favorite_count": 0, "closed_date": 1546364244, "answer_count": 1, "score": 3, "last_activity_date": 1546361605, "creation_date": 1546356084, "last_edit_date": 1546361605, "question_id": 53996611, "link": "https://stackoverflow.com/questions/53996611/is-it-possible-to-configure-the-directory-where-cargo-caches-the-crates-it-downl", "closed_reason": "Duplicate", "title": "Is it possible to configure the directory where Cargo caches the crates it downloads?", "body": "<p>In GitLab's CI, I can breakdown my build into stages and each stage can pass artifacts to the next configuration:</p>\n\n<pre><code>cache:\n  paths:\n    - target/\n    - Cargo.lock\n</code></pre>\n\n<p>However, if the cache directory is outside the project directory or the <code>/cache</code> directory, it becomes hard to pass those artifacts along. I need to tell Cargo a good place to put (and look for) its cached crates.</p>\n\n<p>In my case, I wish to use <code>/cache/cargo/registry/...</code> rather than <code>~/.cargo/registry/...</code>. or <code>/usr/local/cargo/registry/...</code>.</p>\n\n<p>Bonus points for doing that via an environment variable.</p>\n"}, {"tags": ["reference", "rust", "borrow-checker", "mutability", "borrowing"], "comments": [{"owner": {"reputation": 324088, "user_id": 1256452, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/fa1648baa6108c85886312af93bb32c0?s=128&d=identicon&r=PG", "display_name": "torek", "link": "https://stackoverflow.com/users/1256452/torek"}, "edited": false, "score": 2, "creation_date": 1546301475, "post_id": 53990135, "comment_id": 94822134, "body": "It&#39;s <i>potentially</i> dangerous if you use threads, which would require a more complex MCVE. Since this doesn&#39;t, it isn&#39;t (dangerous), I think."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546343653, "post_id": 53990135, "comment_id": 94827758, "body": "Looking further into this, I don&#39;t see any reason to have a mutable borrow here, since both functions take an immutable borrow. Could it be that you reduced the example slightly too much?"}, {"owner": {"reputation": 977, "user_id": 1934675, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/3fe91c1519ebe040212894af76a7b084?s=128&d=identicon&r=PG", "display_name": "noziar", "link": "https://stackoverflow.com/users/1934675/noziar"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546344270, "post_id": 53990135, "comment_id": 94827890, "body": "@MatthieuM. Indeed my original example was a bit too simplified. I updated it so that <code>g</code> takes in a mutable reference. Of course, in my original code <code>f</code> and <code>g</code> actually did something :) But as you noted, it&#39;s unclear why using bar after calling <code>f</code> could be dangerous"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1546350049, "post_id": 53990135, "comment_id": 94829138, "body": "Thanks, it makes more sense now :) I am wondering, if <code>g</code> were to modify <code>bar.c</code>, and <code>f</code> print <code>foo.bar.c</code>, if a conforming compiler would be allow to reorder the calls to <code>f</code> and <code>g</code> (modify first, print later) on the basis that <code>bar</code> is <code>restrict</code> so no other pointer exists... In any case though I think that this program would violate Ralf Jung&#39;s model of memory safety, which practically speaking will be the bar to meet to guarantee."}, {"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 0, "creation_date": 1546441935, "post_id": 53990135, "comment_id": 94854000, "body": "A hypothetical optimization that would break very similar code is to optimize <code>let x = *foo; &#47;* code not using x or foo *&#47;; let y = *foo</code> to replace the last statement with <code>let y = x</code>. That seems like a very beneficial optimization (we can avoid a memory access), but if the unknown code in the middle can change what foo points to without mentioning foo -- exactly the case in your example -- we have a problem."}], "answers": [{"comments": [{"owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 2, "creation_date": 1546441601, "post_id": 53995201, "comment_id": 94853844, "body": "Beyond this, notice that the question is ill-posed or at least misleading. It doesn&#39;t matter whether such code is dangerous <i>right now</i>, all that matters if whether there <i>could</i> exist a hypothetical standards-compliant implementation where this code is dangerous. Arguing based on what the latest rustc happens to do is, at best, a slippery slope.  IMO the best answer to this question it &quot;it doesn&#39;t matter because what really matters is whether this is UB according to the spec or not&quot;. Unfortunately, of course, the spec is still WIP..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "edited": false, "score": 2, "creation_date": 1546444096, "post_id": 53995201, "comment_id": 94855110, "body": "@RalfJung: I agree that the specification should be what matters; in the absence of formal specifications, though, rustc&#39;s current behavior is the best we get. This is what I was trying to get at with &quot;if you cannot prove it&#39;s correct, then it&#39;s dangerous&quot;."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1546364106, "last_edit_date": 1546364106, "creation_date": 1546343599, "answer_id": 53995201, "question_id": 53990135, "link": "https://stackoverflow.com/questions/53990135/is-using-an-immutable-borrow-after-an-aliasing-mutable-borrow-is-created-but-bef/53995201#53995201", "title": "Is using an immutable borrow after an aliasing mutable borrow is created but before it is used actually dangerous?", "body": "<blockquote>\n  <p>Is this code actually dangerous, or is it a limitation of the compiler?</p>\n</blockquote>\n\n<p>Well... it's not dangerous since it doesn't compile.</p>\n\n<hr>\n\n<p>And if it compiled?</p>\n\n<p>Let's imagine that instead of using rustc you use <a href=\"https://github.com/thepowersgang/mrustc\" rel=\"nofollow noreferrer\">mrustc</a>, a Rust-to-C compiler which assumes the code is correct and does NOT perform borrow-checking.</p>\n\n<p>A correct rendition of your code to C:</p>\n\n<pre><code>struct B { int c; };\n\nstruct A { struct B b; };\n\nvoid f(struct A const* a) {}\n\nvoid g(struct B* restrict b) {}\n\nint main(int argc, char** argv) {\n    struct A foo = { { 2 } };\n    struct B* restrict bar = &amp;foo.b;\n    f(&amp;foo);\n    g(bar);\n}\n</code></pre>\n\n<p>Note the presence of the <code>restrict</code> qualifier, the C equivalent to <code>&amp;mut</code>, which indicates to the compiler that the pointer is not aliased. <a href=\"https://en.cppreference.com/w/c/language/restrict\" rel=\"nofollow noreferrer\"><code>restrict</code></a> (emphasis mine):</p>\n\n<blockquote>\n  <p>During each execution of a block in which a restricted pointer P is declared (typically each execution of a function body in which P is a function parameter), if some object that is accessible through P (directly or indirectly) is modified, by any means, then all accesses to that object (both reads and writes) in that block must occur through P (directly or indirectly), otherwise <strong>the behavior is undefined</strong>.</p>\n</blockquote>\n\n<p>I invite you to check the link, there are several other circumstances leading to undefined behavior.</p>\n\n<p>It's unclear to me whether this could be an issue here, you do not perform any modification after all.</p>\n\n<p>From experience with C++ though, I'd advise steering clear of ambiguous cases: <strong>if you cannot prove it's correct, then it's dangerous</strong>.</p>\n"}], "owner": {"reputation": 977, "user_id": 1934675, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/3fe91c1519ebe040212894af76a7b084?s=128&d=identicon&r=PG", "display_name": "noziar", "link": "https://stackoverflow.com/users/1934675/noziar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1546364106, "creation_date": 1546278870, "last_edit_date": 1546344000, "question_id": 53990135, "link": "https://stackoverflow.com/questions/53990135/is-using-an-immutable-borrow-after-an-aliasing-mutable-borrow-is-created-but-bef", "title": "Is using an immutable borrow after an aliasing mutable borrow is created but before it is used actually dangerous?", "body": "<p>This MCVE:</p>\n\n<pre><code>struct A {\n    b: B,\n}\n\nstruct B {\n    c: i32,\n}\n\nfn f(_a: &amp;A) {}\n\nfn g(_b: &amp;mut B) {}\n\nfn main() {\n    let mut foo = A { b: B { c: 2 } };\n    let bar = &amp;mut foo.b;\n    f(&amp;foo);\n    g(bar);\n}\n</code></pre>\n\n<p>leads to the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `foo` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:16:7\n   |\n15 |     let bar = &amp;mut foo.b;\n   |               ---------- mutable borrow occurs here\n16 |     f(&amp;foo);\n   |       ^^^^ immutable borrow occurs here\n17 |     g(bar);\n   |       --- mutable borrow later used here\n</code></pre>\n\n<p>I understand why having mutable and immutable borrows at the same time is dangerous, but since <code>f</code> doesn't return anything, by the time <code>bar</code> is used, the reference <code>&amp;foo</code> isn't used anymore. Is this code actually dangerous, or is it a limitation of the compiler? If so, what would be an idiomatic way to write this code? Do I need to use a cell?</p>\n"}, {"tags": ["recursion", "tree", "rust", "iterator", "overflow"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546272006, "post_id": 53989219, "comment_id": 94816050, "body": "<code>.map(x).flatten()</code> =&gt; <code>flat_map(x)</code>"}, {"owner": {"reputation": 968, "user_id": 109017, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c9ee70b9baced8d615bd432a9038a9b?s=128&d=identicon&r=PG", "display_name": "Harry Lachenmayer", "link": "https://stackoverflow.com/users/109017/harry-lachenmayer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546272748, "post_id": 53989219, "comment_id": 94816246, "body": "added links to other solutions, thanks"}], "answers": [{"comments": [{"owner": {"reputation": 968, "user_id": 109017, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c9ee70b9baced8d615bd432a9038a9b?s=128&d=identicon&r=PG", "display_name": "Harry Lachenmayer", "link": "https://stackoverflow.com/users/109017/harry-lachenmayer"}, "edited": false, "score": 0, "creation_date": 1546272615, "post_id": 53989315, "comment_id": 94816206, "body": "That&#39;s &quot;like&quot; enough for now :) thanks so much for the speedy reply! And duh, should obviously have used <code>flat_map</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1546273723, "last_edit_date": 1546273723, "creation_date": 1546272228, "answer_id": 53989315, "question_id": 53989219, "link": "https://stackoverflow.com/questions/53989219/overflow-evaluating-the-requirement-when-returning-a-recursive-iterator-using-im/53989315#53989315", "title": "Overflow evaluating the requirement when returning a recursive iterator using impl trait", "body": "<blockquote>\n  <p>if something like this code could work</p>\n</blockquote>\n\n<p>Depends on how \"like\" you mean. This is similar, works, and doesn't require a custom iterator; thus meeting all of your requirements:</p>\n\n<pre><code>fn depth_first_metadata_iter(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;i64&gt; + '_&gt; {\n    Box::new({\n        self.children\n            .iter()\n            .flat_map(|child| child.depth_first_metadata_iter())\n            .chain(self.metadata.iter())\n    })\n}\n</code></pre>\n\n<hr>\n\n<p>At the heart, this is the same problem as shown in</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31196422/155423\">What does &quot;Overflow evaluating the requirement&quot; mean and how can I fix it?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39397157/155423\">&quot;Overflow evaluating the requirement&quot; but that kind of recursion should not happen at all</a></li>\n<li><a href=\"https://stackoverflow.com/q/50657585/155423\">Curiously recurring generic trait pattern: overflow evaluating the requirement</a></li>\n</ul>\n\n<p>Put yourself in the compiler's shoes for a while. Your original code says \"I'm going to return a concrete iterator type, but I'm not going to say the exact type\". The compiler still has to be able to figure out that type, so let's be the compiler:</p>\n\n<pre><code>let a = self.children.iter();\n// std::slice::Iter&lt;'_, Box&lt;Node&gt;&gt;\n\nlet cls = |child| child.depth_first_metadata_iter();\n// Fn(&amp;Box&lt;Node&gt;) -&gt; ?X?\n\nlet b = a.flat_map(cls);\n// FlatMap&lt;Iter&lt;'_, Box&lt;Node&gt;&gt;, ?X?, Fn(&amp;Box&lt;Node&gt;) -&gt; ?X?&gt;\n\nlet d = self.metadata.iter();\n// std::slice::Iter&lt;'_, i64&gt;\n\nb.chain(d);\n// Chain&lt;FlatMap&lt;Iter&lt;'_, Box&lt;Node&gt;&gt;, ?X?, Fn(&amp;Box&lt;Node&gt;) -&gt; ?X?&gt;, Iter&lt;'_, i64&gt;&gt;\n</code></pre>\n\n<p>This end result is the return value, so we have our equation:</p>\n\n<pre><code>Chain&lt;FlatMap&lt;Iter&lt;'_, Box&lt;Node&gt;&gt;, ?X?, Fn(&amp;Box&lt;Node&gt;) -&gt; ?X?&gt;, Iter&lt;'_, i64&gt;&gt; === ?X?\n</code></pre>\n\n<p>AFAIK, it's impossible to perform the type-level algebra to solve for <code>?X?</code>, thus you get the error.</p>\n\n<p>Changing the return type to a boxed trait object short circuits all of the logic needed and forces a specific concrete type.</p>\n\n<blockquote>\n  <p>strategically placing a type annotation somewhere</p>\n</blockquote>\n\n<p>I don't believe this to be the case. If so, that would mean that the algebra <em>is</em> solvable but that the compiler isn't smart enough to solve it. While this is undoubtedly true in other situations, I don't think it is here.</p>\n\n<hr>\n\n<p>I don't think this is a <em>great</em> solution, as this will involve lots of tiny allocations. I'd assume (but have not tested) that a custom iterator using a stack data structure would be more efficient. </p>\n\n<p>A middle ground would be to build up the entire set of nodes:</p>\n\n<pre><code>impl Node {\n    fn depth_first_metadata_iter(&amp;self) -&gt; impl Iterator&lt;Item = &amp;i64&gt; + '_ {\n        self.x().into_iter()\n    }\n\n    fn x(&amp;self) -&gt; Vec&lt;&amp;i64&gt; {\n        fn x_inner&lt;'a&gt;(node: &amp;'a Node, v: &amp;mut Vec&lt;&amp;'a i64&gt;) {\n            for c in &amp;node.children {\n                x_inner(c, v)\n            }\n            v.extend(&amp;node.metadata);\n        }\n\n        let mut v = Vec::new();\n        x_inner(self, &amp;mut v);\n        v\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 968, "user_id": 109017, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c9ee70b9baced8d615bd432a9038a9b?s=128&d=identicon&r=PG", "display_name": "Harry Lachenmayer", "link": "https://stackoverflow.com/users/109017/harry-lachenmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 53989315, "answer_count": 1, "score": 0, "last_activity_date": 1546273723, "creation_date": 1546271604, "last_edit_date": 1546272729, "question_id": 53989219, "link": "https://stackoverflow.com/questions/53989219/overflow-evaluating-the-requirement-when-returning-a-recursive-iterator-using-im", "title": "Overflow evaluating the requirement when returning a recursive iterator using impl trait", "body": "<p>I'm trying to iterate depth-first over a tree structure in Rust. I thought I had a really nice concise solution for this, but I can't get it to compile. Conceptually it's pretty simple: iterate over the children, get each child's depth first iterator, flatten them, and chain the current node's metadata iterator to it.</p>\n\n<pre><code>#[derive(Debug, Eq, PartialEq)]\nstruct Node {\n    metadata: Vec&lt;i64&gt;,\n    children: Vec&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl Node {\n    fn depth_first_metadata_iter(&amp;self) -&gt; impl Iterator&lt;Item = &amp;i64&gt; + '_ {\n        self.children\n            .iter()\n            .map(|child| child.depth_first_metadata_iter())\n            .flatten()\n            .chain(self.metadata.iter())\n    }\n}\n\nfn main() {\n    let tree = Node {\n        metadata: vec![1, 2, 3],\n        children: vec![\n            Box::new(Node {\n                metadata: vec![4, 5],\n                children: vec![],\n            }),\n            Box::new(Node {\n                metadata: vec![6, 7],\n                children: vec![],\n            }),\n        ],\n    };\n    println!(\n        \"{:?}\",\n        tree.depth_first_metadata_iter().collect::&lt;Vec&lt;&amp;i64&gt;&gt;()\n    );\n}\n</code></pre>\n\n<p>However, when I compile this, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `impl std::iter::Iterator`\n  |\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n</code></pre>\n\n<p>(You can check this out yourself on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cc13c24c2897308cc23124326129af31\" rel=\"nofollow noreferrer\">playground</a>.)</p>\n\n<p>It makes sense that this would be an error, as I am making recursive calls inside <code>depth_first_metadata_iter</code> which return nested iterators, but it would be really nice if something like this code could work without having to implement a custom iterator. </p>\n\n<p>All other solutions to the <code>E0275</code> error I have seen (eg. <a href=\"https://stackoverflow.com/questions/31196422/what-does-overflow-evaluating-the-requirement-mean-and-how-can-i-fix-it\">this</a>, <a href=\"https://github.com/rust-lang/rust/issues/23714\" rel=\"nofollow noreferrer\">this</a>, <a href=\"https://github.com/rust-lang/rust/issues/39959\" rel=\"nofollow noreferrer\">this</a>) seem to involve strategically placing a type annotation somewhere - is something like that possible here, or am I trying something \"impossible\"?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 477, "user_id": 1385881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/347359ef594eadc2f8129c912cc72367?s=128&d=identicon&r=PG", "display_name": "Adam Putinski", "link": "https://stackoverflow.com/users/1385881/adam-putinski"}, "edited": false, "score": 0, "creation_date": 1546267468, "post_id": 53988334, "comment_id": 94814686, "body": "Thanks for the help. The recursion was intentional \u2014 I was hoping to take a tree like structure (such as a DOM tree) and wrap it in a formal tree structure so I can add methods to map, fold, etc. I&#39;m confused why it infinitely recursed since I returned an empty vector in the closure."}, {"owner": {"reputation": 477, "user_id": 1385881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/347359ef594eadc2f8129c912cc72367?s=128&d=identicon&r=PG", "display_name": "Adam Putinski", "link": "https://stackoverflow.com/users/1385881/adam-putinski"}, "edited": false, "score": 0, "creation_date": 1546273475, "post_id": 53988334, "comment_id": 94816460, "body": "Thanks for the great explanation. The error message makes much more sense now. So is what I&#39;m trying to achieve not possible?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 477, "user_id": 1385881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/347359ef594eadc2f8129c912cc72367?s=128&d=identicon&r=PG", "display_name": "Adam Putinski", "link": "https://stackoverflow.com/users/1385881/adam-putinski"}, "edited": false, "score": 0, "creation_date": 1546347684, "post_id": 53988334, "comment_id": 94828615, "body": "@AdamPutinski I wasn&#39;t able to response back, edited answer again, i hope it helps you more."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546361612, "post_id": 53988334, "comment_id": 94831720, "body": "@Shepmaster is that needed for this case ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546362026, "post_id": 53988334, "comment_id": 94831822, "body": "For the simple example given by the OP, no. However, it&#39;s not hard <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b66a18107ff0b773a115404eb6b0ef91\" rel=\"nofollow noreferrer\">to imagine a case where it&#39;s desired</a>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546363056, "post_id": 53988334, "comment_id": 94832023, "body": "@Shepmaster Indeed, but  imo expected argument which called get_children should just get the children. Mutable behavior is a bad design for this case despite i was just trying to add conciseness to your code(where you were using <b>Immutable Fn</b>) ."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546363600, "post_id": 53988334, "comment_id": 94832137, "body": "I disagree that mutable is bad design here; you simply cannot make such a broad proclamation. It&#39;s certainly within an API designers right to make that choice, but the Rust standard library has had multiple cases where people used <code>Fn</code> and retroactively realized that they should have used <code>FnMut</code>. You are right that my original answer used <code>Fn</code>; I followed the OPs lead. I have since changed that. Additionally, a function pointer removes <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8fbaf9aa0f66423fac8863ade15fc06b\" rel=\"nofollow noreferrer\">the ability for <b>immutable state</b> as well</a>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546365500, "post_id": 53988334, "comment_id": 94832547, "body": "@Shepmaster It was certainly not a broad proclamation, it was an opinion that points <b>get_children</b> should get the children without mutating. I also never wrote: use <code>fn</code> instead of <code>Fn</code>, like you said the API designers right to make that choice.It is also valid for deciding what to use  <code>fn</code> or <code>Fn</code>."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 1, "last_activity_date": 1546361752, "last_edit_date": 1546361752, "creation_date": 1546265055, "answer_id": 53988334, "question_id": 53988243, "link": "https://stackoverflow.com/questions/53988243/reached-the-type-length-limit-while-instantiating-stdvecintoiteri32/53988334#53988334", "title": "Reached the type-length limit while instantiating std::vec::IntoIter&lt;i32&gt;", "body": "<p>You are making a recursive call when creating <code>Tree&lt;T&gt;</code>:</p>\n\n<pre><code>impl&lt;T&gt; Tree&lt;T&gt; {\n    fn create&lt;F&gt;(value: T, get_children: F) -&gt; Tree&lt;T&gt;\n    //...\n    //...\n        .map(|x| Tree::create(x, |y| get_children(y))) //endless recursive call\n</code></pre>\n\n<blockquote>\n  <p>I'm confused why it infinitely recursed since I returned an empty\n  vector in the closure.</p>\n</blockquote>\n\n<p>This error occurs during compilation and the error says that <code>reached the type-length limit while instantiating...</code>. This means you are generating an enormously long type.</p>\n\n<h2>How does it happen?</h2>\n\n<p>When you call <code>Tree::create(x, |y| get_children(y))</code> you are creating an argument closure which calls an existing closure. This is okay, but when you call it recursively the compiler will not able to detect the type of <code>F</code> at the most inner call.</p>\n\n<p>Remember <code>get_children</code> has a type <code>F</code> where <code>F: Fn(&amp;T) -&gt; Vec&lt;T&gt;</code>. \nWhen you call <code>Tree::create</code> for the first time, <code>F</code> in <code>create&lt;F&gt;</code> will be inferred like this: </p>\n\n<pre><code>let tree = Tree::create(1, |_| Vec::new());\n//inference of F: Fn(&amp;T) -&gt; Vec&lt;T&gt;\n</code></pre>\n\n<p>After the second call in <code>map(...)</code> : </p>\n\n<pre><code>Tree::create(x, |y| get_children(y))\n//inference of F: Fn(&amp;T) -&gt; Fn(&amp;T) -&gt; Vec&lt;T&gt;\n</code></pre>\n\n<p>Then it will eventually turn into this:</p>\n\n<pre><code>//inference of F: Fn(&amp;T)-&gt; Fn(&amp;T) -&gt; Fn(&amp;T) -&gt; Vec&lt;T&gt;\n//inference of F: Fn(&amp;T)-&gt; ... -&gt; Fn(&amp;T) -&gt; Fn(&amp;T) -&gt; Vec&lt;T&gt;\n</code></pre>\n\n<p>At the end, the compiler reaches the type-length limit.</p>\n\n<h2>Solution with recursion</h2>\n\n<p>As an addition to <a href=\"https://stackoverflow.com/a/53989709/155423\">Shepmaster's answer</a>, you can use <a href=\"https://doc.rust-lang.org/std/primitive.fn.html\" rel=\"nofollow noreferrer\">function pointers</a>: </p>\n\n<pre><code>impl&lt;T&gt; Tree&lt;T&gt; {\n    fn create(value: T, get_children: fn(&amp;T) -&gt; Vec&lt;T&gt;) -&gt; Tree&lt;T&gt; {\n        let children = get_children(&amp;value);\n        Tree {\n            value,\n            children: children\n                .into_iter()\n                .map(|x| Tree::create(x, get_children))\n                .collect(),\n        }\n    }\n}\n</code></pre>\n\n<h2>Solution without recursion</h2>\n\n<p>You can fix the issue by sending the function to <code>Vec&lt;Tree&lt;T&gt;&gt;</code> as <code>get_children</code> instead of generating in <code>create</code>, like this: </p>\n\n<pre><code>fn main() {\n    let inner_tree = Tree::create(1, |_| Vec::new());\n    let tree = Tree::create(1, move |_| vec![inner_tree]);\n    println!(\"{:?}\", tree);\n}\n\n#[derive(Debug)]\nstruct Tree&lt;T&gt; {\n    value: T,\n    children: Vec&lt;Tree&lt;T&gt;&gt;,\n}\n\nimpl&lt;T&gt; Tree&lt;T&gt; {\n    fn create&lt;F&gt;(value: T, get_children: F) -&gt; Tree&lt;T&gt;\n    where\n        F: FnOnce(&amp;T) -&gt; Vec&lt;Tree&lt;T&gt;&gt;,\n    {\n        let children = get_children(&amp;value);\n        Tree { value, children }\n    }\n}\n</code></pre>\n\n<p>Please notice that I changed the function parameter's type from <code>Fn</code> to <code>FnOnce</code>. It is needed to move ownership of inner trees into a closure. It is going to be called once so it can consume the variable.</p>\n"}, {"comments": [{"owner": {"reputation": 477, "user_id": 1385881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/347359ef594eadc2f8129c912cc72367?s=128&d=identicon&r=PG", "display_name": "Adam Putinski", "link": "https://stackoverflow.com/users/1385881/adam-putinski"}, "edited": false, "score": 0, "creation_date": 1546276381, "post_id": 53989709, "comment_id": 94817266, "body": "Thank you. This is very helpful!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1546362150, "last_edit_date": 1546362150, "creation_date": 1546275426, "answer_id": 53989709, "question_id": 53988243, "link": "https://stackoverflow.com/questions/53988243/reached-the-type-length-limit-while-instantiating-stdvecintoiteri32/53989709#53989709", "title": "Reached the type-length limit while instantiating std::vec::IntoIter&lt;i32&gt;", "body": "<p>This is the same underlying problem as <a href=\"https://stackoverflow.com/q/31196422/155423\">What does &quot;Overflow evaluating the requirement&quot; mean and how can I fix it?</a> and can be solved the same way. This means you avoid the type-level recursion by using a reference trait object:</p>\n\n<pre><code>impl&lt;T&gt; Tree&lt;T&gt; {\n    fn create(value: T, mut get_children: impl FnMut(&amp;T) -&gt; Vec&lt;T&gt;) -&gt; Tree&lt;T&gt; {\n        fn create_inner&lt;T&gt;(value: T, get_children: &amp;mut FnMut(&amp;T) -&gt; Vec&lt;T&gt;) -&gt; Tree&lt;T&gt; {\n            let children = get_children(&amp;value)\n                .into_iter()\n                .map(|x| create_inner(x, get_children))\n                .collect();\n\n            Tree { value, children }\n        }\n\n        create_inner(value, &amp;mut get_children)\n    }\n}\n</code></pre>\n\n<p>I've also switched from <code>Fn</code> to <code>FnMut</code>, as its better to be more flexible with closure types when possible.</p>\n"}], "owner": {"reputation": 477, "user_id": 1385881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/347359ef594eadc2f8129c912cc72367?s=128&d=identicon&r=PG", "display_name": "Adam Putinski", "link": "https://stackoverflow.com/users/1385881/adam-putinski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 552, "favorite_count": 0, "accepted_answer_id": 53988334, "answer_count": 2, "score": 1, "last_activity_date": 1546362150, "creation_date": 1546264347, "last_edit_date": 1546265251, "question_id": 53988243, "link": "https://stackoverflow.com/questions/53988243/reached-the-type-length-limit-while-instantiating-stdvecintoiteri32", "title": "Reached the type-length limit while instantiating std::vec::IntoIter&lt;i32&gt;", "body": "<p>I am trying to implement a <code>Tree</code> structure, but I keep getting an error whenever I try to run the following code:</p>\n\n<pre><code>fn main() {\n    let tree = Tree::create(1, |_| Vec::new());\n    println!(\"{:?}\", tree);\n}\n\n#[derive(Debug)]\nstruct Tree&lt;T&gt; {\n    value: T,\n    children: Vec&lt;Tree&lt;T&gt;&gt;,\n}\n\nimpl&lt;T&gt; Tree&lt;T&gt; {\n    fn create&lt;F&gt;(value: T, get_children: F) -&gt; Tree&lt;T&gt;\n    where\n        F: Fn(&amp;T) -&gt; Vec&lt;T&gt;,\n    {\n        let children = get_children(&amp;value);\n        Tree {\n            value,\n            children: children\n                .into_iter()\n                .map(|x| Tree::create(x, |y| get_children(y)))\n                .collect(),\n        }\n    }\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: reached the type-length limit while instantiating `&lt;std::vec::IntoIter&lt;i32&gt; as std::iter::Iterator&gt;::map::&lt;Tree&lt;i32...`\n  |\n  = note: consider adding a `#![type_length_limit=\"2097152\"]` attribute to your crate\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546262696, "post_id": 53987976, "comment_id": 94813225, "body": "You should use the <code>dyn</code> notation. This is a less ambiguous notation."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546262940, "post_id": 53987976, "comment_id": 94813309, "body": "All is explained in <a href=\"https://doc.rust-lang.org/nightly/error-index.html#the-trait-cannot-require-self-sized\" rel=\"nofollow noreferrer\">the documentation</a>."}, {"owner": {"reputation": 435, "user_id": 1499196, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/c2fa33885952f08f1a32ad80619ee637?s=128&d=identicon&r=PG", "display_name": "Henning", "link": "https://stackoverflow.com/users/1499196/henning"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1546263220, "post_id": 53987976, "comment_id": 94813406, "body": "The documentation does not explain much. &gt; We cannot create an object of type Box&lt;Foo&gt; or &amp;Foo since in this case Self would not be Sized. Why?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546264199, "post_id": 53987976, "comment_id": 94813662, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51822118/why-a-function-on-a-trait-object-cannot-be-called-when-bounded-with-self-sized\">Why a function on a trait object cannot be called when bounded with `Self: Sized`?</a>"}, {"owner": {"reputation": 435, "user_id": 1499196, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/c2fa33885952f08f1a32ad80619ee637?s=128&d=identicon&r=PG", "display_name": "Henning", "link": "https://stackoverflow.com/users/1499196/henning"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546265485, "post_id": 53987976, "comment_id": 94814056, "body": "@trentcl that link helped, thanks. So the <code>Sized</code> marker is basically just a switch to enable or disable object instances of a given trait?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546265896, "post_id": 53987976, "comment_id": 94814172, "body": "As a supertrait, that&#39;s one thing it does. But in general <code>Sized</code> is just a trait that is satisfied by types with a compile-time-known size. You can use it as a supertrait to disable trait objects of the subtrait, but that&#39;s not its primary use."}], "answers": [{"tags": [], "owner": {"reputation": 3690, "user_id": 382213, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/768f2c9fe4f18067f17e5684f23bf5b8?s=128&d=identicon&r=PG", "display_name": "Dan Aloni", "link": "https://stackoverflow.com/users/382213/dan-aloni"}, "is_accepted": true, "score": 5, "last_activity_date": 1604956764, "last_edit_date": 1604956764, "creation_date": 1546275981, "answer_id": 53989780, "question_id": 53987976, "link": "https://stackoverflow.com/questions/53987976/what-does-a-trait-requiring-sized-have-to-do-with-being-unable-to-have-trait-obj/53989780#53989780", "title": "What does a trait requiring Sized have to do with being unable to have trait objects of that trait?", "body": "<p>Having <code>Self: ?Sized</code> on the <em>trait type itself</em> is a required property for a trait object, i.e. for 'object safety', even though you can have an <code>impl</code> on a <code>Self: ?Sized</code> trait with a <code>Sized</code> type. Hence confusion.</p>\n<p>It's a drawback that was decided upon in <a href=\"https://rust-lang.github.io/rfcs/0255-object-safety.html\" rel=\"nofollow noreferrer\">RFC 255</a> which deals with object safety (warning: obsolete Rust syntax).</p>\n<p>It's a long read, but one of the alternatives was to determine 'object safety' by only analyzing the methods of the trait. It is admitted in the RFC that having this restriction will make some code that could have worked not to compile. (<em>&quot;This is a breaking change and forbids some safe code which is legal today.&quot;</em>).</p>\n<p>We can go around this if we lower the restriction only to the trait members function that actually need it, e.g. this compiles:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait NodeLike {\n    fn method_foo(&amp;self) -&gt; Self\n    where\n        Self: Sized;\n}\n\nfn main() {\n    let s: Box&lt;NodeLike&gt; = panic!();\n    // Compiles!\n}\n</code></pre>\n<p>However, we cannot call those <code>Self: Sized</code> methods via a trait object, and this is a limitation that is <a href=\"https://stackoverflow.com/questions/51822118/why-a-function-on-a-trait-object-cannot-be-called-when-bounded-with-self-sized\">explained elsewhere</a>. Here, calling <code>s.method_foo();</code> will break compilation.</p>\n<p>Note that the <code>Self: Sized</code> constraint limits compilation even if the method does not make use of <code>Self</code> at all and could have been a callable trait object method otherwise.</p>\n"}], "owner": {"reputation": 435, "user_id": 1499196, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/c2fa33885952f08f1a32ad80619ee637?s=128&d=identicon&r=PG", "display_name": "Henning", "link": "https://stackoverflow.com/users/1499196/henning"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1614, "favorite_count": 0, "accepted_answer_id": 53989780, "answer_count": 1, "score": 6, "last_activity_date": 1604956764, "creation_date": 1546262452, "last_edit_date": 1546269520, "question_id": 53987976, "link": "https://stackoverflow.com/questions/53987976/what-does-a-trait-requiring-sized-have-to-do-with-being-unable-to-have-trait-obj", "title": "What does a trait requiring Sized have to do with being unable to have trait objects of that trait?", "body": "<p>I have this code (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=2ff313307dbc9b6af8d280117be970a8\" rel=\"noreferrer\">playground</a>):</p>\n\n<pre><code>trait NodeLike: Sized {}\n\nfn main() {\n    let s: Box&lt;NodeLike&gt; = panic!();\n}\n</code></pre>\n\n<p>Which does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `NodeLike` cannot be made into an object\n --&gt; src/main.rs:4:12\n  |\n4 |     let s: Box&lt;NodeLike&gt; = panic!();\n  |            ^^^^^^^^^^^^^ the trait `NodeLike` cannot be made into an object\n  |\n  = note: the trait cannot require that `Self : Sized`\n</code></pre>\n\n<p>After all I read, I still don't understand why it does not compile and why it does without the <code>Sized</code> constraint.</p>\n\n<p>As far as I know:</p>\n\n<ul>\n<li><code>Box&lt;NodeLike&gt;</code> is treated as <code>Box&lt;dyn NodeLike&gt;</code> which uses dynamic dispatch for method calls.</li>\n<li><code>Box&lt;NodeLike&gt;</code> is sized anyways, regardless of its item type.</li>\n<li>The sized/unsized theory is necessary because there are types whose size is not known upfront (like arrays or strings).</li>\n<li>The <code>Sized</code> marker on traits enforces implementing types to be sized.</li>\n</ul>\n\n<p>What does requiring that implementing types are <code>Sized</code> have to do with not being able to have objects (with dynamic dispatch) of that trait?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1546249272, "post_id": 53985641, "comment_id": 94808855, "body": "the link you give have <code>edition = &quot;2018&quot;</code> in it. how can you miss it ?"}, {"owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546249575, "post_id": 53985641, "comment_id": 94808969, "body": "I removed it, because it gave error - error: Edition 2018 is unstable and only available for nightly builds of rustc."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1546249779, "post_id": 53985641, "comment_id": 94809047, "body": "@Bopsi Update your compiler."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 1, "creation_date": 1546249896, "post_id": 53985641, "comment_id": 94809081, "body": "The alternative, if you can&#39;t update your compiler, is to add <code>extern crate rand;</code> at the beginning of <code>main.rs</code>, as @LambdaFairy hinted in their answer."}, {"owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 0, "creation_date": 1546250425, "post_id": 53985641, "comment_id": 94809228, "body": "extern crate rand still gives same error"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1546253688, "post_id": 53985641, "comment_id": 94810411, "body": "Same error? If you remove the <code>edition</code> line and add the <code>extern crate</code> line, which error do you get?"}], "answers": [{"comments": [{"owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 0, "creation_date": 1546249456, "post_id": 53985748, "comment_id": 94808926, "body": "Now I am getting this error - error: Edition 2018 is unstable and only available for nightly builds of rustc. I am udating the question"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 1, "creation_date": 1546256209, "post_id": 53985748, "comment_id": 94811198, "body": "@Bopsi you can update your rust to 2018 via rustup update if you have the previous version installed. It is on stable now so you should not get any error after succesfull update. Here is the <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html\" rel=\"nofollow noreferrer\">reference</a>"}, {"owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "edited": false, "score": 0, "creation_date": 1546411083, "post_id": 53985748, "comment_id": 94841109, "body": "after updating rust using rustup command, I added <code>extern crate rand;</code> in my main.rs. now its working"}], "tags": [], "owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "is_accepted": true, "score": 22, "last_activity_date": 1546248373, "creation_date": 1546248373, "answer_id": 53985748, "question_id": 53985641, "link": "https://stackoverflow.com/questions/53985641/using-a-crate-in-a-cargo-project-errors-with-maybe-a-missing-extern-crate/53985748#53985748", "title": "Using a crate in a Cargo project errors with &quot;maybe a missing extern crate&quot;", "body": "<p>The quick fix is to add</p>\n\n<pre><code>edition = \"2018\"\n</code></pre>\n\n<p>to your <code>Cargo.toml</code>, above the <code>[dependencies]</code> line.</p>\n\n<h2>Explanation</h2>\n\n<p>There are two major <em>editions</em> of Rust: Rust 2015 and Rust 2018. Rust 2018 is recommended for new code, but since Rust needs to be backward compatible, you have to opt in to use it.</p>\n\n<p>In Rust 2015, you had to write an <code>extern crate</code> statement before using anything outside of <code>std</code>. That's where the error message comes from. But you don't have to do that in Rust 2018 anymore, which is why setting the edition fixes it.</p>\n\n<p>There are many more changes in Rust 2018; if you're interested, you can read about them in the <a href=\"https://rust-lang-nursery.github.io/edition-guide/introduction.html\" rel=\"noreferrer\">edition guide</a>.</p>\n"}], "owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7211, "favorite_count": 1, "accepted_answer_id": 53985748, "answer_count": 1, "score": 7, "last_activity_date": 1546411649, "creation_date": 1546247750, "last_edit_date": 1546411649, "question_id": 53985641, "link": "https://stackoverflow.com/questions/53985641/using-a-crate-in-a-cargo-project-errors-with-maybe-a-missing-extern-crate", "title": "Using a crate in a Cargo project errors with &quot;maybe a missing extern crate&quot;", "body": "<p>I started learning Rust today, but I am stuck at <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"noreferrer\">this step</a>. I want use the rand crate in my project, so I updated my <code>Cargo.toml</code> as suggested in the tutorial:</p>\n\n<pre><code>[package]\nname = \"guessing_game\"\nversion = \"0.1.0\"\nauthors = [\"Novice &lt;novice.coder@gmail.com&gt;\"]\n\n[dependencies]\nrand = \"0.3.14\"\n</code></pre>\n\n<p>Importing it in my code as:</p>\n\n<pre><code>use rand::Rng;\n</code></pre>\n\n<p>It gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `rand`\n --&gt; src/main.rs:1:5\n  |\n1 | use rand::Rng;\n  |     ^^^^ maybe a missing `extern crate rand;`?\n</code></pre>\n\n<p>Am I missing something?</p>\n\n<hr>\n\n<p>I added <code>edition = \"2018\"</code> as suggested:</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"guessing_game\"\nversion = \"0.1.0\"\nauthors = [\"Novice &lt;novice.coder@gmail.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\nrand = \"0.3.14\"\n</code></pre>\n\n<p>Cargo build now gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --verbose\n   Fresh libc v0.2.45\n   Fresh rand v0.4.3\n   Fresh rand v0.3.22\n Compiling guessing_game v0.1.0 (/home/bappaditya/projects/guessing_game)\n Running `rustc --edition=2018 --crate-name guessing_game src/main.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=4d1c2d587c45b4\nc6 -C extra-filename=-4d1c2d587c45b4c6 --out-dir \n/home/bappaditya/projects/guessing_game/target/debug/deps -C \nincremental=/home/bappaditya/projects/guessing_game/target\n/debug/incremental -L \ndependency=/home/bappaditya/projects/guessing_game/target/debug/deps -- \nextern rand=/home/bappaditya/projects/guessing_game/target/debug/deps/libra\nnd-78fc4b142cc921d4.rlib`\nerror: Edition 2018 is unstable and only available for nightly builds of rustc.\n</code></pre>\n\n<hr>\n\n<p>I updated rust using <code>rustup update</code> and then added <code>extern crate rand;</code> to my main.rs. Now it's working as expected. </p>\n\n<p>The program <strong>runs</strong> but in my vscode problems tab its still showing the error - </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `rand`\n --&gt; src/main.rs:1:5\n  |\n1 | use rand::Rng;\n  |     ^^^^ maybe a missing `extern crate rand;`?\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546230405, "post_id": 53983536, "comment_id": 94804520, "body": "the stack is only &quot;faster&quot; for allocation operation cause it&#39;s O(1), once you allocate the array on the heap, it will be as fast as any stack allocate object. Don&#39;t use big size array on the stack."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546267276, "post_id": 53983536, "comment_id": 94814636, "body": "<i>a different sized stack is allocated for the program</i> \u2014 doubtful. More likely the optimizer has just completely thrown away all your code because it&#39;s never used. However, you neglected to provide any code."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1566367653, "last_edit_date": 1566367653, "creation_date": 1546258157, "answer_id": 53987349, "question_id": 53983536, "link": "https://stackoverflow.com/questions/53983536/rust-stack-size/53987349#53987349", "title": "Rust stack size", "body": "<p>Once you declare a variable in local scope, it is held on the stack. Since your stack capacity is not enough for the variable you declare, then you get a stack overflow error. I suggest to take a quick look at the book's section on the <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html#the-stack-and-the-heap\" rel=\"nofollow noreferrer\">stack and the heap</a>.</p>\n\n<p>In such big sized objects, declaring them inside a <code>Box</code> makes them stored on the heap, which may be the wiser option for you.</p>\n"}], "owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1403, "favorite_count": 0, "closed_date": 1546267113, "accepted_answer_id": 53987349, "answer_count": 1, "score": 1, "last_activity_date": 1566367653, "creation_date": 1546229919, "last_edit_date": 1546267039, "question_id": 53983536, "link": "https://stackoverflow.com/questions/53983536/rust-stack-size", "closed_reason": "Duplicate", "title": "Rust stack size", "body": "<p>I am trying to initialize a large array with shape <code>[[u64; 4096]; 64]</code>. When I try to initialize this array with <code>[[0; 4096]; 64]</code> I get different results depending on how the program is run.</p>\n\n<p>When I run with <code>cargo test</code> I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread '' has overflowed its stack\nfatal runtime error: stack overflow\n</code></pre>\n\n<p>When I run with either <code>cargo run</code> or <code>cargo test --release</code> my program runs as expected. I think this means that the stack is simply not big enough to handle 8 * 64 * 4096 bytes (just over a MB), and that when I run in release or with <code>cargo run</code> a different sized stack is allocated for the program. </p>\n\n<ul>\n<li>Is my assumption about running out of stack correct?</li>\n<li>Could I allocate the array to the heap within a <code>Box</code> instead?</li>\n<li>Is this the best option?</li>\n</ul>\n\n<p>I would really like look ups for this array to be as fast as possible.</p>\n"}, {"tags": ["postgresql", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546226395, "post_id": 53983210, "comment_id": 94803925, "body": "I don&#39;t understand, be more clear. what is postgres API, why it&#39;s should call your c lib, and what your c lib is suppose to do with rust ? Also, keep in mind someone already work on it, <a href=\"https://github.com/sfackler/rust-postgres\" rel=\"nofollow noreferrer\">github.com/sfackler/rust-postgres</a>."}, {"owner": {"reputation": 1797, "user_id": 23335, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/be752dea8513a7fcbb489662806bbbca?s=128&d=identicon&r=PG", "display_name": "stillinbeta", "link": "https://stackoverflow.com/users/23335/stillinbeta"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546226886, "post_id": 53983210, "comment_id": 94803996, "body": "I mean the <a href=\"https://www.postgresql.org/docs/8.2/xfunc-c.html\" rel=\"nofollow noreferrer\">c function api</a>. I don&#39;t want to query postgres, I want to write extensions."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1546227225, "post_id": 53983210, "comment_id": 94804049, "body": "in this case you don&#39;t need any wrapper you can directly do all in rust, and just use extern &quot;C&quot; in Rust. So postgres will just call your rust function. Take a look at <a href=\"https://bluejekyll.github.io/blog/rust/2018/12/27/announcing-pg-extend.html\" rel=\"nofollow noreferrer\">bluejekyll.github.io/blog/rust/2018/12/27/&hellip;</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546265687, "post_id": 53983210, "comment_id": 94814109, "body": "I don&#39;t understand your problem. The standard library isn&#39;t included <i>because you don&#39;t need it</i>. Multiplying a number by two is not a complicated operation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546265790, "post_id": 53983210, "comment_id": 94814140, "body": "<i><code>nm target&#47;release&#47;libfdwtrait.so | grep add_one</code></i> \u2014 your Rust symbol <b>isn&#39;t called <code>add_one</code></b>. It&#39;s <code>call_from_c</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546265912, "post_id": 53983210, "comment_id": 94814181, "body": "You need to provide more information about why you think the Rust library should have the C objects in it. It&#39;s likely that you need to provide (1) the build script (2) the Cargo.toml (3) anything else needed to make this question have a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "owner": {"reputation": 1797, "user_id": 23335, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/be752dea8513a7fcbb489662806bbbca?s=128&d=identicon&r=PG", "display_name": "stillinbeta", "link": "https://stackoverflow.com/users/23335/stillinbeta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 356, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1546265503, "creation_date": 1546225658, "last_edit_date": 1546265503, "question_id": 53983210, "link": "https://stackoverflow.com/questions/53983210/rust-library-with-exported-c-symbols-and-statically-linked-libstd", "title": "Rust library with exported C symbols and statically linked libstd", "body": "<p>I have a small bit of wrapper C that sits between the Postgres API and my Rust code. I need to export those C functions so Postgres can call it.</p>\n\n<p>I've tried both <code>dylib</code> and <code>cdylib</code> packages. <code>dylib</code> exports the symbols I expect:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ nm target/release/libfdwtrait.so | grep add_one\n0000000000005ef0 T add_one\n0000000000005ee0 T pg_finfo_add_one\n</code></pre>\n\n<p>but it requires a libstd shared object: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ldd target/release/libfdwtrait.so\n    linux-vdso.so.1 (0x000000740050d000)\n    libstd-6c11f2ad6c829596.so =&gt; not found\n    libgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x000000740049a000)\n    libc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000007400350000)\n    /lib/ld-linux-aarch64.so.1 (0x00000074004e2000)\n</code></pre>\n\n<p><code>cdylib</code> doesn't export the C functions I need:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ nm target/release/libfdwtrait.so | grep add_one\nzsh: done       nm ../target/release/libfdwtrait.so | \nzsh: exit 1     grep --color=auto add_one\n</code></pre>\n\n<p>but also doesn't require the shared object</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ldd ../target/release/libfdwtrait.so\n    linux-vdso.so.1 (0x000000796a39b000)\n    libdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x000000796a31c000)\n    libpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x000000796a2f0000)\n    libgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x000000796a2ce000)\n    libc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x000000796a184000)\n    /lib/ld-linux-aarch64.so.1 (0x000000796a370000)\n</code></pre>\n\n<p><strong>src/fdw.c</strong>:</p>\n\n<pre><code>PG_FUNCTION_INFO_V1(add_one);\n\nDatum\nadd_one(PG_FUNCTION_ARGS)\n{\n  int32   arg = PG_GETARG_INT32(0);\n  int32   result = call_from_c(arg);\n\n  PG_RETURN_INT32(result);\n}\n</code></pre>\n\n<p><strong>src/lib.rs</strong>:</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn call_from_c(i: libc::int32_t) -&gt; libc::int32_t {\n    i * 2\n}\n</code></pre>\n\n<p>I need some attributes of both <code>cdylib</code> and <code>dylib</code>. Unfortunately, they seem to be pretty hardcoded in the Cargo codebase.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 1, "creation_date": 1546211971, "post_id": 53981839, "comment_id": 94801843, "body": "Thanks - I think I had seen that mentioned before but had not caught on to the significance of it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1546278268, "post_id": 53981839, "comment_id": 94817719, "body": "@Bob: The fact that <code>if</code> and <code>match</code> are expression really trims down the number of cases in which mutable variables are necessary, embrace it wholeheartedly :)"}, {"owner": {"reputation": 587, "user_id": 2737008, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ad6f47b0d87276d629d40bf05f406f0f?s=128&d=identicon&r=PG&f=1", "display_name": "rbansal", "link": "https://stackoverflow.com/users/2737008/rbansal"}, "edited": false, "score": 0, "creation_date": 1616521819, "post_id": 53981839, "comment_id": 118027004, "body": "I have seen the conditions like if let p = fun() {  } else {}  What is the purpose of making an assignment inside the if condition?"}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 35, "last_activity_date": 1546207813, "creation_date": 1546207813, "answer_id": 53981839, "question_id": 53981783, "link": "https://stackoverflow.com/questions/53981783/idiomatic-way-of-assigning-a-value-from-an-if-else-condition-in-rust/53981839#53981839", "title": "Idiomatic way of assigning a value from an if else condition in Rust", "body": "<p>In Rust, an if/else block is an expression. That is to say, the block itself has a value, equivalent to the last expression in whatever section was executed. With that in mind, I would structure your code like this:</p>\n\n<pre><code>let s = if condition {\n    \"first\"\n} else {\n    \"second\"\n}.to_string();\n</code></pre>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2917, "favorite_count": 1, "accepted_answer_id": 53981839, "answer_count": 1, "score": 22, "last_activity_date": 1546362672, "creation_date": 1546207301, "last_edit_date": 1546362672, "question_id": 53981783, "link": "https://stackoverflow.com/questions/53981783/idiomatic-way-of-assigning-a-value-from-an-if-else-condition-in-rust", "title": "Idiomatic way of assigning a value from an if else condition in Rust", "body": "<p>What is the preferred way of creating or assigning one of several objects to variables inside an \"if - else\" construct in Rust? Because of the scoping, it seems the variable must be created outside the if - else. Neither of the ways I've thought of seem very nice. Using strings as an example, here's one way, but it generates a warning about an unused assignment:</p>\n\n<pre><code>let mut s = String::new();\nif condition {\n    s = \"first\".to_string();\n} else {\n    s = \"second\".to_string();\n}\n</code></pre>\n\n<p>Another alternative is this:</p>\n\n<pre><code>let mut s = \"second\".to_string();\nif condition {\n    s = \"first\".to_string();\n}\n</code></pre>\n\n<p>It's shorter and doesn't generate a warning, but means <code>s</code> is being assigned twice, and means that <code>\"second\".to_string()</code> runs but is wasted if <code>condition</code> is true. If instead of simple string creation these were expensive operations (perhaps with side effects) this method wouldn't be suitable.</p>\n\n<p>Is there a better alternative?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1546181742, "post_id": 53978202, "comment_id": 94794669, "body": "I have the same environment, executed this bash: <code>for i in {1..200}; do echo &quot;&#47;&#47;--&quot; &gt;&gt; src&#47;main.rs; cargo run --verbose;  done</code> , but couldn&#39;t reproduce your error."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1546187750, "post_id": 53978202, "comment_id": 94796172, "body": "The message &quot;killed&quot; is suspicious. Since you did not kill the process, something else must have. Maybe your system is very low on memory, and the kernel is killiing the Cargo process?"}, {"owner": {"reputation": 131, "user_id": 5591677, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/Hm7ZY.jpg?s=128&g=1", "display_name": "JCDenton", "link": "https://stackoverflow.com/users/5591677/jcdenton"}, "edited": false, "score": 0, "creation_date": 1546196827, "post_id": 53978202, "comment_id": 94798347, "body": "I don&#39;t think so. I have 16 gb out of 8 will be free"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546217711, "post_id": 53978202, "comment_id": 94802776, "body": "Try running the compiled binary in a debugger. For example, <code>lldb target&#47;debug&#47;guessing_game</code>. Once in LLDB, type <code>run</code>. Hopefully, this will generate an error and you will be returned to the LLDB prompt. Once there, type <code>bt</code>. Copy and paste all that output here."}, {"owner": {"reputation": 131, "user_id": 5591677, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/Hm7ZY.jpg?s=128&g=1", "display_name": "JCDenton", "link": "https://stackoverflow.com/users/5591677/jcdenton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546239137, "post_id": 53978202, "comment_id": 94806171, "body": "@Shepmaster I tried that but it hangs on run and returns <code>error: process exited with status -1 (unable to attach)</code>"}], "owner": {"reputation": 131, "user_id": 5591677, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/Hm7ZY.jpg?s=128&g=1", "display_name": "JCDenton", "link": "https://stackoverflow.com/users/5591677/jcdenton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 119, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1546217542, "creation_date": 1546178177, "last_edit_date": 1546217542, "question_id": 53978202, "link": "https://stackoverflow.com/questions/53978202/inconsistent-build-behaviours-in-rust-on-macos-mojave-10-14-2", "title": "Inconsistent build behaviours in Rust on macOS Mojave 10.14.2", "body": "<p>I am new to Rust and have been following the Rust book tutorials. A lot of the times when I try to run a project it seems to compile but doesn't run.</p>\n\n<p>Here is an example when I try to run the first part of the program for the <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">guessing game</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --verbose                                                                     (master\u2731)\n       Fresh guessing_game v0.1.0 (/Users/rohana/Documents/Projects/rust/guessing_game)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.04s\n     Running `target/debug/guessing_game`\n[1]    30294 killed     cargo run --verbose\n</code></pre>\n\n<p>However the same code will sometimes run if I make any changes like adding comments, then running and reverting and running again. Not always though.</p>\n\n<p>I am using Rust 1.31.1 and Cargo 1.31.0 on macOS Mojave 10.14.2.</p>\n\n<p>This is the code for reference, but the same problem also occurs on a blank \"Hello World!\" program:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    println!(\"Guess the number\");\n    println!(\"Please enter your guess\");\n    let mut guess = String::new();\n\n    io::stdin()\n        .read_line(&amp;mut guess)\n        .expect(\"Failed to read line\");\n\n    println!(\"You guessed {}\", guess);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546173582, "post_id": 53977444, "comment_id": 94792824, "body": "why don&#39;t just write &quot;struct Images&quot; if struct doesn&#39;t need <code>T</code> ? Please describe more what you want. If you really want to &quot;force&quot; it, you can use <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\">phamtom data</a>, but I feel that you should not use it in your case."}, {"owner": {"reputation": 394, "user_id": 828765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fbe5a0dcb652ad7f19f8861b76c22f?s=128&d=identicon&r=PG", "display_name": "myszon", "link": "https://stackoverflow.com/users/828765/myszon"}, "edited": false, "score": 0, "creation_date": 1546191819, "post_id": 53977444, "comment_id": 94797177, "body": "The struct does not need T, but the methods like write on Images do need it. All I need in practice is the type, as these functions do not use self. Phantom data seems to be what I was looking for."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546213093, "post_id": 53977444, "comment_id": 94802015, "body": "That doesn&#39;t add information, I still think you use the bad tool for your problem."}], "answers": [{"comments": [{"owner": {"reputation": 394, "user_id": 828765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fbe5a0dcb652ad7f19f8861b76c22f?s=128&d=identicon&r=PG", "display_name": "myszon", "link": "https://stackoverflow.com/users/828765/myszon"}, "edited": false, "score": 0, "creation_date": 1546191346, "post_id": 53977998, "comment_id": 94797052, "body": "Yes, this is exactly my case. T provides functions that do not take self."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546213016, "post_id": 53977998, "comment_id": 94802000, "body": "&quot;if T provides functions that do not take a self&quot;, and ? just add the generic to the impl not the struct, I don&#39;t understand the use case. On the contrary I think that typical bad use case of phantom data."}, {"owner": {"reputation": 394, "user_id": 828765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fbe5a0dcb652ad7f19f8861b76c22f?s=128&d=identicon&r=PG", "display_name": "myszon", "link": "https://stackoverflow.com/users/828765/myszon"}, "edited": false, "score": 1, "creation_date": 1546311694, "post_id": 53977998, "comment_id": 94823308, "body": "The actual use case (<a href=\"https://github.com/myszon/raytracer/tree/master/src/format\" rel=\"nofollow noreferrer\">github.com/myszon/raytracer/tree/master/src/format</a>) is a bit more complex. Instances of <code>Images</code> are not used directly, but as trait objects to choose behaviour in runtime. So if generic was just added to the <code>impl</code>, then the compiler would not be able to chose the correct variant of <code>write</code> when called from a trait object."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 2, "last_activity_date": 1546176475, "creation_date": 1546176475, "answer_id": 53977998, "question_id": 53977444, "link": "https://stackoverflow.com/questions/53977444/how-can-i-define-a-generic-struct-in-rust-without-one-of-the-fields-being-of-the/53977998#53977998", "title": "How can I define a generic struct in Rust without one of the fields being of the generic type?", "body": "<p><a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a> can be used \"to mark things that \"act like\" they own a T\".</p>\n\n<p>So, you could write:</p>\n\n<pre><code>pub struct Images&lt;T: ImageFormat&gt; {\n    path: String,\n    phantom: PhantomData&lt;T&gt;, // mark that Image \"acts like\" it owns a T\n}\n</code></pre>\n\n<p>In initialization, you simply provide a <code>PhantomData</code> for the respective field:</p>\n\n<pre><code>Images {\n    path: ...\n    phantom: PhantomData,\n}\n</code></pre>\n\n<p>As mentioned by others, you may be better off without the type parameter in the first place, but I have had cases where they seem perfectly reasonable to me (e.g. if <code>T</code> provides functions that do not take a <code>self</code>).</p>\n"}], "owner": {"reputation": 394, "user_id": 828765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fbe5a0dcb652ad7f19f8861b76c22f?s=128&d=identicon&r=PG", "display_name": "myszon", "link": "https://stackoverflow.com/users/828765/myszon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "closed_date": 1546217386, "accepted_answer_id": 53977998, "answer_count": 1, "score": 1, "last_activity_date": 1546200610, "creation_date": 1546171600, "last_edit_date": 1546200610, "question_id": 53977444, "link": "https://stackoverflow.com/questions/53977444/how-can-i-define-a-generic-struct-in-rust-without-one-of-the-fields-being-of-the", "closed_reason": "Duplicate", "title": "How can I define a generic struct in Rust without one of the fields being of the generic type?", "body": "<p>I have the following problem (it is simplified a bit).</p>\n\n<p>There is a trait which supplies a set of functions which do not use <code>self</code>:</p>\n\n<pre><code>pub trait ImageFormat {\n    fn write(data: Vec&lt;[u8; 3]&gt;, path: &amp;str, ...) -&gt; io::Result&lt;()&gt;;\n    ...\n}\n</code></pre>\n\n<p>with several implementations.</p>\n\n<p>There also is a struct which uses functions from that trait:</p>\n\n<pre><code>pub struct Images&lt;T: ImageFormat&gt; {\n    path: String,\n    ...\n}\n\nimpl&lt;T&gt; Images&lt;T&gt; where T: ImageFormat {\n    pub fn setup(path: &amp;str, ...) -&gt; Images&lt;T&gt; {\n        Images {\n            path: String::from(path),\n            ...\n        }\n    }\n\n    fn write(&amp;mut self, data: Vec&lt;[u8; 3]&gt;, ...) -&gt; io::Result&lt;()&gt; {\n        T::write(data, &amp;self.path[..], ...)\n    }\n    ...\n}\n</code></pre>\n\n<p>This does not compile, because the struct does not have a field of type T.\nIt works if I do this, but it feels like a hack:</p>\n\n<pre><code>pub struct Images&lt;T: ImageFormat&gt; {\n    _image_format: Option&lt;T&gt;,\n    path: String,\n    ...\n}\n\nimpl&lt;T&gt; Images&lt;T&gt; where T: ImageFormat {\n    pub fn setup(path: &amp;str, ...) -&gt; Images&lt;T&gt; {\n        Images {\n            _image_format: None,\n            path: String::from(path),\n            ...\n        }\n    }\n...\n}\n</code></pre>\n\n<p>Is there any idiomatic way of doing this?</p>\n"}, {"tags": ["string", "replace", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1546130236, "post_id": 53974404, "comment_id": 94786590, "body": "<i>iterate [...] and do a search and replace for every index</i> \u2014 What behavior do you want if you have <code>vec![&quot;$1&quot;, &quot;x&quot;]</code> and <code>$0$1</code>? What about <code>vec![&quot;$&quot;, &quot;2&quot;, &quot;moo&quot;]</code> and <code>$0$1</code>?"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546131301, "post_id": 53974404, "comment_id": 94786764, "body": "@Shepmaster I have control over the inputs, and the vector will never contain any <code>$</code>. But preferably it would not replace recursively, so in your example <code>$1x</code> and <code>$2</code>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1546131171, "creation_date": 1546131171, "answer_id": 53974499, "question_id": 53974404, "link": "https://stackoverflow.com/questions/53974404/replacing-numbered-placeholders-with-elements-of-a-vector-in-rust/53974499#53974499", "title": "Replacing numbered placeholders with elements of a vector in Rust?", "body": "<p>I would use <a href=\"https://crates.io/crates/regex\" rel=\"nofollow noreferrer\">a regex</a></p>\n\n<pre><code>use regex::Regex; // 1.1.0\n\nfn example(s: &amp;str, vals: &amp;[&amp;str]) -&gt; String {\n    let r = Regex::new(r#\"\\$(\\d+)\"#).unwrap();\n\n    let mut start = 0;\n    let mut new = String::new();\n\n    for caps in r.captures_iter(s) {\n        let m = caps.get(0).expect(\"Regex group 0 missing\");\n        let d = caps.get(1).expect(\"Regex group 1 missing\");\n        let d: usize = d.as_str().parse().expect(\"Could not parse index\");\n\n        // Copy non-placeholder\n        new.push_str(&amp;s[start..m.start()]);\n        // Copy placeholder\n        new.push_str(&amp;vals[d]);\n\n        start = m.end()\n    }\n\n    // Copy non-placeholder\n    new.push_str(&amp;s[start..]);\n\n    new\n}\n\nfn main() {\n    assert_eq!(\"ab\", example(\"$0$1\", &amp;[\"a\", \"b\"]));\n    assert_eq!(\"$1b\", example(\"$0$1\", &amp;[\"$1\", \"b\"]));\n    assert_eq!(\"moo\", example(\"moo\", &amp;[]));\n    assert_eq!(\"abc\", example(\"a$0b$0c\", &amp;[\"\"]));\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32257273/155423\">Split a string keeping the separators</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546222089, "post_id": 53974800, "comment_id": 94803397, "body": "I think this answer is better than mine; I&#39;m sad that I forgot that the regex crate has this functionality."}], "tags": [], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "is_accepted": true, "score": 3, "last_activity_date": 1546209658, "last_edit_date": 1546209658, "creation_date": 1546135799, "answer_id": 53974800, "question_id": 53974404, "link": "https://stackoverflow.com/questions/53974404/replacing-numbered-placeholders-with-elements-of-a-vector-in-rust/53974800#53974800", "title": "Replacing numbered placeholders with elements of a vector in Rust?", "body": "<p>This solution is inspired (including copied test cases) by <a href=\"https://stackoverflow.com/a/53974499/2200659\">Shepmaster's</a>, but simplifies things by using the <a href=\"https://docs.rs/regex/1.1.0/regex/struct.Regex.html#method.replace\" rel=\"nofollow noreferrer\"><code>replace_all</code></a> method.</p>\n\n<pre><code>use regex::{Regex, Captures};\n\nfn template_replace(template: &amp;str, values: &amp;[&amp;str]) -&gt; String {\n    let regex = Regex::new(r#\"\\$(\\d+)\"#).unwrap();\n    regex.replace_all(template, |captures: &amp;Captures| {\n        values\n            .get(index(captures))\n            .unwrap_or(&amp;\"\")\n    }).to_string()\n}\n\nfn index(captures: &amp;Captures) -&gt; usize {\n    captures.get(1)\n        .unwrap()\n        .as_str()\n        .parse()\n        .unwrap()\n}\n\nfn main() {\n    assert_eq!(\"ab\", template_replace(\"$0$1\", &amp;[\"a\", \"b\"]));\n    assert_eq!(\"$1b\", template_replace(\"$0$1\", &amp;[\"$1\", \"b\"]));\n    assert_eq!(\"moo\", template_replace(\"moo\", &amp;[]));\n    assert_eq!(\"abc\", template_replace(\"a$0b$0c\", &amp;[\"\"]));\n    assert_eq!(\"abcde\", template_replace(\"a$0c$1e\", &amp;[\"b\", \"d\"]));\n    println!(\"It works!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 334, "favorite_count": 0, "accepted_answer_id": 53974800, "answer_count": 2, "score": 0, "last_activity_date": 1546209658, "creation_date": 1546129902, "last_edit_date": 1546131420, "question_id": 53974404, "link": "https://stackoverflow.com/questions/53974404/replacing-numbered-placeholders-with-elements-of-a-vector-in-rust", "title": "Replacing numbered placeholders with elements of a vector in Rust?", "body": "<p>I have the following:</p>\n\n<ul>\n<li>A <code>Vec&lt;&amp;str&gt;</code>.</li>\n<li>A <code>&amp;str</code> that may contain <code>$0</code>, <code>$1</code>, etc. referencing the elements in the vector.</li>\n</ul>\n\n<p>I want to get a version of my <code>&amp;str</code> where all occurences of <code>$i</code> are replaced by the ith element of the vector. So if I have <code>vec![\"foo\", \"bar\"]</code> and <code>$0$1</code>, the result would be <code>foobar</code>.</p>\n\n<p>My first naive approach was to iterate over <code>i = 1..N</code> and do a search and replace for every index. However, this is a quite ugly and inefficient solution. Also, it gives undesired outputs if any of the values in the vector contains the <code>$</code> character.</p>\n\n<p>Is there a better way to do this in Rust? </p>\n"}, {"tags": ["loops", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 4655, "user_id": 1513559, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/NIt1y.jpg?s=128&g=1", "display_name": "Ben Pious", "link": "https://stackoverflow.com/users/1513559/ben-pious"}, "edited": false, "score": 0, "creation_date": 1546183742, "post_id": 53973000, "comment_id": 94795135, "body": "This documentation was exactly what I needed. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1546115570, "last_edit_date": 1546115570, "creation_date": 1546114179, "answer_id": 53973000, "question_id": 53972440, "link": "https://stackoverflow.com/questions/53972440/is-it-possible-to-specify-the-lifetime-of-an-iteration-of-a-loop-explicitly/53973000#53973000", "title": "Is it possible to specify the lifetime of an iteration of a loop explicitly?", "body": "<blockquote>\n  <p>Is it possible to specify the lifetime of an iteration of a loop explicitly?</p>\n</blockquote>\n\n<p>No. Such a thing is simply not needed.</p>\n\n<hr>\n\n<p>You didn't provide an MCVE corresponding to your original problem, so it's impossible to provide a solution that will address that. My powers of intuition and your comment \"write out what the compiler has elided\" tell me that you should probably look at:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47996700/155423\">How do I bound a generic type with a trait that requires a lifetime parameter if I create the reference inside the function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n</ul>\n\n<p>TL;DR:</p>\n\n<pre><code>fn g(a: &amp;mut str, closure: impl for&lt;'a, 'd&gt; Fn(&amp;'a mut str, &amp;'d str) -&gt; ())\n</code></pre>\n"}], "owner": {"reputation": 4655, "user_id": 1513559, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/NIt1y.jpg?s=128&g=1", "display_name": "Ben Pious", "link": "https://stackoverflow.com/users/1513559/ben-pious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 53973000, "answer_count": 1, "score": 2, "last_activity_date": 1546115570, "creation_date": 1546109483, "last_edit_date": 1546113896, "question_id": 53972440, "link": "https://stackoverflow.com/questions/53972440/is-it-possible-to-specify-the-lifetime-of-an-iteration-of-a-loop-explicitly", "title": "Is it possible to specify the lifetime of an iteration of a loop explicitly?", "body": "<p>The following code, which takes advantage of lifetime elision, compiles: </p>\n\n<pre><code>fn g(a: &amp;mut str, closure: impl Fn(&amp;mut str, &amp;str) -&gt; ()) {\n    let data = vec![];\n    for d in data.iter() {\n        closure(a, d);\n    }\n}\n</code></pre>\n\n<p>However, suppose that I need to specify the lifetime of variables in the closure explicitly (in my case, the callsite is ambiguous unless I do so). If I add lifetimes explicitly, the compiler complains that <code>a</code> is mutably borrowed in previous iterations of the closure. </p>\n\n<pre><code>fn g&lt;'b, 'd&gt;(a: &amp;'b mut str, closure: impl Fn(&amp;'d mut str, &amp;str) -&gt; ()) {\n    let data: Vec&lt;&amp;str&gt; = vec![];\n    'd: for d in data.iter() {\n        closure(a, d);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: label name `'d` shadows a lifetime name that is already in scope\n --&gt; src/lib.rs:3:5\n  |\n1 | fn g&lt;'b, 'd&gt;(a: &amp;'b mut str, closure: impl Fn(&amp;'d mut str, &amp;str) -&gt; ()) {\n  |          -- first declared here\n2 |     let data: Vec&lt;&amp;str&gt; = vec![];\n3 |     'd: for d in data.iter() {\n  |     ^^ lifetime 'd already in scope\n\nerror[E0312]: lifetime of reference outlives lifetime of borrowed content...\n --&gt; src/lib.rs:4:17\n  |\n4 |         closure(a, d);\n  |                 ^\n  |\nnote: ...the reference is valid for the lifetime 'd as defined on the function body at 1:10...\n --&gt; src/lib.rs:1:10\n  |\n1 | fn g&lt;'b, 'd&gt;(a: &amp;'b mut str, closure: impl Fn(&amp;'d mut str, &amp;str) -&gt; ()) {\n  |          ^^\nnote: ...but the borrowed content is only valid for the lifetime 'b as defined on the function body at 1:6\n --&gt; src/lib.rs:1:6\n  |\n1 | fn g&lt;'b, 'd&gt;(a: &amp;'b mut str, closure: impl Fn(&amp;'d mut str, &amp;str) -&gt; ()) {\n  |      ^^\n</code></pre>\n\n<p>I assume that's because the compiler won't guess that I only intend <code>'d</code> to last for each iteration of the loop. I searched for a way to refer to the lifetime, but all I could find was that I have the ability to specify a \"lifetime or label\" in the Rust reference book, which seems to only be a label for all intents and purposes. </p>\n\n<p>Is there any way to explicitly specify what the lifetime of each loop iteration is, or otherwise to explicitly write out what the compiler has elided in the first example? </p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 448, "user_id": 4584387, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/gRotu.png?s=128&g=1", "display_name": "tga", "link": "https://stackoverflow.com/users/4584387/tga"}, "edited": false, "score": 1, "creation_date": 1546138278, "post_id": 53974922, "comment_id": 94787548, "body": "Thank you, it&#39;s very clear and solves the problem completely."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1546137979, "creation_date": 1546137979, "answer_id": 53974922, "question_id": 53972194, "link": "https://stackoverflow.com/questions/53972194/how-to-use-a-macro-which-is-defined-by-another-macro-in-the-same-crate/53974922#53974922", "title": "How to use a macro which is defined by another macro in the same crate?", "body": "<p>Read and follow the compiler's instructions:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0659]: `m2` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n  --&gt; src/lib.rs:22:5\n   |\n22 |     m2!();\n   |     ^^ ambiguous name\n   |\nnote: `m2` could refer to the macro defined here\n  --&gt; src/lib.rs:7:13\n   |\n7  | /             macro_rules! m2 {\n8  | |                 () =&gt; {};\n9  | |             }\n   | |_____________^\n...\n21 |       m1!();\n   |       ------ in this macro invocation\nnote: `m2` could also refer to the macro defined here\n  --&gt; src/lib.rs:7:13\n   |\n7  | /             macro_rules! m2 {\n8  | |                 () =&gt; {};\n9  | |             }\n   | |_____________^\n...\n13 |       m1!();\n   |       ------ in this macro invocation\n\nerror: a macro named `m2` has already been exported\n  --&gt; src/lib.rs:7:13\n   |\n7  | /             macro_rules! m2 {\n8  | |                 () =&gt; {};\n9  | |             }\n   | |_____________^ `m2` already exported\n...\n21 |       m1!();\n   |       ------ in this macro invocation\n   |\n   = note: #[deny(duplicate_macro_exports)] on by default\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n   = note: for more information, see issue #35896 &lt;https://github.com/rust-lang/rust/issues/35896&gt;\nnote: previous macro export is now shadowed\n  --&gt; src/lib.rs:7:13\n   |\n7  | /             macro_rules! m2 {\n8  | |                 () =&gt; {};\n9  | |             }\n   | |_____________^\n...\n13 |       m1!();\n   |       ------ in this macro invocation\n\nerror: macro-expanded `macro_export` macros from the current crate cannot be referred to by absolute paths\n  --&gt; src/lib.rs:19:9\n   |\n19 |     use crate::m2; \n   |         ^^^^^^^^^\n   |\n   = note: #[deny(macro_expanded_macro_exports_accessed_by_absolute_paths)] on by default\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #52234 &lt;https://github.com/rust-lang/rust/issues/52234&gt;\nnote: the macro is defined here\n  --&gt; src/lib.rs:7:13\n   |\n7  | /             macro_rules! m2 {\n8  | |                 () =&gt; {};\n9  | |             }\n   | |_____________^\n...\n21 |       m1!();\n   |       ------ in this macro invocation\n</code></pre>\n\n<p>Specifically:</p>\n\n<blockquote>\n  <p>error: macro-expanded <code>macro_export</code> macros from the current crate cannot be referred to by absolute paths</p>\n</blockquote>\n\n<p>Applied:</p>\n\n<ol>\n<li>Don't import the macro; there's no need.</li>\n<li>Don't call <code>m1</code>; doing so creates a second <code>m2</code>.</li>\n</ol>\n\n<p><strong>test.rs</strong></p>\n\n<pre><code>// use crate::m1;\n// use crate::m2; \n\n// m1!();\nm2!();\n</code></pre>\n"}], "owner": {"reputation": 448, "user_id": 4584387, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/gRotu.png?s=128&g=1", "display_name": "tga", "link": "https://stackoverflow.com/users/4584387/tga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "accepted_answer_id": 53974922, "answer_count": 1, "score": 5, "last_activity_date": 1546137979, "creation_date": 1546107557, "last_edit_date": 1546137655, "question_id": 53972194, "link": "https://stackoverflow.com/questions/53972194/how-to-use-a-macro-which-is-defined-by-another-macro-in-the-same-crate", "title": "How to use a macro which is defined by another macro in the same crate?", "body": "<p>I'm defining a macro that defines other macros like this:</p>\n\n<p><strong>macros.rs</strong></p>\n\n<pre><code>#[macro_export]\nmacro_rules! m1 {\n    () =&gt; {\n        #[macro_export]\n        macro_rules! m2 {\n            () =&gt; {}\n        }\n    }\n}\n\nm1!();\nm2!(); // no problem;\n</code></pre>\n\n<p>I can use <code>m2!</code> in another crate by <code>use {{crate_name}}::macros::*</code>, and I can use <code>m2!</code> in <code>macros.rs</code>, but I don't know how to use <code>m2!</code> in files that are in the same crate.</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>#[macro_use]\npub mod macros;\npub mod test;\npub mod test2;\n</code></pre>\n\n<p><strong>test.rs</strong> (in the same crate as macros.rs)</p>\n\n<pre><code>use crate::m1; // no problem\nuse crate::m2; // ERROR: macro-expanded `macro_export` macros from the current crate cannot be referred to by absolute paths\n\nm1!(); // no problem\nm2!(); // error, no m2\n</code></pre>\n\n<p><strong>test2.rs</strong></p>\n\n<pre><code>use crate::*;\nm2!(); // this works, but I don't really want to use crate::*\n</code></pre>\n\n<p><strong>examples/yo.rs</strong></p>\n\n<pre><code>use {{crate_name}}::m2;\nm2!(); // no problem\n</code></pre>\n\n<p>What is the correct way to use that <code>m2</code> macro in other files in the same crate? I'm using Rust 1.31.1.</p>\n"}, {"tags": ["collections", "rust", "iterator"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1546106108, "post_id": 53971954, "comment_id": 94781537, "body": "You missed <code>where A: Step</code>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546106845, "post_id": 53972046, "comment_id": 94781751, "body": "@Shepmaster Good find. But I think that question is mainly about the endpoint and that answer just incidentally also mentions the <code>char</code> &quot;problem&quot;. Having a dedicated question for &quot;char iterator&quot; is better IMO."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "edited": false, "score": 0, "creation_date": 1546111878, "post_id": 53972046, "comment_id": 94783009, "body": "Thanks! I figured there must be a difference between <code>char</code>s and <code>u8</code>s I was missing, but I can&#39;t read Rust that well yet, so I wasn&#39;t able to figure out that the root cause of &quot;<code>RangeInclusive&lt;char&gt;</code> doesn&#39;t implement <code>Iterator</code>&quot; is that <code>char</code> doesn&#39;t implement <code>Step</code>.  Thank you also for clarifying the usage of the term &quot;blanket implementation&quot;, I&#39;ll be more careful in the future :)  Re: the dupe, I think SO did suggest it to me when I was composing this question, but the title felt so clearly not like my problem that I didn&#39;t even click it..."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 11, "last_activity_date": 1595023093, "last_edit_date": 1595023093, "creation_date": 1546106479, "answer_id": 53972046, "question_id": 53971954, "link": "https://stackoverflow.com/questions/53971954/why-cant-a-range-of-char-be-collected/53972046#53972046", "title": "Why can&#39;t a range of char be collected?", "body": "<p><strong>EDIT 2020-07-17:</strong> since Rust 1.45.0, the trait <code>Step</code> is implemented for <code>char</code>, making <code>Range&lt;char&gt;</code> (and some other char ranges) work as an iterator. The code in the question now compiles without problem!</p>\n<p>Old answer below.</p>\n<hr />\n<p>The expression <code>b'a'..=b'z'</code> has the type <code>RangeInclusive&lt;u8&gt;</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6bfa512bb7ea6d4be7163ff8dc4d72fd\" rel=\"nofollow noreferrer\">see on Playground</a>) because the expression <code>b'a'</code> has the type <code>u8</code>: that's what the <code>b</code> in front of the character literal is for. On the other hand, the expression <code>'a'..='z'</code> (without the <code>b</code>s) has the type <code>RangeInclusive&lt;char&gt;</code>.</p>\n<blockquote>\n<p>[...] there is a blanket implementation of <code>Iterator</code> for <code>RangeInclusive</code>.</p>\n</blockquote>\n<p>For one, this is not what we call &quot;blanket implementation&quot; (this is when the impl block is <code>for T</code> or <code>for &amp;T</code> (or similar) with <code>T</code> being a generic type). But yes, there is an impl. But let's take a closer look:</p>\n<pre><code>impl&lt;A&gt; Iterator for RangeInclusive&lt;A&gt; \nwhere\n    A: Step,   // &lt;--- important\n</code></pre>\n<p>The <code>A: Step</code> bound is important. As you can see in <a href=\"https://doc.rust-lang.org/std/iter/trait.Step.html\" rel=\"nofollow noreferrer\">the documentation for <code>Step</code></a>, this trait is implemented for all primitive integer types, but not for <code>char</code>. This means that there is no clear &quot;add one&quot; operation on characters. Yes, you <em>could</em> define it to be the next valid Unicode codepoint, but the Rust developers probably decided against that for a good reason.</p>\n<p>As a consequence, <strong><code>RangeInclusive&lt;char&gt;</code> does not implement <code>Iterator</code></strong>.</p>\n<p>So your solution is already a good one. I would probably write this:</p>\n<pre><code>(b'a'..=b'z').map(char::from).collect::&lt;Vec&lt;_&gt;&gt;()\n</code></pre>\n<p>The only real advantage is that in this version, <code>char</code> doesn't appear twice.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 3, "last_activity_date": 1594911558, "creation_date": 1594911558, "answer_id": 62937574, "question_id": 53971954, "link": "https://stackoverflow.com/questions/53971954/why-cant-a-range-of-char-be-collected/62937574#62937574", "title": "Why can&#39;t a range of char be collected?", "body": "<p>The problem was that the iteration capabilities of range types depend on the <code>Step</code> trait (<a href=\"https://stackoverflow.com/a/53972046\">see extended answer</a>).\nHowever, starting from <a href=\"https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html\" rel=\"nofollow noreferrer\">Rust 1.45</a>, <code>char</code> also implements <code>Step</code> (<a href=\"https://github.com/rust-lang/rust/pull/72413\" rel=\"nofollow noreferrer\">PR 72413</a>), which means that the code in the question now works!</p>\n<pre><code>let ascii_lowercase: Vec&lt;char&gt; = ('a'..='h').collect();\nassert_eq!(\n    ascii_lowercase,\n    vec!['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'],\n);\n</code></pre>\n"}], "owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1420, "favorite_count": 0, "accepted_answer_id": 53972046, "answer_count": 2, "score": 7, "last_activity_date": 1595023093, "creation_date": 1546105710, "last_edit_date": 1546106650, "question_id": 53971954, "link": "https://stackoverflow.com/questions/53971954/why-cant-a-range-of-char-be-collected", "title": "Why can&#39;t a range of char be collected?", "body": "<p>I'm trying to generate a vector containing lowercase ASCII characters. This more convoluted approach works:</p>\n\n<pre><code>let ascii_lowercase = (b'a'..=b'z').map(|b| b as char).collect::&lt;Vec&lt;char&gt;&gt;();\n</code></pre>\n\n<p>But this more straightforward one, which I came up with in the first place, does not:</p>\n\n<pre><code>let ascii_lowercase = ('a'..='z').collect::&lt;Vec&lt;char&gt;&gt;();\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `collect` found for type `std::ops::RangeInclusive&lt;char&gt;` in the current scope\n --&gt; src/main.rs:2:39\n  |\n2 |     let ascii_lowercase = ('a'..='z').collect::&lt;Vec&lt;char&gt;&gt;();\n  |                                       ^^^^^^^\n  |\n  = note: the method `collect` exists but the following trait bounds were not satisfied:\n          `std::ops::RangeInclusive&lt;char&gt; : std::iter::Iterator`\n          `&amp;mut std::ops::RangeInclusive&lt;char&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>Which is weird, because as far as I understand, there is a <a href=\"https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html#impl-Iterator\" rel=\"noreferrer\">blanket implementation of <code>Iterator</code> for <code>RangeInclusive</code></a>.</p>\n\n<p>Is it impossible to use a range of chars as an iterator? If so, why? If not, what am I doing wrong? I'm using stable Rust 2018 1.31.1.</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1565803700, "last_edit_date": 1565803700, "creation_date": 1546102729, "answer_id": 53971532, "question_id": 53971428, "link": "https://stackoverflow.com/questions/53971428/how-do-i-define-a-macro-which-defines-another-macro-when-the-inner-macro-takes-a/53971532#53971532", "title": "How do I define a macro which defines another macro when the inner macro takes arguments?", "body": "<p>This is a <a href=\"https://github.com/rust-lang/rust/issues/35853\" rel=\"nofollow noreferrer\">known issue (#35853)</a>. The current recommended workaround is to pass in the dollar sign <code>$</code> as a separate token. You can then call yourself, passing in the <code>$</code>:</p>\n\n<pre><code>macro_rules! test {\n    ($name:ident: $count:expr) =&gt; { test!($name: $count, $) };\n\n    ($name:ident: $count:expr, $dol:tt) =&gt; {\n        macro_rules! $name {\n            ($dol($v:expr),*) =&gt; {}\n        }\n    };\n}\n\nfn main() {\n    test!(yo: 2);\n    yo!(42);\n}\n</code></pre>\n"}], "owner": {"reputation": 448, "user_id": 4584387, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/gRotu.png?s=128&g=1", "display_name": "tga", "link": "https://stackoverflow.com/users/4584387/tga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 53971532, "answer_count": 1, "score": 5, "last_activity_date": 1565803700, "creation_date": 1546101967, "last_edit_date": 1546102799, "question_id": 53971428, "link": "https://stackoverflow.com/questions/53971428/how-do-i-define-a-macro-which-defines-another-macro-when-the-inner-macro-takes-a", "title": "How do I define a macro which defines another macro when the inner macro takes arguments?", "body": "<p>Minimal code to reproduce:</p>\n\n<pre><code>macro_rules! test {\n    ($name:ident: $count:expr) =&gt; {\n        macro_rules! $name {\n            ($($v:expr),*) =&gt; {}\n        }\n    }\n}\n\ntest!(yo: 123);\n</code></pre>\n\n<p>Got error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: attempted to repeat an expression containing no syntax variables matched as repeating at this depth\n --&gt; src/lib.rs:4:15\n  |\n4 |             ($($v:expr),*) =&gt; {}\n  |               ^^^^^^^^^\n</code></pre>\n\n<p>Removing <code>$count:expr</code> or changing <code>$count:expr</code> to another type like <code>$count:block</code> omits the error, but I really need it to be <code>expr</code>. What does the error mean?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 1, "last_activity_date": 1546101874, "creation_date": 1546101874, "answer_id": 53971412, "question_id": 53971157, "link": "https://stackoverflow.com/questions/53971157/reference-with-supertype-lifetime-cant-be-used-for-subtype-lifetime/53971412#53971412", "title": "Reference with supertype lifetime can&#39;t be used for subtype lifetime", "body": "<blockquote>\n  <p>So what would go wrong if this was allowed?</p>\n</blockquote>\n\n<p>Your reasoning was <em>inverted</em> in this example: a constraint <code>'b: 'a</code> reads as <em>\"<code>'b</code> lives as long as <code>'a</code>\"</em>. Since the output of <code>test</code> needs to live for <em>at least</em> as long as the lifetime <code>'b</code>, <code>'a</code> still represents a possibly incompatible lifetime, and <code>first</code> might actually not live long enough.</p>\n\n<p>If you flip the lifetimes around, the code will then compile.</p>\n\n<pre><code>fn test&lt;'a, 'b: 'a&gt;(first: &amp;'b mut str, second: &amp;'a mut str) -&gt; &amp;'a str {\n    first\n}\n</code></pre>\n"}], "owner": {"reputation": 4655, "user_id": 1513559, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/NIt1y.jpg?s=128&g=1", "display_name": "Ben Pious", "link": "https://stackoverflow.com/users/1513559/ben-pious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 53971412, "answer_count": 1, "score": 1, "last_activity_date": 1546101874, "creation_date": 1546099766, "last_edit_date": 1546101519, "question_id": 53971157, "link": "https://stackoverflow.com/questions/53971157/reference-with-supertype-lifetime-cant-be-used-for-subtype-lifetime", "title": "Reference with supertype lifetime can&#39;t be used for subtype lifetime", "body": "<p>I'm struggling to understand how subtyping of lifetimes works. The name <code>subtype</code> suggests to me that if <code>'b</code> is a subtype of <code>'a</code>, then things of type <code>'a</code> can be used anywhere something of type <code>'b</code> will be used. And practically, in the context of lifetimes, I don't see what could go wrong from allowing that. However, the following code</p>\n\n<pre><code>fn test&lt;'a, 'b: 'a&gt;(first: &amp;'a mut str, second: &amp;'b mut str) -&gt; &amp;'b str {\n    // do something to choose between the two arguments,\n    // eventually pick first on some branch\n    first\n}\n</code></pre>\n\n<p>doesn't work, because \"these two types are declared with different lifetimes... but data from <code>first</code> flows into <code>second</code> here.\" </p>\n\n<p>So what would go wrong if this was allowed? </p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 5830510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ccffe5f4ec80f1f8a154be1419aab921?s=128&d=identicon&r=PG&f=1", "display_name": "Pielover", "link": "https://stackoverflow.com/users/5830510/pielover"}, "edited": false, "score": 0, "creation_date": 1546104231, "post_id": 53971326, "comment_id": 94781038, "body": "Thanks, couldn&#39;t find this syntax anywhere."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1546101142, "creation_date": 1546101142, "answer_id": 53971326, "question_id": 53970995, "link": "https://stackoverflow.com/questions/53970995/how-do-i-specify-types-for-a-trait-parameter/53971326#53971326", "title": "How do I specify types for a trait parameter?", "body": "<p>Here is the syntax:</p>\n\n<pre><code>Scene&lt;Renderer = YourRenderer&gt;\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 5830510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ccffe5f4ec80f1f8a154be1419aab921?s=128&d=identicon&r=PG&f=1", "display_name": "Pielover", "link": "https://stackoverflow.com/users/5830510/pielover"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "closed_date": 1546128505, "accepted_answer_id": 53971326, "answer_count": 1, "score": 0, "last_activity_date": 1546128416, "creation_date": 1546098510, "last_edit_date": 1546128416, "question_id": 53970995, "link": "https://stackoverflow.com/questions/53970995/how-do-i-specify-types-for-a-trait-parameter", "closed_reason": "Duplicate", "title": "How do I specify types for a trait parameter?", "body": "<p>I'm trying to use a trait as a field in my struct:</p>\n\n<pre><code>pub trait Scene {\n    type Renderer;\n\n    fn update(&amp;mut self);\n    fn render(&amp;mut self, r: &amp;mut Self::Renderer);\n}\n\nstruct Example {\n    active_scene: *mut Scene,\n}\n</code></pre>\n\n<p>When I try to use it, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0191]: the value of the associated type `Renderer` (from the trait `Scene`) must be specified\n --&gt; src/lib.rs:9:24\n  |\n9 |     active_scene: *mut Scene,\n  |                        ^^^^^ missing associated type `Renderer` value\n</code></pre>\n\n<p>How do I specify the types in a field? Is there something obvious I'm missing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546095530, "post_id": 53970176, "comment_id": 94778762, "body": "The first line of the error message is &quot;aborting due to previous error&quot;. What is that previous error?"}, {"owner": {"reputation": 303, "user_id": 9750048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f21cfd026d734661c84cbd0ab78bf0e0?s=128&d=identicon&r=PG&f=1", "display_name": "7hsk", "link": "https://stackoverflow.com/users/9750048/7hsk"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546095792, "post_id": 53970176, "comment_id": 94778835, "body": "The previous error: <a href=\"https://snag.gy/CyG5ke.jpg\" rel=\"nofollow noreferrer\">snag.gy/CyG5ke.jpg</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546098524, "post_id": 53970176, "comment_id": 94779489, "body": "Cargo tries to call the Microsoft linker, but instead finds the completely unrelated GNU <code>link</code> utility, which creates a hard link to a file. Fix your search path so Cargo can find <code>link.exe</code>."}], "owner": {"reputation": 303, "user_id": 9750048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f21cfd026d734661c84cbd0ab78bf0e0?s=128&d=identicon&r=PG&f=1", "display_name": "7hsk", "link": "https://stackoverflow.com/users/9750048/7hsk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1546099007, "answer_count": 0, "score": 0, "last_activity_date": 1546091479, "creation_date": 1546091479, "question_id": 53970176, "link": "https://stackoverflow.com/questions/53970176/how-to-fix-could-not-compile-user32-sys-error-in-rust", "closed_reason": "Duplicate", "title": "How to fix &quot; Could not compile `user32-sys&quot; error in Rust", "body": "<p>;)\nMy file <code>cargo.tml</code> contains</p>\n\n<pre><code>...\n[dependencies]\nwinapi = \"0.2.7\"\nuser32-sys = \"0.2\"\n</code></pre>\n\n<p>And my main.rs</p>\n\n<pre><code>extern crate winapi;\nextern crate user32;\n</code></pre>\n\n<p>But, when i use <code>cargo build</code>. I have this error:</p>\n\n<pre><code>error: aborting due to previous error\n\nerror: Could not compile `user32-sys`.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre>\n"}, {"tags": ["generics", "recursion", "types", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546078085, "post_id": 53968543, "comment_id": 94774717, "body": "<a href=\"https://doc.rust-lang.org/stable/book/ch15-06-reference-cycles.html\" rel=\"nofollow noreferrer\">Creating Reference Cycles and Leaking Memory is Safe</a>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1546089086, "post_id": 53968543, "comment_id": 94777135, "body": "Try <code>struct HashToHash(HashMap&lt;String, HashToHash&gt;);</code>."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1546089309, "post_id": 53968543, "comment_id": 94777185, "body": "The duplicate is the wrong one. <code>HashTable</code> acts like a box, so you can have a recursive struct."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1546090745, "post_id": 53968543, "comment_id": 94777556, "body": "@starblue Does that actually work? I will vote to reopen if so"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1546093298, "post_id": 53968543, "comment_id": 94778177, "body": "@trentcl Sure, there is no reason why it wouldn&#39;t work. A <code>HashMap</code> has a size known at compile time which is independent of the key and value types, so the problem of an infinitely sized type mentioned in the question marked as duplicate does not occur here. There is still a question how useful this type is, since you can&#39;t have any values in the leaf nodes, but I can&#39;t rule out that there are use cases for this data structure."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546093497, "post_id": 53968543, "comment_id": 94778222, "body": "@Sven &quot;There is no reason why it wouldn&#39;t work&quot; is not always the same as &quot;it actually works&quot;, but your point is well taken. Even if it doesn&#39;t work it is still not a dupe."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546093689, "post_id": 53968543, "comment_id": 94778267, "body": "@trentcl Fair enough. It <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=27da5b435273b3739fb60300969f9630\" rel=\"nofollow noreferrer\">actually <i>does</i> work</a>. :)"}], "owner": {"reputation": 790, "user_id": 2925565, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4579a7106d0d674e2a912bdc01f91418?s=128&d=identicon&r=PG&f=1", "display_name": "user2925565", "link": "https://stackoverflow.com/users/2925565/user2925565"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 751, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1546104646, "creation_date": 1546077899, "last_edit_date": 1546104646, "question_id": 53968543, "link": "https://stackoverflow.com/questions/53968543/how-to-write-a-recursive-generic-type-in-rust", "title": "How to write a recursive generic type in Rust?", "body": "<p>I want to define a <code>HashMap</code> with a key type of <code>String</code> and the value type is itself. </p>\n\n<p>I tried to write something like:</p>\n\n<pre><code>HashMap&lt;String, HashMap&lt;String, ...&gt;&gt;\n</code></pre>\n\n<p>I found this requires recursion and I don't know how to write recursion in a type. </p>\n\n<p>After reading <a href=\"https://stackoverflow.com/questions/647533/recursive-generic-types\">Recursive generic types</a>, I tried:</p>\n\n<pre><code>type HashToHash = HashMap&lt;String, HashToHash&gt;\n</code></pre>\n\n<p>However I got error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0391]: cycle detected when processing `HashToHash`\n --&gt; src/lib.rs:3:35\n  |\n3 | type HashToHash = HashMap&lt;String, HashToHash&gt;;\n  |                                   ^^^^^^^^^^\n  |\n  = note: ...which again requires processing `HashToHash`, completing the cycle\n</code></pre>\n\n<p>Is there a way to define this kind of type in Rust?</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1546077476, "post_id": 53968385, "comment_id": 94774581, "body": "You could use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all\" rel=\"nofollow noreferrer\"><code>Iterator::all</code></a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1546077830, "post_id": 53968385, "comment_id": 94774659, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ee49af6daf752d20f3804586ce83b98e\" rel=\"nofollow noreferrer\">exemple</a>, be aware that here you are not using an iterator, see <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all\" rel=\"nofollow noreferrer\">all()</a>."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "edited": false, "score": 0, "creation_date": 1546084571, "post_id": 53968698, "comment_id": 94776129, "body": "Would it be possible to cast <code>x</code> to a bool instead of using <code>!!</code>. I tried <code>x as bool</code> and <code>bool::from(x)</code> but they both did not work."}, {"owner": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "edited": false, "score": 0, "creation_date": 1546085091, "post_id": 53968698, "comment_id": 94776240, "body": "I took the compilers suggestion and used the trait <code>bool: std::convert::From&lt;T&gt; instead of std::ops::Not&lt;Output = bool&gt;</code>. This allowed me to use <code>x.into()</code> instead of double negation. Both seem to work for my particular project, I wouldn&#39;t know which is the superior method in this case, or if they are equivalent."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "edited": false, "score": 3, "creation_date": 1546089562, "post_id": 53968698, "comment_id": 94777265, "body": "@z.f.s <code>!!x</code> is an idiom from C where it is useful for turning a truthy integer into a real <code>true</code> or <code>false</code> (which are just 1 and 0 if you look closely). Rust doesn&#39;t have &quot;truthiness&quot; (<code>!</code> on integers does a bitwise NOT), so I wouldn&#39;t use it here. In fact I would not make T generic at all if you only intend to use <code>every</code> on <code>bool</code>-containing iterators, but I might choose <code>T: Borrow&lt;bool&gt;</code> to abstract over references if desired."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546127889, "post_id": 53968698, "comment_id": 94786233, "body": "Related: <a href=\"https://stackoverflow.com/q/30540766/155423\">How can I add new methods to Iterator?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546127962, "post_id": 53968698, "comment_id": 94786249, "body": "It&#39;s not super idiomatic to define two generic types <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9ea37bc8f960cf1e83d8e92b676e516a\" rel=\"nofollow noreferrer\">when one will do</a>"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1546127854, "last_edit_date": 1546127854, "creation_date": 1546079202, "answer_id": 53968698, "question_id": 53968385, "link": "https://stackoverflow.com/questions/53968385/how-can-i-define-a-function-that-returns-true-if-every-value-in-an-iterator-is-t/53968698#53968698", "title": "How can I define a function that returns true if every value in an iterator is true?", "body": "<p>A more generic example based on <a href=\"https://stackoverflow.com/questions/53968385/defining-an-every-function-in-rust#comment94774659_53968385\">Stargateur's comment</a></p>\n\n<pre><code>fn every&lt;T, I&gt;(v: I) -&gt; bool\nwhere\n    I: IntoIterator&lt;Item = T&gt;,\n    T: std::ops::Not&lt;Output = bool&gt;,\n{\n    v.into_iter().all(|x| !!x)\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d0c2875162be8526d6fbcb973754ce73\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p><code>v</code> can be anything that implements <code>IntoIterator</code>, e.g. a <code>Vec</code>, but also something like <code>map</code>, or <code>filter</code>, which makes this solution very generic.</p>\n"}], "owner": {"reputation": 45, "user_id": 4178922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a21b0cdee20494040d14956cb5fec6f0?s=128&d=identicon&r=PG&f=1", "display_name": "z.f.s", "link": "https://stackoverflow.com/users/4178922/z-f-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 53968698, "answer_count": 1, "score": 2, "last_activity_date": 1546127854, "creation_date": 1546076430, "last_edit_date": 1546122694, "question_id": 53968385, "link": "https://stackoverflow.com/questions/53968385/how-can-i-define-a-function-that-returns-true-if-every-value-in-an-iterator-is-t", "title": "How can I define a function that returns true if every value in an iterator is true?", "body": "<p>I want to define a function <code>every</code> which takes in an iterator and while it's not <code>None</code>, makes sure that all values are <code>true</code>. </p>\n\n<p>Example applications:</p>\n\n<pre><code>every([true, true, true].into_iter()) == true\n</code></pre>\n\n\n\n<pre><code>every([true, false, true].into_iter()) == false\n</code></pre>\n\n<p>I've had trouble getting it to work just with a <code>Vec</code>, let alone an <code>Iterator</code>. I've tried the following and a few variations but haven't gotten anywhere.</p>\n\n<pre><code>use std::ops;\n\nfn every&lt;T&gt;(v: Vec&lt;T&gt;) -&gt; bool\nwhere\n    T: ops::Not,\n{\n    for item in v {\n        match !item {\n            T::No =&gt; return false,\n        }\n    }\n    true\n}\n</code></pre>\n\n<p>This code gets the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no associated item named `No` found for type `T` in the current scope\n --&gt; src/lib.rs:9:13\n  |\n9 |             T::No =&gt; return false,\n  |             ^^^^^ associated item not found in `T`\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 59, "user_id": 10676406, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-OloIasiJwog/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jjzribbaHMD_M62ROow8I-3tDXLQ/mo/photo.jpg?sz=128", "display_name": "djozis", "link": "https://stackoverflow.com/users/10676406/djozis"}, "edited": false, "score": 0, "creation_date": 1546056293, "post_id": 53966598, "comment_id": 94771065, "body": "Seems that this may have come up on Reddit once, some time ago: <a href=\"https://www.reddit.com/r/rust/comments/6d9xaw/how_do_i_express_that_im_not_storing_argument/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/6d9xaw/&hellip;</a>"}, {"owner": {"reputation": 59, "user_id": 10676406, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-OloIasiJwog/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jjzribbaHMD_M62ROow8I-3tDXLQ/mo/photo.jpg?sz=128", "display_name": "djozis", "link": "https://stackoverflow.com/users/10676406/djozis"}, "edited": false, "score": 0, "creation_date": 1546572911, "post_id": 53966598, "comment_id": 94901578, "body": "After a long discussion on Discord, this resulted in this issue being submitted: <a href=\"https://github.com/rust-lang/rust/issues/57325\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/57325</a>  If it turns out to be a bug in Rust, I&#39;ll remove this comment and make it the answer."}], "owner": {"reputation": 59, "user_id": 10676406, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-OloIasiJwog/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jjzribbaHMD_M62ROow8I-3tDXLQ/mo/photo.jpg?sz=128", "display_name": "djozis", "link": "https://stackoverflow.com/users/10676406/djozis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 206, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1546202059, "creation_date": 1546056238, "last_edit_date": 1546202059, "question_id": 53966598, "link": "https://stackoverflow.com/questions/53966598/how-to-make-fnt-static-register-as-static-for-any-generic-type-argument-t", "title": "How to make Fn(T) + &#39;static register as &#39;static for any generic type argument T?", "body": "<p>I'm using the <a href=\"https://crates.io/crates/specs\" rel=\"nofollow noreferrer\">specs crate</a> which has a <code>Component</code> trait which extends the <code>std::any::Any</code> trait (the <code>Any</code> trait just requires <code>'static</code>). I want to include a <code>Box&lt;Fn(T) + 'static&gt;</code> field (with generic argument <code>T</code>) in a struct for which <code>Component</code> is implemented, which means <code>Box&lt;Fn(T) + 'static&gt;</code> needs to be <code>'static</code>. That means I need <code>Fn(T) + 'static</code> to be <code>'static</code> for any <code>T</code>.</p>\n\n<p>It seems <code>Fn(T) + 'static</code> is not <code>'static</code> for any generic type argument <code>T</code>. <code>T</code> could refer to a struct with its own lifetimes, but I expected it not to be a problem because there is no instance of a reference with those lifetimes in the <code>Fn</code> to make the <code>Fn</code> itself not <code>'static</code> - those lifetimes are only in the arguments passed to the <code>Fn</code>, but it is as if <code>Fn(T) + 'static</code> is considered to contain a <code>T</code> itself.</p>\n\n<p>Example:</p>\n\n<pre><code>struct HandlesT&lt;T&gt; {\n    handler: Box&lt;Fn(T) + 'static&gt;,\n}\n\nimpl&lt;T&gt; HandlesT&lt;T&gt; {\n    pub fn new&lt;F: Fn(T) + 'static&gt;(handler: F) -&gt; HandlesT&lt;T&gt; {\n        HandlesT {\n            handler: Box::new(handler),\n        }\n    }\n}\n\ntrait IsStatic: 'static {}\nimpl&lt;T&gt; IsStatic for HandlesT&lt;T&gt; {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n  --&gt; src/lib.rs:14:9\n   |\n14 | impl&lt;T&gt; IsStatic for HandlesT&lt;T&gt; {}\n   |      -  ^^^^^^^^\n   |      |\n   |      help: consider adding an explicit lifetime bound `T: 'static`...\n   |\nnote: ...so that the type `HandlesT&lt;T&gt;` will meet its required lifetime bounds\n  --&gt; src/lib.rs:14:9\n   |\n14 | impl&lt;T&gt; IsStatic for HandlesT&lt;T&gt; {}\n   |         ^^^^^^^^\n</code></pre>\n\n<p>In the example, since <code>HandlesT&lt;T&gt;</code> contains no non-static references at all for any given <code>T</code> (no references at all except those owned by the <code>Fn</code>, but those must be <code>'static</code>), I expected <code>HandlesT&lt;T&gt;</code> to be static for any <code>T</code>, but the error indicates that it is not.</p>\n\n<p>The compiler suggestion to \"consider adding an explicit lifetime bound <code>T: 'static</code>\" neither supports any generic type argument T, nor provides hints as to why <code>HandlesT&lt;T&gt;</code> for any generic <code>T</code> is not <code>'static</code>, given that <code>HandlesT&lt;T&gt;</code> would not contain a <code>T</code>.</p>\n\n<p>Example of <code>T: 'static</code> (the compiler's suggestion) not supporting any generic <code>T</code>, in this case <code>&amp;'a i32</code>:</p>\n\n<pre><code>struct HandlesT&lt;T: 'static&gt; {\n    handler: Box&lt;Fn(T) + 'static&gt;,\n}\n\nimpl&lt;T: 'static&gt; HandlesT&lt;T&gt; {\n    pub fn new&lt;F: Fn(T) + 'static&gt;(handler: F) -&gt; HandlesT&lt;T&gt; {\n        HandlesT {\n            handler: Box::new(handler),\n        }\n    }\n}\n\ntrait IsStatic: 'static {}\nimpl&lt;T: 'static&gt; IsStatic for HandlesT&lt;T&gt; {}\n\nfn try_nonstatic_t&lt;'a&gt;() {\n    let handles_t = HandlesT {\n        handler: Box::new(|i: &amp;'a i32| {}),\n    };\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0477]: the type `&amp;'a i32` does not fulfill the required lifetime\n  --&gt; src\\lib.rs:17:21\n   |\n17 |     let handles_t = HandlesT {\n   |                     ^^^^^^^^\n   |\n   = note: type must satisfy the static lifetime\n</code></pre>\n"}, {"tags": ["rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1546031659, "post_id": 53964281, "comment_id": 94766442, "body": "Possible XY problem, Rc is a smart pointer, you shouldn&#39;t borrow it, please <a href=\"https://doc.rust-lang.org/book/ch15-04-rc.html\" rel=\"nofollow noreferrer\">read</a>."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1546031806, "post_id": 53964281, "comment_id": 94766480, "body": "Yes, but you do need to <code>borrow()</code> from a <code>RefCell</code>, <code>callback.borrow()</code> will dereference the <code>Rc</code> implicitly and call <code>borrow()</code> on the underlying <code>RefCell</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1546034370, "post_id": 53964281, "comment_id": 94767216, "body": "Ok but read the <a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/cell.rs#L758\" rel=\"nofollow noreferrer\">reference</a> ,&quot; The borrow lasts until the returned <code>Ref</code> exits scope&quot; . This means you&#39;ll not able to return the borrowed one."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1546034633, "post_id": 53964281, "comment_id": 94767293, "body": "Okay, so is there a way to make this work?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1546035510, "post_id": 53964281, "comment_id": 94767589, "body": "@&#214;merErden was on point. Pretty much the only way is to hold a <code>struct</code> containing the <code>Ref</code>, which isn&#39;t pretty, but works."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1546035723, "post_id": 53964281, "comment_id": 94767664, "body": "Additionally, let&#39;s say you have a Callback and it can change at runtime(i assume thats why you are using RefCell), your function works against the Refcell&#39;s nature because it boxes the inner data, it expects you to access inner data via itself. I believe you are trying to make some util function to unwrap reference of inner data, i suggest you to write macro for it but If your main concern is not a interior mutability, you don&#39;t need to use RefCell."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1546039515, "post_id": 53964281, "comment_id": 94768628, "body": "Thank you for your time and explanation @&#214;merErden, I&#39;ll look into using a macro!"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1546036086, "post_id": 53964861, "comment_id": 94767781, "body": "If you are not able to use <code>borrow_mut</code> for the whole lifetime you shouldn&#39;t use <code>RefCell</code>, it brings complexity and gives nothing more than <code>Rc</code> ."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1546036503, "post_id": 53964861, "comment_id": 94767869, "body": "@&#214;merErden I wouldn&#39;t recommend it with a caveat if there wasn&#39;t a way around it. The OP&#39;s use case is most likely a case where he needs the <code>RefCell</code> - an oft-updated closure element present on both the JS ABI and rust side (this is obvious from the types used in his example), while having the <code>RefCell</code> content <b>and</b> reference last until the next update. It&#39;s not a good solution <i>everywhere</i>, but in this case, you can very easily get around this limitation."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546039681, "post_id": 53964861, "comment_id": 94768665, "body": "Sadly, I believe my use case is the problematic one described \u2013 I am calling this whilst I am trying to declare the callback in the first place (I know!), it&#39;s a recursive callback function. I&#39;ll look into this though as well as the possible macro solution, thanks for your time; that explanation is really helpful."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546039994, "post_id": 53964861, "comment_id": 94768727, "body": "@Zak take it one step further and move the closure into the object (if you can), and provide a way to <code>swap</code> the value from the outside."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546040249, "post_id": 53964861, "comment_id": 94768779, "body": "Hmmm...that&#39;s interesting, surely I won&#39;t be able to swap the closure though as I am still using it (in order to actually define it)?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546040401, "post_id": 53964861, "comment_id": 94768827, "body": "@Zak if you never swap it, what do you need the <code>RefCell</code> for? I expected from the <code>RefCell</code> that you&#39;d at least update it once in a while. Should you actually want to do that, if the entire thing is in that object, you can quite literally destroy and recreate or <code>swap</code> from the outside and everything will follow suit."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546040655, "post_id": 53964861, "comment_id": 94768888, "body": "@S&#233;bastienRenauld The <code>RefCell</code> is used in order update it, but it only needs to be updated once, on definition of the closure. However, whilst it is being defined, I need access to the closure itself in order to refer to it for recursion. It is essentially the example given <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/request-animation-frame.html\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 1, "creation_date": 1546040939, "post_id": 53964861, "comment_id": 94768947, "body": "@Zak then this answer is indeed the right one. When you need to access it (but not modify), you create an object like the one I&#39;ve shown in the answer, use it for read-only usage, then destroy it when you&#39;re done. :-)"}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1546041202, "post_id": 53964861, "comment_id": 94768998, "body": "Okay, I see \u2013 thanks, that will work! Thanks for the help \ud83d\ude42"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1546035880, "last_edit_date": 1546035880, "creation_date": 1546035483, "answer_id": 53964861, "question_id": 53964281, "link": "https://stackoverflow.com/questions/53964281/how-to-create-a-function-returning-a-borrowed-value/53964861#53964861", "title": "How to create a function returning a borrowed value?", "body": "<p>Yeah, this isn't going to work.</p>\n\n<pre><code>callback.borrow().as_ref().unwrap().as_ref().unchecked_ref()\n</code></pre>\n\n<p>Let's break this down in steps:</p>\n\n<ol>\n<li>You're borrowing <code>&amp;RefCell&lt;Option&lt;Closure&lt;FnMut()&gt;&gt;&gt;</code> - so you now have <code>Ref&lt;Option&lt;...&gt;&gt;</code>, which is step #1 of your issues. When this happens, this intermediary value now has a different lifetime than <code>'a</code> (inferior, to be precise). Anything stemming from this will inherit this lesser lifetime. Call it <code>'b</code> for now</li>\n<li>You then <code>as_ref</code> this <code>Ref</code>, turning it into <code>Option&lt;&amp;'b Closure&lt;FnMut()&gt;&gt;</code> </li>\n<li>Rust then converts <code>&amp;'b Closure&lt;FnMut()&gt;</code> into <code>&amp;'b Function</code></li>\n</ol>\n\n<p>Step 1 is where the snafu happens. Due to the lifetime clash, you're left with this mess. A semi-decent way to solve it the following construct:</p>\n\n<pre><code>use std::rc::{Rc};\nuse std::cell::{RefCell, Ref};\nuse std::ops::Deref;\n\nstruct CC&lt;'a, T&gt; {\n    inner: &amp;'a Rc&lt;RefCell&lt;T&gt;&gt;,\n    borrow: Ref&lt;'a, T&gt;\n}\n\nimpl&lt;'a, T&gt; CC&lt;'a, T&gt; {\n    pub fn from_callback(item:&amp;'a Rc&lt;RefCell&lt;T&gt;&gt;) -&gt; CC&lt;'a, T&gt; {\n        CC {\n            inner: item,\n            borrow: item.borrow()\n        }\n    }\n    pub fn to_function(&amp;'a self) -&gt; &amp;'a T {\n        self.borrow.deref()\n    }\n}\n</code></pre>\n\n<p>It's a bit unwieldy, but it's probably the cleanest way to do so.</p>\n\n<p>A new <code>struct</code> <code>CC</code> is defined, containing a <code>'a</code> ref to <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> (where the <code>T</code> generic in your case would end up being <code>Option&lt;Closure&lt;FnMut()&gt;&gt;</code>) and a <code>Ref</code> to <code>T</code> with lifetime <code>'a</code>, auto-populated on the <code>from_callback</code> constructor.</p>\n\n<p>The moment you generate this object, you'll have a <code>Ref</code> with the same lifetime as the ref you gave as an argument, making the entire issue go away. From there, you can call <code>to_function</code> to retrieve a <code>&amp;'a</code> reference to your inner type.</p>\n\n<p>There is a gotcha to this: as long as <strong>a single</strong> of these objects exists, you will (obviously) not be able to <code>borrow_mut()</code> on the <code>RefCell</code>, which may or may not kill your use case (as one doesn't use a <code>RefCell</code> for the fun of it). Nevertheless, these objects are relatively cheap to instantiate, so you can afford to bin them once you're done with them.</p>\n\n<p>An example with <code>Function</code> and <code>Closure</code> types replaced with <code>u8</code> (because <code>js_sys</code> cannot be imported into the sandbox) is available <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8949d01bfa071c68991ed8c77709019a\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "is_accepted": false, "score": 1, "last_activity_date": 1546090407, "creation_date": 1546090407, "answer_id": 53970036, "question_id": 53964281, "link": "https://stackoverflow.com/questions/53964281/how-to-create-a-function-returning-a-borrowed-value/53970036#53970036", "title": "How to create a function returning a borrowed value?", "body": "<p>Although I really like S\u00e9bastien's answer and explanation, I ended up going for \u00d6mer's suggestion of using a macro, simply for the sake of conciseness. I'll post the macro in case it's of use to anyone else.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! callback_to_function {\n  ($callback:expr) =&gt; {\n    $callback\n      .borrow()\n      .as_ref()\n      .unwrap()\n      .as_ref()\n      .unchecked_ref()\n  };\n}\n</code></pre>\n\n<p>I'll leave S\u00e9bastien's answer as the accepted one as I believe it is the more \"correct\" way to solve this issue and he provides a great explanation.</p>\n"}], "owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1670, "favorite_count": 0, "closed_date": 1546105068, "accepted_answer_id": 53964861, "answer_count": 2, "score": 2, "last_activity_date": 1546105140, "creation_date": 1546031170, "last_edit_date": 1546105140, "question_id": 53964281, "link": "https://stackoverflow.com/questions/53964281/how-to-create-a-function-returning-a-borrowed-value", "closed_reason": "Duplicate", "title": "How to create a function returning a borrowed value?", "body": "<p>I have the following function as part of a Rust WASM application to convert a <code>Box</code>ed closure into the Rust-representation for a JavaScript function.</p>\n\n<pre><code>use js_sys::Function;\n\ntype Callback = Rc&lt;RefCell&lt;Option&lt;Closure&lt;FnMut()&gt;&gt;&gt;&gt;;\n\nfn to_function(callback: &amp;Callback) -&gt; &amp;Function {\n    callback.borrow().as_ref().unwrap().as_ref().unchecked_ref()\n}\n</code></pre>\n\n<p>However, the compiler complains that the return value uses a borrowed value (obtained with <code>callback.borrow()</code>) so cannot be returned.</p>\n\n<p>Hence, I decided to add lifetime annotations to inform the compiler that this new reference should live as long as the input.</p>\n\n<pre><code>use js_sys::Function;\n\ntype Callback = Rc&lt;RefCell&lt;Option&lt;Closure&lt;FnMut()&gt;&gt;&gt;&gt;;\n\nfn to_function&lt;'a&gt;(callback: &amp;'a Callback) -&gt; &amp;'a Function {\n    callback.borrow().as_ref().unwrap().as_ref().unchecked_ref()\n}\n</code></pre>\n\n<p>Unfortunately, this hasn't helped and I get the same error. What am I doing wrong here?</p>\n"}, {"tags": ["rust", "constants", "cpu-cache"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1546026419, "post_id": 53963531, "comment_id": 94764804, "body": "A flattened array will have identical memory layout, so it shouldn&#39;t make any difference for the generated code. Apart from that, it&#39;s next to impossible to comment further \u2013 the cache misses depend on the entirety of your program, your architecture and your platform."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1546041939, "post_id": 53963531, "comment_id": 94769166, "body": "Random access of a 100kB block of data is likely to result in a lot of cache misses. Try to rewrite your algorithm so that it accesses the data sequentially. It&#39;s difficult to offer more detailed suggestions without seeing your code. Consider creating a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "owner": {"reputation": 97, "user_id": 6495625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0f2ad99d379d963818e11c8a8d40c3f?s=128&d=identicon&r=PG&f=1", "display_name": "Fabian v.d.W", "link": "https://stackoverflow.com/users/6495625/fabian-v-d-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1546129665, "creation_date": 1546025907, "last_edit_date": 1546129665, "question_id": 53963531, "link": "https://stackoverflow.com/questions/53963531/will-flattening-a-large-array-constant-reduce-the-number-of-l1-cache-misses", "title": "Will flattening a large array constant reduce the number of L1 cache misses?", "body": "<p>I have a Rust program which uses a few literal constants. The constants are arrays of type <code>[u128; 8]</code> - <code>[u128; 10]</code> and one two-dimensional array of size <code>[[[u128; 8]; 8]; 100]</code>; this array is 100KB.</p>\n\n<p>Analyzing with KCachegrind tells me that reading from this array is responsible for about 70% of L1-Read-Misses, which essentially slows my program down.</p>\n\n<p>Would the cache misses be reduced if the array was flattened? That is, instead of indexing with <code>arr[x][y][z]</code>, I would index with <code>arr[64 * x + 8 * y + z]</code></p>\n\n<p>If flattening the array does actually reduce the cache misses, why doesn't the compiler flatten the array for me and explicitly change the indexing?</p>\n\n<p>If it doesn't, how would I go about reducing the cache misses? </p>\n"}, {"tags": ["rust", "reference-counting"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546053042, "post_id": 53962054, "comment_id": 94770695, "body": "Who calls a reference cycle an &quot;island of isolation&quot;?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1546072526, "post_id": 53962054, "comment_id": 94773519, "body": "Seems that this is not about a simply reference cycle, but about reference cycle <i>without external references</i> - isolated from the rest of program. The reference cycle by itself isn&#39;t bad, it&#39;s bad when it gets lost."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546136952, "post_id": 53962054, "comment_id": 94787422, "body": "That was not purely a rhetorical question, by the way - I really do want to know where the term &quot;island of isolation&quot; comes from (or if you just made it up)"}, {"owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1546211454, "post_id": 53962054, "comment_id": 94801775, "body": "@trentcl It seems to be a commonly used term. For instance, check out this question: <a href=\"https://stackoverflow.com/questions/792831/island-of-isolation-of-garbage-collection\" title=\"island of isolation of garbage collection\">stackoverflow.com/questions/792831/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 11, "last_activity_date": 1546018085, "creation_date": 1546018085, "answer_id": 53962163, "question_id": 53962054, "link": "https://stackoverflow.com/questions/53962054/how-does-rust-handle-the-island-of-isolation-cycles-of-references-scenario-f/53962163#53962163", "title": "How does Rust handle the &quot;island of isolation&quot; (cycles of references) scenario for reference-counted types?", "body": "<p>Rust does not have a garbage collector, and it won't detect reference cycles. If your program creates inaccessible reference cycles, they are leaked, and it is up to you to avoid them, e.g. by using <a href=\"https://doc.rust-lang.org/nightly/std/rc/struct.Rc.html#method.downgrade\" rel=\"noreferrer\">weak references</a>, or by not using shared ownership in the first place.</p>\n\n<p>Note that the only way to create a reference cycle is to use both shared ownership and interior mutability.</p>\n\n<p>See also the <a href=\"https://doc.rust-lang.org/book/ch15-06-reference-cycles.html\" rel=\"noreferrer\">chapter on reference cycles in the Rust book</a>.</p>\n"}], "owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 362, "favorite_count": 0, "accepted_answer_id": 53962163, "answer_count": 1, "score": 12, "last_activity_date": 1546122262, "creation_date": 1546017345, "last_edit_date": 1546122262, "question_id": 53962054, "link": "https://stackoverflow.com/questions/53962054/how-does-rust-handle-the-island-of-isolation-cycles-of-references-scenario-f", "title": "How does Rust handle the &quot;island of isolation&quot; (cycles of references) scenario for reference-counted types?", "body": "<p>How does Rust handle the \"island of isolation\" scenario for <code>Rc</code>s and <code>Arc</code>s?</p>\n\n<p>An \"island of isolation\" is a situation where object <code>A</code> contains a pointer to object <code>B</code> and object <code>B</code> contains a pointer to object <code>A</code>, but there are no pointers to either objects anywhere else.</p>\n\n<p>Is Rust smart enough to detect this or does it lead to memory leaks?</p>\n"}, {"tags": ["rust", "traits", "covariance"], "comments": [{"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "edited": false, "score": 1, "creation_date": 1552850709, "post_id": 53960041, "comment_id": 97157920, "body": "Here&#39;s a <a href=\"https://medium.com/@kennytm/variance-in-rust-964134dd5b3e\" rel=\"nofollow noreferrer\">post summarizing all variance rules in Rust</a>. Somebody may find it useful."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1546050261, "post_id": 53966183, "comment_id": 94770411, "body": "I wanted to add more elaboration, or make a helpful suggestion, but it&#39;s hard to tell what exactly the question is going for, so this is the simple answer.  If you have concrete code that needs a feature like this, I&#39;d be interested to see a sample, and maybe then I could make a suggestion."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1546249669, "post_id": 53966183, "comment_id": 94809015, "body": "My problem is quite complex, it is hard to summarize it, and I&#39;m not even sure that a covariant trait is the solution I need... I was mainly trying to get a better understanding if the whole picture."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1546050150, "creation_date": 1546050150, "answer_id": 53966183, "question_id": 53960041, "link": "https://stackoverflow.com/questions/53960041/can-i-force-a-trait-to-be-covariant/53966183#53966183", "title": "Can I force a trait to be covariant?", "body": "<p>No.</p>\n\n<p>You can express \"a value that implements <code>Baz&lt;'x&gt;</code> for <em>any</em> <code>'x</code>\":</p>\n\n<pre><code>pub fn test_baz&lt;'a:'b, 'b:'c, 'c&gt;() {\n    let za: Box&lt;dyn for&lt;'x&gt; Baz&lt;'x&gt;&gt; = Box::new(());\n    let zb: Box&lt;dyn for&lt;'x&gt; Baz&lt;'x&gt;&gt; = Box::new(());\n    let zc: Box&lt;dyn for&lt;'x&gt; Baz&lt;'x&gt;&gt; = Box::new(());\n\n    let v: Vec&lt;Box&lt;dyn for&lt;'x&gt; Baz&lt;'x&gt;&gt;&gt; = vec![za, zb, zc];\n}\n</code></pre>\n\n<p>But you can't (as of Rust 1.31) write <code>Box&lt;dyn for&lt;'x: 'b&gt; Baz&lt;'x&gt;&gt;</code>, and even if you could, that syntax would only work for lifetimes; it wouldn't let you express covariance over type parameters.</p>\n"}, {"tags": [], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "is_accepted": false, "score": 3, "last_activity_date": 1546417565, "last_edit_date": 1546417565, "creation_date": 1546250877, "answer_id": 53986166, "question_id": 53960041, "link": "https://stackoverflow.com/questions/53960041/can-i-force-a-trait-to-be-covariant/53986166#53986166", "title": "Can I force a trait to be covariant?", "body": "<p>I found a workaround. Rather than marking the trait as covariant (which, as @trentcl noted, is not possible in Rust 1.31), I made the type implement the trait for all lifetimes smaller than its own:</p>\n\n<pre><code>impl&lt;'a:'b, 'b&gt; Baz&lt;'b&gt; for Foo&lt;'a&gt; {}\n</code></pre>\n\n<p>That way, I can use instances of <code>Foo&lt;'b&gt;</code> <em>and</em> <code>Foo&lt;'a&gt;</code> whenever a <code>Bar&lt;'b&gt;</code> is required:</p>\n\n<pre><code>pub fn test_baz&lt;'a:'b, 'b:'c, 'c&gt;() {\n    let fa: Foo&lt;'a&gt; = Foo(PhantomData);\n    let fb: Foo&lt;'b&gt; = Foo(PhantomData);\n    let fc: Foo&lt;'c&gt; = Foo(PhantomData);\n\n    let v: Vec&lt;&amp;dyn Baz&lt;'b&gt;&gt; = vec![&amp;fa, &amp;fb]; // &amp;fc is not accepted\n}\n</code></pre>\n\n<p>Of course, that requires every implementer of the trait to follow this pattern, so it is not as powerful as marking the trait <em>itself</em> as covariant. But it can do the trick in some situations.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=63002cb9000dc3191ec622d1af8def3d\" rel=\"nofollow noreferrer\">Example in the playground</a></p>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 289, "favorite_count": 1, "accepted_answer_id": 53966183, "answer_count": 2, "score": 4, "last_activity_date": 1546417565, "creation_date": 1546007210, "last_edit_date": 1546020770, "question_id": 53960041, "link": "https://stackoverflow.com/questions/53960041/can-i-force-a-trait-to-be-covariant", "title": "Can I force a trait to be covariant?", "body": "<p>Thanks to @francis-gagn\u00e9 's <a href=\"https://stackoverflow.com/questions/42637911/how-can-this-instance-seemingly-outlive-its-own-parameter-lifetime#answer-42639814\">excellent answer</a> to another question, I have a clearer view of how variance works. For example, a type containing a reference is covariant over its lifetime parameter, as demonstrated below.</p>\n\n<pre><code>struct Foo&lt;'a&gt; (PhantomData&lt;&amp;'a str&gt;);\n\n/// Foo is covariant over its lifetime parameter\npub fn test_foo&lt;'a:'b, 'b:'c, 'c&gt;() {\n    let fa: Foo&lt;'a&gt; = Foo(PhantomData);\n    let fb: Foo&lt;'b&gt; = Foo(PhantomData);\n    let fc: Foo&lt;'c&gt; = Foo(PhantomData);\n\n    let v: Vec&lt;Foo&lt;'b&gt;&gt; = vec![fa, fb]; // fc is not accepted\n}\n</code></pre>\n\n<p>On the other hand a function accepting a reference (or a type containing it) is contravariant over its lifetime parameter.</p>\n\n<pre><code>struct Bar&lt;'a&gt; (PhantomData&lt;fn(&amp;'a str)&gt;);\n\n/// Bar is contravariant over its lifetime parameter\npub fn test_bar&lt;'a:'b, 'b:'c, 'c&gt;() {\n    let ba: Bar&lt;'a&gt; = Bar(PhantomData);\n    let bb: Bar&lt;'b&gt; = Bar(PhantomData);\n    let bc: Bar&lt;'c&gt; = Bar(PhantomData);\n\n    let v: Vec&lt;Bar&lt;'b&gt;&gt; = vec![bb, bc]; // ba is not accepted\n}\n</code></pre>\n\n<p>Finally, a <em>trait</em> with a lifetime parameter is invariant over its lifetime parameter.</p>\n\n<pre><code>pub trait Baz&lt;'a&gt; {}\n\nimpl&lt;'a&gt; Baz&lt;'a&gt; for () {}\n\n/// Baz is invariant over its lifetime parameter\npub fn test_baz&lt;'a:'b, 'b:'c, 'c&gt;() {\n    let za: Box&lt;dyn Baz&lt;'a&gt;&gt; = Box::new(());\n    let zb: Box&lt;dyn Baz&lt;'b&gt;&gt; = Box::new(());\n    let zc: Box&lt;dyn Baz&lt;'c&gt;&gt; = Box::new(());\n\n    let v: Vec&lt;Box&lt;dyn Baz&lt;'b&gt;&gt;&gt; = vec![zb]; // za and zx are not accepted\n}\n</code></pre>\n\n<p>That makes sense, because the trait could be implemented both by a covariant and a contravariant type, as illustrated below.</p>\n\n<pre><code>impl&lt;'a&gt; Baz&lt;'a&gt; for Foo&lt;'a&gt; {}\nimpl&lt;'a&gt; Baz&lt;'a&gt; for Bar&lt;'a&gt; {}\n</code></pre>\n\n<p>My question is: can I force a trait to be covariant over its lifetime parameter? I would expect a marker trait such as:</p>\n\n<pre><code>trait Baz&lt;'a&gt;: Covariant&lt;'a&gt; {}\n</code></pre>\n\n<p>that would make it illegal to implement that trait with a contravariant type, and allow <code>za</code> to be a member of the vector <code>v</code> in the <code>test_baz</code> function above.</p>\n\n<p>Of course, being able to do the opposite (force a trait to be contravariant) could be useful as well...</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d26eee2aca9bf88f38b2281b0f8e423c\" rel=\"nofollow noreferrer\">Examples in the playground</a></p>\n"}, {"tags": ["function", "rust", "nested", "arguments"], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 2, "last_activity_date": 1546005837, "creation_date": 1546005837, "answer_id": 53959766, "question_id": 53959653, "link": "https://stackoverflow.com/questions/53959653/how-can-i-avoid-passing-a-lot-of-parameters-into-a-nested-function/53959766#53959766", "title": "How can I avoid passing a lot of parameters into a nested function?", "body": "<p>What you want is called a <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html\" rel=\"nofollow noreferrer\">closure</a>:</p>\n\n<pre><code>fn main() {\n    let var1 = 5;\n    let var2 = 12.2;\n    let foo = || {\n        var1 as f64 + var2\n    };\n    println!(\"foo(): {}\", foo()); // prints \"foo(): 17.2\"\n}\n</code></pre>\n"}], "owner": {"reputation": 69, "user_id": 8317542, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6b4c8b74ae2194526c77d4784889be0?s=128&d=identicon&r=PG&f=1", "display_name": "Mano", "link": "https://stackoverflow.com/users/8317542/mano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 53959766, "answer_count": 1, "score": -1, "last_activity_date": 1546120728, "creation_date": 1546005253, "last_edit_date": 1546120728, "question_id": 53959653, "link": "https://stackoverflow.com/questions/53959653/how-can-i-avoid-passing-a-lot-of-parameters-into-a-nested-function", "title": "How can I avoid passing a lot of parameters into a nested function?", "body": "<p>I have read that there is no way how to pass all outer local parameters to a nested function, but maybe there are some hacks to do it anyway? How can I avoid passing a lot of parameters into this function, for example:</p>\n\n<pre><code>let var1 = 5;\nlet var2 = 12.2;\nlet var3 = bar();\nlet var4 = tar() * var1;\n// etc ... a lot of variables ...\nfn foo() {\n    // want to have var1, var2, var3, var4 ...\n}\n</code></pre>\n"}, {"tags": ["docker", "rust", "dockerfile", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546000654, "post_id": 53957130, "comment_id": 94754985, "body": "that obviously a docker problem, I don&#39;t see how we could help you. BTW, <code>COPY . .</code> look useless."}, {"owner": {"reputation": 1290, "user_id": 3950006, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1299133342d886c09212b760cf23de9?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus Hansen", "link": "https://stackoverflow.com/users/3950006/rasmus-hansen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1546000709, "post_id": 53957130, "comment_id": 94755007, "body": "I would rather ask here, before I go poke docker people with a bug report, that was just me having messed up."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546002674, "post_id": 53957130, "comment_id": 94755805, "body": "My guess is that it hangs <i>after</i> downloading the crates. The command that hangs is <code>cargo test</code>, so it looks like the tests are taking a long time. The order of the &quot;Downloaded &lt;crate&gt;&quot; messges is non-deterministic, since crates are downloaded in parallel, so it may look like it&#39;s hanging for a different crate every time."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1546002868, "post_id": 53957130, "comment_id": 94755879, "body": "I just noticed that after downloading the crates, the next step is compiling the crates, which according to the messages did not start yet. This is a surprising problem, and I don&#39;t know what&#39;s causing it."}, {"owner": {"reputation": 1290, "user_id": 3950006, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1299133342d886c09212b760cf23de9?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus Hansen", "link": "https://stackoverflow.com/users/3950006/rasmus-hansen"}, "edited": false, "score": 0, "creation_date": 1546003114, "post_id": 53957130, "comment_id": 94755968, "body": "It doesn&#39;t seem to matter if I do test or build, but you are right, it might have finished downloading, but shouldn&#39;t it then start a compile for each package?"}, {"owner": {"reputation": 1290, "user_id": 3950006, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1299133342d886c09212b760cf23de9?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus Hansen", "link": "https://stackoverflow.com/users/3950006/rasmus-hansen"}, "edited": false, "score": 0, "creation_date": 1546007118, "post_id": 53957130, "comment_id": 94757474, "body": "Stargateur, your comment with COPY . . being useless actually managed to lead me to solve it. Changing it to <code>COPY . &#47;root&#47;brqueue</code> instead makes everything work flawlessly. So i might be cargo trying to compile everything in the entire container, including rust itself again."}], "answers": [{"comments": [{"owner": {"reputation": 1409, "user_id": 7518695, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dT38T.jpg?s=128&g=1", "display_name": "GrayCat", "link": "https://stackoverflow.com/users/7518695/graycat"}, "edited": false, "score": 0, "creation_date": 1599228527, "post_id": 53960031, "comment_id": 112718138, "body": "Helped me as well. Could you please edit your answer including your insight from comment under question? This is what really helped me."}], "tags": [], "owner": {"reputation": 1290, "user_id": 3950006, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1299133342d886c09212b760cf23de9?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus Hansen", "link": "https://stackoverflow.com/users/3950006/rasmus-hansen"}, "is_accepted": true, "score": 3, "last_activity_date": 1546007164, "creation_date": 1546007164, "answer_id": 53960031, "question_id": 53957130, "link": "https://stackoverflow.com/questions/53957130/building-rust-project-in-docker-causes-cargo-to-get-stuck-downloading-dependenci/53960031#53960031", "title": "Building rust project in docker causes Cargo to get stuck downloading dependencies", "body": "<p>So turns out the issue was with the <code>COPY . .</code> command, as it just copied everything into <code>/</code>, which was then attempted to be compiled (At least that's my belief). </p>\n"}], "owner": {"reputation": 1290, "user_id": 3950006, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c1299133342d886c09212b760cf23de9?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus Hansen", "link": "https://stackoverflow.com/users/3950006/rasmus-hansen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 690, "favorite_count": 0, "accepted_answer_id": 53960031, "answer_count": 1, "score": 5, "last_activity_date": 1546007164, "creation_date": 1545993363, "question_id": 53957130, "link": "https://stackoverflow.com/questions/53957130/building-rust-project-in-docker-causes-cargo-to-get-stuck-downloading-dependenci", "title": "Building rust project in docker causes Cargo to get stuck downloading dependencies", "body": "<p>I have a project that attempts to build a docker image with a rust binary, however it gets stuck when i tries to use Cargo to download the binaries. Running the image with <code>-it</code>, volume-mounting the src and then running <code>cargo build</code> manually works fine. </p>\n\n<p>Dockerfile:</p>\n\n<pre><code>FROM rust:1.31.1 AS builder\n# Install protoc\nRUN apt-get update &amp;&amp; apt-get install -y unzip \\\n    &amp;&amp; PROTOC_ZIP=protoc-3.3.0-linux-x86_64.zip \\\n    &amp;&amp; curl -OL https://github.com/google/protobuf/releases/download/v3.3.0/$PROTOC_ZIP \\\n    &amp;&amp; unzip -o $PROTOC_ZIP -d /usr/local bin/protoc \\\n    &amp;&amp; rm -f $PROTOC_ZIP\n\nCOPY . .\nRUN cargo test\nRUN cargo test --release -- --ignored\nRUN cargo build --release\n\nFROM debian\nCOPY --from=builder /target/release/brqueue /bin/brqueue\nRUN chmod +x /bin/brqueue\nCMD [\"/bin/brqueue\"]\n</code></pre>\n\n<p>I have tried with both rust 1.31.1 and 1.30.0. </p>\n\n<p>Running the build end up with a log something like this:</p>\n\n<pre><code>N:\\dev\\rust\\brqueue&gt;docker build .\nSending build context to Docker daemon  303.1kB\nStep 1/10 : FROM rust:1.31.1 AS builder\n ---&gt; d6daf33d7ea6\nStep 2/10 : RUN apt-get update &amp;&amp; apt-get install -y unzip     &amp;&amp; PROTOC_ZIP=protoc-3.3.0-linux-x86_64.zip     &amp;&amp; curl -OL https://github.com/google/protobuf/releases/download/v3.3.0/$PROTOC_ZIP     &amp;&amp; unzip -o $PROTOC_ZIP -d /usr/local bin/protoc     &amp;&amp; rm -f $PRO\nTOC_ZIP\n ---&gt; Using cache\n ---&gt; cc1d7cab5aca\nStep 3/10 : COPY . .\n ---&gt; 909bab589108\nStep 4/10 : RUN cargo test\n ---&gt; Running in 6a9d0bc0a3f1\n    Updating crates.io index\n Downloading crates ...\n  Downloaded log v0.4.6\n  Downloaded crossbeam v0.6.0\n  Downloaded futures v0.1.25\n  Downloaded serde_derive v1.0.82\n  Downloaded bincode v1.0.1\n  Downloaded serde v1.0.82\n  Downloaded futures-cpupool v0.1.8\n  Downloaded uuid v0.7.1\n  Downloaded tls-api v0.1.20\n  Downloaded bytes v0.4.11\n  Downloaded tls-api-native-tls v0.1.20\n  Downloaded byteorder v1.2.7\n  Downloaded protobuf v2.2.0\n  Downloaded protoc-rust v2.2.0\n  Downloaded cfg-if v0.1.6\n  Downloaded quote v0.6.10\n  Downloaded crossbeam-utils v0.6.3\n  Downloaded native-tls v0.1.5\n  Downloaded crossbeam-epoch v0.7.0\n  Downloaded proc-macro2 v0.4.24\n  Downloaded crossbeam-channel v0.3.4\n  Downloaded num_cpus v1.9.0\n  Downloaded iovec v0.1.2\n  Downloaded rand v0.5.5\n  Downloaded syn v0.15.23\n  Downloaded parking_lot v0.7.0\n  Downloaded lazy_static v1.2.0\n  Downloaded unicode-xid v0.1.0\n  Downloaded rand v0.6.1\n  Downloaded crossbeam-deque v0.6.3\n  Downloaded env_logger v0.6.0\n  Downloaded tempdir v0.3.7\n  Downloaded arrayvec v0.4.10\n  Downloaded protoc v2.2.0\n  Downloaded smallvec v0.6.7\n  Downloaded rand_core v0.2.2\n  Downloaded protobuf-codegen v2.2.0\n  Downloaded memoffset v0.2.1\n  Downloaded scopeguard v0.3.3\n  Downloaded openssl v0.9.24\n  Downloaded lazy_static v0.2.11\n  Downloaded libc v0.2.45\n  Downloaded rustc_version v0.2.3\n  Downloaded atty v0.2.11\n  Downloaded rand_chacha v0.1.0\n  Downloaded regex v1.1.0\n  Downloaded parking_lot_core v0.4.0\n  Downloaded remove_dir_all v0.5.1\n  Downloaded rand_pcg v0.1.1\n  Downloaded unreachable v1.0.0\n  Downloaded lock_api v0.1.5\n  Downloaded rand_core v0.3.0\n  Downloaded nodrop v0.1.13\n  Downloaded rand_xorshift v0.1.0\n  Downloaded humantime v1.2.0\n  Downloaded termcolor v1.0.4\n  Downloaded void v1.0.2\n  Downloaded thread_local v0.3.6\n  Downloaded aho-corasick v0.6.9\n  Downloaded bitflags v0.9.1\n  Downloaded owning_ref v0.4.0\n  Downloaded rand v0.4.3\n  Downloaded semver v0.9.0\n  Downloaded rand_hc v0.1.0\n  Downloaded memchr v2.1.2\n  Downloaded openssl-sys v0.9.39\n  Downloaded foreign-types v0.3.2\n  Downloaded quick-error v1.2.2\n  Downloaded rand_isaac v0.1.1\n  Downloaded utf8-ranges v1.0.2\n  Downloaded version_check v0.1.5\n  Downloaded regex-syntax v0.6.4\n  Downloaded pkg-config v0.3.14\n  Downloaded foreign-types-shared v0.1.1\n  Downloaded semver-parser v0.7.0\n  Downloaded cc v1.0.26\n  Downloaded stable_deref_trait v1.1.1\n  Downloaded ucd-util v0.1.3\n</code></pre>\n\n<p>Which crate it stops on doesn't seem stable, but is roughly within the same 10 packages. </p>\n\n<p>The full project code is here: <a href=\"https://github.com/zlepper/brqueue\" rel=\"noreferrer\">https://github.com/zlepper/brqueue</a> if that is any help. </p>\n"}, {"tags": ["rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1545975423, "post_id": 53954053, "comment_id": 94746433, "body": "it is because <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">NLL</a> feature,"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545976853, "post_id": 53954053, "comment_id": 94746807, "body": "be aware that you are codding in 2018 edition. Book was primary for 2015 edition."}, {"owner": {"reputation": 3670, "user_id": 868044, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/tQcbU.jpg?s=128&g=1", "display_name": "Dan", "link": "https://stackoverflow.com/users/868044/dan"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545976954, "post_id": 53954053, "comment_id": 94746827, "body": "@Stargateur very disappointing since book was just published a few months ago... in 2018!"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545978067, "post_id": 53954053, "comment_id": 94747118, "body": "@Dan Sorry about the inconvenance, there is a great ressource if you want to know all about the difference, <a href=\"https://doc.rust-lang.org/edition-guide/introduction.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/edition-guide/introduction.html</a>. There are great new feature so don&#39;t be so disappointed ;)"}], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 6, "last_activity_date": 1546120615, "last_edit_date": 1546120615, "creation_date": 1545975591, "answer_id": 53954118, "question_id": 53954053, "link": "https://stackoverflow.com/questions/53954053/why-did-compiler-not-error-on-this-mutable-borrow-when-there-is-an-immutable-bor/53954118#53954118", "title": "Why did compiler not error on this mutable borrow when there is an immutable borrowed string slice reference still in scope?", "body": "<p>This is a change due to the <a href=\"https://stackoverflow.com/a/50253558/\">non-lexical lifetimes</a>, the update made in the latest versions of Rust (stabilized in the 2018 edition introduced with Rust 1.31, if I'm not mistaken).</p>\n\n<p>In earlier versions of Rust (including the one on which the book is based), any reference was supposed to be alive for the whole scope, where it was created (that is, until the end of the enclosing braces). If you removed the line using <code>word</code> and try to compile the code on the old version, it would issue the same error &mdash; \"borrowed as mutable while borrowed as immutable\".</p>\n\n<p>Now, the borrow checker tracks whether the reference is really used. If you weren't using <code>word</code> after <code>s.clear()</code>, it would be assumed that the immutable reference to <code>s</code> can be safely dropped before <code>s.clear()</code> takes a mutable one, so, as you've mentioned, this code will be safely compiled. When the <code>println!</code> is there, the borrow checker sees that the immutable and mutable borrows' scoped are intersecting, and tells you exactly that &mdash; note that the error is divided in three parts: </p>\n\n<ol>\n<li>start of immutable borrow, </li>\n<li>start of mutable borrow, </li>\n<li>usage of immutable borrow.</li>\n</ol>\n"}], "owner": {"reputation": 3670, "user_id": 868044, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/tQcbU.jpg?s=128&g=1", "display_name": "Dan", "link": "https://stackoverflow.com/users/868044/dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 53954118, "answer_count": 1, "score": 5, "last_activity_date": 1546120615, "creation_date": 1545974953, "question_id": 53954053, "link": "https://stackoverflow.com/questions/53954053/why-did-compiler-not-error-on-this-mutable-borrow-when-there-is-an-immutable-bor", "title": "Why did compiler not error on this mutable borrow when there is an immutable borrowed string slice reference still in scope?", "body": "<p>I am learning Rust from <a href=\"https://nostarch.com/Rust\" rel=\"noreferrer\"><em>The Rust Programming Language</em> book available from No Starch Press</a> but ran into an issue where the compiler did not behave as explained in the book in chapter 4 on p. 77.</p>\n\n<p>Chapter 4 of the book is discussing ownership, and the example on p. 77 is similar to this without the final <code>println!()</code> in <code>main()</code> (I've also added comments and the function from p. 76 to create an MCVE). <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1c0b136f6fd10d82f1dd1f2dcc201e61\" rel=\"noreferrer\">I also created a playground</a>.</p>\n\n<pre><code>fn main() {\n    let mut s = String::from(\"Hello world!\");\n    let word = first_word(&amp;s);\n\n    // according to book, compiler should not allow this mutable borrow\n    // since I'm already borrowing as immutable, but it does allow it\n    s.clear();\n\n    // but of course I do get error here about immutable borrow later being\n    // used here, but shouldn't it have errored on the clear() operation before\n    // it got here?\n    println!(\"First word of s is \\\"{}\\\"\", word);\n}\n\n// return string slice reference to first word in string or entire string if\n// no space found\nfn first_word(s: &amp;String) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[..i];\n        }\n    }\n\n    &amp;s[..]\n}\n</code></pre>\n\n<p>I understand why the compiler throws an error where it currently does. But my understanding from the book is that it <em>should</em> have caused a compiler error when I tried to clear the string because I cannot borrow <code>s</code> as mutable because it is also borrowed as immutable, thus eliminating the possibility of the error I received (i.e., it should not compile <em>even without</em> my final <code>println!()</code>). But it compiles fine for me so long as I don't try to use the reference to <code>word</code> after the <code>clear()</code> operation.</p>\n\n<p>The book is using Rust 1.21.0 (<em>see</em> p. 2) whereas I am using Rust 1.31.0&mdash;so this is likely a change that has been introduced to the compiler, but I am trying to understand <em>why</em>. Why is it better to error as it currently does versus where the book said it would error?</p>\n\n<p><strong>To be clear, I understand the errors themselves.</strong> I'm trying to understand why it doesn't throw a compiler error in the location the book says it should (i.e., why the change in compiler behavior?).</p>\n"}, {"tags": ["module", "rust", "rust-2018"], "answers": [{"comments": [{"owner": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "edited": false, "score": 0, "creation_date": 1546036008, "post_id": 53954250, "comment_id": 94767753, "body": "I did that, keeping the contents of <code>lexer.rs</code> (previously <code>lexer&#47;mod.rs</code>) the same, but I&#39;m still getting that same error."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 4, "last_activity_date": 1546006593, "last_edit_date": 1546006593, "creation_date": 1545976562, "answer_id": 53954250, "question_id": 53953795, "link": "https://stackoverflow.com/questions/53953795/how-do-i-resolve-the-error-no-module-in-the-root-when-using-a-module-in-rust-2/53954250#53954250", "title": "How do I resolve the error &quot;no module in the root&quot; when using a module in Rust 2018?", "body": "<p>You need to move <code>mod.rs</code> to <code>lexer.rs</code>:</p>\n\n<pre><code>src/\n | main.rs\n | lexer.rs\n | lexer/\n    | lexer.rs\n    | tokens.rs\n</code></pre>\n\n<p>This change is described <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html#no-more-modrs\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "edited": false, "score": 0, "creation_date": 1546143930, "post_id": 53974714, "comment_id": 94788161, "body": "I eventually figured this out, hadn&#39;t had time yet to come back and create an answer explaining that. I misunderstood the linked posted in the previous answer and thought that had been replaced by <code>use crate::...</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1617561079, "last_edit_date": 1617561079, "creation_date": 1546134470, "answer_id": 53974714, "question_id": 53953795, "link": "https://stackoverflow.com/questions/53953795/how-do-i-resolve-the-error-no-module-in-the-root-when-using-a-module-in-rust-2/53974714#53974714", "title": "How do I resolve the error &quot;no module in the root&quot; when using a module in Rust 2018?", "body": "<p>You <strong>still</strong> need to declare that <em>main.rs</em> contains a module:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>mod lexer; // This, not `use`    \n\nfn main() {\n    println!(&quot;Hello, world!&quot;);\n    lexer::lexer::lex_stuff();\n}\n</code></pre>\n<p>Please take the time to re-read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the section about <a href=\"https://doc.rust-lang.org/book/ch07-05-separating-modules-into-different-files.html#separating-modules-into-different-files\" rel=\"nofollow noreferrer\">Separating Modules into Different Files</a>.</p>\n"}], "owner": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4810, "favorite_count": 1, "accepted_answer_id": 53974714, "answer_count": 2, "score": 10, "last_activity_date": 1617561079, "creation_date": 1545972502, "last_edit_date": 1546143268, "question_id": 53953795, "link": "https://stackoverflow.com/questions/53953795/how-do-i-resolve-the-error-no-module-in-the-root-when-using-a-module-in-rust-2", "title": "How do I resolve the error &quot;no module in the root&quot; when using a module in Rust 2018?", "body": "<p>I'm working on a project that is utilizing some local modules in folders under <code>src/</code>. I'm currently using Rust 2018 edition and one of the major changes for that is the <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"noreferrer\">handling of imports/<code>use</code> statements</a>.</p>\n\n<p>My module code is all working correctly, but as I started to pull it together to be used for the project as a whole I started getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `crate::lexer`\n --&gt; src/main.rs:1:5\n  |\n1 | use crate::lexer;\n  |     ^^^^^^^^^^^^ no `lexer` in the root\n</code></pre>\n\n<p>Currently, my code is set up like this:</p>\n\n<pre><code>src/\n | main.rs\n | lexer/\n    | mod.rs\n    | lexer.rs\n</code></pre>\n\n<p><strong>lexer/lexer.rs</strong></p>\n\n<pre><code>pub fn lex_stuff() -&gt; Vec&lt;String&gt; { vec![String::new(\"test\")] }\n</code></pre>\n\n<p><strong>lexer/mod.rs</strong></p>\n\n<pre><code>pub mod lexer;\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use crate::lexer;\n\nfn main() {\n    println!(\"Hello, world!\");\n    lexer::lexer::lex_stuff();\n}\n</code></pre>\n\n<p>I've attempted to resolve this by changing the statement to <code>use lexer</code> as well as <code>use self::lexer</code> and adding <code>extern crate lexer</code> (which obviously doesn't work, but what the heck, figured I'd try it). However, none of these have worked.</p>\n\n<p>What can I do to resolve the <code>no 'lexer' in the root</code> error?</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546121791, "post_id": 53950961, "comment_id": 94785104, "body": "Do you agree this is a duplicate of <a href=\"https://stackoverflow.com/q/30153973/155423\">Mutating the same data in multiple &#39;static closures</a>?"}, {"owner": {"reputation": 3442, "user_id": 5951320, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aZ8G2.jpg?s=128&g=1", "display_name": "Ash", "link": "https://stackoverflow.com/users/5951320/ash"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546200081, "post_id": 53950961, "comment_id": 94799220, "body": "@Shepmaster That looks like fundamentally the same question, yes \u2013 I can only assume I wasn&#39;t searching for the right things to find it. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 3442, "user_id": 5951320, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aZ8G2.jpg?s=128&g=1", "display_name": "Ash", "link": "https://stackoverflow.com/users/5951320/ash"}, "is_accepted": true, "score": 1, "last_activity_date": 1546121494, "last_edit_date": 1546121494, "creation_date": 1545945457, "answer_id": 53950962, "question_id": 53950961, "link": "https://stackoverflow.com/questions/53950961/how-can-i-construct-a-container-from-within-a-closure-with-a-static-bound/53950962#53950962", "title": "How can I construct a container from within a closure with a &#39;static bound?", "body": "<p>The basic problem here is that you're running into <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\">Rust's borrowing rules</a>:</p>\n\n<blockquote>\n  <p>Given an object <code>T</code>, it is only possible to have one of the following:</p>\n  \n  <ul>\n  <li>Having several immutable references (<code>&amp;T</code>) to the object (also known as <strong>aliasing</strong>).</li>\n  <li>Having one mutable reference (<code>&amp;mut T</code>) to the object (also known as <strong>mutability</strong>).</li>\n  </ul>\n</blockquote>\n\n<p>You are trying to keep a reference <code>&amp;Vec</code> to your Vec (so you can use it later) whilst simultaneously trying to add things to it in a closure (i.e. an <code>&amp;mut Vec</code>). Rust doesn't know that you won't try to use the <code>&amp;Vec</code> while the closure is using the <code>&amp;mut Vec</code>, so it doesn't let you create a <code>&amp;mut Vec</code> in the closure while there's still a <code>&amp;Vec</code> hanging around outside the closure.</p>\n\n<p>The next best thing you can do is to use an <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>. This will allow you to sidestep the compiler's borrow-checking and instead defer it to runtime. However: this means that if you try to violate the borrowing rules while your program is running, it will panic instead of being a compile-time error!</p>\n\n<p>For the most part, you can treat the <code>Rc&lt;Vec&lt;_&gt;&gt;</code> the same as a normal <code>Vec</code>, since <code>Rc</code> implements <code>Deref</code>.</p>\n\n<p>Since you also want to be able to mutate the <code>Vec</code> in order to add things to it, you also need to put it in a <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>. This will put a lock around the <code>Vec</code>, making sure that you only have one <code>&amp;mut Vec</code> available at once, and that if you have an <code>&amp;Vec</code>, you can't have a <code>&amp;mut Vec</code> (again, if you try to violate the rules, your program will panic). You can use the <code>.borrow()</code> and <code>.borrow_mut()</code> methods on <code>RefCell</code> to get shared and mutable references to the Vec (there are also <code>try_*</code> variants of these methods, if you can do something sensible if a borrow is not possible).</p>\n\n<p>If you didn't use a <code>RefCell</code>, you would only be able to obtain immutable/shared references (<code>&amp;Vec</code>) from the <code>Rc</code> (unless you only had one <code>Rc</code>, but then you wouldn't need an <code>Rc</code>!)</p>\n\n<p>Try something like the following:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\nlet sink_infos: Rc&lt;RefCell&lt;Vec&lt;StreamInfo&gt;&gt;&gt; = Rc::new(RefCell::new(Vec::new()));\nlet sink_infos2 = sink_infos.clone(); // Create a new Rc which points to the same data.\nlet op = introspector.get_sink_input_info_list(move |result| match result {\n    pulse::callbacks::ListResult::Item(info) =&gt; sink_infos2.borrow_mut().push(info.into()),\n    pulse::callbacks::ListResult::End =&gt; {},\n    pulse::callbacks::ListResult::Error =&gt; panic!(\"Error getting sink input info\"),\n});\n</code></pre>\n"}], "owner": {"reputation": 3442, "user_id": 5951320, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aZ8G2.jpg?s=128&g=1", "display_name": "Ash", "link": "https://stackoverflow.com/users/5951320/ash"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "closed_date": 1546216718, "accepted_answer_id": 53950962, "answer_count": 1, "score": 0, "last_activity_date": 1546121494, "creation_date": 1545945457, "last_edit_date": 1546121228, "question_id": 53950961, "link": "https://stackoverflow.com/questions/53950961/how-can-i-construct-a-container-from-within-a-closure-with-a-static-bound", "closed_reason": "Duplicate", "title": "How can I construct a container from within a closure with a &#39;static bound?", "body": "<p>I'm using the <a href=\"https://docs.rs/libpulse-binding/2.5.0/libpulse_binding/index.html\" rel=\"nofollow noreferrer\">libpulse_binding</a> library, and I'm trying to obtain a sequence of <a href=\"https://docs.rs/libpulse-binding/2.5.0/libpulse_binding/context/introspect/struct.SinkInputInfo.html\" rel=\"nofollow noreferrer\"><code>SinkInputInfo</code></a>s from the <a href=\"https://docs.rs/libpulse-binding/2.5.0/libpulse_binding/context/introspect/struct.Introspector.html#method.get_sink_input_info_list\" rel=\"nofollow noreferrer\"><code>get_sink_input_info_list</code></a> function:</p>\n\n<pre><code>pub fn get_sink_input_info_list&lt;F&gt;(\n    &amp;self,\n    callback: F,\n) -&gt; Operation&lt;dyn FnMut(ListResult&lt;&amp;SinkInputInfo&gt;)&gt;\nwhere\n    F: FnMut(ListResult&lt;&amp;SinkInputInfo&gt;) + 'static,\n</code></pre>\n\n<p>The function takes a callback and calls it once for each <code>SinkInputInfo</code> it produces. I'm trying to collect all those <code>SinkInputInfo</code>s into a single list so I can get a clearer view of the state of the world. Irritatingly, <code>SinkInputInfo</code> doesn't implement <code>Copy</code> or <code>Clone</code>, so I made a custom struct and implemented <code>From</code> to get the useful information out of the <code>SinkInputInfo</code>:</p>\n\n<pre><code>struct StreamInfo {\n    readable_name: String,\n    binary_name: String,\n    pid: String,\n}\n\nimpl From&lt;&amp;pulse::context::introspect::SinkInputInfo&lt;'_&gt;&gt; for StreamInfo {\n    fn from(info: &amp;pulse::context::introspect::SinkInputInfo) -&gt; Self {\n        let name = info.proplist.gets(\"application.name\").unwrap();\n        let binary = info.proplist.gets(\"application.process.binary\").unwrap();\n        let pid = info.proplist.gets(\"application.process.id\").unwrap();\n        StreamInfo {\n            readable_name: name,\n            binary_name: binary,\n            pid: pid,\n        }\n    }\n}\n</code></pre>\n\n<p>However, this doesn't seem to work. I have the following code:</p>\n\n<pre><code>let mut sink_infos: Vec&lt;StreamInfo&gt; = Vec::new();\nlet op = introspector.get_sink_input_info_list(|result| match result {\n    pulse::callbacks::ListResult::Item(info) =&gt; sink_infos.push(info.into()),\n    pulse::callbacks::ListResult::End =&gt; {},\n    pulse::callbacks::ListResult::Error =&gt; panic!(\"Error getting sink input info\"),\n});\n</code></pre>\n\n<p>but it doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `sink_infos`, which is owned by the current function\n  --&gt; src/bin/play-pause.rs:49:52\n   |\n49 |     let op = introspector.get_sink_input_info_list(|result| match result {\n   |                                                    ^^^^^^^^ may outlive borrowed value `sink_infos`\n50 |         pulse::callbacks::ListResult::Item(info) =&gt; sink_infos.push(info.into()),\n   |                                                     ---------- `sink_infos` is borrowed here\n   |\nnote: function requires argument type to outlive `'static`\n  --&gt; src/bin/play-pause.rs:49:14\n   |\n49 |       let op = introspector.get_sink_input_info_list(|result| match result {\n   |  ______________^\n50 | |         pulse::callbacks::ListResult::Item(info) =&gt; sink_infos.push(info.into()),\n51 | |         pulse::callbacks::ListResult::End =&gt; {},\n52 | |         pulse::callbacks::ListResult::Error =&gt; panic!(\"Error getting sink input info\"),\n53 | |     });\n   | |______^\nhelp: to force the closure to take ownership of `sink_infos` (and any other referenced variables), use the `move` keyword\n   |\n49 |     let op = introspector.get_sink_input_info_list(move |result| match result {\n   |                                                    ^^^^^^^^^^^^^\n</code></pre>\n\n<p>tldr: the closure has to have the <code>'static</code> lifetime because libpulse_binding says so (presumably because it gets handed to the PulseAudio C API, which can then do whatever it likes with it), but <code>sink_infos</code> is not <code>'static</code>, and the closure has to borrow <code>sink_infos</code> in order to append to it, which makes the closure not <code>'static</code>, IIUC.</p>\n\n<p>How can I make a <code>Vec</code> (or any container, I'm not fussy) of <code>SinkInputInfo</code>s given a <code>'static</code> closure that gets called repeatedly with a <code>&amp;SinkInputInfo</code>?</p>\n"}, {"tags": ["rust", "pyo3"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1545946764, "post_id": 53950390, "comment_id": 94740871, "body": "From a quick look at the documentation, it looks like downcasting is done using the <a href=\"https://docs.rs/pyo3/0.5.2/pyo3/struct.PyObject.html#method.extract\" rel=\"nofollow noreferrer\"><code>PyObject::extract()</code> method</a>, something like <code>let rust_str: &amp;str = obj.extract(py)?</code>, where <code>py</code> is the <a href=\"https://docs.rs/pyo3/0.5.2/pyo3/python/struct.Python.html\" rel=\"nofollow noreferrer\">GIL wrapper</a>. I haven&#39;t tried it, though."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545947007, "post_id": 53950390, "comment_id": 94740948, "body": "On second look, the <a href=\"https://docs.rs/pyo3/0.5.2/pyo3/index.html#example-1\" rel=\"nofollow noreferrer\">example on the start page of the documentation</a> looks even more  promising \u2013 you can use the <code>pyfn</code> attribute to have the conversion from Python to Rust types handled for you implicitly."}, {"owner": {"reputation": 153, "user_id": 7810882, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31bd8d33e639ec2e82414a9c730d9d33?s=128&d=identicon&r=PG&f=1", "display_name": "user7810882", "link": "https://stackoverflow.com/users/7810882/user7810882"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545947352, "post_id": 53950390, "comment_id": 94741039, "body": "Thanks. The first one works. <code>let py_str: &amp;PyString = obj.extract()?;</code>. <code>let str = py_str.to_string()?;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 7628064, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lls-riCgjEo/AAAAAAAAAAI/AAAAAAAAAig/-nbSfaYxFT4/photo.jpg?sz=128", "display_name": "Amiya Mandal", "link": "https://stackoverflow.com/users/7628064/amiya-mandal"}, "is_accepted": false, "score": 0, "last_activity_date": 1604640410, "creation_date": 1604640410, "answer_id": 64709315, "question_id": 53950390, "link": "https://stackoverflow.com/questions/53950390/how-to-convert-pyobjectref-to-pystring/64709315#64709315", "title": "How to convert PyObjectRef to PyString?", "body": "<pre><code>fn f(list: &amp;PyList) -&gt; PyResult&lt;SomeClass&gt; {\n    for i in list.iter() {\n        let mut str_2 = match i.extract() {\n            Ok(val) =&gt;{\n                val\n            },\n            Err(why) =&gt; {\n                panic!(&quot;{:}&quot;, why);\n                String::new()\n            }\n        };\n        \n        println!(&quot;{}&quot;, str_2);\n    }\n    // ...\n}\n</code></pre>\n<p>I guess that's the answer cause unwrap is not working and the python list might have any object like number or string or even dict. For that case, Fail-safe will be checking of each and every data type which pyo3 has in it.</p>\n"}], "owner": {"reputation": 153, "user_id": 7810882, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/31bd8d33e639ec2e82414a9c730d9d33?s=128&d=identicon&r=PG&f=1", "display_name": "user7810882", "link": "https://stackoverflow.com/users/7810882/user7810882"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 190, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1604663875, "creation_date": 1545941736, "last_edit_date": 1604663875, "question_id": 53950390, "link": "https://stackoverflow.com/questions/53950390/how-to-convert-pyobjectref-to-pystring", "title": "How to convert PyObjectRef to PyString?", "body": "<p>I have a function that accepts a Python list. I expect the list to be made of strings. How do I extract them?</p>\n<pre><code>fn f(list: &amp;PyList) -&gt; PyResult&lt;SomeClass&gt; {\n    for obj in list.iter() {\n        let rust_string = PyString::from_object(obj, &quot;ASCII&quot;, &quot;strict&quot;)?.to_string()?;\n        // fails with `TypeError: decoding str is not supported`\n        \n        if PyString::is_exact_instance(obj) {\n            let py_str: PyString = unsafe {std::mem::transmute(str)};\n            let rust_str = py_str.to_string()?;\n            // panics with failed assertion in PyString.as_bytes()\n        }\n    }\n    // ...\n}\n\n// Python call site\nf([&quot;string1&quot;, &quot;string2&quot;])\n</code></pre>\n<p>Software versions: Python 3.7, nightly Rust 1.33.0, pyo3 0.5.2.</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545931266, "post_id": 53948147, "comment_id": 94735711, "body": "Do you want to capture both numbers or just the first one ? Your code makes it harder to notice but you have two levels of grouping."}, {"owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545931522, "post_id": 53948147, "comment_id": 94735808, "body": "Both numbers, actually, I want also to be able to capture every number of the following configurations : {12.34}, {12.34, 56.7, ..., 8.9}"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545931698, "post_id": 53948147, "comment_id": 94735880, "body": "You mean an array of floats, all between { and } ? This would be a very different regex"}, {"owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545949058, "post_id": 53948147, "comment_id": 94741518, "body": "It is what I want to match, but actually I managed to build it after your hint on the escaping of the curly bracket"}], "answers": [{"comments": [{"owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "edited": false, "score": 0, "creation_date": 1545931945, "post_id": 53948597, "comment_id": 94735967, "body": "Using the escaping with \\ did the trick, which is weird as I thought for curly bracket you could also use the double bracket {{ (according to <a href=\"https://stackoverflow.com/questions/25569865/how-to-escape-curly-braces-in-a-format-string-in-rust\" title=\"how to escape curly braces in a format string in rust\">stackoverflow.com/questions/25569865/&hellip;</a>)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545947334, "post_id": 53948597, "comment_id": 94741036, "body": "I would recommend using <code>\\d+</code> instead of <code>\\d*</code> because elswise you would also match <code>.</code> which is not what you want (and also performes better on some implemenetations)"}, {"owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "edited": false, "score": 0, "creation_date": 1545949207, "post_id": 53948597, "comment_id": 94741555, "body": "Actually I am not sure about the last point as I want to be able to match 0.123, .123, 123 or 123., the use of d+ would break these possibilities"}, {"owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "edited": false, "score": 0, "creation_date": 1545949272, "post_id": 53948597, "comment_id": 94741572, "body": "@DenysS&#233;guret, yes indeed I was confusing format strings and regexes, thank you for pointing that out"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 4, "last_activity_date": 1546116131, "last_edit_date": 1546116131, "creation_date": 1545930931, "answer_id": 53948597, "question_id": 53948147, "link": "https://stackoverflow.com/questions/53948147/decimal-literal-empty-when-combining-several-strings-for-a-regex-in-rust/53948597#53948597", "title": "&quot;decimal literal empty&quot; when combining several strings for a regex in Rust", "body": "<p>There are several problems in your code:</p>\n\n<ol>\n<li><p><a href=\"https://docs.rs/regex/1.1.0/regex/#escape-sequences\" rel=\"nofollow noreferrer\">Escaping a <code>{</code> in regex is done with <code>\\{</code></a>.</p></li>\n<li><p>Your <code>.</code> matches any character and doesn't take what you want. You must escape it.</p></li>\n<li><p>You're capturing more than just the number, which makes the parsing more complex.</p></li>\n<li><p>Your regex building is unnecessary verbose, you may comment without it.</p></li>\n</ol>\n\n<p>Here's a proposed improved version:</p>\n\n<pre><code>use regex::Regex;\n\npub fn parse_axis_values(str_values: &amp;str) -&gt; Vec&lt;f32&gt; {\n    let re = Regex::new(r\"(?x)\n        \\s*\\{\\s*        # opening\n        (\\d*\\.\\d*)      # captured float\n        \\s*,\\s*         # separator\n        \\d*\\.\\d*        # ignored float\n        \\s*\\}\\s*        # closing\n    \").unwrap();\n    let mut vec_axis1: Vec&lt;f32&gt; = Vec::new();\n    if let Some(c) = re.captures(str_values) {\n        if let Some(g) = c.get(1) {\n            vec_axis1.push(g.as_str().parse().unwrap());\n        }\n    }\n    vec_axis1\n}\n\nfn main() {\n    let vector_string: &amp;str = \"{12.34, 13.}\";\n    let vec = parse_axis_values(vector_string);\n    println!(\"v: {:?}\", vec);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c34149f213c494626e9946af793d097c\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>If you call this function several times, you might want to <a href=\"https://docs.rs/regex/1.1.0/regex/#example-avoid-compiling-the-same-regex-in-a-loop\" rel=\"nofollow noreferrer\">avoid recompiling the regex at each call</a> too. </p>\n\n<blockquote>\n  <p>I want to be able to match <code>0.123</code>, <code>.123</code>, <code>123</code> or <code>123.</code>, the use of <code>d+</code> would break these possibilities</p>\n</blockquote>\n\n<p>It looks like you want to fetch all the floats in the string. This could be simply done like this:</p>\n\n<pre><code>use regex::Regex;\n\npub fn parse_axis_values(str_values: &amp;str) -&gt; Vec&lt;f32&gt; {\n    let re = Regex::new(r\"\\d*\\.\\d*\").unwrap();\n    let mut vec_axis1: Vec&lt;f32&gt; = Vec::new();\n    for c in re.captures_iter(str_values) {\n        vec_axis1.push(c[0].parse().unwrap());\n    }\n    vec_axis1\n}\n</code></pre>\n\n<p>If you want both:</p>\n\n<ul>\n<li>to check the complete string is correctly wrapped between <code>{</code> and <code>}</code></li>\n<li>to capture all numbers</li>\n</ul>\n\n<p>Then you could either:</p>\n\n<ul>\n<li>combine two regexes (the first one used to extract the internal part)</li>\n<li>use a Serde-based parser (I wouldn't at this point but it would be interesting if the problem's complexity grows)</li>\n</ul>\n"}], "owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 53948597, "answer_count": 1, "score": 0, "last_activity_date": 1546117378, "creation_date": 1545928618, "last_edit_date": 1546117378, "question_id": 53948147, "link": "https://stackoverflow.com/questions/53948147/decimal-literal-empty-when-combining-several-strings-for-a-regex-in-rust", "title": "&quot;decimal literal empty&quot; when combining several strings for a regex in Rust", "body": "<p>I'm looking to parse a string to create a vector of floats:</p>\n\n<pre><code>fn main() {\n    let vector_string: &amp;str = \"{12.34, 13.}\";\n    let vec = parse_axis_values(vector_string);\n    // --- expected output vec: Vec&lt;f32&gt; = vec![12.34, 13.]\n}\n\nuse regex::Regex;\n\npub fn parse_axis_values(str_values: &amp;str) -&gt; Vec&lt;f32&gt; {\n    let pattern_float = String::from(r\"\\s*(\\d*.*\\d*)\\s*\");\n    let pattern_opening = String::from(r\"\\s*{{\");\n    let pattern_closing = String::from(r\"}}\\s*\");\n    let pattern =\n        pattern_opening + \"(\" + &amp;pattern_float + \",)*\" + &amp;pattern_float + &amp;pattern_closing;\n    let re = Regex::new(&amp;pattern).unwrap();\n    let mut vec_axis1: Vec&lt;f32&gt; = Vec::new();\n    // --- snip : for loop for adding the elements to the vector ---\n\n    vec_axis1\n}\n</code></pre>\n\n<p>This code compiles but an error arises at runtime when unwrapping the <code>Regex::new()</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>regex parse error:\n    \\s*{{(\\s*(\\d*.*\\d*)\\s*,)*\\s*(\\d*.*\\d*)\\s*}}\\s*\n        ^\nerror: decimal literal empty\n</code></pre>\n\n<p>According to other posts, this error can arise when escaping the curly bracket <code>{</code> is not properly done, but I think I escaped the bracket properly.</p>\n\n<p>What is wrong with this regex?</p>\n"}, {"tags": ["struct", "rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 180, "user_id": 2469620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e854ea217f20520d7a1e97473b483da?s=128&d=identicon&r=PG", "display_name": "Barlog", "link": "https://stackoverflow.com/users/2469620/barlog"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1545949130, "post_id": 53947975, "comment_id": 94741539, "body": "@mcarton you right, thank you!"}], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 1, "last_activity_date": 1545933967, "creation_date": 1545933967, "answer_id": 53949110, "question_id": 53947975, "link": "https://stackoverflow.com/questions/53947975/return-references-to-parts-of-one-struct-as-fields-of-another-struct/53949110#53949110", "title": "Return references to parts of one struct as fields of another struct", "body": "<p>The lifetime of the argument <code>f</code> to <code>parse</code> ends when <code>parse</code> returns.  Older Rust compiler versions returned an error message which might have been more useful:</p>\n\n<pre><code>error[E0597]: `f` does not live long enough\n  --&gt; t.rs:41:17\n   |\n41 |         let a = f.get_a();\n   |                 ^ borrowed value does not live long enough\n...\n45 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 35:1...\n  --&gt; t.rs:35:1\n   |\n35 | / impl&lt;'a&gt; Bar&lt;'a&gt; {\n36 | |     pub fn new(f: Foo) -&gt; Self {\n37 | |         Bar::parse(f)\n38 | |     }\n...  |\n45 | |     }\n46 | | }\n   | |_^\n</code></pre>\n\n<p>I can get your example to compile by changing the definition of <code>Bar</code> to:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Bar&lt;'a&gt; {\n    foo: &amp;'a Foo,\n    a: &amp;'a str,\n    b: &amp;'a str,\n}\n</code></pre>\n\n<p>and passing references of type <code>&amp;'a Foo</code> to <code>Bar::new</code> and <code>Bar::parse</code>.  However, it is unclear if this solution will work for your original problem.  Maybe you need to use <code>Rc</code> if the ownership structure is too complicated.</p>\n"}], "owner": {"reputation": 180, "user_id": 2469620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e854ea217f20520d7a1e97473b483da?s=128&d=identicon&r=PG", "display_name": "Barlog", "link": "https://stackoverflow.com/users/2469620/barlog"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 557, "favorite_count": 0, "closed_date": 1546115371, "answer_count": 1, "score": 2, "last_activity_date": 1546115407, "creation_date": 1545927775, "last_edit_date": 1546115407, "question_id": 53947975, "link": "https://stackoverflow.com/questions/53947975/return-references-to-parts-of-one-struct-as-fields-of-another-struct", "closed_reason": "Duplicate", "title": "Return references to parts of one struct as fields of another struct", "body": "<p>I want move one struct into another and get references on parts of first struct as parts of other without cloning or copying, if it is possible. How to do it in right way?</p>\n\n<pre><code>fn main() {\n    let foo = Foo::new();\n    let bar = Bar::new(foo);\n    println!(\"{:?}\", bar);\n}\n\n#[derive(Debug)]\nstruct Foo {\n    v: String,\n}\n\nimpl Foo {\n    pub fn new() -&gt; Self {\n        Foo {\n            v: String::from(\"a|b\"),\n        }\n    }\n\n    pub fn get_a(&amp;self) -&gt; &amp;str {\n        &amp;self.v[0..1]\n    }\n\n    pub fn get_b(&amp;self) -&gt; &amp;str {\n        &amp;self.v[2..3]\n    }\n}\n\n#[derive(Debug)]\nstruct Bar&lt;'a&gt; {\n    foo: Foo,\n    a: &amp;'a str,\n    b: &amp;'a str,\n}\n\nimpl&lt;'a&gt; Bar&lt;'a&gt; {\n    pub fn new(f: Foo) -&gt; Self {\n        Bar::parse(f)\n    }\n\n    fn parse(f: Foo) -&gt; Self {\n        let a = f.get_a();\n        let b = f.get_b();\n\n        Bar { foo: f, a, b }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=53c04a6740950fa7584018add40f0c9b\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>I got an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing function parameter `f`\n  --&gt; src/main.rs:44:9\n   |\n41 |         let a = f.get_a();\n   |                 - `f` is borrowed here\n...\n44 |         Bar { foo: f, a, b }\n   |         ^^^^^^^^^^^^^^^^^^^^ returns a value referencing data owned by the current function\n\nerror[E0515]: cannot return value referencing function parameter `f`\n  --&gt; src/main.rs:44:9\n   |\n42 |         let b = f.get_b();\n   |                 - `f` is borrowed here\n43 | \n44 |         Bar { foo: f, a, b }\n   |         ^^^^^^^^^^^^^^^^^^^^ returns a value referencing data owned by the current function\n\nerror[E0505]: cannot move out of `f` because it is borrowed\n  --&gt; src/main.rs:44:20\n   |\n35 | impl&lt;'a&gt; Bar&lt;'a&gt; {\n   |      -- lifetime `'a` defined here\n...\n41 |         let a = f.get_a();\n   |                 - borrow of `f` occurs here\n...\n44 |         Bar { foo: f, a, b }\n   |         -----------^--------\n   |         |          |\n   |         |          move out of `f` occurs here\n   |         returning this value requires that `f` is borrowed for `'a`\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 1, "creation_date": 1545875656, "post_id": 53938867, "comment_id": 94717614, "body": "<code>.collect()</code> into an iterable of your choice. See the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#examples-26\" rel=\"nofollow noreferrer\">examples</a>."}, {"owner": {"reputation": 391, "user_id": 9546425, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-iyh8LtJD6J0/AAAAAAAAAAI/AAAAAAAAAtg/Wgk60jpfgmY/photo.jpg?sz=128", "display_name": "MMagueta", "link": "https://stackoverflow.com/users/9546425/mmagueta"}, "reply_to_user": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1545875807, "post_id": 53938867, "comment_id": 94717633, "body": "Do you mean to try &quot;line.unwrap().split(&quot;=&quot;).collect()&quot;? if so, I&#39;ve already did and when I try to &quot;.next()&quot; it gives an error saying &quot;cannot infer type&quot; to words"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1545875949, "post_id": 53938867, "comment_id": 94717654, "body": "The result of <code>split</code> is iterable. but you likely have lifetime problems because <code>line.unwrap()</code> is a temporary, have you tried <code>let words = line.unwrap(); let words = words.split(&quot;=&quot;);</code>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1545876021, "post_id": 53938867, "comment_id": 94717665, "body": "See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=11337f7e299987d284e031cf9679f875\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}], "answers": [{"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 4, "last_activity_date": 1546115225, "last_edit_date": 1546115225, "creation_date": 1545881086, "answer_id": 53939398, "question_id": 53938867, "link": "https://stackoverflow.com/questions/53938867/how-do-i-create-an-iterator-of-lines-from-a-file-that-have-been-split-into-piece/53939398#53939398", "title": "How do I create an iterator of lines from a file that have been split into pieces?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/53938867/iterators-in-rust#comment94717614_53938867\">@Mateen commented</a>, <code>split</code> already returns an iterable. To fix the lifetime problems, save the value returned by <code>unwrap()</code> into a variable before calling <code>split</code>. </p>\n\n<p>I'll try to explain the lifetime issue here.</p>\n\n<p>First it really helps to look at the function signatures. </p>\n\n<pre><code>pub fn unwrap(self) -&gt; T\n</code></pre>\n\n\n\n<pre><code>pub fn split&lt;'a, P: Pattern&lt;'a&gt;&gt;(&amp;'a self, pat: P) -&gt; Split&lt;'a, P&gt;\n</code></pre>\n\n<p><code>unwrap</code> is pretty simple, it takes ownership of itself and returns the inner value. </p>\n\n<p><code>split</code> looks scary, but it's not too difficult, <code>'a</code> is just a name for the lifetime, and it just states how long the return value can be used for. In this case it means that both the input arguments must live at least as long as the return value.</p>\n\n<pre><code>//                   Takes by reference, no ownership change\n//                               v\npub fn split&lt;'a, P: Pattern&lt;'a&gt;&gt;(&amp;'a self, pat: P) -&gt; Split&lt;'a, P&gt;\n//           ^              ^      ^                         ^\n//           |              |--|---|                         |\n// This just declares a name.  |                             |\n//                             |                             |\n//           Both of these values must last longer than -----|\n</code></pre>\n\n<p>This is because <code>split</code> doesn't copy any of the string, it just points to the position on the original string where the split takes place. If the original string for some reason was dropped, the <code>Split</code> will not point to invalid data.</p>\n\n<p>A variable's lifetime (unless the ownership is passed to something else) lasts till it is out of scope, this is either at the closing <code>}</code> if it is named (e.g. with <code>let</code>) or it is at the end of line / <code>;</code></p>\n\n<p>That's why there is a lifetime problem in your code:</p>\n\n<pre><code>for line in std::io::BufReader::new(std::fs::File::open(path).expect(\"Failed at opening file.\")).lines() {\n    let words = line\n        .unwrap() // &lt;--- Unwrap consumes `line`, `line` can not be used after calling unwrap(),\n        .split(\"=\") // Passed unwrap()'s output to split as a reference\n        ; //&lt;-- end of line, unwrap()'s output is dropped due to it not being saved to a variable, the result of split now points to nothing, so the compiler complains.\n}\n</code></pre>\n\n<h2>Solutions</h2>\n\n<p>Saving the return value of <code>unwrap()</code></p>\n\n<pre><code>for line in std::io::BufReader::new(std::fs::File::open(\"abc\").expect(\"Failed at opening file.\")).lines() {\n    let words = line.unwrap();\n    let words_split = words.split(\"=\");\n} // &lt;--- `word`'s lifetime ends here, but there is no lifetime issues since `words_split` also ends here.\n</code></pre>\n\n<p>You can rename <code>words_split</code> to <code>words</code> to shadow the original variable to not clutter variable names if you want, this also doesn't cause an issue since shadowed variables are not dropped immediately, but at the end of its original scope. </p>\n\n<p><strong>Or</strong></p>\n\n<p>Rather than having a iterator of type <code>str</code>, all of which are just fancy pointers to the original string, you can copy each slice out to it's own string, removing the reliance on keeping the original string in scope.</p>\n\n<p>There is almost certainly no reason to do this in your case, since copying each slice takes more processing power and more memory, but rust gives you this control.</p>\n\n<pre><code>let words = line\n    .unwrap()\n    .split(\"=\")\n    .map(|piece|\n        piece.to_owned() // &lt;--- This copies all the characters in the str into it's own String.\n    ).collect::&lt;Vec&lt;String&gt;&gt;()\n    ; // &lt;--- unwrap()'s output dropped here, but it doesn't matter since the pieces no longer points to the original line string.\n\nlet words_iterator = words.iter();\n</code></pre>\n\n<p><code>collect</code> gives you the error <code>cannot infer type</code> because you didn't state what you wanted to collect into, either use the turbofish syntax above, or state it on <code>words</code> i.e. <code>let words: Vec&lt;String&gt; = ...</code> </p>\n\n<p>You have to call <code>collect</code> because <code>map</code> doesn't do anything unless you use it, but that's out of the scope of this answer.</p>\n"}], "owner": {"reputation": 391, "user_id": 9546425, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-iyh8LtJD6J0/AAAAAAAAAAI/AAAAAAAAAtg/Wgk60jpfgmY/photo.jpg?sz=128", "display_name": "MMagueta", "link": "https://stackoverflow.com/users/9546425/mmagueta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "accepted_answer_id": 53939398, "answer_count": 1, "score": 0, "last_activity_date": 1546115225, "creation_date": 1545874838, "last_edit_date": 1546114597, "question_id": 53938867, "link": "https://stackoverflow.com/questions/53938867/how-do-i-create-an-iterator-of-lines-from-a-file-that-have-been-split-into-piece", "title": "How do I create an iterator of lines from a file that have been split into pieces?", "body": "<p>I have a file that I need to read line-by-line and break into two sentences separated by a \"=\". I am trying to use iterators, but I can't find how to use it properly within <code>split</code>. The documentation says that <code>std::str::Split</code> implements the trait, but I'm still clueless how to use it.</p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{prelude::*, BufReader},\n};\n\nfn example(path: &amp;str) {\n    for line in BufReader::new(File::open(path).expect(\"Failed at opening file.\")).lines() {\n        let words = line.unwrap().split(\"=\"); //need to make this an iterable\n    }\n}\n</code></pre>\n\n<p>How can I use a trait I know is already implemented into something like split?</p>\n"}]