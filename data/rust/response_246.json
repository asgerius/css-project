[{"tags": ["rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569449338, "post_id": 58107143, "comment_id": 102604893, "body": "<a href=\"https://stackoverflow.com/questions/57225055/in-rust-can-you-own-a-string-literal\">This question and its associated answer</a> should explain why it is not possible to do so. <code>&amp;str</code>, even if you define its lifetime as <code>&#39;static</code>, is still a reference to something. Where do you think the data is stored?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569452227, "post_id": 58107143, "comment_id": 102605517, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47803862/how-can-i-create-100-distinct-labels-with-type-static-str\">How can I create 100 distinct labels with type &amp;&#39;static str?</a>. I would recommend code generation if 60 is a compile time constant. <code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, ... &quot;59&quot;]</code> might not be <i>beautiful</i>, but it&#39;s trivial to validate and (presumably) never needs to change."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569452570, "post_id": 58107143, "comment_id": 102605580, "body": "(Note that <code>1..=59</code> is only 59 elements, not 60; you appear to have a fencepost error.)"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "closed_date": 1569460542, "answer_count": 0, "score": 0, "last_activity_date": 1569449139, "creation_date": 1569449139, "question_id": 58107143, "link": "https://stackoverflow.com/questions/58107143/how-to-sequentially-create-an-array-of-static-str-in-rust-with-a-loop", "closed_reason": "Duplicate", "title": "How to sequentially create an array of &amp;&#39;static str in Rust with a loop?", "body": "<p>I want to create an array called <code>minutes: [&amp;'static str; 60]</code> that contains the \"stringified\" values from 1 to 59. So far I got:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub const fn minutes_as_str() -&gt; [&amp;'static str; 60] {\n    (1 ..= 59).map(|c| c.to_string()).collect()\n}\n</code></pre>\n\n<p>However the <code>collect()</code> won't work with such iterator. I tried using a for loop too but the BC gets in the way:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub const fn minutes_as_str() -&gt; [&amp;'static str; 60] {\n    let mut result = [\"\"; 60];\n    for n in 1 ..= 59 {\n        result[n] = &amp;n.to_string(); // BC failure\n    }\n    result\n}\n</code></pre>\n"}, {"tags": ["dll", "rust", "linker", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569437887, "post_id": 58104870, "comment_id": 102600790, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/30725579/155423\">Linking to a static lib compiled with MSVC</a> or <a href=\"https://stackoverflow.com/q/56564751/155423\">Rust program requires the libusb DLL to be present even though it was statically linked</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58104870/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569439543, "post_id": 58104870, "comment_id": 102601498, "body": "I just turned my computer on to delete the post because I found those topics. Yes I found the solution to my problem you can mark it as already answered. Thanks."}], "owner": {"reputation": 67, "user_id": 11379454, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xeu3m.jpg?s=128&g=1", "display_name": "centipede_", "link": "https://stackoverflow.com/users/11379454/centipede"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 216, "favorite_count": 0, "closed_date": 1569439625, "answer_count": 0, "score": -1, "last_activity_date": 1569439659, "creation_date": 1569437551, "last_edit_date": 1569437972, "question_id": 58104870, "link": "https://stackoverflow.com/questions/58104870/is-there-a-way-to-statically-load-a-dll-resource-in-a-rust-executable", "closed_reason": "Duplicate", "title": "Is there a way to statically load a DLL resource in a Rust executable?", "body": "<p>I'm trying to statically link a DLL (coded in Rust) to a Rust program to try to recover the addresses of the functions loaded in that DLL and then call them.</p>\n\n<p>Here is the piece of code that links the <code>.lib</code> file to the main program:</p>\n\n<pre><code>#[link(name = \"test.dll\")] // test.dll.lib\nextern \"C\" {\n    pub fn foo() -&gt; u8;\n}\n</code></pre>\n\n<p>I also compiled the library as <code>cdylib</code>.</p>\n\n<p>Everything works fine until I move the program executable to another directory and run it. Then it doesn't find <code>test.dll</code>.</p>\n\n<p>Is there a way to statically load the <code>.lib/dll</code> resource in the executable so I can use it on all x64 Windows 10 architectures?</p>\n"}, {"tags": ["memory", "types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1569440668, "post_id": 58104508, "comment_id": 102601867, "body": "so a call to <code>count_ones</code> on a u32, when written to machine code, includes some instruction to act on bytes 0, 1, 2, 3 but not byte 4? is it more the compiled method (as an example of what you refer to as &quot;the rest of the code&quot;) rather than the variable or value that contains this info? or perhaps the info isn&#39;t there at all - rather the method is parsed in the context of a given type at compile time, and the instruction is calculated, incl the number of bytes to act on, on a per-call basis, with no reference to a type anywhere in the compiled code"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1569440970, "post_id": 58104508, "comment_id": 102602050, "body": "You can <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=7aa016407e84130098b3b7b88e37d341\" rel=\"nofollow noreferrer\">see the machine code yourself</a> (click on the dots next to &quot;build&quot; and select &quot;assembly&quot;). Each of the instructions end in <code>l</code>, <a href=\"https://stackoverflow.com/q/54411253/155423\">which is a mnemonic for &quot;long&quot;</a>, a.k.a. 32-bit operations."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1569448939, "post_id": 58104508, "comment_id": 102604781, "body": "To understand the machine code, you need to understand the Rust ABI, which isn&#39;t stable. In this particular case, the argument <code>v</code> is passed in the <code>eax</code> register, which is a 32-bit register, and the return value is returned in the same register. The code does not access the memory at all."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1569438675, "last_edit_date": 1569438675, "creation_date": 1569435947, "answer_id": 58104508, "question_id": 58104462, "link": "https://stackoverflow.com/questions/58104462/how-does-rust-store-types-at-runtime/58104508#58104508", "title": "How does Rust store types at runtime?", "body": "<blockquote>\n  <p>How does Rust store types at runtime?</p>\n</blockquote>\n\n<p>It doesn't, generally.</p>\n\n<blockquote>\n  <p>Rust doesn't know, when the code is executed, what type is stored at a particular location</p>\n</blockquote>\n\n<p>Correct.</p>\n\n<blockquote>\n  <p>does it not need to know what type is stored</p>\n</blockquote>\n\n<p>No, the bytes in memory should be correct, and the rest of the code assumes as much. The offsets of fields in a struct are baked-in to the generated machine code.</p>\n\n<h1>When does Rust store something <em>like</em> type information?</h1>\n\n<p>When performing dynamic dispatch, a <em>fat pointer</em> is used. This is composed of a pointer to the data and a pointer to a <em>vtable</em>, a collection of functions that make up the interface in question. The vtable could be considered a representation of the type, but it doesn't have a lot of the information that you might think goes into \"a type\" (unless the trait requires it). Dynamic dispatch isn't super common in Rust as most people prefer static dispatch when it's possible, but both techniques have their benefits.</p>\n\n<p>There's also concepts like <a href=\"https://doc.rust-lang.org/std/any/struct.TypeId.html\" rel=\"noreferrer\"><code>TypeId</code></a>, which can represent one specific type, but only of a subset of types. It also doesn't provide much capability besides \"are these the same type or not\".</p>\n\n<h1>Isn't this all terribly brittle?</h1>\n\n<p>Yes, it <em>can</em> be, which is one of the things that makes Rust so interesting.</p>\n\n<p>In a language like C or C++, there's not much that safeguards the programmer from making dumb mistakes that go out and mess up those bytes floating around in memory. Making those mistakes is what leads to bugs due to memory safety. Instead of interpreting your password as a password, it's interpreted as your username and printed out to an attacker (oops!)</p>\n\n<p>Rust provides safeguards against that in the form of a strong type system and tools like the borrow checker, but still all done at compile time. <em>Unsafe</em> Rust enables these dangerous tools with the tradeoff that the programmer is now expected to uphold all the guarantees themselves, much like if they were writing C or C++ again.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49348726/155423\">When does type binding happen in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36416773/155423\">How does Rust implement reflection?</a></li>\n<li><a href=\"https://stackoverflow.com/q/21747136/155423\">How do I print the type of a variable in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39266001/155423\">How to introspect all available methods and members of a Rust type?</a></li>\n</ul>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 424, "favorite_count": 0, "accepted_answer_id": 58104508, "answer_count": 1, "score": 4, "last_activity_date": 1569438675, "creation_date": 1569435796, "last_edit_date": 1569436558, "question_id": 58104462, "link": "https://stackoverflow.com/questions/58104462/how-does-rust-store-types-at-runtime", "title": "How does Rust store types at runtime?", "body": "<p>A <code>u32</code> takes 4 bytes of memory, a <code>String</code> takes 3 pointer-sized integers (for location, size, and reserved space) on the stack, plus some amount on the heap.</p>\n\n<p>This to me implies that Rust doesn't know, when the code is executed, what type is stored at a particular location, because that knowledge would require more memory.</p>\n\n<p>But at the same time, does it not need to know what type is stored at 0xfa3d2f10, in order to be able to interpret the bytes at that location? For example, to know that the next bytes form the spec of a <code>String</code> on the heap?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 5498356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e9b0d425ad2173e1fc12d41922a0e44?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Hauck", "link": "https://stackoverflow.com/users/5498356/daniel-hauck"}, "edited": false, "score": 1, "creation_date": 1583791544, "post_id": 58104118, "comment_id": 107228068, "body": "If using a crate is also an option, <a href=\"https://crates.io/crates/serde_with\" rel=\"nofollow noreferrer\">serde_with</a> offers <code>display_fromstr</code> which uses the Display implementation for serialization and the FromStr implementation for deserialization."}], "tags": [], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "is_accepted": false, "score": 4, "last_activity_date": 1569434313, "creation_date": 1569434313, "answer_id": 58104118, "question_id": 58103801, "link": "https://stackoverflow.com/questions/58103801/how-can-i-implement-serialize-using-an-existing-display-trait-implementation/58104118#58104118", "title": "How can I implement Serialize using an existing Display trait implementation?", "body": "<p>Here's my try (note: I'm the OP):</p>\n\n<pre><code>use serde::{Serialize, Serializer};\nuse std::io::Error;\nuse std::fmt::Display;\n\n#[derive(Debug, Serialize)]\npub enum MyError {\n    Custom,\n    #[serde(serialize_with = \"use_display\")]\n    Io(Error)\n}\n\nfn use_display&lt;T, S&gt;(value: &amp;T, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\nwhere\n    T: Display,\n    S: Serializer\n{\n    serializer.collect_str(value)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=24f38e70612ffd8f8f1c41a257387727\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>But there's maybe a more straightforward way of doing this?</p>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1569434506, "creation_date": 1569432919, "last_edit_date": 1569434506, "question_id": 58103801, "link": "https://stackoverflow.com/questions/58103801/how-can-i-implement-serialize-using-an-existing-display-trait-implementation", "title": "How can I implement Serialize using an existing Display trait implementation?", "body": "<p>I wish to implement the <code>Serialize</code> trait on a type in an extern crate, but it's forbidden. I had a look at serde's <a href=\"https://serde.rs/remote-derive.html\" rel=\"nofollow noreferrer\">remote derive</a>, but it seems a lot of work rewriting the types.</p>\n\n<p>In my case, all the types I wish to serialize implement the <code>Display</code> trait, and for serialization, I just want to use that trait.</p>\n\n<p>How would I do that?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 1959, "user_id": 421914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52130756638b6fbc9d74acd3aeec7657?s=128&d=identicon&r=PG", "display_name": "dchang", "link": "https://stackoverflow.com/users/421914/dchang"}, "is_accepted": true, "score": 1, "last_activity_date": 1569456323, "creation_date": 1569456323, "answer_id": 58107933, "question_id": 58103382, "link": "https://stackoverflow.com/questions/58103382/is-it-valid-to-use-the-not-keyword-for-conditional-dependency-in-cargo-toml/58107933#58107933", "title": "Is it valid to use the `not` keyword for conditional dependency in Cargo.toml?", "body": "<p>It looks like you just need <code>wasm32</code>, not <code>wasm</code>, in your macro rules condition.</p>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 58107933, "answer_count": 1, "score": 0, "last_activity_date": 1569456323, "creation_date": 1569431092, "last_edit_date": 1569431291, "question_id": 58103382, "link": "https://stackoverflow.com/questions/58103382/is-it-valid-to-use-the-not-keyword-for-conditional-dependency-in-cargo-toml", "title": "Is it valid to use the `not` keyword for conditional dependency in Cargo.toml?", "body": "<p>Is it valid syntax to use the <code>cfg(not(...))</code> in a Cargo.toml for declaring dependencies?</p>\n\n<pre><code>[target.'cfg(not(target_arch = \"wasm32\"))'.dependencies]\nwebsocket = \"0.23.0\"\n\n[target.'cfg(target_arch = \"wasm32\")'.dependencies.web-sys]\nversion = \"0.3.22\"\nfeatures = [\n  \"ErrorEvent\",\n  \"MessageEvent\",\n  \"WebSocket\",\n]\n</code></pre>\n\n<p>I get the error <code>can't find crate \"websocket\"</code> for the following code:</p>\n\n<pre><code>macro_rules! if_not_wasm {\n    ($($i:item)*) =&gt; ($(\n        #[cfg(not(target_arch = \"wasm\"))] $i\n    )*)\n}\n\nmacro_rules! if_wasm {\n    ($($i:item)*) =&gt; ($(\n        #[cfg(target_arch = \"wasm\")] $i\n    )*)\n}\n\nif_not_wasm! {\n    extern crate websocket;\n}\n\nif_wasm! {\n    extern crate web_sys;\n}\n</code></pre>\n\n<p>The import in <code>if_wasm!</code> works as expected but the <code>if_not_wasm!</code> errors. I'm running this with the following <code>.cargo/config</code>:</p>\n\n<pre><code>[build]\ntarget = \"wasm32-unknown-unknown\"\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569428576, "post_id": 58102574, "comment_id": 102596833, "body": "&quot;with or without bound checking, depending on how adventurous I feel at the moment&quot; or never do this ? That will be stupid"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569428986, "post_id": 58102574, "comment_id": 102597010, "body": "Why an iterator if you just want a value ? Why not compute the index (and the value if you want) using enumerate and fold ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569429243, "post_id": 58102574, "comment_id": 102597137, "body": "C++ iterators are like cursors; Rust iterators are based more closely on the Python model. You may want to think a little harder about the algorithm that requires <code>max_element</code> (I find most problems are a lot easier to solve with Rust-like iterators than C++-like ones, once you make the mental switch)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569429339, "post_id": 58102574, "comment_id": 102597177, "body": "@trentcl feels like an answer to me ;-)"}, {"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1569430093, "post_id": 58102574, "comment_id": 102597490, "body": "@Denys Let the down-votes come but I wasn&#39;t asking on opinions why I would like to do it this way for such simple case. I am asking <i>how</i> and I&#39;d be glad for an answer with explanation or simple <i>you can&#39;t do this in Rust</i>.  The example is simplified - I actually want to attach to the highest value and then from that point loop over the whole container (possibly with <code>cycle()</code> or something similar)."}], "answers": [{"comments": [{"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "edited": false, "score": 0, "creation_date": 1569437401, "post_id": 58103194, "comment_id": 102600608, "body": "Thanks for clarifying. This does the thing I wanted to achieve (with added <code>cycle()</code> after <code>chain()</code>), but doesn&#39;t seem expressive at all. Moreover I am concerned about performance in this case (comparing to C++) - but this I would need to check on my own. Thanks again."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1569430796, "last_edit_date": 1569430796, "creation_date": 1569430366, "answer_id": 58103194, "question_id": 58102574, "link": "https://stackoverflow.com/questions/58102574/how-does-one-get-an-iterator-to-the-max-value-element-in-rust/58103194#58103194", "title": "How does one get an iterator to the max value element in Rust?", "body": "<p>C++ iterators are not the same as Rust iterators. Rust iterators are forward-only and can only be traversed once. C++ iterators can be thought of as cursors. See <a href=\"https://stackoverflow.com/q/48999776/155423\">What are the main differences between a Rust Iterator and C++ Iterator?</a> for more details. </p>\n\n<p>In order to accomplish your goal in the most generic way possible, you have to walk through the entire iterator to find the maximum value. Along the way, you have to duplicate <em>the iterator</em> each time you find a new maximum value. At the end, you can return the iterator corresponding to the point after the maximum value.</p>\n\n<pre><code>trait MaxElement {\n    type Iter;\n\n    fn max_element(self) -&gt; Self::Iter;\n}\n\nimpl&lt;I&gt; MaxElement for I\nwhere\n    I: Iterator + Clone,\n    I::Item: PartialOrd,\n{\n    type Iter = Self;\n\n    fn max_element(mut self) -&gt; Self::Iter {\n        let mut max_iter = self.clone();\n        let mut max_val = None;\n\n        while let Some(val) = self.next() {\n            if max_val.as_ref().map_or(true, |m| &amp;val &gt; m) {\n                max_iter = self.clone();\n                max_val = Some(val);\n            }\n        }\n\n        max_iter\n    }\n}\n\nfn main() {\n    let v = vec![1, 3, 2];\n    let mut it = v.iter().max_element();\n    assert_eq!(Some(&amp;2), it.next());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30540766/155423\">How can I add new methods to Iterator?</a></li>\n</ul>\n\n<blockquote>\n  <p>I actually want to attach to the highest value and then from that point loop over the whole container (possibly with <code>cycle()</code> or something similar).</p>\n</blockquote>\n\n<p>In that case, I'd attempt to be more obvious:</p>\n\n<pre><code>fn index_of_max(values: &amp;[i32]) -&gt; Option&lt;usize&gt; {\n    values\n        .iter()\n        .enumerate()\n        .max_by_key(|(_idx, &amp;val)| val)\n        .map(|(idx, _val)| idx)\n}\n\nfn main() {\n    let v = vec![1, 3, 2];\n    let idx = index_of_max(&amp;v).unwrap_or(0);\n    let (a, b) = v.split_at(idx);\n    let mut it = b.iter().chain(a).skip(1);\n    assert_eq!(Some(&amp;2), it.next());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/57813951/155423\">What&#39;s the fastest way of finding the index of the maximum value in an array?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37127209/155423\">Using max_by_key on a vector of floats</a></li>\n<li><a href=\"https://stackoverflow.com/q/53903318/155423\">What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35998024/155423\">Find the item in an array with the largest property</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "edited": false, "score": 1, "creation_date": 1569498623, "post_id": 58112180, "comment_id": 102621465, "body": "This may work. Still, wouldn&#39;t you agree that this solution is terribly complicated for such trivial task?"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1569484984, "creation_date": 1569484984, "answer_id": 58112180, "question_id": 58102574, "link": "https://stackoverflow.com/questions/58102574/how-does-one-get-an-iterator-to-the-max-value-element-in-rust/58112180#58112180", "title": "How does one get an iterator to the max value element in Rust?", "body": "<p>If all you want is the value of the item following the maximum, I would do it with a simple call to <code>fold</code>, keeping track of the max found so far and the corresponding next value:</p>\n\n<pre><code>fn main() {\n    let v = vec![1, 3, 2];\n    let nxt = v.iter().fold (\n        (None, None),\n        |acc, x| {\n            match acc {\n                (Some (max), _) if x &gt; max =&gt; (Some (x), None),\n                (Some (max), None) =&gt; (Some (max), Some (x)),\n                (None, _) =&gt; (Some (x), None),\n                _ =&gt; acc\n            }\n        }\n    ).1;\n    assert_eq!(Some(&amp;2), nxt);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=780a3d2a5061e6e05348e98383545fc4\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Depending on what you want to do with the items following the max, a similar approach may allow you to do it in a single pass.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 6670167, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rK1pMhe8sUw/AAAAAAAAAAI/AAAAAAAAADo/VzuVPU80gWI/photo.jpg?sz=128", "display_name": "Jacky_Cai", "link": "https://stackoverflow.com/users/6670167/jacky-cai"}, "is_accepted": false, "score": 0, "last_activity_date": 1581233709, "creation_date": 1581233709, "answer_id": 60134450, "question_id": 58102574, "link": "https://stackoverflow.com/questions/58102574/how-does-one-get-an-iterator-to-the-max-value-element-in-rust/60134450#60134450", "title": "How does one get an iterator to the max value element in Rust?", "body": "<p>a simple solution is to use fold, \nthe following code produces \"largest num is: 99\"</p>\n\n<pre><code>    let vv:Vec&lt;i32&gt; = (1..100).collect();\n    let largest = vv.iter().fold(std::i32::MIN, |a,b| a.max(*b));\n    println!(\"largest {} \", largest);\n</code></pre>\n"}], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2098, "favorite_count": 0, "accepted_answer_id": 58103194, "answer_count": 3, "score": 0, "last_activity_date": 1581233709, "creation_date": 1569427819, "last_edit_date": 1569430467, "question_id": 58102574, "link": "https://stackoverflow.com/questions/58102574/how-does-one-get-an-iterator-to-the-max-value-element-in-rust", "title": "How does one get an iterator to the max value element in Rust?", "body": "<p>I want to access the element next to the maximal one in a <code>Vec&lt;i32&gt;</code>. I'm looking for something like this:</p>\n\n<pre><code>let v = vec![1, 3, 2];\nlet it = v.iter().max_element();\nassert_eq!(Some(&amp;2), it.next());\n</code></pre>\n\n<p>In C++, I would go with <code>std::max_element</code> and then just increase the iterator (with or without bounds checking, depending on how adventurous I feel at the moment). The Rust <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max\" rel=\"nofollow noreferrer\"><code>max</code></a> only returns a reference to the element, which is not good enough for my use case. </p>\n\n<p>The only solution I came up with is using <code>enumerate</code> to get the index of the item - but this seems manual and cumbersome when compared to the C++ way.</p>\n\n<p>I would prefer something in the standard library.</p>\n\n<p>This example is simplified - I actually want to attach to the highest value and then from that point loop over the whole container (possibly with <code>cycle()</code> or something similar).</p>\n"}, {"tags": ["rust", "java-native-interface", "borrowing"], "comments": [{"owner": {"reputation": 67968, "user_id": 584192, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YBSIc.png?s=128&g=1", "display_name": "Samuel Liew", "link": "https://stackoverflow.com/users/584192/samuel-liew"}, "edited": false, "score": 0, "creation_date": 1569736412, "post_id": 58101664, "comment_id": 102688593, "body": "Comments are not for extended discussion; this conversation has been <a href=\"https://chat.stackoverflow.com/rooms/200109/discussion-on-question-by-gurwinder-singh-how-to-use-read-only-borrowed-rust-dat\">moved to chat</a>."}], "answers": [{"tags": [], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "is_accepted": true, "score": 0, "last_activity_date": 1569644074, "last_edit_date": 1569644074, "creation_date": 1569641952, "answer_id": 58143159, "question_id": 58101664, "link": "https://stackoverflow.com/questions/58101664/how-to-use-read-only-borrowed-rust-data-by-multiple-java-threads/58143159#58143159", "title": "How to use read-only borrowed Rust data by multiple Java threads?", "body": "<p>The problem that I was thinking as memory leak wasn't actually a memory leak. The issue was that the allocator was using thread local arenas. So, whatever thread was reloading 250MB of data was leaving the allocated space as is and not returning it to the system. This issue was not specific to JNI, but also happening in pure safe rust code. See <a href=\"https://stackoverflow.com/questions/58110081/why-multiple-threads-using-too-much-memory-when-holding-mutex/58119742#58119742\">Why multiple threads using too much memory when holding Mutex</a></p>\n\n<p>The default number of arenas created defaults to 8 * cpu count = 64 in my case. This setting can be overridden by setting <code>MALLOC_ARENA_MAX</code> env variable.</p>\n\n<p>So I resolved this issue by setting <code>MALLOC_ARENA_MAX</code> env variable to 1 . So, the approach I took is fine. It was just platform specific issue.</p>\n\n<p>This issue was occurring only in Ubuntu in WSL. I also tried the same code without any tweaking on Windows 10 and it works perfectly without any issues.</p>\n"}], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 58143159, "answer_count": 1, "score": 1, "last_activity_date": 1569644074, "creation_date": 1569424507, "last_edit_date": 1569468735, "question_id": 58101664, "link": "https://stackoverflow.com/questions/58101664/how-to-use-read-only-borrowed-rust-data-by-multiple-java-threads", "title": "How to use read-only borrowed Rust data by multiple Java threads?", "body": "<p>I have a struct <code>Foo</code> and <code>FooRef</code> which has references to data from <code>Foo</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo { /* ... */ }\n\nstruct FooRef&lt;'foo&gt; { /* ... */ }\n\nimpl Foo {\n    pub fn create_ref&lt;'a&gt;(&amp;'a self) -&gt; FooRef&lt;'a&gt; { /* ... */ }\n}\n</code></pre>\n\n<p>Now <code>Foo</code> directly cannot be used in the logic; I need <code>FooRef</code>. Creating <code>FooRef</code> requires lots of computation, so I do it once just after creating the <code>Foo</code> instance. <code>FooRef</code> is immutable; it's only used for reading data.</p>\n\n<p>Multiple threads needs to access this <code>FooRef</code> instance. How can I implement this? The calling threads are Java threads and this will be used with JNI. This prevents using a scoped threadpool, for example.</p>\n\n<p>Another complication is that when I have to refresh the <code>Foo</code> instance to load new data into it. I then also need to recreate the <code>FooRef</code> instance as well.</p>\n\n<p>How can this be achieved thread-safely and memory-safely? I tried messing around with pointers and <code>RwLock</code> but that resulted in a memory leak (the memory usage kept on adding on each reload). I am a Java developer that is a newbie to pointers.</p>\n\n<p>The data in <code>Foo</code> is mostly text and about 250Mb. The <code>FooRef</code> is mostly <code>str</code>s and structs of <code>str</code>s borrowed from <code>Foo</code>.</p>\n\n<h1>My Java usage explanation</h1>\n\n<p>I use two <code>long</code> variables in a Java class to store pointers to <code>Foo</code> and <code>FooRef</code>. I use a static <code>ReentrantReadWriteLock</code> to guard these pointers. </p>\n\n<p>If the data need to be updated in <code>Foo</code>, I acquire a write lock, drop <code>FooRef</code>, update <code>Foo</code>, create a new <code>FooRef</code> and update the ref pointer in Java.</p>\n\n<p>If I need to read the data (i.e. when I am not updating <code>Foo</code>), I acquire a read lock and use the <code>FooRef</code>.</p>\n\n<p>The memory leak is visible only when multiple Java threads are calling this code.</p>\n\n<p>Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use jni::objects::{JClass, JString};\nuse jni::sys::{jlong, jstring};\nuse jni::JNIEnv;\n\nuse std::collections::HashMap;\n\nmacro_rules! foo_mut_ptr {\n    ($env: expr, $class: expr) =&gt; {\n        $env.get_field(*$class, \"ptr\", \"J\")\n            .ok()\n            .and_then(|j| j.j().ok())\n            .and_then(|ptr| {\n                if ptr == 0 {\n                    None\n                } else {\n                    Some(ptr as *mut Foo)\n                }\n            })\n    };\n}\n\nmacro_rules! foo_ref_mut_ptr {\n    ($env: expr, $class: expr) =&gt; {\n        $env.get_field(*$class, \"ptrRef\", \"J\")\n            .ok()\n            .and_then(|j| j.j().ok())\n            .and_then(|ptr| {\n                if ptr == 0 {\n                    None\n                } else {\n                    Some(ptr as *mut FooRef)\n                }\n            })\n    };\n}\n\nmacro_rules! foo_mut {\n    ($env: expr, $class: expr) =&gt; {\n        foo_mut_ptr!($env, $class).map(|ptr| &amp;mut *ptr)\n    };\n}\n\nmacro_rules! foo_ref {\n    ($env: expr, $class: expr) =&gt; {\n        foo_ref_mut_ptr!($env, $class).map(|ptr| &amp;*ptr)\n    };\n}\n\n#[allow(non_snake_case)]\n#[no_mangle]\npub unsafe extern \"system\" fn Java_test_App_create(_env: JNIEnv, _class: JClass) -&gt; jlong {\n    Box::into_raw(Box::new(Foo::default())) as jlong\n}\n\n#[allow(non_snake_case)]\n#[no_mangle]\npub unsafe extern \"system\" fn Java_test_App_createRef(env: JNIEnv, class: JClass) -&gt; jlong {\n    let foo = foo_mut!(env, class).expect(\"createRef was called on uninitialized Data\");\n    let foo_ref = foo.create_ref();\n    Box::into_raw(Box::new(foo_ref)) as jlong\n}\n\n#[allow(non_snake_case)]\n#[no_mangle]\npub unsafe extern \"system\" fn Java_test_App_reload(env: JNIEnv, class: JClass) {\n    let foo = foo_mut!(env, class).expect(\"foo must be initialized\");\n    *foo = Foo {\n        data: vec![\"hello\".to_owned(); 1024 * 1024],\n    };\n}\n\n#[allow(non_snake_case)]\n#[no_mangle]\npub unsafe extern \"system\" fn Java_test_App_destroy(env: JNIEnv, class: JClass) {\n    drop_ptr(foo_ref_mut_ptr!(env, class));\n    drop_ptr(foo_mut_ptr!(env, class));\n}\n\n#[allow(non_snake_case)]\n#[no_mangle]\npub unsafe extern \"system\" fn Java_test_App_destroyRef(env: JNIEnv, class: JClass) {\n    drop_ptr(foo_ref_mut_ptr!(env, class));\n}\n\nunsafe fn drop_ptr&lt;T&gt;(ptr: Option&lt;*mut T&gt;) {\n    if let Some(ptr) = ptr {\n        let _foo = Box::from_raw(ptr);\n        // foo drops here\n    }\n}\n\n#[derive(Default)]\nstruct Foo {\n    data: Vec&lt;String&gt;,\n}\n\n#[derive(Default)]\nstruct FooRef&lt;'a&gt; {\n    data: HashMap&lt;&amp;'a str, Vec&lt;&amp;'a str&gt;&gt;,\n}\n\nimpl Foo {\n    fn create_ref(&amp;self) -&gt; FooRef {\n        let mut data = HashMap::new();\n        for s in &amp;self.data {\n            let s = &amp;s[..];\n            data.insert(s, vec![s]);\n        }\n        FooRef { data }\n    }\n}\n\n</code></pre>\n\n<p>Java:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>package test;\n\nimport java.util.concurrent.locks.ReentrantReadWriteLock;\nimport java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;\nimport java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;\n\npublic class App implements AutoCloseable {\n    private final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n    private final ReadLock readLock = lock.readLock();\n    private final WriteLock writeLock = lock.writeLock();\n\n    private volatile long ptr;\n    private volatile long ptrRef;\n    private volatile boolean reload;\n\n    static {\n        System.loadLibrary(\"foo\");\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        try (App app = new App()) {\n            for (int i = 0; i &lt; 20; i++) {\n                new Thread(() -&gt; {\n                    while (true) {\n                        app.tryReload();\n                    }\n                }).start();\n            }\n\n            while (true) {\n                app.setReload();\n            }\n        }\n    }\n\n    public App() {\n        this.ptr = this.create();\n    }\n\n    public void setReload() {\n        writeLock.lock();\n        try {\n            reload = true;\n        } finally {\n            writeLock.unlock();\n        }\n    }\n\n    public void tryReload() {\n        readLock.lock();\n        debug(\"Got read lock\");\n\n        if (reload) {\n            debug(\"Cache is expired\");\n\n            readLock.unlock();\n            debug(\"Released read lock coz expired\");\n\n            writeLock.lock();\n            debug(\"Got write lock\");\n\n            try {\n                if (reload) {\n                    fullReload();\n                }\n\n                readLock.lock();\n                debug(\"Got read lock inside write\");\n            } finally {\n                writeLock.unlock();\n                debug(\"Released write lock\");\n            }\n        }\n\n        readLock.unlock();\n        debug(\"Released read lock\");\n    }\n\n    private void fullReload() {\n        destroyRef();\n        debug(\"Dropped ref\");\n\n        debug(\"Reloading\");\n        reload();\n        debug(\"Reloading completed\");\n\n        updateRef();\n        debug(\"Created ref\");\n        reload = false;\n    }\n\n    private void updateRef() {\n        this.ptrRef = this.createRef();\n    }\n\n    private native void reload();\n\n    private native long create();\n\n    private native long createRef();\n\n    private native void destroy();\n\n    private native void destroyRef();\n\n    @Override\n    public void close() {\n        writeLock.lock();\n        try {\n            this.destroy();\n            this.ptrRef = 0;\n            this.ptr = 0;\n        } finally {\n            writeLock.unlock();\n        }\n    }\n\n    private static void debug(String s) {\n        System.out.printf(\"%10s : %s%n\", Thread.currentThread().getName(), s);\n    }\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569421978, "post_id": 58100562, "comment_id": 102593255, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/39150216/155423\">Implementing a trait for multiple types at once</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58100562/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569422362, "post_id": 58100562, "comment_id": 102593493, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a1110dc1fc5112e092e9597480ca91d3\" rel=\"nofollow noreferrer\">The duplicate applied to your situation</a>, but see also <a href=\"https://stackoverflow.com/q/45086595/155423\">Is it considered a bad practice to implement Deref for newtypes?</a>."}, {"owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569452920, "post_id": 58100562, "comment_id": 102605643, "body": "Thx for your quick answer, but as you can see, if I have a bunch of Id type, say 10 or even more, it&#39;s hard to impl Trait for these newtypes one by one, so I wonder if there is any solution to impl Trait for all newtypes once and run for every newtype."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569456079, "post_id": 58100562, "comment_id": 102606194, "body": "What&#39;s wrong with the <a href=\"https://stackoverflow.com/a/50223259/155423\">macro-based solution</a>?"}, {"owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569459168, "post_id": 58100562, "comment_id": 102606720, "body": "Cool, that&#39;s exactly what I want, thx!"}, {"owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "edited": false, "score": 0, "creation_date": 1569534462, "post_id": 58100562, "comment_id": 102638632, "body": "Note that what&#39;s requested would defeat the whole purpose of the newtype pattern, which is to throw away the traits on the old type so they can be implemented differently."}], "owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 121, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1569421369, "creation_date": 1569421177, "last_edit_date": 1569421369, "question_id": 58100562, "link": "https://stackoverflow.com/questions/58100562/can-we-implement-a-trait-for-all-newtype-structs-containing-a-specific-type", "title": "Can we implement a trait for all newtype structs containing a specific type?", "body": "<p>We have <code>impl&lt;T&gt; Trait for Vec&lt;T&gt;</code>, which can implement <code>Trait</code> for all <code>Vec&lt;_&gt;</code>. Can we have the same thing for a newtype struct (a tuple struct with only one value)? Like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; Trait for T(SomeType) {}\n</code></pre>\n\n<h1>Why?</h1>\n\n<p>In DDD, each aggregate root/entity has a type of <code>Id</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct BookId(Uuid);\n\nstruct Book {\n    id: BookId,\n    // ...\n}\n\nstruct LibraryId(Uuid);\n\nstruct Library {\n    id: LibraryId,\n    // ...\n}\n</code></pre>\n\n<p>I think it is a natural way to do the modelling, but if you do that, it is hard to implement a trait for all types of ID. An example trait is the <code>FromSql</code> and <code>ToSql</code> traits in rust-postgres.</p>\n\n<p>We have to do this instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl ToSql for BookId {\n    to_sql_checked!();\n\n    accepts!(UUID);\n\n    fn to_sql(&amp;self, ty: &amp;Type, w: &amp;mut Vec&lt;u8&gt;) -&gt; Res&lt;IsNull&gt; {\n        self.to_id().to_sql(ty, w)\n    }\n}\n\nimpl&lt;'a&gt; FromSql&lt;'a&gt; for BookId {\n    accepts!(UUID);\n\n    fn from_sql(_: &amp;Type, raw: &amp;[u8]) -&gt; Res&lt;BookId&gt; {\n        let uuid = types::uuid_from_sql(raw)?;\n        Ok(BookId::new(Uuid::from_bytes(uuid)))\n    }\n}\n\n// same thing for LibraryId\n</code></pre>\n\n<p>Not that clean, eh? Is there any way to make the code cleaner?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1569417749, "answer_count": 0, "score": 1, "last_activity_date": 1569417071, "creation_date": 1569417071, "question_id": 58099243, "link": "https://stackoverflow.com/questions/58099243/how-to-check-arg-type-inside-a-macro-rule", "closed_reason": "Duplicate", "title": "How to check arg type inside a macro_rule?", "body": "<p>How can I check for a specific type inside macro_rules (or even outside)?</p>\n\n<p>I want to emulate function overloading using macro_rules but it appears that I am limited by the lack of type checking. I know I can check for Result and Option enums but I need to see if the argument is a &amp;String or a bool or something else. How can I achieve this?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! my_macro {\n    ($arg:expr) =&gt; {\n        match $arg {\n            // String =&gt; {},\n            // bool =&gt; {},\n            // _ =&gt; {}\n        }\n    };\n}\n</code></pre>\n"}, {"tags": ["logging", "rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569407478, "post_id": 58096003, "comment_id": 102584840, "body": "The <code>tracing</code> crate from the <code>tokio</code> project has a built-in <code>instrument</code> which can be used on a function. Check out <a href=\"https://tokio.rs/blog/2019-08-tracing/\" rel=\"nofollow noreferrer\">their blog post</a>. But it is a whole new beast to tame; you&#39;ve been warned."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1569415815, "last_edit_date": 1569415815, "creation_date": 1569409586, "answer_id": 58096992, "question_id": 58096003, "link": "https://stackoverflow.com/questions/58096003/how-to-add-specific-prefix-to-the-logging-output-in-rust/58096992#58096992", "title": "How to add specific prefix to the logging output in Rust?", "body": "<p>You could write a macro for this:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! log {\n    ($sel:ident, $s:literal, $($arg:tt)*)\n    =&gt;\n    (info!(concat!(\"[id: {}] [name: {}] \", $s), $sel.id, $sel.name, $($arg)*));\n}\n\nstruct Obj {\n    id: i32,\n    name: String,\n}\n\nimpl Obj {\n    fn call_me(&amp;self, item: i32, from: String) {\n        log!(self, \"receive {} from {}\", item, from);\n    }\n}\n</code></pre>\n\n<p>It's not perfect, as you still need to pass <code>self</code>, but I'm not sure you can do better.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=adc084d2d0bc15f095a8e349ee8a5c60\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 175, "user_id": 8946047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mUnWs.jpg?s=128&g=1", "display_name": "jl0x61", "link": "https://stackoverflow.com/users/8946047/jl0x61"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 58096992, "answer_count": 1, "score": 4, "last_activity_date": 1569415815, "creation_date": 1569406242, "last_edit_date": 1569407696, "question_id": 58096003, "link": "https://stackoverflow.com/questions/58096003/how-to-add-specific-prefix-to-the-logging-output-in-rust", "title": "How to add specific prefix to the logging output in Rust?", "body": "<p>I have an object and want every logging output to be prefixed with some states of the object. But adding prefix for every logging statement is very inconvenient. Is there any simple way to implement it?</p>\n\n<p>Below is the sample code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use log::info;\n\nstruct Obj {\n    id: i32,\n    name: String,\n}\n\nimpl Obj {\n    // can I use `info!(\"receive {} from {}\", item, from);` for simplicity?\n    fn call_me(&amp;self, item: i32, from: String) {\n        info!(\"[id: {}][name: {}] receive {} from {}\", self.id, self.name, item, from);\n    }\n    // ...many methods\n}\n</code></pre>\n\n<p>Any help will be appreciated!</p>\n"}, {"tags": ["rust", "monads", "traits", "functor", "higher-kinded-types"], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 4288267, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11e0bea6e3bd4072485f0efdcfc1c262?s=128&d=identicon&r=PG&f=1", "display_name": "abitbol", "link": "https://stackoverflow.com/users/4288267/abitbol"}, "edited": false, "score": 0, "creation_date": 1569414209, "post_id": 58092968, "comment_id": 102588414, "body": "Ok thank you very much for your response!  I&#39;m just wondering why using something triky like GAT for HKT instead of using Haskell simple forme. But I&#39;m perhaps missing something..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 327, "user_id": 4288267, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11e0bea6e3bd4072485f0efdcfc1c262?s=128&d=identicon&r=PG&f=1", "display_name": "abitbol", "link": "https://stackoverflow.com/users/4288267/abitbol"}, "edited": false, "score": 1, "creation_date": 1569416641, "post_id": 58092968, "comment_id": 102589991, "body": "@abitbol I think you&#39;re missing that you can&#39;t &quot;just&quot; add Haskell-like HKTs to Rust -- you need to (1) define how the feature interacts with the rest of the language and (2) actually implement it. GATs are a small, orthogonal feature that has already been fully defined and is being implemented. <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/02/associated-type-constructors-part-1-basic-concepts-and-introduction/\" rel=\"nofollow noreferrer\">This blog series</a> (in 4 parts) describes in detail the relationship between GATs (referred to as ATCs at the time) and HKTs."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569416671, "post_id": 58092968, "comment_id": 102590018, "body": "<a href=\"http://smallcultfollowing.com/babysteps/blog/2016/11/04/associated-type-constructors-part-3-what-higher-kinded-types-might-look-like/\" rel=\"nofollow noreferrer\">Part 3</a> in particular highlights some differences between Rust and Haskell that would make it awkward to bolt (parts of) Haskell&#39;s system on to Rust."}, {"owner": {"reputation": 327, "user_id": 4288267, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11e0bea6e3bd4072485f0efdcfc1c262?s=128&d=identicon&r=PG&f=1", "display_name": "abitbol", "link": "https://stackoverflow.com/users/4288267/abitbol"}, "edited": false, "score": 0, "creation_date": 1569439133, "post_id": 58092968, "comment_id": 102601328, "body": "Yes I completely agree with you : regarding the current state of rust, adding some kind of feature may be tricky.What I just wanted to know was if there were a reason why the original design did not include this feature from the beginning. In fact i&#39;m just interesting in knowing the requirement design of rust which made rust look like today&#39;s rust. But your links may help me to know that, I&#39;m going to read it. Thank you!"}, {"owner": {"reputation": 532, "user_id": 1857492, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7f056f6a0ec8266d1407c4baf6c152f2?s=128&d=identicon&r=PG", "display_name": "user1857492", "link": "https://stackoverflow.com/users/1857492/user1857492"}, "edited": false, "score": 0, "creation_date": 1600942169, "post_id": 58092968, "comment_id": 113250879, "body": "How can I keep track of what is planned to be added to Rust <b>eventually</b>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 532, "user_id": 1857492, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/7f056f6a0ec8266d1407c4baf6c152f2?s=128&d=identicon&r=PG", "display_name": "user1857492", "link": "https://stackoverflow.com/users/1857492/user1857492"}, "edited": false, "score": 1, "creation_date": 1600942442, "post_id": 58092968, "comment_id": 113251018, "body": "@user1857492: By keeping up with the discussions, and notably RFCs, I would say. It&#39;s pretty much similar to Python / Java / C++ in that regard."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 17, "last_activity_date": 1569396108, "last_edit_date": 1569396108, "creation_date": 1569395578, "answer_id": 58092968, "question_id": 58092746, "link": "https://stackoverflow.com/questions/58092746/is-there-an-intrinsic-reason-explaining-why-rust-does-not-have-higher-kinded-typ/58092968#58092968", "title": "Is there an intrinsic reason explaining why Rust does not have higher-kinded-types?", "body": "<p><strong>Time &amp; Priority</strong>.</p>\n\n<p>The absence of Higher Kinded Types is not a design decision, per se. It is intended that Rust will have some form of it, with the more popular candidate being <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"noreferrer\">Generic Associated Types (2017)</a> at the moment.</p>\n\n<p>Implementing those take time, though, and has not been judged a priority compared to other features. For example, async/await was prioritized over HKTs, and const generics also seem to be prioritized.</p>\n\n<hr>\n\n<blockquote>\n  <p>For example, functor (and thus monad) cannot be written in Rust.</p>\n</blockquote>\n\n<p>Actually, they can, although it's a <em>bit</em> unwieldy.</p>\n\n<p>See <a href=\"https://gist.github.com/edmundsmith/855fcf0cb35dd467c29a9350481f0ecf\" rel=\"noreferrer\">Edmund's Smith lovely hack</a> which he posted on <a href=\"https://www.reddit.com/r/rust/comments/cajn09/new_method_for_emulating_higherkinded_types_in/\" rel=\"noreferrer\">https://www.reddit.com/r/rust/comments/cajn09/new_method_for_emulating_higherkinded_types_in/</a>:</p>\n\n<pre><code>trait Unplug {\n    type F; //The representation type of the higher-kinded type\n    type A; //The parameter type\n}\n\ntrait Plug&lt;A&gt; {\n    type result_t;\n}\n\npub  struct  Concrete&lt;M: Unplug + Plug&lt;A&gt;,A&gt; {\n    pub unwrap: &lt;M as Plug&lt;A&gt;&gt;::result_t\n}\n\nimpl&lt;M: Unplug + Plug&lt;A&gt;, A&gt; Concrete&lt;M,A&gt; {\n    fn of&lt;MA: Unplug&lt;F=M, A=A&gt; + Plug&lt;A&gt;&gt;(x: MA) -&gt; Self\n        where M: Plug&lt;A, result_t = MA&gt;\n    {\n        Concrete { unwrap: x }\n    }\n}\n</code></pre>\n\n<p>With which they implement a <code>Functor</code> trait:</p>\n\n<pre><code>pub trait Functor: Unplug + Plug&lt;&lt;Self as Unplug&gt;::A&gt; {\n    fn map&lt;B, F&gt;(f: F, s: Self) -&gt; &lt;Self as Plug&lt;B&gt;&gt;::result_t\n        where\n            Self: Plug&lt;B&gt;,\n            F: FnMut(&lt;Self as Unplug&gt;::A) -&gt; B\n        ;\n}\n\n//  Example impl for a represented Vec\nimpl&lt;A&gt; Functor for Concrete&lt;Vec&lt;forall_t&gt;, A&gt; {\n    //  remember, Self ~ (Vec&lt;_&gt;, A) ~ \"f a\"\n    fn map&lt;B, F&gt;(f: F, s: Self) -&gt; &lt;Self as Plug&lt;B&gt;&gt;::result_t\n        where\n            F: FnMut(&lt;Self as Unplug&gt;::A) -&gt; B \n    {        \n        Concrete::of(s.unwrap.into_iter().map(f).collect())\n    }\n}\n</code></pre>\n\n<p>And from then on build <code>Applicative</code> and <code>Monad</code>:</p>\n\n<pre><code>pub trait Applicative: Functor {\n    fn pure(s: &lt;Self as Unplug&gt;::A) -&gt; Self;\n\n    fn app&lt;B, F&gt;(\n        f: &lt;Self as Plug&lt;F&gt;&gt;::result_t, //M&lt;F&gt;\n        s: Self                         //M&lt;A&gt;\n    ) -&gt; &lt;Self as Plug&lt;B&gt;&gt;::result_t   //M&lt;B&gt;\n    where\n        F: FnMut(&lt;Self as Unplug&gt;::A) -&gt; B + Clone,\n        Self: Plug&lt;F&gt; + Plug&lt;B&gt; + Unplug,\n        &lt;Self as Plug&lt;F&gt;&gt;::result_t:\n            Unplug&lt;F=&lt;Self as Unplug&gt;::F, A=F&gt; +\n            Plug&lt;F&gt; +\n            Clone,\n        &lt;Self as Unplug&gt;::F: Plug&lt;F&gt;\n    ;\n}\n\npub trait Monad : Applicative {\n    fn bind&lt;F,B&gt;(f: F, s: Self) -&gt; &lt;Self as Plug&lt;B&gt;&gt;::result_t\n    where\n        Self: Plug&lt;F&gt;+Plug&lt;B&gt;,\n        F: FnMut(&lt;Self as Unplug&gt;::A) -&gt;\n            &lt;Self as Plug&lt;B&gt;&gt;::result_t + Clone\n        ;\n}\n</code></pre>\n\n<p><em>I did say it was a bit unwieldy...</em></p>\n"}], "owner": {"reputation": 327, "user_id": 4288267, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11e0bea6e3bd4072485f0efdcfc1c262?s=128&d=identicon&r=PG&f=1", "display_name": "abitbol", "link": "https://stackoverflow.com/users/4288267/abitbol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2366, "favorite_count": 4, "accepted_answer_id": 58092968, "answer_count": 1, "score": 11, "last_activity_date": 1569396108, "creation_date": 1569394743, "last_edit_date": 1569395374, "question_id": 58092746, "link": "https://stackoverflow.com/questions/58092746/is-there-an-intrinsic-reason-explaining-why-rust-does-not-have-higher-kinded-typ", "title": "Is there an intrinsic reason explaining why Rust does not have higher-kinded-types?", "body": "<p>Rust does not have higher-kinded-types. For example, functor (and thus monad) cannot be written in Rust. I would like to know if there is a deep reason explaining this and why.</p>\n\n<p>For instance, reason that I can understand can be that there is no zero-cost abstraction making HKT possible. Or type inference is significantly more difficult. And of course, I also looking for an explaination showing me why this is a real limitation.</p>\n\n<p>If the anwer was already given somewhere else, could you give me the link?</p>\n"}, {"tags": ["rust", "type-conversion", "identity", "traits"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 4, "creation_date": 1569369433, "post_id": 58089386, "comment_id": 102572113, "body": "@S&#233;bastienRenauld: Isn&#39;t it more for genericity? So you can, for example, write a function that accepts <code>Into&lt;T&gt;</code>, and it will accept T?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1569369564, "post_id": 58089386, "comment_id": 102572135, "body": "That&#39;s also a very fair point"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569377856, "post_id": 58089386, "comment_id": 102573518, "body": "@S&#233;bastienRenauld please be mindful of how we use the word &quot;safety&quot;. Rust has a pretty specific meaning for that word, and this is not an example of that."}], "answers": [{"comments": [{"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 1, "creation_date": 1569369896, "post_id": 58089470, "comment_id": 102572210, "body": "When you say it like that, it makes a lot of sense. I&#39;ll select this as chosen in a few days if that&#39;s all there is to it."}, {"owner": {"reputation": 9614, "user_id": 7715250, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/21e16ee79a2d82cf66a9f8c9a45e4021?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/7715250/j-doe"}, "reply_to_user": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1578102176, "post_id": 58089470, "comment_id": 105340761, "body": "@EvanCarroll months have been pasted... :)"}], "tags": [], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "is_accepted": false, "score": 14, "last_activity_date": 1569377932, "last_edit_date": 1569377932, "creation_date": 1569369479, "answer_id": 58089470, "question_id": 58089386, "link": "https://stackoverflow.com/questions/58089386/why-does-the-standard-library-implement-conversions-from-each-type-to-itself/58089470#58089470", "title": "Why does the standard library implement conversions from each type to itself?", "body": "<p>It can be convenient when writing functions/types with generic arguments. For instance, if I write a function:</p>\n\n<pre><code>fn do_something_with_string&lt;S: Into&lt;String&gt;&gt;(s: S) {}\n</code></pre>\n\n<p>That function will work equally for <code>String</code> and anything which can be turned into one.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1569377932, "creation_date": 1569368676, "last_edit_date": 1569370653, "question_id": 58089386, "link": "https://stackoverflow.com/questions/58089386/why-does-the-standard-library-implement-conversions-from-each-type-to-itself", "title": "Why does the standard library implement conversions from each type to itself?", "body": "<p>On page 298 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\">Programming Rust</a> you can find the following statement</p>\n\n<blockquote>\n  <p>The standard library automatically implements the trivial conversion from each type to itself: every type <code>T</code> implements <code>From&lt;T&gt;</code> and <code>Into&lt;T&gt;</code></p>\n</blockquote>\n\n<p>However it doesn't actually say why that would be useful or why the standard library would automatically do that? What's the reason for this?</p>\n"}, {"tags": ["sqlite", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569401771, "post_id": 58089362, "comment_id": 102581706, "body": "Thanks for the thorough answer; it led me to a working solution. I forgot to mention that my (real) iterator is walking over a filesystem so I want to think of it as single use. Also, your solution inserts 400 elements instead of 20. My solution uses a mut vector to accumulate the wanna be results for the transaction and makes the transaction every n. I don&#39;t feel like it is very idiomatic but it works for now. I&#39;ll update my question with my approach and if you want to update your answer I&#39;ll accept it. Sorry for the possible confusion."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569402124, "post_id": 58089362, "comment_id": 102581872, "body": "I just wanted to show you how to batch properly at every stage, including the situation you were going to run into inevitably (splitting the batch). The key point was that committing every <code>INSERT</code> defeats the purpose of the transaction itself. Now that I know what you&#39;re really doing, though, I&#39;ll show you how to do it properly"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569403331, "post_id": 58089362, "comment_id": 102582579, "body": "@GuillemB Check the last snippet of the answer. In my opinion, this is probably one of the cleanest ways to implement a fixed-size batch."}, {"owner": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569404692, "post_id": 58089362, "comment_id": 102583348, "body": "Is <code>collect</code> lazy or will it realize everything within the iterator? I&#39;m going to collect data from a 2TB filesystem using WalkDir crate. I suppose that is what you meant by <code>allocation too large in size</code>. Am I right in thinking that a solution would be to call commit within a loop and make chunks that would be passed to commit instead of the iterator? Do you have any thoughts on the solution in my edit?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569405851, "post_id": 58089362, "comment_id": 102583977, "body": "@GuillemB this is going massively out of the scope of this question, but for this purpose only: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=1e256100ea7928179b3be428c4d06615\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . Written in &lt;5min, that&#39;s how you&#39;d make a lazy iterator for this. Obviously, there&#39;s a couple of things that could be improved."}, {"owner": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569407422, "post_id": 58089362, "comment_id": 102584800, "body": "I ended up using the itertools crate to do the chunking for me. I think that the final code looks quite good (see Edit 2). I still need to check that the chunking is lazy. However, thanks taking the time and holding my hand towards that solution i&#39;m truly humbled.   I suppose your answer answers my original question, which it turns out to be less than what I wanted. I will accept it unless you agree to do something with my solution (or something even better) if I were to edit it to something similar to: How to chunk iterator to build transactions with rusqlite."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569407586, "post_id": 58089362, "comment_id": 102584910, "body": "Just post another question :-) this one covers the original problem - your <code>commit()</code> issue and the consumption of the transaction. It&#39;s typically worth splitting concerns so somebody interested in lazily chunking an iterator will not need to deep-dive themselves into <code>rusqlite</code> to get their answer. And yes, <code>itertools</code> was a good go (and it is lazy), I implemented it from scratch to show you how it&#39;d look below the hood :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569403304, "last_edit_date": 1569403304, "creation_date": 1569368467, "answer_id": 58089362, "question_id": 58088362, "link": "https://stackoverflow.com/questions/58088362/cant-build-a-rusqlite-transaction-inside-loop-use-of-moved-value-and-cannot-bo/58089362#58089362", "title": "Can&#39;t build a rusqlite transaction inside loop: use of moved value and cannot borrow as mutable more than once at a time", "body": "<p>This is a SQL question more than it is a Rust one, but I'll explain both why you're running into this, and how it shows up in Rust.</p>\n\n<p>This all stems from a basic misconception about transactional databases, and it applies to every single RDBMS out there supporting transactions. The point of a transaction is to open what can be seen as a separate slate on the server; you then do state changes on that, like add or delete rows, and <strong>then</strong> you turn your separate slate into the \"real\" state of the server. Depending on what DB engine you're using, this will materialize differently, but for our purposes today with your question, this analogy will do.</p>\n\n<p>Instead of doing this, you are opening your transaction, doing one insert and then immediately handing the slate back with <a href=\"https://docs.rs/rusqlite/0.13.0/rusqlite/struct.Transaction.html#method.commit\" rel=\"nofollow noreferrer\"><code>commit()</code></a>. Notice its signature:</p>\n\n<pre><code>fn commit(self) -&gt; Result&lt;()&gt;\n</code></pre>\n\n<p>Just as we would expect, <code>commit()</code> takes <code>self</code>, not <code>&amp;mut self</code>. By committing (or rolling back), you are telling the server that you are <em>done</em> with this transaction.</p>\n\n<p>To fix this, you need to decide how you want to go about it in terms of the database. Batching is a good idea, which you've already found, but you need to make sure you can afford to have a failure of one batch and repeat. As such, we're going to split things up a bit.</p>\n\n<p>First, we're going to build our batch builder. We'll need this, particularly if we ever intend to replay a batch:</p>\n\n<pre><code>fn do_batch&lt;'a&gt;(tx: &amp;mut Transaction&lt;'a&gt;) -&gt; Result&lt;(), rusqlite::Error&gt; {\n    for i in 0..20 {\n        tx.execute(\"INSERT INTO entry (data) values (?1\", &amp;[i])?;\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>Then, we build the structure around it:</p>\n\n<pre><code>fn do_tx(mut conn: Connection) -&gt; Result&lt;(), rusqlite::Error&gt; {\n    for i in 0..20 {\n        // Open the TX\n        let mut tx = conn.transaction()?;\n        do_batch(&amp;mut tx)?;\n        // Do your error handling here. If the batch fails, you want to decide whether to retry or abort.\n        tx.commit()?;\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>It is always worth separating concerns if possible, and it is always worth passing a transaction around if you need it; that's what they are there for. Let your functions build the batch, then handle the commit/rollback behavior in an overarching structure of some sort.</p>\n\n<hr>\n\n<p>As you mentioned in the comments, you are walking a tree. For the purpose of this, I'm just going to assume you've already flattened your iterator (i.e. your N-dimensional tree is represented by a 1-dimensional iterator), and that this iterator lives under <code>tree_walker</code>.</p>\n\n<p>There is currently no <code>chunks()</code> method defined on an iterator, which is what you would need. For brevity, we're just going to <code>collect()</code> then use <code>Vec::chunks()</code>. For most workloads this shouldn't be a problem, but if you find this allocation too large in size, you can reimplement it yourself relatively easily.</p>\n\n<pre><code>use rusqlite::Error;\nuse rusqlite::{Connection, Transaction};\n\nfn do_batch&lt;'a&gt;(tx: &amp;Transaction&lt;'a&gt;, transaction_accum: &amp;[i32]) -&gt; Result&lt;(), rusqlite::Error&gt; {\n    for i in transaction_accum.iter() {\n        tx.execute(\"INSERT INTO entry (data) values (?1)\", &amp;[i])?;\n    }\n    Ok(())\n}\nfn commit(\n    mut conn: Connection,\n    tree_walker: impl Iterator&lt;Item = i32&gt;,\n    batch_size: usize,\n) -&gt; Result&lt;(), rusqlite::Error&gt; {\n    let collected: Vec&lt;i32&gt; = tree_walker.collect();\n    collected\n        .chunks(batch_size)\n        .fold(Ok(()), |current, elements| {\n            current.and_then(|_| {\n                let tx = conn.transaction()?;\n                do_batch(&amp;tx, &amp;elements)?;\n                tx.commit()\n            })\n        })\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "edited": false, "score": 0, "creation_date": 1569402396, "post_id": 58092369, "comment_id": 102582035, "body": "Thanks for taking the time to explain this. However, that will still not compile due to a second mutable borrow occurring after the commit."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1569393163, "creation_date": 1569393163, "answer_id": 58092369, "question_id": 58088362, "link": "https://stackoverflow.com/questions/58088362/cant-build-a-rusqlite-transaction-inside-loop-use-of-moved-value-and-cannot-bo/58092369#58092369", "title": "Can&#39;t build a rusqlite transaction inside loop: use of moved value and cannot borrow as mutable more than once at a time", "body": "<p>There is an important misconception on line 6 in the following snippet:</p>\n\n<pre><code>let transaction_size = 5;\nlet tx = conn.transaction()?;\nfor i in 0..20 {\n    if (i % transaction_size) == (transaction_size - 1) {\n        tx.commit()?;\n        let tx = conn.transaction()?; // &lt;-- HERE\n    }\n    tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n}\n</code></pre>\n\n<p>This line does not replace the <code>tx</code> variable that was created on line 2, but instead it creates a new variable named <code>tx</code> that shadows the first one for the duration of the <code>if</code> block and that gets dropped at the end of it. So when you get to the <code>tx.execute</code>, you are back trying to use the transaction that you already committed instead of the new transaction.</p>\n\n<p>What you want is:</p>\n\n<pre><code>let transaction_size = 5;\nlet mut tx = conn.transaction()?; // &lt;-- Note the `mut` so that we can change it later to a new one\nfor i in 0..20 {\n    if (i % transaction_size) == (transaction_size - 1) {\n        tx.commit()?;\n        tx = conn.transaction()?; // &lt;-- No `let` -&gt; replace the existing `tx`\n    }\n    tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n}\ntx.commit()?; // &lt;- Don't forget to commit the last transaction.\n</code></pre>\n"}], "owner": {"reputation": 271, "user_id": 938530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6920c523fa3a514678522209dc6d50fc?s=128&d=identicon&r=PG", "display_name": "GuillemB", "link": "https://stackoverflow.com/users/938530/guillemb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 402, "favorite_count": 0, "accepted_answer_id": 58089362, "answer_count": 2, "score": 0, "last_activity_date": 1569406762, "creation_date": 1569360457, "last_edit_date": 1569406762, "question_id": 58088362, "link": "https://stackoverflow.com/questions/58088362/cant-build-a-rusqlite-transaction-inside-loop-use-of-moved-value-and-cannot-bo", "title": "Can&#39;t build a rusqlite transaction inside loop: use of moved value and cannot borrow as mutable more than once at a time", "body": "<p>In order to speed up insertions into a SQLite DB using <a href=\"https://docs.rs/rusqlite/0.20.0/rusqlite/\" rel=\"nofollow noreferrer\">rusqlite</a>, I want to build a transaction inside a for loop and only commit every N iterations.</p>\n\n<p>The following code compiles but it builds a single transaction and commits it all in one go:</p>\n\n<pre><code>use rusqlite::{Connection, Result, NO_PARAMS};\n\nfn main() -&gt; Result&lt;()&gt; {\n    let mut conn = Connection::open_in_memory()?;\n\n    conn.execute(\n        \"CREATE TABLE entry (\n            id   INTEGER PRIMARY KEY,\n            data INTEGER\n        )\",\n        NO_PARAMS,\n    )?;\n\n    let tx = conn.transaction()?;\n    for i in 0..20 {\n        tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n    }\n    tx.commit()?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>My use case would require building a transaction with several millions of inserts, so what I would like to do instead is to accumulate on the transaction and when it reaches <code>transaction_size</code> commit it and start over with a new transaction. A <strong>non-compiling</strong> version would look like this:</p>\n\n<pre><code>let transaction_size = 5;\nlet tx = conn.transaction()?;\nfor i in 0..20 {\n    if (i % transaction_size) == (transaction_size - 1) {\n        tx.commit()?;\n        let tx = conn.transaction()?;\n    }\n    tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n}\n</code></pre>\n\n<p>The borrow checker won't allow this for two reasons.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `tx`\n  --&gt; src/main.rs:18:13\n   |\n15 |     let tx = conn.transaction()?;\n   |         -- move occurs because `tx` has type `rusqlite::transaction::Transaction&lt;'_&gt;`, which does not implement the `Copy` trait\n...\n18 |             tx.commit()?;\n   |             ^^ value moved here, in previous iteration of loop\n\nerror[E0499]: cannot borrow `conn` as mutable more than once at a time\n  --&gt; src/main.rs:19:22\n   |\n15 |     let tx = conn.transaction()?;\n   |              ---- first mutable borrow occurs here\n...\n19 |             let tx = conn.transaction()?;\n   |                      ^^^^ second mutable borrow occurs here\n20 |         }\n21 |         tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n   |         -- first borrow later used here\n</code></pre>\n\n<p>The first complaint makes sense to me. The second not so much, as the following will compile (but I'm inserting only one row per transaction):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for i in 0..20 {\n    let tx = conn.transaction()?;\n    tx.execute(\"INSERT INTO entry (data) VALUES (?1)\", &amp;[i])?;\n    tx.commit()?;\n}\n</code></pre>\n\n<p>I've tried using a <code>let tx = if cond { tx.commit()?; conn.transaction()? }</code> inside the loop but you need an else clause for it to type check.</p>\n\n<p>I can't figure out how to achieve my goal while making the compiler happy. Perhaps there is some way of doing it with unsafe features but I'm quite new to Rust.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I forgot to mention that I would like to considert my iterator as single use.</p>\n\n<p>Using the idea of separating the logic for building the transaction into <code>do_batch</code> from @S\u00e9bastien Renauld I made this version that will accumulate the data that has to be added into the transaction with a mutable vector. It then builds and commits the transaction in chunks of size <code>transaction_size</code>.</p>\n\n<pre><code>use rusqlite::{Connection, Result, Transaction, NO_PARAMS};\nuse std::vec::Vec;\n\nfn do_batch&lt;'a&gt;(tx: &amp;Transaction&lt;'a&gt;, transaction_accum: &amp;Vec&lt;i32&gt;) -&gt; Result&lt;()&gt; {\n    for i in transaction_accum.iter() {\n        tx.execute(\"INSERT INTO entry (data) values (?1)\", &amp;[i])?;\n    }\n    Ok(())\n}\n\nfn main() -&gt; Result&lt;()&gt; {\n    let mut conn = Connection::open_in_memory()?;\n\n    conn.execute(\n        \"CREATE TABLE entry (\n            id   INTEGER PRIMARY KEY,\n            data INTEGER\n        )\",\n        NO_PARAMS,\n    )?;\n\n    let transaction_size = 5;\n    let mut transaction_accum: Vec&lt;i32&gt; = Vec::new();\n    for i in 1..20 {\n        transaction_accum.push(i);\n\n        if (i % transaction_size) == (transaction_size - 1) {\n            let tx = conn.transaction()?;\n            do_batch(&amp;tx, &amp;transaction_accum)?;\n            transaction_accum.clear();\n            tx.commit()?;\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>After yet another suggestion by @S\u00e9bastien Renauld I stumbled upon the itertools crate which will let you chunk the output from an iterator which gives the following nice and clean solution. My only worry about it is that in order to make the chunks the whole iterator is realized under the cover when calling <code>chunks</code>. Is this the case?</p>\n\n<pre><code>use rusqlite::{Connection, Result, Transaction, NO_PARAMS};\nuse std::vec::Vec;\nuse itertools::Itertools;\n\n\nfn do_batch&lt;'a&gt;(tx: &amp;Transaction&lt;'a&gt;, transaction_accum: &amp;Vec&lt;i32&gt;) -&gt; Result&lt;()&gt; {\n    for i in transaction_accum.iter() {\n        tx.execute(\"INSERT INTO entry (data) values (?1)\", &amp;[i])?;\n    }\n    Ok(())\n}\n\nfn main() -&gt; Result&lt;()&gt; {\n    let mut conn = Connection::open_in_memory()?;\n\n    conn.execute(\n        \"CREATE TABLE entry (\n            id   INTEGER PRIMARY KEY,\n            data INTEGER\n        )\",\n        NO_PARAMS,\n    )?;\n\n    let transaction_size = 5;\n    let my_iter = 1..20; // this is really a WalkDir from the walkdir crate\n    for chunk in &amp;my_iter.into_iter().chunks(transaction_size) {\n        let tx = conn.transaction()?;\n        do_batch(&amp;tx, &amp;chunk.collect())?;\n        tx.commit()?;\n    }\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "answers": [{"comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1569349645, "post_id": 58086008, "comment_id": 102566139, "body": "Ouch.. First conclusion - no easy way here. +1, will accept once I understand it.."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1569420753, "post_id": 58086008, "comment_id": 102592527, "body": "Could you replace the first two rules with this single one <code>($($tt:tt)*) =&gt; {         create_states!(@ {[] []} $($tt)*);</code> and make it a little bit simpler?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1569421181, "post_id": 58086008, "comment_id": 102592779, "body": "@rodrigo probably (I didn&#39;t copy this code into the playground and make the suggested change), but I was following the <a href=\"http://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\" rel=\"nofollow noreferrer\">advice from TLBORM</a>: <i>It is recommended that, when writing a TT muncher, you make reasonable efforts to keep recursion as limited as possible. This can be done by adding additional rules to account for variation in the input (as opposed to recursion into an intermediate layer)</i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1569348640, "creation_date": 1569348640, "answer_id": 58086008, "question_id": 58085328, "link": "https://stackoverflow.com/questions/58085328/macro-to-build-enum-with-different-kinds-of-elements/58086008#58086008", "title": "Macro to build enum with different &quot;kinds&quot; of elements", "body": "<p>This can be accomplished with a <a href=\"http://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\" rel=\"nofollow noreferrer\"><em>TT muncher</em></a>, <a href=\"http://danielkeep.github.io/tlborm/book/pat-push-down-accumulation.html\" rel=\"nofollow noreferrer\"><em>push-down accumulation</em></a>, and handling the <a href=\"http://danielkeep.github.io/tlborm/book/pat-trailing-separators.html\" rel=\"nofollow noreferrer\">trailing separators</a>.</p>\n\n<pre><code>macro_rules! create_states {\n    // User entry points.\n    (final $name:ident $($tt:tt)*) =&gt; {\n        create_states!(@ {[] [$name]} $($tt)*);\n    };\n    ($name:ident $($tt:tt)*) =&gt; {\n        create_states!(@ {[$name] []} $($tt)*);\n    };\n\n    // Internal rules to categorize each value\n    (@ {[$($n:ident)*] [$($t:ident)*]} $(,)? final $name:ident $($tt:tt)*) =&gt; {\n        create_states!(@ {[$($n)*] [$($t)* $name]} $($tt)*);\n    };\n    (@ {[$($n:ident)*] [$($t:ident)*]} $(,)? $name:ident $($tt:tt)*) =&gt; {\n        create_states!(@ {[$($n)* $name] [$($t)*]} $($tt)*);\n    };\n\n    // Final internal rule that generates the enum from the categorized input\n    (@ {[$($n:ident)*] [$($t:ident)*]} $(,)?) =&gt; {\n        #[derive(Copy, Clone)]\n        enum State {\n            $($n,)*\n            $($t,)*\n        }\n\n        impl State {\n            fn is_final(&amp;self) -&gt; bool {\n                match self {\n                    $(Self::$t =&gt; true,)*\n                    _ =&gt; false,\n                }\n            }\n        }\n    };\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/54406388/155423\">What does an @ symbol mean in a declarative macro?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43143327/155423\">How to allow optional trailing commas in macros?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1569418251, "post_id": 58092512, "comment_id": 102590945, "body": "So just to understand why it works.. is it because <code>@something</code> will never be matched with <code>ident</code>?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1569419210, "post_id": 58092512, "comment_id": 102591568, "body": "@EugeneSh. Correct. This is also the reason why it is <a href=\"https://stackoverflow.com/a/54406657/5397009\">customary to use <code>@something</code> for internal rules when writing macros</a>."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1569393785, "creation_date": 1569393785, "answer_id": 58092512, "question_id": 58085328, "link": "https://stackoverflow.com/questions/58085328/macro-to-build-enum-with-different-kinds-of-elements/58092512#58092512", "title": "Macro to build enum with different &quot;kinds&quot; of elements", "body": "<p>Shepmaster's answer is more general, but in your specific case, since you \"have full flexibility in the macro invocation\", you could just replace <code>final</code> with <code>@final</code> and the naive attempt works barring a couple of minor typos:</p>\n\n<pre><code>macro_rules! create_states {\n    ($($r:ident),+, $(@final $f:ident),*) =&gt; {\n        #[derive(Copy, Clone)]\n        enum State {\n            $($r,)*\n            $($f),*\n        }\n\n        impl State {\n            fn is_final(&amp;self) -&gt; bool {\n                match self {\n                    $(Self::$f =&gt; true,)*\n                    _ =&gt; false,\n                }\n            }\n        }\n    }\n}\n\ncreate_states!(S0, S1, @final S2, @final S3);\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bc30d42a10b2843b1d695f318a59f484\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 58086008, "answer_count": 2, "score": 0, "last_activity_date": 1569393785, "creation_date": 1569345564, "last_edit_date": 1569345920, "question_id": 58085328, "link": "https://stackoverflow.com/questions/58085328/macro-to-build-enum-with-different-kinds-of-elements", "title": "Macro to build enum with different &quot;kinds&quot; of elements", "body": "<p>I am trying to come up with a macro which I would call like</p>\n\n<pre><code>create_states!(S0, S1, final S2, final S3);\n</code></pre>\n\n<p>It will create an enum to represent state machine states and some of them will be final (accepting) states - <code>S2</code>, <code>S3</code>. The resulting enum and its <code>impl</code> should look like:</p>\n\n<pre><code>enum State {\n    S0,\n    S1, \n    S2,\n    S3,\n}\n\nimpl State {\n    fn is_final(&amp;self) -&gt; bool {\n        match self {\n            Self::S2 =&gt; true,\n            Self::S3 =&gt; true,\n            _ =&gt; false,\n        }\n    }\n}\n</code></pre>\n\n<p>My naive attempt:</p>\n\n<pre><code>macro_rules! create_states {\n    ($($r:ident),+, $(final $f:ident),*) =&gt; {\n        #[derive(Copy, Clone)]\n        enum State {\n            $($s),*\n            $($f),*\n        }\n\n        impl State {\n            fn is_final(&amp;self) -&gt; bool {\n                match self {\n                    $(Self::$f =&gt; true,)*\n                    _ =&gt; false,\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>is ending up with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: local ambiguity: multiple parsing options: built-in NTs ident ('r') or 1 other option.\n  --&gt; src/lib.rs:20:24\n   |\n20 | create_states!(S0, S1, final S2, final S3);\n   |                        ^^^^^\n</code></pre>\n\n<p>Trying to remove the comma between the patterns in the second line:</p>\n\n<pre><code>($($r:ident),+ $(final $f:ident),*) =&gt; { ...\n</code></pre>\n\n<p>is producing another one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `S2`\n  --&gt; src/lib.rs:20:30\n   |\n1  | macro_rules! create_states {\n   | -------------------------- when calling this macro\n...\n20 | create_states!(S0, S1, final S2, final S3);\n   |                              ^^ no rules expected this token in macro call\n</code></pre>\n\n<p>I <em>think</em> I understand what causing these errors - it thinks that <code>final</code> is another identifier matching <code>r</code>. But what would be the right way to write such a macro (if possible at all without overcomplicating)? </p>\n\n<p>I have full flexibility with the macro invocation as this is my personal learning exercise. The main objective is to learn the right way to do things. It would be nice to have this macro to accept the <code>final</code> at any position if possible.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569337659, "post_id": 58083211, "comment_id": 102560625, "body": "You cannot create a <code>String</code> via <code>to_string()</code> then get a string slice to it. Nothing owns the <code>String</code> so it will be deallocated."}, {"owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569338261, "post_id": 58083211, "comment_id": 102560955, "body": "So this can never be achieved in a single step and step1 -&gt; step2 is the correct approach in this situation?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569338413, "post_id": 58083211, "comment_id": 102561042, "body": "That is correct! The simpler case is <code>let x: &amp;str = 1.to_string().as_ref(); println!(&quot;{}&quot;, x);</code> which also has a better error message."}, {"owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569338486, "post_id": 58083211, "comment_id": 102561088, "body": "Perfect, thank you."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1569339459, "post_id": 58083211, "comment_id": 102561598, "body": "Your <code>Vec&lt;&amp;str&gt;</code> is probably useless as you have to keep the <code>Vec&lt;String&gt;</code> around and it can be used instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1569339926, "post_id": 58083211, "comment_id": 102561843, "body": "I think that some versions of @DenysS&#233;guret&#39;s suggestion are <a href=\"https://stackoverflow.com/a/33252901/155423\">explained in code here</a> and <a href=\"https://stackoverflow.com/a/41180422/155423\">here</a>"}], "owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 121, "favorite_count": 0, "closed_date": 1569337390, "answer_count": 0, "score": 0, "last_activity_date": 1569339753, "creation_date": 1569337321, "last_edit_date": 1569337500, "question_id": 58083211, "link": "https://stackoverflow.com/questions/58083211/how-do-i-convert-a-vecmystruct-to-a-vecstring-then-to-a-vecstr-in-a-singl", "closed_reason": "Duplicate", "title": "How do I convert a Vec&lt;MyStruct&gt; to a Vec&lt;String&gt; then to a Vec&lt;&amp;str&gt; in a single step?", "body": "<p>I am trying to convert a <code>Vec</code> of a given struct to its <code>String</code> and eventually to <code>&amp;str</code> format.</p>\n\n<p>This example code simulates exactly what I am trying to achieve.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a = vec![1i32, 2i32, 3i32];\n\n    let step1: Vec&lt;String&gt; = a.iter().map(|x| x.to_string()).collect::&lt;Vec&lt;String&gt;&gt;();\n\n    let step2: Vec&lt;&amp;str&gt; = step1.iter().map(AsRef::as_ref).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n\n    // This does not work as I was expecting it to\n    // and its not being accepted by the compiler as valid code\n    //\n    let in_single_step: Vec&lt;&amp;str&gt; = a\n        .iter()\n        .map(|x| x.to_string()) // &lt;--- Something is needed after this step?\n        .map(AsRef::as_ref)\n        .collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n\n    println!(\"{:?}\", in_single_step);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c1859c90c36901d135af5b41f707e102\" rel=\"nofollow noreferrer\">playground with this code</a></p>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n  --&gt; src/main.rs:14:10\n   |\n14 |         .map(AsRef::as_ref)\n   |          ^^^\n   |          |\n   |          expected signature of `fn(std::string::String) -&gt; _`\n   |          found signature of `for&lt;'r&gt; fn(&amp;'r _) -&gt; _`\n\nerror[E0599]: no method named `collect` found for type `std::iter::Map&lt;std::iter::Map&lt;std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:13:14: 13:31]&gt;, for&lt;'r&gt; fn(&amp;'r _) -&gt; &amp;'r _ {&lt;_ as std::convert::AsRef&lt;_&gt;&gt;::as_ref}&gt;` in the current scope\n  --&gt; src/main.rs:15:10\n   |\n15 |         .collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n   |          ^^^^^^^\n   |\n   = note: the method `collect` exists but the following trait bounds were not satisfied:\n           `&amp;mut std::iter::Map&lt;std::iter::Map&lt;std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:13:14: 13:31]&gt;, for&lt;'r&gt; fn(&amp;'r _) -&gt; &amp;'r _ {&lt;_ as std::convert::AsRef&lt;_&gt;&gt;::as_ref}&gt; : std::iter::Iterator`\n           `std::iter::Map&lt;std::iter::Map&lt;std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:13:14: 13:31]&gt;, for&lt;'r&gt; fn(&amp;'r _) -&gt; &amp;'r _ {&lt;_ as std::convert::AsRef&lt;_&gt;&gt;::as_ref}&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>Similar questions are:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/33216514/convert-vecstring-to-vecstr\">Convert Vec&lt;String&gt; to Vec&lt;&amp;str&gt;</a></li>\n<li><a href=\"https://stackoverflow.com/questions/41179659/convert-vecstring-into-a-slice-of-str-in-rust/41180422\">Convert Vec&lt;String&gt; into a slice of &amp;str in Rust?</a></li>\n</ul>\n"}, {"tags": ["rust", "traits", "implicit-conversion", "dereference"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1569338313, "post_id": 58082860, "comment_id": 102560990, "body": "Again unrelated to your question, but <code>struct Foo();</code> and <code>Foo()</code> can just be <code>struct Foo;</code> and <code>Foo</code>. Helps to avoid mistakes thinking it&#39;s a regular function."}, {"owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569338660, "post_id": 58082860, "comment_id": 102561186, "body": "@Shepmaster thanks, I didn&#39;t know (now I see: <a href=\"https://doc.rust-lang.org/book/ch05-01-defining-structs.html#unit-like-structs-without-any-fields\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569339147, "post_id": 58082860, "comment_id": 102561415, "body": "More relevant to your question, <a href=\"https://stackoverflow.com/q/29812530/155423\">When should I implement std::convert::From vs std::convert::Into?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569358964, "post_id": 58088079, "comment_id": 102569594, "body": "I expect it to be Solved by Chalk\u2122."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569359076, "post_id": 58088079, "comment_id": 102569627, "body": "@Shepmaster Whenever I see any type inference or constraint solver weirdness, I have the same hope, but I actually don&#39;t know what the exact differences will be, or how many years it will take since it lands in rustc."}, {"owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "edited": false, "score": 0, "creation_date": 1569403836, "post_id": 58088079, "comment_id": 102582855, "body": "Thanks for the explanation. This would not happen if there were unsatisfied trait bounds on <code>T</code>, right? I mean, in that case the implementation would be skipped and the search for a suitable method would continue. Am I correct?"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1569379423, "last_edit_date": 1569379423, "creation_date": 1569358856, "answer_id": 58088079, "question_id": 58082860, "link": "https://stackoverflow.com/questions/58082860/why-is-an-explicit-dereference-required-in-x-into-but-not-in-x-my-into/58088079#58088079", "title": "Why is an explicit dereference required in (*x).into(), but not in x.my_into()?", "body": "<p>Rust performs method lookup exatly as you describe, and it immediately finds a candidate for <code>.into()</code> \u2013 the <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html#implementors\" rel=\"nofollow noreferrer\">blanket implementation</a></p>\n\n<pre><code>impl&lt;T, U&gt; Into&lt;U&gt; for T\nwhere\n    U: From&lt;T&gt;,\n{\n    fn into(self) -&gt; U {\n        U::from(self)\n    }\n}\n</code></pre>\n\n<p>This implementation fulfils all the requirements for candidate methods \u2013 it is visible, in scope and defined for type <code>&amp;Foo</code>, since it is defined for <em>any</em> type <code>T</code>. Once the compiler has picked this candidate, it notices that the trait bounds on <code>U</code> are not satisfied, and issues the error you see.</p>\n\n<p>The situation for <code>MyInto</code> is completely different, because you don't provide a blanket implementation based on <code>From</code>. If you do, you will get the same error.</p>\n\n<p>It could be argued that the compiler should skip the blanket implementation if the trait bounds are not satisfied, and move on with the list of candidate types until it finds a better fit. The language specification is actually not completely clear on that point, but from the error we see it is clear what the compiler actually does.</p>\n"}, {"tags": [], "owner": {"reputation": 168, "user_id": 6592117, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/154d0fa23505db3ad5aaad960754d312?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew", "link": "https://stackoverflow.com/users/6592117/matthew"}, "is_accepted": false, "score": 1, "last_activity_date": 1569452034, "creation_date": 1569452034, "answer_id": 58107529, "question_id": 58082860, "link": "https://stackoverflow.com/questions/58082860/why-is-an-explicit-dereference-required-in-x-into-but-not-in-x-my-into/58107529#58107529", "title": "Why is an explicit dereference required in (*x).into(), but not in x.my_into()?", "body": "<p>Interestingly enough, after inspecting the compiler output, it would appear that the <code>Into</code> implementation actually just calls a method of the trait <code>From</code>. What it's looking for is <code>std::collections::From&lt;&amp;Foo&gt; for &amp;str</code>. Therefore, if we implement that trait, the compiler will indeed find our function, and execute it.</p>\n\n<p>Using the following declarations:</p>\n\n<pre><code>#[derive(Clone, Copy, Debug)]\nstruct Foo();\n\nimpl std::convert::From&lt;&amp;Foo&gt; for &amp;str {\n    fn from(f: &amp;Foo) -&gt; &amp;'static str {\n        \"A &amp;str\"// This could be replaced with an actual implementation\n    }\n}\n</code></pre>\n\n<p>Your code works as you wanted:</p>\n\n<pre><code>let result: &amp;str = (&amp;Foo()).into();// No compiler errors.\n</code></pre>\n\n<p>The original code you wanted does work, and it isn't actually hard to implement.</p>\n"}], "owner": {"reputation": 381, "user_id": 2197587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2145fb9dff1eec2badb45f58e8fd936f?s=128&d=identicon&r=PG&f=1", "display_name": "Federico", "link": "https://stackoverflow.com/users/2197587/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 437, "favorite_count": 0, "accepted_answer_id": 58088079, "answer_count": 2, "score": 11, "last_activity_date": 1569452034, "creation_date": 1569336182, "last_edit_date": 1569338257, "question_id": 58082860, "link": "https://stackoverflow.com/questions/58082860/why-is-an-explicit-dereference-required-in-x-into-but-not-in-x-my-into", "title": "Why is an explicit dereference required in (*x).into(), but not in x.my_into()?", "body": "<p>After reading <a href=\"https://doc.rust-lang.org/stable/reference/expressions/method-call-expr.html\" rel=\"noreferrer\">method-call expressions</a>, <a href=\"https://doc.rust-lang.org/stable/reference/expressions/operator-expr.html#the-dereference-operator\" rel=\"noreferrer\">dereference operator</a>, <a href=\"https://github.com/rust-lang/rust/blob/b6d91a2bdac45cd919497a24207fab843124d4ba/src/librustc_typeck/check/method/README.md\" rel=\"noreferrer\">method lookup</a>, and <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">auto-dereferencing</a>, I thought I had a pretty good understanding of the subject; but then I encountered a situation in which I expected auto-dereferencing to happen, when in fact it didn't happen.</p>\n\n<p>The example is as follows.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy, Debug)]\nstruct Foo();\n\nimpl Into&lt;&amp;'static str&gt; for Foo {\n    fn into(self) -&gt; &amp;'static str {\n        \"&lt;Foo as Into&gt;::into\"\n    }\n}\n\nfn vec_into&lt;F: Copy + Into&lt;T&gt;, T&gt;(slice: &amp;[F]) -&gt; Vec&lt;T&gt; {\n    slice.iter().map(|x| (*x).into()).collect()\n}\n\nfn main() {\n    let array = [Foo(), Foo(), Foo()];\n    let vec = vec_into::&lt;_, &amp;'static str&gt;(&amp;array);\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>The code above works, but I thought that the explicit dereferencing <code>(*x).into()</code> in the function <code>vec_into</code> wasn't needed. My reasoning is that, since <code>x: &amp;Foo</code>, then <code>x.into()</code> would try to find methods accepting type <code>&amp;Foo</code>, <code>&amp;&amp;Foo</code>, <code>&amp;mut &amp;Foo</code>, <code>Foo</code>, <code>&amp;Foo</code>, <code>&amp;mut Foo</code>.</p>\n\n<p>This is because there is the chain of dereferencing <code>&amp;Foo</code> \u2192 <code>Foo</code>, and for each <code>U</code> in this chain we insert also <code>&amp;U</code> and <code>&amp;mut U</code>.</p>\n\n<p>My intuition is confirmed by the fact that the following code also works, without any explicit dereference.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy, Debug)]\nstruct Foo();\n\ntrait MyInto&lt;T&gt; {\n    fn my_into(self) -&gt; T;\n}\n\nimpl MyInto&lt;&amp;'static str&gt; for Foo {\n    fn my_into(self) -&gt; &amp;'static str {\n        \"&lt;Foo as MyInto&gt;::my_into\"\n    }\n}\n\nfn vec_my_into&lt;F: Copy + MyInto&lt;T&gt;, T&gt;(slice: &amp;[F]) -&gt; Vec&lt;T&gt; {\n    slice.iter().map(|x| x.my_into()).collect()\n}\n\nfn main() {\n    let array = [Foo(), Foo(), Foo()];\n    let my_vec = vec_my_into(&amp;array);\n    println!(\"{:?}\", my_vec);\n}\n</code></pre>\n\n<p>Here <code>x: &amp;Foo</code> is implicitly dereferenced in order to call the method <code>&lt;Foo as MyInto&lt;&amp;'static str&gt;&gt;::my_into</code>.</p>\n\n<h1>A smaller example</h1>\n\n<p>Given the above definitions of <code>Foo</code> and <code>MyInto</code>, the code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result: &amp;str = (&amp;Foo()).my_into()\n</code></pre>\n\n<p>works, but</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result: &amp;str = (&amp;Foo()).into()\n</code></pre>\n\n<p>fails to compile with the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;str: std::convert::From&lt;&amp;Foo&gt;` is not satisfied\n  --&gt; src/bin/into.rs:34:33\n   |\n34 |     let result: &amp;str = (&amp;Foo()).into();\n   |                                 ^^^^ the trait `std::convert::From&lt;&amp;Foo&gt;` is not implemented for `&amp;str`\n   |\n   = note: required because of the requirements on the impl of `std::convert::Into&lt;&amp;str&gt;` for `&amp;Foo`\n</code></pre>\n"}, {"tags": ["unit-testing", "testing", "rust", "bdd", "rust-cargo"], "comments": [{"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569336272, "post_id": 58082156, "comment_id": 102559845, "body": "@Shepmaster Right, bear with me, I&#39;m learning fast but not necessarily fast enough! Edit made"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569336398, "post_id": 58082156, "comment_id": 102559917, "body": "@Shepmaster yes, I&#39;d like that documentation to show up somewhere - ideally in a section titled <code>Specification</code>, but I&#39;m realistic enough to accept that might be a few steps away."}], "answers": [{"comments": [{"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569338058, "post_id": 58082911, "comment_id": 102560839, "body": "This looks to me to be a workaround to the basic problem, but it&#39;s frustratingly a bit limited (not your fault!). Ideally I&#39;d like to get hold of an intermediate representation of the docs from inside <code>rustdoc</code>, so it looks like I&#39;ll need to keep thinking..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569338199, "post_id": 58082911, "comment_id": 102560927, "body": "@HenryGomersall As I understand it, since you are using conditional compilation (<code>#[cfg(...)]</code> and <code>#[test]</code>), there <i>isn&#39;t</i> an internal representation of the docs \u2014 the functions don&#39;t even exist by the time rustdoc looks at the code."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569338570, "post_id": 58082911, "comment_id": 102561137, "body": "Interesting, where does <code>rustdoc</code> get its input from?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569338776, "post_id": 58082911, "comment_id": 102561242, "body": "@HenryGomersall <i>Rustdoc actually uses the rustc internals directly. [...] It runs the compiler up to the point where we have an internal representation of a crate (HIR) and the ability to run some queries about the types of items. [...] librustdoc performs two major steps [...] 1. &quot;Clean&quot; the AST into a form that&#39;s more suited to creating documentation [...] 2. Use this cleaned AST to render a crate&#39;s documentation, one page at a time.</i> <a href=\"https://rust-lang.github.io/rustc-guide/rustdoc.html\" rel=\"nofollow noreferrer\">rustc guide</a>"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569340952, "post_id": 58082911, "comment_id": 102562382, "body": "that link is very interesting. Taking the <code>rustc</code> build command from <code>cargo test --verbose</code>, and appending <code>-Zunpretty=hir-tree</code> provides us with what might well be a useful HIR from which I can probably glean the relevant bits and pieces."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1569341068, "post_id": 58082911, "comment_id": 102562446, "body": "@HenryGomersall if you are interested in going that deep, it&#39;s possible you could work with the rustdoc team to add a <code>--document-test-items</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1569336336, "creation_date": 1569336336, "answer_id": 58082911, "question_id": 58082156, "link": "https://stackoverflow.com/questions/58082156/is-there-some-way-to-build-rust-documentation-that-includes-the-test-documentati/58082911#58082911", "title": "Is there some way to build Rust documentation that includes the test documentation strings?", "body": "<p>You can introduce a new feature flag that can be used to treat tests specially for the purposes of documentation.</p>\n\n<p>Add the feature to your Cargo.toml:</p>\n\n<pre><code>[features]\ndox = []\n</code></pre>\n\n<p>Use the feature flag in your code.</p>\n\n<ol>\n<li>Compile the <code>tests</code> modules if tests are running <em>or</em> the feature flag is provided.</li>\n<li>Only mark <code>#[test]</code> functions if the feature flag is not provided. The <code>#[test]</code> attribute automatically implies <code>#[cfg(test)]</code>, so we have to skip that to allow the function to exist.</li>\n</ol>\n\n<pre><code>/// This function does some important stuff\npub fn working_fn() -&gt; bool {\n    true\n}\n\n#[cfg(any(test, feature = \"dox\"))]\nmod tests {\n    //! This is some important set of tests\n    //!\n    use super::*;\n\n    /// The function should work\n    #[cfg_attr(not(feature = \"dox\"), test)]\n    fn it_works() {\n        assert!(working_fn());\n    }\n}\n</code></pre>\n\n<p>Build the documentation</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo doc --document-private-items --features=dox\n</code></pre>\n\n<p>Keep an eye on <a href=\"https://doc.rust-lang.org/rustdoc/unstable-features.html#documenting-platform-feature-specific-information\" rel=\"nofollow noreferrer\"><code>#[cfg(rustdoc)]</code></a>, which would allow you to remove the need for your own feature flag but is currently unstable.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42551113/155423\">Is it possible to conditionally enable an attribute like `derive`?</a></li>\n</ul>\n\n<blockquote>\n  <p>ideally I'd be able to document private tests without also documenting other private objects</p>\n</blockquote>\n\n<p>You could make your tests <code>pub</code> or <code>pub(crate)</code>.</p>\n\n<p>If that wasn't an option, I think this will be more annoying than it is valuable. The direct solution I know of would be to follow <a href=\"https://stackoverflow.com/q/49479854/155423\">How do I change a function&#39;s qualifiers via conditional compilation?</a> to conditionally make the test <code>pub</code> or not.</p>\n"}], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 0, "accepted_answer_id": 58082911, "answer_count": 1, "score": 2, "last_activity_date": 1569336336, "creation_date": 1569334058, "last_edit_date": 1569336238, "question_id": 58082156, "link": "https://stackoverflow.com/questions/58082156/is-there-some-way-to-build-rust-documentation-that-includes-the-test-documentati", "title": "Is there some way to build Rust documentation that includes the test documentation strings?", "body": "<p>Our testing methodology has test documentation as a first class object in the documentation output. Specifically, it defines the specification that is tested by each behavioural test.</p>\n\n<p>Running <code>cargo doc</code> on a project with suitably documented tests doesn't yield much in the way of documentation derived from the test doc strings and I can't see any obvious way of making it include the test doc strings in the output.</p>\n\n<p>An example module would be as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// This function does some important stuff\npub fn working_fn() -&gt; bool {\n    true\n}\n\n#[cfg(test)]\nmod tests {\n    //! This is some important set of tests\n    //!\n\n    use super::*;\n\n    /// The function should work\n    #[test]\n    fn it_works() {\n        assert!(working_fn());\n    }\n}\n</code></pre>\n\n<p>I get documentation output for the public <code>working_fn</code>, but nothing for the <code>tests</code> module. I appreciate that an additional complication is that tests are private and ideally I'd be able to document private tests without also documenting other private objects.</p>\n"}, {"tags": ["recursion", "rust", "tree", "iterator"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569315529, "post_id": 58076576, "comment_id": 102547860, "body": "Please add an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Without any Rust code, it&#39;s hard to answer."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569315606, "post_id": 58076576, "comment_id": 102547901, "body": "This file iterator is open-source: <a href=\"https://docs.rs/walkdir/2.2.9/walkdir/\" rel=\"nofollow noreferrer\">docs.rs/walkdir/2.2.9/walkdir</a>"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569315839, "post_id": 58076576, "comment_id": 102548041, "body": "<a href=\"https://github.com/BurntSushi/walkdir/blob/master/src/lib.rs\" rel=\"nofollow noreferrer\">This</a> is the source code?  The essence is drowned in options, as always with the real life code."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569317482, "post_id": 58076576, "comment_id": 102549032, "body": "@FrenchBoiethios: I have to think up some approach first. Right now I&#39;m starting to suspect that in Rust one has to abandon the idea of recursive calls when it comes to iterators. Is it really so?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1569320496, "post_id": 58076576, "comment_id": 102550762, "body": "Why make recursive calls when a stack is so easy to use and so efficient (and can also be easily consumed by a tread pool) ?"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569322079, "post_id": 58076576, "comment_id": 102551628, "body": "First off, &quot;To iterate is human, to recurse divine&quot;... Back to business: do you really mean, I absolutely <i>have to</i> use stack in my case? You see, I still don&#39;t know."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1569329905, "post_id": 58076576, "comment_id": 102555916, "body": "Careful with such sayings, @AlexeyOrlov. Recursion is easier on the eyes, not on the performance, unless the language and/or platform explicitly provides for it. Rust does not."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569329950, "post_id": 58076576, "comment_id": 102555948, "body": "@S&#233;bastienRenauld You are right, generally. Walking a tree is a perfectly legitimate application for non-tail-optimized recursion, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569332556, "post_id": 58076576, "comment_id": 102557682, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/43833588/155423\">Implement IntoIterator for binary tree</a> or <a href=\"https://stackoverflow.com/q/57573212/155423\">How do I flatten a recursive structure using recursive iterators?</a>; <a href=\"https://stackoverflow.com/q/47797743/155423\">How to correctly iterate all records of a multi-level depth structure in Rust?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58076576/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569333298, "post_id": 58076576, "comment_id": 102558091, "body": "@Shepmaster My problem is a bit different. I will edit my question once more as soon as possible."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569341515, "post_id": 58076576, "comment_id": 102562683, "body": "@Shepmaster Edited as suggested."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569416896, "post_id": 58076576, "comment_id": 102590166, "body": "Please, take a look at my latest update. It&#39;s probably very, very close. Still no cigar. Now it should be crystal clear what I actually want."}], "answers": [{"comments": [{"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569325130, "post_id": 58078981, "comment_id": 102553286, "body": "Thanks! I&#39;ll spend some time studying it. &quot;Why recursion&quot; is self-explanatory: this does not look nearly as nice and readable as the Python/Elixir solution."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569325335, "post_id": 58078981, "comment_id": 102553384, "body": "@AlexeyOrlov Using walk_dir would be two lines. Be careful that in real life you have to deal with unexpected problems, like permissions, invalid links, inodes, etc. As a bonus here&#39;s how I compute (in parallel) the sum of sizes of a dir : <a href=\"https://github.com/Canop/broot/blob/master/src/file_sizes/file_sizes_unix.rs#L13\" rel=\"nofollow noreferrer\">github.com/Canop/broot/blob/master/src/file_sizes/&hellip;</a> (I basically use a channel in place of a stack)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 1, "creation_date": 1569325443, "post_id": 58078981, "comment_id": 102553447, "body": "Last thing: I just wrote the FileIterator right now for your question. It&#39;s not well tested and could probably be more elegant"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569326289, "post_id": 58078981, "comment_id": 102553906, "body": "Thank you again! My task is rather specific. Permission problems are not very likely, but sorting, filtering and forward/backward moving should go smoothly."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569327295, "post_id": 58078981, "comment_id": 102554441, "body": "@AlexeyOrlov In order to sort, you could use replace <code>files: Option&lt;DirEntry&gt;</code> with <code>files: Option&lt;std::vec::IntoIter&lt;PathBuf&gt;&gt;</code> and build it by first storing the entries into a vector then sorting them. There&#39;s no <code>read_dir</code> which directly allows sorting."}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569328364, "post_id": 58078981, "comment_id": 102555082, "body": "Meanwhile I did some further research. The Elixir style solution should be feasible. <code>Vec&lt;PathBuf&gt;</code> (<code>files</code>) can be iterated as is; and there is the same <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\">flat_map</a> function. I just have to figure out how to combine it all Rust fashion."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 2, "last_activity_date": 1569323397, "creation_date": 1569323397, "answer_id": 58078981, "question_id": 58076576, "link": "https://stackoverflow.com/questions/58076576/how-do-i-build-an-iterator-for-walking-a-file-tree-recursively/58078981#58078981", "title": "How do I build an iterator for walking a file tree recursively?", "body": "<p>There are two approaches:</p>\n\n<p>The first one is to use an existing crate, like <a href=\"https://docs.rs/walkdir/2.2.9/walkdir/\" rel=\"nofollow noreferrer\">walkdir</a>. The benefit is it's being well tested and offers many options.</p>\n\n<p>The second one is to write your own implementation of Iterator. Here's an example, and maybe the basis for your own:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct FileIterator {\n    dirs: Vec&lt;PathBuf&gt;, // the dirs waiting to be read\n    files: Option&lt;ReadDir&gt;, // non recursive iterator over the currently read dir\n}\n\nimpl From&lt;&amp;str&gt; for FileIterator {\n    fn from(path: &amp;str) -&gt; Self {\n        FileIterator {\n            dirs: vec![PathBuf::from(path)],\n            files: None,\n        }\n    }\n}\n\nimpl Iterator for FileIterator {\n    type Item = PathBuf;\n    fn next(&amp;mut self) -&gt; Option&lt;PathBuf&gt; {\n        loop {\n            while let Some(read_dir) = &amp;mut self.files {\n                match read_dir.next() {\n                    Some(Ok(entry)) =&gt; {\n                        let path = entry.path();\n                        if let Ok(md) = entry.metadata() {\n                            if md.is_dir() {\n                                self.dirs.push(path.clone());\n                                continue;\n                            }\n                        }\n                        return Some(path);\n                    }\n                    None =&gt; { // we consumed this directory\n                        self.files = None;\n                        break; \n                    }\n                    _ =&gt; { }\n                }\n            }\n            while let Some(dir) = self.dirs.pop() {\n                let read_dir = fs::read_dir(&amp;dir);\n                if let Ok(files) = read_dir {\n                    self.files = Some(files);\n                    return Some(dir);\n                }\n            }\n            break; // no more files, no more dirs\n        }\n        return None;\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d0a2b5f077fc85cfc5d273a621ab960b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The advantage of writing your own iterator is that you'll tune it for your precise needs (sorting, filtering, error handling, etc.). But you'll have to deal with your own bugs.</p>\n"}, {"tags": [], "owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "is_accepted": true, "score": 0, "last_activity_date": 1569648752, "last_edit_date": 1569648752, "creation_date": 1569438847, "answer_id": 58105152, "question_id": 58076576, "link": "https://stackoverflow.com/questions/58076576/how-do-i-build-an-iterator-for-walking-a-file-tree-recursively/58105152#58105152", "title": "How do I build an iterator for walking a file tree recursively?", "body": "<p>This is the exact solution I sought. It's none of my achievement; see <a href=\"https://users.rust-lang.org/t/flat-map-and-chaining-iterators/32938\" rel=\"nofollow noreferrer\">here</a>. Comments are welcome.</p>\n\n<pre><code>fn traverse_flat_dst_iter(\n    src_dir: &amp;PathBuf,\n    dst_step: Vec&lt;PathBuf&gt;,\n) -&gt; impl Iterator&lt;Item = (PathBuf, PathBuf)&gt; {\n    let (dirs, files) = list_dir_groom(src_dir);\n\n    let traverse = move |d: PathBuf| -&gt; Box&lt;dyn Iterator&lt;Item = (PathBuf, PathBuf)&gt;&gt; {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        Box::new(traverse_flat_dst_iter(&amp;d, step))\n    };\n    dirs.into_iter()\n        .flat_map(traverse)\n        .chain(files.into_iter().map(|f| (f, PathBuf::new())))\n}\n</code></pre>\n\n<p>Another, more sophisticated take. One has to box things, clone parameters to be shared between lambdas, etc., to satisfy the compiler. Yet it works. Hopefully, on can get the hang of the thing.</p>\n\n<pre><code>fn traverse_dir(\n    src_dir: &amp;PathBuf,\n    dst_step: Vec&lt;PathBuf&gt;,\n) -&gt; Box&lt;dyn Iterator&lt;Item = (PathBuf, Vec&lt;PathBuf&gt;)&gt;&gt; {\n    let (dirs, files) = groom(src_dir);\n    let destination_step = dst_step.clone(); // A clone for handle.\n\n    let traverse = move |d: PathBuf| {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        traverse_dir(&amp;d, step)\n    };\n    let handle = move |f: PathBuf| (f, destination_step.clone());\n    if flag(\"r\") {\n        // Chaining backwards.\n        Box::new(\n            files\n                .into_iter()\n                .map(handle)\n                .chain(dirs.into_iter().flat_map(traverse)),\n        )\n    } else {\n        Box::new(\n            dirs.into_iter()\n                .flat_map(traverse)\n                .chain(files.into_iter().map(handle)),\n        )\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "accepted_answer_id": 58105152, "answer_count": 2, "score": 0, "last_activity_date": 1569648752, "creation_date": 1569315390, "last_edit_date": 1569416749, "question_id": 58076576, "link": "https://stackoverflow.com/questions/58076576/how-do-i-build-an-iterator-for-walking-a-file-tree-recursively", "title": "How do I build an iterator for walking a file tree recursively?", "body": "<p>I want to lazily consume the nodes of a file tree one by one while sorting the siblings on each level.</p>\n\n<p>In Python, I'd use a synchronous generator:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>def traverse_dst(src_dir, dst_root, dst_step):\n    \"\"\"\n    Recursively traverses the source directory and yields a sequence of (src, dst) pairs;\n\n    \"\"\"\n    dirs, files = list_dir_groom(src_dir) # Getting immediate offspring.\n\n    for d in dirs:\n        step = list(dst_step)\n        step.append(d.name)\n        yield from traverse_dst(d, dst_root, step)\n\n    for f in files:\n        dst_path = dst_root.joinpath(step)\n        yield f, dst_path\n</code></pre>\n\n<p>In Elixir, a (lazy) stream:</p>\n\n<pre><code>def traverse_flat_dst(src_dir, dst_root, dst_step \\\\ []) do\n  {dirs, files} = list_dir_groom(src_dir) # Getting immediate offspring.\n\n  traverse = fn d -&gt;\n    step = dst_step ++ [Path.basename(d)]\n    traverse_flat_dst(d, dst_root, step)\n  end\n\n  handle = fn f -&gt;\n    dst_path =\n      Path.join(\n        dst_root,\n        dst_step\n      )\n\n    {f, dst_path}\n  end\n\n  Stream.flat_map(dirs, traverse)\n  |&gt; Stream.concat(Stream.map(files, handle))\nend\n</code></pre>\n\n<p>One can see some language features addressing recursion: <code>yield from</code> in Python, <code>flat_map</code> in Elixir; the latter looks like a classic functional approach.</p>\n\n<p>It looks like whatever is lazy in Rust, it's always an iterator. How am I supposed to do more or less the same in Rust?</p>\n\n<p>I'd like to preserve the structure of my recursive function with <code>dirs</code> and <code>files</code> as vectors of paths (they are optionally sorted and filtered).</p>\n\n<p>Getting <code>dirs</code> and <code>files</code> is already implemented to my liking:</p>\n\n<pre><code>fn folders(dir: &amp;Path, folder: bool) -&gt; Result&lt;Vec&lt;PathBuf&gt;, io::Error&gt; {\n    Ok(fs::read_dir(dir)?\n        .into_iter()\n        .filter(|r| r.is_ok())\n        .map(|r| r.unwrap().path())\n        .filter(|r| if folder { r.is_dir() } else { !r.is_dir() })\n        .collect())\n}\n\nfn list_dir_groom(dir: &amp;Path) -&gt; (Vec&lt;PathBuf&gt;, Vec&lt;PathBuf&gt;) {\n    let mut dirs = folders(dir, true).unwrap();\n    let mut files = folders(dir, false).unwrap();\n    if flag(\"x\") {\n        dirs.sort_unstable();\n        files.sort_unstable();\n    } else {\n        sort_path_slice(&amp;mut dirs);\n        sort_path_slice(&amp;mut files);\n    }\n    if flag(\"r\") {\n        dirs.reverse();\n        files.reverse();\n    }\n    (dirs, files)\n}\n</code></pre>\n\n<p><code>Vec&lt;PathBuf</code> can be iterated as is, and there is standard <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\">flat_map</a> method. It should be possible to implement Elixir style, I just can't figure it out yet.</p>\n\n<p>This is what I already have. Really <em>working</em> (<code>traverse_flat_dst(&amp;SRC, [].to_vec());</code>), I mean:</p>\n\n<pre><code>fn traverse_flat_dst(src_dir: &amp;PathBuf, dst_step: Vec&lt;PathBuf&gt;) {\n    let (dirs, files) = list_dir_groom(src_dir);\n\n    for d in dirs.iter() {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        println!(\"d: {:?}; step: {:?}\", d, step);\n        traverse_flat_dst(d, step);\n    }\n    for f in files.iter() {\n        println!(\"f: {:?}\", f);\n    }\n}\n</code></pre>\n\n<p>What I want (<em>not</em> yet working!):</p>\n\n<pre><code>fn traverse_flat_dst_iter(src_dir: &amp;PathBuf, dst_step: Vec&lt;PathBuf&gt;) {\n    let (dirs, files) = list_dir_groom(src_dir);\n\n    let traverse = |d| {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        traverse_flat_dst_iter(d, step);\n\n    };\n    // This is something that I just wish to be true!\n    flat_map(dirs, traverse) + map(files)    \n}\n</code></pre>\n\n<p>I want this function to deliver one long flat iterator of files, in the spirit of the Elixir solution. I just can't yet cope with the necessary return types and other syntax. I really hope to be clear enough this time.</p>\n\n<p>What I managed to compile and run (meaningless, but the signature is what I actually want):</p>\n\n<pre><code>fn traverse_flat_dst_iter(\n    src_dir: &amp;PathBuf,\n    dst_step: Vec&lt;PathBuf&gt;,\n) -&gt; impl Iterator&lt;Item = (PathBuf, PathBuf)&gt; {\n    let (dirs, files) = list_dir_groom(src_dir);\n\n    let _traverse = |d: &amp;PathBuf| {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        traverse_flat_dst_iter(d, step)\n    };\n    files.into_iter().map(|f| (f, PathBuf::new()))\n}\n</code></pre>\n\n<p>What I'm still lacking:</p>\n\n<pre><code>fn traverse_flat_dst_iter(\n    src_dir: &amp;PathBuf,\n    dst_step: Vec&lt;PathBuf&gt;,\n) -&gt; impl Iterator&lt;Item = (PathBuf, PathBuf)&gt; {\n    let (dirs, files) = list_dir_groom(src_dir);\n\n    let traverse = |d: &amp;PathBuf| {\n        let mut step = dst_step.clone();\n        step.push(PathBuf::from(d.file_name().unwrap()));\n        traverse_flat_dst_iter(d, step)\n    };\n    // Here is a combination amounting to an iterator,\n    // which delivers a (PathBuf, PathBuf) tuple on each step.\n    // Flat mapping with traverse, of course (see Elixir solution).\n    // Iterator must be as long as the number of files in the tree.\n    // The lines below look very close, but every possible type is mismatched :(\n    dirs.into_iter().flat_map(traverse)\n        .chain(files.into_iter().map(|f| (f, PathBuf::new())))\n\n}\n</code></pre>\n"}, {"tags": ["rust", "embedded"], "comments": [{"owner": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1569315922, "post_id": 58075821, "comment_id": 102548095, "body": "<code>.rodata</code> means you have too many/large constants, not necessarily that the code itself is too big. But it seems that both <code>.rodata</code> and <code>.text</code> share the same segment <code>FLASH</code>, so either could be the culprit."}, {"owner": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1569316087, "post_id": 58075821, "comment_id": 102548178, "body": "(Although if 1k LoC of Rust generates 64kib code, then the obvious solution is to not use Rust...)"}, {"owner": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "reply_to_user": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1569317340, "post_id": 58075821, "comment_id": 102548938, "body": "I currently create only 5 u8 arrays with a size of 27. Though I do not know which constants are used inside the dependencies... <code>arm-none-eabi-size</code> does result to <code>text    data     bss     dec     hex</code> <code>7424     332     112    7868    1ebc</code>"}, {"owner": {"reputation": 153119, "user_id": 584518, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Lundin", "link": "https://stackoverflow.com/users/584518/lundin"}, "edited": false, "score": 0, "creation_date": 1569317502, "post_id": 58075821, "comment_id": 102549046, "body": "My knowledge of Rust is pretty non-existent, but what you should try to do is to get the linker to generate a &quot;map&quot; file. It will contain a list of where all your code and variables go in memory. From there you might be able to figure out if something stands out. Perhaps you have a ton of software floating point libs linked or something like that. STM32F103 is, iirc, a Cortex M3 so it doesn&#39;t have a FPU."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1569452613, "post_id": 58075821, "comment_id": 102605589, "body": "Why do you use a macro to generate 3 different modules of near identical code for accessing 3 different serial ports? That will generate thrice the code."}, {"owner": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "edited": false, "score": 0, "creation_date": 1569479968, "post_id": 58075821, "comment_id": 102611699, "body": "Because I am new to Rust and was unable to reproduce the wanted wrapper with generics. Also I counted the macro thrice for my LOC information."}], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "edited": false, "score": 0, "creation_date": 1569395864, "post_id": 58080477, "comment_id": 102578601, "body": "The panic behavior is set to abort. When I compile without optimization (and set the FLASH bigger so the linker does succeed) <code>cargo size</code> does output a size for <code>.text</code> of <code>0x13d2e</code>. As I only have <code>0x10000</code> this is already to big before even any <code>.debug*</code> parts start. Though without debug the size of <code>.text</code> is only <code>0x10c3e</code>. If I analyse the output of nm and the map file from the linker I do not find function calls I would not expect, though some big calls of the HAL I&#39;m using. Maybe the HAL dependency is way bigger as expected..."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "edited": false, "score": 0, "creation_date": 1569396492, "post_id": 58080477, "comment_id": 102578897, "body": "I doubt that. is there a chance you can throw your entire project somewhere so I can have a proper look? it sounds like you&#39;re doing something weird but I can&#39;t tell from just what you&#39;ve given"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 4, "last_activity_date": 1569328538, "creation_date": 1569328538, "answer_id": 58080477, "question_id": 58075821, "link": "https://stackoverflow.com/questions/58075821/rust-embedded-binary-size/58080477#58080477", "title": "Rust embedded binary size", "body": "<p>I've run into similar issues and may be able to shed some light on what you can do to reduce the size of the binary you're outputting.</p>\n\n<p>You've already discovered one of them: <code>opt-level = \"z\"</code>. The difference between <code>s</code> and <code>z</code> is the inlining constraint - essentially, the size of a function where the compiler deems it not worth inlining. <code>z</code> specifies this to be 25, <code>s</code> 75. Depending on what you are building, this may or may not be a consequent reduction in size (and it affects <code>.rodata</code> and <code>.text</code> primarily).</p>\n\n<p>Another thing you can play on is the behavior on <code>panic</code> on your code. If I remember correctly, the <code>stm32</code> target supports both <code>unwind</code> and <code>abort</code>, with <code>unwind</code> enabled on the <code>dev</code> profile. As I'm sure you can understand, unwinding the stack is a large and costly process in terms of code size. As such, setting <code>panic = \"abort\"</code> in your cargo file might reduce the binary size a bit further.</p>\n\n<p>Beyond that, it is down to manual tuning, and tools like <a href=\"https://github.com/rust-embedded/cargo-binutils\" rel=\"nofollow noreferrer\"><code>cargo-binutils</code></a> may be extremely useful for this. Depending on your use case, there may be leftover <code>Debug</code> implementations which are only sporadically needed, and that is definitely something that you could act on.</p>\n"}, {"comments": [{"owner": {"reputation": 138, "user_id": 10453819, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50f2dec01ab3125d1d7a551fad5dff80?s=128&d=identicon&r=PG&f=1", "display_name": "effect", "link": "https://stackoverflow.com/users/10453819/effect"}, "edited": false, "score": 0, "creation_date": 1583265636, "post_id": 60514070, "comment_id": 107056059, "body": "I cloned your repo, by using opt-level=&quot;z&quot; on dependencies I was able to get the binary to fit. Running &quot;cargo bloat&quot; showed that you&#39;ve got hundreds of tiny methods that are 20-100 bytes large, not sure what&#39;s generating all of those, but that seems to be the ripe place to focus for shrinking down binary size."}, {"owner": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "edited": false, "score": 0, "creation_date": 1583309182, "post_id": 60514070, "comment_id": 107068027, "body": "Thank you for your answer! This was my first project with Rust. After I was unable to solve this problem I left it as is and did non hardware projects with it. So now with more experience I am currently rewriting the hole project.  We will see if run into the same problems again. But nice tips anyway!"}], "tags": [], "owner": {"reputation": 138, "user_id": 10453819, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50f2dec01ab3125d1d7a551fad5dff80?s=128&d=identicon&r=PG&f=1", "display_name": "effect", "link": "https://stackoverflow.com/users/10453819/effect"}, "is_accepted": false, "score": 3, "last_activity_date": 1583262741, "creation_date": 1583262741, "answer_id": 60514070, "question_id": 58075821, "link": "https://stackoverflow.com/questions/58075821/rust-embedded-binary-size/60514070#60514070", "title": "Rust embedded binary size", "body": "<p>A few other general tips for shrinking the binary:</p>\n\n<p>First, the <a href=\"https://crates.io/crates/cargo-bloat\" rel=\"nofollow noreferrer\">cargo-bloat</a> utility is useful for determining what is taking up space in your binary, then you can make informed decisions about how to modify your code to shrink it down.</p>\n\n<p>Second, I've had significant success by configuring the compiler to <a href=\"https://rust-embedded.github.io/book/unsorted/speed-vs-size.html#optimizing-dependencies\" rel=\"nofollow noreferrer\">optimize all dependencies</a>, but leave the top level crate unoptimized for easier debugging. You can do this by adding the following to your Cargo.toml:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># Optimize all dependencies\n[profile.dev.package.\"*\"]\nopt-level = \"z\"\n</code></pre>\n\n<p>If you want to debug a specific dependency (for example: cortex-m-rt), you can make it unoptimized like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># Don't optimize the `cortex-m-rt` crate\n[profile.dev.package.cortex-m-rt]\nopt-level = 0\n\n# Optimize all the other dependencies\n[profile.dev.package.\"*\"]\nopt-level = \"z\"\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 4751787, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19752fbceb4b1b2488c9ba08ebf2a14c?s=128&d=identicon&r=PG&f=1", "display_name": "l4z6_z", "link": "https://stackoverflow.com/users/4751787/l4z6-z"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1816, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1583262741, "creation_date": 1569312649, "last_edit_date": 1569399650, "question_id": 58075821, "link": "https://stackoverflow.com/questions/58075821/rust-embedded-binary-size", "title": "Rust embedded binary size", "body": "<p>I'm new to Rust and after many fights with the compiler and borrow-checker I am finally nearly finished with my first project. But now I have the problem that the binary gets to big to fit into the flash of the microcontroller.</p>\n\n<p>I'm using an STM32F103C8 with 64K flash on a BluePill.\nAt first I was able to fit the code on the mc and bit by bit I had to enable optimization and such. Now I compile with:</p>\n\n<pre><code>[profile.dev]\ncodegen-units = 1\ndebug = 0\nlto = true\nopt-level = \"z\"\n</code></pre>\n\n<p>and am able to fit the binary. <code>opt-level = \"s\"</code> does generate a to big binary. The error I am getting then is: <code>rust-lld: error: section '.rodata' will not fit in region 'FLASH': overflowed by 606 bytes</code></p>\n\n<p>As I have under 1000 lines of code and as I would say not so unusual dependencies this seems strange.</p>\n\n<p>There are a few sites like <a href=\"https://github.com/johnthagen/min-sized-rust\" rel=\"nofollow noreferrer\">this</a> with ways to minimize the binary. As these are not for embedded most of the ways to minimize are followed anyway.</p>\n\n<p>How am I able to minimize the binary size and am still able to debug it?</p>\n\n<p>My dependencies are:</p>\n\n<pre><code>[dependencies]\ncortex-m = \"*\"\npanic-halt = \"*\"\nembedded-hal = \"*\"\n\n[dependencies.cortex-m-rtfm]\nversion = \"0.4.3\"\nfeatures = [\"timer-queue\"]\n\n[dependencies.stm32f1]\nversion = \"*\"\nfeatures = [\"stm32f103\", \"rt\"]\n\n[dependencies.stm32f1xx-hal]\nversion = \"0.4.0\"\nfeatures = [\"stm32f103\", \"rt\"]\n</code></pre>\n\n<p>Maybe there is a problem as I noticed that <code>cargo build</code> does compile some sub dependencies multiple times in different versions.</p>\n\n<p>Inside the <code>memory.x</code> file:</p>\n\n<pre><code>MEMORY\n{\n  FLASH : ORIGIN = 0x08000000, LENGTH = 64K\n  RAM : ORIGIN = 0x20000000, LENGTH = 20K\n}\n</code></pre>\n\n<p>Rustc version <code>rustc 1.37.0 (eae3437df 2019-08-13)</code></p>\n\n<p><em>edit</em></p>\n\n<p>The rust panic behavior is abort.</p>\n\n<p>The code is view able under: <a href=\"https://github.com/DarkPhoeniz/rc-switcher-rust\" rel=\"nofollow noreferrer\">https://github.com/DarkPhoeniz/rc-switcher-rust</a></p>\n"}, {"tags": ["multithreading", "concurrency", "rust"], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 3746783, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc3deb4f461ba7c20fdb2bd50012598b?s=128&d=identicon&r=PG", "display_name": "suganology", "link": "https://stackoverflow.com/users/3746783/suganology"}, "edited": false, "score": 0, "creation_date": 1569306576, "post_id": 58073752, "comment_id": 102543576, "body": "It worked! thanks ;)"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 2, "last_activity_date": 1569325229, "last_edit_date": 1592644375, "creation_date": 1569303886, "answer_id": 58073752, "question_id": 58073197, "link": "https://stackoverflow.com/questions/58073197/why-does-multithreaded-execution-not-work-when-the-subroutine-is-expensive/58073752#58073752", "title": "Why does multithreaded execution not work when the subroutine is expensive?", "body": "<p>The first example is incomplete without actually spawning threads, so not sure what happened there.</p>\n<p>The key point here is that <code>join</code> is blocking, meaning it won't return until the underlying thread is completed. From <a href=\"https://doc.rust-lang.org/stable/std/thread/struct.JoinHandle.html#method.join\" rel=\"nofollow noreferrer\">the documentation</a>:</p>\n<blockquote>\n<p><code>pub fn join(self) -&gt; Result&lt;T&gt;</code></p>\n<p>Waits for the associated thread to finish.</p>\n<p>In terms of atomic memory orderings, the completion of the associated thread synchronizes with this function returning. In other words, all operations performed by that thread are ordered before all operations that happen after join returns.</p>\n</blockquote>\n<p>With this new knowledge, it is clear that what your code actually did was: create a new thread, wait for it to its completion, and then create the next one. So it is still sequntial and clearly not what you intended.</p>\n<p>The solution is straightforward: create all the threads first, then wait them to finish as showed below:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::thread;\n\nfn main() {\n    let handles = (0..100)\n        .into_iter()\n        .map(|x| {\n            thread::spawn(move || {\n                ping(x);\n            })\n        })\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    for thread in handles {\n        thread.join().unwrap();\n    }\n}\n\nfn ping(x: i32) {\n    // Do things.\n}\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 3746783, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc3deb4f461ba7c20fdb2bd50012598b?s=128&d=identicon&r=PG", "display_name": "suganology", "link": "https://stackoverflow.com/users/3746783/suganology"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "closed_date": 1569333331, "answer_count": 1, "score": 0, "last_activity_date": 1569333326, "creation_date": 1569300036, "last_edit_date": 1569333326, "question_id": 58073197, "link": "https://stackoverflow.com/questions/58073197/why-does-multithreaded-execution-not-work-when-the-subroutine-is-expensive", "closed_reason": "Duplicate", "title": "Why does multithreaded execution not work when the subroutine is expensive?", "body": "<p>This program randomly prints the index number such as 1, 4, 2, 3, 100 ....</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    for x in 0..100 {\n        print!(\"{}: {:?} \", x, child.join());\n    }\n}\n</code></pre>\n\n<p>However, once I add the <code>ping()</code> function, which does something other than console output, it no longer executes concurrently, instead just iterating the <code>ping()</code> function.</p>\n\n<pre><code>extern crate serde;\nextern crate serde_derive;\nextern crate reqwest;\n\nuse reqwest::Client;\nuse std::thread;\nuse std::process::Command;\n\nfn main() {\n    for x in 0..100 {\n        let child = thread::spawn(move || {\n            ping(x);\n        });\n        print!(\"{}: {:?} \", x, child.join());\n    }\n}\n\nfn ping(x: i32) {\n    let output = if cfg!(target_os = \"windows\") {\n                    Command::new(\"cmd\")\n                        .args(&amp;[\"/C\", \"echo hello\"])\n                        .output()\n                        .expect(\"failed to execute process\")\n                 } else {\n                     Command::new(\"sh\")\n                         .arg(\"-c\")\n                         .arg(\"https://keisugano.blogspot.com/\")\n                         .output()\n                         .expect(\"failed to execute process\")\n                 };\n    println!(\"{:?}\", output);\n}\n</code></pre>\n\n<p>What is the root cause of this and how do I fix it?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1569309844, "post_id": 58073069, "comment_id": 102545042, "body": "I don&#39;t understand what is your real issue. Since you borrowed <code>s1</code> into <code>s2</code>, use <code>s2</code> to print the value just as you did."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1569312045, "post_id": 58073069, "comment_id": 102546103, "body": "Swap the last two lines around. That way you won&#39;t borrow a value that is already mutably borrowed."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1569361657, "post_id": 58073069, "comment_id": 102570393, "body": "although not recommended or is a good solution (unless you know what you are upto), using <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7aae2ab45a7856478c62dac04bc8fad5\" rel=\"nofollow noreferrer\">unsafe</a> is one way of  working around, if you really want to maintain the order of the statements as is."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569331910, "post_id": 58076341, "comment_id": 102557283, "body": "Your explanation does not really explain why when you remove either the <code>print!</code> or the <code>println!</code> the example compiles. It is not forbidden to take an immutable borrow of a mutable value; only to take an immutable borrow of a value <i>that is also mutably borrowed</i> -- <code>s1</code> is not already borrowed at the point where <code>s2</code> is initialized. The problem comes later when you try to borrow <code>s1</code> a second time before <code>s2</code>&#39;s lifetime ends."}, {"owner": {"reputation": 56, "user_id": 6320503, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/36vIv.jpg?s=128&g=1", "display_name": "mrzenioszeniou", "link": "https://stackoverflow.com/users/6320503/mrzenioszeniou"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569425735, "post_id": 58076341, "comment_id": 102595513, "body": "Right you are @trentcl. I&#39;ve updated my answer to try and explain this."}, {"owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "edited": false, "score": 0, "creation_date": 1573041379, "post_id": 58076341, "comment_id": 103749907, "body": "+100 I want to upvote this explanation more than once.  This would be a great example to have in the Rust book."}, {"owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "edited": false, "score": 0, "creation_date": 1573088188, "post_id": 58076341, "comment_id": 103770845, "body": "Why does the error message say, &quot;immutable borrow occurs here&quot; on line 5 of the error message?  What is trying to borrow s1 immutably?  println!()?"}], "tags": [], "owner": {"reputation": 56, "user_id": 6320503, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/36vIv.jpg?s=128&g=1", "display_name": "mrzenioszeniou", "link": "https://stackoverflow.com/users/6320503/mrzenioszeniou"}, "is_accepted": true, "score": 4, "last_activity_date": 1569424943, "last_edit_date": 1569424943, "creation_date": 1569314612, "answer_id": 58076341, "question_id": 58073069, "link": "https://stackoverflow.com/questions/58073069/how-to-print-out-a-value-after-a-mutable-borrow/58076341#58076341", "title": "How to print out a value after a mutable borrow?", "body": "<p>Rust's references do not work like they would in other languages like C/C++/Java. The Rust compiler ensures memory safety at compilation time, and it does so through the use of the \"borrow checker\". The borrow checker adheres to a set of rules, and the code you posted violates one of them.</p>\n\n<p>Here's a direct <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">quote</a> from the Rust book that addresses this <strong>exact</strong> situation:</p>\n\n<blockquote>\n  <ul>\n  <li>At any given time, you can have either one mutable reference or any number of immutable references.</li>\n  </ul>\n</blockquote>\n\n<p>First you create a mutable variable <code>s1</code>, and borrow it as an immutable via <code>s2</code>. This is fine, so long as you're not using both of them <strong>simultaneously</strong>. The problem doesn't occur here, because you haven't really done anything with the references yet. The problem occurs when you force these two references to be active at the same time. This happens when you access <code>s1</code> before <code>s2</code> goes out of scope(that would be after it's last use). Take a look at this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  let mut s1 = String::from(\"hello\"); // -- Start of s1 scope --\n  let s2 = &amp;mut s1;                       // -- Start of s2 scope --\n  s2.truncate(2);                         // s1 may not be used here as\n                                          // that breaks the rules\n  print!(\"{}\", s1);                   // -- End of s1 scope --\n  println!(\"{}\", s2);                     // -- End of s2 scope --\n</code></pre>\n\n<p>As you can see, due to the way your code is structured, the scopes of <code>s1</code> and <code>s2</code> must be active at the same time. If you were to swap the last two lines of code, changing your code into this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  let mut s1 = String::from(\"hello\"); // -- Start of s1 scope --\n  let s2 = &amp;mut s1;                       // -- Start of s2 scope --\n  s2.truncate(2);                         // s1 may not be used here as\n                                          // that breaks the rules\n  println!(\"{}\", s2);                     // -- End of s2 scope --\n  print!(\"{}\", s1);                   // -- End of s1 scope --\n</code></pre>\n\n<p>Then your code would compile and run as expected. The reason is that while <code>s2</code>'s scope is active, you're not using <code>s1</code> at all. In other words, these things happen at every line of the above code:</p>\n\n<ol>\n<li><code>s1</code> owns newly the created <code>String</code></li>\n<li><code>s2</code> mutably borrows the <code>String</code></li>\n<li><code>s2</code> is used to truncate the <code>String</code></li>\n<li><code>s2</code> is used to print the <code>String</code>. Since this is the last use of <code>s2</code>, after this line ownership of the <code>String</code> goes back to <code>s1</code>.</li>\n<li><code>s1</code> is used to print the <code>String</code>.</li>\n</ol>\n\n<p>I hope this clarifies the situation for you.</p>\n\n<p>I'd suggest that you take the time to look at the Rust book's \"Understanding Ownership\" chapter <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">here</a>. My advice would be to go through the whole book starting from the beginning. It will give you a very good understanding of Rust as a language and its ecosystem.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569427527, "post_id": 58102087, "comment_id": 102596413, "body": "This works without the <code>{}</code> to force a new scope, although in older versions of Rust the <code>{}</code> was necessary (see <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">&quot;non-lexical lifetimes&quot;</a>). The difference between this code and the code in the question is the second use of <code>s2</code>."}], "tags": [], "owner": {"reputation": 13, "user_id": 12089455, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mC321j9g7NM5A9XPrQayiwy6DNc_1wVwOQlcLvh=k-s128", "display_name": "Gu Xianyu", "link": "https://stackoverflow.com/users/12089455/gu-xianyu"}, "is_accepted": false, "score": 0, "last_activity_date": 1569426016, "creation_date": 1569426016, "answer_id": 58102087, "question_id": 58073069, "link": "https://stackoverflow.com/questions/58073069/how-to-print-out-a-value-after-a-mutable-borrow/58102087#58102087", "title": "How to print out a value after a mutable borrow?", "body": "<p>(I am the one who asked the question.)I love @mrzenioszeniou 's answer and I am impressed by <strong>immutable reference and mutable reference cannot be active at the same time</strong>. I also tried this code:</p>\n\n<pre><code>   let mut s1 = String::from(\"hello\");\n    {\n        let s2 = &amp;mut s1;\n        s2.truncate(2);\n    } //--End of s2 scope\n   println!(\"{}\", s1);\n</code></pre>\n\n<p>Here I bring <code>s2</code> as <code>&amp;mut s1</code> to a new child-scope, when scope ends, it won't affect s1's immutable borrow.</p>\n"}], "owner": {"reputation": 13, "user_id": 12089455, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mC321j9g7NM5A9XPrQayiwy6DNc_1wVwOQlcLvh=k-s128", "display_name": "Gu Xianyu", "link": "https://stackoverflow.com/users/12089455/gu-xianyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 0, "accepted_answer_id": 58076341, "answer_count": 2, "score": 1, "last_activity_date": 1569426016, "creation_date": 1569298978, "last_edit_date": 1569332790, "question_id": 58073069, "link": "https://stackoverflow.com/questions/58073069/how-to-print-out-a-value-after-a-mutable-borrow", "title": "How to print out a value after a mutable borrow?", "body": "<p>I construct a string, then borrow it to do some changes. I then want to see how the string is changed, but I cannot print out the value: </p>\n\n<pre><code>let mut s1 = String::from(\"hello\");\nlet s2 = &amp;mut s1;\ns2.truncate(2);\nprint!(\"{}\", s1);\nprintln!(\"{}\", s2);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `s1` as immutable because it is also borrowed as mutable\n --&gt; src/lib.rs:5:18\n  |\n3 |     let s2 = &amp;mut s1;\n  |              ------- mutable borrow occurs here\n4 |     s2.truncate(2);\n5 |     print!(\"{}\", s1);\n  |                  ^^ immutable borrow occurs here\n6 |     println!(\"{}\", s2);\n  |                    -- mutable borrow later used here\n</code></pre>\n\n<p>I thought borrowing in Rust is similar to C++ so that when <code>s1</code> is changed <code>s2</code> will be changed correspondingly.</p>\n"}, {"tags": ["rust", "numbers", "strong-typing"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569279535, "post_id": 58071019, "comment_id": 102537737, "body": "Not in the core, no. You&#39;re going to need to build an <code>enum</code> or <code>struct</code> or two on top of the basic types. You might also want to consider how you would &quot;throw exceptions&quot; in a language that doesn&#39;t have them as a core feature (some crates emulate them with macros), also ;-)"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569282190, "post_id": 58071019, "comment_id": 102538257, "body": "@S&#233;bastienRenauld Same way the rest of Rust does on overflow/underflow. It panics in debug mode, and is not checked in production."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569282691, "post_id": 58071019, "comment_id": 102538354, "body": "Panicking by default and without an alternative is probably a bit too strict, in my own opinion. Of course, I don&#39;t know your use case, but surely there&#39;s more than one occasion where returning a <code>Result</code> as opposed to panicking would be preferable (and would therefore be easy to implement with a <code>TryFrom</code> implementation)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1569285742, "post_id": 58071019, "comment_id": 102538917, "body": "The <a href=\"https://crates.io/crates/ux\" rel=\"nofollow noreferrer\">ux crate</a> might be of interest. It only has sizes limited to powers of 2, but you get types like <code>u3</code> and <code>i42</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1569295581, "post_id": 58071019, "comment_id": 102540550, "body": "If you can use unstable features, you can implement your own ranged integer type using const generics. The ergonomics won&#39;t be as nice as native support for ranged types, but you should get some of the benefits you are looking for. (In many cases a custom type for a specific use case is probably your best option.)"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1569301706, "post_id": 58071019, "comment_id": 102541841, "body": "If <code>rust</code> can have <a href=\"https://en.wikipedia.org/wiki/Dependent_type\" rel=\"nofollow noreferrer\">dependent type</a>, that&#39;ll be rad."}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "closed_date": 1569330851, "answer_count": 0, "score": 3, "last_activity_date": 1569311712, "creation_date": 1569278561, "last_edit_date": 1569282215, "question_id": 58071019, "link": "https://stackoverflow.com/questions/58071019/can-integers-be-strongly-typed-to-specific-ranges", "closed_reason": "Duplicate", "title": "Can integers be strongly typed to specific ranges?", "body": "<p>Can Rust strongly type integers to defined ranges? </p>\n\n<p>For example, I'd like to define a type to represent months, which can be [1 .. 12], inclusive. Range checking would panic if this variable goes beyond this range.</p>\n"}, {"tags": ["vector", "lambda", "rust", "closures"], "answers": [{"comments": [{"owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569278810, "post_id": 58070952, "comment_id": 102537568, "body": "If I understand correctly, <code>Box</code> will allocate each lambda on the heap, so here we have the vector allocated on the heap, and each element also allocated on the heap, in contrast to C++ where the lambdas are not heap-allocated (just the vector itself). Is that it?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569279248, "post_id": 58070952, "comment_id": 102537669, "body": "It&#39;s a bit more complicated than this. The <code>Vec</code> itself is on the stack; its internal pointer to the content is on the heap; and the lambdas themselves are on the heap (they&#39;re elements of the <code>Vec</code>, after all)."}, {"owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569279602, "post_id": 58070952, "comment_id": 102537751, "body": "Yes, I understand this. What I mean is that the C++ version seems more efficient, because it only does 1 allocation: the vector content. The Rust version actually allocs a vector of <b>pointers</b>,then it allocs each lambda in the heap <b>again</b>, storing the pointers in the vector. That&#39;s how I see it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569279855, "post_id": 58070952, "comment_id": 102537808, "body": "I&#39;m pretty sure you&#39;re wrong about <code>std::function</code> being stored on the stack. Beyond small object optimization, they&#39;re on the heap as well, AFAIK. That said, eyeballing a function isn&#39;t a good way to benchmark performance, either, as there&#39;s two layers of optimizations happening below the hood for both C++ and rust."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569281029, "post_id": 58070952, "comment_id": 102538060, "body": "@Rodrigo I&#39;ve run a quick <code>valgrind</code> benchmark to get to the bottom of this. Rust allocates less than C++ on the heap, and your lambdas also go on the heap in C++. Editing the answer with the full details"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1569296233, "post_id": 58070952, "comment_id": 102540657, "body": "&quot;but you will need to box them&quot; \u2013 this is not true in general. If the closures don&#39;t capture any local variables, they can be coerced to function pointers, and you can store them in a vector directly: <code>let v: Vec&lt;fn(i32) -&gt; i32&gt; = vec![|n| n + 1, |n| n - 1];</code>."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 5, "last_activity_date": 1569331714, "last_edit_date": 1569331714, "creation_date": 1569278002, "answer_id": 58070952, "question_id": 58070894, "link": "https://stackoverflow.com/questions/58070894/what-is-the-rust-equivalent-of-storing-c-stdfunction-in-a-vector/58070952#58070952", "title": "What is the Rust equivalent of storing C++ std::function in a vector?", "body": "<p>If you do not plan on moving the function anywhere in particular, you can let type inference do the work for you within a code block and quite literally define your closure like it is a normal variable (in practice, it is - it implements either <code>Fn</code> or <code>FnMut</code>):</p>\n\n<pre><code>let my_lambda = |n| n+1;\nprintln!(\"{}\", my_lambda(33));\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a5f0a64227f845c57597df40a9f11ee7\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>If you intend to move this lambda out of the stack, you will need to box it:</p>\n\n<pre><code>let my_lambda: Box&lt;dyn Fn(u32) -&gt; u32&gt; = Box::new(|n| n + 1);\nprintln!(\"{}\", my_lambda(33));\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c3d8c94fcc774518cc78734cebf17985\" rel=\"nofollow noreferrer\">Playground</a> </p>\n\n<p>The principle here remains the same, the only real difference is that the lambda is now on the heap.</p>\n\n<p>Storing them in a <code>Vec</code> then becomes relatively straightforward, as by now we've proven that they're \"normal\" types. Nothing prevents you from creating a vector of closures, but you will need to box them (<code>Vec</code> requires each element to be <code>Sized</code>, and there is no way to target two different closures by signature) and they will need to have the same signature:</p>\n\n<pre><code>let my_vector: Vec&lt;Box&lt;dyn Fn(u16) -&gt; u16&gt;&gt; = vec![\n    Box::new(|i| i + 1),\n    Box::new(|i| i - 1),\n];\nprintln!(\"{}\", my_vector[0](33))\n</code></pre>\n\n<p>If they have disparate signatures, you will need to write your own structure to contain them and bucket them by signature, and it is not a simple task.</p>\n\n<hr>\n\n<p>The benchmark case:</p>\n\n<ul>\n<li><p>C++:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;functional&gt;\nint main(int argc, char **argv) {\n  std::vector&lt;std::function&lt;int(int)&gt;&gt; funcs;\n  for (int i = 0; i &lt; 10000000; i++) {\n    funcs.push_back([&amp;] (int n) { return n + 1; });\n    int result = funcs[i](33);\n  }\n}\n</code></pre></li>\n<li><p>Rust:</p>\n\n<pre><code>fn main() {\n   let mut lambdas:Vec&lt;Box&lt;Fn(u32) -&gt; u32&gt;&gt; = vec![];\n   for i in 0..10000000 {\n     lambdas.push(Box::new(|i| i+1));\n     lambdas[i](3);\n   }\n}\n</code></pre></li>\n</ul>\n\n<p>Compilation options:</p>\n\n<ul>\n<li>G++: <code>-O3 --std=c++0x</code></li>\n<li>Cargo: <code>--release</code></li>\n</ul>\n\n<p>The results:</p>\n\n<ul>\n<li><p>C++ peak heap size:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>--------------------------------------------------------------------------------\n  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)\n--------------------------------------------------------------------------------\n 68    383,911,899      268,512,208      268,508,160         4,048            0\n 69    555,878,425      805,387,160      805,379,072         8,088            0\n 70    765,593,697      805,387,160      805,379,072         8,088            0\n</code></pre></li>\n<li><p>Rust peak heap size:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>--------------------------------------------------------------------------------\n  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)\n--------------------------------------------------------------------------------\n 46    210,486,321      268,440,920      268,436,765         4,155            0\n 47    210,486,371      268,440,976      268,436,805         4,171            0\n 48    210,486,496      268,441,064      268,436,885         4,179            0\n</code></pre></li>\n</ul>\n\n<p>The conclusions:</p>\n\n<ul>\n<li>C++ <code>std::function</code> wrappers are heap-allocated. The raw lambda itself that it contains is stack-allocated, and this behavior is consistent with Rust</li>\n<li>Rust is better at memory optimization, consuming a third of the heap size of C++</li>\n<li>Rust is also faster in terms of raw time</li>\n</ul>\n"}], "owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 0, "accepted_answer_id": 58070952, "answer_count": 1, "score": 2, "last_activity_date": 1569331714, "creation_date": 1569277576, "last_edit_date": 1569331563, "question_id": 58070894, "link": "https://stackoverflow.com/questions/58070894/what-is-the-rust-equivalent-of-storing-c-stdfunction-in-a-vector", "title": "What is the Rust equivalent of storing C++ std::function in a vector?", "body": "<p>This is the C++ equivalent of what I'm trying to achieve:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>std::vector&lt;std::function&lt;int(int)&gt;&gt; funcs;\nfuncs.emplace_back([](int n) -&gt; int { return n + 1; });\nint result = funcs[0](33);\n</code></pre>\n\n<p>How can I write the code above in Rust?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1569254963, "creation_date": 1569254963, "answer_id": 58066305, "question_id": 58066201, "link": "https://stackoverflow.com/questions/58066201/how-to-handle-potentially-missing-fields-using-serde-json-and-the-value-enum/58066305#58066305", "title": "How to handle potentially missing fields using serde_json and the Value enum?", "body": "<p>Accessing a missing field by the <code>Index</code> implementation of <code>Value</code> (i.e. <code>v[\"stuff\"]</code>) will panic if the field does not exist. Instead, use <a href=\"https://docs.serde.rs/serde_json/value/enum.Value.html#method.get\" rel=\"noreferrer\"><code>Value::get</code></a>, which returns an <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"noreferrer\"><code>Option</code></a>:</p>\n\n<pre><code>if let Some(field) = v.get(\"stuff\") {\n    println!(\"field = {:?}\", field);\n} else {\n    println!(\"field is missing\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1569256579, "last_edit_date": 1569256579, "creation_date": 1569255487, "answer_id": 58066427, "question_id": 58066201, "link": "https://stackoverflow.com/questions/58066201/how-to-handle-potentially-missing-fields-using-serde-json-and-the-value-enum/58066427#58066427", "title": "How to handle potentially missing fields using serde_json and the Value enum?", "body": "<blockquote>\n  <p>My solution is to use [<code>serde_json::Value</code>]</p>\n</blockquote>\n\n<p>I'd still use type-driven serialization, wrapping the potentially-missing field in an <code>Option</code>. </p>\n\n<pre><code>use serde::Deserialize; // 1.0.101\nuse serde_json; // 1.0.40\n\n#[derive(Debug, Deserialize)]\nstruct Data {\n    required: i32,\n    missing: Option&lt;String&gt;,\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let data = r#\"{\"required\": 42, \"extra\": true}\"#;\n    let data = serde_json::from_str::&lt;Data&gt;(data)?;\n    println!(\"{:?}\", data);\n\n    let data = r#\"{\"required\": 42, \"extra\": true, \"missing\": \"cow\"}\"#;\n    let data = serde_json::from_str::&lt;Data&gt;(data)?;\n    println!(\"{:?}\", data);\n\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Data { required: 42, missing: None }\nData { required: 42, missing: Some(\"cow\") }\n</code></pre>\n\n<p>If you have fields where the name cannot be known at compile time, you can use <code>serde_json::Value</code> in addition to this solution. See <a href=\"https://stackoverflow.com/q/51002462/155423\">How can I use Serde&#39;s custom (de)serialization to update a subset of arbitrary input?</a></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44301748/155423\">How can I deserialize an optional field with custom functions using Serde?</a></li>\n</ul>\n"}], "owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3163, "favorite_count": 0, "accepted_answer_id": 58066305, "answer_count": 2, "score": 2, "last_activity_date": 1569256579, "creation_date": 1569254507, "last_edit_date": 1569255177, "question_id": 58066201, "link": "https://stackoverflow.com/questions/58066201/how-to-handle-potentially-missing-fields-using-serde-json-and-the-value-enum", "title": "How to handle potentially missing fields using serde_json and the Value enum?", "body": "<p>I have a data stream of JSON where some JSON objects may be missing certain fields or have fields I am unaware of in advance.</p>\n\n<p>My solution is to use: </p>\n\n<pre><code>let v: Value = serde_json::from_str(data)?;\n</code></pre>\n\n<p>How do I handle accessing the field <code>stuff</code>? If I know it exists, I can use:</p>\n\n<pre><code>v[\"stuff\"]\n</code></pre>\n\n<p>How do I handle the case <code>stuff</code> isn't a field in my data?</p>\n"}, {"tags": ["parsing", "compilation", "rust", "tokenize", "lexical-analysis"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1569252713, "last_edit_date": 1569252713, "creation_date": 1569252434, "answer_id": 58065668, "question_id": 58065507, "link": "https://stackoverflow.com/questions/58065507/how-does-the-rust-compiler-tokenize-vs-in-generics/58065668#58065668", "title": "How does the Rust compiler tokenize &#39;&gt;&#39; vs &#39;&gt;&gt;&#39; in generics?", "body": "<p>There's actually an issue describing some of this in quite a lot of detail: <a href=\"https://github.com/rust-lang/rustc-guide/issues/13\" rel=\"nofollow noreferrer\">#13: \"The parser\"</a></p>\n\n<p>The reality is that the Rust token pipeline (tokenizer + lexer) is a relatively simple recursive descent parser with lookahead (which explains a ton of syntactic errors you get when you write incorrect code, by the way. For instance, forget to close a bracket and the parser will get stuck in that block, complaining about the limits of the block). Each token is ingested, state is kept between tokens, and an additional token is peeked at for lookahead purposes.</p>\n\n<p>When Rust encounters something it should open a separate state for (such as your example), this is kept in the state to be able to deal with precisely this. As the language is pretty neatly conceived, there are no real ambiguities outside of references and reference calls (things like <code>*variable.call()</code> - do you mean <code>(*variable).call()</code> or <code>*(variable.call())</code>? Rust makes you specify this explicitly).</p>\n\n<p>When it comes to type definitions like what you've described, there is no ambiguity as the shift operator cannot be in that space by definition. The same goes for the turbofish operator - the <code>::</code> precedent indicates that a type is going to be next.</p>\n\n<p>So, the answer is \"something else\" - strict lexer rules and a stateful parser.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569252854, "post_id": 58065701, "comment_id": 102527778, "body": "<i>That notation exists for this only purpose to not create an ambiguity</i> \u2014 there&#39;s talk of removing turbofish; how does that change your answer?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1569252856, "post_id": 58065701, "comment_id": 102527780, "body": "This doesn&#39;t really answer the question. Many traditional parsers have a tokenization step that is completely independent from the semantic of the language and wouldn&#39;t know whether it&#39;s parsing a type or an expression to yield the right tokens. That seems to be the kind of tokenizer-parser pipeline that the OP is talking about."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569253029, "post_id": 58065701, "comment_id": 102527866, "body": "@mcarton Is there really any programming language where the lexer is totally independent of the parser? A bit of context is often necessary."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569253044, "post_id": 58065701, "comment_id": 102527878, "body": "@Shepmaster really? While I&#39;ve certainly seen people complain about the syntax of the turbofish, I&#39;ve never seen a serious proposal to remove it yet. I don&#39;t see how it could be done without causing many of the headaches that it prevents."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569253242, "post_id": 58065701, "comment_id": 102527969, "body": "@FrenchBoiethios probably not many modern languages are pure this any more no. But it&#39;s still a common approach in courses, and lexing and parsing isn&#39;t limited to programming languages."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569254262, "post_id": 58065701, "comment_id": 102528484, "body": "@mcarton <a href=\"https://github.com/rust-lang/rfcs/pull/2527\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/2527</a>. I believe there was some work put into a crater run even, but I&#39;m not finding that now."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569260537, "post_id": 58065701, "comment_id": 102531102, "body": "@Shepmaster: I think that pull request ended with the now famous <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/bastion-of-the-turbofish.rs\" rel=\"nofollow noreferrer\">Lament of the Turbofish</a>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1569253368, "last_edit_date": 1569253368, "creation_date": 1569252519, "answer_id": 58065701, "question_id": 58065507, "link": "https://stackoverflow.com/questions/58065507/how-does-the-rust-compiler-tokenize-vs-in-generics/58065701#58065701", "title": "How does the Rust compiler tokenize &#39;&gt;&#39; vs &#39;&gt;&gt;&#39; in generics?", "body": "<p>The lexer is not independent from the parser, so it has a bit of context. Furthermore, about your precise question, the Rust types can only be found in precise places:</p>\n\n<ul>\n<li><p>In the function signatures: obviously, there cannot be any confusion with the operators.</p></li>\n<li><p>After the <code>:</code> sigil: there again cannot be any ambiguity since the colon indicates that a type will be written:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x: Vec&lt;_&gt; = some_iterator.collect();\n</code></pre></li>\n<li><p>In the turbofish operator:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = some_iterator.collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>That notation exists for this only purpose to not create an ambiguity.</p></li>\n<li><p>In the trait dependent types:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl trait Foo for Bar {\n    type Dependent = Vec&lt;u8&gt;;\n}\n</code></pre>\n\n<p>The <code>type</code> keyword clearly indicate that there will be a type.</p></li>\n</ul>\n\n<p>As you can see, the Rust team has carefully designed the syntax so that no ambiguity can exist in the grammar.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1569261955, "last_edit_date": 1569261955, "creation_date": 1569253473, "answer_id": 58065935, "question_id": 58065507, "link": "https://stackoverflow.com/questions/58065507/how-does-the-rust-compiler-tokenize-vs-in-generics/58065935#58065935", "title": "How does the Rust compiler tokenize &#39;&gt;&#39; vs &#39;&gt;&gt;&#39; in generics?", "body": "<p>You can look at Rust parsing libraries to see how they handle it.</p>\n\n<h1>Library comparisons</h1>\n\n<h2>Fuzzy-Pickles</h2>\n\n<p>This is a parser that I've written, so I'm most familiar with the concepts.</p>\n\n<p>The tokenizer is a simple byte-by-byte parser which greedily <a href=\"https://github.com/shepmaster/fuzzy-pickles/blob/4e50f699c57cb9c29ebb8335cd44ac84a5c2bc19/src/tokenizer.rs#L461\" rel=\"nofollow noreferrer\">consumes the characters <code>&gt;&gt;</code> to create a <code>DoubleRightAngle</code></a> token. </p>\n\n<p>Once tokenization is done, all of these tokens are collected into a vector and a second parsing pass takes place. During this pass, the parsing location is a complicated index that <a href=\"https://github.com/shepmaster/fuzzy-pickles/blob/4e50f699c57cb9c29ebb8335cd44ac84a5c2bc19/src/parser/mod.rs#L539-L544\" rel=\"nofollow noreferrer\">allows being \"split\"</a>. This allows the parser to decompose a <code>&gt;&gt;</code> into two <code>&gt;</code> if needed. The specific parsing functions look for a <code>&gt;&gt;</code> or two recursive <code>&gt;</code> depending on what is being parsed.</p>\n\n<p>Both the tokenization and parsing are implemented using the <a href=\"https://github.com/shepmaster/peresil\" rel=\"nofollow noreferrer\">peresil</a> crate.</p>\n\n<h2>Syn</h2>\n\n<p>Syn is another parsing library. Here, they use a related idea: each token is <a href=\"https://github.com/dtolnay/syn/blob/6183fb539a1f55a153b01d23a23217188fc829d2/src/token.rs#L349-L351\" rel=\"nofollow noreferrer\">composed of multiple spans</a>, one for each character. That is, the <a href=\"https://docs.rs/syn/1.0.5/syn/token/struct.Shr.html\" rel=\"nofollow noreferrer\"><code>Shr</code></a> struct has a <code>spans: [Span; 2]</code> field. </p>\n\n<h2>Rustc</h2>\n\n<p>It appears that the compiler allows <a href=\"https://github.com/rust-lang/rust/blob/66bf391c3aabfc77f5f7139fc9e6944f995d574e/src/libsyntax/parse/token.rs#L565-L570\" rel=\"nofollow noreferrer\">\"gluing\" multiple tokens into a bigger one</a>. During parsing, <a href=\"https://github.com/rust-lang/rust/blob/66bf391c3aabfc77f5f7139fc9e6944f995d574e/src/libsyntax/parse/parser.rs#L701-L737\" rel=\"nofollow noreferrer\"><code>&gt;&gt;</code> can be \"consumed\" and replaced with a <code>&gt;</code></a>:</p>\n\n<pre><code>token::BinOp(token::Shr) =&gt; {\n    let span = self.token.span.with_lo(self.token.span.lo() + BytePos(1));\n    Some(self.bump_with(token::Gt, span))\n}\ntoken::BinOpEq(token::Shr) =&gt; {\n    let span = self.token.span.with_lo(self.token.span.lo() + BytePos(1));\n    Some(self.bump_with(token::Ge, span))\n}\ntoken::Ge =&gt; {\n    let span = self.token.span.with_lo(self.token.span.lo() + BytePos(1));\n    Some(self.bump_with(token::Eq, span))\n}\n</code></pre>\n\n<h1>Additional points</h1>\n\n<p>There's an additional wrinkle around whitespace. A parser should parse both of both of these types equivalently:</p>\n\n<pre><code>Option&lt;Option&lt;i32&gt;&gt;\nOption &lt; Option &lt; i32 &gt; &gt;\n</code></pre>\n\n<p>However, it should not parse these expressions equivalently:</p>\n\n<pre><code>a &gt;&gt;= 1\na &gt;&gt; = 1\n</code></pre>\n"}], "owner": {"reputation": 579, "user_id": 3968575, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/EJ0MU.jpg?s=128&g=1", "display_name": "Joshua Wise", "link": "https://stackoverflow.com/users/3968575/joshua-wise"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 281, "favorite_count": 0, "accepted_answer_id": 58065935, "answer_count": 3, "score": 3, "last_activity_date": 1569261955, "creation_date": 1569251910, "question_id": 58065507, "link": "https://stackoverflow.com/questions/58065507/how-does-the-rust-compiler-tokenize-vs-in-generics", "title": "How does the Rust compiler tokenize &#39;&gt;&#39; vs &#39;&gt;&gt;&#39; in generics?", "body": "<p>I've written many simple tokenizers and recursive-descent parsers, so I'm familiar with the basic concepts of how they work. But I was surprised when I stumbled upon the following Rust code:</p>\n\n<pre><code>Option&lt;Option&lt;i32&gt;&gt;\n</code></pre>\n\n<p>We know that Rust has a <code>&gt;&gt;</code> shift operator, so I think a naive tokenizer would output a <code>&gt;&gt;</code> token here, which the parser would see as an error (because it expects two <code>&gt;</code> tokens instead).</p>\n\n<p>But clearly the Rust compiler understands the situation and handles it correctly. What's going on here?</p>\n\n<ul>\n<li>Does the tokenizer keep some state, somehow knowing that it needs to close an angle bracket?</li>\n<li>Does the parser check for <code>&gt;&gt;</code> and break it into two tokens that are pushed back into the token stream?</li>\n<li>Or something else entirely?</li>\n</ul>\n"}, {"tags": ["rust", "patch", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1569251453, "creation_date": 1569251453, "answer_id": 58065382, "question_id": 58065296, "link": "https://stackoverflow.com/questions/58065296/is-it-possible-to-apply-a-patch-to-external-code-in-cargo-toml/58065382#58065382", "title": "Is it possible to apply a patch to external code in Cargo.toml?", "body": "<p>It is not possible to instruct Cargo to do something like \"take version 1.2.3 of crate foo-bar from crates.io and apply these arbitrary changes to the source code before compiling it\".</p>\n\n<p>The Cargo documentation is not lying to you: you will need to fork the project you wish to change, make the changes however you need, then replace the dependency with your forked version.</p>\n"}], "owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 58065382, "answer_count": 1, "score": 3, "last_activity_date": 1569251554, "creation_date": 1569251192, "last_edit_date": 1569251554, "question_id": 58065296, "link": "https://stackoverflow.com/questions/58065296/is-it-possible-to-apply-a-patch-to-external-code-in-cargo-toml", "title": "Is it possible to apply a patch to external code in Cargo.toml?", "body": "<p>I read the Cargo manual <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section\" rel=\"nofollow noreferrer\">about the patch option</a> but it is still unclear to me.</p>\n\n<p>Is it possible to instruct Cargo:</p>\n\n<ol>\n<li>Get the code from this repository.</li>\n<li>Apply this patch file (my_cool_change.patch) to that code.</li>\n</ol>\n\n<p>Is making my own fork of the project the only way to do it?</p>\n"}, {"tags": ["file", "rust", "iteration", "mapping", "filtering"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1569244393, "post_id": 58062887, "comment_id": 102522841, "body": "The documentation in <a href=\"https://doc.rust-lang.org/std/iter/index.html\" rel=\"nofollow noreferrer\">std::iter</a> may be a good read for you, if you haven&#39;t read it yet."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569247550, "post_id": 58062887, "comment_id": 102524808, "body": "What kind of filtering do you want to do?"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569247616, "post_id": 58062887, "comment_id": 102524852, "body": "To pass files only, or directories only."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1569243949, "post_id": 58063083, "comment_id": 102522566, "body": "You might want to add a line to the effect that <code>read_dir</code> returns an <code>Iterator&lt;Result&lt;DirEntry&gt;&gt;</code>, which explains the inner <code>x.map</code>\u2026"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569243999, "post_id": 58063083, "comment_id": 102522607, "body": "Why not <code>.map(|entry| entry.path())</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569244182, "post_id": 58063083, "comment_id": 102522718, "body": "@AlexeyOrlov <code>read_dir</code> provides an iterator of results. You cannot use the inner value of a result without handling it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569244189, "post_id": 58063083, "comment_id": 102522727, "body": "@AlexeyOrlov Jmb answered your question, and he&#39;s right. I&#39;ll edit the answer to add this detail"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569245598, "post_id": 58063083, "comment_id": 102523599, "body": "I&#39;m still not quite getting it. A map, a filter, whatever - lazy or not, works on a sequence of objects. On what <i>sequences</i> the maps work? It looks to me that the inner map works on <code>Result&lt;DirEntry&gt;</code>, which is no sequence."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569245891, "post_id": 58063083, "comment_id": 102523772, "body": "No. The inner <code>map</code> is because the <code>Iterator</code> item is a <code>Result&lt;DirEntry&gt;</code>. The outer <code>map</code> simply maps <code>Result&lt;DirEntry&gt;</code> into <code>Result&lt;PathBuf&gt;</code>, the inner <code>map</code> does the conversion itself."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569245926, "post_id": 58063083, "comment_id": 102523803, "body": "As for the rest, <code>map()</code> is defined on both <code>Result</code> and <code>Iterator</code> and <b>they&#39;re different</b>. The outer <code>map()</code> is <code>Iterator::map()</code>, which operates on an iterator of elements. The inner map is <code>Result::map()</code>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569246629, "post_id": 58063083, "comment_id": 102524241, "body": "<code>Result&lt;DirEntry&gt;</code> may be seen as a sequence of zero or one element. This is why it has a <code>map</code> method."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569247038, "post_id": 58063083, "comment_id": 102524503, "body": "@Jmb a <code>Result</code> is a one-entry element where the element is typed either as success, or as an error. It contains one element <i>no matter what</i>, the type of it is the important part. The actual name for this is a <a href=\"https://stackoverflow.com/questions/2704652/monad-in-plain-english-for-the-oop-programmer-with-no-fp-background\">monad</a>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569247355, "post_id": 58063083, "comment_id": 102524702, "body": "@AlexeyOrlov What do you want your filter to do? If you can explain it in plain words, I&#39;ll happily write the closure for you to show you"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569247672, "post_id": 58063083, "comment_id": 102524882, "body": "I want to get just files. Or just directories."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569247937, "post_id": 58063083, "comment_id": 102525034, "body": "@AlexeyOrlov <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cbe01cdd391fa243b1522b741c898f36\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569247961, "post_id": 58063083, "comment_id": 102525053, "body": "The first filter gets rid of elements that aren&#39;t <code>Ok</code>, the second filter filters whether the inode is a directory"}, {"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569248503, "post_id": 58063083, "comment_id": 102525384, "body": "Will you put it in so many characters? See <code>UPD:</code>. If the general idea is right, how am I supposed to access the entry inside my filter&#39;s lambda?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1569248599, "post_id": 58063083, "comment_id": 102525444, "body": "@AlexeyOrlov I added the code that I put in the sandbox on my answer"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1569305963, "post_id": 58063083, "comment_id": 102543299, "body": "@S&#233;bastienRenauld and yet you can <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b785a424a864342760436130086e4d71\" rel=\"nofollow noreferrer\">iterate over a <code>Result</code></a> which gets you zero or one element. Note that I didn&#39;t say that a result <b>is</b> a sequence of zero or one element, merely that it <b>can be seen</b> as one, and its behaviour is consistent with that view."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1569248588, "last_edit_date": 1569248588, "creation_date": 1569243689, "answer_id": 58063083, "question_id": 58062887, "link": "https://stackoverflow.com/questions/58062887/filtering-files-or-directories-discovered-with-fsread-dir/58063083#58063083", "title": "Filtering files or directories discovered with fs::read_dir()", "body": "<p>Let's walk step by step through the chain.</p>\n\n<pre><code>fs::read_dir(dir)?\n</code></pre>\n\n<p>creates a read handle to the directory, immediately propagates the <code>Err</code> case if it happens, and if it does not, <code>unwrap</code>s the success (that's the <code>?</code> operator)</p>\n\n<pre><code>.into_iter()\n</code></pre>\n\n<p>turns this read handle into an iterator of <code>Result&lt;DirEntry&gt;</code></p>\n\n<pre><code>.map(|x|\n  x.map(|entry| entry.path())\n)\n</code></pre>\n\n<p>This calls the <code>path()</code> method on every element of the iterator if the result is an actual <code>DirEntry</code>. Because the iterator element is <code>Result&lt;DirEntry&gt;</code> and not just <code>DirEntry</code>, the second <code>map()</code> allows you to deal with this cleanly. You're left with the paths you see on output</p>\n\n<pre><code>.collect()\n</code></pre>\n\n<p>turns this iterator back into a structure defined by the type hints (here, a vector)</p>\n\n<p>The filtering part can be implemented before or after the call to <code>map()</code> to turn the entry into a <code>PathBuf</code>. If you need to filter based on the element itself and not the <code>PathBuf</code>, filter before it. If you can filter based on the <code>PathBuf</code>, filter after it.</p>\n\n<p>The use of the <code>filter()</code> combinator function is straightforward - you give it a closure, it will apply it to every element. If the return of the closure is <code>true</code>, the element is kept. If it is false, the element is dropped.</p>\n\n<p>Here is an example, to only return directories:</p>\n\n<pre><code>fn folders(dir: &amp;Path) -&gt; Result&lt;Vec&lt;PathBuf&gt;, io::Error&gt; {\n    Ok(fs::read_dir(dir)?\n        .into_iter()\n        .filter(|r| r.is_ok()) // Get rid of Err variants for Result&lt;DirEntry&gt;\n        .map(|r| r.unwrap().path()) // This is safe, since we only have the Ok variants\n        .filter(|r| r.is_dir()) // Filter out non-folders\n        .collect())\n}\n</code></pre>\n"}], "owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 845, "favorite_count": 0, "accepted_answer_id": 58063083, "answer_count": 1, "score": 2, "last_activity_date": 1569248588, "creation_date": 1569243134, "last_edit_date": 1569247111, "question_id": 58062887, "link": "https://stackoverflow.com/questions/58062887/filtering-files-or-directories-discovered-with-fsread-dir", "title": "Filtering files or directories discovered with fs::read_dir()", "body": "<p>I've got this function:</p>\n\n<pre><code>fn folders(dir: &amp;Path) -&gt; Result&lt;Vec&lt;PathBuf&gt;, io::Error&gt; {\n    fs::read_dir(dir)?\n        .into_iter()\n        .map(|x| x.map(|entry| entry.path()))\n        .collect()\n}\n</code></pre>\n\n<p>It's actually borrowed from <a href=\"https://stackoverflow.com/questions/37439327/how-to-write-a-function-that-returns-vecpath\">here</a>. The function is OK; unfortunately, I don't really understand how it works.</p>\n\n<pre><code>Ok([\"/home/ey/dir-src/9\", \"/home/ey/dir-src/11\", \"/home/ey/dir-src/03 A Letter of Explanation.mp3\", \"/home/ey/dir-src/02 Egyptian Avenue.mp3\", \"/home/ey/dir-src/alfa\", \"/home/ey/dir-src/10\"])\n</code></pre>\n\n<p>The test output shows both directories and files, just as it should. I can't figure out where to put filtering for files/directories. I don't understand why the mapping inside mapping: isn't it just a simple list of paths? What is really happening inside this expression?</p>\n\n<p>UPD:</p>\n\n<pre><code>fn folders(dir: &amp;Path) -&gt; Result&lt;Vec&lt;PathBuf&gt;, io::Error&gt; {\n    fs::read_dir(dir)?\n        .into_iter()\n        .map(|x| x.map(|entry| entry.path()))\n        .filter(|x| {x.as_ref().map(|entry| entry); true})\n        .collect()\n}\n</code></pre>\n\n<p>A trivial filter (always <code>true</code>) inserted. It is compiling at least, but I still can't see how am I supposed to use <code>entry</code> for file/directory checking. Sorry :)</p>\n"}, {"tags": ["python", "rust", "ffi"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569240299, "post_id": 58061938, "comment_id": 102520533, "body": "It&#39;s trying to tell you that you&#39;re trying to free a pointer that wasn&#39;t allocated <b>where</b>? Tracking these memory leaks without profiling or unwinding is painful."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569240403, "post_id": 58061938, "comment_id": 102520579, "body": "&quot;let mut f: Vec&lt;c_char&gt; = arr.into();&quot; ???"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569240558, "post_id": 58061938, "comment_id": 102520652, "body": "@Stargateur I don&#39;t follow. There&#39;s an <code>into</code> impl for <code>Vec&lt;c_char&gt;</code> from <code>Array</code> \u2013 it&#39;s the last function in the Rust block."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1569240689, "post_id": 58061938, "comment_id": 102520708, "body": "and why by all the code don&#39;t you do <code>let mut f: Vec&lt;*mut c_char&gt; = arr.into();</code> do you realize <code>c_char</code> IS NOT a <code>*mut c_char</code> that very basic. You trigger UB here"}], "answers": [{"comments": [{"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1569245605, "post_id": 58062914, "comment_id": 102523605, "body": "Ahh yes this makes sense. The <code>*mut *mut</code> part was tripping me up. Thank you!"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1569243209, "creation_date": 1569243209, "answer_id": 58062914, "question_id": 58061938, "link": "https://stackoverflow.com/questions/58061938/memory-leak-when-trying-to-free-array-of-cstring/58062914#58062914", "title": "Memory leak when trying to free array of CString", "body": "<p>Well, that was a fun one to go through.</p>\n\n<p>Your <strong>biggest</strong> problem is the following conversion:</p>\n\n<pre><code>impl From&lt;Array&gt; for Vec&lt;c_char&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { slice::from_raw_parts_mut(arr.data as *mut c_char, arr.len).to_vec() }\n    }\n}\n</code></pre>\n\n<p>You start with what comes out of the FFI boundary as an array of strings (i.e. <code>*mut *mut c_char</code>). For some reason, you decide that all of a sudden, it is a <code>Vec&lt;c_char&gt;</code> and not a <code>Vec&lt;*const c_char&gt;</code> as you would expect for the <code>CString</code> conversion. That's UB #1 - and the cause of your use-after-free.</p>\n\n<p>The unnecessarily convoluted conversions made things even muddier due to the constant juggling between types. If your FFI boundary is <code>Vec&lt;CString&gt;</code>, why do you split the return into two separate calls? That's literally calling for disaster, as it happened.</p>\n\n<p>Consider the following:</p>\n\n<pre><code>impl From&lt;Array&gt; for Vec&lt;CString&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe {\n          slice::from_raw_parts(\n            arr.data as *mut *mut c_char,\n            arr.len\n          )\n            .into_iter().map(|r| CString::from_raw(*r))\n            .collect()\n        }\n    }\n}\n</code></pre>\n\n<p>This gives you a one-step FFI boundary conversion (without the necessity for the second <code>unsafe</code> block in your method), clean types and no leaks.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 58062914, "answer_count": 1, "score": 0, "last_activity_date": 1569243209, "creation_date": 1569239770, "last_edit_date": 1569240688, "question_id": 58061938, "link": "https://stackoverflow.com/questions/58061938/memory-leak-when-trying-to-free-array-of-cstring", "title": "Memory leak when trying to free array of CString", "body": "<p>The following (MCVE if compiled as a <code>cdylib</code> called <code>libffitest</code>, requires <code>libc</code> as a dependency) demonstrates the problem:</p>\n\n<pre><code>use libc::{c_char, c_void, size_t};\nuse std::ffi::CString;\nuse std::mem;\nuse std::slice;\n\n#[repr(C)]\n#[derive(Clone)]\npub struct Array {\n    pub data: *const c_void,\n    pub len: size_t,\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn bar() -&gt; Array {\n    let v = vec![\n        CString::new(\"Hi There\").unwrap().into_raw(),\n        CString::new(\"Hi There\").unwrap().into_raw(),\n    ];\n    v.into()\n}\n\n#[no_mangle]\npub extern \"C\" fn drop_word_array(arr: Array) {\n    if arr.data.is_null() {\n        return;\n    }\n    // Convert incoming data to Vec so we own it\n    let mut f: Vec&lt;c_char&gt; = arr.into();\n    // Deallocate the underlying c_char data by reconstituting it as a CString\n    let _: Vec&lt;CString&gt; = unsafe { f.iter_mut().map(|slice| CString::from_raw(slice)).collect() };\n}\n\n// Transmute to array for FFI\nimpl From&lt;Vec&lt;*mut c_char&gt;&gt; for Array {\n    fn from(sl: Vec&lt;*mut c_char&gt;) -&gt; Self {\n        let array = Array {\n            data: sl.as_ptr() as *const c_void,\n            len: sl.len() as size_t,\n        };\n        mem::forget(sl);\n        array\n    }\n}\n\n// Reconstitute from FFI\nimpl From&lt;Array&gt; for Vec&lt;c_char&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { slice::from_raw_parts_mut(arr.data as *mut c_char, arr.len).to_vec() }\n    }\n}\n</code></pre>\n\n<p>I thought that by reconstituting the incoming <code>Array</code> as a slice, taking ownership of it as a <code>Vec</code>, then reconstituting the elements as <code>CString</code>, I was freeing any allocated memory, but I'm clearly doing something wrong. Executing this Python script tells me that it's trying to free a pointer that was not allocated:\n<code>python(85068,0x10ea015c0) malloc: *** error for object 0x7ffdaa512ca1: pointer being freed was not allocated</code></p>\n\n<pre><code>import sys\nimport ctypes\nfrom ctypes import c_void_p, Structure, c_size_t, cast, POINTER, c_char_p\n\nclass _FFIArray(Structure):\n    \"\"\"\n    Convert sequence of structs to C-compatible void array\n\n    \"\"\"\n    _fields_ = [(\"data\", c_void_p),\n                (\"len\", c_size_t)]\n\n\ndef _arr_to_wordlist(res, _func, _args):\n    ls = cast(res.data, POINTER(c_char_p * res.len))[0][:]\n    print(ls)\n    _drop_wordarray(res)\n\n\nprefix = {\"win32\": \"\"}.get(sys.platform, \"lib\")\nextension = {\"darwin\": \".dylib\", \"win32\": \".dll\"}.get(sys.platform, \".so\")\nlib = ctypes.cdll.LoadLibrary(prefix + \"ffitest\" + extension)\n\nlib.bar.argtypes = ()\nlib.bar.restype = _FFIArray\nlib.bar.errcheck = _arr_to_wordlist\n_drop_wordarray = lib.drop_word_array\n\nif __name__ == \"__main__\":\n    lib.bar()\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569226050, "post_id": 58057964, "comment_id": 102513352, "body": "You have an example in a yesterday&#39;s answer : <a href=\"https://stackoverflow.com/a/58050166/263525\">stackoverflow.com/a/58050166/263525</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569226230, "post_id": 58057964, "comment_id": 102513444, "body": "The reason to have one lifetime can simply happen to be occurring more than once. Another example, with 3 lifetimes: <a href=\"https://github.com/Canop/termimad/blob/master/src/displayable_line.rs#L11\" rel=\"nofollow noreferrer\">github.com/Canop/termimad/blob/master/src/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1569226457, "post_id": 58057964, "comment_id": 102513562, "body": "The more references, the more lifetimes: that&#39;s all"}, {"owner": {"reputation": 6455, "user_id": 2363967, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/e456a6a8bd35a0e65c22d202b48ccfa4?s=128&d=identicon&r=PG", "display_name": "Andrew Williamson", "link": "https://stackoverflow.com/users/2363967/andrew-williamson"}, "edited": false, "score": 1, "creation_date": 1569226932, "post_id": 58057964, "comment_id": 102513769, "body": "Thanks Denys - you can post that as an answer if you want, as those examples have definitely answered my question. The first example being a reference to another reference, that&#39;s probably a very common scenario. So far, I&#39;ve only used Rust from the Rust playground, so I haven&#39;t written very complicated code, and haven&#39;t had to use a class with multiple lifetimes"}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1569243230, "post_id": 58058487, "comment_id": 102522150, "body": "I think &quot;absurdly&quot; might be an overstatement. Perhaps you could give an example of how it would be limiting to have the same lifetime bound for two of these fields? References with a longer lifetime are subtypes of references with shorter ones, so using the same lifetime twice in a struct is <i>usually</i> not a big problem because the struct itself can&#39;t outlive the shorter lifetime anyway."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1569247829, "post_id": 58058487, "comment_id": 102524976, "body": "@PeterHall Most examples come from real world complexity and it&#39;s not easy to come up with a small and obvious example when two fields of a struct must have different lifetimes in a simple scenario. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=17d4393f34b01c5bb5622b10b1809c79\" rel=\"nofollow noreferrer\">Here&#39;s one</a>. In any case I remove the &quot;absurdly&quot; word."}, {"owner": {"reputation": 5428, "user_id": 482382, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9fe6eecd0900f0e779711f091fec8b3b?s=128&d=identicon&r=PG", "display_name": "Steven Shaw", "link": "https://stackoverflow.com/users/482382/steven-shaw"}, "edited": false, "score": 0, "creation_date": 1579916845, "post_id": 58058487, "comment_id": 105938035, "body": "@DenysS&#233;guret, in your playground example, I noticed that the second lifetime parameter can be removed from the <code>lg</code> function (which still requires two for BiRef). Is there a scenario where a function requires more than one lifetime parameter?"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 2, "last_activity_date": 1569247845, "last_edit_date": 1569247845, "creation_date": 1569227450, "answer_id": 58058487, "question_id": 58057964, "link": "https://stackoverflow.com/questions/58057964/what-is-a-real-life-example-of-a-struct-with-more-than-one-lifetime-parameter/58058487#58058487", "title": "What is a real-life example of a struct with more than one lifetime parameter?", "body": "<p>When you use a reference in a struct, you use a lifetime.</p>\n\n<p>Sometimes you can just use the same lifetime for the various references of your struct, but you can't always do that.</p>\n\n<p>A lifetime is a reference to the time a value is alive (between creation and deletion). And it's a constraint that the borrow checker will check. If you give the same lifetime to two fields, you add a constraint that often can't be verified, thus limiting the possible uses of your struct.</p>\n\n<p><a href=\"https://github.com/Canop/termimad/blob/master/src/displayable_line.rs#L11\" rel=\"nofollow noreferrer\">Here's a real world example</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct DisplayableLine&lt;'s, 'l, 'p&gt; {\n    pub skin: &amp;'s MadSkin,\n    pub line: &amp;'p FmtLine&lt;'l&gt;,\n    pub width: Option&lt;usize&gt;, // available width\n}\n</code></pre>\n\n<p>The struct itself is usually short lived. The skin and the line come from different origins. You could have a skin you just make for a display and that you want to immediately drop. Or a line you just made while you keep your skin around. Giving the same lifetime to both fields would be more limiting than necessary.</p>\n\n<p>Of course when your struct is always referring to values that are created together and dropped together, having two lifetimes isn't necessary. But in practice this is rare.</p>\n"}], "owner": {"reputation": 6455, "user_id": 2363967, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/e456a6a8bd35a0e65c22d202b48ccfa4?s=128&d=identicon&r=PG", "display_name": "Andrew Williamson", "link": "https://stackoverflow.com/users/2363967/andrew-williamson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "closed_date": 1569248049, "accepted_answer_id": 58058487, "answer_count": 1, "score": 3, "last_activity_date": 1569247845, "creation_date": 1569225555, "question_id": 58057964, "link": "https://stackoverflow.com/questions/58057964/what-is-a-real-life-example-of-a-struct-with-more-than-one-lifetime-parameter", "closed_reason": "Duplicate", "title": "What is a real-life example of a struct with more than one lifetime parameter?", "body": "<p>I'm new to Rust, but I think I understand the concept of lifetime parameters well enough. I can see how this would be really useful for <em>methods</em>, when accepting multiple parameters by reference. However, I can't think of an example when a <em>struct</em> would hold references to two different variables with different lifetimes. The <a href=\"https://doc.rust-lang.org/1.9.0/book/lifetimes.html\" rel=\"nofollow noreferrer\">Rust book</a> doesn't provide an example of a struct with multiple lifetimes.</p>\n\n<p>The discussion around <a href=\"https://internals.rust-lang.org/t/lang-team-minutes-elision-2-0/5182\" rel=\"nofollow noreferrer\">Elision 2.0</a> refers to <em>\"structs with a single lifetime parameter\"</em>, and is focused on making it easier to work with types that have only one lifetime parameter, which suggests to me that this is the most common use case for lifetimes - either a struct has <em>no</em> lifetime, or it has <em>one</em> lifetime.</p>\n\n<p><strong>Can anyone provide me with a practical example of a struct with multiple lifetime parameters?</strong></p>\n"}, {"tags": ["rust", "sudo"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569216844, "post_id": 58056011, "comment_id": 102509695, "body": "<i>&quot;Basically how do I make it run sudo for the user so they don&#39;t have to&quot;</i>. You can&#39;t. But you can detect you don&#39;t have the permissions and politely ask the user to launch the program with the relevant rights."}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569217050, "post_id": 58056011, "comment_id": 102509744, "body": "@DenysS&#233;guret you actually just gave me an idea on how to do it, how do I detect if the user doesn&#39;t have the permissions?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569217411, "post_id": 58056011, "comment_id": 102509850, "body": "You just wrote the error to detect: <code>code: 13, kind: PermissionDenied</code>. The right way is to try, then to analyze the error. See <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html#method.kind\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/io/struct.Error.html#method.kind</a>"}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569217509, "post_id": 58056011, "comment_id": 102509881, "body": "@DenysS&#233;guret do you have a code example on how to detect it? Or could I actually run code if I get an error with unwrap_or_else?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569217880, "post_id": 58056011, "comment_id": 102509976, "body": "This was a little too hard to write in comment so I made an answer"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569252316, "post_id": 58056011, "comment_id": 102527495, "body": "An alternative approach: open a pipe to <code>sudo sh -c &quot;cat &gt;&gt;&#47;usr&#47;local&#47;etc&#47;apt&#47;sources.list&quot;</code> instead of opening the file directly. This dramatically cuts down on the amount of weird stuff that can happen. It&#39;s still inadvisable to edit <code>sources.list</code> (or any system config file) programmatically unless you <i>really</i> know what you&#39;re doing."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 4, "last_activity_date": 1569218223, "last_edit_date": 1569218223, "creation_date": 1569217861, "answer_id": 58056338, "question_id": 58056011, "link": "https://stackoverflow.com/questions/58056011/how-do-i-stop-the-program-and-restart-with-sudo-without-the-user-typing-the-word/58056338#58056338", "title": "How do I stop the program and restart with sudo without the user typing the word sudo?", "body": "<blockquote>\n  <p>Basically how do I make it run sudo for the user so they don't have to</p>\n</blockquote>\n\n<p>You can't.</p>\n\n<p>The normal way of dealing with this problem is to try, and, when it fails, analyze the error and politely ask the user to launch the program with the relevant rights:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let source_list = openoptions::new()\n        .write(true)\n        .append(true)\n        .open(\"/usr/local/etc/apt/sources.list\");\nmatch source_list {\n    Err(ioerr) =&gt; {\n        match ioerr.kind() {\n            ErrorKind::PermissionDenied =&gt; {\n                e.println(\"permission denied. Maybe sudo?\");\n            }\n            _ =&gt; {\n                e.println(\"I failed :(\");\n            }\n        }\n        return;\n    }\n    Ok(source_list) =&gt; {\n        // do things\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1569223932, "post_id": 58057284, "comment_id": 102512386, "body": "This is a very bad practice. Please stick to the normal unix way of dealing with rights, don&#39;t try to do a stealth sudo. And this would only work if the user recently did a sudo and gave his password."}, {"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1569225685, "post_id": 58057284, "comment_id": 102513194, "body": "I agree this is bad unix-practice as I write above, the point is it is however it is possible if someone wants to write this kind of hacks."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1569227761, "post_id": 58057284, "comment_id": 102514168, "body": "Note that if you really want to escalate privileges like that, you should probably use <a href=\"https://doc.rust-lang.org/stable/std/os/unix/process/trait.CommandExt.html#tymethod.exec\" rel=\"nofollow noreferrer\"><code>exec</code></a> in order to avoid issues with sharing the TTY between the original and spawned process."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1569237958, "post_id": 58057284, "comment_id": 102519313, "body": "<code>cmdlineargs[0]</code> is not guaranteed to contain a string that can be passed to <code>sudo</code> to run the same program again. It is likely to work in simple cases, but I can think of several ways to stymie it."}], "tags": [], "owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "is_accepted": true, "score": 0, "last_activity_date": 1569229667, "last_edit_date": 1569229667, "creation_date": 1569222568, "answer_id": 58057284, "question_id": 58056011, "link": "https://stackoverflow.com/questions/58056011/how-do-i-stop-the-program-and-restart-with-sudo-without-the-user-typing-the-word/58057284#58057284", "title": "How do I stop the program and restart with sudo without the user typing the word sudo?", "body": "<p>Yes you <em>could</em>, but if you <em>should</em> is another question...</p>\n\n<p>When detecting the lack of privileges you could restart your program with sudo with <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.spawn\" rel=\"nofollow noreferrer\"><code>std::process::Command</code></a> and unix is extensions <a href=\"https://doc.rust-lang.org/stable/std/os/unix/process/trait.CommandExt.html#tymethod.exec\" rel=\"nofollow noreferrer\"><code>exec</code></a> by executing a command with the same cmdline arguments. <a href=\"https://doc.rust-lang.org/stable/std/env/struct.Args.html\" rel=\"nofollow noreferrer\"><code>env::args</code></a> is an iterator to all command line arguments where the first one is the program name</p>\n\n<pre><code>use std::process::Command;\nuse std::os::unix::process::CommandExt;\n\n [...]\n // when restart as root is needed\n let cmdlineargs:Vec&lt;String&gt;=env::args().collect();\n let _output = Command::new(\"sudo\")\n                    .args(&amp;cmdlineargs)\n                    .exec(); // Bye bye never returns\n</code></pre>\n\n<p>There are a ton of problems with the code above, for instance you should avoid having the program to restart itself in an indefinite loop and hiding privilege escalations from users is often considered bad design.</p>\n\n<p><em>Edit: Updated after suggestions in comments replaced <code>spawn</code> with <code>exec</code></em></p>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 1, "accepted_answer_id": 58057284, "answer_count": 2, "score": 0, "last_activity_date": 1569229667, "creation_date": 1569215673, "last_edit_date": 1569221817, "question_id": 58056011, "link": "https://stackoverflow.com/questions/58056011/how-do-i-stop-the-program-and-restart-with-sudo-without-the-user-typing-the-word", "title": "How do I stop the program and restart with sudo without the user typing the word sudo?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::OpenOptions;\nuse std::io::Write;\n\nfn main() {\n    let mut source_list = OpenOptions::new()\n        .write(true)\n        .append(true)\n        .open(\"/usr/local/etc/apt/sources.list\")\n        .unwrap();\n\n    if let Err(e) = writeln!(source_list, \"{}\", \"deb \".to_owned() + \"https://www.google.com/\" + \" ./\") {\n        eprintln!(\"Couldn't write to file: {}\", e);\n    }\n}\n</code></pre>\n\n<p>When running this code without sudo it outputs:</p>\n\n<pre><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }', src/libcore/result.rs:999:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>and when running this code with sudo it asks for my password and then writes to the file successfully so my question is how do I get it to ask for me my password then write to the file successfully without the need of sudo (Basically how do I make it run sudo for the user so they don't have to)?</p>\n"}, {"tags": ["arrays", "string", "rust", "type-conversion", "base64"], "comments": [{"owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "edited": false, "score": 2, "creation_date": 1569244814, "post_id": 58051863, "comment_id": 102523098, "body": "Why was this downvoted? Is there something wrong with my question?"}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 5, "last_activity_date": 1569174806, "last_edit_date": 1569174806, "creation_date": 1569174717, "answer_id": 58051911, "question_id": 58051863, "link": "https://stackoverflow.com/questions/58051863/convert-u8-array-to-base64-string-in-rust/58051911#58051911", "title": "Convert u8 array to base64 string in Rust", "body": "<p>What you're looking for is the <code>base64</code> crate, particularly its <a href=\"https://docs.rs/base64/0.10.1/base64/fn.encode.html\" rel=\"noreferrer\"><code>encode()</code></a> function. Usage is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3b3e680312bf8eb672617917b9c6e9c3\" rel=\"noreferrer\">pretty straightforward</a>:</p>\n\n<pre><code>extern crate base64;\n\nfn main() {\n    let data: Vec&lt;u8&gt; = vec![1,2,3,4,5];\n    println!(\"{}\", base64::encode(&amp;data))\n}\n</code></pre>\n"}], "owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1831, "favorite_count": 1, "accepted_answer_id": 58051911, "answer_count": 1, "score": 6, "last_activity_date": 1569174806, "creation_date": 1569174426, "question_id": 58051863, "link": "https://stackoverflow.com/questions/58051863/convert-u8-array-to-base64-string-in-rust", "title": "Convert u8 array to base64 string in Rust", "body": "<p>I have an array of u8 in Rust. How would I go about converting these to a String representing them as base64?  </p>\n"}, {"tags": ["compiler-errors", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1810, "user_id": 870609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a7f7df09569ff6798f179ed3e01b2bb?s=128&d=identicon&r=PG", "display_name": "Fabio A. Correa", "link": "https://stackoverflow.com/users/870609/fabio-a-correa"}, "is_accepted": false, "score": 1, "last_activity_date": 1569170450, "creation_date": 1569170450, "answer_id": 58051320, "question_id": 58051264, "link": "https://stackoverflow.com/questions/58051264/can-rustc-give-me-more-detail-about-type-ambiguity-errors/58051320#58051320", "title": "Can rustc give me more detail about type ambiguity errors?", "body": "<p>I cannot find any <code>rustc</code> options to provide more information on E0283; however <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/traits/error_reporting.rs#L1484\" rel=\"nofollow noreferrer\">the code for this error</a> includes a comment that might give you a little more insight. Otherwise it seems that the answer to your question is no. Sorry I am not able to get more help.</p>\n"}, {"comments": [{"owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "edited": false, "score": 0, "creation_date": 1569243424, "post_id": 58053402, "comment_id": 102522286, "body": "Thanks. For me the clarifying point is &quot;In general, adding a new definition should be non-breaking, and certainly shouldn&#39;t be able to break code in another module.&quot;"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1569186378, "creation_date": 1569186378, "answer_id": 58053402, "question_id": 58051264, "link": "https://stackoverflow.com/questions/58051264/can-rustc-give-me-more-detail-about-type-ambiguity-errors/58053402#58053402", "title": "Can rustc give me more detail about type ambiguity errors?", "body": "<p>When the type checker can't deduce an unambiguous type, it doesn't necessarily mean that it can't choose from some finite set of known contenders. <a href=\"https://doc.rust-lang.org/error-index.html#E0283\" rel=\"nofollow noreferrer\">Here is the example</a> you are referring to from the documentation:</p>\n\n<pre><code>trait Generator {\n    fn create() -&gt; u32;\n}\n\nstruct Impl;\n\nimpl Generator for Impl {\n    fn create() -&gt; u32 { 1 }\n}\n\nstruct AnotherImpl;\n\nimpl Generator for AnotherImpl {\n    fn create() -&gt; u32 { 2 }\n}\n\nfn main() {\n    let cont: u32 = Generator::create();\n    // error, impossible to choose one of Generator trait implementation\n    // Should it be Impl or AnotherImpl, maybe something else?\n}\n</code></pre>\n\n<p>If <code>AnotherImpl</code> wasn't there, and <code>Impl</code> was the <em>only</em> implementation of <code>Generator</code>, this still wouldn't work. If it did, you could later add <code>AnotherImpl</code> \u2014 even in another module or crate \u2014 and break this code. In general, adding a new definition should be non-breaking, and certainly shouldn't be able to break code in another module. If the compiler automatically chose the \"only\" implementation of <code>Generator</code> here, it would violate that.</p>\n\n<p>Coming back to your original question, the only information that the error message could give you is pretty much what it's already giving you. The type checker hasn't looked around for possible implementations, rather it has simply refused to even try to choose a type from the information given.</p>\n"}], "owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 58053402, "answer_count": 2, "score": 0, "last_activity_date": 1569186698, "creation_date": 1569170067, "last_edit_date": 1569186698, "question_id": 58051264, "link": "https://stackoverflow.com/questions/58051264/can-rustc-give-me-more-detail-about-type-ambiguity-errors", "title": "Can rustc give me more detail about type ambiguity errors?", "body": "<p>There is this familiar compilation error:</p>\n\n<pre><code>error[E0283]: type annotations required: cannot resolve `T: Constraint`\n\n...\n</code></pre>\n\n<p>And then <code>rustc --explain E0283</code> says: <code>This error occurs when the compiler doesn't have enough information to unambiguously choose an implementation</code>, and gives a <a href=\"https://doc.rust-lang.org/error-index.html#E0283\" rel=\"nofollow noreferrer\">helpful example</a>.</p>\n\n<p>I know exactly how to fix the error - see e.g. <a href=\"https://stackoverflow.com/a/41882374\">this answer</a>.</p>\n\n<p>I'm wondering, though, if <code>rustc</code> can be encouraged to tell me more. Specifically, some representation of the space of possible concrete types that the type checker ended up with before bailing.</p>\n"}, {"tags": ["reference", "rust", "iterator", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569341346, "post_id": 58050164, "comment_id": 102562594, "body": "<i>If you don&#39;t want to implement your own iterator, you need dynamic dispatch for this</i> \u2014 the custom iterator also uses dynamic dispatch. You do not <b>need</b> a trait object for dynamic dispatch."}], "tags": [], "owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "is_accepted": false, "score": 2, "last_activity_date": 1569162593, "creation_date": 1569162593, "answer_id": 58050164, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect/58050164#58050164", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>If you don't want to implement your own iterator, you need dynamic dispatch for this, because you want to return different iterators depending on the enum variant.</p>\n\n<p>We need a <strong>trait object</strong> (<code>&amp;dyn Trait</code>, <code>&amp;mut dyn Trait</code> or <code>Box&lt;dyn Trait&gt;</code>) to use dynamic dispatch:</p>\n\n<pre><code>impl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get_items(&amp;'a self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;String&gt; + 'a&gt; {\n        match self {\n            Foo::Owned(v) =&gt; Box::new(v.into_iter()),\n            Foo::Refs(v) =&gt; Box::new(v.iter().copied()),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"nofollow noreferrer\"><code>.copied()</code></a> converts the <code>Iterator&lt;Item = &amp;&amp;String&gt;</code> into an <code>Iterator&lt;Item = &amp;String&gt;</code>, so this doesn't actually copy anything :)</p>\n"}, {"comments": [{"owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1569661625, "post_id": 58050166, "comment_id": 102674940, "body": "I accepted this as the answer as it shows exactly what needs to be implemented in order to achieve what I want. However, in my special case letting the <code>auto_enums</code> crate do the work (as suggested by @peter-hall) is probably the more ergonomic choice."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 6, "last_activity_date": 1569181181, "last_edit_date": 1569181181, "creation_date": 1569162615, "answer_id": 58050166, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect/58050166#58050166", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>You can't just use the <code>std::slice::Iter</code> type for this.</p>\n\n<p>If you don't want to copy the strings or vector, you'll have to implement your own iterator, for example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct FooIter&lt;'a, 'b&gt; {\n    idx: usize,\n    foo: &amp;'b Foo&lt;'a&gt;,\n}\n\nimpl&lt;'a, 'b&gt; Iterator for FooIter&lt;'a, 'b&gt; {\n    type Item = &amp;'a String;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.idx += 1;\n        match self.foo {\n            Foo::Owned(v) =&gt; v.get(self.idx - 1),\n            Foo::Refs(v) =&gt; v.get(self.idx - 1).map(|s| *s),\n        }\n    }\n}\n\nimpl&lt;'a, 'b&gt; Foo&lt;'a&gt; {\n    fn get_items(&amp;'b self) -&gt; FooIter&lt;'a, 'b&gt; {\n        FooIter { idx: 0, foo: self }\n    }\n}\n\nfn main() {\n    let test: Vec&lt;String&gt; = vec![\"a\".to_owned(), \"b\".to_owned()];\n    let foo = Foo::Owned(&amp;test);\n    for item in foo.get_items() {\n        println!(\"{:?}\", item);\n    }\n    let a = \"a\".to_string();\n    let b = \"b\".to_string();\n    let test: Vec&lt;&amp;String&gt; = vec![&amp;a, &amp;b];\n    let foo = Foo::Refs(test);\n    for item in foo.get_items() {\n        println!(\"{:?}\", item);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 1, "last_activity_date": 1569162675, "creation_date": 1569162675, "answer_id": 58050176, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect/58050176#58050176", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>A few things you should know first:</p>\n\n<ul>\n<li>You are most definitely going to have two different iterators, because they're different base types you're iterating over. Therefore I'm going to use a <code>Box&lt;dyn Iterator&lt;Item = &amp;'a _&gt;&gt;</code>, but feel free to use an <code>enum</code> if this causes a quantifiable performance drop.</li>\n<li>You need to introduce <code>self</code>'s lifetime here, because what if we return an iterator whose lifetime is <code>'a</code>, but <code>'a &gt; 'self</code>? Therefore we make a new lifetime (Which I'll call <code>'b</code>.).</li>\n<li>Now it's just a matter of wrangling with the reference layers:</li>\n</ul>\n\n<p>Here's the implementation using the original types:</p>\n\n<pre><code>enum Foo&lt;'a&gt; {\n    Owned(&amp;'a Vec&lt;String&gt;),\n    Refs(Vec&lt;&amp;'a String&gt;)\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get_items&lt;'b&gt;(&amp;'b self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;'a String&gt; + 'b&gt; {\n        match self {\n            Foo::Owned(v) =&gt; //v: &amp;'a Vec&lt;String&gt;\n                Box::new(\n                    v.iter() //Iterator&lt;Item = &amp;'a String&gt; -- Good!\n                ),\n            Foo::Refs(v) =&gt; //v: Vec&lt;&amp;'a String&gt;\n                Box::new(\n                    v.iter() //Iterator&lt;Item = &amp;'b &amp;'a String&gt; -- Bad!\n                        .map(|x| *x) //Iterator&lt;Item = &amp;'a String&gt; -- Good!\n                ),\n        }\n    }\n}\n</code></pre>\n\n<p>These types aren't really rust-like (Or more formally, <em>idiomatic</em>), so here's that version using slices and <code>str</code>s:</p>\n\n<pre><code>enum Foo&lt;'a&gt; {\n    Owned(&amp;'a [String]),\n    Refs(Vec&lt;&amp;'a str&gt;)\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get_items&lt;'b&gt;(&amp;'b self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;'a str&gt; + 'b&gt; {\n        match self {\n            Foo::Owned(v) =&gt; \n                Box::new(\n                    v.into_iter()\n                        .map(|x| &amp;**x) //&amp;'a String -&gt; &amp;'a str\n                ),\n            Foo::Refs(v) =&gt;\n                Box::new(\n                    v.iter()\n                        .map(|x| *x) //&amp;'b &amp;'a str -&gt; &amp;'a str\n                )/* what to put here? */,\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7f14aa4a8ccf90a6cb06a5b3f533c7c\" rel=\"nofollow noreferrer\"><code>Playground</code></a></p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1569182967, "creation_date": 1569182967, "answer_id": 58053021, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect/58053021#58053021", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>There is a handy crate, <a href=\"https://crates.io/crates/auto_enums\" rel=\"nofollow noreferrer\"><code>auto_enums</code></a>, which can generate a type for you so a function can have multiple return types, as long as they implement the same trait. It's similar to the code in <a href=\"https://stackoverflow.com/a/58050166/493729\">Denys S\u00e9guret's answer</a> except it's all done for you by the <code>auto_enum</code> macro:</p>\n\n<pre><code>use auto_enums::auto_enum;\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    #[auto_enum(Iterator)]\n    fn get_items(&amp;self) -&gt; impl Iterator&lt;Item = &amp;String&gt; {\n        match self {\n            Foo::Owned(v) =&gt; v.iter(),\n            Foo::Refs(v) =&gt; v.iter().copied(),\n        }\n    }\n}\n</code></pre>\n\n<p>Add the dependency by adding this in your <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nauto_enums = \"0.6.3\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1569392542, "last_edit_date": 1569392542, "creation_date": 1569222160, "answer_id": 58057193, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect/58057193#58057193", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>Ideally you would want:</p>\n\n<pre><code>fn get_items(&amp;self) -&gt; impl Iterator&lt;Item = &amp;String&gt; {\n    match self {\n        Foo::Owned(v) =&gt; v.into_iter(),\n        Foo::Refs(v)  =&gt; v.iter().copied(),\n    }\n}\n</code></pre>\n\n<p>The call to <code>copied</code> is here to convert an <code>Iterator&lt;Item = &amp;&amp;String&gt;</code> into the <code>Iterator&lt;Item = &amp;String&gt;</code> we want. This doesn't work because the two match arms have different types:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:12:30\n   |\n10 | /         match self {\n11 | |             Foo::Owned(v) =&gt; v.into_iter(),\n   | |                              ------------- this is found to be of type `std::slice::Iter&lt;'_, std::string::String&gt;`\n12 | |             Foo::Refs(v)  =&gt; v.iter().copied(),\n   | |                              ^^^^^^^^^^^^^^^^^ expected struct `std::slice::Iter`, found struct `std::iter::Copied`\n13 | |         }\n   | |_________- `match` arms have incompatible types\n   |\n   = note: expected type `std::slice::Iter&lt;'_, std::string::String&gt;`\n              found type `std::iter::Copied&lt;std::slice::Iter&lt;'_, &amp;std::string::String&gt;&gt;`\n</code></pre>\n\n<p>You can fix this error thanks to the <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\"><code>itertools</code></a> or <a href=\"https://crates.io/crates/either\" rel=\"nofollow noreferrer\"><code>either</code></a> crates, which contain a handy adapter called <a href=\"https://docs.rs/itertools/0.8.0/itertools/enum.Either.html\" rel=\"nofollow noreferrer\"><code>Either</code></a> (<a href=\"https://docs.rs/either/1.5.3/either/enum.Either.html\" rel=\"nofollow noreferrer\">*</a>) that allows you to choose dynamically between two iterators:</p>\n\n<pre><code>fn get_items(&amp;self) -&gt; impl Iterator&lt;Item = &amp;String&gt; {\n    match self {\n        Foo::Owned(v) =&gt; Either::Left(v.into_iter()),\n        Foo::Refs(v)  =&gt; Either::Right(v.iter().copied()),\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=da56db4c922bf335c209f8ada9b8a66b\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 462, "favorite_count": 0, "accepted_answer_id": 58050166, "answer_count": 5, "score": 8, "last_activity_date": 1569392542, "creation_date": 1569159232, "last_edit_date": 1569340987, "question_id": 58049711, "link": "https://stackoverflow.com/questions/58049711/how-can-i-create-an-iterator-of-t-from-either-a-vect-or-vect", "title": "How can I create an iterator of &amp;T from either a &amp;Vec&lt;T&gt; or Vec&lt;&amp;T&gt;?", "body": "<p>I have an enum with two variants. Either it contains a reference to a <code>Vec</code> of <code>String</code>s or it contains a <code>Vec</code> of references to <code>String</code>s:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Foo&lt;'a&gt; {\n    Owned(&amp;'a Vec&lt;String&gt;),\n    Refs(Vec&lt;&amp;'a String&gt;),\n}\n</code></pre>\n\n<p>I want to iterate over references to the <code>String</code>s in this enum.</p>\n\n<p>I tried to implement a method on <code>Foo</code>, but don't know how to make it return the right iterator:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn get_items(&amp;self) -&gt; Iter&lt;'a, String&gt; {\n        match self {\n            Foo::Owned(v) =&gt; v.into_iter(),\n            Foo::Refs(v) =&gt; /* what to put here? */,\n        }\n    }\n}\n\nfn main() {\n    let test: Vec&lt;String&gt; = vec![\"a\".to_owned(), \"b\".to_owned()];\n    let foo = Foo::Owned(&amp;test);\n\n    for item in foo.get_items() {\n        // item should be of type &amp;String here\n        println!(\"{:?}\", item);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=87aa534962775da8816495734901607b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>What is an idiomatic method to achieve this abstraction over <code>&amp;Vec&lt;T&gt;</code> and <code>Vec&lt;&amp;T&gt;</code>? <code>get_items</code> may also return something different, as long as it implements the <code>IntoIterator</code> trait so that I can use it in the <code>for</code> loop.</p>\n"}, {"tags": ["rust", "closures", "constants"], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 3, "last_activity_date": 1569163562, "creation_date": 1569163562, "answer_id": 58050289, "question_id": 58049565, "link": "https://stackoverflow.com/questions/58049565/creating-a-struct-that-has-an-exchangable-function/58050289#58050289", "title": "Creating a struct, that has an exchangable function", "body": "<p>To quote the <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\"><code>Fn</code> <strong><em>trait</em></strong> docs</a>:</p>\n\n<blockquote>\n  <p><em>This trait (<code>Fn</code>) is not to be confused with <a href=\"https://doc.rust-lang.org/std/primitive.fn.html\" rel=\"nofollow noreferrer\">function pointers</a> (<code>fn</code>).</em></p>\n</blockquote>\n\n<p>Function pointers don't allow you to have state in a closure-like way. If you're using something like the <code>sigmoid</code> function, which is defined without state, you can use that. If you're using a closure with state, you <em>need</em> to have some form of dynamic dispatch or generic type, because you cannot name the type of a closure.</p>\n\n<p>For example, with <code>fn</code> poitners:</p>\n\n<pre><code>struct Foo {\n    my_func: fn(f64) -&gt; f64\n}\n</code></pre>\n\n<p>Or with dynamic dispatch and references:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    my_func: &amp;'a dyn Fn(f64) -&gt; f64,\n}\n</code></pre>\n\n<p><em>Or</em> with a mutable state:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    my_func: &amp;'a mut dyn FnMut(f64) -&gt; f64,\n}\n</code></pre>\n\n<p>Without a lifetime:</p>\n\n<pre><code>struct Foo {\n   my_func: Box&lt;dyn FnMut(f64) -&gt; f64&gt;\n}\n</code></pre>\n\n<blockquote>\n  <p>I think there's gonna be a performance penalty when storing it on the heap too or am I mistaken here?</p>\n</blockquote>\n\n<p>Yes, there's frequently a penalty with dynamic dispatch due to the double indirection of going through the vtable. <em>I believe</em>, I'm not sure, there's also a penalty because of a lack of monomorphization. But, these are both not important unless they're quantifiable. </p>\n\n<blockquote>\n<pre><code>pub const SIGMOID: Fn(f64) -&gt; f64 = |x| 1.0 / (1.0 + E.powf(x));\n</code></pre>\n</blockquote>\n\n<p>This can become </p>\n\n<pre><code>pub const SIGMOID: fn(f64) -&gt; f64 = |x| 1.0 / (1.0 + E.powf(x));\n</code></pre>\n\n<p>And <a href=\"https://doc.rust-lang.org/std/primitive.fn.html\" rel=\"nofollow noreferrer\"><code>fn</code> pointers</a> implement all of the <code>Fn*</code> traits:</p>\n\n<blockquote>\n  <p>In addition, function pointers of <em>any</em> signature, ABI, or safety are <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a>, and all <em>safe</em> function pointers implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\"><code>Fn</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"nofollow noreferrer\"><code>FnMut</code></a>, and <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"nofollow noreferrer\"><code>FnOnce</code></a>. This works because these traits are specially known to the compiler.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "edited": false, "score": 0, "creation_date": 1569183126, "post_id": 58050292, "comment_id": 102504012, "body": "Wow that is exactly what I was looking for. Are function pointers a new feature? When I was last doing Rust (start of 2018) I did not come across them. Thank you"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1569163576, "creation_date": 1569163576, "answer_id": 58050292, "question_id": 58049565, "link": "https://stackoverflow.com/questions/58049565/creating-a-struct-that-has-an-exchangable-function/58050292#58050292", "title": "Creating a struct, that has an exchangable function", "body": "<p>There is no performance penalty to the <code>dyn</code> keyword versus not using it. Not using it is considered unclear and will not be supported in a future version of Rust.</p>\n\n<p>Given that <code>Fn(f64) -&gt; f64</code> is a trait, any type could implement it, and any two functions are considered different types. If you want to be flexible enough to use any implementor of this trait, then you will <em>need</em> to use dynamic dispatch \u2014 which I presume is the performance hit you want to avoid.</p>\n\n<p>You can get full generality, using dynamic dispatch by boxing the function, so the field only contains a pointer, which has a known size. The actual function will be allocated on the heap, and can have any size.</p>\n\n<pre><code>pub struct MyStruct {\n    someFunction: Box&lt;dyn Fn(f64) -&gt; f64&gt;,\n}\n</code></pre>\n\n<p>If you absolutely cannot bear to use dynamic dispatch, you can use a <em>function pointer</em> instead of a trait object. A function pointer is a special type (not a trait), that <code>fn</code> items can be coerced to. Most closures however <em>cannot</em> be coerced to a function pointer because they would need to implement <code>Copy</code>. Essentially that means the \"closure\" doesn't close over anything and could have just as easily have been written as a function item. That would look like this:</p>\n\n<pre><code>pub struct MyStruct {\n    // Notice: lower case fn\n    some_function: fn(f64) -&gt; f64,\n}\n\n// Notice: lower case fn\npub const SIGMOID: fn(f64) -&gt; f64 = |x| 1.0 / (1.0 + E.powf(x));\n\nfn main() {\n    let s = MyStruct {\n        some_function: SIGMOID,\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 58050292, "answer_count": 2, "score": 1, "last_activity_date": 1569163760, "creation_date": 1569157954, "last_edit_date": 1569163760, "question_id": 58049565, "link": "https://stackoverflow.com/questions/58049565/creating-a-struct-that-has-an-exchangable-function", "title": "Creating a struct, that has an exchangable function", "body": "<p>I would like to have a struct, that contains a function set by the user of that struct. I came up with something like this:</p>\n\n<pre><code>pub struct MyStruct {\n    some_function: Fn(f64) -&gt; f64\n}\n</code></pre>\n\n<p>I then want to define a set of constants that can be picked when creating a <code>MyStruct</code> instance. I tried it like this:</p>\n\n<pre><code>pub const SIGMOID: Fn(f64) -&gt; f64 = |x| 1.0 / (1.0 + E.powf(x));\n</code></pre>\n\n<p>I get a compile error, that the <code>Fn(f64) -&gt; f64</code> doesn't have a size known at compile-time and a warning to use the <code>dyn</code> keyword. I don't want to use the <code>dyn</code> keyword, because of the performance penalty. Do I have to put that constant on the heap using <code>Box</code> or is there a more lightweight way to do this? I think there's gonna be a performance penalty when storing it on the heap too or am I mistaken here?</p>\n"}, {"tags": ["parallel-processing", "rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569136439, "post_id": 58046436, "comment_id": 102493001, "body": "Multiple misconceptions here. <code>vec![0..128]</code> is a vector with one element, which happens to be a range. And <code>par_apply</code> takes a <code>Fn</code> anyway, you can&#39;t mutate a captured variable inside it. But it is not clear what you want, hard to give suggestions."}, {"owner": {"reputation": 321, "user_id": 9853391, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71a4ec22a1b64e539e0b092c4f3db76b?s=128&d=identicon&r=PG&f=1", "display_name": "Danny", "link": "https://stackoverflow.com/users/9853391/danny"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1569139098, "post_id": 58046436, "comment_id": 102493411, "body": "ah sorry i have corrected the mistakes. hope it is clearer now."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1569176293, "last_edit_date": 1569176293, "creation_date": 1569140934, "answer_id": 58047412, "question_id": 58046436, "link": "https://stackoverflow.com/questions/58046436/using-ndarray-parallel-zip-to-iterate-through-rows-of-a-array2-and-items-of-arra/58047412#58047412", "title": "Using ndarray_parallel Zip to iterate through rows of a Array2 and items of Array1", "body": "<p>Multiple misconceptions in your code, correct me if any of the followings is not what you want:</p>\n\n<ul>\n<li><code>b</code> seems to serve as index to the vector. You can use <code>Zip::indexed</code> to produce index along with element directly, no need for an explicit index array.</li>\n<li><code>axis_iter</code> returns an iterator which traverses all axis of underlying <code>ndarray</code>. You probably want <code>index_axis</code> to traverse one of them.</li>\n<li>Your arrays host both integers and floats. In <code>rust</code> you can't apply arithmetic operations between the two.</li>\n<li><code>par_apply</code> takes a <code>Fn</code>, so it can't mutate captured variables.</li>\n</ul>\n\n<p>All things considered, the code probably should look like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use ndarray::{Array2, Zip, Axis};\nuse ndarray_parallel::prelude::*;\n\nfn main() {\n    let a = Array2::&lt;f64&gt;::zeros((5, 5));\n    let mut d = vec![1.,2.,3.,4.,5.];\n\n    Zip::indexed(a.index_axis(Axis(0), 0))\n        .and(&amp;mut d)\n        .par_apply(|_i, x, y| *y = x + 10.);\n}\n</code></pre>\n"}], "owner": {"reputation": 321, "user_id": 9853391, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71a4ec22a1b64e539e0b092c4f3db76b?s=128&d=identicon&r=PG&f=1", "display_name": "Danny", "link": "https://stackoverflow.com/users/9853391/danny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 58047412, "answer_count": 1, "score": 0, "last_activity_date": 1569176293, "creation_date": 1569131796, "last_edit_date": 1569139061, "question_id": 58046436, "link": "https://stackoverflow.com/questions/58046436/using-ndarray-parallel-zip-to-iterate-through-rows-of-a-array2-and-items-of-arra", "title": "Using ndarray_parallel Zip to iterate through rows of a Array2 and items of Array1", "body": "<p>I would like to  iterate through rows of an Array2 and items of an Array1 in parallel and do some computation on them with side effects.</p>\n\n<p>I tried something like below, </p>\n\n<pre><code>extern crate ndarray;\nextern crate ndarray_parallel;\n\nuse ndarray::{Array2, Array, Zip, Axis};\nuse ndarray_parallel::prelude::*;\n\nfn main() {\n    let mut a = Array2::&lt;f64&gt;::zeros((5, 5));\n    let b = Array::from_iter(0..5);\n    let c = vec![1,2,3,4,5];\n    let mut d = vec![1,2,3,4,5];\n\n    let z = Zip::from(a.axis_iter(Axis(0))).and(&amp;b);\n    z.par_apply(|x,y| {d[*y as usize] =  10});\n}\n</code></pre>\n\n<p>But the compiler is complaining.</p>\n\n<p>Can anyone advise?</p>\n"}, {"tags": ["rust", "rustdoc"], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1569132288, "creation_date": 1569132288, "answer_id": 58046479, "question_id": 58046137, "link": "https://stackoverflow.com/questions/58046137/why-does-veciter-mut-not-show-up-in-the-documentation-index-of-stdvecvec/58046479#58046479", "title": "Why does Vec::iter_mut not show up in the documentation index of std::vec::Vec?", "body": "<p>The sidebar only shows methods that use the <code>Deref</code> implementation, not those that use the <code>DerefMut</code> implementation. As such, the sidebar only shows non-mutable slice methods. This is a <a href=\"https://github.com/rust-lang/rust/issues/60326\" rel=\"noreferrer\">known bug</a>. A fix has been merged and can be seen in <a href=\"https://doc.rust-lang.org/beta/std/vec/struct.Vec.html\" rel=\"noreferrer\">the documentation for the beta release</a>. I assume then that the fix will be in next stable release.</p>\n"}], "owner": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 58046479, "answer_count": 1, "score": 2, "last_activity_date": 1569151576, "creation_date": 1569127944, "last_edit_date": 1569151576, "question_id": 58046137, "link": "https://stackoverflow.com/questions/58046137/why-does-veciter-mut-not-show-up-in-the-documentation-index-of-stdvecvec", "title": "Why does Vec::iter_mut not show up in the documentation index of std::vec::Vec?", "body": "<p>In <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter</a>,</p>\n\n<p>I can only find <code>iter</code> in the index sidebar to the left of the page. However, <code>iter_mut</code> could not be found.</p>\n\n<p>Could anyone explain if it's intentional, or a bug?</p>\n\n<p>This is inconvenient because search through text is hard when browsing from phone. I was scrolling through the index and could not find <code>iter_mut</code>.</p>\n\n<p><a href=\"https://i.stack.imgur.com/TPCA3.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/TPCA3.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["enums", "rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569154421, "post_id": 58044095, "comment_id": 102496735, "body": "I don&#39;t think this is answerable. There&#39;s no set of traits that &quot;all&quot; types should implement; it depends on the type. <code>Eq</code> and <code>Ord</code> may not be appropriate for an enum with an <code>Unknown</code> variant, for instance. There <i>is</i> harm in deriving too much, because adding a trait implementation is a backwards-compatible change, but removing one is not. My recommendation is to <code>#[derive(Debug)]</code> on every externally visible type, and decide the rest on a case by case basis. Programming is an exercise in thinking, not just typing; this is something you need to <i>think</i> about."}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1569163402, "post_id": 58044095, "comment_id": 102498785, "body": "What do you need <code>Ord</code> and <code>PartialOrd</code> for? Does it even make sense to order the variants?"}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 3, "last_activity_date": 1569102084, "creation_date": 1569102084, "answer_id": 58044319, "question_id": 58044095, "link": "https://stackoverflow.com/questions/58044095/what-traits-should-simple-enums-in-rust-derive/58044319#58044319", "title": "What traits should simple enums in Rust derive?", "body": "<p>A good summary can be found at the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html\" rel=\"nofollow noreferrer\">Rust API Guidelines</a>. You've got most of the common traits they recommend, but you may also want to add <code>Display</code> and possibly <code>Default</code> if there's one variant you think of as more basic. The <a href=\"https://jeltef.github.io/derive_more/derive_more/\" rel=\"nofollow noreferrer\"><code>derive_more</code> crate</a> can help smooth the process of implementing <code>Display</code>.</p>\n\n<p>There are lots more recommendations there, so you should take a look and see if any apply to your specific situation.</p>\n"}], "owner": {"reputation": 5469, "user_id": 7083401, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/eA15o.png?s=128&g=1", "display_name": "ice1000", "link": "https://stackoverflow.com/users/7083401/ice1000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 710, "favorite_count": 0, "accepted_answer_id": 58044319, "answer_count": 1, "score": 2, "last_activity_date": 1569151271, "creation_date": 1569099998, "last_edit_date": 1569151271, "question_id": 58044095, "link": "https://stackoverflow.com/questions/58044095/what-traits-should-simple-enums-in-rust-derive", "title": "What traits should simple enums in Rust derive?", "body": "<p>I have a lot of enums like this, they have only tags -- without any constructor parameters:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum VarRec {\n    Variant,\n    Record,\n}\n</code></pre>\n\n<p>I'm currently deriving them with these traits:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, PartialEq, Eq, Copy, Clone, Ord, PartialOrd, Hash)]\n</code></pre>\n\n<p>I wish they can have the maximum number of traits implemented, as the enum is really simple and I don't want them to lose any power by missing a trait implementation. Anything else to add to the derive list?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": false, "score": 1, "last_activity_date": 1569098522, "creation_date": 1569098522, "answer_id": 58043941, "question_id": 58043900, "link": "https://stackoverflow.com/questions/58043900/how-to-use-const-inside-modules/58043941#58043941", "title": "How to use const inside modules?", "body": "<p>It means it is only visible from the <code>delicious_snacks</code> module.</p>\n\n<p>To use <code>delicious_snacks::fruit</code> and the other constants,  they need to be exported publicly from the module using the <code>pub</code> modifier:</p>\n\n<pre><code>mod delicious_snacks {\n    pub use self::fruits::PEAR as fruit;\n    pub use self::veggies::CUCUMBER as veggie;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1569098541, "creation_date": 1569098541, "answer_id": 58043943, "question_id": 58043900, "link": "https://stackoverflow.com/questions/58043900/how-to-use-const-inside-modules/58043943#58043943", "title": "How to use const inside modules?", "body": "<p>The accessibility of an item defined with <code>use</code> is independent from the accessibility of the used item. This means that while <code>PEAR</code> is public, <code>use self::fruits::PEAR as fruit;</code> is private. You must export those items publicly:</p>\n\n<pre><code>pub use self::fruits::PEAR as fruit;\npub use self::veggies::CUCUMBER as veggie;\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e24e25ef5b64972bf3fb95fafa29006b\" rel=\"noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 344, "user_id": 8381551, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Tshja5lubyg/AAAAAAAAAAI/AAAAAAAAA3I/zaJcCvK5Nss/photo.jpg?sz=128", "display_name": "IamSaquib", "link": "https://stackoverflow.com/users/8381551/iamsaquib"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 0, "accepted_answer_id": 58043943, "answer_count": 2, "score": 3, "last_activity_date": 1593026782, "creation_date": 1569098131, "last_edit_date": 1593026782, "question_id": 58043900, "link": "https://stackoverflow.com/questions/58043900/how-to-use-const-inside-modules", "title": "How to use const inside modules?", "body": "<p>I have the following code:</p>\n<pre><code>mod delicious_snacks {\n    use self::fruits::PEAR as fruit;\n    use self::veggies::CUCUMBER as veggie;\n\n    mod fruits {\n        pub const PEAR: &amp;'static str = &quot;Pear&quot;;\n        pub const APPLE: &amp;'static str = &quot;Apple&quot;;\n    }\n\n    mod veggies {\n        pub const CUCUMBER: &amp;'static str = &quot;Cucumber&quot;;\n        pub const CARROT: &amp;'static str = &quot;Carrot&quot;;\n    }\n}\n\nfn main() {\n    println!(\n        &quot;favorite snacks: {} and {}&quot;,\n            delicious_snacks::fruit,\n            delicious_snacks::veggie\n    );\n}\n</code></pre>\n<p>I'm getting an error that fruit and veggie <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=502fcbbca86129646e9443544266c592\" rel=\"nofollow noreferrer\">are private</a> when I try to print them:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0603]: constant `fruit` is private\n  --&gt; src/main.rs:19:31\n   |\n19 |             delicious_snacks::fruit,\n   |                               ^^^^^\n\nerror[E0603]: constant `veggie` is private\n  --&gt; src/main.rs:20:31\n   |\n20 |             delicious_snacks::veggie\n   |                               ^^^^^^\n</code></pre>\n<p>Can any one explain me this and help me resolve?</p>\n"}, {"tags": ["random", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569098235, "post_id": 58043766, "comment_id": 102488074, "body": "According to the documentation, the type is actually <a href=\"https://rust-random.github.io/rand/rand/rngs/struct.ThreadRng.html\" rel=\"nofollow noreferrer\"><code>rand::rngs::ThreadRng</code></a>. Have you tried that?"}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569098471, "post_id": 58043766, "comment_id": 102488126, "body": "No. I missed that little note. Reading the source code gave me no clue."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569098554, "post_id": 58043766, "comment_id": 102488144, "body": "It works! Post that as an answer and I will accept. Spent an hour trying all sorts of things... Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1569098678, "creation_date": 1569098678, "answer_id": 58043968, "question_id": 58043766, "link": "https://stackoverflow.com/questions/58043766/how-do-i-store-a-random-number-generator-in-a-struct/58043968#58043968", "title": "How do I store a Random number generator in a struct?", "body": "<p>If you look at the documentation <a href=\"https://rust-random.github.io/rand/rand/fn.thread_rng.html\" rel=\"nofollow noreferrer\"><code>rand::thread_rng</code></a>, you can click on its return type to see that its fully qualified name is actually <a href=\"https://rust-random.github.io/rand/rand/rngs/struct.ThreadRng.html\" rel=\"nofollow noreferrer\"><code>rand::rngs::ThreadRng</code></a>.</p>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 0, "accepted_answer_id": 58043968, "answer_count": 1, "score": 2, "last_activity_date": 1569098678, "creation_date": 1569096859, "question_id": 58043766, "link": "https://stackoverflow.com/questions/58043766/how-do-i-store-a-random-number-generator-in-a-struct", "title": "How do I store a Random number generator in a struct?", "body": "<p>I am trying to store a Random number generator in a struct. I can't seem to get the struct definition for any Rng structs to be recognized, like ThreadRng. This works:</p>\n\n<pre><code>use rand::{\n    self,\n    distributions::{Distribution, Uniform},\n}; // 0.6.4\n\nfn main() {\n    let mut rng  = rand::thread_rng();\n    let die_range = Uniform::new_inclusive(1, 6);\n    let die = die_range.sample(&amp;mut rng);\n    println!(\"{}\", die);\n}\n</code></pre>\n\n<p>However, if I try to define a variable to have the actual type of the Rng, I get an error:</p>\n\n<pre><code>use rand::{\n    self,\n    ThreadRng,\n    distributions::{Distribution, Uniform},\n}; // 0.6.4\n\nfn main() {\n    let mut rng :ThreadRng = rand::thread_rng();\n    let die_range = Uniform::new_inclusive(1, 6);\n    let die = die_range.sample(&amp;mut rng);\n    println!(\"{}\", die);\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre><code>error[E0432]: unresolved import `rand::ThreadRng`\n --&gt; src/main.rs:3:5\n  |\n3 |     ThreadRng,\n  |     ^^^^^^^^^\n  |     |\n  |     no `ThreadRng` in the root\n  |     help: a similar name exists in the module: `thread_rng`\n</code></pre>\n\n<p>I want to store the Rng in a struct, and I do not want a trait object. How do I import the definition of ThreadRng? Or XorShiftRng (which might be faster - I do not need cryptographic strength)? Is the type in some sub-module I don't know about? All the examples I read online call a method to get the Rng and use it locally; they never store it in a struct and never define any variables that use the struct name.</p>\n"}, {"tags": ["string", "reference", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1569093297, "post_id": 58043281, "comment_id": 102486963, "body": "Looks like you want <code>String</code> instead of <code>&amp;str</code> as the type of <code>url</code>."}, {"owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1569094785, "post_id": 58043281, "comment_id": 102487291, "body": "Indeed, but I&#39;d like to <i>not</i> store a <code>String</code> in my structure - the strings in there are not supposed to be mutable."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569094850, "post_id": 58043281, "comment_id": 102487308, "body": "@ClementNerma You <i>build</i> the URL, it&#39;s not borrowed from elsewhere. You have to store it somewhere, mutable or not. The fact <code>String</code> is mutable is just a bonus here, the important point is that it owns the str"}, {"owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "edited": false, "score": 0, "creation_date": 1569094905, "post_id": 58043281, "comment_id": 102487318, "body": "That&#39;s true, but I can&#39;t figure out <i>why</i> I can&#39;t put this new <code>&amp;str</code> inside this structure, as it should live long enough for that."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569094953, "post_id": 58043281, "comment_id": 102487327, "body": "@ClementNerma <code>&amp;str</code> is a reference to <i>something</i>, as the <code>&amp;</code> hints at. You can&#39;t just chuck the string away and keep the slice version of it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569094975, "post_id": 58043281, "comment_id": 102487333, "body": "The reason you want the owned type (<code>String</code>) is for owned purposes, not for mutability (that&#39;s a completely different thing)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1569095047, "post_id": 58043281, "comment_id": 102487349, "body": "At the end of the function, the valus that are created are either dropped or moved. If you don&#39;t move the str (ie return it in an owning structure), it&#39;s dropped and references to it makes no sense anymore."}, {"owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1569095805, "post_id": 58043281, "comment_id": 102487551, "body": "@DenysS&#233;guret I see your point, that&#39;s why I was struggling at. Thanks for the explanation ;)"}], "answers": [{"tags": [], "owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "is_accepted": false, "score": 0, "last_activity_date": 1569187191, "last_edit_date": 1569187191, "creation_date": 1569095920, "answer_id": 58043660, "question_id": 58043281, "link": "https://stackoverflow.com/questions/58043281/returning-a-structure-referencing-a-new-str/58043660#58043660", "title": "Returning a structure referencing a new &amp;str", "body": "<p>As @DenysS\u00e9guret pointed out in the comments:</p>\n\n<blockquote>\n  <p>At the end of the function, the values that are created are either dropped or moved. If you don't move the <code>str</code> (ie return it in an owning structure), it's dropped and references to it makes no sense anymore.</p>\n</blockquote>\n\n<p>Plus, according to <a href=\"https://users.rust-lang.org/t/solved-how-to-return-str-from-format/12838\" rel=\"nofollow noreferrer\">this question</a> posted on Rust's users forum, it is indeed not possible to return a <code>&amp;str</code> from a \"freshly-generated\" string.</p>\n"}], "owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1569187191, "creation_date": 1569092677, "question_id": 58043281, "link": "https://stackoverflow.com/questions/58043281/returning-a-structure-referencing-a-new-str", "title": "Returning a structure referencing a new &amp;str", "body": "<p>I'm currently writing a program and at some point I have to deal with a structure containing <code>&amp;str</code> values. Let's consider it has this look:</p>\n\n<pre><code>struct Book&lt;'a&gt; {\n    url: &amp;'a str,\n}\n</code></pre>\n\n<p>I have a function that fetches a book from a remote storage and returns an URL pointing to that book, which looks like this:</p>\n\n<pre><code>fn fetch_book&lt;'a&gt;(id: u64) -&gt; Book&lt;'a&gt; {\n  // do some stuff to get a 'key' variable that allows to access the book\n  Book {\n    // Here we turn the formatted String into an &amp;str\n    url: &amp;format!(\"https://&lt;ip-address&gt;/books?id={}&amp;key={}\", id, key)\n  }\n}\n</code></pre>\n\n<p>This function won't compile because Rust tells we are returning a value that references data owned by the current function.</p>\n\n<p>So, what can I do to make this function works properly (without going <code>unsafe</code>)?</p>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 0, "creation_date": 1569088757, "post_id": 58042709, "comment_id": 102485850, "body": "What&#39;s the question? Does the EBNF not work? Do you have trouble throwing the error?"}, {"owner": {"reputation": 9249, "user_id": 456809, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a8e60ef50534769dba78843acf8bb82d?s=128&d=identicon&r=PG", "display_name": "Breedly", "link": "https://stackoverflow.com/users/456809/breedly"}, "reply_to_user": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 0, "creation_date": 1569089221, "post_id": 58042709, "comment_id": 102485954, "body": "@ForceBru specifically, how do I express: Number = NonZeroDigit { Digit };"}], "owner": {"reputation": 9249, "user_id": 456809, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/a8e60ef50534769dba78843acf8bb82d?s=128&d=identicon&r=PG", "display_name": "Breedly", "link": "https://stackoverflow.com/users/456809/breedly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1569089298, "creation_date": 1569087968, "last_edit_date": 1569089298, "question_id": 58042709, "link": "https://stackoverflow.com/questions/58042709/begins-with-non-zero-digit-using-nom", "title": "Begins with non-zero digit using nom?", "body": "<p>I'm trying to write a markdown parser using <code>nom</code> and the EBNF shown <a href=\"https://github.com/jbranchaud/js-play/blob/master/Markdown/grammar.md#ebnf\" rel=\"nofollow noreferrer\">here</a>. I'm a little stuck as how to express begins with non-zero digit when trying to parse a number.</p>\n\n<pre><code>Number = NonZeroDigit { Digit };\nNonZeroDigit = \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\nDigit = \"0\" | NonZeroDigit;\n</code></pre>\n\n<p><strong>TLDR:</strong> How do you implement <code>Number = NonZeroDigit { Digit };</code></p>\n\n<p>My current implementation looks like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    fn number(s:&amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n        let (_, head) = peek(1)(s)?\n        if (is_non_zero_digit(head[0])) {\n            return digit1(s)\n        } else {\n            return make_error(s, kind: ErrorKind.IsA)\n        }    \n    }\n</code></pre>\n\n<p>This one also seems a bit more simple and in line with <code>nom</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn number(s:&amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n    let (_, head) = peek(1)(s)?\n    cond(is_non_zero_digit(head[0]),digit1)(s)    \n}\n</code></pre>\n\n<p>I'm not sure if I want to be throwing an error of some sort? Because it could just be that this is not a number, but some kind of string like a date or time. Perhaps it doesn't even make sense to include the notion of a <code>Number</code> in the grammar for markdown?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1569148253, "post_id": 58042483, "comment_id": 102495305, "body": "Hi there, a few quick tips on how to ask better questions here on SO. (a) &quot;<i>I think the code can self-explain.&quot;</i> -&gt; it never hurts to explain it in a few sentences. (b) Add the full code and full error message to your post (as I&#39;ve done for you now). (c) Tell us <i>what</i> you don&#39;t understand about the error. (d) Try to simplify your code before posting, search term <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. In general: show that you care, otherwise you can&#39;t expect others to care."}], "answers": [{"tags": [], "owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "is_accepted": true, "score": 1, "last_activity_date": 1569089420, "last_edit_date": 1569089420, "creation_date": 1569088746, "answer_id": 58042790, "question_id": 58042483, "link": "https://stackoverflow.com/questions/58042483/a-collection-of-type-i32-cannot-be-built-from-stditeriteratoritem/58042790#58042790", "title": "A collection of type `i32` cannot be built from `std::iter::Iterator&lt;Item=_&gt;`", "body": "<p>You don't need to iterate over tuple and call <code>collect</code> at all. It creates a collection but your goal is just one <code>i32</code> value. There is the fixed code: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9d82172d483035ca437fe826c5e9da86\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I also parsed values in advance and added <code>_</code> branch in <code>matche</code>es because it should be exhaustive. Ideally, you don't need <code>match</code> either.</p>\n\n<p>Update: a shorter version of the same code: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a9a344c64f42332eb26f2a68fa260f72\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a9a344c64f42332eb26f2a68fa260f72</a></p>\n"}, {"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 0, "last_activity_date": 1569089900, "last_edit_date": 1569089900, "creation_date": 1569089404, "answer_id": 58042884, "question_id": 58042483, "link": "https://stackoverflow.com/questions/58042483/a-collection-of-type-i32-cannot-be-built-from-stditeriteratoritem/58042884#58042884", "title": "A collection of type `i32` cannot be built from `std::iter::Iterator&lt;Item=_&gt;`", "body": "<p>In the statement <code>[(vec[0],vec[1],vec[2])].iter()</code>, you create a (fixed length) array with one element, then immediately iterate over it. The only iterator method you use is <code>map</code>, so it would probably be much more idiomatic to simply have</p>\n\n<pre><code>let year = vec[0];\nlet month = vec[1];\nlet day = vec[2];\n</code></pre>\n\n<p>and then continue from there without using <code>map</code>. Better yet, you can use this as an opportunity to parse <code>day</code> as an integer, rather than having to parse on every branch of the match statements. This will also fix the issue you have that the type that <code>day</code> parses into can't be inferred. You'd have to write <code>day.parse::&lt;i32&gt;()</code> every time you parse it, so it's much easier to just to that once at the top. You may as well also parse <code>year</code>, since you're going to need to do that below anyway. After these changes, you won't want to parse <code>day</code> and <code>year</code> again, so remove all the <code>.parse().unwrap()</code> statements on them.</p>\n\n<pre><code>let year: i32 = vec[0].parse().unwrap();\nlet month = vec[1];\nlet day: i32 = vec[2].parse().unwrap();\n</code></pre>\n\n<p>After that, the changes the compiler suggests should be enough to get this to work. You no longer need to match <code>month</code> as a <code>&amp;&amp;str</code> (e.g. <code>&amp;\"01\"</code>) since you're not creating an array of <code>&amp;str</code> and iterating over references into it (in your original code, it would have been better to use <code>into_iter()</code> instead of <code>iter()</code> to avoid that). Additionally, the compiler will tell you that the match on <code>month</code> isn't exhaustive. You'll need to add a catch-all branch in case the input doesn't match any of the other branches. I'd suggest something like <code>_ =&gt; panic!(\"Invalid month\")</code> at the end of the match statements.</p>\n\n<hr>\n\n<p>Just some extra tips to get your code looking a lot better. The command <code>cargo fmt</code> (this tool also exists under \"TOOLS\" on the playground) will automatically format your code to a more idiomatic style. This just makes it easier to read in general. I'd also recommend running <code>cargo clippy</code> (also available on the playground) to catch any possible errors and get your code even more idiomatic. In this case, clippy makes a few small suggestions.</p>\n\n<p>Just a general coding tip, I'd also separate this function into a function that parses the date, and one that finds the number of the day in the year. That way you don't need to do both at once and it's easier to think about. (This doesn't quite fit the format that the challenge gives you, so you'd have to call this parse function from inside the <code>day_of_year</code> function).</p>\n\n<p>I understand that the challenge asks you to return <code>i32</code>, but since this is a computation that might fail, it would be far better to return an <code>Option&lt;i32&gt;</code> (or better yet, a <code>Result&lt;i32, Error&gt;</code>, where <code>Error</code> is some description of the possible ways this can go wrong). This would work best if you also follow the suggestion above to separate this into two functions. Then you can parse and validate the date in the first function, and then given a valid date, calculate the day of the year. This would let you remove all the <code>unwrap</code> calls (and the explicit panic I suggested). Knowing your function won't panic is a nice feeling.</p>\n\n<p>Finally, there's a lot of repetition in this code, so you might be able to factor things out and not repeat yourself so much. For example, instead of having two match statements depending on whether it's a leap year or not, just have a single match and add one if it's a leap year. You might also want to have the number of days in each month in an array like <code>[31, 28, 31, 30, ...]</code>. Then you can just use the month number and add up the appropriate number of days.</p>\n\n<p>(also, a very small quibble: the problem specifies that it uses the Gregorian calendar, which doesn't have special cases for leap years at multiples of 3,200 or 172,800)</p>\n"}], "owner": {"reputation": 366, "user_id": 11492659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e61e264c1094508a0ae578af2fc03e6?s=128&d=identicon&r=PG&f=1", "display_name": "hzqelf", "link": "https://stackoverflow.com/users/11492659/hzqelf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 918, "favorite_count": 0, "accepted_answer_id": 58042790, "answer_count": 2, "score": 0, "last_activity_date": 1569148049, "creation_date": 1569086257, "last_edit_date": 1569148049, "question_id": 58042483, "link": "https://stackoverflow.com/questions/58042483/a-collection-of-type-i32-cannot-be-built-from-stditeriteratoritem", "title": "A collection of type `i32` cannot be built from `std::iter::Iterator&lt;Item=_&gt;`", "body": "<p>Today I try to solve a problem on <a href=\"https://leetcode.com/problems/day-of-the-year/\" rel=\"nofollow noreferrer\">LeetCode</a>. This is my code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=750ec92f41d19231f2fcf1e7ef3c330c\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[test]\nfn basic_test() {\n    assert_eq!(day_of_year(\"2019-01-09\".to_string()), 9);\n    assert_eq!(day_of_year(\"2019-02-10\".to_string()), 41);\n    assert_eq!(day_of_year(\"2003-03-01\".to_string()), 60);\n    assert_eq!(day_of_year(\"2004-03-01\".to_string()), 61);\n}\n\npub fn day_of_year(date: String) -&gt; i32 {\n    let vec: Vec&lt;&amp;str&gt; = date.split(\"-\").collect();\n    [(vec[0],vec[1],vec[2])].iter().map(|(year,month,day)|\n        match month {\n            &amp;\"01\" =&gt; day.parse().unwrap(),\n            &amp;\"02\" =&gt; day.parse().unwrap() + 31,\n            _ =&gt; match year.parse().unwrap(){\n                y if y%4==0&amp;&amp;y%100!=0 \n                    ||y%400==0&amp;&amp;y%3200!=0 \n                    ||y%172800==0=&gt;\n                        match month {\n                            &amp;\"03\" =&gt; day.parse().unwrap()+31+29,\n                            &amp;\"04\" =&gt; day.parse().unwrap()+31+29+31,\n                            &amp;\"05\" =&gt; day.parse().unwrap()+31+29+31+30,\n                            &amp;\"06\" =&gt; day.parse().unwrap()+31+29+31+30+31,\n                            &amp;\"07\" =&gt; day.parse().unwrap()+31+29+31+30+31+30,\n                            &amp;\"08\" =&gt; day.parse().unwrap()+31+29+31+30+31+30+31,\n                            &amp;\"09\" =&gt; day.parse().unwrap()+31+29+31+30+31+30+31+31,\n                            &amp;\"10\" =&gt; day.parse().unwrap()+31+29+31+30+31+30+31+31+30,\n                            &amp;\"11\" =&gt; day.parse().unwrap()+31+29+31+30+31+30+31+31+30+31,\n                            &amp;\"12\" =&gt; day.parse().unwrap()+31+29+31+30+31+30+31+31+30+31+30\n                        },\n                _ =&gt; match month{\n                        &amp;\"03\" =&gt; day.parse().unwrap()+31+28,\n                        &amp;\"04\" =&gt; day.parse().unwrap()+31+28+31,\n                        &amp;\"05\" =&gt; day.parse().unwrap()+31+28+31+30,\n                        &amp;\"06\" =&gt; day.parse().unwrap()+31+28+31+30+31,\n                        &amp;\"07\" =&gt; day.parse().unwrap()+31+28+31+30+31+30,\n                        &amp;\"08\" =&gt; day.parse().unwrap()+31+28+31+30+31+30+31,\n                        &amp;\"09\" =&gt; day.parse().unwrap()+31+28+31+30+31+30+31+31,\n                        &amp;\"10\" =&gt; day.parse().unwrap()+31+28+31+30+31+30+31+31+30,\n                        &amp;\"11\" =&gt; day.parse().unwrap()+31+28+31+30+31+30+31+31+30+31,\n                        &amp;\"12\" =&gt; day.parse().unwrap()+31+28+31+30+31+30+31+31+30+31+30\n                }\n            }\n        }\n    ).collect()\n}\n</code></pre>\n\n<p>I think the code can self-explain. I'm getting this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `i32` cannot be built from an iterator over elements of type `_`\n  --&gt; src/lib.rs:45:7\n   |\n45 |     ).collect()\n   |       ^^^^^^^ a collection of type `i32` cannot be built from `std::iter::Iterator&lt;Item=_&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;_&gt;` is not implemented for `i32`\n</code></pre>\n\n<p>I tried changing it to <code>collect::&lt;Vec&lt;i32&gt;&gt;[0]</code>. But still getting the compile error. Let me know how can I change the code to make it compile.</p>\n"}, {"tags": ["opengl", "rust", "glsl", "framebuffer", "compute-shader"], "answers": [{"comments": [{"owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 0, "creation_date": 1569095422, "post_id": 58043489, "comment_id": 102487455, "body": "Nice catch! An edited version of the source would be better still. :-)"}, {"owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 0, "creation_date": 1569095758, "post_id": 58043489, "comment_id": 102487539, "body": "I&#39;m still learning Rust too, but will be happy to proof-read &amp; test your attempt. It&#39;s the least I can do, seeing as I&#39;ve been trying to find this bug since shortly after it was posted. ;-) Basically, you just need to have the GL-code wrapped in the &quot;unsafe&quot;-keyword."}, {"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "edited": false, "score": 1, "creation_date": 1569097321, "post_id": 58043489, "comment_id": 102487861, "body": "so if i got that right the bindings are permanent and the only thing I have to do in my drawing loop is dispatch the shader wait for barrier bit and blit buffer?"}, {"owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 1, "creation_date": 1569097489, "post_id": 58043489, "comment_id": 102487903, "body": "Looks like eylion made the same fixes I did. Anyway, it&#39;s running for me now."}, {"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "reply_to_user": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 0, "creation_date": 1569098176, "post_id": 58043489, "comment_id": 102488061, "body": "@Jackalope if your code worked could you post it? Mine doesnt work jet. I still get a black screen. I even added some error feedback from compiling the shader, to exclude errors in the shader."}, {"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "edited": false, "score": 0, "creation_date": 1569099985, "post_id": 58043489, "comment_id": 102488466, "body": "@Rabbid76 jup thats true, but I have it in there in my code, and it didnt worked. To be sure i moved it to the right spot in Jackalopes code but still just got a blue screen"}, {"owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 0, "creation_date": 1569104875, "post_id": 58043489, "comment_id": 102489229, "body": "Glad you got it working, eylion. Maybe I broke it when I merged the unsafe blocks? Any chance you can post the working code so I can study it too?"}, {"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "edited": false, "score": 0, "creation_date": 1569109791, "post_id": 58043489, "comment_id": 102489877, "body": "no thats no problem, you could put your whole code in one giant unsafe-block it does not hurt anything, but thats not that smart todo, because the unsafe-block lets you brake rusts memmory-security ensuring ownership-system, which is nacessery in some places (like opengl operations), but you should only use them where necessery, so you can spot unsafe parts, when debugging."}, {"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "reply_to_user": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "edited": false, "score": 0, "creation_date": 1569109897, "post_id": 58043489, "comment_id": 102489893, "body": "@Jackalope I just made a more ordered version, I can post"}, {"owner": {"reputation": 67968, "user_id": 584192, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YBSIc.png?s=128&g=1", "display_name": "Samuel Liew", "link": "https://stackoverflow.com/users/584192/samuel-liew"}, "edited": false, "score": 0, "creation_date": 1569143616, "post_id": 58043489, "comment_id": 102494292, "body": "Comments are not for extended discussion; this conversation has been <a href=\"https://chat.stackoverflow.com/rooms/199787/discussion-on-answer-by-rabbid76-rendering-compute-shader-output-to-screen\">moved to chat</a>."}], "tags": [], "owner": {"reputation": 138010, "user_id": 5577765, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LoGpC.jpg?s=128&g=1", "display_name": "Rabbid76", "link": "https://stackoverflow.com/users/5577765/rabbid76"}, "is_accepted": true, "score": 2, "last_activity_date": 1569104347, "last_edit_date": 1569104347, "creation_date": 1569094323, "answer_id": 58043489, "question_id": 58042393, "link": "https://stackoverflow.com/questions/58042393/rendering-compute-shader-output-to-screen/58043489#58043489", "title": "Rendering compute-shader output to screen", "body": "<p>There is an issue when you generate the texture. The initial value of <code>TEXTURE_MIN_FILTER</code> is <code>NEAREST_MIPMAP_LINEAR</code>. If you don't change it and you don't create mipmaps, then the texture is not \"complete\".<br>\nSet the <code>TEXTURE_MIN_FILTER</code> to either <code>NEAREST</code> or <code>LINEAR</code> to solve the issue:</p>\n\n<pre><code>gl::BindTexture(gl::TEXTURE_2D, tex_out);\ngl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MIN_FILTER, gl::LINEAR)\n</code></pre>\n\n<hr>\n\n<p>You've rendered an image from a compute shader to a texture object, but in order to blit that texture to the screen, you must copy that texture image to the color plane of the default framebuffer. It is not possible to change the default framebuffer's color plane simply by attaching a texture.</p>\n\n<p>Instead, you need to create a named <a href=\"https://www.khronos.org/opengl/wiki/Framebuffer_Object\" rel=\"nofollow noreferrer\">Framebuffer Object</a> (<a href=\"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGenFramebuffers.xhtml\" rel=\"nofollow noreferrer\"><code>glGenFramebuffers</code></a>, <a href=\"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindFramebuffer.xhtml\" rel=\"nofollow noreferrer\"><code>glBindFramebuffer</code></a>) and attach the texture object to the color plane of the framebuffer (<a href=\"https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glFramebufferTexture2D.xml\" rel=\"nofollow noreferrer\"><code>glFramebufferTexture2D</code></a>).</p>\n\n<pre><code>let mut fbo : gl::types::GLuint = 0;\ngl::GenFramebuffers(1, &amp;mut fbo);\ngl::BindFramebuffer(gl::FRAMEBUFFER, fbo);\ngl::FramebufferTexture2D(gl::FRAMEBUFFER, gl::COLOR_ATTACHMENT0, gl::TEXTURE_2D, tex_out, 0)\n</code></pre>\n\n<p>Bind this framebuffer to the target <code>GL_READ_FRAMEBUFFER</code> (<a href=\"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBindFramebuffer.xhtml\" rel=\"nofollow noreferrer\"><code>glBindFramebuffer</code></a>) and bind the default frame buffer (zero) to the target <code>GL_DRAW_FRAMEBUFFER</code>.</p>\n\n<pre><code>gl::BindFramebuffer(gl::READ_FRAMEBUFFER, fbo);\ngl::BindFramebuffer(gl::DRAW_FRAMEBUFFER, 0);\n</code></pre>\n\n<p>Finally, in the render loop, use <a href=\"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glBlitFramebuffer.xhtml\" rel=\"nofollow noreferrer\"><code>glBlitFramebuffer</code></a> to copy the content of the named frambuffer object (the texture) to the color plane of the default framebuffer. </p>\n\n<pre><code>gl::DispatchCompute(width as gl::types::GLuint, height as gl::types::GLuint, 1);\ngl::MemoryBarrier(gl::SHADER_IMAGE_ACCESS_BARRIER_BIT);\ngl::BlitFramebuffer(\n    0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei,\n    0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei,\n    gl::COLOR_BUFFER_BIT, gl::LINEAR);\n</code></pre>\n\n<p>Note, by the use of <code>glBlitFramebuffer</code>, the size of the viewport can be different to the size of the texture image.<br>\nThis approach won't work if the format of the texture would be integral. It works, because the format of the texture image is floating point and the format of the default framebuffer is fixed-point.</p>\n"}, {"comments": [{"owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "edited": false, "score": 0, "creation_date": 1569098988, "post_id": 58043902, "comment_id": 102488250, "body": "well, the program runs, but it still doesnt seem to work jet. I get a blue screen, which is the background color you defined (gl::ClearColor(0.1, 0.30, 0.50, 1.0)), but not the full white texture the compute-shader schould output"}, {"owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "reply_to_user": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "edited": false, "score": 0, "creation_date": 1569099540, "post_id": 58043902, "comment_id": 102488371, "body": "I was getting a white screen at one point, but the exit-function wasn&#39;t working. I&#39;ll return to this soon..."}], "tags": [], "owner": {"reputation": 1898, "user_id": 856947, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/uFcyq.jpg?s=128&g=1", "display_name": "Jackalope", "link": "https://stackoverflow.com/users/856947/jackalope"}, "is_accepted": false, "score": 1, "last_activity_date": 1569100551, "last_edit_date": 1569100551, "creation_date": 1569098144, "answer_id": 58043902, "question_id": 58042393, "link": "https://stackoverflow.com/questions/58042393/rendering-compute-shader-output-to-screen/58043902#58043902", "title": "Rendering compute-shader output to screen", "body": "<p>Here's a revision with the suggested fixes and a few polishes:</p>\n\n<pre><code>extern crate sdl2;\nextern crate gl;\n\n//use sdl2::pixels::Color;\n//use std::ffi::{CStr, CString};\nuse std::ffi::{CString};\n\nfn main() {\n\nlet width = 512;\nlet height = 512;\n\nlet sdl = sdl2::init().unwrap();\nlet video_sys = sdl.video().unwrap();\n\nlet gl_attr = video_sys.gl_attr();\ngl_attr.set_context_profile(sdl2::video::GLProfile::Core);\ngl_attr.set_context_version(4, 1);\n\nlet window = video_sys.window(\"test\", width, height).opengl().build().unwrap();\nlet _gl_ctx = window.gl_create_context().unwrap();\n\nlet _gl = gl::load_with(|s| video_sys.gl_get_proc_address(s) as *const std::os::raw::c_void);\n\n\nunsafe {\n    gl::Viewport(0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei);\n    gl::ClearColor(0.1, 0.30, 0.50, 1.0);\n\n    let shader = gl::CreateShader(gl::COMPUTE_SHADER);\n    gl::ShaderSource(shader, 1, &amp;CString::new(include_str!(\"screen.comp\")).unwrap().as_ptr(), std::ptr::null());\n    gl::CompileShader(shader);\n\n    let program = gl::CreateProgram();\n    gl::AttachShader(program, shader);\n    gl::LinkProgram(program);\n    gl::UseProgram(program);\n\n    let mut tex_out : gl::types::GLuint = 0;\n\n    gl::GenTextures(1, &amp;mut tex_out);\n    gl::ActiveTexture(gl::TEXTURE0);\n    gl::BindTexture(gl::TEXTURE_2D, tex_out);\n    gl::TexImage2D( gl::TEXTURE_2D, 0, gl::RGBA32F as gl::types::GLint, width as gl::types::GLsizei, height as gl::types::GLsizei, 0, gl::RGBA, gl::FLOAT, std::ptr::null() );\n    let mut event_pump = sdl.event_pump().unwrap();\n    let mut fbo: gl::types::GLuint = 0;\n\n    gl::BindImageTexture(0, tex_out, 0, gl::FALSE, 0, gl::WRITE_ONLY, gl::RGBA32F);\n    gl::GenFramebuffers(1, &amp;mut fbo);\n    gl::BindFramebuffer(gl::FRAMEBUFFER, fbo);\n    gl::FramebufferTexture2D(gl::FRAMEBUFFER, gl::COLOR_ATTACHMENT0, gl::TEXTURE_2D, tex_out, 0);\n    gl::BindFramebuffer(gl::READ_FRAMEBUFFER, fbo);\n    gl::BindFramebuffer(gl::DRAW_FRAMEBUFFER, 0);\n\n\n\n    'main: loop {\n\n        for event in event_pump.poll_iter() {\n            match event {\n                sdl2::event::Event::Quit {..} =&gt; break 'main,\n                _ =&gt; {},\n            }\n        }\n\n        gl::Clear(gl::COLOR_BUFFER_BIT);\n        gl::DispatchCompute(width as gl::types::GLuint, height as gl::types::GLuint, 1);\n        gl::MemoryBarrier(gl::SHADER_IMAGE_ACCESS_BARRIER_BIT);\n        gl::BlitFramebuffer(\n            0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei,\n            0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei,\n            gl::COLOR_BUFFER_BIT, gl::LINEAR);\n\n        window.gl_swap_window();\n    }\n\n\n  }\n\n}\n</code></pre>\n"}], "owner": {"reputation": 160, "user_id": 10619655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/201e16a23e105be9cdfe79c0fb1e92f2?s=128&d=identicon&r=PG&f=1", "display_name": "eylion", "link": "https://stackoverflow.com/users/10619655/eylion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 870, "favorite_count": 2, "accepted_answer_id": 58043489, "answer_count": 2, "score": 2, "last_activity_date": 1569176199, "creation_date": 1569085504, "last_edit_date": 1569176199, "question_id": 58042393, "link": "https://stackoverflow.com/questions/58042393/rendering-compute-shader-output-to-screen", "title": "Rendering compute-shader output to screen", "body": "<p>I'm trying to set up a pipeline to do some raymarching-rendering.</p>\n\n<p>At first I set up a vertex and a geometry shader to take just 1 arbitrary float, and make a quad so I can use just the fragment shader, and input data via passing it through all shaders or uniforms.</p>\n\n<p>But then I came across the compute shader, and found some tutorials but all just did nearly the same, making a quad and rendering compute-shaders output to it, I think that's pretty stupid, if you have the possibility to render how you want with the compute shader and still do tricks to get your result.</p>\n\n<p>After some further research i found the function 'glFramebufferImage2D' and as far as I understood it, it attaches an ImageTexture (the one I wrote to with my compute shader in my case) to the Framebuffer (the buffer thats displayed as far as i understood it). So i dont have to do the quad generating trick.\nBut the code I wrote just shows a black screen.\nDid i get something wrong? or did i missed something in my code?</p>\n\n<p>This is my code:\n(I'm not worrying about warnings and detaching shader-programs yet. I just wanted to test the concept for now.)</p>\n\n<p>main.rs</p>\n\n<pre><code>extern crate sdl2;\nextern crate gl;\n\nuse sdl2::pixels::Color;\nuse std::ffi::{CStr, CString};\n\n\nfn main() {\n\n    let width = 512;\n    let height = 512;\n\n    let sdl = sdl2::init().unwrap();\n    let video_sys = sdl.video().unwrap();\n\n    let gl_attr = video_sys.gl_attr();\n    gl_attr.set_context_profile(sdl2::video::GLProfile::Core);\n    gl_attr.set_context_version(4, 1);\n\n    let window = video_sys.window(\"test\", width, height).opengl().build().unwrap();\n    let gl_ctx = window.gl_create_context().unwrap();\n\n    let gl = gl::load_with(|s| video_sys.gl_get_proc_address(s) as *const std::os::raw::c_void);\n\n\n    unsafe {\n        gl::Viewport(0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei);\n        gl::ClearColor(0.0, 0.0, 0.0, 1.0);\n    }\n\n    let shader = unsafe { gl::CreateShader(gl::COMPUTE_SHADER) };\n    unsafe {\n        gl::ShaderSource(shader, 1, &amp;CString::new(include_str!(\"screen.comp\")).unwrap().as_ptr(), std::ptr::null());\n        gl::CompileShader(shader);\n    }\n\n    let program = unsafe { gl::CreateProgram() };\n    unsafe {\n        gl::AttachShader(program, shader);\n        gl::LinkProgram(program);\n        gl::UseProgram(program);\n    }\n\n    let mut tex_out : gl::types::GLuint = 0;\n    unsafe {\n        gl::GenTextures(1, &amp;mut tex_out);\n        gl::ActiveTexture(gl::TEXTURE0);\n        gl::BindTexture(gl::TEXTURE_2D, tex_out);\n        gl::TexImage2D(\n            gl::TEXTURE_2D,\n            0,\n            gl::RGBA32F as gl::types::GLint,\n            width as gl::types::GLsizei,\n            height as gl::types::GLsizei,\n            0,\n            gl::RGBA,\n            gl::FLOAT,\n            std::ptr::null()\n        );\n        gl::BindImageTexture(0, tex_out, 0, gl::FALSE, 0, gl::WRITE_ONLY, gl::RGBA32F);\n    }\n\n\n    let mut event_pump = sdl.event_pump().unwrap();\n\n    'main: loop {\n\n        for event in event_pump.poll_iter() {\n            match event {\n                sdl2::event::Event::Quit {..} =&gt; break 'main,\n                _ =&gt; {},\n            }\n        }\n\n        unsafe {\n            gl::DispatchCompute(width as gl::types::GLuint, height as gl::types::GLuint, 1);\n            gl::MemoryBarrier(gl::SHADER_IMAGE_ACCESS_BARRIER_BIT);\n            gl::FramebufferTexture2D(gl::FRAMEBUFFER, gl::COLOR_ATTACHMENT0, gl::TEXTURE_2D, tex_out, 0);\n        }\n\n        window.gl_swap_window();\n\n    }\n\n}\n</code></pre>\n\n<p>screen.comp</p>\n\n<pre><code>#version 430\nlayout(local_size_x = 1, local_size_y = 1) in;\nlayout(rgba32f, binding = 0) uniform image2D img_output;\n\nvoid main() {\n\n    vec4 pixel = vec4(1.0, 1.0, 1.0, 1.0);\n\n    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);\n\n    imageStore(img_output, pixel_coords, pixel);\n\n}\n</code></pre>\n\n<p>EDIT:\nthe working code:\n(with some color test)</p>\n\n<p>main.rs:</p>\n\n<pre><code>extern crate sdl2;\nextern crate gl;\n\nuse std::ffi::{CStr, CString};\n\n\nstruct Renderer {\n    width : u32 ,\n    height : u32 ,\n    shader : gl::types::GLuint ,\n    program : gl::types::GLuint ,\n}\n\nimpl Renderer {\n\n    fn new(width : u32, height : u32, shader_name : &amp;CStr) -&gt; Self {\n\n        unsafe {\n            gl::Viewport(0, 0, width as gl::types::GLsizei, height as gl::types::GLsizei);\n            gl::ClearColor(0.0, 0.0, 0.0, 1.0);\n        }\n\n        let shader = unsafe { gl::CreateShader(gl::COMPUTE_SHADER) };\n        unsafe {\n            gl::ShaderSource(shader, 1, &amp;shader_name.as_ptr(), std::ptr::null());\n            gl::CompileShader(shader);\n        }\n\n        let program = unsafe { gl::CreateProgram() };\n        unsafe {\n            gl::AttachShader(program, shader);\n            gl::LinkProgram(program);\n            gl::UseProgram(program);\n        }\n\n        let mut tex_out : gl::types::GLuint = 0;\n        unsafe {\n            gl::GenTextures(1, &amp;mut tex_out);\n            gl::ActiveTexture(gl::TEXTURE0);\n            gl::BindTexture(gl::TEXTURE_2D, tex_out);\n            gl::TexParameteri(gl::TEXTURE_2D, gl::TEXTURE_MIN_FILTER, gl::LINEAR as gl::types::GLint);\n            gl::TexImage2D(\n                gl::TEXTURE_2D,\n                0,\n                gl::RGBA32F as gl::types::GLint,\n                width as gl::types::GLsizei,\n                height as gl::types::GLsizei,\n                0,\n                gl::RGBA,\n                gl::FLOAT,\n                std::ptr::null()\n            );\n            gl::BindImageTexture(0, tex_out, 0, gl::FALSE, 0, gl::WRITE_ONLY, gl::RGBA32F);\n        }\n\n        let mut fbo : gl::types::GLuint = 0;\n        unsafe {\n            gl::GenFramebuffers(1, &amp;mut fbo );\n            gl::BindFramebuffer(gl::FRAMEBUFFER, fbo );\n            gl::FramebufferTexture2D(gl::FRAMEBUFFER, gl::COLOR_ATTACHMENT0, gl::TEXTURE_2D, tex_out, 0);\n            gl::BindFramebuffer(gl::READ_FRAMEBUFFER, fbo);\n            gl::BindFramebuffer(gl::DRAW_FRAMEBUFFER, 0);\n        }\n\n        let resolution = unsafe { gl::GetUniformLocation(program, CString::new(\"iResolution\").unwrap().as_ptr()) };\n        unsafe { gl::Uniform2i(resolution, width as gl::types::GLint, height as gl::types::GLint); }\n\n        Self {\n            width : width ,\n            height : height ,\n            shader : shader ,\n            program : program ,\n        }\n\n    }\n\n    fn get_input(&amp;self, name : &amp;str) -&gt; gl::types::GLint {\n        unsafe { gl::GetUniformLocation(self.program, CString::new(name).unwrap().as_ptr()) }\n    }\n\n    fn input1f(&amp;self, ptr : gl::types::GLint, f : gl::types::GLfloat) {\n        unsafe { gl::Uniform1f(ptr, f) };\n    }\n\n    fn draw(&amp;self) {\n\n        unsafe {\n            gl::DispatchCompute(self.width as gl::types::GLuint, self.height as gl::types::GLuint, 1);\n            gl::MemoryBarrier(gl::SHADER_IMAGE_ACCESS_BARRIER_BIT);\n            gl::BlitFramebuffer(0, 0, self.width as gl::types::GLint, self.height as gl::types::GLint, 0, 0, self.width as gl::types::GLint, self.height as gl::types::GLint, gl::COLOR_BUFFER_BIT, gl::LINEAR);\n        }\n\n    }\n\n}\n\nimpl Drop for Renderer {\n\n    fn drop(&amp;mut self) {\n        unsafe {\n            gl::DeleteShader(self.shader);\n            gl::DeleteProgram(self.program);\n        }\n    }\n\n}\n\n\nfn main() {\n\n    let width = 512;\n    let height = 512;\n\n    let sdl = sdl2::init().unwrap();\n    let video_sys = sdl.video().unwrap();\n\n    let gl_attr = video_sys.gl_attr();\n    gl_attr.set_context_profile(sdl2::video::GLProfile::Core);\n    gl_attr.set_context_version(4, 1);\n\n    let window = video_sys.window(\"test\", width, height).opengl().build().unwrap();\n    let _gl_ctx = window.gl_create_context().unwrap();\n\n    let _gl = gl::load_with(|s| video_sys.gl_get_proc_address(s) as *const std::os::raw::c_void);\n\n    let render = Renderer::new(width, height, &amp;CString::new(include_str!(\"screen.comp\")).unwrap());\n    let time_attr = render.get_input(\"time\");\n\n    let mut event_pump = sdl.event_pump().unwrap();\n\n    let mut time = 0.0;\n\n    'main: loop {\n\n        for event in event_pump.poll_iter() {\n            match event {\n                sdl2::event::Event::Quit {..} =&gt; break 'main,\n                _ =&gt; {},\n            }\n        }\n\n        time += 0.01;\n        if time &gt; 1.0 {\n            time = 0.0;\n        }\n\n        render.input1f(time_attr, time);\n        render.draw();\n        window.gl_swap_window();\n\n    }\n\n}\n</code></pre>\n\n<p>screen.comp:</p>\n\n<pre><code>#version 430\nlayout(local_size_x = 1, local_size_y = 1) in;\nlayout(rgba32f, binding = 0) uniform image2D img;\nuniform ivec2 iResolution;\n\nuniform float time;\n\nvoid main() {\n\n    ivec2 iCoords = ivec2(gl_GlobalInvocationID.xy);\n\n    vec2 uv = vec2(iCoords) / vec2(iResolution);\n\n    vec4 pixel = vec4(uv, time, 1.0);\n\n    imageStore(img, iCoords, pixel);\n\n}\n</code></pre>\n"}, {"tags": ["filter", "rust", "prime-factoring"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569076666, "post_id": 58041083, "comment_id": 102483072, "body": "This is not actually the Sieve of Eratosthenes; this is trial division. The difference is that in trial division, you test for divisibility by <code>p</code> all numbers not divisible by a prime less than <code>p</code>; in the sieve of Eratosthenes, you only deal with every <code>p</code>th number whether or not it has already been tested for divisibility by a smaller prime. I encourage you to read <a href=\"https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\" rel=\"nofollow noreferrer\">The Genuine Sieve of Eratosthenes</a>, which analyzes the time complexity of both methods and describes a neat iterator-like way to implement the true sieve."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569076751, "post_id": 58041083, "comment_id": 102483093, "body": "(Of course, if trial division is adequate for solving the problem, there is no shame to be had in using the slower method, especially if it is more readable.)"}, {"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569076811, "post_id": 58041083, "comment_id": 102483101, "body": "@trentcl I haven&#39;t had a math class in some 10 years so the direction is appreciated!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1569078108, "post_id": 58041083, "comment_id": 102483403, "body": "Maybe not <i>quite</i> a duplicate of <a href=\"https://stackoverflow.com/questions/30913384/is-it-possible-to-filter-on-a-vector-in-place\">is it possible to filter on a vector in-place?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1569076499, "creation_date": 1569076499, "answer_id": 58041279, "question_id": 58041083, "link": "https://stackoverflow.com/questions/58041083/unable-to-collect-a-filtered-a-vec-into-itself/58041279#58041279", "title": "Unable to collect a filtered a Vec into itself", "body": "<h3>Explanation</h3>\n\n<p>According to the error message, the expression <code>range.iter().filter(|&amp;n| *n % p != 0)</code> is an iterator over items of type <code>&amp;u32</code>: a reference to an <code>u32</code>. You expected an iterator over <code>u32</code> by value. So let's walk backwards: </p>\n\n<p>The <code>filter(...)</code> part of the iterator chain has actually nothing to do with your problem. When we take a look at <a href=\"https://doc.rust-lang.org/stable/core/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\"><code>Iterator::filter</code></a>, we see that it returns <a href=\"https://doc.rust-lang.org/stable/core/iter/struct.Filter.html\" rel=\"nofollow noreferrer\"><code>Filter&lt;Self, P&gt;</code></a>. This type implements <code>Iterator</code>:</p>\n\n<pre><code>impl&lt;I: Iterator, P&gt; Iterator for Filter&lt;I, P&gt;\nwhere\n    P: FnMut(&amp;I::Item) -&gt; bool,\n{\n    type Item = I::Item;\n    // ...\n}\n</code></pre>\n\n<p>The important part here is that <code>type Item = I::Item</code>, meaning that the item type of <code>I</code> (the original iterator) is passed through exactly. No reference is added.</p>\n\n<p>This leaves <code>.iter()</code>: that's the cause of the problem. <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html?search=#method.iter\" rel=\"nofollow noreferrer\"><code>Vec::iter</code></a> returns <a href=\"https://doc.rust-lang.org/stable/std/slice/struct.Iter.html\" rel=\"nofollow noreferrer\"><code>slice::Iter&lt;T&gt;</code></a> which implements <code>Iterator</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    // ...\n}\n</code></pre>\n\n<p>And here we see that the item type is a reference to <code>T</code> (the element type of the vector). </p>\n\n<p><br></p>\n\n<h3>Solutions</h3>\n\n<p>In general cases, you could call <code>.cloned()</code> on any iterator that iterates over references to get a new iterator that iterates over the items by value (by cloning each item). For types that implement <code>Copy</code> you can (and should) use <code>.copied()</code>. E.g. <code>range.iter().filter(|&amp;n| *n % p != 0).copied().collect()</code>.</p>\n\n<p><em>However</em>, in this case there is a better solution: since you don't need the vector afterwards anymore, you can just call <code>into_iter()</code> instead of <code>iter()</code> in order to directly get an iterator over <code>u32</code> by value. This consumes the vector, making it inaccessible afterwards. But, as said, that's not a problem here.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>range = range.into_iter().filter(|&amp;n| n % p != 0).collect();\n</code></pre>\n\n<p>Also note that I removed the <code>*</code> in <code>*n</code>, as the dereference is not necessary anymore.</p>\n\n<h3>Other hints</h3>\n\n<p>Always reallocating a new vector is not very fast. The Sieve of Eratosthenes is classically implemented in a different way: instead of storing the numbers, one only stores Booleans to denote for each number if it's prime or not. The numbers are never stored explicitly, but implicitly by using the indices of the vector/array. </p>\n\n<p>And to make it really fast, one should not use a <code>Vec&lt;bool&gt;</code> but instead a dedicated bitvec. <code>Vec&lt;bool&gt;</code> stores one byte per <code>bool</code>, although only one bit would be necessary. The de-facto crate that offers such a bit vector is <code>bit-vec</code>, which conveniently also shows an example implementation of Sieve of Eratosthenes <a href=\"https://docs.rs/bit-vec/0.6.1/bit_vec/\" rel=\"nofollow noreferrer\">in its documentation</a>.</p>\n"}], "owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "closed_date": 1569091344, "accepted_answer_id": 58041279, "answer_count": 1, "score": 3, "last_activity_date": 1569076499, "creation_date": 1569075037, "last_edit_date": 1569075581, "question_id": 58041083, "link": "https://stackoverflow.com/questions/58041083/unable-to-collect-a-filtered-a-vec-into-itself", "closed_reason": "Duplicate", "title": "Unable to collect a filtered a Vec into itself", "body": "<p>I've started working through the Project Euler problems in Rust and <a href=\"https://projecteuler.net/problem=3\" rel=\"nofollow noreferrer\">came across #3</a> where the easiest quick-approach would be to implement a <a href=\"https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\" rel=\"nofollow noreferrer\">Sieve of Eratosthenes</a>.</p>\n\n<p>In doing so, my algorithm creates an iterator to then filter non-primes out of and assign it back to the original vector, but I'm receiving an error that <code>Vec&lt;u32&gt;</code> can't be built from <code>Iterator&lt;Item=&amp;u32&gt;</code>.</p>\n\n<hr>\n\n<p>Code:</p>\n\n<pre><code>fn eratosthenes_sieve(limit: u32) -&gt; Vec&lt;u32&gt; {\n    let mut primes: Vec&lt;u32&gt; = Vec::new();\n    let mut range: Vec&lt;u32&gt; = (2..=limit).collect();\n    let mut length = range.len();\n\n    loop {\n        let p = range[0];\n        primes.push(p);\n\n        range = range.iter().filter(|&amp;n| *n % p != 0).collect();\n\n        if length == range.len() {\n            break;\n        }\n        length = range.len();\n    }\n\n    primes\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;u32&gt;` cannot be built from an iterator over elements of type `&amp;u32`\n  --&gt; src\\main.rs:42:55\n   |\n42 |         range = range.iter().filter(|&amp;n| *n % p != 0).collect();\n   |                                                       ^^^^^^^ a collection of type `std::vec::Vec&lt;u32&gt;` cannot be built from `std::iter::Iterator&lt;Item=&amp;u32&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;&amp;u32&gt;` is not implemented for `std::vec::Vec&lt;u32&gt;`\n</code></pre>\n\n<hr>\n\n<p>Why is the closure wrapping the values in extra borrows?</p>\n"}, {"tags": ["rust", "protocol-buffers"], "answers": [{"comments": [{"owner": {"reputation": 175, "user_id": 8946047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mUnWs.jpg?s=128&g=1", "display_name": "jl0x61", "link": "https://stackoverflow.com/users/8946047/jl0x61"}, "edited": false, "score": 0, "creation_date": 1569141748, "post_id": 58045074, "comment_id": 102493899, "body": "I ignored the last code piece of the documentation. Thanks for your detailed explaination!"}, {"owner": {"reputation": 4470, "user_id": 1884363, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/DmTLe.jpg?s=128&g=1", "display_name": "sudo", "link": "https://stackoverflow.com/users/1884363/sudo"}, "edited": false, "score": 1, "creation_date": 1588478691, "post_id": 58045074, "comment_id": 108909748, "body": "You have to also put the build.rs and lib.rs in the project&#39;s root directory, not <code>src</code>. I guess the doc assumes you know, but I&#39;m a n00b"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 4, "last_activity_date": 1569111098, "creation_date": 1569111098, "answer_id": 58045074, "question_id": 58040435, "link": "https://stackoverflow.com/questions/58040435/how-to-generate-codes-using-prost-in-rust/58045074#58045074", "title": "How to generate codes using prost in rust?", "body": "<p>You're right, this isn't very well explained in the docs, and this is because of the way build scripts work. Well, partly.</p>\n\n<p>Your protobuf implementations are under <code>target/{yourArch}/build/{yourCrateName}-{hash}/out</code>.</p>\n\n<p>This would be extremely hard to get to if it wasn't for environment variables. The important part of the documentation is the following snippet of code highlights the inclusion:</p>\n\n<pre><code>pub mod items {\n    include!(concat!(env!(\"OUT_DIR\"), \"/snazzy.items.rs\"));\n}\n</code></pre>\n\n<p>This includes the file available at <code>OUT_DIR</code> (the directory specified above, filled in automatically during compilation) and the name of the protobuf implementation (your package name in the protobuf file), and makes all its content structs available under <code>crate::items</code>.</p>\n\n<p>It makes sense for the files to reside in the build directory, as they are a build artefact. Code generation in the <code>src</code> folder of your crate would lead to chaos, both when it comes to version control and project sanity (you'd have a duplication of information, and the protobuf implementation, provided that it is sane, isn't <em>that</em> important to you. The functional blueprint is, however).</p>\n"}], "owner": {"reputation": 175, "user_id": 8946047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mUnWs.jpg?s=128&g=1", "display_name": "jl0x61", "link": "https://stackoverflow.com/users/8946047/jl0x61"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1124, "favorite_count": 1, "accepted_answer_id": 58045074, "answer_count": 1, "score": 3, "last_activity_date": 1569111098, "creation_date": 1569070162, "question_id": 58040435, "link": "https://stackoverflow.com/questions/58040435/how-to-generate-codes-using-prost-in-rust", "title": "How to generate codes using prost in rust?", "body": "<p>I don't know how to generate codes using <code>prost_build</code></p>\n\n<p>I have read the documents, but they don't give a detailed command of generating code.\nI type <code>cargo build</code> but no codes are generated.</p>\n\n<p>my <code>build.rs</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate prost_build;\nfn main() {\n    prost_build::compile_protos(&amp;[\"src/items.proto\"],\n                                &amp;[\"src/\"]).unwrap();\n}\n\n</code></pre>\n\n<p>my <code>Cargo.toml</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>[package]\nname = \"snazzy\"\nversion = \"0.1.0\"\nauthors = [\"xxx &lt;xxx@xxx.com&gt;\"]\nedition = \"2018\"\nbuild = \"build.rs\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nbytes = \"0.4\"\nprost = \"0.5\"\n\n[build-dependencies]\nprost-build = { version = \"0.4\"  }\n</code></pre>\n\n<p>my <code>items.proto</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>syntax = \"proto3\";\n\npackage snazzy.items;\n\nmessage Shirt {\n    enum Size {\n        SMALL = 0;\n        MEDIUM = 1;\n        LARGE = 2;\n    }\n    string color = 1;\n    Size size = 2;\n}\n\n</code></pre>\n\n<p>my file tree:</p>\n\n<pre><code>.\n\u251c\u2500\u2500 build.rs\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 items.proto\n    \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p>No build error but I can't see where the generated codes are.\nAny help will be appreciated!</p>\n"}, {"tags": ["rust", "console", "console-application", "rust-macros"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1569065783, "post_id": 58039413, "comment_id": 102480470, "body": "Hi there! I linked a Q&amp;A that answers your question. As SamM also explained: when reading from <code>stdin</code>, the trailing newline (usually <code>&quot;\\n&quot;</code>) is included in the string. When you print that string with <code>println!</code>, you have an extra newline."}], "answers": [{"tags": [], "owner": {"reputation": 101, "user_id": 9225581, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/818689f1cc8db066745643f3c18d802f?s=128&d=identicon&r=PG&f=1", "display_name": "SamM", "link": "https://stackoverflow.com/users/9225581/samm"}, "is_accepted": false, "score": 0, "last_activity_date": 1569062895, "creation_date": 1569062895, "answer_id": 58039537, "question_id": 58039413, "link": "https://stackoverflow.com/questions/58039413/rust-println-problem-weird-behavior-inside-the-println-macro/58039537#58039537", "title": "Rust println! problem - weird behavior inside the println macro", "body": "<p>It looks like there is a newline character at the end of the string you have read from stdin. The println macro is then adding a newline char to the end resulting in two newlines.</p>\n\n<p>You should strip away the newline character from the end of the text read from stdin, or just use print if you don't want to do that.</p>\n"}], "owner": {"reputation": 1, "user_id": 12099070, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-EfzFaNzMPhM/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rde69UIVbDreWHHrs8fwYCL9FL4mQ/photo.jpg?sz=128", "display_name": "Tom Buente", "link": "https://stackoverflow.com/users/12099070/tom-buente"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 221, "favorite_count": 0, "closed_date": 1569065724, "answer_count": 1, "score": 0, "last_activity_date": 1569062895, "creation_date": 1569061895, "question_id": 58039413, "link": "https://stackoverflow.com/questions/58039413/rust-println-problem-weird-behavior-inside-the-println-macro", "closed_reason": "Duplicate", "title": "Rust println! problem - weird behavior inside the println macro", "body": "<p>I am currently working on a simple \"user input\" program. The user can enter a number, which I get with \n<code>std::io::stdin().read_line(&amp;mut let_name_here).ok().expect(\"Error\");</code>. After getting the user input I want to print it to the console for a review.</p>\n\n<p>I have noticed strange behavior within the println! macro. The following code</p>\n\n<pre><code>println!(\"Your input: {}\", let_name_here);\nprintln!(\"Your input: {}\", let_name_here);\n</code></pre>\n\n<p>outputs this:</p>\n\n<pre><code>Your input: 15\n\nYour input: 15\n</code></pre>\n\n<p>Why is there an extra <code>\\n</code> in the <code>println!</code> marco. From my coding experience I would assume the following:</p>\n\n<pre><code>Your input: 15\nYour input: 15\n</code></pre>\n\n<p>But to achive this output I have to use folloing code:</p>\n\n<pre><code>print!(\"Your input: {}\", let_name_here);\nprint!(\"Your input: {}\", let_name_here);\n</code></pre>\n\n<p>I don't understand why the <code>println!</code> marco outputs<code>\\n</code> twice. What would I do, if I want to <code>\\n</code> at the end of the first line, with those two marcos it would not be possible. Am I missing something important?</p>\n"}, {"tags": ["windows", "events", "rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569063747, "post_id": 58038558, "comment_id": 102480050, "body": "We&#39;re going to need more than this to help you. In particular, are you using any window/GUI library such as GTK or otherwise? This is crucially important, as this is what will mediate the close event."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1569066054, "post_id": 58038558, "comment_id": 102480530, "body": "For transparency, this question was also <a href=\"https://www.reddit.com/r/rust/comments/d77yk4/how_can_you_capture_window_exit_button_on_windows/\" rel=\"nofollow noreferrer\">posted in Reddit</a>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1569070931, "post_id": 58038558, "comment_id": 102481607, "body": "&quot;<i>Is there any built-in code for this?</i>&quot; -&gt; No. This is an interaction with the platform dependent windowing-system. Your question is a bit too open ended and broad for SO. Asking on Reddit (as you already did) or on users.rust-lang.org would be a better idea. You can ask again here when you have a more specific question. Also, it&#39;s unclear if you&#39;re only asking about Microsoft Windows or about windows in general."}], "owner": {"reputation": 15, "user_id": 9109536, "user_type": "registered", "profile_image": "https://graph.facebook.com/203203076921184/picture?type=large", "display_name": "Joseph Yu", "link": "https://stackoverflow.com/users/9109536/joseph-yu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 113, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1569055212, "creation_date": 1569054543, "last_edit_date": 1569055212, "question_id": 58038558, "link": "https://stackoverflow.com/questions/58038558/how-can-you-capture-window-exit-button-with-rust", "title": "How can you capture window exit button with Rust?", "body": "<p>I just want to capture the event triggered by exiting the application via the X button of the window. I tried searching but to no avail. Is there any built-in code for this?</p>\n"}, {"tags": ["rust", "arm"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569063990, "post_id": 58038516, "comment_id": 102480086, "body": "Did you actually edit <code>.cargo&#47;config</code> <b>in that folder</b> pointing to the target type you&#39;re targetting? This is typically what happens when you skip that step"}, {"owner": {"reputation": 21, "user_id": 5320531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f82c4fb983491000553f292862274fb2?s=128&d=identicon&r=PG&f=1", "display_name": "Jordanish", "link": "https://stackoverflow.com/users/5320531/jordanish"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569128393, "post_id": 58038516, "comment_id": 102491839, "body": "@S&#233;bastienRenauld I didn&#39;t change anything in .cargo/config because it already points to cortex-M3, which is the example used in the book.  I edited my post."}], "answers": [{"tags": [], "owner": {"reputation": 1236, "user_id": 1176186, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/53a18d1ae5c3fe32415d91df159399bc?s=128&d=identicon&r=PG&f=1", "display_name": "thinkski", "link": "https://stackoverflow.com/users/1176186/thinkski"}, "is_accepted": false, "score": 0, "last_activity_date": 1577265927, "creation_date": 1577265927, "answer_id": 59476941, "question_id": 58038516, "link": "https://stackoverflow.com/questions/58038516/rust-cross-compiling-for-arm-skylake-is-not-a-recognized-processor-for-this-tar/59476941#59476941", "title": "rust cross compiling for arm: skylake is not a recognized processor for this target", "body": "<p>You need a toolchain, specifically a linker, which supports the target processor.</p>\n\n<p><code>rustup target add thumbv7m-none-eabi</code> only adds the standard library -- it does not install a linker. Once you get a linker, edit your <code>.cargo/config file</code> to:</p>\n\n<pre><code>[target.thumbv7m-none-eabi]\nlinker = \"arm-none-eabi-ld\"\n\n[build]\ntarget = \"thumbv7m-none-eabi\"\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 5320531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f82c4fb983491000553f292862274fb2?s=128&d=identicon&r=PG&f=1", "display_name": "Jordanish", "link": "https://stackoverflow.com/users/5320531/jordanish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1577265927, "creation_date": 1569054252, "last_edit_date": 1592644375, "question_id": 58038516, "link": "https://stackoverflow.com/questions/58038516/rust-cross-compiling-for-arm-skylake-is-not-a-recognized-processor-for-this-tar", "title": "rust cross compiling for arm: skylake is not a recognized processor for this target", "body": "<p>I'm following the rust book for embedded systems (this chapter <a href=\"https://rust-embedded.github.io/book/start/qemu.html\" rel=\"nofollow noreferrer\">https://rust-embedded.github.io/book/start/qemu.html</a>)</p>\n<p>When I &quot;cargo build&quot; the examples of the project referenced in the book (<a href=\"https://github.com/rust-embedded/cortex-m-quickstart\" rel=\"nofollow noreferrer\">https://github.com/rust-embedded/cortex-m-quickstart</a>) I get a lot of &quot;skylake is not a recognized processor for this target (ignoring processor)&quot; on the terminal.</p>\n<p>Running &quot;cargo size --bin app --release -- -A&quot; as explained in the book doesn't yield the same result as in the chapter I linked above. Instead I get:</p>\n<blockquote>\n<p>app  :</p>\n<p>section              size   addr</p>\n<p>.debug_str          11062    0x0</p>\n<p>.debug_loc            171    0x0</p>\n<p>.debug_abbrev         773    0x0</p>\n<p>.debug_info         10121    0x0</p>\n<p>.debug_ranges          40    0x0</p>\n<p>.debug_macinfo          1    0x0</p>\n<p>.debug_pubnames      1482    0x0</p>\n<p>.debug_pubtypes      8247    0x0</p>\n<p>.ARM.attributes        57    0x0</p>\n<p>.debug_frame          100    0x0</p>\n<p>.debug_line          1048    0x0</p>\n<p>.comment               18    0x0</p>\n<p>Total               33120</p>\n</blockquote>\n<p>There is no mention of the vector table, .text .rodata, .data. .bss</p>\n<p>And the resulting file can't be loaded onto the board. So I guess it failed to cross compile.</p>\n<p>Edit:\nI didn't change anything in the .cargo/config provided with the project.\nHere is the .cargo/config:</p>\n<pre><code>[target.thumbv7m-none-eabi]\n\n# uncomment this to make `cargo run` execute programs on QEMU\n# runner = &quot;qemu-system-arm -cpu cortex-m3 -machine lm3s6965evb -nographic -semihosting-config enable=on,target=native -kernel&quot;\n\n[target.'cfg(all(target_arch = &quot;arm&quot;, target_os = &quot;none&quot;))']\n# uncomment ONE of these three option to make `cargo run` start a GDB session\n# which option to pick depends on your system\n# runner = &quot;arm-none-eabi-gdb -q -x openocd.gdb&quot;\n# runner = &quot;gdb-multiarch -q -x openocd.gdb&quot;\n# runner = &quot;gdb -q -x openocd.gdb&quot;\n\nrustflags = [\n  # LLD (shipped with the Rust toolchain) is used as the default linker\n  &quot;-C&quot;, &quot;link-arg=-Tlink.x&quot;,\n  # if you run into problems with LLD switch to the GNU linker by commenting out\n  # this line\n  #&quot;-C&quot;, &quot;linker=arm-none-eabi-ld&quot;,\n  # if you need to link to pre-compiled C libraries provided by a C toolchain\n  # use GCC as the linker by commenting out both lines above and then\n  # uncommenting the three lines below\n  # &quot;-C&quot;, &quot;linker=arm-none-eabi-gcc&quot;,\n  # &quot;-C&quot;, &quot;link-arg=-Wl,-Tlink.x&quot;,\n  # &quot;-C&quot;, &quot;link-arg=-nostartfiles&quot;,\n  ]\n\n[build]\n# Pick ONE of these compilation targets\n# target = &quot;thumbv6m-none-eabi&quot;    # Cortex-M0 and Cortex-M0+\ntarget = &quot;thumbv7m-none-eabi&quot;    # Cortex-M3\n# target = &quot;thumbv7em-none-eabi&quot;   # Cortex-M4 and Cortex-M7 (no FPU)\n# target = &quot;thumbv7em-none-eabihf&quot; # Cortex-M4F and Cortex-M7F (with FPU)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569074739, "post_id": 58039862, "comment_id": 102482576, "body": "Thanks for detailed explanation. However this misses the other point &quot;Both futures must have the same error type, and if either finishes with an error then the other will be dropped and that error will be returned.&quot;"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569075319, "post_id": 58039862, "comment_id": 102482711, "body": "@ravi Adding extra. It won&#39;t be pretty, but it&#39;s the better way of doing it, as there is no real way to do it otherwise."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569076947, "post_id": 58039862, "comment_id": 102483139, "body": "@ravi Edited with a crude way to do it. Ideally you&#39;d wrap your futures to be infalliable <i>before</i> combining them."}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569077063, "post_id": 58039862, "comment_id": 102483170, "body": "Can&#39;t I sequence them using &#39;then&#39; like second futures would execute after first one but somehow I can carry forward result of first one."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569077288, "post_id": 58039862, "comment_id": 102483230, "body": "This calls for a better explanation of what you&#39;re actually trying to do. I assumed that you could drive them to completion independently - after all, if the first fails, was the second really independent of the first if you couldn&#39;t?"}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569078934, "post_id": 58039862, "comment_id": 102483595, "body": "So they are independent in a sense that failure of one shouldn&#39;t affect the other one. Both should execute sequentially/simultaneously to produce data which will be stored in maps and used for spawning third future."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1569079001, "post_id": 58039862, "comment_id": 102483613, "body": "Then I will delete my answer and write an entirely different one :-)"}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1569082113, "post_id": 58039862, "comment_id": 102484334, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/199772/discussion-between-ravi-and-sebastien-renauld\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1569082810, "last_edit_date": 1569082810, "creation_date": 1569065554, "answer_id": 58039862, "question_id": 58037955, "link": "https://stackoverflow.com/questions/58037955/sequencing-two-independent-futures-with-different-error-types/58039862#58039862", "title": "Sequencing two independent futures with different error types", "body": "<p>If both error and item types are heterogenous and you know <em>how many</em> futures you will chain, the simplest way to do so is to chain into an infallible <code>Future</code> (because that's what your remaining future really is) whose <code>Item</code> type is  a tuple of all the intermediate results.</p>\n\n<p>This can be relatively simply implemented by simple chaining:</p>\n\n<pre><code>let future1_casted = future1.then(future::ok::&lt;Result&lt;_, _&gt;, ()&gt;);\nlet future2_casted = future2.then(future::ok::&lt;Result&lt;_, _&gt;, ()&gt;);\n\nlet chain = future1_casted\n    .and_then(|result1| future2_casted.map(|result2| (result1, result2)));\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fabe33a9df047072bbbc7bf3fc76c40f\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>The final future type is a tuple containing all the results of the futures.</p>\n\n<p>If you do not know how many futures you are chaining, you will need to strengthen your requirements and explicitly know ahead of time the possible return types of your futures. Since it is not possible without macros to generate an arbitrary-sized tuple, you're going to need to store the intermediate results into a structure requiring homogeneous types.</p>\n\n<p>To solve this problem, defining tuples containing your types, for example for errors, is required:</p>\n\n<pre><code>#[derive(PartialEq, Debug)]\npub enum MyError {\n    Utf16Error(char::DecodeUtf16Error),\n    ParseError(num::ParseIntError)\n}\n\nimpl From&lt;char::DecodeUtf16Error&gt; for MyError {\n    fn from(e: char::DecodeUtf16Error) -&gt; Self {\n        MyError::Utf16Error(e)\n    }\n}\n\nimpl From&lt;num::ParseIntError&gt; for MyError {\n    fn from(e: num::ParseIntError) -&gt; Self {\n        MyError::ParseError(e)\n    }\n}\n</code></pre>\n\n<p>From there, combining futures follows the same route as before - turn a fallible future into an infallible <code>Result&lt;_, _&gt;</code> return, and combine then into a structure like a <code>Vec</code> with <a href=\"https://docs.rs/futures/0.2.0/futures/future/fn.loop_fn.html\" rel=\"nofollow noreferrer\"><code>future::loop_fn()</code></a></p>\n"}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 1, "accepted_answer_id": 58039862, "answer_count": 1, "score": 0, "last_activity_date": 1569082810, "creation_date": 1569048640, "question_id": 58037955, "link": "https://stackoverflow.com/questions/58037955/sequencing-two-independent-futures-with-different-error-types", "title": "Sequencing two independent futures with different error types", "body": "<p>I have code lined up as below :-</p>\n\n<pre><code>let done = client_a.\n    .get_future(data)\n    .then(move |result| {\n        // further processing on result\n        spawn a future here.\n    });\n\ntokio::run(done);\n</code></pre>\n\n<p>Now I have another future the result of which I want to process along with 'processing of result'.\nHowever, that future is completely independent of <code>client_a</code> which implies :-</p>\n\n<ul>\n<li>both could have different error types.</li>\n<li><p>failure of one should not stop other one.</p>\n\n<pre><code>let done = client_a.\n    .get_future(data)\n    .then(move |result| {\n        // how to fit in \n        // client_b.get_future\n        // here\n\n        // further processing on both results\n        spawn third future here.\n    });\n\n    tokio::run(done);\n</code></pre></li>\n</ul>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "edited": false, "score": 0, "creation_date": 1569041572, "post_id": 58037209, "comment_id": 102476152, "body": "thank you for your answer, so if let can be interpreted as: if <code>i</code> can be constructed from the wrapped value inside <code>a</code>, execute the statements inside the if. Yes?"}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "reply_to_user": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "edited": false, "score": 1, "creation_date": 1569045559, "post_id": 58037209, "comment_id": 102476603, "body": "That is an accurate interpretation, yes. (You also get to say that <code>i</code> can be used in the if statement as well, a nice bonus.) <code>if-let</code> is actually a shorthand for a <code>match</code> on <code>Option</code> values. See <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/if_let.html\" rel=\"nofollow noreferrer\">this nice example from the Rust By Example book</a>"}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "reply_to_user": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "edited": false, "score": 1, "creation_date": 1569090763, "post_id": 58037209, "comment_id": 102486325, "body": "Also I agree with the premise of your question. Many programmers are used to seeing <code>==</code> in if-conditions, and <code>=</code> is sometimes a typo. The exception being reading a chunk of data from a file, assigning it to a variable and immediately comparing it to null, seen e.g. in C and Java, though the assignment would be parenthesized. However it is getting fashionable to do initializations of variables (including via pattern-matching) in if and while conditions and have these new variables be scoped to the statement. It&#39;s convenient, for sure, but I agree with you it takes getting used to."}], "tags": [], "owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "is_accepted": true, "score": 9, "last_activity_date": 1569038910, "creation_date": 1569038910, "answer_id": 58037209, "question_id": 58037163, "link": "https://stackoverflow.com/questions/58037163/why-do-if-let-expressions-use-the-assignment-operator-instead-of-the-equality-op/58037209#58037209", "title": "Why do if-let expressions use the assignment operator instead of the equality operator?", "body": "<p>The Rust syntax is</p>\n\n<pre><code>let Some(i) = a\n</code></pre>\n\n<p>because we are <em>creating a new variable</em> <code>i</code> and initializing it with the wrapped value in <code>a</code>. The operator <code>=</code> is for creating new variables. You have a pattern on the left hand side, and an expression on the right. All variables on the left, in the pattern, get initialized based on the corresponding values in the expression on the right.</p>\n\n<p>The comparison operator <code>==</code> would not make sense here. To say</p>\n\n<pre><code>let Some(i) == a\n</code></pre>\n\n<p>would seem to return whether the expression</p>\n\n<pre><code>let Some(i)\n</code></pre>\n\n<p>is equal to the expression</p>\n\n<pre><code>a\n</code></pre>\n\n<p>When using <code>==</code> you expect the left and right hand sides to be complete expressions, that already have values, then you return whether they are equal. But that is not what we are doing in an if-let. When we use if-let we are creating a new variable. <code>==</code> only makes sense when the expressions on both sides of it can be evaluated.</p>\n\n<p>Similarly, the expression</p>\n\n<pre><code>let a == Some(i)\n</code></pre>\n\n<p>is quite odd, because <code>a</code> already exists. We certainly are not creating a new variable <code>a</code>. And the same argument against using <code>==</code> as before applies, since <code>i</code> does not yet exist.</p>\n\n<p>In summary we use <code>=</code> when creating a new variable and <code>==</code> for testing the equality of expressions (which if they have variables in them, such variables must already exist).</p>\n"}], "owner": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 2, "accepted_answer_id": 58037209, "answer_count": 1, "score": 6, "last_activity_date": 1593025568, "creation_date": 1569038295, "last_edit_date": 1593025568, "question_id": 58037163, "link": "https://stackoverflow.com/questions/58037163/why-do-if-let-expressions-use-the-assignment-operator-instead-of-the-equality-op", "title": "Why do if-let expressions use the assignment operator instead of the equality operator?", "body": "<p>I'm trying to wrap my head around if-let expressions. I know what it does but I can't find the rationale behind some details.</p>\n<p>The first detail is the use of the assignment operator instead of the equality operator, and the second one is the placement of the operands.</p>\n<p>For example:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let a = Some(5);\n\nif let Some(i) = a {\n    println!(&quot;Hello, {}!&quot;, i);\n}\n</code></pre>\n<p>In my head its more &quot;legible&quot; this way:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>if let Some(i) == a {\n    println!(&quot;Hello, {}!&quot;, i);\n}\n</code></pre>\n<p>Or even better:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>if let a == Some(i) {\n    println!(&quot;Hello, {}!&quot;, i);\n}\n</code></pre>\n<p>Could someone please help me understand the rationale behind this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 705, "user_id": 6789568, "user_type": "registered", "accept_rate": 41, "profile_image": "https://lh6.googleusercontent.com/-j1lrq2J0T3k/AAAAAAAAAAI/AAAAAAAAANs/f67R64q2G-0/photo.jpg?sz=128", "display_name": "Jarred Parr", "link": "https://stackoverflow.com/users/6789568/jarred-parr"}, "edited": false, "score": 0, "creation_date": 1569023996, "post_id": 58036097, "comment_id": 102474196, "body": "I just ran the code in the link you provided and it throws an error. What did you do to make it run?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1569024075, "post_id": 58036097, "comment_id": 102474203, "body": "Sorry, my bad, I messed up with your code, let me explain below in a minute..."}], "answers": [{"comments": [{"owner": {"reputation": 705, "user_id": 6789568, "user_type": "registered", "accept_rate": 41, "profile_image": "https://lh6.googleusercontent.com/-j1lrq2J0T3k/AAAAAAAAAAI/AAAAAAAAANs/f67R64q2G-0/photo.jpg?sz=128", "display_name": "Jarred Parr", "link": "https://stackoverflow.com/users/6789568/jarred-parr"}, "edited": false, "score": 0, "creation_date": 1569026842, "post_id": 58036292, "comment_id": 102474516, "body": "I&#39;m curious, where is <code>t2</code> getting created here?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 705, "user_id": 6789568, "user_type": "registered", "accept_rate": 41, "profile_image": "https://lh6.googleusercontent.com/-j1lrq2J0T3k/AAAAAAAAAAI/AAAAAAAAANs/f67R64q2G-0/photo.jpg?sz=128", "display_name": "Jarred Parr", "link": "https://stackoverflow.com/users/6789568/jarred-parr"}, "edited": false, "score": 0, "creation_date": 1569056866, "post_id": 58036292, "comment_id": 102478597, "body": "@JarredParr: <code>t2</code> is actually <code>temp</code> from a previous revision of my answer, fixed now. I shouldn&#39;t try to write so late at night..."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1569056806, "last_edit_date": 1569056806, "creation_date": 1569024641, "answer_id": 58036292, "question_id": 58036097, "link": "https://stackoverflow.com/questions/58036097/how-to-convert-optionstr-into-str/58036292#58036292", "title": "How to convert Option&lt;&amp;str&gt; into &amp;str?", "body": "<p>Your problem is not with the <code>Option</code> itself, but with the temporaries your code creates. Your main line is quite long, so lets dissect it a bit:</p>\n\n<pre><code>let temp: PathBuf = conicalize(PathBuf::from(filename)).unwrap();\nlet filename: &amp;str = temp.to_str();\n</code></pre>\n\n<p>And now you later code that uses <code>filename</code> just works. You may be wondering why writing the temporary variable makes a difference. The answer is that temporaries created by the compiler are destroyed at the end of the sentence that contains it.</p>\n\n<p>Note that the <code>filename</code> is actually a reference, so it must have an associated lifetime, which is, obviously<sup>1</sup>, that of variable <code>temp</code>. That means that <code>filename</code> cannot outlive <code>temp</code>. But in your code, <code>temp</code> is not actually a named variable but a temporary that gets destroyed as soon as the line completes, and <code>filename</code> is rendered unusable.</p>\n\n<p>If you read the full compiler error, you'll see a:</p>\n\n<blockquote>\n  <p>note: consider using a <code>let</code> binding to create a longer lived value.</p>\n</blockquote>\n\n<p>which suggest exactly this.</p>\n\n<p>[1]: Obvious if you read the definition of the function of <code>PathBuf</code>: <code>fn to_str&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a str&gt;</code> (adding the elided lifetime for clarity).</p>\n"}], "owner": {"reputation": 705, "user_id": 6789568, "user_type": "registered", "accept_rate": 41, "profile_image": "https://lh6.googleusercontent.com/-j1lrq2J0T3k/AAAAAAAAAAI/AAAAAAAAANs/f67R64q2G-0/photo.jpg?sz=128", "display_name": "Jarred Parr", "link": "https://stackoverflow.com/users/6789568/jarred-parr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 58036292, "answer_count": 1, "score": 2, "last_activity_date": 1593026142, "creation_date": 1569022039, "last_edit_date": 1593026142, "question_id": 58036097, "link": "https://stackoverflow.com/questions/58036097/how-to-convert-optionstr-into-str", "title": "How to convert Option&lt;&amp;str&gt; into &amp;str?", "body": "<p>I find <code>Option</code> to be somewhat confusing when it comes to lifetime scoping on variables. I've been trying to extract the underlying value from <code>Some</code> inside of an <code>Option</code> match pattern like so:</p>\n<pre><code>let filename = match canonicalize(&amp;PathBuf::from(filename)).unwrap().to_str() {\n    Some(path) =&gt; path,\n    _ =&gt; &quot;&quot;,\n};\n\n// Later, I validate the string content \nif filename.is_empty() {\n    do_something();\n}\n</code></pre>\n<p>However, this throws the following error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>temporary value dropped while borrowed: borrow later used here \n</code></pre>\n<p>The documentation doesn't give much insight on how to persist lifetimes outside of the scope of the call they're initialized in. I have seen examples <a href=\"https://users.rust-lang.org/t/can-not-understand-temporary-value-dropped-while-borrowed/23279\" rel=\"nofollow noreferrer\">here</a> and <a href=\"https://users.rust-lang.org/t/why-option-t-will-cause-temporary-value-dropped-while-borrowed/25581\" rel=\"nofollow noreferrer\">here</a>. Both examples imply either throwing out the value, or converting to an <code>Option</code>, neither of which I want. I simply want to get to the underlying <code>&amp;str</code> value once the function succeeds.</p>\n"}, {"tags": ["file", "import", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569011585, "post_id": 58034771, "comment_id": 102471615, "body": "Why can&#39;t I have all 3 files in the same directory? What if <code>main.rs</code> also instantiates an object of type <code>Addr</code>?"}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 1, "creation_date": 1569011648, "post_id": 58034771, "comment_id": 102471637, "body": "@Rodrigo Please read <a href=\"https://doc.rust-lang.org/rust-by-example/mod/split.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/rust-by-example/mod/split.html</a> it has all the answers."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "edited": false, "score": 0, "creation_date": 1569018704, "post_id": 58034771, "comment_id": 102473398, "body": "@Rodrigo, It&#39;s because each module can only own modules in certain places. <code>main.rs</code>, <code>lib.rs</code> and <code>mod.rs</code>-s can each own any files in the immediate directory they&#39;re located in, or another module in <code>&#47;name_of_module&#47;mod.rs</code>. This means you can have <code>main.rs</code> beside either <code>foo.rs</code> or <code>.&#47;foo&#47;mod.rs</code>. There&#39;s a new feature which is mentioned in this post, which allows a module to own any other modules in a folder named after it. If we take the above <code>.&#47;foo.rs</code> example, <code>foo.rs</code> could own <code>.&#47;foo&#47;bar.rs</code>."}], "tags": [], "owner": {"reputation": 2511, "user_id": 6797663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qIMd6.jpg?s=128&g=1", "display_name": "codemonkey", "link": "https://stackoverflow.com/users/6797663/codemonkey"}, "is_accepted": false, "score": -1, "last_activity_date": 1569012440, "last_edit_date": 1569012440, "creation_date": 1569011210, "answer_id": 58034771, "question_id": 58034305, "link": "https://stackoverflow.com/questions/58034305/cant-import-a-file-into-another-file-in-rust/58034771#58034771", "title": "Can&#39;t import a file into another file in Rust", "body": "<p>From the error message it looks like your addr.rs file is in the wrong place (src/addr.rs?). The following project layout would work:</p>\n\n<pre><code>\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.rs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 person\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 addr.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 person.rs\n</code></pre>\n\n<p>As would:</p>\n\n<pre><code>\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.rs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 person\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 addr\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 mod.rs   &lt;== this is addr.rs renamed\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 person.rs\n</code></pre>\n\n<p>Modules are hierarchical and form a tree from the crate root, either <code>src/main.rs</code> or <code>src/lib.rs</code>.</p>\n\n<p>The crate root can reference a module that is declared in another file, e.g.</p>\n\n<pre><code>mod module1\n</code></pre>\n\n<p>It then expects to find either a file called <code>src/module1.rs</code> or <code>src/module1/mod.rs</code>.</p>\n\n<p>But if <code>module1</code> references another module, <code>module2</code>, it is expected to be in either <code>src/module1/module2.rs</code> or <code>src/module1/module2/mod.rs</code>, nested under <code>module1</code>.</p>\n\n<p>See <a href=\"https://doc.rust-lang.org/book/ch07-05-separating-modules-into-different-files.html\" rel=\"nofollow noreferrer\">Separating Modules into different files</a> in the Rust Book.</p>\n\n<p>For <code>main.rs</code> to also use <code>Addr</code>, <code>person.rs</code> needs to declare the <code>addr</code> module public:</p>\n\n<pre><code>pub mod addr;\n</code></pre>\n\n<p>Then <code>main.rs</code> can reference it like:</p>\n\n<pre><code>let myAddr = person::addr::Addr::new();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>use person::addr;\n// ...\nlet myAddr = addr::Addr::new();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1959, "user_id": 421914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52130756638b6fbc9d74acd3aeec7657?s=128&d=identicon&r=PG", "display_name": "dchang", "link": "https://stackoverflow.com/users/421914/dchang"}, "is_accepted": false, "score": -1, "last_activity_date": 1569016836, "last_edit_date": 1569016836, "creation_date": 1569016439, "answer_id": 58035548, "question_id": 58034305, "link": "https://stackoverflow.com/questions/58034305/cant-import-a-file-into-another-file-in-rust/58035548#58035548", "title": "Can&#39;t import a file into another file in Rust", "body": "<p>Another option is the <a href=\"https://doc.rust-lang.org/reference/items/use-declarations.html#use-paths\" rel=\"nofollow noreferrer\"><code>use crate</code></a> path to keep you files in the same directory. This may be handy if you'll eventually want to re-use <code>Addr</code> in other modules without being coupled to <code>person</code>. In your example, try the following.</p>\n\n<ol>\n<li>In <code>main.rs</code>, add <code>mod addr;</code> to make the <code>addr</code> module visible to the root.</li>\n<li>In <code>person.rs</code>, change:</li>\n</ol>\n\n<pre><code>mod addr;\nuse addr::*;\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>use crate::addr;\n</code></pre>\n"}], "owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 915, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1569016836, "creation_date": 1569008416, "question_id": 58034305, "link": "https://stackoverflow.com/questions/58034305/cant-import-a-file-into-another-file-in-rust", "title": "Can&#39;t import a file into another file in Rust", "body": "<p>C++ veteran trying my first steps in Rust. I have a small project with 3 files:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>mod person;\nuse person::*;\n\nfn main() {\n    let mut pp = Person::new(); // Person struct used here\n    pp.name = \"Malcolm\".to_string();\n    println!(\"{}, {}, {}\",\n        pp.name, pp.place.street, pp.place.number);\n}\n</code></pre>\n\n<p><strong>person.rs</strong></p>\n\n<pre><code>mod addr;\nuse addr::*;\n\npub struct Person {\n    pub name: String,\n    pub place: addr::Addr // Addr struct used here\n}\n\nimpl Person {\n    pub fn new() -&gt; Self {\n        Self {\n            name: \"John\".to_string(),\n            place: addr::Addr::new()\n        }\n    }\n}\n</code></pre>\n\n<p><strong>addr.rs</strong></p>\n\n<pre><code>pub struct Addr { // won't use any other struct\n    pub street: String,\n    pub number: i32\n}\n\nimpl Addr {\n    pub fn new() -&gt; Self {\n        Self {\n            street: \"Boulevard\".to_string(),\n            number: 33\n        }\n    }\n}\n</code></pre>\n\n<p>However, when trying to compile, I receive this error message:</p>\n\n<pre><code>error[E0583]: file not found for module `addr`\n--&gt; src/person.rs:1:5\n|\n1 | mod addr;\n|     ^^^^\n|\n= help: name the file either person/addr.rs or person/addr/mod.rs inside the directory \"src\"\n</code></pre>\n\n<p>I can't really figure out what's wrong, what is it?</p>\n"}, {"tags": ["pointers", "rust"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1569005891, "post_id": 58033346, "comment_id": 102469815, "body": "The <code>to_</code> prefix <a href=\"https://rust-lang-nursery.github.io/api-guidelines/naming.html#ad-hoc-conversions-follow-as_-to_-into_-conventions-c-conv\" rel=\"nofollow noreferrer\">does have a semi-official meaning as a <i>non</i>-consuming ad-hoc conversion, like <code>Path::to_str</code> and <code>str::to_lowercase</code></a>; the conventional name for a <code>self</code>-consuming function would be <code>into_tuple</code>."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1569003215, "creation_date": 1569003215, "answer_id": 58033346, "question_id": 58033162, "link": "https://stackoverflow.com/questions/58033162/pointers-as-function-arguments-when-implementing-a-structure/58033346#58033346", "title": "Pointers as function arguments when implementing a structure", "body": "<p><code>full_name</code> does not consume <code>self</code>, it uses a reference via <code>&amp;self</code>: The members are only used via references as arguments to <code>format!()</code>, so a reference suffices.</p>\n\n<p><code>to_tuple</code> (as the name <code>to_...</code> suggests) consumes <code>self</code>: It moves the members from <code>self</code> into the returned tuple. Since the original <code>self</code> is no longer valid memory after the move (<code>self</code> no longer owns the memory), it has to be consumed, hence a move via <code>self</code>.</p>\n\n<p>You can change <code>full_name</code> to use <code>self</code>, that is move ownership. This would become unhandy, though, as calling the function would consume the struct without the need to.</p>\n\n<p><code>to_tuple</code> could be changed to not consume <code>self</code>, yet it would need to <code>.clone()</code> (make a copy) of the members, which is costly.</p>\n"}], "owner": {"reputation": 888, "user_id": 6087479, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-5I8NM_JIDkU/AAAAAAAAAAI/AAAAAAAAAAA/MAhvpTXecww/photo.jpg?sz=128", "display_name": "Eziz Durdyyev", "link": "https://stackoverflow.com/users/6087479/eziz-durdyyev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "accepted_answer_id": 58033346, "answer_count": 1, "score": 1, "last_activity_date": 1569056735, "creation_date": 1569002238, "last_edit_date": 1569056735, "question_id": 58033162, "link": "https://stackoverflow.com/questions/58033162/pointers-as-function-arguments-when-implementing-a-structure", "title": "Pointers as function arguments when implementing a structure", "body": "<p>Why there is a <code>&amp;</code> symbol before <code>self</code> in the <code>full_name()</code> function but there isn't any in the <code>to_tuple()</code> function? When I look at them, the usage of <code>self</code> is similar in both function, but why use <code>&amp;</code>. Also when I add <code>&amp;</code> to <code>to_tuple()</code> or delete it from <code>full_name()</code> it would throw an error. Can someone explain it?</p>\n\n<pre><code>fn full_name(&amp;self) -&gt; String {\n    format!(\"{} {}\", self.first_name, self.last_name)\n}\n\nfn to_tuple(self) -&gt; (String, String) {\n    (self.first_name, self.last_name)\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569002376, "post_id": 58033087, "comment_id": 102468495, "body": "<code>bad()?</code> for me gives <code>Error: &quot;Can\\&#39;t avoid \\&#39;apostrophe\\&#39; escapes.&quot;</code> not merely <code>Can\\&#39;t avoid \\&#39;apostrophe\\&#39; escapes.</code>"}, {"owner": {"reputation": 3932, "user_id": 233981, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/26b77ef1ab3e3df3df030435aea70568?s=128&d=identicon&r=PG", "display_name": "srking", "link": "https://stackoverflow.com/users/233981/srking"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1569002686, "post_id": 58033087, "comment_id": 102468624, "body": "@trentcl, thanks fixed."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1569002451, "creation_date": 1569002451, "answer_id": 58033207, "question_id": 58033087, "link": "https://stackoverflow.com/questions/58033087/unwanted-apostrophe-escapes-in-err/58033207#58033207", "title": "Unwanted apostrophe escapes in Err()", "body": "<p>The default logger for <code>main</code> returning <code>Result</code> is to use <code>Debug</code> to display the error. <code>Debug</code> on <code>String</code> always escapes <code>'</code>s.</p>\n\n<p>If you want to change this behavior, you must handle the error yourself:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn bad() -&gt; Result&lt;(), String&gt; {\n    return Err(\"Can't avoid 'apostrophe' escapes.\".to_string());\n}\n\nfn my_main() -&gt; Result&lt;(), String&gt; {\n    println!(\"{}\", \"Can avoid 'apostrophe' escapes.\".to_string());\n    bad()?;\n    Ok(())\n}\n\nfn main() {\n    if let Err(e) = my_main() {\n        println!(\"Error: {}\", e);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3932, "user_id": 233981, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/26b77ef1ab3e3df3df030435aea70568?s=128&d=identicon&r=PG", "display_name": "srking", "link": "https://stackoverflow.com/users/233981/srking"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 44, "favorite_count": 0, "accepted_answer_id": 58033207, "answer_count": 1, "score": 1, "last_activity_date": 1569002644, "creation_date": 1569001905, "last_edit_date": 1569002644, "question_id": 58033087, "link": "https://stackoverflow.com/questions/58033087/unwanted-apostrophe-escapes-in-err", "title": "Unwanted apostrophe escapes in Err()", "body": "<p>Err() forcibly adds '\\' escapes around apostrophes.  Searching finds <a href=\"https://github.com/rust-lang/rust/issues/3752\" rel=\"nofollow noreferrer\">old complaints</a> about this problem, but without apparent resolution.</p>\n\n<p>How can I avoid these injected apostrophe escapes in Err strings?</p>\n\n<pre><code>fn bad() -&gt; Result&lt;(), String&gt; {\n    return Err(\"Can't avoid 'apostrophe' escapes.\".to_string());\n}\n\nfn main() -&gt; Result&lt;(), String&gt; {\n    println!(\"{}\", \"Can avoid 'apostrophe' escapes.\".to_string());\n    bad()?;\n    Ok(())\n}\n</code></pre>\n\n<p>Results in:</p>\n\n<pre><code>Can avoid 'apostrophe' escapes.\nError: \"Can\\'t avoid \\'apostrophe\\' escapes.\"\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 114, "user_id": 3445898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c53e69b69acc1c9ca8e083923b78ac65?s=128&d=identicon&r=PG&f=1", "display_name": "dvc", "link": "https://stackoverflow.com/users/3445898/dvc"}, "is_accepted": true, "score": 0, "last_activity_date": 1570009806, "creation_date": 1570009806, "answer_id": 58199158, "question_id": 58031951, "link": "https://stackoverflow.com/questions/58031951/how-to-fix-conflicting-lifetime-requirements/58199158#58199158", "title": "How to fix &#39;Conflicting lifetime requirements&#39;", "body": "<p><code>Box&lt;dyn Iterator&lt;Item = &amp;'a Ipld&gt;&gt;</code> has an implicit static lifetime. By changing the lifetime to be the same as the contained lifetime 'a the issue can be resolved.</p>\n"}], "owner": {"reputation": 114, "user_id": 3445898, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c53e69b69acc1c9ca8e083923b78ac65?s=128&d=identicon&r=PG&f=1", "display_name": "dvc", "link": "https://stackoverflow.com/users/3445898/dvc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 58199158, "answer_count": 1, "score": 0, "last_activity_date": 1570009806, "creation_date": 1568996073, "last_edit_date": 1568996620, "question_id": 58031951, "link": "https://stackoverflow.com/questions/58031951/how-to-fix-conflicting-lifetime-requirements", "title": "How to fix &#39;Conflicting lifetime requirements&#39;", "body": "<p>I am trying to implement an Iterator for a JSON like structure. Rust is complaining that it can't infer the appropriate lifetime. I don't understand the issue, and would appreciate an explanation. I need to add some more details, but I don't really understand the problem.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>--&gt; src/ipld.rs:92:44\n   |\n92 |             if let Some(iter) = self.stack.last() {\n   |                                            ^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the impl at 87:6...\n  --&gt; src/ipld.rs:87:6\n   |\n87 | impl&lt;'a&gt; Iterator for IpldIter&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected &amp;[std::boxed::Box&lt;dyn std::iter::Iterator&lt;Item = &amp;ipld::Ipld&gt;&gt;]\n              found &amp;[std::boxed::Box&lt;(dyn std::iter::Iterator&lt;Item = &amp;'a ipld::Ipld&gt; + 'static)&gt;]\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn std::iter::Iterator&lt;Item = &amp;'a ipld::Ipld&gt; + 'static)&gt;\n              found std::boxed::Box&lt;dyn std::iter::Iterator&lt;Item = &amp;ipld::Ipld&gt;&gt;\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Ipld {\n    List(Vec&lt;Ipld&gt;),\n    Bool(bool),\n}\n\npub struct IpldIter&lt;'a&gt; {\n    stack: Vec&lt;Box&lt;dyn Iterator&lt;Item = &amp;'a Ipld&gt;&gt;&gt;,\n}\n\nimpl&lt;'a&gt; IpldIter&lt;'a&gt; {\n    fn new(ipld: &amp;'a Ipld) -&gt; Self {\n        let iter = vec![ipld].into_iter();\n        Self {\n            stack: vec![Box::new(iter)],\n        }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for IpldIter&lt;'a&gt; {\n    type Item = &amp;'a Ipld;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        loop {\n            if let Some(iter) = self.stack.last() {\n                if let Some(ipld) = iter.next() {\n                    match ipld {\n                        Ipld::List(list) =&gt; {\n                            self.stack.push(Box::new(list.iter()));\n                        }\n                        _ =&gt; {}\n                    }\n                    return Some(ipld);\n                } else {\n                    self.stack.pop();\n                }\n            } else {\n                return None;\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "dynamic-dispatch"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1568995157, "post_id": 58030888, "comment_id": 102465820, "body": "Cryo-freezing seems to be the best option for now."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1568995523, "creation_date": 1568995523, "answer_id": 58031836, "question_id": 58030888, "link": "https://stackoverflow.com/questions/58030888/is-there-a-way-to-get-snafus-backtrace-on-arbitrary-dyn-stderrorerro/58031836#58031836", "title": "Is there a way to get SNAFU&#39;s `.backtrace()` on arbitrary `&amp;dyn std::error::Error` trait objects?", "body": "<p>A <code>dyn Error</code> has the methods of <code>Error</code> and nothing else. If the backtrace cannot be deduced from those methods then where else could that information come from?</p>\n\n<p>Unfortunately <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md\" rel=\"nofollow noreferrer\">RFC 2504</a> is not yet stabilised, so you will need to be cryogenically frozen until at least Rust 1.39 if you want to wait for it.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 6542838, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/puVvo.jpg?s=128&g=1", "display_name": "creato", "link": "https://stackoverflow.com/users/6542838/creato"}, "is_accepted": false, "score": 0, "last_activity_date": 1569245932, "last_edit_date": 1569245932, "creation_date": 1569041910, "answer_id": 58037396, "question_id": 58030888, "link": "https://stackoverflow.com/questions/58030888/is-there-a-way-to-get-snafus-backtrace-on-arbitrary-dyn-stderrorerro/58037396#58037396", "title": "Is there a way to get SNAFU&#39;s `.backtrace()` on arbitrary `&amp;dyn std::error::Error` trait objects?", "body": "<p>It seems I missed this because nightly <code>std</code> docs weren't recompiled, but <a href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html#method.backtrace\" rel=\"nofollow noreferrer\"><code>#![feature(backtrace)]</code></a> is in nightly right now. SNAFU still needs to add support for it, so I'm still stuck on getting this all working.</p>\n"}], "owner": {"reputation": 1, "user_id": 6542838, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/puVvo.jpg?s=128&g=1", "display_name": "creato", "link": "https://stackoverflow.com/users/6542838/creato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1569246013, "creation_date": 1568991692, "last_edit_date": 1569246013, "question_id": 58030888, "link": "https://stackoverflow.com/questions/58030888/is-there-a-way-to-get-snafus-backtrace-on-arbitrary-dyn-stderrorerro", "title": "Is there a way to get SNAFU&#39;s `.backtrace()` on arbitrary `&amp;dyn std::error::Error` trait objects?", "body": "<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md\" rel=\"nofollow noreferrer\">RFC 2504</a> will add a required <code>fn backtrace(&amp;self) -&gt; Option&lt;&amp;Backtrace&gt;</code> to all <code>std::error::Error</code>. This is not ready yet, so for now, <a href=\"https://docs.rs/snafu/0.5.0/snafu/index.html\" rel=\"nofollow noreferrer\">SNAFU</a>, an error helper macro, polyfills this by tying an <a href=\"https://docs.rs/snafu/0.5.0/snafu/trait.ErrorCompat.html\" rel=\"nofollow noreferrer\"><code>ErrorCompat</code></a> trait to all types generated by the macro. This allows for backtrace support before it lands in Rust nightly.</p>\n\n<p>However, this <code>ErrorCompat</code> trait is not implemented for all implementors of <code>std::error::Error</code>. I want to \u2014 in some generic error printing code \u2014 be able to display the chain of causes along with the stacktrace associated with where the SNAFU error was instantiated. Unfortunately, the <a href=\"https://doc.rust-lang.org/stable/std/error/trait.Error.html#method.source\" rel=\"nofollow noreferrer\"><code>source()</code></a> function returns <code>&amp;(dyn Error + 'static)</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error as StdError;\nuse snafu::{ResultExt, ErrorCompat};\n\nfn main() {\n    let err: Result&lt;(), _&gt; = Err(std::io::Error::new(std::io::ErrorKind::Other, \"oh no!\"));\n\n    let err = err.with_context(|| parse_error::ReadInput {\n        filename: \"hello\"\n    });\n\n    let err = err.with_context(|| compile_error::ParseStage);\n\n    // some generic error handling code\n    if let Err(err) = err {\n        // `cause` is type &amp;(dyn std::error::Error + 'static)\n        let cause = err.source().unwrap();\n\n        if let Some(err) = /* attempt to downcast cause into &amp;dyn snafu::ErrorCompat trait object */ {\n            println!(\"{}\", err.backtrace().unwrap());\n        }\n    }\n}\n\npub mod compile_error {\n    use snafu::{Snafu, Backtrace};\n    #[derive(Debug, Snafu)]\n    #[snafu(visibility(pub(super)))]\n    pub enum Error {\n        #[snafu(display(\"Error parsing code: {}\", source))]\n        ParseStage {\n           source: crate::parse_error::Error,\n           backtrace: Backtrace\n        },\n    }\n}\n\npub mod parse_error {\n    use snafu::{Snafu, Backtrace};\n    #[derive(Debug, Snafu)]\n    #[snafu(visibility(pub(super)))]\n    pub enum Error {\n        #[snafu(display(\"Could not read input {:?}: {}\", filename, source))]\n        ReadInput {\n           filename: std::path::PathBuf,\n           source: std::io::Error,\n           backtrace: Backtrace\n        },\n    }\n}\n\n</code></pre>\n\n<p>I've looked at <code>std::any::Any::downcast_ref</code> but this is for downcasting to a struct, not downcasting a trait object to another trait object. I'd like to avoid having to list out all possible concrete-typed SNAFU errors in my error-handling code.</p>\n\n<p>I could cryo-freeze myself until RFC 2504 is (fully) implemented but surely there's some way to do this.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1517, "user_id": 337475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbd28a2aa4fbe028b9905a17cf26e5c5?s=128&d=identicon&r=PG", "display_name": "Erik P.", "link": "https://stackoverflow.com/users/337475/erik-p"}, "is_accepted": false, "score": 5, "last_activity_date": 1568990319, "creation_date": 1568990319, "answer_id": 58030505, "question_id": 58030504, "link": "https://stackoverflow.com/questions/58030504/is-there-a-way-to-get-the-u32-absolute-value-of-an-i32-that-does-the-correct-thi/58030505#58030505", "title": "Is there a way to get the u32 absolute value of an i32 that does the correct thing for std::i32::MIN?", "body": "<p>I just realized that <code>x.wrapping_abs() as u32</code> does what I want: all numbers other than <code>std::i32::MIN</code> are mapped to their absolute value as an i32 first, then cast to u32, and <code>std::i32::MIN</code> stays the same but then casting it to u32 happens to turn it into its absolute value. This works for other bit widths too.</p>\n"}], "owner": {"reputation": 1517, "user_id": 337475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbd28a2aa4fbe028b9905a17cf26e5c5?s=128&d=identicon&r=PG", "display_name": "Erik P.", "link": "https://stackoverflow.com/users/337475/erik-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 298, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1568990319, "creation_date": 1568990319, "question_id": 58030504, "link": "https://stackoverflow.com/questions/58030504/is-there-a-way-to-get-the-u32-absolute-value-of-an-i32-that-does-the-correct-thi", "title": "Is there a way to get the u32 absolute value of an i32 that does the correct thing for std::i32::MIN?", "body": "<p><a href=\"https://stackoverflow.com/questions/51753297/why-dont-the-absolute-value-methods-on-signed-integers-return-unsigned-values\">This question</a> and its answer describe why abs() on an i32 returns an i32 rather than a u32. It says \"it seems like the accepted workaround is to use <code>as u32</code> to cast\". However, that will panic in debug mode if the argument is <code>std::i32::MIN</code>. Is there a way in the standard library to get the correct value, or should I write my own implementation with a special case for this value - something like this:</p>\n\n<pre><code>fn my_abs(x: i32) -&gt; u32 {\n  if x == std::i32::MIN {\n    (-(x as i64)) as u32\n  } else {\n    x.abs() as u32\n  }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 99, "user_id": 11274749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f411d49deedda4f2ad58be22a05a6c?s=128&d=identicon&r=PG&f=1", "display_name": "SRugina", "link": "https://stackoverflow.com/users/11274749/srugina"}, "is_accepted": false, "score": 4, "last_activity_date": 1569331293, "last_edit_date": 1569331293, "creation_date": 1569160078, "answer_id": 58049824, "question_id": 58030378, "link": "https://stackoverflow.com/questions/58030378/using-a-custom-rocket-responder-for-an-error-in-a-requestguard/58049824#58049824", "title": "Using a custom Rocket Responder for an error in a RequestGuard", "body": "<p>The <a href=\"https://api.rocket.rs/v0.4/rocket/request/trait.FromRequest.html#outcomes\" rel=\"nofollow noreferrer\">docs for <code>FromRequest</code>'s <code>Outcome</code></a> state:</p>\n\n<blockquote>\n  <p>Note that users can request types of <code>Result&lt;S, E&gt;</code> and <code>Option&lt;S&gt;</code> to catch <code>Failure</code>s and retrieve the error value.</p>\n</blockquote>\n\n<ol>\n<li><p>At the start of your <code>FromRequest</code> implementation, define <code>type Error = JsonValue;</code></p></li>\n<li><p>In the <code>from_request</code> function, make sure it returns <code>request::Outcome&lt;S, Self::Error&gt;</code> where <code>S</code> is what you're implementing for.</p></li>\n<li><p>In the <code>from_request</code> function, when you want to return a failure do something like <code>Outcome::Failure((Status::Unauthorized, json!({\"error\": \"unauthorised\"})))</code>, or whatever it is you want to return.</p></li>\n<li><p>In your route's function use <code>Result&lt;S, JsonValue&gt;</code> as the type of the request guard, where <code>S</code> is what you where implementing for. In your route, use <code>match</code> to match it to <code>Ok(S)</code> or <code>Err(json_error)</code> for example.</p></li>\n</ol>\n\n<p>There is probably a way to pass on the status of <code>Outcome::Failure</code>, but the solution I've described means if you're using a custom responder you would set the status in the responder, not based on <code>Outcome::Failure</code> - for example the code below.</p>\n\n<p>Here's an example applied to the <code>ApiKey</code> request guard example from the docs, with an example custom responder called <code>ApiResponse</code> that sets its own status:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate rocket;\n#[macro_use]\nextern crate rocket_contrib;\n#[macro_use]\nextern crate serde_derive;\n\nuse rocket::Outcome;\nuse rocket::http::{ContentType, Status};\nuse rocket::request::{self, Request, FromRequest};\nuse rocket::response::{self, Responder, Response};\nuse rocket_contrib::json::{Json, JsonValue};\n\n#[derive(Debug)]\npub struct ApiResponse {\n    pub json: JsonValue,\n    pub status: Status,\n}\n\nimpl&lt;'r&gt; Responder&lt;'r&gt; for ApiResponse {\n    fn respond_to(self, req: &amp;Request) -&gt; response::Result&lt;'r&gt; {\n        Response::build_from(self.json.respond_to(req).unwrap())\n            .status(self.status)\n            .header(ContentType::JSON)\n            .ok()\n    }\n}\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct ApiKey(String);\n\n/// Returns true if `key` is a valid API key string.\nfn is_valid(key: &amp;str) -&gt; bool {\n    key == \"valid_api_key\"\n}\n\nimpl&lt;'a, 'r&gt; FromRequest&lt;'a, 'r&gt; for ApiKey {\n    type Error = JsonValue;\n\n    fn from_request(request: &amp;'a Request&lt;'r&gt;) -&gt; request::Outcome&lt;Self, Self::Error&gt; {\n        let keys: Vec&lt;_&gt; = request.headers().get(\"x-api-key\").collect();\n        match keys.len() {\n            0 =&gt; Outcome::Failure((Status::BadRequest, json!({ \"error\": \"api key missing\" }))),\n            1 if is_valid(keys[0]) =&gt; Outcome::Success(ApiKey(keys[0].to_string())),\n            1 =&gt; Outcome::Failure((Status::BadRequest, json!({ \"error\": \"api key invalid\" }))),\n            _ =&gt; Outcome::Failure((Status::BadRequest, json!({ \"error\": \"bad api key count\" }))),\n        }\n    }\n}\n\n#[get(\"/sensitive\")]\nfn sensitive(key: Result&lt;ApiKey, JsonValue&gt;) -&gt; ApiResponse {\n    match key {\n        Ok(_ApiKey) =&gt; ApiResponse {\n            json: json!({ \"data\": \"sensitive data.\" }),\n            status: Status::Ok\n        },\n        Err(json_error) =&gt; ApiResponse {\n            json: json_error,\n            status: Status::BadRequest\n        }\n    }\n}\n</code></pre>\n\n<p>I'm new to Rust and Rocket, so this might not be the best solution.</p>\n"}], "owner": {"reputation": 4825, "user_id": 181894, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e734b1b426a713c8a0a7cfe6713e86e3?s=128&d=identicon&r=PG", "display_name": "Tomas", "link": "https://stackoverflow.com/users/181894/tomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 897, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1569331293, "creation_date": 1568989896, "question_id": 58030378, "link": "https://stackoverflow.com/questions/58030378/using-a-custom-rocket-responder-for-an-error-in-a-requestguard", "title": "Using a custom Rocket Responder for an error in a RequestGuard", "body": "<p>In a web server application using rocket.rs, I am using an Error type that implement <code>Responder</code> throughout my API. This error type ensures all errors are uniformly rendered (as RFC 7807 json).</p>\n\n<p>However, I can't find a way to use these Error responses in <code>RequestGuards</code>. It seems that the <code>from_request</code> function results in an <code>Outcome</code> which uses an entirely different model, returning <code>Outcome::Failure((Status, T))</code> on errors.</p>\n\n<p>How can I ensure that errors in these request guards are rendered in the same JSON format? Is it even customizable?</p>\n\n<p>I have tried to use a catcher, but this does not seem to retrieve any error information whatsoever.</p>\n"}, {"tags": ["rust", "lifetime", "lifetime-scoping"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569378193, "post_id": 58030348, "comment_id": 102573574, "body": "<i>and not the actual code in Rust</i> \u2014 are you aware that Rust releases new versions every 6 weeks? Presumably the book does not, so <i>what version of Rust are they citing</i>?"}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569379035, "post_id": 58030348, "comment_id": 102573745, "body": "@Shepmaster step back, I&#39;m new. Why would there be a difference? My question is simply that I don&#39;t understand the lifetime use in the book, and going to see the code I don&#39;t see it there (which is what I would expect). Why did it change (if it did)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569379184, "post_id": 58030348, "comment_id": 102573777, "body": "<i>Why did it change (if it did)</i> \u2014 that&#39;s covered by <a href=\"https://stackoverflow.com/a/58030681/155423\">an existing answer</a>: <i>There used to be a time when there was no possibility for lifetime elision in implementation statements. This changed in version 1.31 of the compiler</i>"}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569380083, "post_id": 58030348, "comment_id": 102573963, "body": "I do think you come off with questions that are obvious. <b>Of course</b> I realize books can be out of date. I just wanted to see the comparison between the <i>blanket implementation</i> the book has and the new one, and you provided it at the same time I had asked this question, so I think I communicated my confusion. I just didn&#39;t have the Rust expertise to know that the code in your answer was the replacement. (Mostly because when I mentally elided <code>&amp;&#39;a T</code> I dropped <code>&amp;&#39;a</code> and I went looking for <code>T</code> instead of <code>&amp;T</code> and then was confused because I thought it only worked on functions and not impls."}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569380092, "post_id": 58030348, "comment_id": 102573965, "body": "@Shepmaster anyway, thanks again for the answer ;)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1569380308, "post_id": 58030348, "comment_id": 102574000, "body": "I don&#39;t see what question I asked was obvious. I didn&#39;t ask if you knew the book could be out of date. I asked if you knew that (1) Rust releases frequently (C and C++ releases are every 3-5 years, for comparison, so it&#39;s more likely that a book would correspond to the most recent release) and (2) what version the book uses. The first isn&#39;t obvious and the second isn&#39;t something that is general knowledge (and I don&#39;t own that book)."}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569380542, "post_id": 58030348, "comment_id": 102574040, "body": "Fair enough, perhaps I read into it wrong."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1568990949, "creation_date": 1568990949, "answer_id": 58030681, "question_id": 58030348, "link": "https://stackoverflow.com/questions/58030348/what-is-the-point-of-an-explicit-lifetime-for-a-method-that-doesnt-take-any-arg/58030681#58030681", "title": "What is the point of an explicit lifetime for a method that doesn&#39;t take any arguments?", "body": "<p>References are always generic to a lifetime. In practice, a <code>&amp;T</code> is always a <code>&amp;'a T</code> for some lifetime established by the compiler according to the given circumstances. This lifetime has to be specified in <em>some way</em> when implementing something for a reference type.</p>\n\n<p>There used to be a time when there was no possibility for lifetime elision in implementation statements. This changed in version <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html#more-lifetime-elision-rules\" rel=\"nofollow noreferrer\">1.31</a> of the compiler, but there was no need to change all existing, working code because of this. The code below works today, but not in version 1.30.0:</p>\n\n<pre><code>trait Foo {\n    fn foo(&amp;self) {}\n}\n\nimpl&lt;T: ?Sized&gt; Foo for &amp;T {} // error[E0106]: missing lifetime specifier\n</code></pre>\n\n<p>As such, the lifetime parameter <code>'a</code> was made explicit in this case. The only way it relates from the lifetimes in <code>&amp;self</code> and <code>&amp;U</code> is that there will be covariance with <code>'a</code>: since <code>self = &amp;'a T</code> is bound to the lifetime <code>'a</code>, it is also implicit that <code>&amp;self</code> must not outlive the lifetime <code>'a</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1569379842, "post_id": 58090429, "comment_id": 102573919, "body": "I like this answer because this shows all aspects including the relevant changes to <code>convert.rs</code>. I also see that <code>&amp;&#39;a T</code> (and not <code>&amp;&#39;a &amp;T</code>) is <code>&amp;T</code>. Anyway, I think I&#39;m closer to wrapping my head around this now. thanks"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1569379035, "creation_date": 1569379035, "answer_id": 58090429, "question_id": 58030348, "link": "https://stackoverflow.com/questions/58030348/what-is-the-point-of-an-explicit-lifetime-for-a-method-that-doesnt-take-any-arg/58090429#58090429", "title": "What is the point of an explicit lifetime for a method that doesn&#39;t take any arguments?", "body": "<blockquote>\n  <p>It's not being used in an argument of <code>as_ref</code></p>\n</blockquote>\n\n<p>It most certainly is. The function uses a shorthand notation, which can be expanded:</p>\n\n<pre><code>fn as_ref(&amp;self) // becomes\nfn as_ref(self: &amp;Self) // becomes\nfn as_ref(self: &amp;&amp;'a T)\n</code></pre>\n\n<blockquote>\n  <p>nor tied to the output of <code>&amp;U</code></p>\n</blockquote>\n\n<p>Correct.</p>\n\n<blockquote>\n  <p>So why does the book have this, and not the actual code in Rust?</p>\n</blockquote>\n\n<p>Rust releases new stable versions every 6 weeks. Presumably the book does not, so it is likely that they are using an older version of Rust. Hopefully the book tells you the version they developed with.</p>\n\n<p>As <a href=\"https://stackoverflow.com/a/58030681/155423\">E_net4 already stated</a>, the requirement to specify the <code>'a</code> in this case was removed in Rust 1.31, as <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/lifetime-elision-in-impl.html\" rel=\"noreferrer\">documented in the edition guide</a>.</p>\n\n<p>The code you provide from the book matches that <a href=\"https://github.com/rust-lang/rust/blob/1.30.0/src/libcore/convert.rs#L410-L415\" rel=\"noreferrer\">found in Rust 1.30</a>:</p>\n\n<blockquote>\n<pre><code>impl&lt;'a, T: ?Sized, U: ?Sized&gt; AsRef&lt;U&gt; for &amp;'a T where T: AsRef&lt;U&gt;\n{\n    fn as_ref(&amp;self) -&gt; &amp;U {\n        &lt;T as AsRef&lt;U&gt;&gt;::as_ref(*self)\n    }\n}\n</code></pre>\n</blockquote>\n\n<p>The source code you looked at <a href=\"https://github.com/rust-lang/rust/blob/1.37.0/src/libcore/convert.rs#L494-L499\" rel=\"noreferrer\">corresponds to Rust 1.37</a>:</p>\n\n<blockquote>\n<pre><code>impl&lt;T: ?Sized, U: ?Sized&gt; AsRef&lt;U&gt; for &amp;T where T: AsRef&lt;U&gt;\n{\n    fn as_ref(&amp;self) -&gt; &amp;U {\n        &lt;T as AsRef&lt;U&gt;&gt;::as_ref(*self)\n    }\n}\n</code></pre>\n</blockquote>\n\n<p>This is about 42 weeks of development time, plenty for the source code to have changed.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "accepted_answer_id": 58090429, "answer_count": 2, "score": 2, "last_activity_date": 1569379035, "creation_date": 1568989821, "last_edit_date": 1569378132, "question_id": 58030348, "link": "https://stackoverflow.com/questions/58030348/what-is-the-point-of-an-explicit-lifetime-for-a-method-that-doesnt-take-any-arg", "title": "What is the point of an explicit lifetime for a method that doesn&#39;t take any arguments?", "body": "<p>On page 295 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\">Programming Rust</a> you can find the following:</p>\n\n<blockquote>\n  <p>Fortunately, the standard library includes the blanket implementation:</p>\n\n<pre><code>impl&lt;'a, T, U&gt; AsRef&lt;U&gt; for &amp;'a T\nwhere\n    T: AsRef&lt;U&gt;,\n    T: ?Sized,\n    U: ?Sized,\n{\n    fn as_ref(&amp;self) -&gt; &amp;U {\n        (*self).as_ref()\n    }\n}\n</code></pre>\n</blockquote>\n\n<p>I'm confused at the use of <code>&amp;'a</code> there. What is the context of that? It's not being used in an argument of <code>as_ref</code> nor tied to the output of <code>&amp;U</code>. I don't think I fully understand lifetimes when used in this context.</p>\n\n<p>I looked this up because I still didn't understand it and the answers still weren't clicking (making sense). I found <a href=\"https://doc.rust-lang.org/1.37.0/src/core/convert.rs.html\" rel=\"nofollow noreferrer\"><code>convert.rs</code></a>. This doesn't seem to have <em>any</em> lifetimes anywhere, but it implements the <code>AsRef</code> trait. So why does the book have this, and not the actual code in Rust? Where can I find the \"blanket implementation\" mentioned in the book?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568980860, "post_id": 58027838, "comment_id": 102458196, "body": "What elided lifetime? There are no lifetimes to elide."}, {"owner": {"reputation": 749, "user_id": 2748415, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d551faddd02dae2ef57874988c081ae?s=128&d=identicon&r=PG", "display_name": "rjs", "link": "https://stackoverflow.com/users/2748415/rjs"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568981390, "post_id": 58027838, "comment_id": 102458469, "body": "Ah right, as there is no explicit lifetime, bounds on <code>T</code> for a lifetime, references of any sort, and raw pointers, we don&#39;t have any mention of lifetimes, but would that mean the <code>PhantomData</code> then is provided for the subtyping concerns? The sentence after what I quoted does go on to say &quot;Usually this won&#39;t be necessary; covariance is correct for most safe abstractions, such as Box, Rc, Arc, Vec, and LinkedList.&quot; iiuc this means that supplying a phantom type makes the housing type invariant over <code>T</code>, but then <code>Rc</code> uses it and this sentence implies it&#39;s covariant over <code>T</code>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1568987500, "post_id": 58027838, "comment_id": 102461823, "body": "<code>Rc</code> didn&#39;t always have a <code>PhantomData</code> field. Here is the commit where it was introduced: <a href=\"https://github.com/rust-lang/rust/commit/60dc10492ccdf785678d475172f2653aae9606da#diff-da456bd3af6d94a9693e625ff7303113R286\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/commit/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1568987566, "post_id": 58027838, "comment_id": 102461862, "body": "The commit message references <a href=\"https://github.com/rust-lang/rust/issues/27730#issuecomment-316432083\" rel=\"nofollow noreferrer\">this conversation</a>, but that seems very old, and doesn&#39;t quite explain why it was done."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1568999205, "post_id": 58027838, "comment_id": 102467322, "body": "I&#39;m guessing it has something to do with drop logic, and not to do with lifetimes or subtyping at all. The message on the commit @PeterHall linked to, I think, supports my guess and suggests it has to do with the difference between <code>Shared</code> and <code>NonNull</code> (which replaced <code>Shared</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "is_accepted": true, "score": 7, "last_activity_date": 1569294512, "last_edit_date": 1569294512, "creation_date": 1569010556, "answer_id": 58034644, "question_id": 58027838, "link": "https://stackoverflow.com/questions/58027838/why-does-stdrcrc-need-phantomdata/58034644#58034644", "title": "Why does std::rc::Rc need PhantomData?", "body": "<p><code>PhantomData</code> is used here to tell the drop checker that dropping <code>Rc&lt;T&gt;</code> <a href=\"https://doc.rust-lang.org/nightly/std/marker/struct.PhantomData.html#ownership-and-the-drop-check\" rel=\"nofollow noreferrer\">may cause a value of type <code>T</code> to be dropped</a>.</p>\n\n<p>When we announce that we may drop a value of type <code>T</code>, the drop checker ensures that any lifetimes in <code>T</code> outlive the <code>struct</code> itself. It is this check that prevents the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67a4a5946f7d0372383116878ffa0ac0\" rel=\"nofollow noreferrer\">following code</a> from compiling. In this case, the generic argument to <code>Rc</code> is <code>PeekOnDrop&lt;&amp;'a u8&gt;</code>, which has lifetime <code>'a</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{fmt, rc::Rc};\n\nstruct PeekOnDrop&lt;T: fmt::Debug&gt;(T);\n\nimpl&lt;T: fmt::Debug&gt; Drop for PeekOnDrop&lt;T&gt; {\n    fn drop(&amp;mut self) {\n        println!(\"{:?}\", self.0);\n    }   \n}\n\nstruct SelfReferential&lt;'a&gt; {\n   value: Box&lt;u8&gt;,\n   rc: Option&lt;Rc&lt;PeekOnDrop&lt;&amp;'a u8&gt;&gt;&gt;,\n}\n\nfn main() {\n    let mut sr = SelfReferential {\n        rc: None,\n        value: Box::new(1),\n    };\n\n    sr.rc = Some(Rc::new(PeekOnDrop(&amp;*sr.value)));\n\n    // `sr` would be dropped here, which could drop `value` before `rc`.\n    // The destructor of `PeekOnDrop` would then try to inspect the (dangling)\n    // reference, resulting in UB!\n}\n</code></pre>\n\n<p>For a full explanation of the underlying logic here, see <a href=\"https://doc.rust-lang.org/nightly/nomicon/dropck.html\" rel=\"nofollow noreferrer\">the nomicon</a>, but note that without <code>PeekOnDrop</code>, the previous example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d5d78e522a9e4ed14321cdc0c75469e2\" rel=\"nofollow noreferrer\">compiles just fine</a>. This is because <code>Rc&lt;T&gt;</code> declares in its <a href=\"https://doc.rust-lang.org/beta/src/alloc/rc.rs.html#889\" rel=\"nofollow noreferrer\"><code>Drop</code> impl</a> that its generic parameter <code>T</code> is <code>#[may_dangle]</code>. In doing so, it promises that its <code>Drop</code> impl does nothing with the value of <code>T</code> that it owns except (maybe) drop it. Only when the drop checker recursively checks the <code>Drop</code> impl of <code>PeekOnDrop</code> and finds that it may access <code>T</code> does an error occur.</p>\n\n<p>For completeness, <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=528ce122067ee3ddfdf52acb1f5c6ff5\" rel=\"nofollow noreferrer\">here's an example of an undefined program</a> that lies by asserting that <code>PeekOnDrop</code>'s <code>Drop</code> impl does not access <code>T</code> using <code>#[may_dangle]</code>. The same undefined behavior would be exhibited in the original example if <code>Rc</code> did not use <code>PhantomData</code> to declare that it may drop a value of <code>T</code>.</p>\n"}], "owner": {"reputation": 749, "user_id": 2748415, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d551faddd02dae2ef57874988c081ae?s=128&d=identicon&r=PG", "display_name": "rjs", "link": "https://stackoverflow.com/users/2748415/rjs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 599, "favorite_count": 3, "accepted_answer_id": 58034644, "answer_count": 1, "score": 12, "last_activity_date": 1569294512, "creation_date": 1568980229, "question_id": 58027838, "link": "https://stackoverflow.com/questions/58027838/why-does-stdrcrc-need-phantomdata", "title": "Why does std::rc::Rc need PhantomData?", "body": "<p>I know that <code>PhantomData</code> is intended to consume a lifetime or type parameter in a data type definition that would otherwise go unused. I was recently looking over the definition of <code>Rc</code> in the <a href=\"https://github.com/rust-lang/rust/blob/dee08ba55accecc13ed600e0fb6559fb28e7f480/src/liballoc/rc.rs#L278-L281\" rel=\"noreferrer\">Rust std lib</a> and noticed that it seems to employ <code>PhantomData</code>, but it looks like <code>T</code> is being used in the sibling field <code>ptr</code> as an <a href=\"https://github.com/rust-lang/rust/blob/dee08ba55accecc13ed600e0fb6559fb28e7f480/src/liballoc/rc.rs#L259-L263\" rel=\"noreferrer\"><code>NonNull&lt;RcBox&lt;T&gt;&gt;</code></a>. The docs say that <code>NonNull</code> is <a href=\"https://doc.rust-lang.org/beta/std/ptr/struct.NonNull.html\" rel=\"noreferrer\">\"*mut T but non-zero and covariant.\"</a> and go on to further extend that definition with the statement:</p>\n\n<blockquote>\n  <p>Unlike <code>*mut T</code>, <code>NonNull&lt;T&gt;</code> is covariant over T. If this is incorrect for your use case, you should include some <code>PhantomData</code> in your type to provide invariance, such as <code>PhantomData&lt;Cell&lt;T&gt;&gt;</code> or <code>PhantomData&lt;&amp;'a mut T&gt;</code>.</p>\n</blockquote>\n\n<p>Hence, is it needed for variance or is it more because <code>NonNull</code> is effectively a raw pointer and <code>PhantomData</code> is needed to consume the elided lifetime as <a href=\"https://stackoverflow.com/a/57846101/2748415\">this answer seems to imply</a>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1568979202, "post_id": 58027416, "comment_id": 102457354, "body": "First one expects concrete type which is a <code>T</code> unless function is not defined in some generic implementation. Second one expects any type which implements <code>Now</code>, it is also called generic function."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 7, "last_activity_date": 1568978755, "creation_date": 1568978755, "answer_id": 58027477, "question_id": 58027416, "link": "https://stackoverflow.com/questions/58027416/what-are-the-brackets-before-a-function-in-rust/58027477#58027477", "title": "What are the brackets before a function in Rust?", "body": "<p>The answer is in the doc: <a href=\"https://doc.rust-lang.org/rust-by-example/generics.html\" rel=\"noreferrer\">Generics</a></p>\n\n<blockquote>\n  <p>A type parameter is specified as generic by the use of angle brackets\n  and upper camel case: . \"Generic type parameters\" are\n  typically represented as . In Rust, \"generic\" also describes\n  anything that accepts one or more generic type parameters . Any\n  type specified as a generic type parameter is generic, and everything\n  else is concrete (non-generic).</p>\n</blockquote>\n\n<p>Your second definition is a type restriction to <code>T</code> requiring an implementation of <code>Now</code> (whatever that may be). In turn, below the hood, the compiler will generate a variant of <code>new_with_now</code> for every <code>struct</code> used that implements <code>Now</code> and calls this function at any given point.</p>\n"}], "owner": {"reputation": 3017, "user_id": 1546710, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/fe5e016e1bbe4bd9d20d8494453d50d4?s=128&d=identicon&r=PG", "display_name": "aug2uag", "link": "https://stackoverflow.com/users/1546710/aug2uag"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 659, "favorite_count": 2, "accepted_answer_id": 58027477, "answer_count": 1, "score": 2, "last_activity_date": 1568978755, "creation_date": 1568978466, "question_id": 58027416, "link": "https://stackoverflow.com/questions/58027416/what-are-the-brackets-before-a-function-in-rust", "title": "What are the brackets before a function in Rust?", "body": "<p>What is the purpose of the brackets in function declarations. For instance what's the difference between the following:</p>\n\n<pre><code>/// without brackets\npub fn new_with_now(now: T) -&gt; SomeType\n\n/// with brackets\npub fn new_with_now&lt;T: Now&gt;(now: T) -&gt; SomeType\n</code></pre>\n"}, {"tags": ["rust", "bounding"], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1568981463, "post_id": 58027271, "comment_id": 102458511, "body": "There are also historical reasons for this distinction, though. Early versions of the compiler did not allow for <code>?Sized</code> to be in the <code>where</code> clause."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1568990957, "post_id": 58027271, "comment_id": 102463720, "body": "@E_net4theMeta-RemoveR that is probably the &quot;real&quot; answer."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1568991003, "post_id": 58027271, "comment_id": 102463748, "body": "@PeterHall I would turn it info an answer if I found the reference. All I know is word of mouth that I still haven&#39;t quite validated yet."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1568991163, "post_id": 58027271, "comment_id": 102463834, "body": "@E_net4theMeta-RemoveR <a href=\"https://github.com/rust-lang/rust/pull/37791\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/37791</a> Stable in Rust 1.15"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1568991269, "post_id": 58027271, "comment_id": 102463883, "body": "So you found it. :)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568991644, "post_id": 58027271, "comment_id": 102464098, "body": "Edited the answer to include this detail"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 4, "last_activity_date": 1568991623, "last_edit_date": 1568991623, "creation_date": 1568977846, "answer_id": 58027271, "question_id": 58026832, "link": "https://stackoverflow.com/questions/58026832/rust-and-trait-bounds-conventions-sized/58027271#58027271", "title": "Rust and trait bounds conventions (?Sized)", "body": "<p>That is pure convention, and it is not set in stone, but it does have some merit.</p>\n\n<p>The special syntax <code>?Sized</code> lets the compiler remove this bound if it is not appropriate (when monomorphizing). As such, it does make sense, somewhat, to split it and put it in the generic definition rather than the <code>where</code> clause for ease of readability and to separate the fact that, unlike the others, it isn't a strict, rigid marker.</p>\n\n<p>Some libraries out there go even further and list all the markers in the generic definition, and all traits in the <code>where</code> clause.</p>\n\n<p>As stated in the comments and found by @PeterHall through the commit log, prior to rust 1.15, <code>?Sized</code> was only available as a trait requirement in the type definition. <a href=\"https://github.com/rust-lang/rust/pull/37791\" rel=\"nofollow noreferrer\">This PR</a> changed this to the behavior we have today.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "accepted_answer_id": 58027271, "answer_count": 1, "score": 2, "last_activity_date": 1568991623, "creation_date": 1568976224, "last_edit_date": 1568989880, "question_id": 58026832, "link": "https://stackoverflow.com/questions/58026832/rust-and-trait-bounds-conventions-sized", "title": "Rust and trait bounds conventions (?Sized)", "body": "<p>On page 297 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\">Programming Rust</a> you can find the following</p>\n\n<pre><code>impl HashMap&lt;K, V&gt; where K: Eq + Hash\n{\n  fn get&lt;Q: ?Sized&gt;(&amp;self, key: &amp;Q) -&gt; Option&lt;&amp;V&gt;\n      where K: Borrow&lt;Q&gt;,\n            Q: Eq + Hash\n}\n</code></pre>\n\n<p>I've seen this before where <code>?Sized</code> is written by itself, and the rest of trait bounds are on a different line? Is this a convention? As I understand it, the above is effectively the same as the following?</p>\n\n<pre><code>impl HashMap&lt;K, V&gt; where K: Eq + Hash\n{\n  fn get&lt;Q&gt;(&amp;self, key: &amp;Q) -&gt; Option&lt;&amp;V&gt;\n      where K: Borrow&lt;Q&gt;,\n            Q: Eq + Hash + ?Sized\n}\n</code></pre>\n\n<p>Why is <code>?Sized</code> split off? You can see this in a similar example on <a href=\"https://stackoverflow.com/q/58030348/124486\">page 295</a>,</p>\n\n<pre><code>...\nwhere T: AsRef&lt;U&gt;\n      T: ?Sized, U: ?Sized\n...\n</code></pre>\n"}, {"tags": ["encoding", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3308, "user_id": 161250, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/74b00bbfe9ba0f647bb154ed5f923cb4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/161250/alex"}, "is_accepted": false, "score": 1, "last_activity_date": 1568977831, "creation_date": 1568977831, "answer_id": 58027268, "question_id": 58026024, "link": "https://stackoverflow.com/questions/58026024/rust-how-to-urlencode-a-string-with-byte-parameters/58027268#58027268", "title": "Rust how to urlencode a string with byte parameters?", "body": "<p>It's a bit of a hack, but you can override how values are encoded through a closure, and thus, you'll be able to sneak in binary values that way. I make use of <code>\"!\"</code> to indicate where to substitute the binary values in my example below, but you could really use anything:</p>\n\n<pre><code>fn main() {\n    let binary = vec![0, 1, 2, 3];\n\n    let encoded = form_urlencoded::Serializer::new(String::new())\n        .append_pair(\"foo\", \"bar &amp; baz\")\n        .append_pair(\"saison\", \"\u00c9t\u00e9+hiver\")\n        .encoding_override(Some(&amp;|input| {\n            if input != \"!\" {\n                // Return the actual value (\"info_hash\", in this particular case)\n                Cow::Borrowed(input.as_bytes())\n            } else {\n                // When \"!\" is seen, return the binary data instead\n                Cow::Owned(binary.clone())\n            }\n        }))\n        .append_pair(\"info_hash\", \"!\")\n        .finish();\n\n    println!(\"{:?}\", encoded);\n}\n</code></pre>\n\n<p>This outputs </p>\n\n<blockquote>\n  <p>\"foo=bar+%26+baz&amp;saison=%C3%89t%C3%A9%2Bhiver&amp;info_hash=%00%01%02%03\"</p>\n</blockquote>\n\n<p>You can try it out here: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=805d80ebbc98909fa32177030102ba12\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=805d80ebbc98909fa32177030102ba12</a></p>\n"}], "owner": {"reputation": 2932, "user_id": 7212809, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VlOyJEUeeSc/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jExBae7iJ2ALFtcMj_6BCoHGTMgw/mo/photo.jpg?sz=128", "display_name": "nz_21", "link": "https://stackoverflow.com/users/7212809/nz-21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 664, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1568977831, "creation_date": 1568973356, "question_id": 58026024, "link": "https://stackoverflow.com/questions/58026024/rust-how-to-urlencode-a-string-with-byte-parameters", "title": "Rust how to urlencode a string with byte parameters?", "body": "<p>I have some parameters like so:</p>\n\n<pre><code>{'peer_id': '-PC0001-781232119400', 'port': 6889, 'event': 'started', 'compact': 1, 'left': 2097152000, 'uploaded': 0, 'info_hash': b'\\xd5@\\xfcH\\xeb\\x12\\xf2\\x831c\\xee\\xd6B\\x1dD\\x9d\\xd8\\xf1\\xce\\x1f', 'downloaded': 0}\n\n</code></pre>\n\n<p>I'd like to have it all urlencoded into a string like so:</p>\n\n<pre><code>my_url?peer_id=-PC0001-781232119400&amp;port=6889&amp;event=started&amp;compact=1&amp;left=1&amp;uploaded=0&amp;info_hash=%D5%40%FCH%EB%12%F2%831c%EE%D6B%1DD%9D%D8%F1%CE%1F&amp;downloaded=0\"\n</code></pre>\n\n<p>I've played around with urlcode and come up with this:</p>\n\n<pre><code>extern crate url;\nuse url::form_urlencoded;\n\nfn main() {\n\n    let encoded: String = form_urlencoded::Serializer::new(String::new())\n        .append_pair(\"foo\", \"bar &amp; baz\")\n        .append_pair(\"saison\", \"\u00c9t\u00e9+hiver\")\n        .finish();\n\n    println!(\"{:?}\", encoded);\n}\n</code></pre>\n\n<p>Problem is, <code>apprend_pair</code> takes in a pair of <code>&amp;'str</code> - it doesn't take in bytes...I'm not sure how to accomplish my goal.</p>\n\n<p>In python, I'd simply use the builtin <code>from urllib.parse import urlencode\n</code> and do <code>urlencode(params)</code></p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1568965447, "post_id": 58023943, "comment_id": 102450474, "body": "The exact explanation is in the <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#deref\" rel=\"nofollow noreferrer\">String documentation</a>."}, {"owner": {"reputation": 4406, "user_id": 3741571, "user_type": "registered", "accept_rate": 2, "profile_image": "https://i.stack.imgur.com/0WXuV.jpg?s=128&g=1", "display_name": "chenzhongpu", "link": "https://stackoverflow.com/users/3741571/chenzhongpu"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1568965592, "post_id": 58023943, "comment_id": 102450544, "body": "@edwardw I know that it can convert <code>&amp;String</code> to <code>&amp;str</code>, but here it does not get the reference of <code>s</code>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1568965792, "post_id": 58023943, "comment_id": 102450636, "body": "@chenzhongpu &quot;When looking up a method call, the receiver may be automatically dereferenced or borrowed in order to call a method.&quot; (<a href=\"https://doc.rust-lang.org/reference/expressions/method-call-expr.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/expressions/method-call-expr.ht&zwnj;&#8203;ml</a>)"}, {"owner": {"reputation": 4406, "user_id": 3741571, "user_type": "registered", "accept_rate": 2, "profile_image": "https://i.stack.imgur.com/0WXuV.jpg?s=128&g=1", "display_name": "chenzhongpu", "link": "https://stackoverflow.com/users/3741571/chenzhongpu"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1568965897, "post_id": 58023943, "comment_id": 102450682, "body": "got it @DenysS&#233;guret"}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 1, "creation_date": 1568965920, "post_id": 58023943, "comment_id": 102450691, "body": "See also the longer Deref coercion explanation in the book: <a href=\"https://doc.rust-lang.org/book/ch15-02-deref.html#implicit-deref-coercions-with-functions-and-methods\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568981485, "post_id": 58023943, "comment_id": 102458520, "body": "Does <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust&#39;s exact auto-dereferencing  rules?</a> answer your question?"}, {"owner": {"reputation": 4406, "user_id": 3741571, "user_type": "registered", "accept_rate": 2, "profile_image": "https://i.stack.imgur.com/0WXuV.jpg?s=128&g=1", "display_name": "chenzhongpu", "link": "https://stackoverflow.com/users/3741571/chenzhongpu"}, "edited": false, "score": 0, "creation_date": 1568986003, "post_id": 58023943, "comment_id": 102460943, "body": "@trentclt No, in this case, it is caused by both auto-reference (in the first step) and coercion (in the second step)"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1568990388, "creation_date": 1568990388, "answer_id": 58030531, "question_id": 58023943, "link": "https://stackoverflow.com/questions/58023943/why-does-string-implicitly-convert-to-str-in-rust/58030531#58030531", "title": "Why does String implicitly convert to &amp;str in Rust?", "body": "<p>This is actually covered in this question:\n<a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust&#39;s exact auto-dereferencing rules?</a>. There is a lot going on in that answer, so I will try to apply it to your question.</p>\n\n<p>To quote huon's answer:</p>\n\n<blockquote>\n  <p>The core of the algorithm is:</p>\n  \n  <ul>\n  <li>For each <a href=\"https://github.com/rust-lang/rust/blob/b6d91a2bdac45cd919497a24207fab843124d4ba/src/librustc_typeck/check/method/probe.rs#L166-L196\" rel=\"nofollow noreferrer\">\"dereference step\"</a> <code>U</code> (that is, set <code>U = T</code> and then <code>U = *T</code>, ...)\n  \n  <ol>\n  <li>if there's a method <code>bar</code> where the receiver type (the type of <code>self</code> in the method) matches <code>U</code> exactly , use it (<a href=\"https://github.com/rust-lang/rust/blob/b6d91a2bdac45cd919497a24207fab843124d4ba/src/librustc_typeck/check/method/probe.rs#L793\" rel=\"nofollow noreferrer\">a \"by value method\"</a>)</li>\n  <li>otherwise, add one auto-ref (take <code>&amp;</code> or <code>&amp;mut</code> of the receiver), and, if some method's receiver matches <code>&amp;U</code>, use it (<a href=\"https://github.com/rust-lang/rust/blob/b6d91a2bdac45cd919497a24207fab843124d4ba/src/librustc_typeck/check/method/probe.rs#L798\" rel=\"nofollow noreferrer\">an \"autorefd method\"</a>)</li>\n  </ol></li>\n  </ul>\n</blockquote>\n\n<p>The key is in the \"dereference steps\": <code>U = *T</code> means <code>let u = Deref::deref(t);</code>, where <code>u: U</code>, <code>t: T</code>. We keep doing that until something can't be dereferenced any more.</p>\n\n<p>Following that algorithm for the call to <code>s.chars()</code> from your code:</p>\n\n<ol>\n<li>First dereference step (no deref):\n\n<ol>\n<li>Can you call <code>String::chars(s)</code>? <em>No.</em></li>\n<li>What about <code>&amp;String</code> or <code>&amp;mut String</code>? <em>No.</em></li>\n</ol></li>\n<li>Second dereference step: <code>&lt;String as Deref&gt;::Target = str</code>, so we are looking for methods of <code>str</code>. <code>let c: str = *s</code> (assuming this DST type was allowed);\n\n<ol>\n<li>Can you call <code>str::chars(c)</code>? <em>No</em>.</li>\n<li>Can you call <code>str::chars(&amp;c)</code>? <em>Yes!</em></li>\n</ol></li>\n</ol>\n"}], "owner": {"reputation": 4406, "user_id": 3741571, "user_type": "registered", "accept_rate": 2, "profile_image": "https://i.stack.imgur.com/0WXuV.jpg?s=128&g=1", "display_name": "chenzhongpu", "link": "https://stackoverflow.com/users/3741571/chenzhongpu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1568990388, "creation_date": 1568965335, "question_id": 58023943, "link": "https://stackoverflow.com/questions/58023943/why-does-string-implicitly-convert-to-str-in-rust", "title": "Why does String implicitly convert to &amp;str in Rust?", "body": "<p>Considering the following code:</p>\n\n<pre><code>let s = String::from(\"hello\");\nlet mut r = String::new();\n\nfor c in s.chars() {\n    r.push(c);\n}\n</code></pre>\n\n<p>As <code>chars</code> is the method of <code>&amp;str</code>, why can <code>String</code> call it? I suppose it has something to do with the <code>coercion</code>, but I don't fully understand this implicit conversion. </p>\n"}, {"tags": ["authentication", "rust", "git-clone", "libgit2"], "answers": [{"tags": [], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "is_accepted": true, "score": 0, "last_activity_date": 1569332134, "last_edit_date": 1569332134, "creation_date": 1569292336, "answer_id": 58072304, "question_id": 58021977, "link": "https://stackoverflow.com/questions/58021977/in-git2-rs-how-do-i-authenticate-when-cloning/58072304#58072304", "title": "In git2-rs, how do I authenticate when cloning?", "body": "<p>Use <code>git2::build::RepoBuilder</code>.</p>\n\n<p>Credit goes to <a href=\"https://github.com/rust-lang/git2-rs/issues/329\" rel=\"nofollow noreferrer\">issue 329 on the git2 issue tracker</a>.</p>\n"}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 58072304, "answer_count": 1, "score": 1, "last_activity_date": 1569332134, "creation_date": 1568955217, "last_edit_date": 1568961687, "question_id": 58021977, "link": "https://stackoverflow.com/questions/58021977/in-git2-rs-how-do-i-authenticate-when-cloning", "title": "In git2-rs, how do I authenticate when cloning?", "body": "<p>How do I pass an authentication callback to <code>git2::Repository::clone()</code>? (<code>set_remote_callbacks</code> sets up the callbacks).</p>\n\n<p>I have some code like the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut cb = git2::RemoteCallbacks::new();\nSelf::set_remote_callbacks(&amp;mut cb);\nlet rr = Repository::clone(url, path.to_str().ok_or(\"bad string\".to_string())?);\n</code></pre>\n\n<p>What I want is like, as an example, when I do I fetch, I do this, which passes my callbacks to the <code>fetch</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut fetchOptions = FetchOptions::new();\nlet mut cb = git2::RemoteCallbacks::new();\nSelf::set_remote_callbacks(&amp;mut cb);\nfetchOptions.remote_callbacks(cb);\nlet mut remote = self.repo.find_remote(remote)?;\nremote.fetch(&amp;[branch], Some(&amp;mut fetchOptions), None)?;\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568943284, "post_id": 58020123, "comment_id": 102444593, "body": "You may find the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6a74e5d5a8133e478898dcedf0162b11\" rel=\"nofollow noreferrer\">marker structs + extra parameter</a> idea as described in <a href=\"https://stackoverflow.com/a/52692592/3650362\">this answer</a> to be useful. Might that answer your question? There are definitely drawbacks, like the proliferation of generics."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1568960655, "post_id": 58020123, "comment_id": 102448317, "body": "AFAIK there is no simple solution today. <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">RFC 1210</a> aims to solve this once it is implemented."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568978315, "post_id": 58020123, "comment_id": 102456930, "body": "I don&#39;t believe specialization can fix this; you still have a coherence issue because any downstream can <code>struct Quux; impl ConvertFrom&lt;MyStruct&lt;Quux&gt;&gt; for Quux</code> and neither <code>impl</code> in the example is more specific."}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 130, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1568937192, "creation_date": 1568937192, "question_id": 58020123, "link": "https://stackoverflow.com/questions/58020123/strategies-for-resolving-conflicting-trait-implementations-when-using-generics-i", "title": "Strategies for resolving conflicting trait implementations when using generics in Rust?", "body": "<p>What are some general strategies for resolving trait implementations when using generics in Rust?  As a contrived example, consider the following code that allows conversion from primitive types to a struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// External libraries\nuse std::fmt::Debug;\n\n// Create some structure that we can convert from and into\n#[derive(Debug)]\nstruct MyStruct &lt;T&gt; {\n    val : T,\n}\n\n// Convert from a value\ntrait ConvertFrom &lt;T&gt;\nwhere\n    Self : Sized\n{\n    fn from(t : T) -&gt;  Self;\n}\n\n// Convert T into a T\nimpl &lt;T&gt; ConvertFrom &lt;T&gt; for T {\n    fn from(t : T) -&gt; Self {\n        t\n    }\n}\n\n// Convert f32 into f64\nimpl ConvertFrom &lt;f32&gt; for f64 {\n    fn from(t : f32) -&gt; Self {\n        t as f64 \n    }\n}\n\n// Convert T into a MyStruct &lt;U&gt;\nimpl &lt;T,U&gt; ConvertFrom &lt;T&gt; for MyStruct &lt;U&gt;  \nwhere\n    U : ConvertFrom &lt;T&gt;\n{\n    fn from(t : T) -&gt; Self {\n        MyStruct{ val : ConvertFrom::&lt;T&gt;::from(t) }\n    }\n}  \n\n// Test our conversion\nfn foo01 &lt;T&gt; () -&gt; ()\nwhere\n    T : ConvertFrom &lt;f32&gt; + Debug\n{\n    let y01 : T = ConvertFrom::&lt;f32&gt;::from(1.2_f32);\n    println!(\"{:?}\",y01);\n}\n\nfn main() {\n    foo01::&lt;MyStruct&lt;f32&gt;&gt;();  \n    foo01::&lt;f64&gt;();\n}\n</code></pre>\n\n<p>This gives the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `ConvertFrom&lt;MyStruct&lt;_&gt;&gt;` for type `MyStruct&lt;_&gt;`:\n  --&gt; src/test03.rs:33:1\n   |\n19 |   impl &lt;T&gt; ConvertFrom &lt;T&gt; for T {\n   |   ------------------------------ first implementation here\n...\n33 | / impl &lt;T,U&gt; ConvertFrom &lt;T&gt; for MyStruct &lt;U&gt;\n34 | | where\n35 | |     U : ConvertFrom &lt;T&gt;\n36 | | {\n...  |\n39 | |     }\n40 | | }\n   | |_^ conflicting implementation for `MyStruct&lt;_&gt;`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0119`.\nerror: Could not compile `rust_from_to`\n</code></pre>\n\n<p>This makes sense, there's an ambiguity between the identity conversion from <code>T-&gt;T</code> and from <code>T-&gt;MyStruct &lt;U&gt;</code> since <code>T</code> could be something like <code>MyStruct&lt;f32&gt;</code> and <code>U</code> could be <code>f32</code>.  What's not clear to me is how to resolve it and <code>rustc --explain E0119</code> did not give great hints.  At issue is that I'd like to have a conversion function that converts <code>T</code> into <code>MyStruct &lt;U&gt;</code> whenever <code>T</code> converts to <code>U</code>.  I can make this work if <code>T=U</code> with the trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Convert T into a MyStruct &lt;T&gt;\nimpl &lt;T&gt; ConvertFrom &lt;T&gt; for MyStruct &lt;T&gt; {\n    fn from(t : T) -&gt; Self {\n        MyStruct{ val : t }                        \n    }\n}  \n</code></pre>\n\n<p>but this is less general than I'd like.  Is there a general strategy for constructing such traits or functions?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1568930891, "post_id": 58019355, "comment_id": 102442335, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25818082/vector-of-objects-belonging-to-a-trait\">Vector of objects belonging to a trait</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "is_accepted": false, "score": 0, "last_activity_date": 1568952655, "creation_date": 1568952655, "answer_id": 58021677, "question_id": 58019355, "link": "https://stackoverflow.com/questions/58019355/rust-function-to-return-generic-trait/58021677#58021677", "title": "Rust function to return generic trait", "body": "<p>You would need to box the results in order to be able to return a heterogenous collection via dynamic dispatch:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_data_vector(&amp;mut iter: DatabaseRecordIterator) -&gt; Vec&lt;Box&lt;dynDbfFile&gt;&gt;\n</code></pre>\n\n<p>However you will then get the following error:</p>\n\n<pre><code>| pub fn get_data_vector(&amp;mut iter: DatabaseRecordIterator) -&gt; Vec&lt;Box&lt;dyn DbfFile&gt;&gt; {\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `DbfFile` cannot be made into an object\n|\n</code></pre>\n\n<p>The reason for this is that your function returns <code>Self</code> - which is different for each implementation. You would need to change it to a common type to make the trait object-safe (allow dynamic dispatch).</p>\n\n<p>An alternative could be to return multiple types via an enumeration:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum GetDataVectorResult {\n    Attachable(InsertableAttachable),\n    Attached(InsertableAttached),\n}\n\npub fn get_data_vector(&amp;mut iter: DatabaseRecordIterator) -&gt; Vec&lt;GetDataVectorResult&gt;\n</code></pre>\n"}], "owner": {"reputation": 3114, "user_id": 743982, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/53b0ac77c37f30fd4561fafaa00d2a1b?s=128&d=identicon&r=PG&f=1", "display_name": "Shahzeb Khan", "link": "https://stackoverflow.com/users/743982/shahzeb-khan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 465, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1568952655, "creation_date": 1568930070, "question_id": 58019355, "link": "https://stackoverflow.com/questions/58019355/rust-function-to-return-generic-trait", "title": "Rust function to return generic trait", "body": "<p>I have two structs implementing same trait. I need a single fuction that returs object of any of these structure. </p>\n\n<p>trait</p>\n\n<pre><code>pub trait DbfFile{\n    fn new(fields: HashMap&lt;String, FieldValue&gt;) -&gt; Self;\n}\n</code></pre>\n\n<p>The structures are </p>\n\n<pre><code>pub struct InsertableAttachable {\n    pub f1: String,\n    pub f2: String,\n    pub f3: String,\n    pub f4: i8,\n}\n\nimpl DbfFile for InsertableAttachable{\n    fn new(fields: HashMap&lt;String, FieldValue, RandomState&gt;) -&gt; Self {\n        InsertableAttachable {\n            // fields\n        }\n    }\n}\n\n\n\n// Converting this to generic\n\nimpl InsertableAttachable{\n    pub fn get_data_vector(mut iter: DatabaseRecordIterator) -&gt; Vec&lt;InsertableAttachable&gt;{\n        let mut db_data: Vec&lt;InsertableAttachable&gt; = vec!();\n        while let Some(table_row) = iter.next() {\n            let fields = table_row.fields;\n            db_data.push(InsertableAttachable::new(fields));\n        };\n        db_data\n    }\n}\n</code></pre>\n\n<p>And another structure</p>\n\n<pre><code>pub struct InsertableAttached {\n    pub f1: String,\n    pub f2: i32,\n    pub f3: i32,\n}\n\nimpl DbfFile for InsertableAttached {\n    fn new(fields: HashMap&lt;String, FieldValue, RandomState&gt;) -&gt; Self {\n        InsertableAttached {\n           // fields\n        }\n    }\n\n}\n\n// Converting this to generic\n\nimpl InsertableAttached{\n    pub fn get_data_vector(mut iter: DatabaseRecordIterator) -&gt; Vec&lt;InsertableAttached&gt;{\n        let mut db_data: Vec&lt;InsertableAttached&gt; = vec!();\n        while let Some(table_row) = iter.next() {\n            let fields = table_row.fields;\n            db_data.push(InsertableAttached::new(fields));\n        };\n        db_data\n    }\n}\n</code></pre>\n\n<p>Here are example like <a href=\"https://stackoverflow.com/questions/30661046/how-do-i-return-an-instance-of-a-trait-from-a-method\">this returns box / struct</a> and <a href=\"https://gist.github.com/cristianoliveira/722204361927761ae69c150fde040059\" rel=\"nofollow noreferrer\">this one</a> returns an option.</p>\n\n<p>The following function has compile time error </p>\n\n<pre><code>error[E0277]: the size for values of type `(dyn models::traits::DbfFile + 'static)` cannot be known at compilation time\n  --&gt; src/dbf.rs:75:1\n   |\n75 | / pub fn get_data_vector(&amp;mut iter: DatabaseRecordIterator) -&gt; Vec&lt;DbfFile&gt;{\n76 | |     let mut db_data: Vec&lt;DbfFile&gt; = vec!();\n77 | |     while let Some(table_row) = iter.next() {\n78 | |         let fields = table_row.fields;\n...  |\n81 | |     db_data\n82 | | }\n   | |_^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn models::traits::DbfFile + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::vec::Vec`\n\nerror[E0038]: the trait `models::traits::DbfFile` cannot be made into an object\n  --&gt; src/dbf.rs:75:1\n   |\n75 | pub fn get_data_vector(&amp;mut iter: DatabaseRecordIterator) -&gt; Vec&lt;DbfFile&gt;{\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `models::traits::DbfFile` cannot be made into an object\n</code></pre>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1568982112, "post_id": 58019961, "comment_id": 102458853, "body": "You can also use a <code>Box&lt;str&gt;</code> as key, it has the same memory layout as <code>&amp;str</code>."}], "tags": [], "owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "is_accepted": true, "score": 2, "last_activity_date": 1568935607, "creation_date": 1568935607, "answer_id": 58019961, "question_id": 58018880, "link": "https://stackoverflow.com/questions/58018880/fix-serde-lifetime-issue-when-using-lazy-static/58019961#58019961", "title": "Fix serde lifetime issue when using lazy_static", "body": "<p>The error message is telling you that you can't deserialize to a <code>&amp;'static str</code>. As the deserializer goes along creating the entries, the <code>&amp;str</code> keys could only have as long a lifetime as a borrow of the buffer the deserializer is reading the file into. But <code>&amp;'static str</code> must point to a <code>str</code> which lives forever.</p>\n\n<p>I see two solutions here: The easy way and the hard way.</p>\n\n<p>The easy way: Just change <code>&amp;'static str</code> in the type to <code>String</code> and it compiles. This way the <code>HashMap</code> owns the keys; serde already knows how to deserialize owned strings.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static ref KEYWORDS: HashMap&lt;String, i32&gt; = { // ...\n</code></pre>\n\n<p>The hard way: Technically you can still get your <code>HashMap&lt;&amp;'static str, i32&gt;</code> by leaking the backing buffers of the <code>String</code>s. Normally \"leaking\" is bad, but since this is a lazy static, it really makes no difference as those buffers would never be freed anyways. Getting a <code>&amp;'static str</code> by leaking a <code>String</code> looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn leak_string(from: String) -&gt; &amp;'static str {\n    Box::leak(from.into_boxed_str())\n}\n</code></pre>\n\n<p>The problem is that serde doesn't do this automatically. One way to accomplish this would be to deserialize to the <code>HashMap&lt;String, i32&gt;</code> first and then convert it to <code>HashMap&lt;&amp;'static string, i32&gt;</code> by taking each of the entries and inserting them into a new <code>HashMap</code> after running the keys through <code>leak_string</code>. This is inefficient as there was no need to collect into a <code>HashMap</code> in the first place. A better solution would involve writing a custom deserializer that did <code>leak_string</code> \"on the fly\". Since the easy way is so much easier, and there's some stumbling blocks for this hard way, I don't think it's useful to provide a full code sample here.</p>\n\n<p>The only real advantage of \"the hard way\" vs \"the easy way\" is that \"the hard way\" requires one pointer's worth less memory for each key in the <code>HashMap</code> (<code>&amp;str</code> is pointer+len; <code>String</code> is pointer+len+capacity). It's also nice in that it doesn't change your type signature, but there's very little you can do with a <code>&amp;'static str</code> that you can't do with a <code>String</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 0, "last_activity_date": 1568964398, "creation_date": 1568964398, "answer_id": 58023694, "question_id": 58018880, "link": "https://stackoverflow.com/questions/58018880/fix-serde-lifetime-issue-when-using-lazy-static/58023694#58023694", "title": "Fix serde lifetime issue when using lazy_static", "body": "<p>The culprit here is how <code>serde_json::from_reader</code> is defined. From <a href=\"https://docs.serde.rs/serde_json/fn.from_reader.html\" rel=\"nofollow noreferrer\">its documentation</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn from_reader&lt;R, T&gt;(rdr: R) -&gt; Result&lt;T&gt; where\n    R: Read,\n    T: DeserializeOwned,\n</code></pre>\n\n<p>So, the result must be owned data, not borrowed. Even the <code>&amp;'static</code> won't do. You have to use <code>String</code> here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>lazy_static! {\n    static ref KEYWORDS: HashMap&lt;String, i32&gt; = {\n        let file = File::open(\"words.json\").unwrap();\n        let reader = BufReader::new(file);\n        serde_json::from_reader(reader).unwrap()\n    };\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1569053730, "post_id": 58038448, "comment_id": 102477970, "body": "This is amazing"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 3, "last_activity_date": 1569053622, "creation_date": 1569053622, "answer_id": 58038448, "question_id": 58018880, "link": "https://stackoverflow.com/questions/58018880/fix-serde-lifetime-issue-when-using-lazy-static/58038448#58038448", "title": "Fix serde lifetime issue when using lazy_static", "body": "<p>When using <code>serde_json::from_str</code> to deserialize from <code>&amp;str</code> \u27f6 <code>HashMap&lt;&amp;str, i32&gt;</code>, the input JSON string needs to outlive the string slices in the output. This is the role of the <code>'a</code> lifetime in the signature: <a href=\"https://docs.rs/serde_json/1.0.40/serde_json/fn.from_str.html\" rel=\"nofollow noreferrer\">https://docs.rs/serde_json/1.0.40/serde_json/fn.from_str.html</a></p>\n\n<p>That means if the output needs to contain string slices with <code>'static</code> lifetime, the input JSON data must also have <code>'static</code> lifetime. We know how to do that -- lazy_static!</p>\n\n<pre><code>use lazy_static::lazy_static;\nuse std::collections::HashMap;\n\nlazy_static! {\n    static ref KEYWORDS: HashMap&lt;&amp;'static str, i32&gt; = {\n        lazy_static! {\n            static ref WORDS_JSON: String = {\n                std::fs::read_to_string(\"words.json\").unwrap()\n            };\n        }\n        serde_json::from_str(&amp;WORDS_JSON).unwrap()\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 0, "accepted_answer_id": 58019961, "answer_count": 3, "score": 1, "last_activity_date": 1569053622, "creation_date": 1568926892, "question_id": 58018880, "link": "https://stackoverflow.com/questions/58018880/fix-serde-lifetime-issue-when-using-lazy-static", "title": "Fix serde lifetime issue when using lazy_static", "body": "<p>I'd like to read some json into a static <code>HashMap</code>, and am using <code>lazy_static</code> and <code>serde</code>, but I can't figure out how (if at all) I can fix this <code>serde</code> lifetime issue:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::collections::HashMap;\n\nlazy_static! {\n    static ref KEYWORDS: HashMap&lt;&amp;'static str, i32&gt; = {\n        let file = File::open(\"words.json\").unwrap();\n        let reader = BufReader::new(file);\n        serde_json::from_reader(reader).unwrap()\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=17ebf44b1ac1f112c0f64eaa8800d24e\" rel=\"nofollow noreferrer\">playground link</a>  </p>\n\n<p><code>error: implementation of serde::de::Deserialize is not general enough</code><br>\n<code>note: HashMap&lt;&amp;str, i32&gt; must implement serde::de::Deserialize&lt;'0&gt;, for any lifetime '0</code><br>\n<code>note: but HashMap&lt;&amp;str, i32&gt; actually implements serde::de::Deserialize&lt;'1&gt;, for some specific lifetime '1</code></p>\n\n<p><code>words.json</code> is a simple json map: <code>{\"aaargh\": 1}</code>.</p>\n\n<p>I'm open to another, non-<code>lazy_static</code> approach if need be.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568924829, "post_id": 58018167, "comment_id": 102440554, "body": "I made a few, (to me) fairly conservative assumptions about your code to get it to compile; please review the changes and fix the code if my changes do not reflect your problem."}, {"owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568925121, "post_id": 58018167, "comment_id": 102440670, "body": "thanks for adding the missing imports @trentcl it slipped my mind while drafting the question."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1568927061, "creation_date": 1568927061, "answer_id": 58018907, "question_id": 58018167, "link": "https://stackoverflow.com/questions/58018167/what-is-the-best-way-to-reuse-a-borrowed-struct-field-if-it-doesnt-implement-th/58018907#58018907", "title": "What is the best way to reuse a borrowed struct field if it doesn&#39;t implement the Copy or Clone trait?", "body": "<blockquote>\n  <p>The version method returns an error when I try to reuse the reference</p>\n</blockquote>\n\n<p><code>self.conn</code> is not a reference; it is an owned value. Because <code>Option::unwrap</code> takes it by value (and its type does not implement <code>Copy</code>), you can't reuse it after calling <code>.unwrap()</code> on it; that would lead to unsafety.</p>\n\n<p>But you could just store the result of calling <code>unwrap</code> into a new variable, and use that instead:</p>\n\n<pre><code>    pub fn version(self) -&gt; io::Result&lt;[u8; 8]&gt; {\n        let mut ver: [u8; 8] = [0;8];\n        const COMMAND_STRING: &amp;[u8] = b\"VERSION\\r\\n\";\n        let mut conn = self.conn.unwrap();\n        conn.write(COMMAND_STRING)?;\n        conn.read(&amp;mut ver[..])?;\n        Ok(ver)\n    }\n</code></pre>\n\n<p>This is possible because <code>io::Write::write</code> and <code>io::Read::read</code> both take <code>&amp;mut self</code>, which means that neither one needs to take <code>conn</code> by value. Instead, <code>conn</code> will be dropped at the end of <code>version</code>. See also <a href=\"https://stackoverflow.com/questions/41664099/how-to-prevent-a-value-from-being-moved\">How to prevent a value from being moved?</a></p>\n\n<p>I've made several further changes, which you may consider suggestions:</p>\n\n<ul>\n<li><code>io::Result&lt;_&gt;</code> is an alias for <code>Result&lt;_, io::Error&gt;</code>, so I changed the declared return type. This is a common pattern in many libraries, and I find this form easier to understand quickly.</li>\n<li><code>conn.read()</code> returns an <code>io::Result</code>, which was previously being ignored. Now <code>conn.write()</code> and <code>conn.read()</code> both raise errors to the caller with the special <code>?</code> operator. You can replace <code>?</code> with <code>.unwrap()</code> if you want errors to panic instead of propagate. See <a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\">What is this question mark operator about?</a></li>\n<li><code>COMMAND_STRING</code> is a <code>const</code>ant. It's debatable whether having this name at all is useful compared to just <code>conn.write(b\"VERSION\\r\\n\")</code>, but if you're going to have it, a <code>const</code> seems the right way to go. In principle the compiler can optimize <code>const</code>s better than regular variables; in practice it's not likely to make much difference in this case, but when a <code>const</code> is more explicit about how the value is used, there's no reason not to.</li>\n</ul>\n\n<h3>Using an actual reference</h3>\n\n<p>If you actually want <code>version</code> to take <code>self</code> by reference, and therefore you <em>don't</em> want it to unwrap and destroy <code>self.conn</code>, you can use <code>Option::as_ref</code> to make that work.</p>\n\n<pre><code>    pub fn version(&amp;self) -&gt; io::Result&lt;[u8; 8]&gt; {  // NOTE: `&amp;self`\n        let mut ver: [u8; 8] = [0;8];\n        let mut conn = self.conn.as_ref().unwrap(); // NOTE: `.as_ref()`\n        conn.write(b\"VERSION\\r\\n\")?;\n        conn.read(&amp;mut ver[..])?;\n        Ok(ver)\n    }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b353b0a0aa23c9c1bdf9d13f321cba91\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p><code>as_ref</code> turns a <code>&amp;Option&lt;_&gt;</code> into a <code>Option&lt;&amp;_&gt;</code>, so that <code>unwrap</code>ping it does not consume <code>self.conn</code> but just returns the reference. See <a href=\"https://stackoverflow.com/questions/32338659/cannot-move-out-of-borrowed-content-when-unwrapping\">Cannot move out of borrowed content when unwrapping</a>.</p>\n"}], "owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "accepted_answer_id": 58018907, "answer_count": 1, "score": 3, "last_activity_date": 1568927061, "creation_date": 1568923029, "last_edit_date": 1568924306, "question_id": 58018167, "link": "https://stackoverflow.com/questions/58018167/what-is-the-best-way-to-reuse-a-borrowed-struct-field-if-it-doesnt-implement-th", "title": "What is the best way to reuse a borrowed struct field if it doesn&#39;t implement the Copy or Clone trait?", "body": "<p>I am writing a client for a TCP server</p>\n\n<pre><code>use std::net::TcpStream;\nuse std::io::{Read, Write, Error};\n\npub struct Client {\n    addr: String,\n    conn: Option&lt;TcpStream&gt;,\n}\n\nimpl Client {\n    pub fn connect(&amp;mut self) {\n        let res = TcpStream::connect(&amp;self.addr);\n        match res {\n            Ok(c) =&gt; {\n                self.conn = Some(c);\n            },\n            Err(_) =&gt; panic!(),\n        }\n    }\n\n    pub fn version(self) -&gt; Result&lt;[u8; 8], Error&gt; {\n        let mut ver: [u8; 8] = [0;8];\n        let command_string = b\"VERSION\\r\\n\";\n        let res = self.conn.unwrap().write(&amp;command_string[0..]);\n        match res {\n            Ok(_) =&gt; self.conn.unwrap().read(&amp;mut ver[..]),\n            Err(e) =&gt; panic!(e)\n        };\n        Ok(ver)\n    }\n}\n</code></pre>\n\n<p>The version method returns an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `self.conn`\n</code></pre>\n\n<p>when I try to reuse the reference. I thought about using <code>#[derive(Copy, Clone)]</code> but since these traits are not implemented for TCPStream I am not sure what to do. What would be the best way to achieve reading and writing to a server in a method (btw there will be many such methods like version which will both read and write to the server)</p>\n\n<p>I am still new to rust and trying to wrap my head around ownership concepts so I apologise if this is a stupid question but since I want to discuss various approaches (if indeed there are multiple approaches to solving this problem) to reuse un-Clonable/Copyable fields I thought this question was worth asking. </p>\n"}, {"tags": ["rust", "bit-manipulation", "logical-operators", "bit-shift"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1568915835, "creation_date": 1568915835, "answer_id": 58016606, "question_id": 58016544, "link": "https://stackoverflow.com/questions/58016544/rust-overflowing-shift-left/58016606#58016606", "title": "Rust overflowing shift left", "body": "<p>You got your operator priority and cast wrong:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_instruction(file: &amp;[u8], counter: usize) {\n    let ins = u32::from(file[counter]) &lt;&lt; 24\n        | u32::from(file[counter + 1]) &lt;&lt; 16\n        | u32::from(file[counter + 2]) &lt;&lt; 8\n        | u32::from(file[counter + 3]);\n    println!(\"{:x}\", ins);\n}\n</code></pre>\n\n<p>You were casting <em>after</em> trying to shift a <code>u8</code> 24 bits, which was your problem.</p>\n"}, {"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1568974413, "post_id": 58017373, "comment_id": 102454997, "body": "This takes an array, while his method takes a slice and initial position though."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1569008755, "post_id": 58017373, "comment_id": 102470738, "body": "@mcarton Which is why the code first converts the slice to an array. If we are concerned about the performance impact, we could also <code>transmute()</code> the slice to an array."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 1, "last_activity_date": 1568919227, "creation_date": 1568919227, "answer_id": 58017373, "question_id": 58016544, "link": "https://stackoverflow.com/questions/58016544/rust-overflowing-shift-left/58017373#58017373", "title": "Rust overflowing shift left", "body": "<p>It's not necessary to twiddle the bits yourself \u2013 you can use the function <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html#method.from_be_bytes\" rel=\"nofollow noreferrer\"><code>u32::from_be_bytes()</code></a> instead:</p>\n\n<pre><code>pub fn get_instruction(file: &amp;[u8], counter: usize) {\n    let ins_bytes = &lt;[u8; 4]&gt;::try_from(&amp;file[counter..counter + 4]).unwrap();\n    let ins = u32::from_be_bytes(ins_bytes);\n    println!(\"{:x}\", ins);\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12091851, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-7N0ZCuFnBIk/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reqHVXzaRAuF-grqpmd5kxL4jcIHA/photo.jpg?sz=128", "display_name": "Tamir BO", "link": "https://stackoverflow.com/users/12091851/tamir-bo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1600, "favorite_count": 0, "accepted_answer_id": 58016606, "answer_count": 2, "score": 1, "last_activity_date": 1568919227, "creation_date": 1568915595, "question_id": 58016544, "link": "https://stackoverflow.com/questions/58016544/rust-overflowing-shift-left", "title": "Rust overflowing shift left", "body": "<p>I'm trying to combine 4 bytes into a u32, and the compiler telling me that the shift has overflown.\nThis is my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_instruction(file: &amp;[u8], counter: usize) {\n    let ins = u32::from(file[counter] &lt;&lt; 24)\n        | u32::from(file[counter + 1] &lt;&lt; 16)\n        | u32::from(file[counter + 2] &lt;&lt; 8)\n        | u32::from(file[counter + 3]);\n    println!(\"{:x}\", ins);\n}\n</code></pre>\n"}, {"tags": ["rust", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 3173, "user_id": 116751, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/c6f153da0c942369289863942e65433b?s=128&d=identicon&r=PG", "display_name": "Chris McKenzie", "link": "https://stackoverflow.com/users/116751/chris-mckenzie"}, "is_accepted": false, "score": 0, "last_activity_date": 1599078513, "last_edit_date": 1599078513, "creation_date": 1599077596, "answer_id": 63712937, "question_id": 58011889, "link": "https://stackoverflow.com/questions/58011889/could-i-get-response-body-text-and-modify-it-from-actix-web-middleware/63712937#63712937", "title": "Could I get response body text and modify it from Actix-Web middleware?", "body": "<p>This is what I got working. I think there might be a better way but examples are light.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>    /// Extracts a response body of type T from `input`\n    /// Example:\n    /// \n    /// let result: MyResponseBodyContract = TestContext::map_body(&amp;mut resp).await;\n    pub async fn map_body&lt;T&gt;(input: &amp;mut ServiceResponse&lt;Body&gt;) -&gt; T\n        where T: DeserializeOwned\n    {\n        let mut body = input.take_body();\n        let mut bytes = BytesMut::new();\n        while let Some(item) = body.next().await {\n            bytes.extend_from_slice(&amp;item.unwrap());\n        }\n\n        let result: T = serde_json::from_slice(&amp;bytes)\n            .unwrap_or_else(|_| panic!(&quot;map_body failed during deserialization&quot;));\n        return result;\n    }\n</code></pre>\n<p>My buddy @stephaneyfx helped me refactor this into something nicer.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[async_trait(?Send)]\npub trait ParseResponse {\n    /// Extracts a response body of type T from `input`\n    /// Example:\n    /// \n    /// let result: MyContractType = resp.parse().await.unwrap();\n    async fn parse&lt;T: DeserializeOwned&gt;(&amp;mut self) -&gt; Result&lt;T, Box&lt;dyn std::error::Error&gt;&gt;;\n}\n\n#[async_trait(?Send)]\nimpl ParseResponse for ServiceResponse&lt;Body&gt; {\n    async fn parse&lt;T&gt;(&amp;mut self) -&gt; Result&lt;T, Box&lt;dyn std::error::Error&gt;&gt;\n    where\n        T: DeserializeOwned,\n    {\n        let bytes = self.take_body().try_fold(Vec::new(), |mut acc, chunk| async {\n            acc.extend(chunk);\n            Ok(acc)\n        });\n        Ok(serde_json::from_slice(&amp;bytes.await?)?)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 1848258, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/562151df46de1e76c3ba9ffa0590fdf2?s=128&d=identicon&r=PG", "display_name": "user1848258", "link": "https://stackoverflow.com/users/1848258/user1848258"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 579, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1599078513, "creation_date": 1568898927, "last_edit_date": 1568904213, "question_id": 58011889, "link": "https://stackoverflow.com/questions/58011889/could-i-get-response-body-text-and-modify-it-from-actix-web-middleware", "title": "Could I get response body text and modify it from Actix-Web middleware?", "body": "<p>Im developing an app with <code>rust</code> and <code>actix-web</code> framwork, and I inserted some middleware instance to the app.</p>\n\n<p>I planed the middleware would modify the response's body text and return the response in the call() method, but I couldn't find the solution. I can't find a sample code that enables getting text from <code>ServiceResponse</code> and modifying it.</p>\n\n<p>Could you guys help me with some sample code that getting response's body text and modifying it?</p>\n\n<p>Following is sample code that I used. I added a comment to inform what I want in <code>SayHiMiddleware-&gt;call()</code> of \"sample.rs\"</p>\n\n<p>// sample.rs</p>\n\n<pre><code>use actix_service::{Service, Transform};\nuse actix_web::{dev::ServiceRequest, dev::ServiceResponse, Error};\nuse futures::future::{ok, FutureResult};\nuse futures::{Future, Poll};\n\n// There are two steps in middleware processing.\n// 1. Middleware initialization, middleware factory gets called with\n//    next service in chain as parameter.\n// 2. Middleware's call method gets called with normal request.\npub struct SayHi;\n\n// Middleware factory is `Transform` trait from actix-service crate\n// `S` - type of the next service\n// `B` - type of response's body\nimpl&lt;S, B&gt; Transform&lt;S&gt; for SayHi\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type InitError = ();\n    type Transform = SayHiMiddleware&lt;S&gt;;\n    type Future = FutureResult&lt;Self::Transform, Self::InitError&gt;;\n\n    fn new_transform(&amp;self, service: S) -&gt; Self::Future {\n        ok(SayHiMiddleware { service })\n    }\n}\n\npub struct SayHiMiddleware&lt;S&gt; {\n    service: S,\n}\n\nimpl&lt;S, B&gt; Service for SayHiMiddleware&lt;S&gt;\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type Future = Box&lt;dyn Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn poll_ready(&amp;mut self) -&gt; Poll&lt;(), Self::Error&gt; {\n        self.service.poll_ready()\n    }\n\n    fn call(&amp;mut self, req: ServiceRequest) -&gt; Self::Future {\n        println!(\"Hi from start. You requested: {}\", req.path());\n\n        Box::new(self.service.call(req).and_then(|res| {\n            // I want to get response body text and print the text.\n            // But I couldnt get the text from ServiceResponse instance..... help me guys T.T\n            // And is there way to combine with previous response body text and new text?????\n            // example (res-&gt;body-&gt;text is \"aaaaa\")) and I want to append new text to the string ( \"aaaaa\" + \"bbbbb\" )\n            println!(\"Hi from response\");\n            Ok(res)\n        }))\n    }\n}\n</code></pre>\n\n<p>// main.rs</p>\n\n<pre><code>use actix_web::{web, App, HttpServer};\nuse actix_service::Service;\nuse futures::future::Future;\n\n#[allow(dead_code)]\nmod redirect;\n#[allow(dead_code)]\nmod read_request_body;\n#[allow(dead_code)]\nmod read_response_body;\n#[allow(dead_code)]\nmod simple;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    std::env::set_var(\"RUST_LOG\", \"actix_web=debug\");\n    env_logger::init();\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(redirect::CheckLogin)\n            .wrap(read_request_body::Logging)\n            .wrap(read_response_body::Logging)\n            .wrap(simple::SayHi)\n            .wrap_fn(|req, srv| {\n                println!(\"Hi from start. You requested: {}\", req.path());\n\n                srv.call(req).map(|res| {\n                    println!(\"Hi from response\");\n                    res\n                })\n            })\n            .service(web::resource(\"/login\").to(|| {\n                \"You are on /login. Go to src/redirect.rs to change this behavior.\"\n            }))\n            .service(\n                web::resource(\"/\").to(|| {\n                    \"Hello, middleware! Check the console where the server is run.\"\n                }),\n            )\n    })\n    .bind(\"127.0.0.1:8080\")?\n    .run()\n}\n</code></pre>\n\n<p>Thank you...</p>\n"}, {"tags": ["regex", "parsing", "rust", "nom"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568898647, "post_id": 58011745, "comment_id": 102427772, "body": "Your question is nice, but it belongs to codereview IMHO"}, {"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568898935, "post_id": 58011745, "comment_id": 102427957, "body": "I just think that it might be some built in way to do it. Because it looks like one of base parser functionality. And I just don&#39;t know it."}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "edited": false, "score": 0, "creation_date": 1568925258, "post_id": 58014279, "comment_id": 102440726, "body": "Thank you. Definitely looks better."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1568909816, "last_edit_date": 1568909816, "creation_date": 1568906470, "answer_id": 58014279, "question_id": 58011745, "link": "https://stackoverflow.com/questions/58011745/how-to-parse-matched-separators-by-nom/58014279#58014279", "title": "How to parse matched separators by nom?", "body": "<p>Your solution is decent enough. There is only one suggestion I can offer really:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_ymd(i: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], DateType&gt; {\n    ...\n\n    // If first separator was matched then try to find next one.\n    let i = match sep {\n        Some(sep) =&gt; tag(&amp;[sep as u8])(i)?.0,\n        _ =&gt; i,\n    };\n\n    ...\n}\n</code></pre>\n\n<p>You may not be familiar with the syntax of accessing a tuple element directly. From <a href=\"https://doc.rust-lang.org/stable/book/ch03-02-data-types.html#the-tuple-type\" rel=\"nofollow noreferrer\">rust book</a>:</p>\n\n<blockquote>\n  <p>In addition to destructuring through pattern matching, we can access a tuple element directly by using a period (.) followed by the index of the value we want to access.</p>\n</blockquote>\n\n<p>In this case, it saves you the awkwardness of trying to match the signature of two arms.</p>\n"}], "owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 58014279, "answer_count": 1, "score": 0, "last_activity_date": 1568909816, "creation_date": 1568898558, "last_edit_date": 1568900367, "question_id": 58011745, "link": "https://stackoverflow.com/questions/58011745/how-to-parse-matched-separators-by-nom", "title": "How to parse matched separators by nom?", "body": "<p>I want to parse YMD date in four forms (\"20190919\", \"2019.09.19\", \"2019-09-19\", and \"2019/09/19\") by <strong>nom</strong> library.</p>\n\n<p>I started with <a href=\"https://github.com/badboy/iso8601/blob/master/src/parsers.rs#L148\" rel=\"nofollow noreferrer\">iso8601</a> parser which parse only \"YYYY-MM-DD\" form. And I tryed to match separator and reuse it for next matching like in regex <a href=\"https://regex101.com/r/WMDmXA/1\" rel=\"nofollow noreferrer\">(\\d{4})([.-/]?)(\\d{2})\\2(\\d{2})</a>.</p>\n\n<p>Turned out that this code works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_ymd(i: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], DateType&gt; {\n    let (i, y) = year(i)?;\n\n    // Match separator if it exist.\n    let (i, sep) = opt(one_of(\".-/\"))(i)?;\n\n    let (i, m) = month(i)?;\n\n    // If first separator was matched then try to find next one.\n    let (i, _) = if let Some(sep) = sep {\n        tag(&amp;[sep as u8])(i)?\n    } else {\n        // Support the same signature as previous branch.\n        (i, &amp;[' ' as u8][..])\n    };\n\n    let (i, d) = day(i)?;\n\n    Ok((\n        i,\n        DateType::YMD {\n            year: y,\n            month: m,\n            day: d,\n        },\n    ))\n}\n</code></pre>\n\n<p>But obviously it looks weird.</p>\n\n<p>Are there some nom tools to do it more appropriate way?</p>\n\n<p>(This question about <strong>nom</strong> functionality, and how to do things there right. Not about just this particular example.)</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1568899047, "creation_date": 1568899047, "answer_id": 58011924, "question_id": 58011670, "link": "https://stackoverflow.com/questions/58011670/how-to-implement-a-trait-for-all-numeric-types-including-references-with-a-sin/58011924#58011924", "title": "How to implement a trait for all numeric types (including references) with a single macro instead of using generics?", "body": "<p>You can combine <code>clone</code> and <code>into</code> to support references and simple conversions together.</p>\n\n<pre><code>macro_rules! impl_foo {\n    ( $t0:ty as $t:ty ) =&gt; {\n        impl Foo for $t0 {\n            fn foo(self) {\n                let _: $t = self.clone().into();\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><code>Clone::clone</code> will be a no-op on a value, and will reveal the underlying type if it is a reference. The result of <code>clone()</code> is unambiguous, so the input type to <code>into()</code> will be inferred unambiguously too.</p>\n\n<p>For simple <code>Copy</code> types, you should expect <code>clone</code> to be implemented as a <code>memcpy</code> in most cases, so this shouldn't be a performance concern.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 44, "favorite_count": 0, "accepted_answer_id": 58011924, "answer_count": 1, "score": 0, "last_activity_date": 1568899047, "creation_date": 1568898295, "question_id": 58011670, "link": "https://stackoverflow.com/questions/58011670/how-to-implement-a-trait-for-all-numeric-types-including-references-with-a-sin", "title": "How to implement a trait for all numeric types (including references) with a single macro instead of using generics?", "body": "<p>I try to implement a trait for the following types: <code>i32</code>, <code>&amp;i32</code>, <code>&amp;mut i32</code>, <code>std::num::NonZeroI32</code> without using generics. I therefore use a macro, but I'd like not to duplicate the code.</p>\n\n<p>I cannot find a formula that allows to transform all those types to a mere <code>i32</code>.</p>\n\n<p>My attempt:</p>\n\n<pre><code>use std::borrow::Borrow;\n\ntrait Foo {\n    fn foo(self);\n}\n\nmacro_rules! impl_foo {\n    ( $t0:ty as $t:ty ) =&gt; {\n        impl Foo for $t0 {\n            fn foo(self) {\n                let _ = &lt;$t&gt;::from(*(self.borrow()));\n            }\n        }\n    }\n}\n\nimpl_foo!(i32 as i32);\nimpl_foo!(std::num::NonZeroI32 as i32);\nimpl_foo!(&amp;'_ i32 as i32);\nimpl_foo!(&amp;'_ mut i32 as i32);\n</code></pre>\n"}, {"tags": ["reference", "rust", "memory-address"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1568898219, "post_id": 58011586, "comment_id": 102427480, "body": "Where and how is that function created? Rust? FFI from another language?"}, {"owner": {"reputation": 31, "user_id": 12009592, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCYjxygL8Psg6OQszjs3EQUeAn4jF0iuguKOZ3K=k-s128", "display_name": "Dominika Kubicz", "link": "https://stackoverflow.com/users/12009592/dominika-kubicz"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568898668, "post_id": 58011586, "comment_id": 102427782, "body": "I need to put a memory address to a register."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568898717, "post_id": 58011586, "comment_id": 102427817, "body": "What is your input type you want a pointer for?"}, {"owner": {"reputation": 31, "user_id": 12009592, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCYjxygL8Psg6OQszjs3EQUeAn4jF0iuguKOZ3K=k-s128", "display_name": "Dominika Kubicz", "link": "https://stackoverflow.com/users/12009592/dominika-kubicz"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568898828, "post_id": 58011586, "comment_id": 102427870, "body": "It&#39;s an array of types u16"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1568986506, "last_edit_date": 1568986506, "creation_date": 1568898791, "answer_id": 58011841, "question_id": 58011586, "link": "https://stackoverflow.com/questions/58011586/passing-a-memory-address-in-rust/58011841#58011841", "title": "Passing a memory address in Rust", "body": "<p>Rust provides <a href=\"https://doc.rust-lang.org/1.18.0/book/first-edition/raw-pointers.html\" rel=\"noreferrer\">raw pointers</a>, <code>*const T</code> and <code>*mut T</code> for this purpose. You can convert a <code>usize</code> to these types, and then dereference or create a Rust reference to that value, in an unsafe block.</p>\n\n<p>Rust references automatically ensure that they are always valid. i.e. if you use one in safe Rust, then value that it references will always be properly initialised, and it won't have been dropped. Once you deal with raw pointers and memory addresses, you are responsible for that yourself, and you can cause some pretty serious problems by getting it wrong.</p>\n\n<p>If you have a value on the stack, you can get it like this:</p>\n\n<pre><code>fn main() {\n    let my_value = 123;\n    // get a reference to the value\n    let my_value_ref = &amp;my_value;\n    // convert the reference to a raw pointer\n    let my_value_raw_ptr = my_value_ref as *const i32;\n    // convert the raw pointer to an integer\n    let my_value_addr = my_value_raw_ptr as usize;\n\n    println!(\"address = {:X}\", my_value_addr);\n}\n</code></pre>\n\n<p>If the value is heap-allocated, then usually there is a provided method to obtain a raw pointer. For example, <code>Box</code> and <code>Rc</code> have an <code>into_raw()</code> method while <code>String</code> and <code>Vec</code> have <code>as_ptr()</code>:</p>\n\n<pre><code>fn main() {\n    let my_vec = vec![1, 2, 3];\n    // get a raw pointer pointer to the data\n    let my_vec_ptr = my_vec.as_ptr();\n    // convert the raw pointer to an integer\n    let my_vec_addr = my_vec_ptr as usize;\n\n    println!(\"address = {:X}\", my_vec_addr);\n}\n</code></pre>\n\n<p>Obtaining the address like this is completely safe. However, you will need to use <code>unsafe</code> Rust to actually do anything useful with it. It will be up to you to make sure that the value at that address is valid whenever it is accessed.</p>\n"}], "owner": {"reputation": 31, "user_id": 12009592, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCYjxygL8Psg6OQszjs3EQUeAn4jF0iuguKOZ3K=k-s128", "display_name": "Dominika Kubicz", "link": "https://stackoverflow.com/users/12009592/dominika-kubicz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1932, "favorite_count": 1, "accepted_answer_id": 58011841, "answer_count": 1, "score": 2, "last_activity_date": 1568986506, "creation_date": 1568897987, "question_id": 58011586, "link": "https://stackoverflow.com/questions/58011586/passing-a-memory-address-in-rust", "title": "Passing a memory address in Rust", "body": "<p>I have a function where I need to pass a memory address. I only managed to find that we can print out a memory address by using println!(\"{:p}\", number). How can I access the memory address and use it in a function?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1568893206, "post_id": 58010114, "comment_id": 102424514, "body": "Note: <code>isize</code> is NOT a number it&#39;s a <i>cough</i> relative size <i>cough</i>, you should not use it in the context of &quot;number&quot; use <code>i64</code> if you want"}], "answers": [{"comments": [{"owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "edited": false, "score": 0, "creation_date": 1568896496, "post_id": 58010784, "comment_id": 102426398, "body": "Thank you very much! That&#39;s exactly what I wanted, with some sugar on top :) . Now I can research it in depth."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1568895231, "creation_date": 1568895231, "answer_id": 58010784, "question_id": 58010114, "link": "https://stackoverflow.com/questions/58010114/capture-all-regex-matches-into-a-vector/58010784#58010784", "title": "Capture all Regex matches into a vector", "body": "<p>If you want all of the matches then you probably want to use <code>find_iter()</code>, which gives you an iterator over all of the matches. Then you'll need to convert the string matches into integers, and finally collect the results into a vector.</p>\n\n<pre><code>use lazy_static::lazy_static;\nuse regex::Regex;\n\nfn str_strip_numbers(s: &amp;str) -&gt; Vec&lt;i64&gt; {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(r\"\\d+\").unwrap();\n    }\n    // iterate over all matches\n    RE.find_iter(s)\n        // try to parse the string matches as i64 (inferred from fn type signature)\n        // and filter out the matches that can't be parsed (e.g. if there are too many digits to store in an i64).\n        .filter_map(|digits| digits.as_str().parse().ok())\n        // collect the results in to a Vec&lt;i64&gt; (inferred from fn type signature)\n        .collect()\n}\n</code></pre>\n"}], "owner": {"reputation": 1584, "user_id": 1134071, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/DicCu.jpg?s=128&g=1", "display_name": "Alexey Orlov", "link": "https://stackoverflow.com/users/1134071/alexey-orlov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 0, "accepted_answer_id": 58010784, "answer_count": 1, "score": 7, "last_activity_date": 1593028288, "creation_date": 1568892914, "last_edit_date": 1593028288, "question_id": 58010114, "link": "https://stackoverflow.com/questions/58010114/capture-all-regex-matches-into-a-vector", "title": "Capture all Regex matches into a vector", "body": "<p>I'd like to capture all the numbers in a string and return a vector of integers, something like this (the result can be an empty vector):</p>\n<pre><code>fn str_strip_numbers(s: &amp;str) -&gt; Vec&lt;isize&gt; {\n    unimplemented!()\n}\n</code></pre>\n<p>A Python prototype:</p>\n<pre><code>def str_strip_numbers(s):\n    &quot;&quot;&quot;\n    Returns a vector of integer numbers\n    embedded in a string argument.\n    &quot;&quot;&quot;\n    return [int(x) for x in re.compile('\\d+').findall(s)]\n</code></pre>\n<p>For <code>&quot;alfa&quot;</code> the result is <code>[]</code>, for <code>&quot;42by4&quot;</code> it is <code>[42, 4]</code>.</p>\n<p>What is the idiomatic way to get it in Rust?</p>\n<p>UPD:</p>\n<pre><code>fn str_strip_numbers(s: &amp;str) -&gt; Vec&lt;String&gt; {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(r&quot;\\d+&quot;).unwrap();\n    }\n    RE.captures(s).and_then(|cap| {cap})\n}\n</code></pre>\n<p>I tried something like this, which is grossly wrong on more than one count. What would be the right approach?</p>\n"}, {"tags": ["unit-testing", "rust"], "answers": [{"tags": [], "owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "is_accepted": true, "score": 22, "last_activity_date": 1568881095, "last_edit_date": 1568881095, "creation_date": 1568879642, "answer_id": 58006287, "question_id": 58006033, "link": "https://stackoverflow.com/questions/58006033/how-to-run-setup-code-before-any-tests-run-in-rust/58006287#58006287", "title": "How to run setup code before any tests run in Rust?", "body": "<p>There's nothing built-in that would do this but this should help (you will need to call <code>initialize()</code>  in the beginning of every test):</p>\n\n<pre><code>use std::sync::Once;\n\nstatic INIT: Once = Once::new();\n\npub fn initialize() {\n    INIT.call_once(|| {\n        // initialization code here\n    });\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4910, "user_id": 3606603, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PHdfv.jpg?s=128&g=1", "display_name": "valignatev", "link": "https://stackoverflow.com/users/3606603/valignatev"}, "is_accepted": false, "score": 13, "last_activity_date": 1568892492, "creation_date": 1568892492, "answer_id": 58009990, "question_id": 58006033, "link": "https://stackoverflow.com/questions/58006033/how-to-run-setup-code-before-any-tests-run-in-rust/58009990#58009990", "title": "How to run setup code before any tests run in Rust?", "body": "<p>Just to give people more ideas (for example, how not to call <code>setup</code> in every test), one additional thing you could do is to write a helper like this:</p>\n\n<pre><code>fn run_test&lt;T&gt;(test: T) -&gt; ()\n    where T: FnOnce() -&gt; () + panic::UnwindSafe\n{\n    setup();    \n    let result = panic::catch_unwind(|| {\n        test()\n    });    \n    teardown();    \n    assert!(result.is_ok())\n}\n</code></pre>\n\n<p>Then, in your own tests you would use it like this:</p>\n\n<pre><code>#[test]\nfn test() {\n    run_test(|| {\n        let ret_value = function_under_test();\n        assert!(ret_value);\n    })\n}\n</code></pre>\n\n<p>You can read more about <code>UnwindSafe</code> trait and <code>catch_unwind</code> here: <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"noreferrer\">https://doc.rust-lang.org/std/panic/fn.catch_unwind.html</a></p>\n\n<p>I've found the original idea of this test helper in <a href=\"https://medium.com/@ericdreichert/test-setup-and-teardown-in-rust-without-a-framework-ba32d97aa5ab\" rel=\"noreferrer\">this medium article</a> by Eric Opines.</p>\n\n<p>Also, there is <a href=\"https://github.com/la10736/rstest\" rel=\"noreferrer\">rstest</a> crate which has <a href=\"https://github.com/pytest-dev/pytest\" rel=\"noreferrer\">pytest-like</a> fixtures which you can use as a setup code (combined with the <a href=\"https://stackoverflow.com/a/58006287/3606603\">Jussi Kukkonen's answer</a>:</p>\n\n<pre><code>use std::sync::Once; \nuse rstest::rstest;\nstatic INIT: Once = Once::new();\n\npub fn setup() -&gt; () { \n    INIT.call_once(|| {\n        // initialization code here\n    });\n}\n\n#[rstest]\nfn should_success(setup: ()) {\n    // do your test\n}\n</code></pre>\n\n<p>Maybe one day rstest will gain scopes support and <code>Once</code> won't be needed anymore.</p>\n"}, {"tags": [], "owner": {"reputation": 1250, "user_id": 5545202, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TntZx.jpg?s=128&g=1", "display_name": "Brendan Molloy", "link": "https://stackoverflow.com/users/5545202/brendan-molloy"}, "is_accepted": false, "score": 8, "last_activity_date": 1597613387, "creation_date": 1597613387, "answer_id": 63442117, "question_id": 58006033, "link": "https://stackoverflow.com/questions/58006033/how-to-run-setup-code-before-any-tests-run-in-rust/63442117#63442117", "title": "How to run setup code before any tests run in Rust?", "body": "<p>If you use the <a href=\"https://docs.rs/ctor/\" rel=\"noreferrer\">ctor</a> crate, you can take advantage of a global constructor function that will run before any of your tests are run.</p>\n<p>Here's an example initialising the popular <a href=\"https://docs.rs/env_logger/\" rel=\"noreferrer\">env_logger</a> crate (assuming you have added <code>ctor</code> to your <code>[dev-dependencies]</code> section in your <code>Cargo.toml</code> file):</p>\n<pre><code>#[cfg(test)]\n#[ctor::ctor]\nfn init() {\n    env_logger::init();\n}\n</code></pre>\n<p>The function name is unimportant and you may name it anything.</p>\n"}], "owner": {"reputation": 4978, "user_id": 650228, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/7974f6c6e7dd479c4155cc122a461fce?s=128&d=identicon&r=PG", "display_name": "kittylyst", "link": "https://stackoverflow.com/users/650228/kittylyst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3631, "favorite_count": 2, "accepted_answer_id": 58006287, "answer_count": 3, "score": 17, "last_activity_date": 1597613387, "creation_date": 1568878744, "question_id": 58006033, "link": "https://stackoverflow.com/questions/58006033/how-to-run-setup-code-before-any-tests-run-in-rust", "title": "How to run setup code before any tests run in Rust?", "body": "<p>I have a Rust app (a simple interpreter) that needs some setup (initialize a repo) before the environment is usable.</p>\n\n<p>I understand that Rust runs its tests (via cargo test) in a multithreaded manner, so I need to initialize the repo before any tests run. I also need to do this only once per run, not before each test.</p>\n\n<p>In Java's JUnit this would be done with a @BeforeClass (or @BeforeAll in JUnit 5) method. How can I acheive the same thing in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 7, "last_activity_date": 1568901074, "last_edit_date": 1568901074, "creation_date": 1568874375, "answer_id": 58004891, "question_id": 58004777, "link": "https://stackoverflow.com/questions/58004777/how-does-rcclonepointer-increment-reference-count/58004891#58004891", "title": "How does Rc::clone(&amp;pointer) increment reference count?", "body": "<p>Under the hood, <code>Rc</code> uses <code>Cell</code>, which enables interior mutability:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct RcBox&lt;T: ?Sized&gt; {\n    strong: Cell&lt;usize&gt;,\n    weak: Cell&lt;usize&gt;,\n    value: T,\n}\n</code></pre>\n\n<p>And eventually, all roads lead to <a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/cell.rs#L429\" rel=\"nofollow noreferrer\"><code>Cell::replace</code></a>. Inevitably it has a unsafe block:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mem::replace(unsafe { &amp;mut *self.value.get() }, val)\n</code></pre>\n\n<p>So yes, your intuition was right!</p>\n"}, {"comments": [{"owner": {"reputation": 1902, "user_id": 905318, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d49e6de5a9ff5f14fda69ffc89ddc2c2?s=128&d=identicon&r=PG", "display_name": "Ivan Ivanov", "link": "https://stackoverflow.com/users/905318/ivan-ivanov"}, "edited": false, "score": 0, "creation_date": 1568874837, "post_id": 58004910, "comment_id": 102414860, "body": "Thank you very much for such a quick answer! Too bad I can&#39;t accept 2 answers at the same time"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 4, "last_activity_date": 1568874451, "creation_date": 1568874451, "answer_id": 58004910, "question_id": 58004777, "link": "https://stackoverflow.com/questions/58004777/how-does-rcclonepointer-increment-reference-count/58004910#58004910", "title": "How does Rc::clone(&amp;pointer) increment reference count?", "body": "<p>Internally, the <a href=\"https://github.com/rust-lang/rust/blob/eceec57f72150dd548e05025a05a93381da41385/src/liballoc/rc.rs#L260\" rel=\"nofollow noreferrer\">reference counter</a> is implemented with a <a href=\"https://doc.rust-lang.org/stable/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a>, which is made precisely to <em>\"enables mutation inside an immutable struct\"</em>. And you are right, <code>Cell</code> <a href=\"https://doc.rust-lang.org/stable/src/core/cell.rs.html#430\" rel=\"nofollow noreferrer\">uses <code>unsafe</code> to allow mutation</a>.</p>\n"}], "owner": {"reputation": 1902, "user_id": 905318, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d49e6de5a9ff5f14fda69ffc89ddc2c2?s=128&d=identicon&r=PG", "display_name": "Ivan Ivanov", "link": "https://stackoverflow.com/users/905318/ivan-ivanov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 58004891, "answer_count": 2, "score": 2, "last_activity_date": 1593026598, "creation_date": 1568873895, "last_edit_date": 1593026598, "question_id": 58004777, "link": "https://stackoverflow.com/questions/58004777/how-does-rcclonepointer-increment-reference-count", "title": "How does Rc::clone(&amp;pointer) increment reference count?", "body": "<p>I can't see how the following code is supposed to be implemented:</p>\n<pre><code>let a = Rc::new(5);\nlet b = Rc::clone(&amp;a);\nlet c = Rc::clone(&amp;a);\n</code></pre>\n<p><code>Rc::clone</code> takes an immutable reference to <code>a</code>, yet somehow manages to increment its reference count (which would require a mutable reference?).</p>\n<p>I tried inspecting the source code of <code>Rc</code> (<a href=\"https://github.com/rust-lang/rust/blob/eceec57f72150dd548e05025a05a93381da41385/src/liballoc/rc.rs#L1129\" rel=\"nofollow noreferrer\">see here</a>) but couldn't yet understand it with my currently limited knowledge.</p>\n<p>Is this working because it's using <code>unsafe</code> code under the hood, or is something else going on?</p>\n"}, {"tags": ["rust", "valgrind", "massif"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1568885968, "post_id": 58003899, "comment_id": 102420529, "body": "That probably output input of stdout, stdin and stderr. That also possible that rust need allocation to parse <code>argv</code> from the command line. And maybe opther thing. Why bother of such thing ? this is only at startup and is fast enough."}, {"owner": {"reputation": 53, "user_id": 12088271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3d4198b0727dd189dec93b668fea006?s=128&d=identicon&r=PG&f=1", "display_name": "RedRain", "link": "https://stackoverflow.com/users/12088271/redrain"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1568902595, "post_id": 58003899, "comment_id": 102430279, "body": "@Stargateur It seems that this isn&#39;t due to stdin, stdout, stderr and argv as the same program gives a different output on different computers. I think it&#39;s highly unlikely that that would consume 16MB of memory as well.  As for why bother, the goal was to write a program that consumes little memory but still has good performance, i.e. if the target machine has a very small amount of memory (say an old phone, or an Arduino), memory is a precious resource and can&#39;t be wasted! Hence the importance of checking memory usage. I believe the response below provides a good answer!"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1568903905, "post_id": 58003899, "comment_id": 102431114, "body": "I maintain my claim as S&#233;bastien said have a page of 16mo doesn&#39;t mean the program really use 16mo. Please consider test your program with <a href=\"https://rust-embedded.github.io/book/intro/no-std.html\" rel=\"nofollow noreferrer\">no_std</a>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568904229, "post_id": 58003899, "comment_id": 102431296, "body": "You need to check <b>effective</b> memory usage. Checking how much was allocated isn&#39;t a good resource outside of programs running on bare metal without virtual page support or without an MMU entirely (and in that case they&#39;ll be equal)."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 9, "last_activity_date": 1568904120, "last_edit_date": 1568904120, "creation_date": 1568887257, "answer_id": 58008481, "question_id": 58003899, "link": "https://stackoverflow.com/questions/58003899/heap-size-for-rust-programs-very-large-when-measured-with-valgrind-using-massif/58008481#58008481", "title": "Heap size for Rust programs very large when measured with valgrind using massif", "body": "<p>The place that is leading you in error is <code>pages-as-heap</code>, due to a misconception in how page management on most modern operating systems, particularly linux, works. This <strong>will not be true for all platforms</strong> and depends on the allocator, the underlying platform and the MMU. In practice, if you platform supports virtual memory, you'll most likely have something like this.</p>\n\n<p>A page is not always a <strong>forcibly reserved</strong> area in memory. Most memory functions (<code>mmap</code>, <code>malloc</code> and a few others) will allocate memory, but this will only be considered indicative by the operating system/kernel. You can convince yourself of this with the following test:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int argc, char **argv) {\n  void *ptr = malloc(1024 * 1024 * 1024);\n  sleep(100);\n  return 0;\n}\n</code></pre>\n\n<p>Run it a few times, and...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>:~# free -m\n              total        used        free      shared  buff/cache   available\nMem:          15930        1716        5553         170        8661       13752\nSwap:             0           0           0\n:~# ./hog &amp;\n[1] 27577\n...\n[99] 27674\n:~# free -m\n              total        used        free      shared  buff/cache   available\nMem:          15930        1717        5552         170        8661       13751\nSwap:             0           0           0\n</code></pre>\n\n<p>You can replicate this test in <code>rust</code>, but you need to go slightly further down than you'd normally go in abstractions to achieve this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n  let mut vec:Vec&lt;u8&gt; = vec![];\n  vec.reserve(1024 * 1024 * 1024);\n}\n</code></pre>\n\n<p>Memory only matters once it is <strong>initialized</strong> and <strong>accessed</strong>. At that point, the OS knows you actually want it, and allocates it all the way down to hardware. Rust is no exception to this - until you're using some of that heap, that heap is just a <code>mmap</code> in the kernel pointing to virtual memory.</p>\n\n<p>As such, by using the <code>pages-as-heap</code> argument, you are only looking for the \"potential\" memory before any reallocations are done, not the <em>actual</em> memory used. Remove this parameter and you'll see your program consume 300 or so bytes of heap (which you can easily analyze with <code>valgrind</code> itself).</p>\n\n<p>The reason your friends are seeing a different output is because their page size is 4kB and yours is 16kB. I'll track down the exact point in the rustc source code later - rust allocates 1024 pages.</p>\n"}], "owner": {"reputation": 53, "user_id": 12088271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3d4198b0727dd189dec93b668fea006?s=128&d=identicon&r=PG&f=1", "display_name": "RedRain", "link": "https://stackoverflow.com/users/12088271/redrain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 553, "favorite_count": 1, "accepted_answer_id": 58008481, "answer_count": 1, "score": 3, "last_activity_date": 1568904120, "creation_date": 1568868522, "question_id": 58003899, "link": "https://stackoverflow.com/questions/58003899/heap-size-for-rust-programs-very-large-when-measured-with-valgrind-using-massif", "title": "Heap size for Rust programs very large when measured with valgrind using massif", "body": "<p>I'm trying to measure the memory size of a rust program I'm writing. I noticed that when I measure the heap size with the command:</p>\n\n<p><code>valgrind --tool=massif --pages-as-heap=yes ./program</code></p>\n\n<p>And measure using ms_print, that the memory size was quite large (intially around 16MB). Eventually, I reduced my rust program to an empty main function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n}\n</code></pre>\n\n<p>And I compiled, and <em>still</em> had 16MB as my memory size. I noticed that when I used a different machine, the very same binary would be 4MB in total size. One of my friends tried this with the same program on his machine, with the same rust/valgrind version and got 4MB of size as well.</p>\n\n<p>I imagine this is some sort of pre-allocation to memory that might be used in the heap, but I can't figure out any way to control it. I even tried changing my allocator following <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/platform-and-target-support/global-allocators.html\" rel=\"nofollow noreferrer\">this</a> guide, but nothing changed.</p>\n\n<p>System details:</p>\n\n<pre><code>OS version       = Ubuntu 18.04\nvalgrind version = valgrind-3.13.0\ncargo version    = cargo 1.39.0-nightly (3f700ec43 2019-08-19)\nrustc version    = rustc 1.39.0-nightly (e44fdf979 2019-08-21)\nms_print         = ms_print-3.13.0\nlibc version     = ldd (Ubuntu GLIBC 2.27-3ubuntu1) 2.27\n</code></pre>\n"}]