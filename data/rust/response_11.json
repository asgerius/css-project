[{"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "edited": false, "score": 0, "creation_date": 1427352762, "post_id": 29263958, "comment_id": 46745031, "body": "Ah! This makes sense but now I&#39;m wondering if the compiler should have emitted an error for my allocate function? If it had pointed me to the signature/implementation mismatch in my allocate function I probably would have figured this out earlier."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1427309042, "last_edit_date": 1495539902, "creation_date": 1427309042, "answer_id": 29263958, "question_id": 29263470, "link": "https://stackoverflow.com/questions/29263470/matching-on-the-result-of-filecreate/29263958#29263958", "title": "Matching on the result of File::create", "body": "<p>Let's look at a simplified version of your code, an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>. It's very useful to create small examples when programming, as it helps you concentrate on a single problem at a time:</p>\n\n<pre><code>use std::fs::File;\nuse std::path::Path;\n\nfn allocate(path: &amp;str) -&gt; File {\n    File::create(Path::new(path))\n}\n\nfn main() {}\n</code></pre>\n\n<p>(I also took the liberty of aligning your code with the prevailing Rust style; I highly encourage you to learn it and love it for better community interaction!)</p>\n\n<p>This gives the same error when <a href=\"http://is.gd/KKTYFL\" rel=\"nofollow noreferrer\">run on the Playpen</a>:</p>\n\n<pre><code>&lt;anon&gt;:5:5: 5:34 error: mismatched types:\n expected `std::fs::File`,\n    found `core::result::Result&lt;std::fs::File, std::io::error::Error&gt;`\n(expected struct `std::fs::File`,\n    found enum `core::result::Result`) [E0308]\n&lt;anon&gt;:5     File::create(Path::new(path))\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>The problem is because you have defined the return type of your function as a <code>File</code>, but the body of your function is returning a <code>Result</code>!</p>\n\n<pre><code>fn allocate(path: &amp;str) -&gt; File\n</code></pre>\n\n<p>You need to ensure that the type on your function and what the function does align. The simplest is to <code>unwrap</code> the result, which causes a thread panic on failure cases.</p>\n\n<pre><code>fn allocate(path: &amp;str) -&gt; File {\n    File::create(Path::new(path)).unwrap()\n}\n</code></pre>\n\n<p>You could also return a <code>Result</code> of your own, and then force the caller to deal with failure (my preferred choice):</p>\n\n<pre><code>use std::io;\n\nfn allocate(path: &amp;str) -&gt; io::Result&lt;File&gt; {\n    File::create(Path::new(path))\n}\n</code></pre>\n\n<p>The other way of looking at your error is this half:</p>\n\n<pre><code>use std::fs::File;\n\nfn allocate() -&gt; File { unimplemented!() }\n\nfn main() {\n    match allocate() {\n        Ok(..) =&gt; println!(\"OK!\"),\n        Err(..) =&gt; println!(\"Bad!\"),\n    }\n}\n</code></pre>\n\n<p>Here, we are trying to <code>match</code> on a <code>File</code>, but <code>File</code> is not an enumeration with the variants <code>Ok</code> and <code>Err</code> - that would be <code>Result</code>! Thus, you get an error indicating such:</p>\n\n<pre><code>&lt;anon&gt;:7:9: 7:15 error: mismatched types:\n expected `std::fs::File`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected struct `std::fs::File`,\n    found enum `core::result::Result`) [E0308]\n&lt;anon&gt;:7         Ok(..) =&gt; println!(\"OK!\"),\n                 ^~~~~~\n</code></pre>\n"}], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 923, "favorite_count": 0, "accepted_answer_id": 29263958, "answer_count": 1, "score": 1, "last_activity_date": 1427309392, "creation_date": 1427307555, "last_edit_date": 1427309392, "question_id": 29263470, "link": "https://stackoverflow.com/questions/29263470/matching-on-the-result-of-filecreate", "title": "Matching on the result of File::create", "body": "<p>I am trying to write a library which must open files and I want to handle the <code>Result</code> type used by <code>std::fs::File::create</code>. I cannot figure out how to match on the return result given this wrapper function:</p>\n\n<pre><code>use std::fs::File;\nuse std::path::Path;\nuse std::fs::File;\nuse std::path::Path;\n\npub fn allocate(path:&amp; str) -&gt; File{\n  let mut file = File::create(Path::new(path));\n}\n</code></pre>\n\n<p>which is then invoked:</p>\n\n<pre><code>mod whisper;\nuse std::io::Write;\n\nfn main(){\n  let mut handle = whisper::allocate(\"./a_file.wsp\");\n\n  match handle {\n    Ok(_) =&gt; println!(\"success!\"),\n    Err(e) =&gt; println!(\"sorry, got {}\",e),\n  }\n\n  return;\n}\n</code></pre>\n\n<p>but the code doesn't compile due to a type mismatch:</p>\n\n<pre><code>Xaviers-MacBook-Pro:graphite-rust xavierlange$ cargo build\n   Compiling graphite-rust v0.0.1 (file:///Users/xavierlange/code/viasat/graphite-rust)\nsrc/main.rs:8:5: 8:10 error: mismatched types:\n expected `std::fs::File`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected struct `std::fs::File`,\n    found enum `core::result::Result`) [E0308]\nsrc/main.rs:8     Ok(_) =&gt; println!(\"hi!\"),\n                  ^~~~~\nsrc/main.rs:9:5: 9:11 error: mismatched types:\n expected `std::fs::File`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected struct `std::fs::File`,\n    found enum `core::result::Result`) [E0308]\nsrc/main.rs:9     Err(e) =&gt; println!(\"sorry, got {}\",e),\n                  ^~~~~~\nerror: aborting due to 2 previous errors\nCould not compile `graphite-rust`.\n</code></pre>\n\n<p>The signature for <code>std::fs::File::create</code> is <code>fn create&lt;P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; Result&lt;File&gt;</code> so shouldn't I be expecting to \"unwrap\" the value using match? Why is it expecting a <code>File</code> value?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 4455, "user_id": 1460448, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/0dd5a0fbb2b5d5592a49d2e60ef98f0a?s=128&d=identicon&r=PG&f=1", "display_name": "xji", "link": "https://stackoverflow.com/users/1460448/xji"}, "edited": false, "score": 1, "creation_date": 1523473273, "post_id": 29256519, "comment_id": 86580534, "body": "See also: <a href=\"https://github.com/rust-lang/rfcs/issues/1024\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/1024</a>. Maybe the OP was actually the author of that RFC?"}], "answers": [{"comments": [{"owner": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "edited": false, "score": 0, "creation_date": 1427290679, "post_id": 29256897, "comment_id": 46717074, "body": "Couldn&#39;t this (in theory) be disambiguated on the caller&#39;s side with something like <code>use HasBed;</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "edited": false, "score": 0, "creation_date": 1427291258, "post_id": 29256897, "comment_id": 46717486, "body": "I don&#39;t know the compiler details to make an educated guess about how complicated it would be to enable."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "edited": false, "score": 1, "creation_date": 1427301749, "post_id": 29256897, "comment_id": 46725068, "body": "@Drew The problem isn&#39;t implementing something like that, it&#39;s finding a good design that is desirable from a language design perspective. And motivating it (it would be a significant addition for solving problems that can be solved differently)."}, {"owner": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "edited": false, "score": 1, "creation_date": 1427332027, "post_id": 29256897, "comment_id": 46739951, "body": "Within the existing constraints of the language, what&#39;s the best way to go here?  This is a good &quot;you can&#39;t do it this way&quot; type answer, but it doesn&#39;t really address the question&#39;s motivation.  Preprocessor macros?  Is there some other design pattern that should be considered?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "edited": false, "score": 0, "creation_date": 1427335694, "post_id": 29256897, "comment_id": 46740818, "body": "@Drew I don&#39;t have any good suggestions for you, but I updated to add what suggestions I do have. Now that you&#39;ve addressed the high-level question about traits implementing traits, you might also consider asking a separate lower-level question with more details about your real use case. That might give people smarter than me the ability to give you an answer! ^_^"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 43, "last_activity_date": 1560261986, "last_edit_date": 1560261986, "creation_date": 1427289718, "answer_id": 29256897, "question_id": 29256519, "link": "https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits/29256897#29256897", "title": "I implemented a trait for another trait but cannot call methods from both traits", "body": "<p>You need to implement the second trait <em>for objects that implement the first trait</em>:</p>\n\n<pre><code>impl&lt;T&gt; Sleep for T\nwhere\n    T: HasBed,\n{\n    fn sleep(&amp;self) {\n        self.sleep_in_bed()\n    }\n}\n</code></pre>\n\n<p>Previously, you were implementing <code>Sleep</code> for the trait's type, better expressed as <code>dyn HasBed</code>. See <a href=\"https://stackoverflow.com/q/50650070/155423\">What does &quot;dyn&quot; mean in a type?</a> for more details.</p>\n\n<p>However, this is going to break as soon as you add a second blanket implementation:</p>\n\n<pre><code>impl&lt;T&gt; Sleep for T\nwhere\n    T: HasTent,\n{\n    fn sleep(&amp;self) {\n        self.sleep_in_tent()\n    }\n}\n</code></pre>\n\n<p>With</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `Sleep`:\n  --&gt; src/main.rs:24:1\n   |\n10 | / impl&lt;T&gt; Sleep for T\n11 | | where\n12 | |     T: HasBed,\n13 | | {\n...  |\n16 | |     }\n17 | | }\n   | |_- first implementation here\n...\n24 | / impl&lt;T&gt; Sleep for T\n25 | | where\n26 | |     T: HasTent,\n27 | | {\n...  |\n30 | |     }\n31 | | }\n   | |_^ conflicting implementation\n</code></pre>\n\n<p>It's possible for something to implement <strong>both</strong> <code>HasBed</code> and <code>HasTent</code>. If something were to appear that implemented both, then the code would now be ambiguous. The workaround for this would be <em>specialization</em>, but there's no stable implementation of that yet.</p>\n\n<p>How do you accomplish your goal? I think you have already suggested the current best solution - write a macro. You could also <a href=\"https://stackoverflow.com/q/29233324/155423\">write your own derive macro</a>. Macros really aren't that bad, but they can be unwieldy to write.</p>\n\n<p>Another thing, which may be entirely based on the names you chose for your example, would be to simply embed structs into other structs, optionally making them public. Since your implementation of <code>Sleep</code> basically only depends on the bed / tent, no <em>functionality</em> would be lost by doing this. Of course, some people might feel that breaks encapsulation. You could again create macros to implement a delegation of sorts.</p>\n\n<pre><code>trait Sleep {\n    fn sleep(&amp;self);\n}\n\nstruct Bed;\nimpl Bed {\n    fn jump(&amp;self) {}\n}\nimpl Sleep for Bed {\n    fn sleep(&amp;self) {}\n}\n\nstruct Tent;\nimpl Tent {\n    fn hide(&amp;self) {}\n}\nimpl Sleep for Tent {\n    fn sleep(&amp;self) {}\n}\n\nstruct Jim {\n    bed: Bed,\n}\nstruct Jane {\n    tent: Tent,\n}\n\nfn main() {\n    let jim = Jim { bed: Bed };\n    jim.bed.sleep();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 682, "user_id": 4719039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0901a072c48b7ab95f6552fbf3b5bfb4?s=128&d=identicon&r=PG&f=1", "display_name": "F001", "link": "https://stackoverflow.com/users/4719039/f001"}, "is_accepted": false, "score": 24, "last_activity_date": 1502546997, "last_edit_date": 1502546997, "creation_date": 1427425709, "answer_id": 29292642, "question_id": 29256519, "link": "https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits/29292642#29292642", "title": "I implemented a trait for another trait but cannot call methods from both traits", "body": "<p>We can use associated items here.</p>\n\n<pre><code>pub trait Sleep: Sized {\n    type Env: SleepEnv;\n\n    fn sleep(&amp;self, env: &amp;Self::Env) {\n        env.do_sleep(self);\n    }\n\n    fn get_name(&amp;self) -&gt; &amp;'static str;\n}\n\npub trait SleepEnv {\n    fn do_sleep&lt;T: Sleep&gt;(&amp;self, &amp;T);\n}\n</code></pre>\n\n<p>Then, we implement two different sleep environments.</p>\n\n<pre><code>struct Bed;\nstruct Tent;\n\nimpl SleepEnv for Bed {\n    fn do_sleep&lt;T: Sleep&gt;(&amp;self, person: &amp;T) {\n        println!(\"{} is sleeping in bed\", person.get_name());\n    }\n}\n\nimpl SleepEnv for Tent {\n    fn do_sleep&lt;T: Sleep&gt;(&amp;self, person: &amp;T) {\n        println!(\"{} is sleeping in tent\", person.get_name());\n    }\n}\n</code></pre>\n\n<p>The last piece is the concrete implementations of them.</p>\n\n<pre><code>struct Jim;\nstruct Jane;\n\nimpl Sleep for Jim {\n    type Env = Bed;\n    fn get_name(&amp;self) -&gt; &amp;'static str {\n        \"Jim\"\n    }\n}\n\nimpl Sleep for Jane {\n    type Env = Tent;\n    fn get_name(&amp;self) -&gt; &amp;'static str {\n        \"Jane\"\n    }\n}\n</code></pre>\n\n<p>Test code:</p>\n\n<pre><code>fn main() {\n    let bed = Bed;\n    let tent = Tent;\n\n    let jim = Jim;\n    let jane = Jane;\n    jim.sleep(&amp;bed);\n    jane.sleep(&amp;tent);\n}\n</code></pre>\n"}], "owner": {"reputation": 7587, "user_id": 116834, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/a3ee59b76d1593605ffb5be0ddca035b?s=128&d=identicon&r=PG", "display_name": "Drew", "link": "https://stackoverflow.com/users/116834/drew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15092, "favorite_count": 7, "accepted_answer_id": 29256897, "answer_count": 2, "score": 48, "last_activity_date": 1560261986, "creation_date": 1427288710, "last_edit_date": 1560261700, "question_id": 29256519, "link": "https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits", "title": "I implemented a trait for another trait but cannot call methods from both traits", "body": "<p>I have a trait called <code>Sleep</code>:</p>\n\n<pre><code>pub trait Sleep {\n    fn sleep(&amp;self);\n}\n</code></pre>\n\n<p>I could provide a different implementation of sleep for every struct, but it turns out that most people sleep in a very small number of ways. You can sleep in a bed:</p>\n\n<pre><code>pub trait HasBed {\n    fn sleep_in_bed(&amp;self);\n    fn jump_on_bed(&amp;self);\n}\n\nimpl Sleep for HasBed {\n    fn sleep(&amp;self) {\n        self.sleep_in_bed()\n    }\n}\n</code></pre>\n\n<p>If you're camping, you can sleep in a tent:</p>\n\n<pre><code>pub trait HasTent {\n    fn sleep_in_tent(&amp;self);\n    fn hide_in_tent(&amp;self);\n}\n\nimpl Sleep for HasTent {\n    fn sleep(&amp;self) {\n        self.sleep_in_tent()\n    }\n}\n</code></pre>\n\n<p>There are some oddball cases. I have a friend that can sleep standing against a wall, but most people, most of the time, fall into some simple case.</p>\n\n<p>We define some structs and let them sleep:</p>\n\n<pre><code>struct Jim;\n\nimpl HasBed for Jim {\n    fn sleep_in_bed(&amp;self) {}\n    fn jump_on_bed(&amp;self) {}\n}\n\nstruct Jane;\n\nimpl HasTent for Jane {\n    fn sleep_in_tent(&amp;self) {}\n    fn hide_in_tent(&amp;self) {}\n}\n\nfn main() {\n    use Sleep;\n    let jim = Jim;\n    jim.sleep();\n\n    let jane = Jane;\n    jane.sleep();\n}\n</code></pre>\n\n<p>Uh-oh!  Compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `sleep` found for type `Jim` in the current scope\n  --&gt; src/main.rs:44:9\n   |\n27 | struct Jim;\n   | ----------- method `sleep` not found for this\n...\n44 |     jim.sleep();\n   |         ^^^^^\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `sleep`, perhaps you need to implement it:\n           candidate #1: `Sleep`\n\nerror[E0599]: no method named `sleep` found for type `Jane` in the current scope\n  --&gt; src/main.rs:47:10\n   |\n34 | struct Jane;\n   | ------------ method `sleep` not found for this\n...\n47 |     jane.sleep();\n   |          ^^^^^\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `sleep`, perhaps you need to implement it:\n           candidate #1: `Sleep`\n</code></pre>\n\n<p>This compiler error is strange because if there was something wrong with a trait implementing another trait, I expected to hear about it way back when I did that, not at the very bottom of the program when I try to use the result.</p>\n\n<p>In this example, there are only 2 structs and 2 ways to sleep, but in the general case there are many structs and several ways to sleep (but not as many ways as there are structs).  </p>\n\n<p>A <code>Bed</code> is mostly an implementation for <code>Sleep</code>, but in the general case a <code>Bed</code> has many uses and could implement many things.</p>\n\n<p>The only immediately obvious approach is to convert <code>impl Sleep for...</code> into a macro that structs themselves use, but that seems hacky and terrible.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2821, "user_id": 3071928, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/exR74.jpg?s=128&g=1", "display_name": "Binkan Salaryman", "link": "https://stackoverflow.com/users/3071928/binkan-salaryman"}, "edited": false, "score": 3, "creation_date": 1427272209, "post_id": 29250677, "comment_id": 46705484, "body": "Have you tried putting brackets around your statement, e.g. <code>let def = (&amp;name.0).0</code>?"}, {"owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "reply_to_user": {"reputation": 2821, "user_id": 3071928, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/exR74.jpg?s=128&g=1", "display_name": "Binkan Salaryman", "link": "https://stackoverflow.com/users/3071928/binkan-salaryman"}, "edited": false, "score": 0, "creation_date": 1427272544, "post_id": 29250677, "comment_id": 46705652, "body": "@BinkanSalaryman ah yes it works with brackets. But what does that mean? Why is chaining without bracket not allowed? The two step procedure above (which works) should be more naturally combined into a single step without brackets (which will keep growing as types become composed of more and more sub types). So could you explain why this is necessary?"}, {"owner": {"reputation": 2821, "user_id": 3071928, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/exR74.jpg?s=128&g=1", "display_name": "Binkan Salaryman", "link": "https://stackoverflow.com/users/3071928/binkan-salaryman"}, "edited": false, "score": 1, "creation_date": 1427272734, "post_id": 29250677, "comment_id": 46705754, "body": "The compiler recognizes &quot;0.0&quot; as a decimal number (I tested on rust-lang.org)"}, {"owner": {"reputation": 2821, "user_id": 3071928, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/exR74.jpg?s=128&g=1", "display_name": "Binkan Salaryman", "link": "https://stackoverflow.com/users/3071928/binkan-salaryman"}, "edited": false, "score": 0, "creation_date": 1427273101, "post_id": 29250677, "comment_id": 46705931, "body": "I think you can report that as a bug at <code>http:&#47;&#47;users.rust-lang.org&#47;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427291889, "post_id": 29250677, "comment_id": 46717968, "body": "A <a href=\"https://github.com/rust-lang/rust/issues/23694\" rel=\"nofollow noreferrer\">bug was reported</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1427288973, "creation_date": 1427288973, "answer_id": 29256611, "question_id": 29250677, "link": "https://stackoverflow.com/questions/29250677/unable-to-chain-access-tuple-types/29256611#29256611", "title": "Unable to chain-access tuple types", "body": "<p>As mentioned in the comments, <code>foo.0.0</code> will be parsed as having a number. This was <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0184-tuple-accessors.md\" rel=\"nofollow\">originally mentioned in the RFC</a>, specifically <a href=\"https://github.com/rust-lang/rfcs/pull/184#issuecomment-53498305\" rel=\"nofollow\">this</a>:</p>\n\n<blockquote>\n  <p>I'd rather not change the lexer to permit a.0.1. I'd rather just have that be an error and have people write out the names. We could always add it later.</p>\n</blockquote>\n\n<p>You can certainly file a bug, but as a workaround, use parenthesis:</p>\n\n<pre><code>(foo.0).0\n</code></pre>\n\n<p>In my opinion, you shouldn't be nesting tuples that deep anyway. I'd highly recommend giving names to fields before you slowly go insane deciding if you wanted <code>foo.0.1.2</code> or <code>foo.1.2.0</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "is_accepted": false, "score": 1, "last_activity_date": 1427363407, "creation_date": 1427363407, "answer_id": 29275347, "question_id": 29250677, "link": "https://stackoverflow.com/questions/29250677/unable-to-chain-access-tuple-types/29275347#29275347", "title": "Unable to chain-access tuple types", "body": "<p>In addition to above answers, I have also found out that a gap would work wonders :) So;</p>\n\n<pre><code>foo.0. 0  OR  foo.0 . 0 etc all work\n</code></pre>\n\n<p>is fine. Don't know how much it means but there is a way to chain it if somebody wants to though (without resorting to brackets)</p>\n"}], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 29256611, "answer_count": 2, "score": 1, "last_activity_date": 1427363407, "creation_date": 1427271978, "last_edit_date": 1427289067, "question_id": 29250677, "link": "https://stackoverflow.com/questions/29250677/unable-to-chain-access-tuple-types", "title": "Unable to chain-access tuple types", "body": "<p>Given:</p>\n\n<pre><code>struct NameType([u8;64]);\nname: (NameType, NameType);\n</code></pre>\n\n<p>I can do:</p>\n\n<pre><code>let def = &amp;name.0   OR   &amp;name.1\n</code></pre>\n\n<p>but I cannot do:</p>\n\n<pre><code>let def = &amp;name.0.0   OR   &amp;name.1.0\n</code></pre>\n\n<p>to access the internals. I have to do it twice:</p>\n\n<pre><code>let abc = &amp;name.0;\nlet def = &amp;abc.0;\n</code></pre>\n\n<p>why am I unable to chain it to access inner sub-tuples, tuple-structs etc?</p>\n\n<pre><code>rustc 1.0.0-nightly (ecf8c64e1 2015-03-21) (built 2015-03-22)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1427327709, "post_id": 29250773, "comment_id": 46738769, "body": "Without rush there is time to do it right, so it&#39;s hopefully better in the long run"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 16, "last_activity_date": 1427272325, "creation_date": 1427272325, "answer_id": 29250773, "question_id": 29250386, "link": "https://stackoverflow.com/questions/29250386/why-cant-i-use-a-function-returning-a-compile-time-constant-as-a-constant/29250773#29250773", "title": "Why can&#39;t I use a function returning a compile-time constant as a constant?", "body": "<p>Because it hasn't been implemented yet. Extending the subset of Rust that counts as constant expressions can be done backwards-compatibly, so there's no rush to do so before 1.0, and it's not even settled how it should be done (how much should be allowed, whether there should be a <code>constexpr</code> mechanism and how powerful it should be, etc).</p>\n\n<p>In the meantime, macros and syntax extensions cover many of the same use cases (and the latter are strictly more powerful than <code>constexpr</code> ever will be).</p>\n"}], "owner": {"reputation": 3029, "user_id": 1060004, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/ZOBMa.jpg?s=128&g=1", "display_name": "ustulation", "link": "https://stackoverflow.com/users/1060004/ustulation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1339, "favorite_count": 1, "accepted_answer_id": 29250773, "answer_count": 1, "score": 8, "last_activity_date": 1427289451, "creation_date": 1427270980, "last_edit_date": 1427289451, "question_id": 29250386, "link": "https://stackoverflow.com/questions/29250386/why-cant-i-use-a-function-returning-a-compile-time-constant-as-a-constant", "title": "Why can&#39;t I use a function returning a compile-time constant as a constant?", "body": "<pre><code>let arr0 = [0u8; 15];\nlet arr1 = [0u8; arr0.len()]; // this fails\n</code></pre>\n\n<p>I think the compiler should be able to determine the length of arr0 as a compile time constant, no? Still this is flagged as error saying that variable found instead of constant integer.</p>\n\n<ol>\n<li>Why?</li>\n<li>Is there constexpr (C++) function in Rust?</li>\n</ol>\n\n<p>Version:</p>\n\n<pre><code>rustc 1.0.0-nightly (ecf8c64e1 2015-03-21) (built 2015-03-22)\n</code></pre>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 6, "last_activity_date": 1427275995, "creation_date": 1427275995, "answer_id": 29251918, "question_id": 29249005, "link": "https://stackoverflow.com/questions/29249005/compare-enum-variants-without-specifying-whats-inside/29251918#29251918", "title": "Compare enum variants without specifying what&#39;s inside", "body": "<p>This is not supported (yet). There is the active <a href=\"https://github.com/rust-lang/rfcs/pull/639\" rel=\"noreferrer\">RFC 639</a> which suggests implementing a function that returns an integer which corresponds to the enum discriminant. With that hypothetical function you could expect the following to work:</p>\n\n<pre><code>assert_eq!(Test::Two(10).discriminant(), Test::Two(42).discriminant());\n</code></pre>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3066, "favorite_count": 0, "closed_date": 1490018778, "accepted_answer_id": 29251918, "answer_count": 1, "score": 4, "last_activity_date": 1427289343, "creation_date": 1427265424, "last_edit_date": 1427289343, "question_id": 29249005, "link": "https://stackoverflow.com/questions/29249005/compare-enum-variants-without-specifying-whats-inside", "closed_reason": "Duplicate", "title": "Compare enum variants without specifying what&#39;s inside", "body": "<p>I have an enum with some nested values. I want to check that this enum is of given variant but without specifying what's inside. Check the following program:</p>\n\n<pre><code>enum Test {\n    Zero,\n    One(u8),\n    Two(u16),\n    Four(u32),\n}\n\nfn check(x: Test, y: Test) -&gt; bool {\n    x == y;\n}\n\nfn main() {\n    let x = Test::Two(10);\n    let b1 = check(x, Test::One);\n    let b2 = check(x, Test::Two);\n    let b3 = match x {\n        Test::Four(_) =&gt; true,\n        _ =&gt; false,\n    }   \n}\n</code></pre>\n\n<p><code>b3</code> checks that <code>x</code> is <code>Test::Four</code> with an arbitrary value inside. I want that check to be done in the function <code>check</code>. Current code does not compile and I can't figure out how can I extract only enum variant without corresponding inside values.</p>\n\n<p>I guess that could done with macro transforming to <code>match</code> expression, but is it possible to do that without macro?</p>\n\n<p>I can see that <code>Test::One</code> is <code>fn(u16) -&gt; Test {Two}</code>. Can I use that fact? To test that x was created using that function.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 6, "creation_date": 1427271967, "post_id": 29249230, "comment_id": 46705369, "body": "The tag can be larger than one byte even if you have only two variants (e.g. <code>enum X { S(i32), U(u32) }</code> is eight bytes), because of alignment. Technically it&#39;s  one byte with three bytes padding, but the end result is the same."}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 39, "last_activity_date": 1500583031, "last_edit_date": 1500583031, "creation_date": 1427266322, "answer_id": 29249230, "question_id": 29248665, "link": "https://stackoverflow.com/questions/29248665/why-does-rust-not-have-unions/29249230#29249230", "title": "Why does Rust not have unions?", "body": "<p>Rust has <em>tagged unions</em> in the form of its algebraic data types, <code>enum</code>:</p>\n\n<pre><code>enum Foo {\n    Bar(i32),\n    Baz,\n    Quux {\n        misc: A,\n        ellaneous: B,\n        fields: C,\n    },\n}\n</code></pre>\n\n<p>A <code>Foo</code> there can be either a <code>Bar</code> with an attached <code>i32</code>, a <code>Baz</code> with no additional data or a <code>Quux</code> with those three miscellaneous fields. This is a tagged union\u2014the size of an enum will not exceed the largest of its variants plus as much as is needed for the tag (typically one byte, but I guess it\u2019s possible to have more variants than fit in one byte), and in certain cases where it can be optimised (like <code>Option&lt;&amp;T&gt;</code> where a memory address of 0 is not legal for the <code>Some</code> variant and so can be used to represent the <code>None</code> variant) the variant is squeezed into the value.</p>\n\n<hr>\n\n<p><del>What Rust does <em>not</em> have is <em>untagged</em> unions as in C.</del> Why? Because they\u2019re fundamentally unsafe, and safety is paramount for Rust. If you still want something like that, it\u2019s perfectly possible to create a wrapper around the unsafe code that you will wind up with with things like transmutation happening, but you simply don\u2019t need untagged unions in normal life.</p>\n\n<p>Rust <em>does</em> now support untagged unions as an unsafe concept; <a href=\"https://doc.rust-lang.org/stable/reference/items.html#unions\" rel=\"noreferrer\">as of 1.19.0</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 179, "user_id": 8935250, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-hBPcANi0UFQ/AAAAAAAAAAI/AAAAAAAAAFw/pSM3wKlUamY/photo.jpg?sz=128", "display_name": "Rein F", "link": "https://stackoverflow.com/users/8935250/rein-f"}, "edited": false, "score": 0, "creation_date": 1609087202, "post_id": 29249238, "comment_id": 115744818, "body": "&quot;in exchange for a small memory usage&quot;, I just want to add that this extra memory is solely the identifier, which is 1 byte (as long there are no more than 256 variants)."}, {"owner": {"reputation": 93, "user_id": 11653112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e9d6f358a0d2825f3dd40ed1736e13f?s=128&d=identicon&r=PG&f=1", "display_name": "Nick Treleaven", "link": "https://stackoverflow.com/users/11653112/nick-treleaven"}, "reply_to_user": {"reputation": 179, "user_id": 8935250, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-hBPcANi0UFQ/AAAAAAAAAAI/AAAAAAAAAFw/pSM3wKlUamY/photo.jpg?sz=128", "display_name": "Rein F", "link": "https://stackoverflow.com/users/8935250/rein-f"}, "edited": false, "score": 0, "creation_date": 1609781226, "post_id": 29249238, "comment_id": 115923731, "body": "@ReinF although in practice I expect that extra byte will often get padded to the machine word size for efficiency."}], "tags": [], "owner": {"reputation": 37223, "user_id": 485561, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/61c769a3a57614e2cff3789076adde3d?s=128&d=identicon&r=PG", "display_name": "Mankarse", "link": "https://stackoverflow.com/users/485561/mankarse"}, "is_accepted": true, "score": 70, "last_activity_date": 1500582965, "last_edit_date": 1500582965, "creation_date": 1427266350, "answer_id": 29249238, "question_id": 29248665, "link": "https://stackoverflow.com/questions/29248665/why-does-rust-not-have-unions/29249238#29249238", "title": "Why does Rust not have unions?", "body": "<p>Unions were added to the language in (<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1444-union.md\" rel=\"noreferrer\">RFC 1444</a>), and they are stable as of <a href=\"http://blog.rust-lang.org/2017/07/20/Rust-1.19.html\" rel=\"noreferrer\">Rust 1.19.0</a>. They require usage of <code>unsafe</code> blocks.</p>\n\n<p>Raw unions are not memory-safe (as there is no way for the compiler to guarantee that you always read the correct type (that is, the most recently written type) from the union). One of the goals of Rust is to create a low-level language with memory safety; since unions are not compatible with that goal, they were not included in Rust 1.0.</p>\n\n<p>Instead, Rust has <a href=\"https://doc.rust-lang.org/stable/book/enums.html\" rel=\"noreferrer\">enums</a>, which provide most of the advantages of unions in exchange for a small memory usage, but which are memory safe since the enumeration value always keeps track of which particular type it contains.</p>\n"}], "owner": {"reputation": 837, "user_id": 4407235, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/852456ad707667cfbd432a0bebef780b?s=128&d=identicon&r=PG&f=1", "display_name": "unnamed_addr", "link": "https://stackoverflow.com/users/4407235/unnamed-addr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 14183, "favorite_count": 7, "accepted_answer_id": 29249238, "answer_count": 2, "score": 35, "last_activity_date": 1500583031, "creation_date": 1427264008, "last_edit_date": 1492797179, "question_id": 29248665, "link": "https://stackoverflow.com/questions/29248665/why-does-rust-not-have-unions", "title": "Why does Rust not have unions?", "body": "<p>I can think of many places where unions in C help are useful and they save memory. As Rust is a system programming language, why doesn't it support unions?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427235944, "post_id": 29243469, "comment_id": 46693935, "body": "Why do you write <code>el.eq(target)</code> rather than <code>el == target</code>?"}, {"owner": {"reputation": 86, "user_id": 1940135, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c21646ca6dda9caf3c3f63c1993ac0e?s=128&d=identicon&r=PG", "display_name": "David Pearson", "link": "https://stackoverflow.com/users/1940135/david-pearson"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1427236131, "post_id": 29243469, "comment_id": 46694014, "body": "@huon-dbaupp: The string I&#39;m searching for in the array"}, {"owner": {"reputation": 86, "user_id": 1940135, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c21646ca6dda9caf3c3f63c1993ac0e?s=128&d=identicon&r=PG", "display_name": "David Pearson", "link": "https://stackoverflow.com/users/1940135/david-pearson"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427236162, "post_id": 29243469, "comment_id": 46694029, "body": "@ChrisMorgan I&#39;ve been writing a lot of Java code lately; bad habit."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427236597, "post_id": 29243469, "comment_id": 46694193, "body": "@DavidPearson: have you tried running it after changing it to <code>==</code>? I think it should work now, for <code>.eq()</code> wanted a <code>&amp;T</code> where <code>T</code> is the type being compared to, (and <code>target</code> was presumably <code>&amp;str</code>, and <code>&amp;str</code> is not comparable to <code>str</code>) but <code>==</code> takes a reference itself and should have resolved the issue."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1427239486, "post_id": 29243469, "comment_id": 46695255, "body": "@DavidPearson, I mean, what type is it specifically? (Was unclear initially, sorry.)"}, {"owner": {"reputation": 86, "user_id": 1940135, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c21646ca6dda9caf3c3f63c1993ac0e?s=128&d=identicon&r=PG", "display_name": "David Pearson", "link": "https://stackoverflow.com/users/1940135/david-pearson"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427240030, "post_id": 29243469, "comment_id": 46695441, "body": "@ChrisMorgan I did make that change, but I&#39;m still seeing the same error @huon-dbaupp target is of type <code>&amp;str</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1427244782, "last_edit_date": 1427244782, "creation_date": 1427243709, "answer_id": 29245517, "question_id": 29243469, "link": "https://stackoverflow.com/questions/29243469/finding-string-slices-in-an-array-of-string-slices/29245517#29245517", "title": "Finding string slices in an array of string slices", "body": "<p>Here's how you could write your example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const FRUITS: [&amp;'static str; 3] = [\"apple\", \"banana\", \"coconut\"];\n\nfn is_available(desired: &amp;str) -&gt; bool {\n    for &amp;el in FRUITS.iter() {\n        // let () = el; // PROTIP\n        if el == desired {\n          return true;\n        }\n    }\n\n    false\n}\n</code></pre>\n\n<p>See where I assigned <code>el</code> to <code>()</code>? That's a little trick to see what the type of a variable is at some point. If you uncomment that, you'll get an error like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: mismatched types:\n expected `&amp;&amp;str`,\n    found `()`\n</code></pre>\n\n<p>This lets you know what the types are. The second part is to look at the implementations of <code>PartialEq</code> for <code>str</code>, the important one being:</p>\n\n<pre><code>impl PartialEq&lt;str&gt; for str \n</code></pre>\n\n<p>So we bind <code>el</code> with a pattern that will automatically dereference it once for us. Then the comparison can take place, as we have a balanced amount of dereferencing to do:</p>\n\n<pre><code>for &amp;el in FRUITS.iter() {\n//  ^~~ Here\n</code></pre>\n\n<p>But really, I'd write it like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static FRUITS: [&amp;'static str; 3] = [\"apple\", \"banana\", \"coconut\"];\n\nfn main() {\n    let desired = \"apple\";\n    let to_eat = FRUITS.iter().find(|&amp;&amp;f| f == desired);\n    println!(\"{:?}\", to_eat);\n\n    let desired = \"durian\";\n    let to_eat = FRUITS.iter().find(|&amp;&amp;f| f == desired);\n    println!(\"{:?}\", to_eat);\n}\n</code></pre>\n\n<p><code>static</code> creates an actual shared place in memory for the variable. <code>const</code> acts more like a C <code>#define</code> - the value is inserted everywhere it is used. Since <code>find</code> returns the item, we need it to have some storage that lasts for longer than the one expression.</p>\n\n<p><a href=\"http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.find\" rel=\"nofollow\"><code>IteratorExt::find</code></a> also abstracts the work of finding a matching value (for some condition), and returns an <a href=\"http://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow\"><code>Option</code></a> denoting success / failure.</p>\n"}], "owner": {"reputation": 86, "user_id": 1940135, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c21646ca6dda9caf3c3f63c1993ac0e?s=128&d=identicon&r=PG", "display_name": "David Pearson", "link": "https://stackoverflow.com/users/1940135/david-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 884, "favorite_count": 0, "accepted_answer_id": 29245517, "answer_count": 1, "score": 0, "last_activity_date": 1427245240, "creation_date": 1427233457, "last_edit_date": 1427245240, "question_id": 29243469, "link": "https://stackoverflow.com/questions/29243469/finding-string-slices-in-an-array-of-string-slices", "title": "Finding string slices in an array of string slices", "body": "<p>I have a large array of statically allocated string slices, defined like so:</p>\n\n<pre><code>const ARR: [&amp;'static str; 50] = [...];\n</code></pre>\n\n<p>I'm then iterating through the array in what I assume is a normal manner (I'm new to Rust):</p>\n\n<pre><code>for el in ARR.iter() {\n    if el == target {\n        return true;\n    }\n}\n</code></pre>\n\n<p>Unfortunately, I'm getting an error when I try to use <code>eq()</code>:</p>\n\n<pre><code>error: the trait `core::cmp::PartialEq&lt;str&gt;` is not implemented for the type `&amp;str`\n</code></pre>\n\n<p>Is there something in the standard library to compare string slices, or do I have to just iterate through and compare characters myself? And, for that matter, is there a better way to search for an element in an array than what I'm doing?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["unit-testing", "rust"], "comments": [{"owner": {"reputation": 19346, "user_id": 2793118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5da03d2e233e1a40a4f1923acfb9d433?s=128&d=identicon&r=PG", "display_name": "Filipe Gon&#231;alves", "link": "https://stackoverflow.com/users/2793118/filipe-gon%c3%a7alves"}, "edited": false, "score": 0, "creation_date": 1427227306, "post_id": 29241148, "comment_id": 46689605, "body": "So your question is how to show a warning if the test was skipped?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427228593, "post_id": 29241148, "comment_id": 46690337, "body": "Could you externally know if the data is available? If so, you might be able to use Cargo feature flags to conditionally compile (and thus run) tests."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "reply_to_user": {"reputation": 19346, "user_id": 2793118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5da03d2e233e1a40a4f1923acfb9d433?s=128&d=identicon&r=PG", "display_name": "Filipe Gon&#231;alves", "link": "https://stackoverflow.com/users/2793118/filipe-gon%c3%a7alves"}, "edited": false, "score": 0, "creation_date": 1427228625, "post_id": 29241148, "comment_id": 46690349, "body": "@FilipeGon&#231;alves, yes."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427228693, "post_id": 29241148, "comment_id": 46690383, "body": "@Shepmaster: No, I can&#39;t. I need to run rust code (binding to C) to find out. And it is just data, so it does not affect the functionality of the module. Just whether the particular test case can expect the particular values or not."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427228764, "post_id": 29241148, "comment_id": 46690433, "body": "@Shepmaster: The data can also be installed in any combination. There are many bits and each can individually be available or not. So I may skip two tests and another two may run."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1427245678, "creation_date": 1427245678, "answer_id": 29245794, "question_id": 29241148, "link": "https://stackoverflow.com/questions/29241148/skipping-unit-tests-or-at-least-showing-warnings-from-them/29245794#29245794", "title": "Skipping unit tests or at least showing warnings from them", "body": "<p>A lesser-known fact is that <code>println!</code> uses the thread-local \"standard out\", which can be set to other output types. During tests, this is set to a capturing type. However, you can still get direct access to the true standard out and use that:</p>\n\n<pre><code>use std::io::{self,Write};\n\n#[test]\nfn a() {\n    println!(\"Hi!\"); // Will be captured / hidden by default\n    write!(&amp;mut io::stdout(), \"Hello!\").unwrap(); // Will be shown\n}\n</code></pre>\n\n<p>Has output like:</p>\n\n<pre><code>running 1 test\nHello!test a ... ok\n</code></pre>\n"}], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1427245774, "creation_date": 1427225090, "last_edit_date": 1495541179, "question_id": 29241148, "link": "https://stackoverflow.com/questions/29241148/skipping-unit-tests-or-at-least-showing-warnings-from-them", "title": "Skipping unit tests or at least showing warnings from them", "body": "<p>I need to test code that fetches and processes some data from standard C library. However, this data may not be installed at any particular system. So at the start of each test I detect whether the data is installed and skip the test.</p>\n\n<p>It's easy to wrap the test in an if, but since the code that tests whether the test is possible may itself fail, I need to at least know that the tests were skipped. I know I <a href=\"https://stackoverflow.com/questions/25106554/println-doesnt-work-in-rust-unit-tests\">can't simply use <code>println!</code></a> and I don't want to have to remember to pass <code>--nocapture</code> every time I test (and I want to see the warnings in the Travis log; Travis virtuals don't have all the data).</p>\n"}, {"tags": ["string", "split", "rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1427223982, "post_id": 29240157, "comment_id": 46687790, "body": "With a regex? <a href=\"http://doc.rust-lang.org/regex/regex/index.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/regex/regex/index.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427248823, "post_id": 29240157, "comment_id": 46697813, "body": "This was <a href=\"http://www.reddit.com/r/rust/comments/30608a/split_string_on_multiple_delimiters/\" rel=\"nofollow noreferrer\">cross-posted to Reddit</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 4, "creation_date": 1427226746, "post_id": 29240228, "comment_id": 46689309, "body": "@BurntSushi5 because I was only thinking of the standard library. I&#39;ve updated with a regex example. You should have submitted an answer yourself; now I get all the sweet, sweet Internet points!"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1427230301, "post_id": 29240228, "comment_id": 46691267, "body": "Haha that&#39;s OK. Comments are nice because they don&#39;t take much time. :-)"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1427230354, "post_id": 29240228, "comment_id": 46691302, "body": "FYI, the <code>regex!</code> macro won&#39;t work on Rust 1.0 stable (the <code>plugin</code> feature will remain unstable). The standard <code>regex::Regex::new</code> way of making a regex will work though."}, {"owner": {"reputation": 305, "user_id": 1993365, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e37ab60f3cf32904a05f0b71e762377?s=128&d=identicon&r=PG", "display_name": "awesomefireduck", "link": "https://stackoverflow.com/users/1993365/awesomefireduck"}, "edited": false, "score": 0, "creation_date": 1427371057, "post_id": 29240228, "comment_id": 46753694, "body": "thanks a bundle! I&#39;ve used the regex::new option and it works great!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1486, "user_id": 4313615, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-MbCT0y27XDo/AAAAAAAAAAI/AAAAAAAADeg/KQijoMfdBWw/photo.jpg?sz=128", "display_name": "David Roundy", "link": "https://stackoverflow.com/users/4313615/david-roundy"}, "edited": false, "score": 0, "creation_date": 1617908270, "post_id": 29240228, "comment_id": 118448449, "body": "@DavidRoundy thanks! Yeah, it&#39;s been nightly forever, so I&#39;m not sure why I didn&#39;t mention that originally."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1617908244, "last_edit_date": 1617908244, "creation_date": 1427221890, "answer_id": 29240228, "question_id": 29240157, "link": "https://stackoverflow.com/questions/29240157/how-can-i-split-a-string-string-or-str-on-more-than-one-delimiter/29240228#29240228", "title": "How can I split a string (String or &amp;str) on more than one delimiter?", "body": "<p>Unfortunately, you can't do this <em>with the standard library</em> right now. You <strong>can</strong> split on multiple <code>char</code> delimiters though, as <code>words</code> does. You need to give a slice of characters to <code>split</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>for part in &quot;a,bc;d&quot;.split(&amp;[',', ';'][..]) {\n    println!(&quot;&gt;{}&lt;&quot;, part);\n}\n</code></pre>\n<p>If you try with strings, however:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>for part in &quot;a,bc;d&quot;.split(&amp;[&quot;,&quot;, &quot;;&quot;][..]) {\n    println!(&quot;&gt;{}&lt;&quot;, part);\n}\n</code></pre>\n<p>You'll get the error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: expected a `Fn&lt;(char,)&gt;` closure, found `[&amp;str]`\n --&gt; src/main.rs:2:32\n  |\n2 |     for part in &quot;a,bc;d&quot;.split(&amp;[&quot;,&quot;, &quot;;&quot;][..]) {\n  |                                ^^^^^^^^^^^^^^^ expected an `Fn&lt;(char,)&gt;` closure, found `[&amp;str]`\n  |\n  = help: the trait `Fn&lt;(char,)&gt;` is not implemented for `[&amp;str]`\n  = note: required because of the requirements on the impl of `FnOnce&lt;(char,)&gt;` for `&amp;[&amp;str]`\n  = note: required because of the requirements on the impl of `Pattern&lt;'_&gt;` for `&amp;[&amp;str]`\n</code></pre>\n<p>In nightly Rust, you could implement <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html\" rel=\"nofollow noreferrer\"><code>Pattern</code></a> for your own type that includes a slice of strings.</p>\n<p>If you are cool with using a well-supported crate that isn't part of the standard library, you can use <a href=\"https://docs.rs/regex\" rel=\"nofollow noreferrer\">regex</a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use regex; // 1.4.5\n\nfn main() {\n    let re = regex::Regex::new(r&quot;bb|cc&quot;).unwrap();\n    for part in re.split(&quot;aabbaacaaaccaaa&quot;) {\n        println!(&quot;&gt;{}&lt;&quot;, part);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 305, "user_id": 1993365, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e37ab60f3cf32904a05f0b71e762377?s=128&d=identicon&r=PG", "display_name": "awesomefireduck", "link": "https://stackoverflow.com/users/1993365/awesomefireduck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4845, "favorite_count": 0, "accepted_answer_id": 29240228, "answer_count": 1, "score": 10, "last_activity_date": 1617908244, "creation_date": 1427221603, "last_edit_date": 1427221659, "question_id": 29240157, "link": "https://stackoverflow.com/questions/29240157/how-can-i-split-a-string-string-or-str-on-more-than-one-delimiter", "title": "How can I split a string (String or &amp;str) on more than one delimiter?", "body": "<p>I want to be able to separate the string <code>aabbaacaaaccaaa</code> on the strings <code>bb</code> and <code>cc</code> but not on <code>b</code> or <code>c</code>. The example would result in <code>aa,aacaaa,aaa</code>.</p>\n\n<p>I already can split a string on a single delimiter, and the words() function splits a string on <code></code>,<code>\\n</code> and <code>\\t</code>, so I figured it must be possible.</p>\n"}, {"tags": ["vector", "stack", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427221390, "post_id": 29239586, "comment_id": 46686350, "body": "You may be interested in <a href=\"http://stackoverflow.com/questions/29196869/how-to-change-a-value-while-dropping\">another question with the same goal</a>"}, {"owner": {"reputation": 2513, "user_id": 1926357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e9348b695741e8c39121fa81700889f?s=128&d=identicon&r=PG", "display_name": "Dmitry Belyaev", "link": "https://stackoverflow.com/users/1926357/dmitry-belyaev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427268826, "post_id": 29239586, "comment_id": 46703964, "body": "@Shepmaster I don&#39;t think the question you suggested is on the same problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2513, "user_id": 1926357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e9348b695741e8c39121fa81700889f?s=128&d=identicon&r=PG", "display_name": "Dmitry Belyaev", "link": "https://stackoverflow.com/users/1926357/dmitry-belyaev"}, "edited": false, "score": 0, "creation_date": 1427281586, "post_id": 29239586, "comment_id": 46710996, "body": "@DmitryBelyaev both questions want to create a off-the-heap vector with a maximum size. Both questions ultimately deal with how to drop the partially filled array."}, {"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427283729, "post_id": 29239586, "comment_id": 46712272, "body": "@Shepmaster It&#39;s <b>a</b> solution. Just not a very optimal one. If I were to wrap the fixed-size array into an <code>Option</code>, then every time I index into it (or do anything with it really) I would have to check whether it&#39;s <code>None</code> or not. It seems too much of an overhead for something that&#39;s supposed to be the fastest possible kind of container."}, {"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "edited": false, "score": 0, "creation_date": 1427284461, "post_id": 29239586, "comment_id": 46712731, "body": "It did occur to me though, that it&#39;s not that beneficial to use a stack allocated array (versus a <code>Vec</code>) for values of type <code>T</code> which implement <code>Drop</code> (and therefore are not <code>Copy</code> types). Most of the time those kinds of types allocate on the heap, so you end up having just the pointers on the stack and the actual data scattered along the heap anyway. And it&#39;s quite easy to implement this <code>StackVec&lt;T&gt; where T: Copy</code>."}, {"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "edited": false, "score": 0, "creation_date": 1427285362, "post_id": 29239586, "comment_id": 46713267, "body": "But if it&#39;s actually impossible to make a fast and general purpose stack-allocated vector-like container, then to me this seems like a language defect. So therefore I would like to find a good solution to this."}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1427310355, "post_id": 29239586, "comment_id": 46730646, "body": "Just an idea: how about invoking <code>alloca(3)</code> directly using <code>unsafe</code> block?"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1432000606, "post_id": 29239586, "comment_id": 48726387, "body": "Here&#39;s a very cool trick: You don&#39;t need to impl the method <code>iter</code> or any other slice method. Just impl <code>Deref</code> and <code>DerefMut</code> (<code>Target=[T]</code>) and you get all slice methods for free."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 1, "last_activity_date": 1431979566, "creation_date": 1431979566, "answer_id": 30311913, "question_id": 29239586, "link": "https://stackoverflow.com/questions/29239586/how-can-i-create-a-stack-allocated-vector-like-container/30311913#30311913", "title": "How can I create a stack-allocated vector-like container?", "body": "<p>My guess is that the compiler doesn't know which elements of the array are \"free\" and which need a destructor to run when the array is dropped.</p>\n\n<p>Try storing <code>Option&lt;T&gt;</code>, which has a <code>.take()</code> method that will allow you to move an element out of the array.</p>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 9, "last_activity_date": 1433240387, "last_edit_date": 1433240387, "creation_date": 1432003721, "answer_id": 30315910, "question_id": 29239586, "link": "https://stackoverflow.com/questions/29239586/how-can-i-create-a-stack-allocated-vector-like-container/30315910#30315910", "title": "How can I create a stack-allocated vector-like container?", "body": "<p>I've written an implementation, and I'll go over the highlights.</p>\n\n<ul>\n<li><p>Full code is available at <a href=\"https://crates.io/crates/arrayvec\" rel=\"noreferrer\">crates.io/arrayvec</a> (<a href=\"http://bluss.github.io/arrayvec/doc/arrayvec/struct.ArrayVec.html\" rel=\"noreferrer\">API doc</a>)</p></li>\n<li><p>Use a trait (called <code>Array</code>) to abstract over different array sizes. It needs to provide raw pointers so that we can use the array as backing storage.</p></li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Trait for fixed size arrays.\npub unsafe trait Array {\n    /// The array's element type\n    type Item;\n    unsafe fn new() -&gt; Self;\n    fn as_ptr(&amp;self) -&gt; *const Self::Item;\n    fn as_mut_ptr(&amp;mut self) -&gt; *mut Self::Item;\n    fn capacity() -&gt; usize;\n}\n</code></pre>\n\n<ul>\n<li>In contemporary rust style, we can only implement this trait for specific array sizes. I cover some small sizes with a macro:</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! fix_array_impl {\n    ($len:expr ) =&gt; (\n        unsafe impl&lt;T&gt; Array for [T; $len] {\n            type Item = T;\n            /// Note: Returning an uninitialized value here only works\n            /// if we can be sure the data is never used. The nullable pointer\n            /// inside enum optimization conflicts with this this for example,\n            /// so we need to be extra careful. See `Flag` enum.\n            unsafe fn new() -&gt; [T; $len] { mem::uninitialized() }\n            fn as_ptr(&amp;self) -&gt; *const T { self as *const _ as *const _ }\n            fn as_mut_ptr(&amp;mut self) -&gt; *mut T { self as *mut _ as *mut _}\n            fn capacity() -&gt; usize { $len }\n        }\n    )\n}\n\nmacro_rules! fix_array_impl_recursive {\n    () =&gt; ();\n    ($len:expr, $($more:expr,)*) =&gt; (\n        fix_array_impl!($len);\n        fix_array_impl_recursive!($($more,)*);\n    );\n}\n\nfix_array_impl_recursive!(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n                          16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n                          32, 40, 48, 56, 64, 72, 96, 128, 160, 192, 224,);\n</code></pre>\n\n<ul>\n<li><p>We need to suppress the default drop of the embedded array. You can do this by in theory using <code>Option&lt;Array&gt;</code> and using <code>ptr::write</code> to overwrite it with <code>None</code> at the last moment in <code>Drop</code>.</p></li>\n<li><p>We <em>must</em> however use our own enum, similar to <code>Option</code> for one reason: We need to avoid non-nullable pointer optimization that applies to enums that have the same representation as <code>Option</code>. Then in <strong>Drop</strong> we do the crucial inhibition of the inner array's default destructor: we forcibly overwrite our enum. Only after destructing all the elements, of course.</p></li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Make sure the non-nullable pointer optimization does not occur!\n#[repr(u8)]\nenum Flag&lt;T&gt; {\n    Dropped,\n    Alive(T),\n}\n\n/// A vector with a fixed capacity.\npub struct ArrayVec&lt;A: Array&gt; {\n    len: u8,\n    xs: Flag&lt;A&gt;,\n}\n\nimpl&lt;A: Array&gt; Drop for ArrayVec&lt;A&gt; {\n    fn drop(&amp;mut self) {\n        // clear all elements, then inhibit drop of inner array\n        while let Some(_) = self.pop() { }\n        unsafe {\n            ptr::write(&amp;mut self.xs, Flag::Dropped);\n        }\n    }\n}\n</code></pre>\n\n<ul>\n<li>We implement <code>Deref&lt;Target=[T]&gt;</code> and <code>DerefMut</code> and get tons of slice methods for free. This is a great feature of Rust!</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;A: Array&gt; Deref for ArrayVec&lt;A&gt; {\n    type Target = [A::Item];\n    fn deref(&amp;self) -&gt; &amp;[A::Item] {\n        unsafe {\n            slice::from_raw_parts(self.inner_ref().as_ptr(), self.len())\n        }\n    }\n}\n</code></pre>\n\n<ul>\n<li>The ArrayVec type has an invariant, that the <code>Flag&lt;A&gt;</code> is always <code>Flag::Alive(A)</code> when the value is alive. We should be able to optimize with this in mind. (A FIXME is marked there.)</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn inner_mut(&amp;mut self) -&gt; &amp;mut A {\n    // FIXME: Optimize this, we know it's always present.\n    match self.xs {\n        Flag::Alive(ref mut xs) =&gt; xs,\n        _ =&gt; unreachable!(),\n    }\n}\n</code></pre>\n\n<p><strong>Thank you</strong> kmky for asking question! Exploring this answer led to the creation of <code>arrayvec</code> linked above, and uncovered some of the points that were very important to have it be a safe rust data structure.</p>\n"}], "owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3514, "favorite_count": 1, "accepted_answer_id": 30315910, "answer_count": 2, "score": 9, "last_activity_date": 1433240387, "creation_date": 1427219480, "last_edit_date": 1427221011, "question_id": 29239586, "link": "https://stackoverflow.com/questions/29239586/how-can-i-create-a-stack-allocated-vector-like-container", "title": "How can I create a stack-allocated vector-like container?", "body": "<p>How would you go about creating a stack-allocated vector-like container with some fixed upper limit on the number of elements it can contain? You can see my attempt at this below, but it doesn't compile:</p>\n\n<pre><code>// The following is at crate level\n#![feature(unsafe_destructor)]\n\nuse std::mem;\nuse std::ptr;\nuse std::slice::Iter;\n\npub struct StackVec&lt;T&gt; {\n    buf: [T; 10],\n    len: usize,\n}\n\nimpl&lt;T&gt; StackVec&lt;T&gt; {\n    pub fn new() -&gt; StackVec&lt;T&gt; {\n        StackVec {\n            buf: unsafe { mem::uninitialized() },\n            len: 0,\n        }\n    }\n\n    pub fn iter(&amp;self) -&gt; Iter&lt;T&gt; {\n        (&amp;self.buf[..self.len]).iter()\n    }\n\n    pub fn push(&amp;mut self, value: T) {\n        unsafe { ptr::write(self.buf.get_mut(self.len).unwrap(), value); }\n        self.len += 1;\n    }\n\n    pub fn pop(&amp;mut self) -&gt; Option&lt;T&gt; {\n        if self.len == 0 {\n            None\n        } else {\n            unsafe {\n                self.len -= 1;\n                Some(ptr::read(self.buf.get(self.len).unwrap()))\n            }\n        }\n    }\n}\n\n#[unsafe_destructor]\nimpl&lt;T&gt; Drop for StackVec&lt;T&gt;\n    where T: Drop\n{\n    fn drop(&amp;mut self) {\n        for elem in self.iter() {\n            unsafe { ptr::read(elem); }\n        }\n        unsafe { mem::forget(self.buf); } // ERROR: [1]\n    }\n}\n</code></pre>\n\n<p>This is the compile-time error I get:<br>\n[1] error: cannot move out of type <code>stackvec::StackVec&lt;T&gt;</code>, which defines the <code>Drop</code> trait</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 292, "user_id": 3801446, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/mcz8B.jpg?s=128&g=1", "display_name": "Shankar Us", "link": "https://stackoverflow.com/users/3801446/shankar-us"}, "edited": false, "score": 0, "creation_date": 1427202497, "post_id": 29233439, "comment_id": 46672966, "body": "thanks for your reply :)"}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 0, "creation_date": 1502633707, "post_id": 29233439, "comment_id": 78280245, "body": "I think <code>Copy</code> should be in this list. It is in the list in the linked document at rustbyexaple.com."}], "tags": [], "owner": {"reputation": 19346, "user_id": 2793118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5da03d2e233e1a40a4f1923acfb9d433?s=128&d=identicon&r=PG", "display_name": "Filipe Gon&#231;alves", "link": "https://stackoverflow.com/users/2793118/filipe-gon%c3%a7alves"}, "is_accepted": false, "score": 5, "last_activity_date": 1427202510, "last_edit_date": 1427202510, "creation_date": 1427202338, "answer_id": 29233439, "question_id": 29233324, "link": "https://stackoverflow.com/questions/29233324/can-we-automatically-derive-a-user-defined-trait/29233439#29233439", "title": "Can we automatically derive a user-defined trait?", "body": "<p>No, you can't. <code>derive</code> instructs the compiler to provide a basic implementation of the trait. You can't expect the compiler to magically know how to implement a user-defined trait. </p>\n\n<p>You can only use <code>derive</code> with these traits (taken from <a href=\"http://rustbyexample.com/trait/derive.html\" rel=\"noreferrer\">http://rustbyexample.com/trait/derive.html</a>):</p>\n\n<ul>\n<li>Comparison traits: <code>Eq</code>, <code>PartialEq</code>, <code>Ord</code>, <code>PartialOrd</code></li>\n<li>Serialization: <code>Encodable</code>, <code>Decodable</code></li>\n<li><code>Clone</code>, to create <code>T</code> from <code>&amp;T</code> via a copy.</li>\n<li><code>Hash</code>, to compute a hash from <code>&amp;T</code>.</li>\n<li><code>Rand</code>, to create a random instance of a data type.</li>\n<li><code>Default</code>, to create an empty instance of a data type.</li>\n<li><code>Zero</code>, to create a zero instance of a numeric data type.</li>\n<li><code>FromPrimitive</code>, to create an instance from a numeric primitive.</li>\n<li><code>Debug</code>, to format a value using the <code>{:?}</code> formatter.</li>\n</ul>\n\n<p><strong>NOTE</strong>: Apparently this was proposed and is being discussed <a href=\"http://internals.rust-lang.org/t/pre-rfc-auto-derive-for-generating-deriving-decorators/709/2\" rel=\"noreferrer\">here</a></p>\n"}, {"comments": [{"owner": {"reputation": 292, "user_id": 3801446, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/mcz8B.jpg?s=128&g=1", "display_name": "Shankar Us", "link": "https://stackoverflow.com/users/3801446/shankar-us"}, "edited": false, "score": 0, "creation_date": 1427263780, "post_id": 29244242, "comment_id": 46701727, "body": "hey thanks :) this post be really helpful"}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 7, "last_activity_date": 1532286548, "last_edit_date": 1532286548, "creation_date": 1427236912, "answer_id": 29244242, "question_id": 29233324, "link": "https://stackoverflow.com/questions/29233324/can-we-automatically-derive-a-user-defined-trait/29244242#29244242", "title": "Can we automatically derive a user-defined trait?", "body": "<p><code>#[derive(Foo, Bar)]</code> is sugar for <code>#[derive_Foo] #[derive_Bar]</code>, so it is possible to implement your own decorator attribute in the same way as <code>#[derive_Clone]</code> is, but this requires you to write a compiler plugin, which is not a stable part of Rust and will not be stable in 1.0 (and will thus be unavailable in the stable and beta channels).</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/compiler-plugins.html\" rel=\"nofollow noreferrer\">There is a little documentation on such matters in the book</a>, but not much; you\u2019re largely on your own with it.</p>\n\n<p>Bear in mind that what you can actually do at that stage is limited; you have access to the struct definition only, and know nothing about the actual types mentioned. This is a good fit for all of the traits for which <code>#[derive]</code> support is built in, but is not for many other traits.</p>\n"}], "owner": {"reputation": 292, "user_id": 3801446, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/mcz8B.jpg?s=128&g=1", "display_name": "Shankar Us", "link": "https://stackoverflow.com/users/3801446/shankar-us"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1210, "favorite_count": 0, "closed_date": 1489767525, "answer_count": 2, "score": 2, "last_activity_date": 1532286548, "creation_date": 1427201976, "last_edit_date": 1427203051, "question_id": 29233324, "link": "https://stackoverflow.com/questions/29233324/can-we-automatically-derive-a-user-defined-trait", "closed_reason": "Duplicate", "title": "Can we automatically derive a user-defined trait?", "body": "<p>I have a struct like this </p>\n\n<pre><code>#[derive(CustomTrait)]\nstruct Sample {\n    v: Vec&lt;u8&gt;,\n}\n</code></pre>\n\n<p>and my trait goes like this</p>\n\n<pre><code>trait CustomTrait {...}\n</code></pre>\n\n<p>Can I do the above stuff? It threw an error for me. </p>\n\n<p>I want something similar to the <code>Clone</code> trait. Is this possible with Rust?</p>\n"}, {"tags": ["closures", "rust", "mutable", "lifetime"], "comments": [{"owner": {"reputation": 19346, "user_id": 2793118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5da03d2e233e1a40a4f1923acfb9d433?s=128&d=identicon&r=PG", "display_name": "Filipe Gon&#231;alves", "link": "https://stackoverflow.com/users/2793118/filipe-gon%c3%a7alves"}, "edited": false, "score": 0, "creation_date": 1427204593, "post_id": 29232849, "comment_id": 46674416, "body": "There&#39;s no simple fix to this because it is inherently unsafe to pass references to threads, since the parent thread who owns the reference can terminate before the other threads, invalidating what the references in the children point to. You&#39;ll have to change your design a little bit. Have a look at <a href=\"http://stackoverflow.com/questions/26477757/how-do-you-send-slices-of-a-vec-to-a-task-in-rust\" title=\"how do you send slices of a vec to a task in rust\">stackoverflow.com/questions/26477757/&hellip;</a> for possible workarounds."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 19346, "user_id": 2793118, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5da03d2e233e1a40a4f1923acfb9d433?s=128&d=identicon&r=PG", "display_name": "Filipe Gon&#231;alves", "link": "https://stackoverflow.com/users/2793118/filipe-gon%c3%a7alves"}, "edited": false, "score": 2, "creation_date": 1427204862, "post_id": 29232849, "comment_id": 46674609, "body": "@FilipeGon&#231;alves this is not entirely correct because there is a machinery which makes sure that a reference won&#39;t outlive the parent stack frame (see <a href=\"http://doc.rust-lang.org/std/thread/fn.scoped.html\" rel=\"nofollow noreferrer\"><code>thread::scoped</code></a>) even if it passed to another thread. In this particular case there are even no threads."}], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1427218099, "post_id": 29234314, "comment_id": 46684430, "body": "You can&#39;t use the value of type <code>&amp;mut [usize]</code> by borrowing inside the closure. You can only use it by moving it. Moving it requires <code>FnOnce</code>."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427237218, "post_id": 29234314, "comment_id": 46694419, "body": "[A comment on your edit to the question as well as this answer.] Please use <code>&lt;!-- language: lang-rust --&gt;</code> on Rust code, it makes ugly <code>&#47;&#47;&#39;</code> formatting hacks at the end of a line unnecessary."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427237413, "post_id": 29234314, "comment_id": 46694504, "body": "@Shepmaster: yeah, it\u2019s still not as good as actually dealing with lifetime tokens properly, but the fact that it doesn\u2019t highlighting it beyond line breaks is an improvement."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427239578, "post_id": 29234314, "comment_id": 46695290, "body": "@Shepmaster: under Firefox for Android I experience no syntax highlighting."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1427237329, "last_edit_date": 1427237329, "creation_date": 1427204778, "answer_id": 29234314, "question_id": 29232849, "link": "https://stackoverflow.com/questions/29232849/lifetime-problems-passing-mut-to-function-and-returning-a-closure/29234314#29234314", "title": "Lifetime problems passing &amp;mut to function and returning a closure", "body": "<p>You can get your example to compile and run if you change one line:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub type MyClosure&lt;'s&gt; = FnOnce() -&gt; TaskResult&lt;'s&gt; + Send + 's;\n//                       ^~~~~~\n</code></pre>\n\n<p>I'm still thinking through how to explain it though!</p>\n\n<p>This is the code I was starting from. I made a few simplifications to get started, mostly around removing the lifetime references where they aren't needed. Lifetime elision means that <code>fn(foo: &amp;T) -&gt; &amp;U</code> is the same as <code>fn&lt;'a&gt;(foo: &amp;'a T) -&gt; &amp;'a U</code>, but <strong>not the same</strong> as <code>fn&lt;'a&gt;(foo: &amp;'a T) -&gt; &amp;U</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut data = vec![1,2,3,4,5,6,7,8,9];\n    let t = inc_vec(data.as_mut_slice());\n}\n\npub type MyClosure&lt;'s&gt; = FnMut() -&gt; TaskResult&lt;'s&gt; + Send + 's;\n\npub enum TaskResult&lt;'s&gt; {\n    Done(usize),\n    Fork(Vec&lt;Box&lt;MyClosure&lt;'s&gt;&gt;&gt;),\n}\n\nfn inc_vec(data: &amp;mut [usize]) -&gt; TaskResult {\n    if data.len() &lt;= 4 {\n        inc_vec_direct(data)\n    } else {\n        inc_vec_fork(data)\n    }\n}\n\nfn inc_vec_fork(data: &amp;mut [usize]) -&gt; TaskResult {\n    let mid = data.len() / 2;\n    let (l, r) = data.split_at_mut(mid);\n\n    let task_l: Box&lt;MyClosure&gt; = Box::new(move || inc_vec(l));\n    let task_r: Box&lt;MyClosure&gt; = Box::new(move || inc_vec(r));\n\n    TaskResult::Fork(vec![task_l, task_r])\n}\n\nfn inc_vec_direct(data: &amp;mut [usize]) -&gt; TaskResult {\n    for d in data { *d += 1; }\n    TaskResult::Done(1)\n}\n</code></pre>\n\n<p>Mostly, I got to the result by changing the closure just a smidge:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let task_l: Box&lt;MyClosure&gt; = Box::new(move || { let a = l; inc_vec(a)});\n</code></pre>\n\n<p>Which should be the same code. However, this has the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot move out of captured outer variable in an `FnMut` closure\n     let task_l: Box&lt;MyClosure&gt; = Box::new(move || { let a = l; inc_vec(a)});\n                                                             ^\nnote: attempting to move value to here\n     let task_l: Box&lt;MyClosure&gt; = Box::new(move || { let a = l; inc_vec(a)});\n                                                         ^\nhelp: to prevent the move, use `ref a` or `ref mut a` to capture value by reference\n</code></pre>\n\n<p>Which led me to try the various <code>Fn*</code> traits, with <code>FnOnce</code> working. I <strong>think</strong> that the solution boils down to the fact that Rust disallows aliasing of mutable references (a.k.a. you can't point to the same mutable thing twice). If you had a <code>FnMut</code> or <code>Fn</code>, then you could call the closure multiple times, which would give an opportunity to create aliases. It'd be awful nice if the error message included anything about mutability though!</p>\n\n<p>A <code>FnOnce</code> is guaranteed to only be called once, which prevents that particular aliasing opportunity.</p>\n\n<p>I think you could file 1 or 2 bugs from this:</p>\n\n<ol>\n<li>It's surprising that the error message changes based on if there is a <code>let</code> or not.</li>\n<li>It would be nice to mention mutability as the reason that the variable can't be moved into the closure.</li>\n</ol>\n"}], "owner": {"reputation": 63, "user_id": 1414998, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/205c9139daf85522a058ba364b4aee6e?s=128&d=identicon&r=PG", "display_name": "faern", "link": "https://stackoverflow.com/users/1414998/faern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "accepted_answer_id": 29234314, "answer_count": 1, "score": 3, "last_activity_date": 1427237329, "creation_date": 1427200657, "last_edit_date": 1427237188, "question_id": 29232849, "link": "https://stackoverflow.com/questions/29232849/lifetime-problems-passing-mut-to-function-and-returning-a-closure", "title": "Lifetime problems passing &amp;mut to function and returning a closure", "body": "<p>I have a short example of incrementing a vector by divide and conquer. Very basic, I just can't get the lifetimes correct. I'm pretty sure it has to do with <code>&amp;'s mut</code> argument lifetime and the <code>TaskResult&lt;'s&gt;</code> return lifetime, but I'm not sure how to make it work.</p>\n\n<p>The <a href=\"http://is.gd/ZaQUbH\" rel=\"nofollow\">code on the playpen</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut data = vec![1,2,3,4,5,6,7,8,9];\n    let t = inc_vec(data.as_mut_slice());\n}\n\npub type MyClosure&lt;'s&gt; = FnMut() -&gt; TaskResult&lt;'s&gt; + Send + 's;\n\npub enum TaskResult&lt;'s&gt; {\n    Done(usize),\n    Fork(Vec&lt;Box&lt;MyClosure&lt;'s&gt;&gt;&gt;),\n}\n\nfn inc_vec&lt;'s&gt;(data: &amp;'s mut [usize]) -&gt; TaskResult {\n    if data.len() &lt;= 4 {\n        inc_vec_direct(data)\n    } else {\n        inc_vec_fork(data)\n    }\n}\n\nfn inc_vec_fork&lt;'s&gt;(data: &amp;'s mut [usize]) -&gt; TaskResult&lt;'s&gt; {\n    let mid = data.len()/2;\n    let (l,r) = data.split_at_mut(mid);\n\n    let task_l: Box&lt;MyClosure&lt;'s&gt;&gt; = Box::new(move || {\n        inc_vec(l)\n    });\n    let task_r: Box&lt;MyClosure&lt;'s&gt;&gt; = Box::new(move || {\n        inc_vec(r)\n    });\n\n    TaskResult::Fork(vec![task_l, task_r])\n}\n\nfn inc_vec_direct(data: &amp;mut [usize]) -&gt; TaskResult {\n    for d in data {\n        *d += 1;\n    }\n    TaskResult::Done(1)\n}\n</code></pre>\n\n<p>And it gives me the following error (truncated since the same error is produced twice, once for <code>task_l</code> and once for <code>task_r</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/main.rs:26:17: 26:18 error: cannot infer an appropriate lifetime for automatic coercion due to conflicting requirements\nsrc/main.rs:26         inc_vec(l)\n                               ^\nsrc/main.rs:25:55: 27:6 note: first, the lifetime cannot outlive the lifetime  as defined on the block at 25:54...\nsrc/main.rs:25     let task_l: Box&lt;MyClosure&lt;'s&gt;&gt; = Box::new(move || {\nsrc/main.rs:26         inc_vec(l)\nsrc/main.rs:27     });\nsrc/main.rs:26:17: 26:18 note: ...so that closure can access `l`\nsrc/main.rs:26         inc_vec(l)\n                               ^\nsrc/main.rs:21:62: 33:2 note: but, the lifetime must be valid for the lifetime 's as defined on the block at 21:61...\nsrc/main.rs:21 fn inc_vec_fork&lt;'s&gt;(data: &amp;'s mut [usize]) -&gt; TaskResult&lt;'s&gt; {\nsrc/main.rs:22     let mid = data.len()/2;\nsrc/main.rs:23     let (l,r) = data.split_at_mut(mid);\nsrc/main.rs:24\nsrc/main.rs:25     let task_l: Box&lt;MyClosure&lt;'s&gt;&gt; = Box::new(move || {\nsrc/main.rs:26         inc_vec(l)\n               ...\nsrc/main.rs:25:38: 27:7 note: ...so that trait type parameters matches those specified on the impl (expected `TaskResult&lt;'_&gt;`, found `TaskResult&lt;'s&gt;`)\nsrc/main.rs:25     let task_l: Box&lt;MyClosure&lt;'s&gt;&gt; = Box::new(move || {\nsrc/main.rs:26         inc_vec(l)\nsrc/main.rs:27     });\n</code></pre>\n\n<p>There must be a simple fix to this. All I want to say is that I return a vector of closures that have mutable references to parts of the input slice. I guess I have to mark the closure lifetime as shorter than the data slice lifetime, just not sure how to do that.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 157, "user_id": 4685140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-T08eTE_l_BQ/AAAAAAAAAAI/AAAAAAAAC6A/Q4pYAI2JIPc/photo.jpg?sz=128", "display_name": "Vee Satayamas", "link": "https://stackoverflow.com/users/4685140/vee-satayamas"}, "edited": false, "score": 1, "creation_date": 1427193609, "post_id": 29230179, "comment_id": 46667266, "body": "When I run &quot;cargo package&quot;, it failed to verify package tarball."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "reply_to_user": {"reputation": 157, "user_id": 4685140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-T08eTE_l_BQ/AAAAAAAAAAI/AAAAAAAAC6A/Q4pYAI2JIPc/photo.jpg?sz=128", "display_name": "Vee Satayamas", "link": "https://stackoverflow.com/users/4685140/vee-satayamas"}, "edited": false, "score": 0, "creation_date": 1427197586, "post_id": 29230179, "comment_id": 46669755, "body": "What is the full output of <code>cargo package</code>? (Could you edit it and the <code>Cargo.toml</code> you are using into the question?)"}, {"owner": {"reputation": 157, "user_id": 4685140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-T08eTE_l_BQ/AAAAAAAAAAI/AAAAAAAAC6A/Q4pYAI2JIPc/photo.jpg?sz=128", "display_name": "Vee Satayamas", "link": "https://stackoverflow.com/users/4685140/vee-satayamas"}, "edited": false, "score": 1, "creation_date": 1427203072, "post_id": 29230179, "comment_id": 46673357, "body": "I have to commit it to git first."}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 7, "last_activity_date": 1427197573, "last_edit_date": 1427197573, "creation_date": 1427192888, "answer_id": 29230179, "question_id": 29229924, "link": "https://stackoverflow.com/questions/29229924/how-can-i-edit-cargo-toml-in-order-to-include-resource-files-in-my-cargo-package/29230179#29230179", "title": "How can I edit Cargo.toml in order to include resource files in my Cargo package?", "body": "<p>I believe <code>include = [\"data/my_dictionary.txt\"]</code> should work.</p>\n\n<p>(I <a href=\"https://github.com/rust-lang/cargo/pull/1446\" rel=\"noreferrer\">opened a PR</a> adding this to the documentation.)</p>\n"}], "owner": {"reputation": 157, "user_id": 4685140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-T08eTE_l_BQ/AAAAAAAAAAI/AAAAAAAAC6A/Q4pYAI2JIPc/photo.jpg?sz=128", "display_name": "Vee Satayamas", "link": "https://stackoverflow.com/users/4685140/vee-satayamas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1883, "favorite_count": 1, "accepted_answer_id": 29230179, "answer_count": 1, "score": 6, "last_activity_date": 1517762102, "creation_date": 1427192232, "last_edit_date": 1517762102, "question_id": 29229924, "link": "https://stackoverflow.com/questions/29229924/how-can-i-edit-cargo-toml-in-order-to-include-resource-files-in-my-cargo-package", "title": "How can I edit Cargo.toml in order to include resource files in my Cargo package?", "body": "<p>I want to bundle a word list in plain text format with my Cargo package. Can I edit Cargo.toml in order to do this?</p>\n\n<p>If I used npm, I would add this to my package.json:</p>\n\n<pre><code>\"files\": [\"data/my_dictionary.txt\"]\n</code></pre>\n\n<p>I tried <code>include</code> but it doesn't seem to work.</p>\n\n<p>Here is my Cargo.toml</p>\n\n<pre><code>[package]\n\nname = \"chamkho\"\nversion = \"0.0.2\"\nauthors = [\"Vee Satayamas &lt;vsatayamas@gmail.com&gt;\"]\ntest = true\ndescription = \"Thai word segmentation/breaking library and command line\"\ndocumentation = \"https://github.com/veer66/chamkho/blob/master/README.md\"\nhomepage = \"https://github.com/veer66/chamkho/\"\nrepository = \"https://github.com/veer66/chamkho.git\"\nreadme = \"README.md\"\nkeywords = [\"text\", \"nlp\", \"thai\", \"library\"]\nlicense = \"BSD-2-Clause\"\ninclude = [\"**/*.txt\", \"**/*.rs\",\"Cargo.toml\"]\n\n[[bin]]\nname = \"wordcut\"\npath = \"src/cli.rs\"\n</code></pre>\n\n<p>This is the output of <code>cargo package -l</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Cargo.toml\nsrc/acc.rs\nsrc/cli.rs\nsrc/dict.rs\nsrc/edge.rs\nsrc/graph.rs\nsrc/graph_builder.rs\nsrc/lib.rs\nsrc/space_acc.rs\nsrc/wordcut.rs\ntests/wordcut.rs\n</code></pre>\n"}, {"tags": ["return", "rust", "infinite-loop", "break"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427208084, "post_id": 29226405, "comment_id": 46677073, "body": "I expect a thorough blog post correlating breakfast choices and how they map to <code>return</code> / <code>break</code>."}, {"owner": {"reputation": 4382, "user_id": 2251437, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/9a594b33bf5eb20ec4e69b63f787e5c4?s=128&d=identicon&r=PG", "display_name": "sargas", "link": "https://stackoverflow.com/users/2251437/sargas"}, "edited": false, "score": 0, "creation_date": 1427212822, "post_id": 29226405, "comment_id": 46680764, "body": "@Chris Morgan, concise and clear. It was late night, so no breakfast was taken until today, after that I decided to use <code>return</code> since this is the last loop in the program and should end execution after."}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 4, "last_activity_date": 1427179195, "creation_date": 1427179195, "answer_id": 29226405, "question_id": 29226183, "link": "https://stackoverflow.com/questions/29226183/what-is-the-difference-between-a-return-and-a-break-in-an-infinite-loop/29226405#29226405", "title": "What is the difference between a return and a break in an infinite loop?", "body": "<p>If the loop is the final statement in the function, then there is patently no functional distinction between <code>break;</code> and <code>return;</code>. If this condition does not hold, there is evidently a difference, for <code>return</code> terminates execution of the <em>function</em>, while <code>break</code> only terminates execution of the <em>loop</em>.</p>\n\n<p>In the case where they are functionally the same, which you use may vary based on context (which one feels better in this particular location), personal preference and what, if anything, you ate for breakfast.</p>\n"}], "owner": {"reputation": 4382, "user_id": 2251437, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/9a594b33bf5eb20ec4e69b63f787e5c4?s=128&d=identicon&r=PG", "display_name": "sargas", "link": "https://stackoverflow.com/users/2251437/sargas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 672, "favorite_count": 0, "accepted_answer_id": 29226405, "answer_count": 1, "score": 0, "last_activity_date": 1427202783, "creation_date": 1427177980, "last_edit_date": 1427202783, "question_id": 29226183, "link": "https://stackoverflow.com/questions/29226183/what-is-the-difference-between-a-return-and-a-break-in-an-infinite-loop", "title": "What is the difference between a return and a break in an infinite loop?", "body": "<p>In doing the Guessing Game from the Rust Book (I won't put the link because it will probably not exist in a few weeks), there is a point where you use <code>return</code> to break out of the <code>loop</code>. I used <code>break</code> instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>loop {\n    guess = guesser();\n    guess_cast = guess.trim().parse();\n\n    let guess_num = match guess_cast {\n        Ok(num) =&gt; num,\n        Err(_) =&gt; {\n            println!(\"Guess was not a number, try again\");\n            continue;\n        },\n    };\n\n    if guess_num &lt; answer {\n        println!(\"Too low\");\n    } else if guess_num &gt; answer {\n        println!(\"Too high\");\n    } else {\n        println!(\"You guessed it!\");\n        break;\n    }\n}\n</code></pre>\n\n<p>Is there a real difference in using <code>return</code> over <code>break</code> in this case? What about other cases when you want to break out of an infinite loop?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 2, "last_activity_date": 1427178119, "creation_date": 1427178119, "answer_id": 29226209, "question_id": 29225108, "link": "https://stackoverflow.com/questions/29225108/returning-slices-to-a-constant-array/29226209#29226209", "title": "Returning slices to a constant array", "body": "<p>There is an important distinction between a couple of concepts, <em>constants</em> and <em>statics</em>. These are distinct concepts in Rust. The detailed design of the distinctions from when it was introduced can be found in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0246-const-vs-static.md\" rel=\"nofollow\">RFC 246</a>.</p>\n\n<p>The notable content:</p>\n\n<blockquote>\n  <p>Therefore, taking the address of a constant actually creates a spot on the local stack -- they by definition have no significant address.</p>\n</blockquote>\n\n<p>Given this understanding, it can be seen why taking a reference to a constant does not give a <code>'static</code> borrow\u2014it is <em>not</em> a static reference, it is referring to something on the local stack.</p>\n\n<p>There are two ways of dealing with this; one is to make the type a static reference (<code>&amp;'static [f32; 10]</code> or <code>&amp;'static [f32]</code>), whereby <code>VERTICES</code> can be of type <code>&amp;'static [f32]</code> (it could also be <code>&amp;'static [f32; 10]</code> if the constant has that type) and <code>&amp;VERTICES[3..]</code> will be of type <code>&amp;'static [f32]</code>. Because then the thing that has no significant address and is placed on the local stack is the <code>'static</code> reference\u2014what it refers to <em>does</em> thus necessarily have a fixed address.</p>\n\n<p>The other approach (and probably the preferred one) is to use <code>static</code> instead of <code>const</code>. That way you can take static references to it without let or hindrance.</p>\n\n<p>And so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static VERTICES: [f32; 10] = [\n    0.0, 0.0, 0.0,\n    0.0, 0.0,\n    1.0, 0.0, 0.0,\n    1.0, 0.0];\n\npub fn vertex_coords() -&gt; &amp;'static [f32] {\n    &amp;VERTICES\n}\n\npub fn texture_coords() -&gt; &amp;'static [f32] {\n    &amp;VERTICES[3..]\n}\n</code></pre>\n"}], "owner": {"reputation": 776, "user_id": 738908, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e3c4d07502711bd162956faf5a777f8c?s=128&d=identicon&r=PG", "display_name": "Skirmantas Kligys", "link": "https://stackoverflow.com/users/738908/skirmantas-kligys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 29226209, "answer_count": 1, "score": 1, "last_activity_date": 1427178119, "creation_date": 1427171851, "last_edit_date": 1427177211, "question_id": 29225108, "link": "https://stackoverflow.com/questions/29225108/returning-slices-to-a-constant-array", "title": "Returning slices to a constant array", "body": "<p>I have a large constant array of floats (mesh coordinates) and would like to return various slices of it to use in OpenGL.  The following fails to compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const VERTICES: [f32; 10] = [\n  0.0, 0.0, 0.0,\n  0.0, 0.0,\n  1.0, 0.0, 0.0,\n  1.0, 0.0];\n\npub fn vertex_coords() -&gt; &amp;'static [f32] {\n  &amp;VERTICES\n}\n\npub fn texture_coords() -&gt; &amp;'static [f32] {\n  &amp;VERTICES[3..]\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;anon&gt;:8:4: 8:12 error: borrowed value does not live long enough\n&lt;anon&gt;:8   &amp;VERTICES\n            ^~~~~~~~\nnote: reference must be valid for the static lifetime...\n&lt;anon&gt;:7:42: 9:2 note: ...but borrowed value is only valid for the block at 7:41\n&lt;anon&gt;:7 pub fn vertex_coords() -&gt; &amp;'static [f32] {\n&lt;anon&gt;:8   &amp;VERTICES\n&lt;anon&gt;:9 }\n&lt;anon&gt;:12:4: 12:12 error: borrowed value does not live long enough\n&lt;anon&gt;:12   &amp;VERTICES[3..]\n             ^~~~~~~~\nnote: reference must be valid for the static lifetime...\n&lt;anon&gt;:11:43: 13:2 note: ...but borrowed value is only valid for the block at 11:42\n&lt;anon&gt;:11 pub fn texture_coords() -&gt; &amp;'static [f32] {\n</code></pre>\n\n<p>This also fails:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn vertex_coords&lt;'a&gt;() -&gt; &amp;'a [f32] {\n</code></pre>\n\n<p>Any ideas how to do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427165618, "post_id": 29224151, "comment_id": 46656670, "body": "Do you know of a solution to this in any other language? That might give us somewhere to start from. My general solution would be &quot;break it into smaller pieces&quot;. Maybe you can have finer-grained locking or do the problem in many independent pieces each atomically but many concurrently."}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427166577, "post_id": 29224151, "comment_id": 46656895, "body": "Many c-like languages have standalone mutexes which are separated from data. So I&#39;d just use a lock while accessing my state in &quot;mutable&quot; threads, and not use it in &quot;immutable&quot; ones. I know exactly that there would be no data races (according to program structure), but I don&#39;t know how to prove it for rust compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1427167110, "post_id": 29224151, "comment_id": 46657021, "body": "What about a <a href=\"http://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\">RWLock</a>? Allows for multiple concurrent readers or one writer."}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427168119, "post_id": 29224151, "comment_id": 46657258, "body": "That is quite the thing! Thank you very much!"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1427181397, "post_id": 29224151, "comment_id": 46661027, "body": "can&#39;t you simply move it out of the <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> into an <code>Arc&lt;T&gt;</code> afterwards? or do you have to modify it again later?"}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1427198717, "post_id": 29224151, "comment_id": 46670445, "body": "Yes, I have to repeat these two steps in a loop."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427202725, "post_id": 29232266, "comment_id": 46673108, "body": "Sorry I couldn&#39;t provide an actual answer - I went to sleep!"}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427317843, "post_id": 29232266, "comment_id": 46734859, "body": "No problem, I just thought that it was supposed to me making an answer."}], "tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": true, "score": 4, "last_activity_date": 1523982905, "last_edit_date": 1523982905, "creation_date": 1427198831, "answer_id": 29232266, "question_id": 29224151, "link": "https://stackoverflow.com/questions/29224151/how-do-i-share-data-between-several-threads-when-i-need-it-mutable-only-rarely/29232266#29232266", "title": "How do I share data between several threads when I need it mutable only rarely?", "body": "<p>A <a href=\"http://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>std::sync::RwLock</code></a> is what I am looking for, thanks @Shepmaster!</p>\n"}], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1858, "favorite_count": 0, "accepted_answer_id": 29232266, "answer_count": 1, "score": 3, "last_activity_date": 1523982905, "creation_date": 1427165037, "last_edit_date": 1523982889, "question_id": 29224151, "link": "https://stackoverflow.com/questions/29224151/how-do-i-share-data-between-several-threads-when-i-need-it-mutable-only-rarely", "title": "How do I share data between several threads when I need it mutable only rarely?", "body": "<p>I have some data of type <code>T</code> which implements neither <code>Copy</code> nor <code>Clone</code>. </p>\n\n<ol>\n<li>If I want to share my data between several threads immutably, I'll use <code>Arc&lt;T&gt;</code>.</li>\n<li>If I want to share it mutably, I'll use <code>Arc&lt;Mutex&lt;T&gt;&gt;</code>.</li>\n</ol>\n\n<p>What if I want to share it first mutably, and then immutably in a loop? So:</p>\n\n<ul>\n<li>I cannot use either <code>Arc&lt;T&gt;</code> or <code>Arc&lt;Mutex&lt;Arc&lt;T&gt;&gt;&gt;</code> because I will not be able to mutate the data in the \"mutable\" threads.</li>\n<li>I can use <code>Arc&lt;Mutex&lt;T&gt;&gt;</code>, but then I have to <code>lock()</code> it in each of the \"immutable\" threads to reach <code>T</code>, losing parallelism.</li>\n<li>I cannot copy data after mutation is complete, because it is expensive (or there is no way to implement <code>Clone</code>).</li>\n</ul>\n\n<p>What is the right effective solution then?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 1073, "user_id": 2277915, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/e9dba1201139b216bbe3136b06fa2793?s=128&d=identicon&r=PG", "display_name": "Reignbeaux", "link": "https://stackoverflow.com/users/2277915/reignbeaux"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427135863, "post_id": 29217413, "comment_id": 46644617, "body": "Sorry for that, just updated the code to work on playpen ;)"}], "answers": [{"comments": [{"owner": {"reputation": 1073, "user_id": 2277915, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/e9dba1201139b216bbe3136b06fa2793?s=128&d=identicon&r=PG", "display_name": "Reignbeaux", "link": "https://stackoverflow.com/users/2277915/reignbeaux"}, "edited": false, "score": 0, "creation_date": 1427136288, "post_id": 29217945, "comment_id": 46644866, "body": "OK, that was almose too easy :D I was too fixed on the whole lifetime stuff that I didn&#39;t realise that. Thanks again"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1073, "user_id": 2277915, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/e9dba1201139b216bbe3136b06fa2793?s=128&d=identicon&r=PG", "display_name": "Reignbeaux", "link": "https://stackoverflow.com/users/2277915/reignbeaux"}, "edited": false, "score": 0, "creation_date": 1427136366, "post_id": 29217945, "comment_id": 46644904, "body": "No worries; the really poor error message is surprising. I&#39;m trying to see if I can figure out why it&#39;s so bad here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1073, "user_id": 2277915, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/e9dba1201139b216bbe3136b06fa2793?s=128&d=identicon&r=PG", "display_name": "Reignbeaux", "link": "https://stackoverflow.com/users/2277915/reignbeaux"}, "edited": false, "score": 0, "creation_date": 1427250679, "post_id": 29217945, "comment_id": 46698233, "body": "I <a href=\"https://github.com/rust-lang/rust/issues/23685\" rel=\"nofollow noreferrer\">created a bug</a> - we will see if there&#39;s a better error message possible."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1427136337, "last_edit_date": 1427136337, "creation_date": 1427136118, "answer_id": 29217945, "question_id": 29217413, "link": "https://stackoverflow.com/questions/29217413/pathbuf-does-not-live-long-enough/29217945#29217945", "title": "PathBuf does not live long enough", "body": "<p>Commenting out lines of code, we can find that it is the <code>panic!</code> line that fails. The first argument of <code>panic!</code> is supposed to be a formatting string, which must have the <code>'static</code> lifetime, as it's actually compiled.</p>\n\n<p>A small example that replicates this is:</p>\n\n<pre><code>let s = \"Foo\".to_string();\npanic!(&amp;s);\n</code></pre>\n\n<p>But for some reason, this example has a <em>much</em> better error message, one that points to <code>&amp;s</code>.</p>\n\n<p>For your example, you can just change the <code>panic!</code> line to:</p>\n\n<pre><code>panic!(\"{}\", last_test);\n</code></pre>\n"}], "owner": {"reputation": 1073, "user_id": 2277915, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/e9dba1201139b216bbe3136b06fa2793?s=128&d=identicon&r=PG", "display_name": "Reignbeaux", "link": "https://stackoverflow.com/users/2277915/reignbeaux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 481, "favorite_count": 0, "accepted_answer_id": 29217945, "answer_count": 1, "score": 3, "last_activity_date": 1427136337, "creation_date": 1427134292, "last_edit_date": 1427135825, "question_id": 29217413, "link": "https://stackoverflow.com/questions/29217413/pathbuf-does-not-live-long-enough", "title": "PathBuf does not live long enough", "body": "<p>I'm trying to get the following code working in a build script:</p>\n\n<pre><code>use std::path::PathBuf;\nuse std::env;\nuse std::ffi::AsOsStr;\n\nfn main() {\n    let mut string = env::var(\"CARGO_MANIFEST_DIR\").unwrap();\n    let mut main_dir = PathBuf::new(string);\n    main_dir.push(\"src/dependencies\");\n\n    let test_str = main_dir.as_os_str(); // test_str gets the same lifetime as main_dir\n\n    let second_test = test_str.to_str();\n\n    let last_test = second_test.unwrap();\n    panic!(&amp;last_test);\n}\n</code></pre>\n\n<p>I get the following errors:</p>\n\n<pre><code>&lt;anon&gt;:10:24: 10:32 error: `main_dir` does not live long enough\n&lt;anon&gt;:10         let test_str = main_dir.as_os_str(); // test_str gets the same lifetime as main_dir\n                                 ^~~~~~~~\nnote: reference must be valid for the static lifetime...\n&lt;anon&gt;:7:48: 16:6 note: ...but borrowed value is only valid for the block suffix following statement 1 at 7:47\n&lt;anon&gt;:7         let mut main_dir = PathBuf::new(string);\n&lt;anon&gt;:8         main_dir.push(\"src/dependencies\");\n&lt;anon&gt;:9     \n&lt;anon&gt;:10         let test_str = main_dir.as_os_str(); // test_str gets the same lifetime as main_dir\n&lt;anon&gt;:11     \n&lt;anon&gt;:12         let second_test = test_str.to_str();\n          ...\n&lt;anon&gt;:15:17: 15:26 error: `last_test` does not live long enough\n&lt;anon&gt;:15         panic!(&amp;last_test);\n                          ^~~~~~~~~\n&lt;std macros&gt;:1:1: 12:62 note: in expansion of panic!\n&lt;anon&gt;:15:9: 15:28 note: expansion site\nnote: reference must be valid for the static lifetime...\n&lt;anon&gt;:14:45: 16:6 note: ...but borrowed value is only valid for the block suffix following statement 5 at 14:44\n&lt;anon&gt;:14         let last_test = second_test.unwrap();\n&lt;anon&gt;:15         panic!(&amp;last_test);\n&lt;anon&gt;:16     }\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>I'm literally saving every value in an own variable. So how is this possible to not outlive the statement? I know that there is \"into_os_string\" as well, but why is my approach not working? </p>\n\n<p>I'm really trying to understand the whole lifetime thing, but it's very difficult. Maybe someone could quickly go through my example and tell me what happens with the lifetimes in each statement and why it's not working? That'd help me a lot</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1427137504, "post_id": 29216923, "comment_id": 46645583, "body": "Yes, unconstrained integer literals default to <code>i32</code>."}], "tags": [], "owner": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "is_accepted": true, "score": 6, "last_activity_date": 1427138088, "last_edit_date": 1427138088, "creation_date": 1427132824, "answer_id": 29216923, "question_id": 29216530, "link": "https://stackoverflow.com/questions/29216530/does-rust-automatically-dereference-primitive-type-references/29216923#29216923", "title": "Does Rust automatically dereference primitive type references?", "body": "<p>All of the arithmetic operators in Rust are implemented for both primitive values and references to primitives on either side of the operator. For example, see the <code>Implementors</code> section of <a href=\"http://doc.rust-lang.org/std/ops/trait.Mul.html\" rel=\"nofollow\"><code>std::ops::Mul</code></a>, the trait that controls the overriding of the <code>*</code> operator. </p>\n\n<p>You'll see something like:</p>\n\n<pre><code>impl Mul&lt;i32&gt; for i32\nimpl&lt;'a&gt; Mul&lt;i32&gt; for &amp;'a i32\nimpl&lt;'a&gt; Mul&lt;&amp;'a i32&gt; for i32\nimpl&lt;'a, 'b&gt; Mul&lt;&amp;'a i32&gt; for &amp;'b i32\n</code></pre>\n\n<p>and so on and so on.</p>\n\n<p>In your example, <code>b1</code> has a type of <code>&amp;Box&lt;i32&gt;</code> (the default integer type), and while <code>Box</code> implements many traits as a passthrough for its contained type (e.g. <code>impl&lt;T: Read&gt; Read for Box&lt;T&gt;</code>), the arithmetic operators are not among them. That is why you have to dereference the box.</p>\n"}], "owner": {"reputation": 1264, "user_id": 898347, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/9lyb7.png?s=128&g=1", "display_name": "Chathurika Sandarenu", "link": "https://stackoverflow.com/users/898347/chathurika-sandarenu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 822, "favorite_count": 3, "accepted_answer_id": 29216923, "answer_count": 1, "score": 10, "last_activity_date": 1427205518, "creation_date": 1427131577, "last_edit_date": 1427205518, "question_id": 29216530, "link": "https://stackoverflow.com/questions/29216530/does-rust-automatically-dereference-primitive-type-references", "title": "Does Rust automatically dereference primitive type references?", "body": "<p>I'm new to Rust and trying to learn how references work. In the following code when I want to do a calculation on <code>a1</code> which is <code>i32</code> I don't have to dereference it. But with <code>b1</code> which is a <code>Box</code>, I have to dereference it. </p>\n\n<p>Actually both <code>let a2 = a1 * 2;</code> and <code>let a3 = *a1 * 2;</code> behave similarly. It looks like dereferencing in primitives is optional OR the compiler is implicitly doing that for us. </p>\n\n<pre><code>fn main(){\n    let a = 5;\n    let b = Box::new(10);\n    let a1 = &amp;a;\n    let b1 = &amp;b;\n\n    println!(\"{} {}\", a1, b1);\n\n    let a2 = a1 * 2;\n    let b2 = (**b1) * 10;\n    let a3 = *a1 * 2;\n\n    println!(\"{} {} {}\", a2, a3, b2);\n\n}\n</code></pre>\n\n<p>Can someone please explain this functionality?</p>\n"}, {"tags": ["string", "performance", "vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1238, "user_id": 759901, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/56175c4faa3db6d594ed7a0688b0c296?s=128&d=identicon&r=PG", "display_name": "leshow", "link": "https://stackoverflow.com/users/759901/leshow"}, "edited": false, "score": 0, "creation_date": 1427137058, "post_id": 29217876, "comment_id": 46645314, "body": "the old_io way allowed me to read the file to a string without mutability:      let word_backing: String = match file.read_to_string() {         Err(why) =&gt; panic!(&quot;couldn&#39;t read {}: {}&quot;, display, why.desc),         Ok(string) =&gt; string,     };     let words: Vec&lt;_&gt; = word_backing.words().collect();  Is there no way to do that with the new std::io"}, {"owner": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "reply_to_user": {"reputation": 1238, "user_id": 759901, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/56175c4faa3db6d594ed7a0688b0c296?s=128&d=identicon&r=PG", "display_name": "leshow", "link": "https://stackoverflow.com/users/759901/leshow"}, "edited": false, "score": 1, "creation_date": 1427137402, "post_id": 29217876, "comment_id": 46645522, "body": "The only difference between <code>read_to_string()</code> in <code>old_io</code> and <code>read_to_string()</code> in the new <code>io</code> is that you&#39;re required to allocate the string yourself and pass it as <code>&amp;mut String</code>. This provides a better representation for intermediate state as the method can return an error but you can still use what it&#39;s read up to that point, instead of losing everything."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427148573, "post_id": 29217876, "comment_id": 46651665, "body": "@AustinB it also allows you to avoid extraneous allocation, if you happen to already have an allocated string or you want to read from multiple sources into one string."}], "tags": [], "owner": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "is_accepted": true, "score": 2, "last_activity_date": 1427136421, "last_edit_date": 1427136421, "creation_date": 1427135851, "answer_id": 29217876, "question_id": 29216271, "link": "https://stackoverflow.com/questions/29216271/creating-a-vector-of-strings-using-the-new-stdfsfile/29217876#29217876", "title": "Creating a vector of strings using the new std::fs::File", "body": "<p>Your approach has a problem. <code>.words()</code> operates on an <code>&amp;str</code> (string slice) which needs a parent <code>String</code> to refer to. Your example works fine because the <code>Vec</code> produced by <code>s.words().collect()</code> resides in the same scope as <code>s</code>, so it won't outlive the source string. But if you want to move it somewhere else, you'll need to end up with a <code>Vec&lt;String&gt;</code> instead of a <code>Vec&lt;&amp;str&gt;</code>, which I'm assuming you already want if you're concerned about intermediate buffers.</p>\n\n<p>You do have some options. Here's two that I can think of.</p>\n\n<p>You can iterate over the characters of the file and split on whitespace:</p>\n\n<pre><code>// `.peekable()` gives us `.is_empty()` for an `Iterator`\n// `.chars()` yields a `Result&lt;char, CharsError&gt;` which needs to be dealt with\nlet mut chars = file.chars().map(Result::unwrap).peekable();\nlet mut words: Vec&lt;String&gt; = Vec::new();\n\nwhile !chars.is_empty() {\n    // This needs a type hint because it can't rely on info \n    // from the following `if` block\n    let word: String = chars.take_while(|ch| !ch.is_whitespace()).collect();\n\n    // We'll have an empty string if there's more than one \n    // whitespace character between words \n    // (more than one because the first is eaten \n    // by the last iteration of `.take_while()`)\n    if !word.is_empty() {\n        words.push(word);\n    }\n}\n</code></pre>\n\n<p>You can wrap the <code>File</code> object in a <a href=\"http://doc.rust-lang.org/std/io/struct.BufReader.html\" rel=\"nofollow\"><code>std::io::BufReader</code></a> and read it line-by-line with the <code>.lines()</code> iterator:</p>\n\n<pre><code>let mut reader = BufReader::new(file);\nlet mut words = Vec::new();\n\n// `.lines()` yields `Result&lt;String, io::Error&gt;` so we have to handle that.\n// (it will not yield an EOF error, this is for abnormal errors during reading)\nfor line in reader.lines().map(Result::unwrap) {\n    words.extend(line.words().map(String::from_str));        \n}\n\n// Or alternately (this may not work due to lifetime errors in `flat_map()`\nlet words: Vec&lt;_&gt; = reader.lines().map(Result::unwrap)\n    .flat_map(|line| line.words().map(String::from_str))\n    .collect();\n</code></pre>\n\n<p>It's up to you to decide which of the two solutions you prefer. The former is probably more efficient but maybe less intuitive. The latter is easier to read, especially the <code>for</code>-loop version, but allocates intermediate buffers.</p>\n"}], "owner": {"reputation": 1238, "user_id": 759901, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/56175c4faa3db6d594ed7a0688b0c296?s=128&d=identicon&r=PG", "display_name": "leshow", "link": "https://stackoverflow.com/users/759901/leshow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 29217876, "answer_count": 1, "score": 1, "last_activity_date": 1427144404, "creation_date": 1427130859, "last_edit_date": 1427144404, "question_id": 29216271, "link": "https://stackoverflow.com/questions/29216271/creating-a-vector-of-strings-using-the-new-stdfsfile", "title": "Creating a vector of strings using the new std::fs::File", "body": "<p>Porting my code from old_io to the new std::io</p>\n\n<pre><code>let path = Path::new(\"src/wordslist/english.txt\");\nlet display = path.display();\nlet mut file = match File::open(&amp;path) {\n    // The `desc` field of `IoError` is a string that describes the error\n    Err(why) =&gt; panic!(\"couldn't open {}: {}\", display,\n                                               Error::description(&amp;why)),\n    Ok(file) =&gt; file,\n};\n\nlet mut s = String::new();\nmatch file.read_to_string(&amp;mut s) {\n    Err(why) =&gt; panic!(\"couldn't read {}: {}\", display,\n                                               Error::description(&amp;why)),\n    Ok(s) =&gt; s,\n};\n\nlet words: Vec&lt;_&gt; = s.words().collect();\n</code></pre>\n\n<p>So this works but requires me to have a mutable string s to read the file contents, and then use words().collect() to gather into into a vector,</p>\n\n<p>Is there a way to read the contents of a file to a vector using something like words() WITHOUT reading it to the mutable buffer string first? My thought is that this would be more performant in situations where the collect() call might happen at a later point, or after a words().map(something). </p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1553114009, "post_id": 29214963, "comment_id": 97273753, "body": "Worth adding that the <code>?</code> operator is a succinct way of unwrapping or returning an error early now: let mut file = File::open(&amp;path)? See <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html\" rel=\"nofollow noreferrer\">The ? operator for easier error handling</a>."}], "answers": [{"comments": [{"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 2, "creation_date": 1427166908, "post_id": 29215624, "comment_id": 46656981, "body": "<a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/fs/struct.File.html</a>: over here it does say that File has a read_to_string method. Why can&#39;t I access it here, as the first example code did?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 2, "creation_date": 1427167387, "post_id": 29215624, "comment_id": 46657091, "body": "@user3918985 <code>File</code> implements <code>Read</code>, which provides <code>read_to_string</code>. I don&#39;t what you mean by &quot;here&quot;. You have to <code>use</code> that trait (as I show) to have those methods in scope."}, {"owner": {"reputation": 3191, "user_id": 802650, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/83794b0ea1170a337e4782048cdaa928?s=128&d=identicon&r=PG", "display_name": "liuyanghejerry", "link": "https://stackoverflow.com/users/802650/liuyanghejerry"}, "edited": false, "score": 0, "creation_date": 1512722464, "post_id": 29215624, "comment_id": 82380798, "body": "Thank you for your very comprehensive explanation."}, {"owner": {"reputation": 1598, "user_id": 921075, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/hsvpu.jpg?s=128&g=1", "display_name": "dtc", "link": "https://stackoverflow.com/users/921075/dtc"}, "edited": false, "score": 0, "creation_date": 1583081458, "post_id": 29215624, "comment_id": 106988296, "body": "i just started learning rust too but the fact that you have to also import &quot;Read&quot; looks awful to me. The File object has already implemented the trait Read so shouldn&#39;t the exception tell me I have to import Read rather than plain saying I have a missing method?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1598, "user_id": 921075, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/hsvpu.jpg?s=128&g=1", "display_name": "dtc", "link": "https://stackoverflow.com/users/921075/dtc"}, "edited": false, "score": 0, "creation_date": 1583086954, "post_id": 29215624, "comment_id": 106989813, "body": "@dtc <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ad0618baefad7b9345c880cafd08e93e\" rel=\"nofollow noreferrer\">It <b>does</b> give you that suggestion</a>: <code>help: the following trait is implemented but not in scope; perhaps add a `use` for it: use std::io::Read;</code>. The problem is that <b><code>Result</code></b> doesn&#39;t have such a method, as described in the answer."}, {"owner": {"reputation": 1598, "user_id": 921075, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/hsvpu.jpg?s=128&g=1", "display_name": "dtc", "link": "https://stackoverflow.com/users/921075/dtc"}, "edited": false, "score": 0, "creation_date": 1583088291, "post_id": 29215624, "comment_id": 106990208, "body": "@Shepmaster woops, you&#39;re right. i rushed to conclusions but didn&#39;t read the full error message."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 34, "last_activity_date": 1583086823, "last_edit_date": 1583086823, "creation_date": 1427128819, "answer_id": 29215624, "question_id": 29214963, "link": "https://stackoverflow.com/questions/29214963/unable-to-read-file-contents-to-string-result-does-not-implement-any-method-in/29215624#29215624", "title": "Unable to read file contents to string - Result does not implement any method in scope named `read_to_string`", "body": "<p>Let's look at your error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `read_to_string` found for type `std::result::Result&lt;std::fs::File, std::io::Error&gt;` in the current scope\n  --&gt; src/main.rs:11:14\n   |\n11 |         file.read_to_string(&amp;mut s);\n   |              ^^^^^^^^^^^^^^ method not found in `std::result::Result&lt;std::fs::File, std::io::Error&gt;`\n</code></pre>\n\n<p>The error message is pretty much what it says on the tin - the type <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"noreferrer\"><code>Result</code></a> does <strong>not</strong> have the method <code>read_to_string</code>. That's actually <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_to_string\" rel=\"noreferrer\">a method on the trait <code>Read</code></a>.</p>\n\n<p>You have a <code>Result</code> because <code>File::open(&amp;path)</code> can <strong>fail</strong>. Failure is represented with the <code>Result</code> type. A <code>Result</code> may be either an <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Ok\" rel=\"noreferrer\"><code>Ok</code></a>, which is the success case, or an <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err\" rel=\"noreferrer\"><code>Err</code></a>, the failure case.</p>\n\n<p>You need to handle the failure case somehow. The easiest is to just die on failure, using <code>expect</code>:</p>\n\n<pre><code>let mut file = File::open(&amp;path).expect(\"Unable to open\");\n</code></pre>\n\n<p>You'll also need to bring <code>Read</code> into scope to have access to <code>read_to_string</code>:</p>\n\n<pre><code>use std::io::Read;\n</code></pre>\n\n<p>I'd <strong>highly recommend</strong> reading through <a href=\"https://doc.rust-lang.org/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a> and working the examples. The chapter <a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"noreferrer\">Recoverable Errors with <code>Result</code></a> will be highly relevant. I think these docs are top-notch!</p>\n"}, {"tags": [], "owner": {"reputation": 399, "user_id": 4894742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b979d14103735b5528518cd64e98376?s=128&d=identicon&r=PG&f=1", "display_name": "nilesh virkar", "link": "https://stackoverflow.com/users/4894742/nilesh-virkar"}, "is_accepted": false, "score": 2, "last_activity_date": 1585668830, "creation_date": 1585668830, "answer_id": 60954316, "question_id": 29214963, "link": "https://stackoverflow.com/questions/29214963/unable-to-read-file-contents-to-string-result-does-not-implement-any-method-in/60954316#60954316", "title": "Unable to read file contents to string - Result does not implement any method in scope named `read_to_string`", "body": "<p>You can also use \"?\" as well,</p>\n\n<pre><code>let mut file = File::open(&amp;path)?;\n</code></pre>\n\n<p>But in that case, your method should return <code>Result&lt;String, io::Error&gt;</code> </p>\n\n<p>like,</p>\n\n<pre><code>fn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut f = File::open(\"hello.txt\")?;\n    let mut s = String::new();\n    f.read_to_string(&amp;mut s)?;\n    Ok(s)\n}\n</code></pre>\n\n<p>If you can not return <code>Result&lt;String, io::Error&gt;</code> then you have to handle error case using <strong>expect</strong> (mentioned in the accepted answer) or using following way,</p>\n\n<p>let file = File::open(&amp;opt_raw.config);                                    </p>\n\n<pre><code>let file = match file {                                                \n    Ok(file) =&gt; file,                                                  \n    Err(error) =&gt; {                                                    \n        panic!(\"Problem opening the file: {:?}\", error)                \n    },                                                                 \n};                                                                     \n</code></pre>\n\n<p>For more information, please refer this <a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">link</a> </p>\n"}], "owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12439, "favorite_count": 2, "accepted_answer_id": 29215624, "answer_count": 2, "score": 19, "last_activity_date": 1585668830, "creation_date": 1427126863, "last_edit_date": 1583086765, "question_id": 29214963, "link": "https://stackoverflow.com/questions/29214963/unable-to-read-file-contents-to-string-result-does-not-implement-any-method-in", "title": "Unable to read file contents to string - Result does not implement any method in scope named `read_to_string`", "body": "<p>I followed the code to open a file from <a href=\"http://rustbyexample.com/std_misc/file/open.html\" rel=\"noreferrer\">Rust by Example</a>:</p>\n\n<pre><code>use std::{env, fs::File, path::Path};\n\nfn main() {\n    let args: Vec&lt;_&gt; = env::args().collect();\n    let pattern = &amp;args[1];\n\n    if let Some(a) = env::args().nth(2) {\n        let path = Path::new(&amp;a);\n        let mut file = File::open(&amp;path);\n        let mut s = String::new();\n        file.read_to_string(&amp;mut s);\n        println!(\"{:?}\", s);\n    } else {\n        //do something\n    }\n}\n</code></pre>\n\n<p>However, I got a message like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `read_to_string` found for type `std::result::Result&lt;std::fs::File, std::io::Error&gt;` in the current scope\n  --&gt; src/main.rs:11:14\n   |\n11 |         file.read_to_string(&amp;mut s);\n   |              ^^^^^^^^^^^^^^ method not found in `std::result::Result&lt;std::fs::File, std::io::Error&gt;`\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427126316, "post_id": 29214501, "comment_id": 46638897, "body": "Please <i>include</i> the specific error in your question. You should also add what part of the error you don&#39;t understand."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1427126390, "post_id": 29214501, "comment_id": 46638946, "body": "possible duplicate of <a href=\"http://stackoverflow.com/questions/27952003/cannot-create-a-generic-function-that-uses-a-literal-zero\">Cannot create a generic function that uses a literal zero</a>"}], "answers": [{"tags": [], "owner": {"reputation": 91, "user_id": 4696088, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fab09e21af418646189ecde34a3ed24?s=128&d=identicon&r=PG&f=1", "display_name": "2bdkid", "link": "https://stackoverflow.com/users/4696088/2bdkid"}, "is_accepted": false, "score": 3, "last_activity_date": 1427128932, "creation_date": 1427128932, "answer_id": 29215666, "question_id": 29214501, "link": "https://stackoverflow.com/questions/29214501/generic-functions-using-traits-in-rust/29215666#29215666", "title": "Generic functions using traits in rust", "body": "<p>I looked into std::num::Int a bit more and found Int::one().</p>\n\n<p>This works for now:</p>\n\n<pre><code>use std::num::Int;\n\nfn main() {\n    println!(\"{}\", add_one(4));\n}\n\nfn add_one&lt;T: Int&gt;(x: T) -&gt; T {\n    return x + Int::one();\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 4696088, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fab09e21af418646189ecde34a3ed24?s=128&d=identicon&r=PG&f=1", "display_name": "2bdkid", "link": "https://stackoverflow.com/users/4696088/2bdkid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1427128932, "creation_date": 1427125584, "last_edit_date": 1427128150, "question_id": 29214501, "link": "https://stackoverflow.com/questions/29214501/generic-functions-using-traits-in-rust", "title": "Generic functions using traits in rust", "body": "<pre><code>use std::num::Int;\n\nfn main() {\n    println!(\"{}\", add_one(4));\n}\n\nfn add_one&lt;T: Int&gt;(x: T) -&gt; T {\n    return x + 1\n}\n</code></pre>\n\n<p>I'm trying to make add_one generic for Int but when I compile it says types are mismatched</p>\n\n<p>Error message:</p>\n\n<pre><code>src/main.rs:8:16: 8:17 error: mismatched types:\n expected `T`,\n    found `_`\n(expected type parameter,\n    found integral variable) [E0308]\nsrc/main.rs:8     return x + 1\n                             ^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1170, "user_id": 1533291, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/b16f362739780aedd08cfc954046215e?s=128&d=identicon&r=PG", "display_name": "Laszlo Korte", "link": "https://stackoverflow.com/users/1533291/laszlo-korte"}, "edited": false, "score": 2, "creation_date": 1427122119, "post_id": 29213225, "comment_id": 46635890, "body": "Why don&#39;t you put the println inside the if block?"}, {"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "reply_to_user": {"reputation": 1170, "user_id": 1533291, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/b16f362739780aedd08cfc954046215e?s=128&d=identicon&r=PG", "display_name": "Laszlo Korte", "link": "https://stackoverflow.com/users/1533291/laszlo-korte"}, "edited": false, "score": 0, "creation_date": 1427122380, "post_id": 29213225, "comment_id": 46636096, "body": "that&#39;s for example purposes. I want to access the variable outside of it."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1427122522, "post_id": 29213225, "comment_id": 46636201, "body": "@user3918985 I don&#39; really understand what you&#39;re trying to do. You can&#39;t access <code>a</code> outside of the <code>if let</code> block, since the right-hand-side might return <code>None</code>, so there wouldn&#39;t be any <code>a</code>."}, {"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 1, "creation_date": 1427122583, "post_id": 29213225, "comment_id": 46636250, "body": "I want to use the argument as a variable if it exists."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 1, "creation_date": 1427122752, "post_id": 29213225, "comment_id": 46636388, "body": "But that is exactly what <code>if let</code> is for, so why wouldn&#39;t you want to do the conditional actions inside that block?"}, {"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 0, "creation_date": 1427122832, "post_id": 29213225, "comment_id": 46636467, "body": "yes I recognise there may be better solutions. I&#39;m open to some pointers."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 1, "creation_date": 1427123072, "post_id": 29213225, "comment_id": 46636634, "body": "I don&#39;t mean to be critical, I&#39;m just trying to get a better understanding of what you&#39;re trying to achieve. The straightforward answer to &quot;how to access <code>a</code> or <code>b</code> outside the <code>if let</code> block&quot; is &quot;You can&#39;t, because they&#39;re only in scope inside that block&quot;, but I&#39;m guessing that&#39;s not terribly helpful :-)"}, {"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 0, "creation_date": 1427123121, "post_id": 29213225, "comment_id": 46636666, "body": "I guess it is. I&#39;m new to Rust and still trying to figure out how things work here."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427124535, "post_id": 29213952, "comment_id": 46637609, "body": "I&#39;d suggest that <code>unwrap_or_else</code> is preferable to the giant if-let-else. ^_^"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427124576, "post_id": 29213952, "comment_id": 46637638, "body": "I didn&#39;t want to introduce closures here :/"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427124649, "post_id": 29213952, "comment_id": 46637689, "body": "Aww, c&#39;mon. They are just two teeny-tiny <code>|</code> characters. What could be so confusing about that? ^_^"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427124695, "post_id": 29213952, "comment_id": 46637728, "body": "Well... we can always <i>also</i> introduce them ;)"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1427125482, "post_id": 29213952, "comment_id": 46638249, "body": "you are right... There&#39;s a difference between a <code>&amp;str</code> and a <code>String</code> that I forgot... Which makes me wonder... Why does <code>env::args()</code> return <code>String</code>s and not <code>&amp;str</code>s?"}, {"owner": {"reputation": 9735, "user_id": 112053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/lObNt.jpg?s=128&g=1", "display_name": "barjak", "link": "https://stackoverflow.com/users/112053/barjak"}, "edited": false, "score": 1, "creation_date": 1427135437, "post_id": 29213952, "comment_id": 46644369, "body": "@ker the arguments may require a conversion from the os encoding to utf8, thus they can&#39;t be &amp;str. The more basic representation of arguments strings is std::ffi::OsString."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1427181182, "post_id": 29213952, "comment_id": 46660940, "body": "Looking at the source, I see that the issue is actually windows due to utf16."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1427181270, "post_id": 29213952, "comment_id": 46660979, "body": "but since reading env variables is rarely performance critical and doesn&#39;t happen on embedded systems... it&#39;s probably irrelevant"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 7, "last_activity_date": 1566840944, "last_edit_date": 1566840944, "creation_date": 1427124023, "answer_id": 29213952, "question_id": 29213225, "link": "https://stackoverflow.com/questions/29213225/how-do-i-access-a-variable-outside-of-an-if-let-expression/29213952#29213952", "title": "How do I access a variable outside of an `if let` expression?", "body": "<p>For an understanding of what's going on, have a look at <a href=\"https://stackoverflow.com/a/29214012/155423\">the answer by Shepmaster</a></p>\n\n<p>I'm not sure what you expect to happen in case the condition is not met. If you just want to abort the program in that case, the idiomatic Rust way is to use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap</code></a> or <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.expect\" rel=\"nofollow noreferrer\"><code>expect</code></a>.</p>\n\n<pre><code>// panics if there are fewer than 3 arguments.\nlet a = env::args().nth(2).unwrap();\n\nprintln!(\"{}\", a);\n</code></pre>\n\n<p>If you want a default value in case the argument does not exist, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"nofollow noreferrer\"><code>unwrap_or</code></a>.</p>\n\n<pre><code>// assigns \"I like Rust\" to a if there are fewer than 3 arguments\nlet a = env::args().nth(2).unwrap_or(\"I like Rust\".to_string());\n\nprintln!(\"{}\", a);\n</code></pre>\n\n<p>As a further alternative, you can use the feature that in Rust almost everything is an expression:</p>\n\n<pre><code>let b = if let Some(a) = env::args().nth(2) {\n    a\n} else {\n    // compute alternative value\n    let val = \"some value\".to_string();\n    // do operations on val\n    val\n};\nprintln!(\"{}\", b);\n</code></pre>\n\n<p>The idiomatic Rust way to write that would be with closures and <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\"><code>unwrap_or_else</code></a>:</p>\n\n<pre><code>let b = env::args().nth(2).unwrap_or_else(|| {\n    // compute alternative value\n    let val = \"some value\".to_string();\n    // do operations on val\n    val\n});\nprintln!(\"{}\", b);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 0, "creation_date": 1427124377, "post_id": 29214012, "comment_id": 46637497, "body": "thanks. what if I don&#39;t want to just use a println inside the scope? For eg. I want x to be = a if the arg exists. If it doesn&#39;t, x = z. After the if else statements I want to perform some code on x."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "edited": false, "score": 1, "creation_date": 1427124463, "post_id": 29214012, "comment_id": 46637554, "body": "@ker&#39;s answer mentions <code>unwrap_or</code> - that&#39;s the ticket for a default value."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1427124205, "creation_date": 1427124205, "answer_id": 29214012, "question_id": 29213225, "link": "https://stackoverflow.com/questions/29213225/how-do-i-access-a-variable-outside-of-an-if-let-expression/29214012#29214012", "title": "How do I access a variable outside of an `if let` expression?", "body": "<p>In Rust, it's always useful to ask yourself \"what is the type of this variable?\". Let's run with your example and pretend it works:</p>\n\n<pre><code>let arg = Some(true);\n\nif let Some(a) = arg {\n    let b = a;\n}\n\nprintln!(\"{:?}\", b);\n</code></pre>\n\n<p>What is the type of <code>b</code> at the <code>println</code> line? Maybe you'd like it to be a boolean, but <em>what is the type if the <code>if</code> clause doesn't pass</em>? There isn't one! In other languages, maybe that would be <code>nil</code> or <code>null</code>, but Rust encodes that information with the <code>Option</code> type - that's where <code>Some</code> and <code>None</code> come from!</p>\n\n<p>Additionally, scopes are <em>very</em> meaningful in Rust. Items defined inside a scope don't leak outside that scope:</p>\n\n<pre><code>{\n    let a = 4;\n}\n\nprintln!(\"{}\", a); // NOPE!\n</code></pre>\n\n<p>Between the two of these pieces, the code you want to write isn't possible. I agree that the right solution is to embed the println inside the if:</p>\n\n<pre><code>let arg = Some(true);\n\nif let Some(a) = arg {\n    println!(\"{:?}\", a);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 155, "user_id": 9184849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b389806c32c643ec81c2935c265a24df?s=128&d=identicon&r=PG&f=1", "display_name": "Kushagra Gupta", "link": "https://stackoverflow.com/users/9184849/kushagra-gupta"}, "is_accepted": false, "score": 0, "last_activity_date": 1593656868, "creation_date": 1593656868, "answer_id": 62688046, "question_id": 29213225, "link": "https://stackoverflow.com/questions/29213225/how-do-i-access-a-variable-outside-of-an-if-let-expression/62688046#62688046", "title": "How do I access a variable outside of an `if let` expression?", "body": "<p>I agree that you should either do whatever you want to do inside the <code>if-else block</code>s. If you just to not indent your code and your <code>else</code> block is small, you can inverse your <code>if-condition</code>.</p>\n<p>Instead of</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let arg = std::env::args().nth(2);\nif let Some(a) = arg {\n    let b = a;\n    // do stuff\n} else {\n    // do other stuff\n}\n</code></pre>\n<p>you can do this</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let arg = std::env::args().nth(2);\nif arg.is_none() {\n    // do other stuff\n}\nlet b = arg.unwrap();\n// do stuff\n</code></pre>\n<p>If you want the variable to be available in the outer scope, but assign it a value in an inner scope, you can declare it outside.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let arg = std::env::args().nth(2);\nlet a; // declared but not assigned\nif let Some(b) = arg {\n    a = b; // wasn't mut but first assignment can be done here\n} else {\n    a = &quot;Foobar&quot;.to_string();\n}\nprintln!(&quot;{}&quot;, a); // available here but was assigned the value inside if\n</code></pre>\n"}], "owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2844, "favorite_count": 0, "accepted_answer_id": 29213952, "answer_count": 3, "score": 2, "last_activity_date": 1593656868, "creation_date": 1427121994, "last_edit_date": 1566840764, "question_id": 29213225, "link": "https://stackoverflow.com/questions/29213225/how-do-i-access-a-variable-outside-of-an-if-let-expression", "title": "How do I access a variable outside of an `if let` expression?", "body": "<p>I'm trying to access command line arguments. If the argument exists, do something, if not, do nothing. I have this code:</p>\n\n<pre><code>fn main() {\n    if let Some(a) = std::env::args().nth(2) {\n        let b = a;\n    }\n\n    println!(\"{}\", a);\n}\n</code></pre>\n\n<p>I am not able to access <code>a</code> or <code>b</code> outside of this scope:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `a` in this scope\n --&gt; src/main.rs:6:20\n  |\n6 |     println!(\"{}\", a);\n  |                    ^ not found in this scope\n</code></pre>\n\n<p>How do I resolve this? Is there a better way to approach what I'm trying to do?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1427102265, "post_id": 29206549, "comment_id": 46623840, "body": "have you tried to print the integer representation of both \\n and the newline character in the input.chars()?"}, {"owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "reply_to_user": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1427102455, "post_id": 29206549, "comment_id": 46623922, "body": "what is this integer representation?"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1427103709, "post_id": 29206549, "comment_id": 46624530, "body": "When debugging, it can be helpful to inspect values: try inserting <code>println!(&quot;{:?}&quot;, input);</code> and see what <code>input</code> actually is."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 5, "last_activity_date": 1427103769, "creation_date": 1427103769, "answer_id": 29207064, "question_id": 29206549, "link": "https://stackoverflow.com/questions/29206549/read-string-until-newline/29207064#29207064", "title": "Read string until newline", "body": "<p>Have a look at the <a href=\"http://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"noreferrer\"><code>lines</code></a> method on <code>BufRead</code>. That function returns an iterator over all the lines of the buffer. You can get a <code>BufRead</code> from <a href=\"http://doc.rust-lang.org/std/io/struct.Stdin.html#method.lock\" rel=\"noreferrer\"><code>Stdin</code></a> through the <code>lock</code> function. If you look at the documentation of <code>lines</code> you can see, that it will not return the newline char. Compare this to the <code>read_line</code> function which does return the newline char.</p>\n\n<pre><code>use std::io::BufRead;\n\nfn main() {\n    // get stdin handle\n    let stdin = std::io::stdin();\n    // lock it\n    let lock = stdin.lock();\n    // iterate over all lines\n    for line in lock.lines() {\n        // iterate over the characters in the line\n        for c in line.unwrap().chars() {\n            println!(\"{}\", c);\n        }\n        println!(\"next line\");\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 2, "last_activity_date": 1427103849, "creation_date": 1427103849, "answer_id": 29207087, "question_id": 29206549, "link": "https://stackoverflow.com/questions/29206549/read-string-until-newline/29207087#29207087", "title": "Read string until newline", "body": "<p>It is difficult to understand what you actually want from your explanation, but if you want to read every line from the input without a newline character you can use <code>lines()</code> iterator. The following is the version for the new <code>std::io</code>:</p>\n\n<pre><code>use std::io::BufRead;\n\nlet input = std::io::stdin();\nfor line in input.lock().lines() {\n    // here line is a String without the trailing newline\n}\n</code></pre>\n"}], "owner": {"reputation": 3424, "user_id": 3918985, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/4349dc6a41c144c486e982afb327fca7?s=128&d=identicon&r=PG&f=1", "display_name": "user3918985", "link": "https://stackoverflow.com/users/3918985/user3918985"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3046, "favorite_count": 0, "accepted_answer_id": 29207064, "answer_count": 2, "score": 4, "last_activity_date": 1427103849, "creation_date": 1427102018, "last_edit_date": 1427103647, "question_id": 29206549, "link": "https://stackoverflow.com/questions/29206549/read-string-until-newline", "title": "Read string until newline", "body": "<p>I'm trying to grab the output from an ls command. How do I separate strings by the newline character? Currently my code looks like this:</p>\n\n<pre><code>let input = std::old_io::stdin().read_line().ok().expect(\"Failed to read line\");\n\nfor c in input.chars() {\n  if c == '\\n' {\n    break;\n  } else {\n    println!(\"{}\", c);\n  }\n}\n</code></pre>\n\n<p>This isn't working at all and I am printing all characters including \\n.</p>\n"}, {"tags": ["serialization", "rust"], "answers": [{"comments": [{"owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "edited": false, "score": 1, "creation_date": 1427137899, "post_id": 29206959, "comment_id": 46645812, "body": "Thanks for the answer. Though that&#39;s a strange decision for a systems language. Parsing network protocols or file formats is a common task and standard library should provide necessary methods for common tasks. I hope that this decision will be revised in the future."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "edited": false, "score": 1, "creation_date": 1427138395, "post_id": 29206959, "comment_id": 46646108, "body": "Yes, I also agree with that point (for example, even Go, which is not a systems programming language, has necessary functions in its std lib). But that&#39;s how things currently are, and it is very unlikely that such utilities will be added into the standard library now - given how little time there is until 1.0.0 and that such changes are backwards-compatible. You also always can file <a href=\"https://github.com/rust-lang/rfcs\" rel=\"nofollow noreferrer\">an RFC</a> on that."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 7, "last_activity_date": 1427103403, "creation_date": 1427103403, "answer_id": 29206959, "question_id": 29206540, "link": "https://stackoverflow.com/questions/29206540/how-to-read-write-integer-values-from-bytes-without-old-io/29206959#29206959", "title": "How to read/write integer values from bytes without old_io?", "body": "<p>No, there is no way to read/write numbers in specific endianness in the standard library now. It is supposed that Rust users will use community libraries for this. As far as I know, currently the most developed and used library for endianness handling is <a href=\"https://crates.io/crates/byteorder\">byteorder</a>. It provides extension traits which extend <code>std::io::{Read, Write}</code> with methods very similar to those which are defined on <code>std::old_io::{Reader, Writer}</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 794, "user_id": 1275120, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6263d96a4208c3de57312b30d5eb875?s=128&d=identicon&r=PG", "display_name": "kmcguire", "link": "https://stackoverflow.com/users/1275120/kmcguire"}, "is_accepted": false, "score": 13, "last_activity_date": 1429579172, "creation_date": 1429579172, "answer_id": 29761206, "question_id": 29206540, "link": "https://stackoverflow.com/questions/29206540/how-to-read-write-integer-values-from-bytes-without-old-io/29761206#29761206", "title": "How to read/write integer values from bytes without old_io?", "body": "<p>It is very easy to convert an integer value into an array/slice, which can be used to write to a file stream, like you say above about using bit arithmetic. However, I wanted to post here so that people understand that using bit methods (like I do below and the original poster already mentioned) actually optimize to a single instruction on the X86_64 at least. This is exactly the same as doing the <code>memcpy</code> operation that the original poster talks about.</p>\n\n<p>For example, take a look at this code:</p>\n\n<pre><code>#[inline]\nfn u16tou8ale(v: u16) -&gt; [u8; 2] {\n    [\n        v as u8,\n        (v &gt;&gt; 8) as u8,\n    ]\n}\n\n// little endian\n#[inline]\nfn u32tou8ale(v: u32) -&gt; [u8; 4] {\n    [\n        v as u8,\n        (v &gt;&gt; 8) as u8,\n        (v &gt;&gt; 16) as u8,\n        (v &gt;&gt; 24) as u8,\n    ]\n}\n\n// big endian\n#[inline]\nfn u32tou8abe(v: u32) -&gt; [u8; 4] {\n    [\n        (v &gt;&gt; 24) as u8,\n        (v &gt;&gt; 16) as u8,\n        (v &gt;&gt; 8) as u8,\n        v as u8,\n    ]\n}\n\nfn main() {\n    println!(\"{:?}\", u32tou8ale(0x12345678));\n    println!(\"{:?}\", u32tou8abe(0x12345678));\n}\n</code></pre>\n\n<p>The function <code>u32tou8ale</code>, for example, actually turns into a single instruction that the CPU executes. That single instruction creates the <code>[u8; 4]</code> array on the stack, even the big-endian version <code>u32tou8abe</code> is a single instruction to create the <code>[u8; 4]</code>. This is possible because of the optimizer. You may say well that is because it is a constant compile time value, but if you experiment you will find that when given a u32 value that the compiler is unable to know ahead of time it will still produce the array on the stack in a single instruction essentially by doing a memory copy operation. For example:</p>\n\n<pre><code>fn main() {\n    unsafe {\n        let p: *const u32 = std::mem::transmute(main);\n        println!(\"{:?}\", u32tou8ale(*p));\n    }\n}\n</code></pre>\n\n<p>This reads a value from the memory location referenced by the symbol <code>main</code> which is our function. The compiler can not know this value and therefore it issues a move instruction that reads the value onto the stack, and then it considers that value a <code>[u8; 4]</code>.</p>\n\n<p>As for portability, just simply always be explicit about what byte order you read and write the value in and everything will work out fine. For example if you use <code>u32tou8ale</code> then you get little byte order no matter what architecture you target, and if you wrote the equivalent read function and you explicitly read as big byte order then you can be sure that you will read in that ordering.</p>\n\n<p><em>I hope this helps anyone who comes here looking to convert integers into bytes and from!</em></p>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4310, "favorite_count": 0, "accepted_answer_id": 29206959, "answer_count": 2, "score": 3, "last_activity_date": 1502747573, "creation_date": 1427101992, "last_edit_date": 1427117703, "question_id": 29206540, "link": "https://stackoverflow.com/questions/29206540/how-to-read-write-integer-values-from-bytes-without-old-io", "title": "How to read/write integer values from bytes without old_io?", "body": "<p>There are convenient traits <code>Reader</code> and <code>Writer</code> in <code>std::old_io</code> module to read/write integer values using various endiannes. But that module is declared as obsolete so I'm trying to figure out other ways to do that.</p>\n\n<p>The one way is to read bytes and construct result values with bit arithmetic. Is there other way in standard library? E.g. to read <code>u64</code> from <code>&amp;[u8]</code> where it's encoded in big-endian encoding. What I would do in C is to memcpy 8 bytes from a <code>uint8_t</code> array to a <code>uint64_t</code> value and then perform something like <code>htons</code> to swap bytes if necessary.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 486, "user_id": 3081514, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/097852e0ddee5da3c57d852019fd755c?s=128&d=identicon&r=PG&f=1", "display_name": "Tyler", "link": "https://stackoverflow.com/users/3081514/tyler"}, "edited": false, "score": 0, "creation_date": 1427084887, "post_id": 29203235, "comment_id": 46618088, "body": "Thanks! I tried *= first but didn&#39;t realize that only * works. Nice to know that!"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "reply_to_user": {"reputation": 486, "user_id": 3081514, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/097852e0ddee5da3c57d852019fd755c?s=128&d=identicon&r=PG&f=1", "display_name": "Tyler", "link": "https://stackoverflow.com/users/3081514/tyler"}, "edited": false, "score": 0, "creation_date": 1427086891, "post_id": 29203235, "comment_id": 46618501, "body": "The most recent discussion about getting <code>*=</code> working generally is at <a href=\"https://github.com/rust-lang/rfcs/pull/953\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/953</a>"}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 2, "last_activity_date": 1427084553, "creation_date": 1427084553, "answer_id": 29203235, "question_id": 29203122, "link": "https://stackoverflow.com/questions/29203122/moved-values-when-multiplying-numbers/29203235#29203235", "title": "Moved values when multiplying numbers", "body": "<p><code>prod.mul</code> is the multiplication method from the <code>Mul</code> trait, which takes two values (the two operands) and returns another one (the result). In this case, it is taking <code>prod</code> by value, and so <code>prod</code> is being consumed, moved into the method call.</p>\n\n<p>You meant <code>prod = prod.mul(&amp;string[j]);</code>, which can be better written using the <code>*</code> operator instead of calling the <code>mul</code> method: <code>prod = prod * &amp;string[j];</code> (sorry, <code>prod *= &amp;string[j]</code> doesn\u2019t work yet).</p>\n"}], "owner": {"reputation": 486, "user_id": 3081514, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/097852e0ddee5da3c57d852019fd755c?s=128&d=identicon&r=PG&f=1", "display_name": "Tyler", "link": "https://stackoverflow.com/users/3081514/tyler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "accepted_answer_id": 29203235, "answer_count": 1, "score": 0, "last_activity_date": 1427117622, "creation_date": 1427083634, "last_edit_date": 1427117622, "question_id": 29203122, "link": "https://stackoverflow.com/questions/29203122/moved-values-when-multiplying-numbers", "title": "Moved values when multiplying numbers", "body": "<p>I'm trying to use the following code:</p>\n\n<pre><code>fn get_max(string:Vec&lt;BigUint&gt;) -&gt; BigUint {\n    let mut max:BigUint = num::zero();\n\n    for i in 0..(string.len()-13) {\n        let mut prod:BigUint = num::one();\n        for j in i..(i+13) {\n            prod.mul(&amp;string[j]);\n        }\n\n        if prod.clone().gt(&amp;max) {\n            max = prod;\n        }\n    }\n\n    max\n}\n</code></pre>\n\n<p>But I get the following error when I try to compile:</p>\n\n<pre><code>src/main.rs:13:4: 13:8 error: use of moved value: `prod`\nsrc/main.rs:13          prod.mul(&amp;string[j]);\n                        ^~~~\nnote: `prod` was previously moved here because it has type `num::bigint::BigUint`, which is non-copyable\nsrc/main.rs:16:6: 16:10 error: use of moved value: `prod`\nsrc/main.rs:16      if prod.clone().gt(&amp;max) {\n                       ^~~~\nsrc/main.rs:13:4: 13:8 note: `prod` moved here because it has type `num::bigint::BigUint`, which is non-copyable\nsrc/main.rs:13          prod.mul(&amp;string[j]);\n                        ^~~~\nsrc/main.rs:17:10: 17:14 error: use of moved value: `prod`\nsrc/main.rs:17          max = prod;\n                              ^~~~\nsrc/main.rs:13:4: 13:8 note: `prod` moved here because it has type `num::bigint::BigUint`, which is non-copyable\nsrc/main.rs:13          prod.mul(&amp;string[j]);\n                        ^~~~\nerror: aborting due to 3 previous errors\n</code></pre>\n\n<p>As far as I can tell, I'm never moving <code>prod</code>, so what is wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 6, "last_activity_date": 1427083111, "creation_date": 1427083111, "answer_id": 29203064, "question_id": 29202698, "link": "https://stackoverflow.com/questions/29202698/how-to-use-a-trait-object-to-refer-to-struct-that-has-generic-methods/29203064#29203064", "title": "How to use a trait object to refer to struct that has generic methods", "body": "<p>You cannot get around this; static and dynamic dispatch do not mix. The monomorphisation that static dispatch (generics) does simply cannot work with the vtable used in dynamic dispatch (trait objects).</p>\n\n<p>One of the two will have to go: either the usage of <code>IObject</code> as a trait object, or the generic function argument, in favour of accepting a <code>Box&lt;FnMut(&amp;Event) + 'a&gt;</code>.</p>\n\n<p>By the way, note how your <code>IObject</code> implementation is not matching the trait\u2014the trait gives no lifetime bound on <code>F</code>, where your implementation does. You\u2019d need to add <code>'a</code> as a generic on the trait definition anyway (generic <em>lifetimes</em> are OK with trait objects).</p>\n"}], "owner": {"reputation": 2938, "user_id": 1191020, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/5ce80185030a0922f13a04584f080960?s=128&d=identicon&r=PG", "display_name": "FatalCatharsis", "link": "https://stackoverflow.com/users/1191020/fatalcatharsis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1283, "favorite_count": 2, "accepted_answer_id": 29203064, "answer_count": 1, "score": 5, "last_activity_date": 1427083111, "creation_date": 1427079971, "last_edit_date": 1495540733, "question_id": 29202698, "link": "https://stackoverflow.com/questions/29202698/how-to-use-a-trait-object-to-refer-to-struct-that-has-generic-methods", "title": "How to use a trait object to refer to struct that has generic methods", "body": "<p>In relation to this question, <a href=\"https://stackoverflow.com/questions/29202137/storing-a-closure-in-a-hashmap\">Storing a closure in a HashMap</a>, I learned that properly passing closures to a function requires the function to be generic and take any type that implements the Fn, FnMut, or FnOnce trait.</p>\n\n<p>In implementing part of a library from C++ as a learning exercise, I require some type abstraction kind of like this.</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Event;\n\ntrait IObject {\n    fn makeFunc&lt;F : FnMut(&amp;Event)&gt;(&amp;mut self, s : &amp;str, f : F);\n}\n\nstruct Object1&lt;'a&gt; {\n    m_funcs : HashMap&lt;String, Box&lt;FnMut(&amp;Event) + 'a&gt;&gt;\n}\n\nimpl &lt;'a&gt; Object1&lt;'a&gt; {\n    fn new() -&gt; Object1&lt;'a&gt; {\n        Object1 {m_funcs : HashMap::new()}\n    }\n}\n\nimpl &lt;'a&gt; IObject for Object1&lt;'a&gt; {\n    fn makeFunc&lt;F : FnMut(&amp;Event) + 'a&gt;(&amp;mut self, s: &amp;str, f: F) {\n        self.m_funcs.insert(String::from_str(s), Box::new(f));\n    }\n}\n\nfn main() {\n    let obj : &amp;IObject = &amp;Object1::new();\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>However, the error returned says that IObject cannot be a trait object because it contains a method with generic parameters. However, to pass a closure to a function at all, I require generics. Can someone show me how to achieve the abstraction I'm looking for while still being able to pass closures to functions?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2938, "user_id": 1191020, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/5ce80185030a0922f13a04584f080960?s=128&d=identicon&r=PG", "display_name": "FatalCatharsis", "link": "https://stackoverflow.com/users/1191020/fatalcatharsis"}, "edited": false, "score": 1, "creation_date": 1427080045, "post_id": 29202271, "comment_id": 46617156, "body": "Now that i&#39;ve read about it, I understand that this is the correct answer, but it has spawned another question for me here. <a href=\"http://stackoverflow.com/questions/29202698/how-to-use-a-trait-object-to-refer-to-struct-that-has-generic-methods\" title=\"how to use a trait object to refer to struct that has generic methods\">stackoverflow.com/questions/29202698/&hellip;</a>"}, {"owner": {"reputation": 339, "user_id": 2896857, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tjpGI.jpg?s=128&g=1", "display_name": "quietContest", "link": "https://stackoverflow.com/users/2896857/quietcontest"}, "edited": false, "score": 0, "creation_date": 1573346545, "post_id": 29202271, "comment_id": 103852936, "body": "What does the <code>+</code> operator do with lifetimes ?"}, {"owner": {"reputation": 339, "user_id": 2896857, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tjpGI.jpg?s=128&g=1", "display_name": "quietContest", "link": "https://stackoverflow.com/users/2896857/quietcontest"}, "edited": false, "score": 0, "creation_date": 1573353608, "post_id": 29202271, "comment_id": 103853687, "body": "Found it <a href=\"https://stackoverflow.com/questions/42028470/why-is-adding-a-lifetime-to-a-trait-with-the-plus-operator-iteratoritem-foo\">this related thing</a> during my journey"}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 7, "last_activity_date": 1427076459, "last_edit_date": 1495542154, "creation_date": 1427076459, "answer_id": 29202271, "question_id": 29202137, "link": "https://stackoverflow.com/questions/29202137/storing-a-closure-in-a-hashmap/29202271#29202271", "title": "Storing a closure in a HashMap", "body": "<p>You have taken a <code>&amp;FnMut(&amp;Event)</code>\u2014a trait object\u2014and, after boxing it, wish to store it as a <code>Box&lt;FnMut(&amp;Event)&gt;</code>. Thus, you require that <code>&amp;FnMut(&amp;Event)</code> must implement <code>FnMut(&amp;Event)</code>, which it does not (and clearly cannot, for <code>FnMut.call_mut</code> takes <code>&amp;mut self</code>).</p>\n\n<p>What you wanted was to take an arbitrary type that <em>implements</em> <code>FnMut(&amp;Event)</code>\u2014that is, use generics\u2014and take it by value. The signature is thus this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn make_func&lt;F: FnMut(&amp;Event)&gt;(&amp;mut self, s: &amp;str, f: F)\n</code></pre>\n\n<p>It gets a little more complex than this due to lifetimes, however, but what you wish to do with regards to that may vary; <a href=\"https://stackoverflow.com/questions/27906885/storing-an-unboxed-closure-with-a-reference-arg-in-a-hashmap\">Storing an unboxed closure with a reference arg in a HashMap</a> has more information on that topic. Here\u2019s what I believe you\u2019re most likely to want:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Object&lt;'a&gt; {\n    m_funcs: HashMap&lt;String, Box&lt;FnMut(&amp;Event) + 'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Object&lt;'a&gt; {\n    fn make_func&lt;F: FnMut(&amp;Event) + 'a&gt;(&amp;mut self, s: &amp;str, f: F) {\n        self.m_funcs.insert(String::from_str(s), Box::new(f));\n    }\n}\n</code></pre>\n\n<p>You could remove all the <code>'a</code> in favour of just a single <code>+ 'static</code> bound on <code>F</code> if you are happy to not let any of the closures capture references to their environments.</p>\n"}], "owner": {"reputation": 2938, "user_id": 1191020, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/5ce80185030a0922f13a04584f080960?s=128&d=identicon&r=PG", "display_name": "FatalCatharsis", "link": "https://stackoverflow.com/users/1191020/fatalcatharsis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2657, "favorite_count": 0, "accepted_answer_id": 29202271, "answer_count": 1, "score": 3, "last_activity_date": 1427117585, "creation_date": 1427075366, "last_edit_date": 1427117585, "question_id": 29202137, "link": "https://stackoverflow.com/questions/29202137/storing-a-closure-in-a-hashmap", "title": "Storing a closure in a HashMap", "body": "<p>To learn the Rust language, I'm taking an old C++ library I had lying around and trying to convert it to Rust. It used a lot of C++11 closures and I'm having some difficulty getting the concepts to translate.</p>\n\n<p>In C++ I had something like this:</p>\n\n<pre><code>// library.h\nstruct Event {\n    // just some data\n};\n\nclass Object {\npublic:\n    // ...\n    std::function&lt;void(Event&amp;)&gt;&amp; makeFunc(std::string&amp; s) {\n        return m_funcs[s];\n    }\n    // ...\nprivate:\n    // ...\n    std::map&lt;std::string, std::function&lt;void(Event&amp;)&gt;&gt; m_funcs;\n    // ...\n};\n\n// main.cpp using the library\nint main()\n{\n    Object foo;\n    foo.makeFunc(\"func1\") = [&amp;]{\n        // do stuff\n    };\n    return 0;\n}\n</code></pre>\n\n<p>The part that I'm having trouble with is properly storing the functions in a Rust HashMap collection. I tried this:</p>\n\n<pre><code>struct Event;\n\nstruct Object {\n    m_funcs : HashMap&lt;String, FnMut(&amp;Event)&gt;\n}\n\nimpl Object {\n    // send f as another parameter rather than try and return borrow\n    // compiler was complaining\n    fn makeFunc(&amp;mut self, s : &amp;str,f: FnMut(&amp;Event)) {\n        self.m_funcs.insert(String::from_str(s), f); \n    }\n}\n</code></pre>\n\n<p>but it says <code>the trait core::marker::Sized is not implemented for the type 'for('r) core::ops::FnMut(&amp;'r CreateEvent)'</code></p>\n\n<p>This makes sense because <code>FnMut</code> is a trait, and therefore has no known size for the HashMap to make at compile time. So I figure that the hashmap would require an actual pointer rather than an abstract type. So I change it to this</p>\n\n<pre><code>struct Object {\n    m_funcs : HashMap&lt;String, Box&lt;FnMut(&amp;Event)&gt;&gt;\n}\n\nimpl Object {\n    fn makeFunc(&amp;mut self, s : &amp;str, f: &amp;FnMut(&amp;Event)) {\n        self.m_funcs.insert(String::from_str(s), Box::new(f));\n    }\n}\n</code></pre>\n\n<p>now it says <code>the trait 'for('r) core::ops::Fn&lt;(&amp;'r CreateEvent,)&gt;' is not implemented for the type '&amp;for('r) core::ops::FnMut(&amp;'r CreateEvent)' [E0277]</code> at the insert. This error makes no sense to me at all. Can someone explain to me the proper way to store a reference to a non-escaping closure in a HashMap?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1427069357, "post_id": 29201370, "comment_id": 46614803, "body": "possible duplicate of <a href=\"http://stackoverflow.com/questions/28993446/what-does-expected-item-found-let-mean\">What does &quot;expected item, found let&quot; mean?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "edited": false, "score": 0, "creation_date": 1427076710, "post_id": 29202217, "comment_id": 46616479, "body": "thought you could use variables outside of functions sort of like java"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "edited": false, "score": 2, "creation_date": 1427137426, "post_id": 29202217, "comment_id": 46645534, "body": "is that true? I don&#39;t think you can use anything outside of a class in Java."}, {"owner": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "edited": false, "score": 0, "creation_date": 1427139462, "post_id": 29202217, "comment_id": 46646734, "body": "I meant out side of the methods/functions (are they the same?). Didn&#39;t mean outside the class.."}, {"owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "edited": false, "score": 6, "creation_date": 1501677257, "post_id": 29202217, "comment_id": 77882217, "body": "For peoples coming out from a search for declaring a global constant: the code OP wanted is <code>static y: (i8, &amp;str) = (1, &quot;hello&quot;);</code>. And no, you can&#39;t let the compiler to infer the type. This sucks, I know."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 24, "last_activity_date": 1427075999, "creation_date": 1427075999, "answer_id": 29202217, "question_id": 29201370, "link": "https://stackoverflow.com/questions/29201370/error-expected-item-found-let/29202217#29202217", "title": "\u201cerror: expected item, found &#39;let&#39;\u201d", "body": "<p>Your fundamental issue is that <code>let</code> can only be used in a function. So, wrapping the code in <code>main()</code>, and also fixing the style:</p>\n\n<pre><code>fn if_statements() {\n    let x = 5;\n\n    let y = if x == 5 { 10 } else { 15 };\n\n    if y == 15 {\n        println!(\"y = {}\", y);\n    }\n}\n\n#[allow(dead_code)]\nfn add(a: i32, b: i32) -&gt; i32 { a + b }\n\n#[allow(dead_code)]\nfn crash(exception: &amp;str) -&gt; ! {\n    panic!(\"{}\", exception);\n }\n\nstruct Point {\n     x: i32,\n     y: i32,\n}\n\nfn structs() {\n    let origin = Point { x: 0, y: 0 };\n\n    println!(\"The origin is at ({}, {})\", origin.x, origin.y);\n}\n\nenum Character {\n    Digit(i32),\n    Other,\n}\n\nfn main() {\n    let y = (1, \"hello\");\n    let x: (i32, &amp;str) = (1, \"hello\");\n\n    let ten  = Character::Digit(10);\n    let four = Character::Digit(4);\n }\n</code></pre>\n"}], "owner": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13015, "favorite_count": 3, "accepted_answer_id": 29202217, "answer_count": 1, "score": 17, "last_activity_date": 1427075999, "creation_date": 1427068671, "last_edit_date": 1427069320, "question_id": 29201370, "link": "https://stackoverflow.com/questions/29201370/error-expected-item-found-let", "title": "\u201cerror: expected item, found &#39;let&#39;\u201d", "body": "<p>I have a code dump where i put examples for rust code in case I forget something. I keep getting <code>error: expected item, found 'let'</code> for line 41+. \ncould it be my code isn't structured properly? I simply pasted snips of code I learned about into the main.rs. I suppose enums have some sort of special formatting or place.</p>\n\n<p>I tried changing the names, thinking it was name convention; but that didn't help. Same error.</p>\n\n<p>Here's the dump (not that big actually yet)</p>\n\n<pre><code>#[allow(dead_code)]\n\n\nfn main()\n{\n\n}\n\n\n\n\n\n/////////////////////////////////////////tutorial functoins i made\n\nfn if_statements()\n{\n    //let (x, y) = (5, 10);\n    let x = 5;\n    let y = if x == 5 { 10 } else { 15 };\n        if y == 15 {println!(\"y = {}\", y);}\n}\n\n\n\n////////////////////////////////////////// tutoiral functions\n#[allow(dead_code)]\nfn add(a: i32, b: i32) -&gt; i32\n{\n    a + b\n\n}\n\n#[allow(dead_code)]\nfn crash(exception: &amp;str) -&gt; !\n{\n    panic!(\"{}\", exception);\n}\n\n\n//TUPLES//\nlet y = (1, \"hello\");\nlet x: (i32, &amp;str) = (1, \"hello\");\n\n//STRUCTS//\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn structs() {\n    let origin = Point { x: 0, y: 0 }; // origin: Point\n\n    println!(\"The origin is at ({}, {})\", origin.x, origin.y);\n}\n\n//ENUMS//\nenum Character {\n    Digit(i32),\n    Other,\n}\n\nlet ten  = Character::Digit(10);\nlet four = Character::Digit(4);\n</code></pre>\n"}, {"tags": ["rust", "embedded-resource", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1427082946, "post_id": 29202225, "comment_id": 46617723, "body": "Thanks. Is this something worth reporting as an issue somewhere?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 1, "creation_date": 1427107763, "post_id": 29202225, "comment_id": 46626763, "body": "@NicholasBishop, of course, you can suggest anything reasonable like this on the <a href=\"https://github.com/rust-lang/cargo/issues\" rel=\"nofollow noreferrer\">Cargo issue tracker</a>."}, {"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1427160823, "post_id": 29202225, "comment_id": 46655527, "body": "Hmm, the plot thickens a bit. I was putting together a minimal test to file the issue, and noticed that the include_str macro does seem to do the right thing, while include_bytes does not. I&#39;m probably missing something obvious, but I&#39;ll dig a little further and see if I can spot the difference."}, {"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "reply_to_user": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 1, "creation_date": 1428691005, "post_id": 29202225, "comment_id": 47286338, "body": "@NicholasBishop, Did you ever file that bug report you were about to? Did you find out why modifying a file included by <code>include_str!</code> causes a recompilation?"}, {"owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "edited": false, "score": 0, "creation_date": 1428770944, "post_id": 29202225, "comment_id": 47309232, "body": "I had not filed the bug, thank you for reminding me. It&#39;s up now: <a href=\"https://github.com/rust-lang/cargo/issues/1510\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/1510</a>"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 1, "last_activity_date": 1427076061, "creation_date": 1427076061, "answer_id": 29202225, "question_id": 29200914, "link": "https://stackoverflow.com/questions/29200914/how-can-i-tell-cargo-to-rebuild-when-a-file-included-with-the-include-bytes-macr/29202225#29202225", "title": "How can I tell Cargo to rebuild when a file included with the include_bytes macro is changed?", "body": "<p>Cargo has no way currently to add a file to the list of 'watched' files for changes. It won't know about files included with <code>include_bytes!</code> because that would involve special-casing that macro specifically.</p>\n"}, {"tags": [], "owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "is_accepted": true, "score": 4, "last_activity_date": 1429195168, "creation_date": 1429195168, "answer_id": 29678077, "question_id": 29200914, "link": "https://stackoverflow.com/questions/29200914/how-can-i-tell-cargo-to-rebuild-when-a-file-included-with-the-include-bytes-macr/29678077#29678077", "title": "How can I tell Cargo to rebuild when a file included with the include_bytes macro is changed?", "body": "<p>This has been fixed in rustc: <a href=\"https://github.com/rust-lang/rust/pull/24423\" rel=\"nofollow\">https://github.com/rust-lang/rust/pull/24423</a></p>\n"}], "owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1344, "favorite_count": 1, "accepted_answer_id": 29678077, "answer_count": 2, "score": 6, "last_activity_date": 1429195168, "creation_date": 1427065302, "last_edit_date": 1427117571, "question_id": 29200914, "link": "https://stackoverflow.com/questions/29200914/how-can-i-tell-cargo-to-rebuild-when-a-file-included-with-the-include-bytes-macr", "title": "How can I tell Cargo to rebuild when a file included with the include_bytes macro is changed?", "body": "<p>I am using the <code>include_bytes!</code> macro to compile a GLSL shader into a rust program. It seems that Cargo is unaware of this however: when I modify just the shader file and test it with <code>cargo run</code> the updated file is not compiled in. Manually touching the <code>.rs</code> file that includes the shader does work.</p>\n\n<p>Do I need to add something to my <code>Cargo.toml</code> to explictly state this dependency? </p>\n\n<p>Version info:</p>\n\n<pre><code>$ rustc --version &amp;&amp; cargo --version\nrustc 1.0.0-nightly (ecf8c64e1 2015-03-21) (built 2015-03-22)\ncargo 0.0.1-pre-nightly (e689383 2015-03-16) (built 2015-03-16)\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1754, "user_id": 3438854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6166f4f52597368408966dd0b679402?s=128&d=identicon&r=PG&f=1", "display_name": "John C", "link": "https://stackoverflow.com/users/3438854/john-c"}, "edited": false, "score": 0, "creation_date": 1427061439, "post_id": 29200304, "comment_id": 46612856, "body": "For what it&#39;s worth, I&#39;ve done that a few times and was <i>very</i> uncomfortable that it wasn&#39;t an error, so I&#39;m glad to see this. <code>y</code> can&#39;t equal <code>println!()</code> unless its return value is an integer, after all."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1427061496, "post_id": 29200304, "comment_id": 46612876, "body": "This has <i>never</i> worked, as far as I can recall. Can you say when it did work?"}, {"owner": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "edited": false, "score": 0, "creation_date": 1427061831, "post_id": 29200304, "comment_id": 46612961, "body": "I see. I assumed it would println!() only if y was not equal to 5"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1754, "user_id": 3438854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6166f4f52597368408966dd0b679402?s=128&d=identicon&r=PG&f=1", "display_name": "John C", "link": "https://stackoverflow.com/users/3438854/john-c"}, "edited": false, "score": 1, "creation_date": 1427062394, "post_id": 29200304, "comment_id": 46613124, "body": "@JohnC can you provide an example of when that code compiled?"}, {"owner": {"reputation": 1754, "user_id": 3438854, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6166f4f52597368408966dd0b679402?s=128&d=identicon&r=PG&f=1", "display_name": "John C", "link": "https://stackoverflow.com/users/3438854/john-c"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427063808, "post_id": 29200304, "comment_id": 46613520, "body": "@Shepmaster Looking at my code, I <i>think</i> I misremembered it for earlier versions of <code>match</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427069425, "post_id": 29200304, "comment_id": 46614816, "body": "Could you link to the docs where you got that snippet of code? I&#39;d like to make sure that there&#39;s not a bug in the docs. Most of the examples in the docs are compiled to make sure they are valid, but you never know!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1560357582, "last_edit_date": 1560357582, "creation_date": 1427062213, "answer_id": 29200442, "question_id": 29200304, "link": "https://stackoverflow.com/questions/29200304/variable-binding-through-if-statement-not-working-correctly/29200442#29200442", "title": "Variable binding through if statement not working correctly", "body": "<p>Let's look at your example code:</p>\n\n<pre><code>let x = 5;\nlet y = if x == 5 {\n    10\n} else {\n    println!(\"shapoopoy\");\n};\n</code></pre>\n\n<p>What would the <em>type</em> of <code>y</code> be? The first branch resolves as some integral variable (like <code>u8</code> or <code>i32</code>), but the second branch resolves as the return type of <code>println!</code>, which is <code>()</code>. You can't store <strong>both</strong> these types in a single space, so the compiler complains.</p>\n\n<p>Both branches need to resolve to the same type - and that's up to what you need to do. You could return nothing, and set the variable as a side-effect:</p>\n\n<pre><code>let x = 5;\nlet y;\n\nif x == 5 {\n    y = 10;\n} else {\n    println!(\"shapoopoy\");\n}\n</code></pre>\n\n<p>Or return a integer in both branches:</p>\n\n<pre><code>let x = 5;\nlet y = if x == 5 {\n    10\n} else {\n    println!(\"shapoopoy\");\n    42\n};\n</code></pre>\n\n<blockquote>\n  <p>I'm not sure how to include Rust with the program I make if I do use an older version.</p>\n</blockquote>\n\n<p>Rust is a compiled language. If you distribute compiled binaries, then you don't need to \"include\" Rust at all. If you pick a stable version, then you can always pin to that version of Rust and compile with it.</p>\n"}], "owner": {"reputation": 331, "user_id": 3502945, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/b612bf3652690cb63829dc1fb528e54e?s=128&d=identicon&r=PG&f=1", "display_name": "The User", "link": "https://stackoverflow.com/users/3502945/the-user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 29200442, "answer_count": 1, "score": 0, "last_activity_date": 1560357582, "creation_date": 1427061210, "last_edit_date": 1560357427, "question_id": 29200304, "link": "https://stackoverflow.com/questions/29200304/variable-binding-through-if-statement-not-working-correctly", "title": "Variable binding through if statement not working correctly", "body": "<p>I wrote this code: </p>\n\n<pre><code>let x = 5;\nlet y = if x == 5 {\n    10\n} else {\n    println!(\"shapoopoy\");\n};\n</code></pre>\n\n<p>When I compile with <code>cargo build</code>, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: if and else have incompatible types\n --&gt; src/main.rs:6:9\n  |\n3 |       let y = if x == 5 {\n  |  _____________-\n4 | |         10\n  | |         -- expected because of this\n5 | |     } else {\n6 | |         println!(\"shapoopoy\");\n  | |         ^^^^^^^^^^^^^^^^^^^^^^ expected integer, found ()\n7 | |     };\n  | |_____- if and else have incompatible types\n  |\n  = note: expected type `{integer}`\n             found type `()`\n</code></pre>\n\n<p>On a side note, if I plan on working on a project after learning Rust, should I stick with the stable releases? I'm not sure how to include Rust with the program I make if I do use an older version.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": true, "score": 8, "last_activity_date": 1427050416, "creation_date": 1427050416, "answer_id": 29198453, "question_id": 29197909, "link": "https://stackoverflow.com/questions/29197909/do-lifetime-parameters-in-a-mut-self-methods-confuse-the-borrowchecker/29198453#29198453", "title": "Do lifetime parameters in `*(&amp;&#39;a mut self)` methods confuse the BorrowChecker?", "body": "<p>if you drop the <code>'a</code> named lifetime in <code>mutate_internal</code>, what you get is a fresh (anonymous) lifetime parameter, not <code>'a</code>. I.e. you get something equivalent to:</p>\n\n<pre><code>fn mutate_internal&lt;'b&gt;(&amp;'b mut self) {}\n</code></pre>\n\n<p>this means that self is borrowed until <code>mutate_internal</code> is done, but no longer than that. That's why the second call to <code>mutate_internal</code> compiles.</p>\n\n<p>By contrast, with <code>fn mutate_internal(&amp;'a mut self) {}</code> you're telling the compiler that self will be borrowed as long as <code>'a</code> (which is the entire lifetime of <code>Foo</code>). That's why the second <code>mutate_internal</code> can't be called</p>\n"}], "owner": {"reputation": 3183, "user_id": 651368, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/2b8a70f5cb38a9e7565e128e6243ac20?s=128&d=identicon&r=PG", "display_name": "Byron", "link": "https://stackoverflow.com/users/651368/byron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 217, "favorite_count": 0, "accepted_answer_id": 29198453, "answer_count": 1, "score": 2, "last_activity_date": 1427050416, "creation_date": 1427047404, "question_id": 29197909, "link": "https://stackoverflow.com/questions/29197909/do-lifetime-parameters-in-a-mut-self-methods-confuse-the-borrowchecker", "title": "Do lifetime parameters in `*(&amp;&#39;a mut self)` methods confuse the BorrowChecker?", "body": "<p>The following example does not compile as long as <code>'a</code> is used in <code>&amp;'a mut self</code>:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    a: &amp;'a u64,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn mutate_internal(&amp;'a mut self) {}\n\n    fn mutate(&amp;'a mut self) {\n        self.mutate_internal();\n        self.mutate_internal(); // &lt;- This call fails the borrow-check\n    }\n}\n</code></pre>\n\n<p>The compiler surprised me with the following error message:</p>\n\n<pre><code>tests/lang.rs:1116:13: 1116:17 error: cannot borrow `*self` as mutable more than once at a time\ntests/lang.rs:1116             self.mutate_internal();\n                               ^~~~\ntests/lang.rs:1115:13: 1115:17 note: previous borrow of `*self` occurs here; the mutable borrow prevents subsequent moves, borrows, or modification of `*self` until the borrow ends\ntests/lang.rs:1115             self.mutate_internal();\n                               ^~~~\ntests/lang.rs:1117:10: 1117:10 note: previous borrow ends here\ntests/lang.rs:1114         fn mutate(&amp;'a mut self) {\ntests/lang.rs:1115             self.mutate_internal();\ntests/lang.rs:1116             self.mutate_internal();\ntests/lang.rs:1117         }\n                           ^\n</code></pre>\n\n<p><strong>Can you explain why that is ?</strong> Please note that the issue goes away if <code>&amp;'a mut self</code> becomes <code>&amp;mut self</code>.</p>\n\n<h3>Meta</h3>\n\n<pre><code>\u2717 rustc --version\nrustc 1.0.0-nightly (e2fa53e59 2015-03-20) (built 2015-03-20)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427041869, "post_id": 29196869, "comment_id": 46606467, "body": "For my own curiosity \u2014 <i>why</i> are you trying to do this? It seems a very odd thing to do."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427043335, "post_id": 29196869, "comment_id": 46606986, "body": "I\u2019m trying to realize some small vector optimization (<code>enum SmallVec&lt;T&gt; { Small(u8, [T; SIZE]), Big(Vec&lt;T&gt;) }</code>). It appears to me, that the only way to safely drop <code>Small</code> is to manually drop the occupied entries and then replace it with the <code>Big</code> variant in order to be able to forget it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427043981, "post_id": 29196869, "comment_id": 46607205, "body": "Is it the case that your <code>Small</code> array doesn&#39;t always have <code>SIZE</code> entries in it? I&#39;m assuming that&#39;s what the <code>u8</code> is."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427044330, "post_id": 29196869, "comment_id": 46607324, "body": "Exactly. And in case it grows beyond <code>SIZE</code> the values are moved into the <code>Big</code> variant. I\u2019m doing the same almost the same there (<code>ptr::read</code> and <code>ptr::write</code>) as in drop and it works."}], "answers": [{"comments": [{"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427044462, "post_id": 29197262, "comment_id": 46607376, "body": "Sorry, I was unclear and refined my post. My understanding is, that <code>ptr::write</code> does simply copy <code>src</code> to <code>dest</code> without previously calling the destructor in <code>dst</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 1, "creation_date": 1427044563, "post_id": 29197262, "comment_id": 46607400, "body": "@Ferio right - but this example shows that the destructor for <code>Noisy</code> <b>is still called</b>, even though you&#39;ve replaced <code>self</code> with something that doesn&#39;t contain a <code>Noisy</code>. I&#39;m guessing that the specific destructor is decided <i>before</i> the method runs, so you can&#39;t modify the variant during <code>Drop</code>, as you&#39;d like."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427044685, "post_id": 29197262, "comment_id": 46607432, "body": "Indeed, I didn\u2019t get your example correctly on the first glance."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427044785, "post_id": 29197262, "comment_id": 46607463, "body": "@Ferio that would explain your original error message - the destructor for <code>Rc</code> is still being run, but on a chunk of data that doesn&#39;t correspond to an <code>Rc</code>! It&#39;s actually <i>lucky</i> that you got a nice error message like overflow, as opposed to silent memory corruption."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427045067, "post_id": 29197262, "comment_id": 46607560, "body": "Yes, and by using safe code only (<code>let _ = mem::replace(self, Foo::Baz);</code>) I\u2019m getting a stack overflow instead.That should definitively not happen."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427045164, "post_id": 29197262, "comment_id": 46607588, "body": "@Ferio I&#39;ve added a potential solution. Your stack overflow happens because <code>_</code> will be a <code>Foo:Bar</code>, which will then be immediately dropped. But to drop that, you have to call the <code>drop</code> method, which will call <code>mem::replace</code>, and so on."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427045490, "post_id": 29197262, "comment_id": 46607701, "body": "Oh yes, of course. Thanks for the solution but I\u2019m still wondering whether there is a real problem or just a lack of documentation. What I was trying to do, is very similar to <code>Option</code> + <code>take</code> so it must be possible somehow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1427045637, "post_id": 29197262, "comment_id": 46607750, "body": "@Ferio there certainly could be a bug in that <code>drop</code> pre-decides what variant&#39;s destructor will be run, regardless of what happens in the method. I&#39;d suggest filing a bug report to see if the core devs agree that it is an issue."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1427045061, "last_edit_date": 1427045061, "creation_date": 1427043823, "answer_id": 29197262, "question_id": 29196869, "link": "https://stackoverflow.com/questions/29196869/how-to-change-a-value-while-dropping/29197262#29197262", "title": "How to change a value while dropping?", "body": "<p><s>I'm not sure yet how to accomplish your goal, but</s> I can show that</p>\n\n<blockquote>\n  <p>From my understanding, the usage of <code>std::ptr::write</code> should prevent the destructor from running</p>\n</blockquote>\n\n<p>isn't true:</p>\n\n<pre><code>use std::mem;\nuse std::ptr;\n\nstruct Noisy;\nimpl Drop for Noisy {\n    fn drop(&amp;mut self) { println!(\"Dropping!\") }\n}\n\nenum Foo {\n    Bar(Noisy),\n    Baz\n}\nuse Foo::*;\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        println!(\"1\");\n\n        match self {\n            &amp;mut Bar(_) =&gt; {\n                println!(\"2\");\n                unsafe { ptr::write(self, Foo::Baz) }\n                println!(\"3\");\n            }\n            &amp;mut Baz =&gt; {\n                println!(\"4\");\n            }\n        }\n\n        println!(\"5\");\n    }\n}\n\nfn main() {\n    let _ = Foo::Bar(Noisy);\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre><code>1\n2\n3\n5\nDropping!\n</code></pre>\n\n<p>Indicating that the destructor for <code>Foo::Bar</code> is still being run, including the destructor of <code>Noisy</code>.</p>\n\n<p>A potential solution is to use <a href=\"http://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow\"><code>Option::take</code></a>:</p>\n\n<pre><code>use std::mem;\n\nstruct Noisy;\nimpl Drop for Noisy {\n    fn drop(&amp;mut self) { println!(\"Dropping!\") }\n}\n\nenum Foo {\n    Bar(Option&lt;Noisy&gt;),\n    Baz\n}\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        match *self {\n            Foo::Bar(ref mut x) =&gt; {\n                unsafe { mem::forget(x.take()) }\n            }\n            Foo::Baz =&gt; {}\n        }\n    }\n}\n\nfn main() {\n    let _ = Foo::Bar(Some(Noisy));\n}\n</code></pre>\n"}], "owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 0, "accepted_answer_id": 29197262, "answer_count": 1, "score": 0, "last_activity_date": 1427045061, "creation_date": 1427041675, "last_edit_date": 1427044042, "question_id": 29196869, "link": "https://stackoverflow.com/questions/29196869/how-to-change-a-value-while-dropping", "title": "How to change a value while dropping?", "body": "<p>I\u2019m currently trying to understand how <code>drop</code> works. The following code crashes and I don\u2019t understand why. From my understanding, the usage of <code>std::ptr::write</code> should prevent the destructor (edit: of the original value, here: Rc) from running (in this case nothing bad should happen beside the memory leak). But it doesn\u2019t seem to do that as (<a href=\"http://is.gd/Kotpki\" rel=\"nofollow\">playpen</a>, compile with -O0)</p>\n\n<pre><code>use std::rc::Rc;\nuse std::mem;\nuse std::ptr;\n\nenum Foo {\n    Bar(Rc&lt;usize&gt;),\n    Baz\n}\nuse Foo::*;\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        match *self {\n            Bar(_) =&gt; {\n                unsafe { ptr::write(self, Foo::Baz) }\n                //unsafe { mem::forget(mem::replace(self, Foo::Baz)) }\n            }\n            Baz =&gt; ()\n        }\n    }\n}\n\nfn main() {\n    let _ = Foo::Bar(Rc::new(23));\n}\n</code></pre>\n\n<p>gives an overflow error:</p>\n\n<pre><code>thread '&lt;main&gt;' panicked at 'arithmetic operation overflowed', /Users/rustbuild/src/rust-buildbot/slave/nightly-dist-rustc-mac/build/src/liballoc/rc.rs:755\n</code></pre>\n\n<p>The other variant quits with an illegal instruction. Why does that happen? How can I replace self with a value that will be properly dropped?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1427042349, "post_id": 29196792, "comment_id": 46606636, "body": "Ah, the prelude - that&#39;s the reason I was looking for!"}], "tags": [], "owner": {"reputation": 1479, "user_id": 4450817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/566922fb80a38c57d6a0db0be0f42f3b?s=128&d=identicon&r=PG&f=1", "display_name": "Vaelden", "link": "https://stackoverflow.com/users/4450817/vaelden"}, "is_accepted": true, "score": 4, "last_activity_date": 1427041311, "creation_date": 1427041311, "answer_id": 29196792, "question_id": 29196708, "link": "https://stackoverflow.com/questions/29196708/how-is-last-allowed-to-be-called-for-an-args-value/29196792#29196792", "title": "How is `last` allowed to be called for an Args value?", "body": "<p>The <code>last</code> method comes from the <a href=\"http://doc.rust-lang.org/std/iter/trait.IteratorExt.html\" rel=\"nofollow\"><code>IteratorExt</code></a> trait, which defines methods for all iterators by having a <code>impl&lt;I&gt; IteratorExt for I where I: Iterator</code> blanket implementation.</p>\n\n<p>These methods are in scope, because the trait <code>IteratorExt</code> is imported in the <a href=\"http://doc.rust-lang.org/std/prelude/v1/\" rel=\"nofollow\"><code>prelude</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1427042225, "post_id": 29196804, "comment_id": 46606597, "body": "Ah, I had stumbled across <code>core::slice::SliceExt::last</code> but did not see how slices had anything to do with iterators. I since noticed the search button on top of the reference pages and now see there are many <code>last</code>s. Nice link to the PR on reducing the number of extension traits."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 1, "creation_date": 1427042518, "post_id": 29196804, "comment_id": 46606687, "body": "@RayToal careful - <a href=\"http://doc.rust-lang.org/core/slice/trait.SliceExt.html#tymethod.last\" rel=\"nofollow noreferrer\"><code>core::SliceExt::last</code></a> and <a href=\"http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.last\" rel=\"nofollow noreferrer\"><code>std::IteratorExt::last</code></a> have the same name and similar concepts, but are different! In fact, <code>SliceExt::last</code> has been moved to an <i>inherent implementation</i> on <code>[T]</code>. Unfortunately, that <a href=\"https://github.com/rust-lang/rust/issues/23511\" rel=\"nofollow noreferrer\">isn&#39;t currently available in the documentation!</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1427041377, "creation_date": 1427041377, "answer_id": 29196804, "question_id": 29196708, "link": "https://stackoverflow.com/questions/29196708/how-is-last-allowed-to-be-called-for-an-args-value/29196804#29196804", "title": "How is `last` allowed to be called for an Args value?", "body": "<p>Sometimes you need to work both directions in the documentation. Doing a search for <code>last</code> will lead you to <a href=\"http://doc.rust-lang.org/std/iter/trait.IteratorExt.html#tymethod.last\" rel=\"nofollow\"><code>IteratorExt::last</code></a>:</p>\n\n<pre><code>fn last(self) -&gt; Option&lt;&lt;Self as Iterator&gt;::Item&gt;\n</code></pre>\n\n<p><code>IteratorExt</code> is defined as:</p>\n\n<pre><code>pub trait IteratorExt where Self: Iterator {\n    // ...\n}\n</code></pre>\n\n<p>This is an <em>extension trait</em> - a collection of methods that are all applied to another trait. It's done this way to help preserve <em>object safety</em>, as some of these methods require consuming the argument, which means that the argument has to have a known size. The trait has a <em>blanket implementation</em> to get it to apply:</p>\n\n<pre><code>impl&lt;I&gt; IteratorExt for I where I: Iterator\n</code></pre>\n\n<p>However, there's been some <a href=\"https://github.com/rust-lang/rust/pull/23104\" rel=\"nofollow\">work recently</a> to reduce the number of extension traits, as it was realized that you can simply add a bound of <code>Sized</code> to certain methods. It's possible some of that might apply to <code>IteratorExt</code> and they will move back to <code>Iterator</code> proper.</p>\n"}], "owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 29196792, "answer_count": 2, "score": 1, "last_activity_date": 1427041467, "creation_date": 1427040824, "last_edit_date": 1427041467, "question_id": 29196708, "link": "https://stackoverflow.com/questions/29196708/how-is-last-allowed-to-be-called-for-an-args-value", "title": "How is `last` allowed to be called for an Args value?", "body": "<p>Here is a small Rust script (yes, I know <code>unwrap</code> is discouraged but it works for this short example):</p>\n\n<pre><code>fn main() {\n    let args = std::env::args();\n    let word = args.last().unwrap();\n    println!(\"Last argument is {}\", word);\n}\n</code></pre>\n\n<p>I see from the Rust documentation that</p>\n\n<ul>\n<li><a href=\"http://doc.rust-lang.org/std/\" rel=\"nofollow\"><code>std</code></a> is a crate</li>\n<li><a href=\"http://doc.rust-lang.org/std/env/\" rel=\"nofollow\"><code>env</code></a> is a module within crate <code>std</code></li>\n<li><a href=\"http://doc.rust-lang.org/std/env/fn.args.html\" rel=\"nofollow\"><code>args</code></a> is a function within the module</li>\n<li>The function returns a value of type <a href=\"http://doc.rust-lang.org/std/env/struct.Args.html\" rel=\"nofollow\"><code>Args</code></a>, a struct</li>\n<li>The struct <code>Args</code> implements the traits <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow\"><code>Iterator</code></a> and <a href=\"http://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow\"><code>ExactSizeIterator</code></a></li>\n</ul>\n\n<p>However, neither <code>Args</code> nor <code>Iterator</code> nor <code>ExactSizeIterator</code>, as far as I can tell from the documentation, ever defines a method called <code>last</code>! <code>Args</code> defines  nothing on its own, <code>Iterator</code> just defines <code>next</code> and <code>size_hint</code>, and <code>ExactSizeIterator</code> defines <code>len</code>.</p>\n\n<p>So why does this script work? How is <code>last</code> allowed to be called for an <code>Args</code> value? Is the documentation lacking or am I missing something?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 3, "last_activity_date": 1597754235, "last_edit_date": 1597754235, "creation_date": 1427014826, "answer_id": 29192593, "question_id": 29191829, "link": "https://stackoverflow.com/questions/29191829/how-can-i-use-index-mut-to-get-a-mutable-reference/29192593#29192593", "title": "How can I use `index_mut` to get a mutable reference?", "body": "<p>You're almost there. Change this:</p>\n<pre><code>let mut b = a[1];\nb = 10;\n</code></pre>\n<p>to this:</p>\n<pre><code>let b = &amp;mut a[1];\n*b = 10;\n</code></pre>\n<p>Indexing syntax <a href=\"https://stackoverflow.com/q/27879161/155423\">returns the value itself, not a reference to it</a>. Your code extracts one <code>i32</code> from your vector and modifies the variable - naturally, it does not affect the vector itself. In order to obtain a reference through the index, you need to write it explicitly.</p>\n<p>This is fairly natural: when you use indexing to access elements of a slice or an array, you get the values of the elements, not references to them, and in order to get a reference you need to write it explicitly.</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1566, "favorite_count": 0, "accepted_answer_id": 29192593, "answer_count": 1, "score": 3, "last_activity_date": 1597754235, "creation_date": 1427007598, "last_edit_date": 1597754131, "question_id": 29191829, "link": "https://stackoverflow.com/questions/29191829/how-can-i-use-index-mut-to-get-a-mutable-reference", "title": "How can I use `index_mut` to get a mutable reference?", "body": "<p>Even when I implement <code>IndexMut</code> for my struct, I cannot get a mutable reference to an element of structure inner vector.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::{Index, IndexMut};\n\nstruct Test&lt;T&gt; {\n    data: Vec&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Index&lt;usize&gt; for Test&lt;T&gt; {\n    type Output = T;\n    fn index&lt;'a&gt;(&amp;'a self, idx: usize) -&gt; &amp;'a T {\n        return &amp;self.data[idx];\n    }\n}\n\nimpl&lt;T&gt; IndexMut&lt;usize&gt; for Test&lt;T&gt; {\n    fn index_mut&lt;'a&gt;(&amp;'a mut self, idx: usize) -&gt; &amp;'a mut T {\n        // even here I cannot get mutable reference to self.data[idx]\n        return self.data.index_mut(idx);\n    }\n}\n\nfn main() {\n    let mut a: Test&lt;i32&gt; = Test { data: Vec::new() };\n    a.data.push(1);\n    a.data.push(2);\n    a.data.push(3);\n    let mut b = a[1];\n    b = 10;\n\n    // will print `[1, 2, 3]` instead of [1, 10, 3]\n    println!(&quot;[{}, {}, {}]&quot;, a.data[0], a.data[1], a.data[2]);\n}\n</code></pre>\n<p>How can I use <code>index_mut</code> to get a mutable reference? Is it possible?</p>\n"}, {"tags": ["closures", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1525725749, "last_edit_date": 1525725749, "creation_date": 1427000774, "answer_id": 29191208, "question_id": 29191170, "link": "https://stackoverflow.com/questions/29191170/is-there-any-way-to-explicitly-write-the-type-of-a-closure/29191208#29191208", "title": "Is there any way to explicitly write the type of a closure?", "body": "<p>No. The real type of a closure is only known to the compiler, and it's not actually that useful to be able to know the concrete type of a given closure. You can specify certain \"shapes\" that a closure must fit, however:</p>\n\n<pre><code>fn call_it&lt;F&gt;(f: F)\nwhere\n    F: Fn(u8) -&gt; u8, // &lt;--- HERE\n{\n    println!(\"The result is {}\", f(42))\n}\n\nfn main() {\n    call_it(|a| a + 1);\n}\n</code></pre>\n\n<p>In this case, we say that <code>call_it</code> accepts any type that implements the trait <code>Fn</code> with one argument of type <code>u8</code> and a return type of <code>u8</code>. Many closures and free functions can implement that trait however.</p>\n\n<p>As of Rust 1.26.0, you can also use the <code>impl Trait</code> syntax to accept or return a closure (or any other trait):</p>\n\n<pre><code>fn make_it() -&gt; impl Fn(u8) -&gt; u8 {\n   |a| a + 1\n}\n\nfn call_it(f: impl Fn(u8) -&gt; u8) {\n    println!(\"The result is {}\", f(42))\n}\n\nfn main() {\n    call_it(make_it());\n}\n</code></pre>\n"}], "owner": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 29191208, "answer_count": 1, "score": 5, "last_activity_date": 1525725749, "creation_date": 1427000329, "last_edit_date": 1427000477, "question_id": 29191170, "link": "https://stackoverflow.com/questions/29191170/is-there-any-way-to-explicitly-write-the-type-of-a-closure", "title": "Is there any way to explicitly write the type of a closure?", "body": "<p>I started reading the <a href=\"http://doc.rust-lang.org/book/closures.html\" rel=\"noreferrer\">Rust guide</a> on closures. From the guide:</p>\n\n<blockquote>\n  <p>That is because in Rust each closure has its own unique type. So, not only do closures with different signatures have different types, but different closures with the same signature have different types, as well.</p>\n</blockquote>\n\n<p>Is there a way to explicitly write the type signature of a closure? Is there any compiler flag that expands the type of inferred closure?</p>\n"}, {"tags": ["import", "rust", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "edited": false, "score": 0, "creation_date": 1446420336, "post_id": 29190037, "comment_id": 54722473, "body": "It\u2019s also possible to use the <code>-L</code> flag with <code>rustc</code>: <code>$ rustc foo.rs -L &#47;path&#47;to&#47;libs&#47;</code>"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 12, "last_activity_date": 1426988780, "last_edit_date": 1426988780, "creation_date": 1426988452, "answer_id": 29190037, "question_id": 29189615, "link": "https://stackoverflow.com/questions/29189615/cant-find-crate-for-num/29190037#29190037", "title": "Can&#39;t find crate for `num`", "body": "<blockquote>\n  <p>I'm not using any compiler flags.</p>\n</blockquote>\n\n<p>If you're using just <code>rustc</code>, then you'll need to use flags to grab the num crate</p>\n\n<pre><code>$ rustc foo.rs --extern num=/path/to/num.rlib\n</code></pre>\n\n<p>should do it, I think. Of course, you'll have to get a copy of the num crate: <a href=\"https://crates.io/crates/num\" rel=\"noreferrer\">https://crates.io/crates/num</a> links to <a href=\"https://github.com/rust-lang/num\" rel=\"noreferrer\">https://github.com/rust-lang/num</a> .</p>\n\n<p>If you use Cargo, you can just add</p>\n\n<pre><code>num = \"*\"\n</code></pre>\n\n<p>To the <code>[dependencies]</code> section of <code>Cargo.toml</code> and you'll be good to go.</p>\n"}], "owner": {"reputation": 486, "user_id": 3081514, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/097852e0ddee5da3c57d852019fd755c?s=128&d=identicon&r=PG&f=1", "display_name": "Tyler", "link": "https://stackoverflow.com/users/3081514/tyler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3767, "favorite_count": 0, "accepted_answer_id": 29190037, "answer_count": 1, "score": 7, "last_activity_date": 1427000855, "creation_date": 1426983861, "last_edit_date": 1427000855, "question_id": 29189615, "link": "https://stackoverflow.com/questions/29189615/cant-find-crate-for-num", "title": "Can&#39;t find crate for `num`", "body": "<p>I'm trying to use BigUints from the num crate in Rust, and I'm using this code to import them:</p>\n\n<pre><code>extern crate num;\n\nuse num::bigint::BigUint;\n</code></pre>\n\n<p>However, it returns the following error when I compile:</p>\n\n<pre><code>main.rs:1:1: 1:18 error: can't find crate for `num`\nmain.rs:1 extern crate num;\n      ^~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n</code></pre>\n\n<p>I'm not using any compiler flags.</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust", "archlinux"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1426975112, "post_id": 29188141, "comment_id": 46591760, "body": "Could you please include more details? For example, which version of <code>rustc</code> do you have? Judging by the error, you&#39;re probably using an old version. (The ecosystem tracks the <i>nightly</i> version of Rust, at least until there&#39;s a stable 1.0. So try using <code>rust-nightly-bin</code> in the AUR.)"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1426976415, "post_id": 29188141, "comment_id": 46592110, "body": "That is a very old <code>rustc</code> at this point. You need to upgrade, otherwise you won&#39;t make it very far. Rust is an open source project: <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust</a>"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1426976451, "post_id": 29188141, "comment_id": 46592120, "body": "The <code>gcc</code> crate source code is here: <a href=\"https://github.com/alexcrichton/gcc-rs\" rel=\"nofollow noreferrer\">github.com/alexcrichton/gcc-rs</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1426976963, "post_id": 29188141, "comment_id": 46592245, "body": "I&#39;ll second @BurntSushi5&#39;s suggestion to upgrade. You may be interested in an <a href=\"https://github.com/michaelsproul/rust-nightly-archlinux\" rel=\"nofollow noreferrer\">Arch nightly build of Rust</a>, and installing Rust yourself isn&#39;t hard at all, and there are <a href=\"https://github.com/brson/multirust\" rel=\"nofollow noreferrer\">tools to help</a> with that. Seeing the source of your installed version would be up to the Arch package. You could look at that package to see where it pulls from, and then track the source there."}], "answers": [{"comments": [{"owner": {"reputation": 189, "user_id": 1433492, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a8381d78a59d66af376f0c1a8ececdae?s=128&d=identicon&r=PG", "display_name": "Tomer", "link": "https://stackoverflow.com/users/1433492/tomer"}, "edited": false, "score": 0, "creation_date": 1427009374, "post_id": 29188963, "comment_id": 46597795, "body": "thanks, so there is no way to know it from the compiled lib somehow, i dont understand how one should know which API is installed currently on his system, and i guess there isn&#39;t any"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 189, "user_id": 1433492, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a8381d78a59d66af376f0c1a8ececdae?s=128&d=identicon&r=PG", "display_name": "Tomer", "link": "https://stackoverflow.com/users/1433492/tomer"}, "edited": false, "score": 0, "creation_date": 1427032898, "post_id": 29188963, "comment_id": 46603414, "body": "@Tomer Rust itself does not bundle the source code \u2014 it is a compiled language and the installer only installs the binary bits and some documentation. Interpreted languages like Ruby ship with source code because that&#39;s what is actually used at runtime. You could look at the local documentation to see what public types and methods are available, if your version of Rust is new enough that it includes it and the package you are using chooses to install it."}, {"owner": {"reputation": 189, "user_id": 1433492, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a8381d78a59d66af376f0c1a8ececdae?s=128&d=identicon&r=PG", "display_name": "Tomer", "link": "https://stackoverflow.com/users/1433492/tomer"}, "edited": false, "score": 0, "creation_date": 1427046040, "post_id": 29188963, "comment_id": 46607865, "body": "local doc is what i was looking for, thanks Shepmaster!!"}], "tags": [], "owner": {"reputation": 10636, "user_id": 205528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39f09c8427daf8fbed0a12999868bc3f?s=128&d=identicon&r=PG", "display_name": "Kien Truong", "link": "https://stackoverflow.com/users/205528/kien-truong"}, "is_accepted": true, "score": 1, "last_activity_date": 1426978161, "creation_date": 1426978161, "answer_id": 29188963, "question_id": 29188141, "link": "https://stackoverflow.com/questions/29188141/is-it-possible-to-see-the-source-code-of-the-current-installed-version-of-rust/29188963#29188963", "title": "Is it possible to see the source code of the current installed version of Rust?", "body": "<p>To get the source for any packages in Arch Linux repository, you should use the Arch Build System.</p>\n\n<ol>\n<li>Install the <code>abs</code> using <code>pacman</code></li>\n<li>Run <code>abs</code> as <code>root</code> to synchronize the package tree</li>\n<li>Copy the corresponding directory from <code>/var/abs/&lt;repo&gt;/&lt;pkgname&gt;</code> (in the case of <code>rust</code>, that would be <code>/var/abs/community/rust</code>) to where you want to build the package.</li>\n<li>Navigate to that directory and run <code>makepkg -o</code>. This command will download and unpack the source automatically into the current directory.</li>\n</ol>\n\n<p>Reference: <a href=\"https://wiki.archlinux.org/index.php/Arch_Build_System\" rel=\"nofollow\">Archwiki article on ABS</a></p>\n"}], "owner": {"reputation": 189, "user_id": 1433492, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a8381d78a59d66af376f0c1a8ececdae?s=128&d=identicon&r=PG", "display_name": "Tomer", "link": "https://stackoverflow.com/users/1433492/tomer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 0, "accepted_answer_id": 29188963, "answer_count": 1, "score": -1, "last_activity_date": 1427046253, "creation_date": 1426972507, "last_edit_date": 1427046253, "question_id": 29188141, "link": "https://stackoverflow.com/questions/29188141/is-it-possible-to-see-the-source-code-of-the-current-installed-version-of-rust", "title": "Is it possible to see the source code of the current installed version of Rust?", "body": "<p>I am using 64bit Arch Linux and have installed <code>rustc 1.0.0-dev (built 2015-02-23)</code>; this is the latest version in Arch (which is a rolling release).</p>\n\n<p>I am getting a compilation error when trying to compile gcc 0.3.2.\nI added <code>gcc</code> as a dependency in <code>Cargo.toml</code> and the compilation failed:</p>\n\n<pre><code>.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.2/src/lib.rs:225:35: 225:58 error: unresolved name `io::ErrorKind::NotFound`\n.cargo/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.2/src/lib.rs:225         Err(ref e) if e.kind() == io::ErrorKind::NotFound =&gt;\n</code></pre>\n\n<p>I tried to verify the source, but I can't find where the source code is located. I looked in <code>/lib/rustlib/x86_64-unknown-linux-gnu</code>, but that only contains compiled code.</p>\n\n<p><strong>edited:</strong></p>\n\n<p>I tried to figure out the api of the current install rust lib, Shepmaster give the answer that there is doc attached to the lib.\nin arch it's located at /usr/local/share/doc/rust/html/std/index.html</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426962422, "post_id": 29186299, "comment_id": 46587927, "body": "Is your code available anywhere? Can you produce a small reproducible example? Have you tried the silly option of compiling again, perhaps with a clean in the middle?"}, {"owner": {"reputation": 146, "user_id": 1477472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7f392b52ef3c0e342ff0ba90ae1ccd9?s=128&d=identicon&r=PG", "display_name": "Sam Phippen", "link": "https://stackoverflow.com/users/1477472/sam-phippen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426962782, "post_id": 29186299, "comment_id": 46588031, "body": "I&#39;ll push it up to github. I did a cargo clean and also an rm -rf target. <a href=\"https://github.com/samphippen/rexchange\" rel=\"nofollow noreferrer\">github.com/samphippen/rexchange</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1426963730, "creation_date": 1426963730, "answer_id": 29186651, "question_id": 29186299, "link": "https://stackoverflow.com/questions/29186299/compilation-linking-error-undefined-symbols-for-architecture-x86-64/29186651#29186651", "title": "Compilation / linking error: Undefined symbols for architecture x86_64", "body": "<p>I can reproduce the issue, and have a workaround. I'm not sure if it's a Rust bug or not, but it's certainly surprising, so I'd encourage you to file it (or let me know and I can do it).</p>\n\n<p>First, I created a new cargo project called <code>repro</code>. I then added these files:</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>mod order {\n    pub struct Alpha(pub u8);\n\n    impl Alpha {\n        pub fn value(&amp;self) -&gt; u8 { self.0 }\n    }\n}\n\npub mod interface {\n    use super::order::Alpha;\n\n    pub fn yeah() -&gt; Alpha { Alpha(8) }\n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate repro;\n\nfn main() {\n    println!(\"{:?}\", repro::interface::yeah().value());\n}\n</code></pre>\n\n<p>During compilation, this warning is generated:</p>\n\n<pre><code>src/lib.rs:5:9: 5:45 warning: method is never used: `value`, #[warn(dead_code)] on by default\nsrc/lib.rs:5         pub fn value(&amp;self) -&gt; u8 { self.0 }\n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>Which is surprising, as we indeed use it in <code>main</code>. Compilation then fails with the same linking error you saw.</p>\n\n<p>The workaround is to mark the <code>order</code> module as public:</p>\n\n<pre><code>pub mod order {\n</code></pre>\n"}], "owner": {"reputation": 146, "user_id": 1477472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7f392b52ef3c0e342ff0ba90ae1ccd9?s=128&d=identicon&r=PG", "display_name": "Sam Phippen", "link": "https://stackoverflow.com/users/1477472/sam-phippen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1049, "favorite_count": 1, "accepted_answer_id": 29186651, "answer_count": 1, "score": 5, "last_activity_date": 1426963980, "creation_date": 1426961910, "last_edit_date": 1426963980, "question_id": 29186299, "link": "https://stackoverflow.com/questions/29186299/compilation-linking-error-undefined-symbols-for-architecture-x86-64", "title": "Compilation / linking error: Undefined symbols for architecture x86_64", "body": "<p>My Rust compiler version is: </p>\n\n<pre><code>$ rustc --version\nrustc 1.0.0-nightly (3e4be02b8 2015-03-13) (built 2015-03-13)\n</code></pre>\n\n<p>My Cargo version is:</p>\n\n<pre><code>$ cargo --version\ncargo 0.0.1-pre-nightly (66849de 2015-03-10) (built 2015-03-11)\n</code></pre>\n\n<p>I was happily coding my rust project when I got this compilation error:</p>\n\n<pre><code>    $ cargo build --verbose\n       Fresh log v0.2.5\n       Fresh rustc-serialize v0.3.6\n       Fresh libc v0.1.3\n       Fresh rand v0.1.4\n       Fresh uuid v0.1.11\n   Compiling rexchange v0.0.1 (file:///Users/sam/dev/rexchange)\n     Running `rustc src/main.rs --crate-name rexchange --crate-type bin -g --out-dir /Users/sam/dev/rexchange/target/debug --emit=dep-info,link -L dependency=/Users/sam/dev/rexchange/target/debug -L dependency=/Users/sam/dev/rexchange/target/debug/deps --extern uuid=/Users/sam/dev/rexchange/target/debug/deps/libuuid-f80da2be6e37bdc9.rlib --extern rexchange=/Users/sam/dev/rexchange/target/debug/librexchange-436e10ddf2e26a6f.rlib`\nerror: linking with `cc` failed: exit code: 1\nnote: \"cc\" \"-m64\" \"-L\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib\" \"-o\" \"/Users/sam/dev/rexchange/target/debug/rexchange\" \"/Users/sam/dev/rexchange/target/debug/rexchange.o\" \"-Wl,-force_load,/usr/local/lib/rustlib/x86_64-apple-darwin/lib/libmorestack.a\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"/Users/sam/dev/rexchange/target/debug/librexchange-436e10ddf2e26a6f.rlib\" \"/Users/sam/dev/rexchange/target/debug/deps/libuuid-f80da2be6e37bdc9.rlib\" \"/Users/sam/dev/rexchange/target/debug/deps/librustc-serialize-6bb45c0d7c639d54.rlib\" \"/Users/sam/dev/rexchange/target/debug/deps/librand-6dfe5258ada5ebf2.rlib\" \"/Users/sam/dev/rexchange/target/debug/deps/liblibc-2a692f33a70517c8.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/libstd-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/libcollections-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/libunicode-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/librand-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/liballoc-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/liblibc-4e7c5e5c.rlib\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib/libcore-4e7c5e5c.rlib\" \"-L\" \"/Users/sam/dev/rexchange/target/debug\" \"-L\" \"/Users/sam/dev/rexchange/target/debug/deps\" \"-L\" \"/usr/local/lib/rustlib/x86_64-apple-darwin/lib\" \"-L\" \"/Users/sam/dev/rexchange/.rust/lib/x86_64-apple-darwin\" \"-L\" \"/Users/sam/dev/rexchange/lib/x86_64-apple-darwin\" \"-lc\" \"-lm\" \"-lSystem\" \"-lpthread\" \"-lc\" \"-lm\" \"-lcompiler-rt\"\nnote: ld: warning: directory not found for option '-L/Users/sam/dev/rexchange/.rust/lib/x86_64-apple-darwin'\nld: warning: directory not found for option '-L/Users/sam/dev/rexchange/lib/x86_64-apple-darwin'\nUndefined symbols for architecture x86_64:\n  \"orders::BidOrder::get_account_id::hbe8193f627eb0daf4ba\", referenced from:\n      main::h6e33cd0005718795haa in rexchange.o\n  \"orders::BidOrder::get_currency_price::hac0a15cbc8d29001Gba\", referenced from:\n      main::h6e33cd0005718795haa in rexchange.o\n  \"orders::BidOrder::get_commodity_amount::hce97000d2a1749beSba\", referenced from:\n      main::h6e33cd0005718795haa in rexchange.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nerror: aborting due to previous error\nCould not compile `rexchange`.\n\nCaused by:\n  Process didn't exit successfully: `rustc src/main.rs --crate-name rexchange --crate-type bin -g --out-dir /Users/sam/dev/rexchange/target/debug --emit=dep-info,link -L dependency=/Users/sam/dev/rexchange/target/debug -L dependency=/Users/sam/dev/rexchange/target/debug/deps --extern uuid=/Users/sam/dev/rexchange/target/debug/deps/libuuid-f80da2be6e37bdc9.rlib --extern rexchange=/Users/sam/dev/rexchange/target/debug/librexchange-4\n</code></pre>\n\n<p>I've no idea why this failure occurred and I couldn't find anything that looked similar. Can anyone explain to me what is going on and how to fix?</p>\n\n<p>The code is: <a href=\"https://github.com/samphippen/rexchange\" rel=\"nofollow\">https://github.com/samphippen/rexchange</a></p>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 37, "last_activity_date": 1553197271, "last_edit_date": 1553197271, "creation_date": 1426951675, "answer_id": 29184450, "question_id": 29184358, "link": "https://stackoverflow.com/questions/29184358/how-do-i-require-a-generic-type-implement-an-operation-like-add-sub-mul-or-di/29184450#29184450", "title": "How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?", "body": "<p>Let's break down your example a bit:</p>\n\n<pre><code>fn cube&lt;T: Mul&gt;(x: T) -&gt; T {\n    let a = x * x;\n    let b = a * x;\n    b\n}\n</code></pre>\n\n<p>What are the types of <code>a</code> and <code>b</code>? In this case, the type of <code>a</code> is <code>&lt;T as std::ops::Mul&gt;::Output</code> \u2014 sound familiar from the error message? Then, we are trying to multiply that type by <code>x</code> again, but there's no guarantee that <code>Output</code> is able to be multiplied by anything!</p>\n\n<p>Let's do the simplest thing and say that <code>T * T</code> needs to result in a <code>T</code>:</p>\n\n<pre><code>fn cube&lt;T: Mul&lt;Output = T&gt;&gt;(x: T) -&gt; T {\n    x * x * x\n}\n</code></pre>\n\n<p>Unfortunately, this gives two similar errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `x`\n --&gt; src/lib.rs:6:9\n  |\n6 |     x * x * x\n  |     -   ^ value used here after move\n  |     |\n  |     value moved here\n  |\n  = note: move occurs because `x` has type `T`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Which is because the <a href=\"http://doc.rust-lang.org/std/ops/trait.Mul.html\" rel=\"noreferrer\"><code>Mul</code> trait takes arguments by value</a>, so we add the <code>Copy</code> so we can duplicate the values. </p>\n\n<p>I also switched to the <code>where</code> clause as I like it better and it is unwieldy to have that much inline:</p>\n\n<pre><code>fn cube&lt;T&gt;(x: T) -&gt; T\nwhere\n    T: Mul&lt;Output = T&gt; + Copy\n{\n    x * x * x\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28005134/155423\">How do I implement the Add trait for a reference to a struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34630695/155423\">How to write a trait bound for adding two references of a generic type?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 13023, "user_id": 141906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/wfmOI.jpg?s=128&g=1", "display_name": "Maxim Sloyko", "link": "https://stackoverflow.com/users/141906/maxim-sloyko"}, "edited": false, "score": 0, "creation_date": 1426992143, "post_id": 29188835, "comment_id": 46595054, "body": "Can you please also explain (or just give a link) the &quot;where for&quot; notation, I haven&#39;t seen it before."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 13023, "user_id": 141906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/wfmOI.jpg?s=128&g=1", "display_name": "Maxim Sloyko", "link": "https://stackoverflow.com/users/141906/maxim-sloyko"}, "edited": false, "score": 0, "creation_date": 1427117550, "post_id": 29188835, "comment_id": 46632668, "body": "where clauses are a more general way of constraining generic parameters. They have been introduced via <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0135-where.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/0135-where.md</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1465595347, "post_id": 29188835, "comment_id": 62984566, "body": "The <code>for&lt;&#39;a&gt;</code> notation was introduced in RFC 387: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0387-higher-ranked-trait-bounds.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a> ."}], "tags": [], "owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "is_accepted": false, "score": 15, "last_activity_date": 1553197212, "last_edit_date": 1553197212, "creation_date": 1426977292, "answer_id": 29188835, "question_id": 29184358, "link": "https://stackoverflow.com/questions/29184358/how-do-i-require-a-generic-type-implement-an-operation-like-add-sub-mul-or-di/29188835#29188835", "title": "How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?", "body": "<p>The bound <code>T: Mul</code> does not imply that the result of the binary operator is also of type <code>T</code>. The result type is an <em>associated type</em> of this trait: <code>Output</code>.</p>\n\n<p>The other issue is that before Rust 1.0 the operator traits switched from pass-by-reference to pass-by-value. In generic code this can be a bit of a pain in the butt (for now at least) because these operators <em>consume</em> their operands unless you also require the types to be <code>Copy</code>.</p>\n\n<p>Just for completeness (in case you don't like to require <code>Copy</code>), let me add some information about a possible alternative direction.</p>\n\n<p>For the sake of generic code, authors of \"numeric types\" are encouraged to provide additional <em>non-consuming</em> implementations of these operator traits so that you don't need <code>Copy</code> or <code>Clone</code>. For example, the standard library already provides the following implementations:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> f64 implements Mul&lt; f64&gt;\n f64 implements Mul&lt;&amp;f64&gt;\n&amp;f64 implements Mul&lt; f64&gt;\n&amp;f64 implements Mul&lt;&amp;f64&gt;\n</code></pre>\n\n<p>Each of these implementations has <code>f64</code> as the <code>Output</code> type. Making use of these traits directly is not pretty:</p>\n\n<pre><code>fn cube&lt;T&gt;(x: &amp;T) -&gt; T\nwhere\n    for&lt;'a&gt; T: Mul&lt;&amp;'a T, Output = T&gt;,\n    for&lt;'a, 'b&gt; &amp;'a T: Mul&lt;&amp;'b T, Output = T&gt;,\n{\n    x * x * x\n}\n</code></pre>\n\n<p>Eventually, we might get some (slightly) higher level traits, which would reduce the noise. For example: <code>T: Mul2</code> could imply <code>T: Mul&lt;T&gt; + Mul&lt;&amp;T&gt;</code> and <code>&amp;T: Mul&lt;T&gt; + Mul&lt;&amp;T&gt;</code>, but at the time of writing this, the Rust compiler does not seem able to handle this. At least I could not successfully compile the following code:</p>\n\n<pre><code>use std::ops::Mul;\n\npub trait Mul2\nwhere\n    Self: Mul&lt;Self, Output = Self&gt;,\n    Self: for&lt;'a&gt; Mul&lt;&amp;'a Self, Output = Self&gt;,\n    for&lt;'a&gt; &amp;'a Self: Mul&lt;Self, Output = Self&gt;,\n    for&lt;'a, 'b&gt; &amp;'a Self: Mul&lt;&amp;'b Self, Output = Self&gt;,\n{\n}\n\nimpl&lt;T&gt; Mul2 for T\nwhere\n    T: Mul&lt;T, Output = T&gt;,\n    T: for&lt;'a&gt; Mul&lt;&amp;'a T, Output = T&gt;,\n    for&lt;'a&gt; &amp;'a T: Mul&lt;T, Output = T&gt;,\n    for&lt;'a, 'b&gt; &amp;'a T: Mul&lt;&amp;'b T, Output = T&gt;,\n{\n}\n\nfn cube&lt;T: Mul2&gt;(x: &amp;T) -&gt; T {\n    x * x * x\n}\n\nfn main() {\n    let c = cube(&amp;2.3);\n    println!(\"Hello, world! {}\", c)\n}\n</code></pre>\n\n<p>I think it's safe to say that things will improve in this area. For now, the ability to generically implement numeric algorithms in Rust is not as good as I would like it to be.</p>\n"}], "owner": {"reputation": 13023, "user_id": 141906, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/wfmOI.jpg?s=128&g=1", "display_name": "Maxim Sloyko", "link": "https://stackoverflow.com/users/141906/maxim-sloyko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4445, "favorite_count": 7, "accepted_answer_id": 29184450, "answer_count": 2, "score": 31, "last_activity_date": 1553197271, "creation_date": 1426951116, "last_edit_date": 1532960595, "question_id": 29184358, "link": "https://stackoverflow.com/questions/29184358/how-do-i-require-a-generic-type-implement-an-operation-like-add-sub-mul-or-di", "title": "How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?", "body": "<p>I'm trying to implement a generic function in Rust where the only requirement for the argument is that the multiplication operation should be defined. I'm trying to implement a generic \"power\", but will go with a simpler <code>cube</code> function to illustrate the problem:</p>\n\n<pre><code>use std::ops::Mul;\n\nfn cube&lt;T: Mul&gt;(x: T) -&gt; T {\n    x * x * x\n}\n\nfn main() {\n    println!(\"5^3 = {}\", cube(5));\n}\n</code></pre>\n\n<p>When compiling I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `*` cannot be applied to type `&lt;T as std::ops::Mul&gt;::Output`\n --&gt; src/main.rs:4:5\n  |\n4 |     x * x * x\n  |     ^^^^^^^^^\n  |\n  = note: an implementation of `std::ops::Mul` might be missing for `&lt;T as std::ops::Mul&gt;::Output`\n</code></pre>\n\n<p>What does this mean? Did I choose the wrong trait? How can I resolve this?</p>\n"}, {"tags": ["c", "arrays", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1426947159, "post_id": 29182843, "comment_id": 46583353, "body": "You probably don&#39;t want to have <code>extern</code> functions that accept <code>i32</code> or references (such as <code>&amp;i32</code>). It&#39;s better to use the C types that are guaranteed to match your platform - <code>libc::uint32_t</code> as shown in the answer. Also, Rust references are <i>guaranteed</i> to be non-NULL, but there&#39;s nothing enforcing that when you cal it via FFI. It&#39;d be safer to accept a <code>*const libc::uint32_t</code> (again, as shown in the answer) and then assert it is non-NULL before making it into a reference."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1426944954, "post_id": 29183118, "comment_id": 46582651, "body": "Note that when using an unsafe block, it&#39;s <b>up to the programmer</b> to verify that the code within meets all the Rust requirements for safety. In this example, references can <b>never</b> be <code>NULL</code>, so you should really have an assertion that <code>array_pointer</code> is not <code>NULL</code> (unless you somehow can guarantee it never will be, which is even tougher)."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426946627, "post_id": 29183118, "comment_id": 46583197, "body": "@Shepmaster That comes with the territory (C FFI) though. And note that <code>&amp;</code> pointers must be non-null as well, so if it can ever be null, the signature in OP&#39;s code is wrong too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1426946970, "post_id": 29183118, "comment_id": 46583295, "body": "@delnan I might be misunderstanding your point. My point is that <code>*const libc::uint32_t</code> is allowed to be NULL, because that&#39;s perfectly valid C, as you mention. This code converts it to a slice, which <i>doesn&#39;t allow</i> the data pointer to be NULL (not sure if the length comes into play \u2014 does it matter if the data is NULL when then length is <code>0</code>?). I&#39;m simply saying there should be an <code>assert!(array_pointer != std::ptr::null())</code> before calling <code>from_raw_parts</code>. This is all about protecting ourselves from crazy C callers as best we can."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426947297, "post_id": 29183118, "comment_id": 46583385, "body": "@Shepmaster Sure, I agree. I was trying to add that (1) the NULL problem already exists in the question, and (2) some dangers can never be ruled out in Rust when interacting with C. The second is kind of besides the point, I have to admit in hindsight."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426947422, "post_id": 29183118, "comment_id": 46583422, "body": "@delnan Absolutely, great points. I commented on OP to address (1). There&#39;s not much we can do about (2), sadly. The C FFI consumer can always pass in <code>(-1, 0xDEADBEEF)</code>. ^_^"}], "tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": true, "score": 8, "last_activity_date": 1605461260, "last_edit_date": 1605461260, "creation_date": 1426943485, "answer_id": 29183118, "question_id": 29182843, "link": "https://stackoverflow.com/questions/29182843/pass-a-c-array-to-a-rust-function/29183118#29183118", "title": "Pass a C array to a Rust function", "body": "<p>You have to make some efforts to provide a pure C API and implement some conversions using unsafe code. Fortunately, it is not so difficult:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\n\n#[no_mangle]\npub extern &quot;C&quot; fn rust_multiply(\n    size: libc::size_t,\n    array_pointer: *const libc::uint32_t,\n) -&gt; libc::uint32_t {\n    internal_rust_multiply(unsafe {\n        std::slice::from_raw_parts(array_pointer as *const i32, size as usize)\n    }) as libc::uint32_t\n}\n\nfn internal_rust_multiply(array: &amp;[i32]) -&gt; i32 {\n    assert!(!array.is_empty());\n    array[0]\n}\n</code></pre>\n<p>There is a good introduction for Rust FFI <a href=\"https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#using-extern-functions-to-call-external-code\" rel=\"nofollow noreferrer\">on the official site</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 624, "user_id": 1241610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2bd9c25151d6c861d9762f616be5ec1?s=128&d=identicon&r=PG", "display_name": "Joels Elf", "link": "https://stackoverflow.com/users/1241610/joels-elf"}, "is_accepted": false, "score": 0, "last_activity_date": 1605461330, "last_edit_date": 1605461330, "creation_date": 1454425963, "answer_id": 35157098, "question_id": 29182843, "link": "https://stackoverflow.com/questions/29182843/pass-a-c-array-to-a-rust-function/35157098#35157098", "title": "Pass a C array to a Rust function", "body": "<p><a href=\"https://stackoverflow.com/a/29183118/155423\">@swizard's answer</a> gets unsigned integers and converts them to signed integers. The code you probably want is</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\n\n#[no_mangle]\n\npub extern &quot;C&quot; fn rust_multiply(\n    size: libc::size_t,\n    array_pointer: *const libc::int32_t,\n) -&gt; libc::int32_t {\n    internal_rust_multiply(unsafe {\n        std::slice::from_raw_parts(array_pointer as *const i32, size as usize)\n    }) as libc::int32_t\n}\n\nfn internal_rust_multiply(array: &amp;[i32]) -&gt; i32 {\n    assert!(!array.is_empty());\n    array[0]\n}\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 301498, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/110b585c1ccd97468107dfd69a19eff1?s=128&d=identicon&r=PG", "display_name": "aspcartman", "link": "https://stackoverflow.com/users/301498/aspcartman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4678, "favorite_count": 0, "accepted_answer_id": 29183118, "answer_count": 2, "score": 4, "last_activity_date": 1605461330, "creation_date": 1426941773, "last_edit_date": 1605461193, "question_id": 29182843, "link": "https://stackoverflow.com/questions/29182843/pass-a-c-array-to-a-rust-function", "title": "Pass a C array to a Rust function", "body": "<p>I'm trying to make a Rust dylib and use it from other languages, like C, Python and others. I've successfully called a Rust function taking an i32 argument from Python. Now I'm trying to make a function that takes an array (or a pointer to it, or whatever is necessary to pass a dataset to Rust).</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = &quot;dylib&quot;]\n#[no_mangle]\npub extern &quot;C&quot; fn rust_multiply(size: i32, arrayPointer: &amp;i32) -&gt; i32 {\n    *(arrayPointer)\n}\n</code></pre>\n<p>This works as expected. But</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = &quot;dylib&quot;]\n#[no_mangle]\npub extern &quot;C&quot; fn rust_multiply(size: i32, arrayPointer: &amp;i32) -&gt; i32 {\n    *(arrayPointer + 1) // trying to get next element\n}\n</code></pre>\n<p>fails with</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0614]: type `i32` cannot be dereferenced\n --&gt; src/lib.rs:4:5\n  |\n4 |     *(arrayPointer + 1) // trying to get next element\n  |     ^^^^^^^^^^^^^^^^^^^\n</code></pre>\n<p>Doing this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub extern fn rust_multiply(size: i32, array: &amp;[i32]) -&gt; i32\n</code></pre>\n<p>and doing something like <code>array[0]</code> fails with &quot;length = 0&quot; error.</p>\n"}, {"tags": ["xml", "xml-parsing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 17673, "user_id": 139802, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/33c5692f72d9da5663651d034c4588b6?s=128&d=identicon&r=PG", "display_name": "Andrew Wagner", "link": "https://stackoverflow.com/users/139802/andrew-wagner"}, "edited": false, "score": 0, "creation_date": 1427697078, "post_id": 29180712, "comment_id": 46866840, "body": "On my machine, that variant is just a &quot;Name.&quot;  So I think this is some weirdness with Cargo.  It seems the code Cargo has checked out for rust-xml isn&#39;t the same version that built the rlib that found it&#39;s way into my binary."}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 0, "last_activity_date": 1426926465, "creation_date": 1426926465, "answer_id": 29180712, "question_id": 29180215, "link": "https://stackoverflow.com/questions/29180215/where-does-the-ownedname-type-come-from/29180712#29180712", "title": "Where does the OwnedName type come from?", "body": "<p><code>xml::name::OwnedName</code> is the type of the <code>name</code> field of the <code>XmlEvent::StartElement</code> variant, not <code>&amp;'static str</code> (a string literal).</p>\n"}, {"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 3, "last_activity_date": 1426933883, "last_edit_date": 1426933883, "creation_date": 1426929926, "answer_id": 29181122, "question_id": 29180215, "link": "https://stackoverflow.com/questions/29180215/where-does-the-ownedname-type-come-from/29181122#29181122", "title": "Where does the OwnedName type come from?", "body": "<p>I'm very sorry that I didn't put API documentation for <code>xml-rs</code> anywhere yet :( I'll try to fix this as soon as I can.</p>\n\n<p><strong>Update</strong> fixed that, you can find the latest documentation <a href=\"http://netvl.github.io/xml-rs/xml/index.html\" rel=\"nofollow\">here</a>. For example, here is <a href=\"http://netvl.github.io/xml-rs/xml/name/struct.OwnedName.html\" rel=\"nofollow\"><code>OwnedName</code></a>.</p>\n\n<p><code>OwnedName</code> is a separate structure because XML names are not just strings - they consist of local name, namespace URI and optional prefix, so they have special representation. In order to check the local name only you can use <code>local_name</code> field of <code>OwnedName</code> which is a <code>String</code>:</p>\n\n<pre><code>for e in parser.events() {\n    match e {\n        XmlEvent::StartElement { name, attributes: _, namespace: _ } =&gt; {\n            match &amp;name.local_name[..] {\n                \"LexicalEntry\" =&gt;\n</code></pre>\n"}], "owner": {"reputation": 17673, "user_id": 139802, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/33c5692f72d9da5663651d034c4588b6?s=128&d=identicon&r=PG", "display_name": "Andrew Wagner", "link": "https://stackoverflow.com/users/139802/andrew-wagner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 29180712, "answer_count": 2, "score": 0, "last_activity_date": 1426933883, "creation_date": 1426922073, "question_id": 29180215, "link": "https://stackoverflow.com/questions/29180215/where-does-the-ownedname-type-come-from", "title": "Where does the OwnedName type come from?", "body": "<p>I am trying to parse an XML file in rust using rust-xml and am having trouble matching on the name of the tag:</p>\n\n<pre><code>for e in parser.events() {\n    match e {\n        XmlEvent::StartElement { name, attributes: _, namespace: _ } =&gt; {\n            match name {\n                \"LexicalEntry\" =&gt; {\n</code></pre>\n\n<p>This is the error message I am getting:</p>\n\n<pre><code>enter codesrc/main.rs|127 col 21| 127:35 error: mismatched types:\n||  expected `xml::name::OwnedName`,\n||     found `&amp;'static str`\n|| (expected struct `xml::name::OwnedName`,\n||     found &amp;-ptr) [E0308]\n|| src/main.rs:127                     \"LexicalEntry\" =&gt; {\n||                                     ^~~~~~~~~~~~~~\n here\n</code></pre>\n\n<p>I find this surprising because the OwnedName identifier doesn't show up anywhere in the code or dependencies for my project (including the rust sources!):</p>\n\n<blockquote>\n  <p>$ rgrep OwnedName . Binary file ./woordenboek/src/.main.rs.swp matches\n  ./woordenboek/src/main.rs:<br>\n  //xml::name::OwnedName(\"LexicalEntry\") => { Binary file\n  ./woordenboek/target/debug/deps/libxml-5882f08ff8adc5e5.rlib matches</p>\n</blockquote>\n\n<p>Where is this OwnedName type that I'm supposed to match against coming from?  Is the compiler inventing some type and inserting it into the xml library for some reason? </p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426899256, "post_id": 29177894, "comment_id": 46573439, "body": "Is there a concrete issue with the compiler error message that you need help with? Maybe you don&#39;t understand how the error message is phrased or terms it uses? You should <b>include</b> the error message and then tell us what part is causing you trouble. Otherwise, this question looks like <i>&quot;I don&#39;t know how to read error messages&quot;</i> and is liable to be closed for lack of effort."}], "answers": [{"comments": [{"owner": {"reputation": 91, "user_id": 4696088, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fab09e21af418646189ecde34a3ed24?s=128&d=identicon&r=PG&f=1", "display_name": "2bdkid", "link": "https://stackoverflow.com/users/4696088/2bdkid"}, "edited": false, "score": 0, "creation_date": 1426904395, "post_id": 29177938, "comment_id": 46574298, "body": "Seems to work. I thought 1.0 would make it choose f64 but I guess not."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1426898436, "creation_date": 1426898436, "answer_id": 29177938, "question_id": 29177894, "link": "https://stackoverflow.com/questions/29177894/cant-get-rust-types-correct/29177938#29177938", "title": "Can&#39;t get Rust types correct", "body": "<p>Let's look at the error message:</p>\n\n<pre><code>&lt;anon&gt;:11:28: 11:29 error: mismatched types:\n expected `_`,\n    found `i32`\n(expected floating-point variable,\n    found i32) [E0308]\n&lt;anon&gt;:11     let e: f64 = (1.0+(1.0/n)).powi(n);\n                                     ^\n</code></pre>\n\n<p>Here, Rust has <strong>very good</strong> messages: you need to provide a floating-point variable, not a integral one:</p>\n\n<pre><code>let e: f64 = (1.0+(1.0/n as f64)).powi(n);\n// HERE                ^~~~~~~~\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 4696088, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fab09e21af418646189ecde34a3ed24?s=128&d=identicon&r=PG&f=1", "display_name": "2bdkid", "link": "https://stackoverflow.com/users/4696088/2bdkid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 29177938, "answer_count": 1, "score": -2, "last_activity_date": 1426898436, "creation_date": 1426898024, "question_id": 29177894, "link": "https://stackoverflow.com/questions/29177894/cant-get-rust-types-correct", "title": "Can&#39;t get Rust types correct", "body": "<pre><code>use std::num::Float;\n\nfn main() {\n    for i in 1..101 {\n        euler(i)\n    }\n}\n\nfn euler(x: i32){\n    let n: i32 = x;\n    let e: f64 = (1.0+(1.0/n)).powi(n);\n\n    println!(\"Euler's number where n = {} is {}\", n, e);\n}\n</code></pre>\n\n<p>I have this code and I can't get it to compile. I'm pretty new to Rust so help would be appreciated!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426961497, "post_id": 29177449, "comment_id": 46587609, "body": "What would you like the behavior of <code>result_his.lock()</code> to be after moving the value out of <code>result_my</code>?"}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1426969506, "post_id": 29177449, "comment_id": 46590172, "body": "Ideally I&#39;d like something accepting <code>Mutex&lt;T&gt;</code> by value and yielding <code>T</code>, so far I don&#39;t need that mutex anymore. But ok, I understand now this could be too complex solution. Should I accept @SBSTP &#39;s answer now or it&#39;s better to make my own answer and accept it?"}], "answers": [{"comments": [{"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 1, "creation_date": 1426939801, "post_id": 29178576, "comment_id": 46581136, "body": "Thanks for an idea! But in this case it seems that my <code>Option</code> solution is even better, because I don&#39;t have to construct useless empty <code>T</code> second time for <code>mem::replace</code> arg (it could be significant when construction is not cheap)."}, {"owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "reply_to_user": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1426953232, "post_id": 29178576, "comment_id": 46585096, "body": "Well I don&#39;t know if you consider <code>None</code> to be construction, but <code>take</code> uses <code>mem::replace</code> and replaces the value by <code>None</code>. <a href=\"http://doc.rust-lang.org/src/core/option.rs.html#702\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/core/option.rs.html#702</a>"}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1426953673, "post_id": 29178576, "comment_id": 46585220, "body": "I mean that for my example <code>T</code> is of type <code>Result&lt;(), String&gt;</code>, so it&#39;s no problem to provide <code>Ok(())</code> as <code>mem::replace</code> parameter, but if it was something like <code>fs::File</code> it could be nontrivial task."}], "tags": [], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "is_accepted": false, "score": 3, "last_activity_date": 1426905604, "last_edit_date": 1426905604, "creation_date": 1426904810, "answer_id": 29178576, "question_id": 29177449, "link": "https://stackoverflow.com/questions/29177449/how-to-take-ownership-of-t-from-arcmutext/29178576#29178576", "title": "How to take ownership of T from Arc&lt;Mutex&lt;T&gt;&gt;?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow\"><code>mem::replace</code></a> to transfer ownership of a mutable reference by replacing it with a new value. (the old value is returned and moved)</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::mem;\n\nfn func() -&gt; Result&lt;(), String&gt; {\n    let result_my = Arc::new(Mutex::new(Ok(())));\n    let result_his = result_my.clone();\n\n    let t = std::thread::spawn(move || {\n        let mut result = result_his.lock().unwrap();\n        *result = Err(\"something failed\".to_string());\n    });\n\n    t.join();\n\n    let mut guard = result_my.lock().unwrap();\n    mem::replace(&amp;mut guard, Ok(()))\n}\n\nfn main() {\n    println!(\"func() -&gt; {:?}\", func());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": true, "score": 7, "last_activity_date": 1486953330, "last_edit_date": 1495540484, "creation_date": 1426979041, "answer_id": 29189079, "question_id": 29177449, "link": "https://stackoverflow.com/questions/29177449/how-to-take-ownership-of-t-from-arcmutext/29189079#29189079", "title": "How to take ownership of T from Arc&lt;Mutex&lt;T&gt;&gt;?", "body": "<p>The best solution I found so far is to wrap the result into an <code>Option</code> and then take it out:</p>\n\n<pre><code>fn func() -&gt; Result&lt;(), String&gt; {\n    let result_my = Arc::new(Mutex::new(Some(Ok(()))));\n    let result_his = result_my.clone();\n\n    let t = std::thread::spawn(move || {\n        let mut result = result_his.lock().unwrap();\n        *result = Some(Err(\"something failed\".to_string()));\n    });\n\n    t.join().expect(\"Unable to join thread\");\n\n    let mut guard = result_my.lock().unwrap();\n    guard.take().unwrap()\n}\n</code></pre>\n\n<p>It seems better than the <a href=\"https://stackoverflow.com/a/29178576/155423\"><code>mem::replace</code> solution proposed by @SBSTP</a> because there is no need to construct an empty <code>T</code> for swapping, and it prevents multiple extractions.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 19, "last_activity_date": 1590603592, "last_edit_date": 1590603592, "creation_date": 1486952937, "answer_id": 42195774, "question_id": 29177449, "link": "https://stackoverflow.com/questions/29177449/how-to-take-ownership-of-t-from-arcmutext/42195774#42195774", "title": "How to take ownership of T from Arc&lt;Mutex&lt;T&gt;&gt;?", "body": "<p>In Rust 1.15, you can use <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#method.try_unwrap\" rel=\"noreferrer\"><code>Arc::try_unwrap</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.into_inner\" rel=\"noreferrer\"><code>Mutex::into_inner</code></a>:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nfn func() -&gt; Result&lt;(), String&gt; {\n    let result_my = Arc::new(Mutex::new(Ok(())));\n    let result_thread = result_my.clone();\n\n    let t = std::thread::spawn(move || {\n        let mut result = result_thread.lock().unwrap();\n        *result = Err(\"something failed\".to_string());\n    });\n\n    t.join().expect(\"Unable to join threads\");\n\n    let lock = Arc::try_unwrap(result_my).expect(\"Lock still has multiple owners\");\n    lock.into_inner().expect(\"Mutex cannot be locked\")\n}\n\nfn main() {\n    println!(\"func() -&gt; {:?}\", func());\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html#method.into_inner\" rel=\"noreferrer\"><code>RwLock::into_inner</code></a> also exists since Rust 1.6.</p>\n"}], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4560, "favorite_count": 1, "accepted_answer_id": 29189079, "answer_count": 3, "score": 17, "last_activity_date": 1590603592, "creation_date": 1426894722, "last_edit_date": 1486953198, "question_id": 29177449, "link": "https://stackoverflow.com/questions/29177449/how-to-take-ownership-of-t-from-arcmutext", "title": "How to take ownership of T from Arc&lt;Mutex&lt;T&gt;&gt;?", "body": "<p>I want to return a value from a function which is protected by a <code>Mutex</code>, but cannot understand how to do it properly. This code does not work:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nfn func() -&gt; Result&lt;(), String&gt; {\n    let result_my = Arc::new(Mutex::new(Ok(())));\n    let result_his = result_my.clone();\n\n    let t = std::thread::spawn(move || {\n        let mut result = result_his.lock().unwrap();\n        *result = Err(\"something failed\".to_string());\n    });\n\n    t.join().expect(\"Unable to join thread\");\n\n    let guard = result_my.lock().unwrap();\n    *guard\n}\n\nfn main() {\n    println!(\"func() -&gt; {:?}\", func());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=15a74c1c8b03b65055927d635c5c12b5&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a></p>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:16:5\n   |\n16 |     *guard\n   |     ^^^^^^ cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1426902922, "post_id": 29176751, "comment_id": 46574070, "body": "It&#39;s not a matter of \u201cat the moment\u201d; returning an unsized type just can&#39;t make sense. So you need to return either the concrete type or a boxed trait object. That will not change."}, {"owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1426903288, "post_id": 29176751, "comment_id": 46574137, "body": "I wasn&#39;t exactly sure the status of this, I&#39;ve seen complaints and discussion about this limitation."}, {"owner": {"reputation": 3892, "user_id": 1236045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cdfcff173a4487d2a73a29e177930ec?s=128&d=identicon&r=PG&f=1", "display_name": "Micha\u0142 Politowski", "link": "https://stackoverflow.com/users/1236045/micha%c5%82-politowski"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1426926723, "post_id": 29176751, "comment_id": 46577929, "body": "@ChrisMorgan it depends on what you mean by &#39;returning an unsized type&#39;. There is a (postponed) <a href=\"https://github.com/rust-lang/rfcs/pull/977\" rel=\"nofollow noreferrer\">&quot;Add unsized return values&quot; RFC</a>."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1426989293, "post_id": 29176751, "comment_id": 46594632, "body": "And, more specific to this question, <a href=\"https://github.com/rust-lang/rfcs/issues/518\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/518</a>"}], "tags": [], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "is_accepted": true, "score": 1, "last_activity_date": 1426890386, "creation_date": 1426890386, "answer_id": 29176751, "question_id": 29176667, "link": "https://stackoverflow.com/questions/29176667/type-hinting-structs-as-traits/29176751#29176751", "title": "Type hinting structs as traits", "body": "<p>You can't return unboxed traits at the moment, they need to be wrapped in some sort of container.</p>\n\n<pre><code>fn next_command(&amp;self) -&gt; Box&lt;Command&gt; {\n    Box::new(Jump { height: 2 })\n}\n</code></pre>\n\n<p>This works.</p>\n"}], "owner": {"reputation": 4518, "user_id": 122446, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b5b7efa78974560f6cb1b21cefd309e?s=128&d=identicon&r=PG", "display_name": "Peter Horne", "link": "https://stackoverflow.com/users/122446/peter-horne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 29176751, "answer_count": 1, "score": 1, "last_activity_date": 1426890386, "creation_date": 1426889999, "question_id": 29176667, "link": "https://stackoverflow.com/questions/29176667/type-hinting-structs-as-traits", "title": "Type hinting structs as traits", "body": "<p>I have a method (<code>Journal.next_command()</code>) who's signature returns the <code>Command</code> trait. In the method I am attempting to return an instance of the <code>Jump</code> struct, which implements the <code>Command</code> trait:</p>\n\n<pre><code>trait Command {\n    fn execute(&amp;self);\n}\n\nstruct Jump {\n    height: u32,\n}\n\nimpl Command for Jump {\n    fn execute(&amp;self) {\n        println!(\"Jumping {} meters!\", self.height);\n    }\n}\n\nstruct Journal;\n\nimpl Journal {\n    fn next_command(&amp;self) -&gt; Command {\n        Jump { height: 2 }\n    }\n}\n\nfn main() {\n    let journal = Journal;\n    let command = journal.next_command();\n    command.execute();\n}\n</code></pre>\n\n<p>This fails to compile with the following error: </p>\n\n<pre><code>src/main.rs:19:9: 19:27 error: mismatched types:\n expected `Command`,\n    found `Jump`\n(expected trait Command,\n    found struct `Jump`) [E0308]\nsrc/main.rs:19         Jump { height: 2 }\n                       ^~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>How do I inform the compiler that <code>Jump</code> implements <code>Command</code>?</p>\n"}, {"tags": ["rust", "docopt"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1426898731, "post_id": 29176626, "comment_id": 46573325, "body": "Welcome to Stack Overflow! In the interest of getting better answers, please  take care to <a href=\"http://stackoverflow.com/help/how-to-ask\">ask better questions</a>. In this case, you should show some example code of what you tried. Or maybe some search results for things you&#39;ve looked up but don&#39;t understand. At the very least, you could write some example code (or pseudocode) that better explains what you want to do."}], "answers": [{"tags": [], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "is_accepted": false, "score": 0, "last_activity_date": 1426890846, "creation_date": 1426890846, "answer_id": 29176836, "question_id": 29176626, "link": "https://stackoverflow.com/questions/29176626/how-to-enter-command-line-argument-with-docops/29176836#29176836", "title": "How to enter command line argument with docops?", "body": "<p>You can use the <a href=\"http://doc.rust-lang.org/std/env/fn.args.html\" rel=\"nofollow\"><code>std::env::args</code></a> method to obtain an iterator. Then, you can use <code>.collect</code> on the iterator to get a vector of <code>String</code>s.</p>\n\n<pre><code>use std::env;\nfn main () {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    println!(\"{:?}\", args);\n}\n</code></pre>\n\n<p>Example output:</p>\n\n<pre><code>simon@Simon-Desktop:~$ rustc t.rs \nsimon@Simon-Desktop:~$ ./t abc def\n[\"./t\", \"abc\", \"def\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1261, "user_id": 3449832, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/i6vpv.gif?s=128&g=1", "display_name": "iNoob", "link": "https://stackoverflow.com/users/3449832/inoob"}, "is_accepted": false, "score": -1, "last_activity_date": 1427303899, "creation_date": 1427303899, "answer_id": 29262261, "question_id": 29176626, "link": "https://stackoverflow.com/questions/29176626/how-to-enter-command-line-argument-with-docops/29262261#29262261", "title": "How to enter command line argument with docops?", "body": "<p>Here is an example I have just finishing writing.</p>\n\n<pre><code>import os\nfrom docopt import docopt\n\narguments = docopt(__doc__, version= '1.0.0')\n\ndef walk(dir):\n\n    for root, dirs, files in os.walk(dir):\n        for filename in files:\n            print os.path.join(root, filename)\n\nif __name__ == '__main__':\n\n    if arguments['-d'] is None:\n        print __doc__\n        exit(0)\n    else:\n        walk(arguments['-d'])\n</code></pre>\n\n<p><strong>Note</strong> the <code>if arguments['-d'] is None:</code> line, this is how you call the arguments.</p>\n\n<p>This line <code>arguments = docopt(__doc__, version= '1.0.0')</code> sets up the <code>arguments</code> variable.</p>\n"}], "owner": {"reputation": 299, "user_id": 4659640, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/cbaf106b9a7badd5fbf1170ed303f4b1?s=128&d=identicon&r=PG&f=1", "display_name": "Lexka", "link": "https://stackoverflow.com/users/4659640/lexka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 170, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1427303899, "creation_date": 1426889780, "last_edit_date": 1426898599, "question_id": 29176626, "link": "https://stackoverflow.com/questions/29176626/how-to-enter-command-line-argument-with-docops", "title": "How to enter command line argument with docops?", "body": "<p>How can I enter command line arguments in Rust using docopts? I'd like to simply be able to enter a u8 in a vector and parse it with docopts.</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "is_accepted": true, "score": 9, "last_activity_date": 1426902668, "creation_date": 1426902668, "answer_id": 29178378, "question_id": 29175481, "link": "https://stackoverflow.com/questions/29175481/unable-to-import-export-macro/29178378#29178378", "title": "Unable to import/export macro", "body": "<p>Turns out that the order in which you declare modules matters.</p>\n\n<pre><code>mod json; // json uses macros from the \"macros\" module. can't find them.\n#[macro_use]\nmod macros;\n\n#[macro_use]\nmod macros;\nmod json; // json uses macros from the \"macros\" module. everything's ok this way.\n</code></pre>\n"}], "owner": {"reputation": 3031, "user_id": 576488, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6394f70dd009d4d16bb2c969c82c2ff1?s=128&d=identicon&r=PG", "display_name": "SBSTP", "link": "https://stackoverflow.com/users/576488/sbstp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1566, "favorite_count": 0, "accepted_answer_id": 29178378, "answer_count": 1, "score": 4, "last_activity_date": 1426902668, "creation_date": 1426884132, "question_id": 29175481, "link": "https://stackoverflow.com/questions/29175481/unable-to-import-export-macro", "title": "Unable to import/export macro", "body": "<p>I have a module named <code>macros.rs</code> which contains</p>\n\n<pre><code>/// Macro to easily implement FromError.\n/// from_error!(MyError, IoError, MyError::IoError)\nmacro_rules! from_error {\n    ( $t:ty, $err:ty, $name:path ) =&gt; {\n        use std;\n        impl std::error::FromError&lt;$err&gt; for $t {\n            fn from_error(err: $err) -&gt; $t {\n                $name(err)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>In my <code>main.rs</code> I import the module like this</p>\n\n<pre><code>#[macro_use] mod macros;\n</code></pre>\n\n<p>When I try to use <code>from_error</code> in other modules of my project, the compiler says <code>error: macro undefined: 'from_error!'</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1426857838, "post_id": 29166437, "comment_id": 46553697, "body": "I sometimes feel that I am asking something that&#39;s super obvious ^^ That really helps to narrow down my line of investigation so I will now look into Deref! Thank you very much."}], "answers": [{"comments": [{"owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "edited": false, "score": 0, "creation_date": 1426862265, "post_id": 29167591, "comment_id": 46556416, "body": "Great answer and I understand how it works now. I&#39;ve just implemented iter() for my <code>Column</code> struct by just implementing Deref for it. :)"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "edited": false, "score": 0, "creation_date": 1426862323, "post_id": 29167591, "comment_id": 46556468, "body": "Yeah, one of the nicest things of this feature is that it can be used by arbitrary code, not only in the standard library :)"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1426948514, "post_id": 29167591, "comment_id": 46583706, "body": "Deref also allows the coercion of <code>&amp;Vec&lt;T&gt;</code> to <code>&amp;[T]</code>, so this will compile: <code>let s: &amp;[u32] = &amp;v;</code>"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 12, "last_activity_date": 1426857890, "creation_date": 1426857890, "answer_id": 29167591, "question_id": 29166437, "link": "https://stackoverflow.com/questions/29166437/how-does-vect-implement-iter/29167591#29167591", "title": "How does Vec&lt;T&gt; implement iter()?", "body": "<p>Indeed, as fjh said, this happens due to how dereference operator functions in Rust and how methods are resolved.</p>\n\n<p>Rust has special <a href=\"http://doc.rust-lang.org/std/ops/trait.Deref.html\"><code>Deref</code></a> trait which allows values of the types implementing it to be \"dereferenced\" to obtain another type, usually one which is naturally connected to the source type. For example, an implementation like this one:</p>\n\n<pre><code>impl&lt;T&gt; Deref for Vec&lt;T&gt; {\n    type Target = [T];\n\n    fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a [T] { self.as_slice() }\n}\n</code></pre>\n\n<p>means that applying <code>*</code> unary operator to a <code>Vec&lt;T&gt;</code> would yield <code>[T]</code> which you would need to borrow again:</p>\n\n<pre><code>let v: Vec&lt;u32&gt; = vec![0; 10];\nlet s: &amp;[u32] = &amp;*v;\n</code></pre>\n\n<p>(note that even though <code>deref()</code> returns a reference, the dereference operator <code>*</code> returns <code>Target</code>, not <code>&amp;Target</code> - the compiler inserts automatic dereference if you do not borrow the dereferenced value immediately).</p>\n\n<p>This is the first piece of puzzle. The second one is how methods are resolved. Basically, when you write something like</p>\n\n<pre><code>v.iter()\n</code></pre>\n\n<p>the compiler first tries to find <code>iter()</code> defined on the type of <code>v</code> (in this case <code>Vec&lt;u32&gt;</code>). If no such method can be found, the compiler tries to insert an appropriate number of <code>*</code>s and <code>&amp;</code>s so the method invocation becomes valid. In this case it find that the following is indeed a valid invocation:</p>\n\n<pre><code>(&amp;*v).iter()\n</code></pre>\n\n<p>Remember, <code>Deref</code> on <code>Vec&lt;T&gt;</code> returns <code>&amp;[T]</code>, and slices do have <code>iter()</code> method defined on them. This is also how you can invoke e.g. a method taking <code>&amp;self</code> on a regular value - the compiler automatically inserts a reference operation for you.</p>\n"}], "owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1032, "favorite_count": 3, "accepted_answer_id": 29167591, "answer_count": 1, "score": 10, "last_activity_date": 1513197532, "creation_date": 1426854241, "last_edit_date": 1513197532, "question_id": 29166437, "link": "https://stackoverflow.com/questions/29166437/how-does-vect-implement-iter", "title": "How does Vec&lt;T&gt; implement iter()?", "body": "<p>I am looking at the code of <code>Vec&lt;T&gt;</code> to see how it implements <code>iter()</code> as I want to implement iterators for my struct:</p>\n\n<pre><code>pub struct Column&lt;T&gt; {\n    name: String,\n    vec: Vec&lt;T&gt;,\n    ...\n}\n</code></pre>\n\n<p>My goal is not to expose the fields and provide iterators to do looping, max, min, sum, avg, etc for a column.</p>\n\n<pre><code>fn test() {\n    let col: Column&lt;f32&gt; = ...;\n    let max = col.iter().max();\n}\n</code></pre>\n\n<p>I thought I would see how <code>Vec&lt;T&gt;</code> does iteration. I can see <code>iter()</code> is defined in <code>SliceExt</code> but it's implemented for <code>[T]</code> and not <code>Vec&lt;T&gt;</code> so I am stumped how you can call <code>iter()</code> from <code>Vec&lt;T&gt;</code>?</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "edited": false, "score": 0, "creation_date": 1426854020, "post_id": 29160025, "comment_id": 46551264, "body": "Unfortunately I won&#39;t be able to get back to this again until tomorrow, but I&#39;ll try it out and report back. Thanks."}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 0, "last_activity_date": 1426829466, "creation_date": 1426829466, "answer_id": 29160025, "question_id": 29158680, "link": "https://stackoverflow.com/questions/29158680/reuse-the-description-of-an-existing-error-when-creating-a-new-error/29160025#29160025", "title": "Reuse the description of an existing Error when creating a new Error", "body": "<p>I cannot test your code so I can't be sure. Isn't the ref keyword enough?</p>\n\n<pre><code>Err(byteorder::Error::Io(ref error)) =&gt; Err(error),\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "edited": false, "score": 0, "creation_date": 1427064559, "post_id": 29175173, "comment_id": 46613748, "body": "I ended up implementing the custom error wrapper, as it seems like the most idiomatic way of doing this. I haven&#39;t tried it yet, but the try!...map approach is neat."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 1, "last_activity_date": 1426882812, "creation_date": 1426882812, "answer_id": 29175173, "question_id": 29158680, "link": "https://stackoverflow.com/questions/29158680/reuse-the-description-of-an-existing-error-when-creating-a-new-error/29175173#29175173", "title": "Reuse the description of an existing Error when creating a new Error", "body": "<p>Your problem is in fact in that <a href=\"http://doc.rust-lang.org/std/io/struct.Error.html#method.new\" rel=\"nofollow\"><code>io::Error::new()</code></a>'s second parameter is <code>&amp;'static str</code>, while <a href=\"http://burntsushi.net/rustdoc/byteorder/enum.Error.html#method.description\" rel=\"nofollow\"><code>byteorder::Error::description()</code></a> returns a <code>&amp;'a str</code> where <code>'a</code> is lifetime of the error object itself which is less than <code>'static</code>. Hence you can't use it for <code>io::Error</code>'s description.</p>\n\n<p>The simplest fix would be moving <code>byteorder::Error</code> description to <code>detail</code> field of <code>io::Error</code>:</p>\n\n<pre><code>Err(error) =&gt;\n    Err(io::Error::new(\n        io::ErrorKind::Other,\n        \"byteorder error\",\n        Some(error.description().to_string())\n    )),\n</code></pre>\n\n<p>However, you should seriously consider making a custom wrapper error type which encapsulates all \"downstream\" errors. With properly written <a href=\"http://doc.rust-lang.org/std/error/trait.FromError.html\" rel=\"nofollow\"><code>FromError</code></a> instances you should be able to write something like</p>\n\n<pre><code>try!(cursor.read_u16::&lt;BigEndian&gt;()\n    .map(|value| Ack { block_number: value }))\n</code></pre>\n\n<p>instead of your whole match. Custom error wrappers will also help you when your program grows and more \"downstream\" error sources appear - you could just add new enum variants and/or <code>FromError</code> implementations to support these new errors.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1096614"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 1, "accepted_answer_id": 29175173, "answer_count": 2, "score": 4, "last_activity_date": 1426882812, "creation_date": 1426820496, "last_edit_date": 1426820669, "question_id": 29158680, "link": "https://stackoverflow.com/questions/29158680/reuse-the-description-of-an-existing-error-when-creating-a-new-error", "title": "Reuse the description of an existing Error when creating a new Error", "body": "<p>I have the following code in Rust, which does not compile, but shows the intent of what I'd like to do.</p>\n\n<pre><code>    pub fn parse(cursor: &amp;mut io::Cursor&lt;&amp;[u8]&gt;) -&gt; io::Result&lt;Ack&gt; {\n        use self::byteorder::{BigEndian, ReadBytesExt};\n        use self::core::error::Error;\n\n        match cursor.read_u16::&lt;BigEndian&gt;() {\n            Err(byteorder::Error::Io(error)) =&gt; Err(error),\n            Err(error) =&gt;\n                Err(io::Error::new(io::ErrorKind::Other, error.description(),\n                                   None)),\n            Ok(value) =&gt; Ok(Ack { block_number: value })\n        }\n    }\n</code></pre>\n\n<p>Essentially, I want to take the error description of an error returned by the byteorder library and use it to create the description of an error I'll pass back to the user of my library. This fails with <code>packets.rs:166:58: 166:63 error:</code>error<code>does not live long enough</code>, and I understand why.</p>\n\n<p>The byteorder library solves this issue by wrapping an <code>std::io::Result</code> in the <code>byteorder::Error::Io</code> constructor. However, I don't want to take this route because I'd have to define my own error type that wraps either an <code>std::io::Error</code> or a <code>byteorder::Error</code>. It seems to me that my users shouldn't know or care that I use the byteorder library, and it shouldn't be part of my interface.</p>\n\n<p>I'm a Rust newbie and don't yet know the idioms and best practices of the language and design. What are my options for dealing with this?</p>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 18, "last_activity_date": 1426818991, "creation_date": 1426818991, "answer_id": 29158459, "question_id": 29158406, "link": "https://stackoverflow.com/questions/29158406/creating-a-string-from-vecchar/29158459#29158459", "title": "Creating a string from Vec&lt;char&gt;", "body": "<p>The iterator based approach with <code>.collect</code> should work, after updating for language changes:</p>\n\n<pre><code>char_vector.iter().cloned().collect::&lt;String&gt;();\n</code></pre>\n\n<p>(I've chosen to replace <code>.map(|c| *c)</code> with <code>.cloned()</code> but either works.)</p>\n"}, {"comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1426831346, "post_id": 29160153, "comment_id": 46540433, "body": "In this case, the clone is of a <code>char</code>, which is super cheap (it&#39;ll compile down to just a pointer dereference, taking the char from memory into a (4-byte) register). Of course, avoiding clones is often important for perfromance, but <code>char</code> isn&#39;t such a type, and relinquishing control of the <code>Vec</code> may not be desirable."}, {"owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1426834424, "post_id": 29160153, "comment_id": 46541537, "body": "Didn&#39;t know for the super cheap part. Just wanted to provide alternatives for clone which could help in other less cheap situations"}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 7, "last_activity_date": 1426830273, "creation_date": 1426830273, "answer_id": 29160153, "question_id": 29158406, "link": "https://stackoverflow.com/questions/29158406/creating-a-string-from-vecchar/29160153#29160153", "title": "Creating a string from Vec&lt;char&gt;", "body": "<p>If your vector can be consumed, you can also use <code>into_iter</code> to avoid the <code>clone</code></p>\n\n<pre><code>fn main() {\n    let char_vector = vec!['h', 'e', 'l', 'l', 'o'];\n    let str: String = char_vector.into_iter().collect();\n\n    println!(\"{}\", str);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1426844791, "post_id": 29162077, "comment_id": 46546316, "body": "Oh, right, I misread the constructor (it multiplies the capacity by the element size, but only uses that for the allocation size, not for the capacity). Well, now we have an instructive example why <code>unsafe</code> should not be used lightly ;-) The fix should be easy though, see the documentation of <code>Vec::from_raw_parts</code>."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1426907017, "post_id": 29162077, "comment_id": 46574634, "body": "Neat trick. &quot;Since our chars are definitely unicode, we can encode them to utf8 without checking if it worked&quot;: fwiw, <code>encode_utf8</code> operates on <code>char</code>s, which are always valid unicode: the error is if the input buffer is too short (e.g. trying to write a 4 byte code point into <code>&amp;mut v[i..i + 2]</code>)."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1426940605, "post_id": 29162077, "comment_id": 46581383, "body": "thanks, added that info"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 7, "last_activity_date": 1437988086, "last_edit_date": 1592644375, "creation_date": 1426839098, "answer_id": 29162077, "question_id": 29158406, "link": "https://stackoverflow.com/questions/29158406/creating-a-string-from-vecchar/29162077#29162077", "title": "Creating a string from Vec&lt;char&gt;", "body": "<p>You can convert the <code>Vec</code> into a <code>String</code> without doing any allocations. It requires quite some unsafe code though:</p>\n<pre><code>#![feature(raw, unicode)]\nuse std::raw::Repr;\nuse std::slice::from_raw_parts_mut;\n\nfn inplace_to_string(v: Vec&lt;char&gt;) -&gt; String {\n    unsafe {\n        let mut i = 0;\n        {\n            let ch_v = &amp;v[..];\n            let r = ch_v.repr();\n            let p: &amp;mut [u8] = from_raw_parts_mut(r.data as *mut u8, r.len*4);\n            for ch in ch_v {\n                i += ch.encode_utf8(&amp;mut p[i..i+4]).unwrap();\n            }\n        }\n        let p = v.as_ptr();\n        let cap = v.capacity()*4;\n        std::mem::forget(v);\n        let v = Vec::from_raw_parts(p as *mut u8, i, cap);\n        String::from_utf8_unchecked(v)\n    }\n}\n\nfn main() {\n    let char_vector = vec!['h', '\u00e4', 'l', 'l', '\u00f6'];\n    let str: String = char_vector.iter().cloned().collect();\n    let str2 = inplace_to_string(char_vector);\n\n    println!(&quot;{}&quot;, str);\n    println!(&quot;{}&quot;, str2);\n}\n</code></pre>\n<p><a href=\"http://is.gd/6XfNtE\" rel=\"nofollow noreferrer\">PlayPen</a></p>\n<h1>Detailed Explanation</h1>\n<p>This creates a mutable <code>u8</code> slice and a <code>char</code> slice simultaneously to the same buffer (breaking all Rust guarantees). Note that the <code>u8</code> slice is four times as large as the <code>char</code> slice, since <code>char</code> always takes up 4 bytes.</p>\n<pre><code>let ch_v = &amp;v[..];\nlet r = ch_v.repr();\nlet v: &amp;mut [u8] = from_raw_parts_mut(r.data as *mut u8, r.len*4);\n</code></pre>\n<p>We need that to iterate over the unicode chars and replace them by their utf8 encoded counterpart. Since utf8 is always shorter or the same length as unicode, we can guarantee that we never overwrite any part we haven't read yet.</p>\n<pre><code>for ch in ch_v {\n    i += ch.encode_utf8(&amp;mut v[i..i+4]).unwrap();\n}\n</code></pre>\n<p>Since a <code>char</code> is always unicode and our buffer is always exactly 4 bytes (which is the maximum number of bytes a utf8 encoded unicode char will need), we can encode our chars to utf8 without checking if it worked (it will always work). The <code>encode_utf8</code> function returns the length of the utf8 representation. Our index <code>i</code> is the location of the last written utf8 char.</p>\n<p>Finally we need to do some cleaning up. Our vector is still of type <code>Vec&lt;char&gt;</code>. We get all the info we need (Pointer to the heap allocated array and the capacity)</p>\n<pre><code>let p = v.as_ptr();\nlet cap = v.capacity()*4;\n</code></pre>\n<p>Then we release the previous vector from all obligations like freeing memory.</p>\n<pre><code>std::mem::forget(v);\n</code></pre>\n<p>and finally recreate the u8 vector with correct length and capacity, and directly turn it into a String. The conversion to String does not need to be checked, as we already know the utf8 is correct, since the original <code>Vec&lt;char&gt;</code> could only contain correct unicode chars.</p>\n<pre><code>let v = Vec::from_raw_parts(p as *mut u8, i, cap);\nString::from_utf8_unchecked(v)\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user985916"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6636, "favorite_count": 2, "closed_date": 1459955332, "accepted_answer_id": 29158459, "answer_count": 3, "score": 6, "last_activity_date": 1437988086, "creation_date": 1426818617, "last_edit_date": 1495535486, "question_id": 29158406, "link": "https://stackoverflow.com/questions/29158406/creating-a-string-from-vecchar", "closed_reason": "Duplicate", "title": "Creating a string from Vec&lt;char&gt;", "body": "<p>I've got a <code>Vec&lt;char&gt;</code> that I need to turn into a <code>&amp;str</code> or <code>String</code>, but I'm unsure of the best way to do this. I've looked around and every resource I've found seems to be out-dated in some way. The answers in <a href=\"https://stackoverflow.com/questions/23430735/how-to-convert-vecchar-to-a-string\">this question</a> don't seem to be applicable for the newest build.</p>\n\n<p>I'm using the nightly for 2015-3-19</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 18, "last_activity_date": 1426811094, "creation_date": 1426811094, "answer_id": 29157371, "question_id": 29157300, "link": "https://stackoverflow.com/questions/29157300/field-of-struct-is-private-when-importing-module/29157371#29157371", "title": "field of struct is private when importing module", "body": "<p>You've declared the struct as public, but not the fields. To make both fields public, the struct declaration should look as follows:</p>\n\n<pre><code>pub struct Column {\n    pub name: String,\n    pub vec: Vec&lt;i32&gt;,\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "edited": false, "score": 2, "creation_date": 1426838031, "post_id": 29157375, "comment_id": 46543008, "body": "Ahhh, ok. I assumed that using <code>pub struct</code> would make the struct&#39;s fields as that&#39;s the impression I got from the book."}], "tags": [], "owner": {"reputation": 5163, "user_id": 1435461, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/05f6236ee5ec04b27e27f504ebdd3744?s=128&d=identicon&r=PG", "display_name": "rcorre", "link": "https://stackoverflow.com/users/1435461/rcorre"}, "is_accepted": true, "score": 31, "last_activity_date": 1426811110, "creation_date": 1426811110, "answer_id": 29157375, "question_id": 29157300, "link": "https://stackoverflow.com/questions/29157300/field-of-struct-is-private-when-importing-module/29157375#29157375", "title": "field of struct is private when importing module", "body": "<p>Try labeling the fields as public:</p>\n\n<pre><code>pub struct Column {\n    pub name: String,\n    pub vec: Vec&lt;i32&gt;,\n}\n</code></pre>\n\n<p>Labeling <code>Column</code> as <code>pub</code> means that other modules can use the struct itself, but not necessarily all of its members.</p>\n"}], "owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7915, "favorite_count": 1, "accepted_answer_id": 29157375, "answer_count": 2, "score": 19, "last_activity_date": 1426811110, "creation_date": 1426810655, "question_id": 29157300, "link": "https://stackoverflow.com/questions/29157300/field-of-struct-is-private-when-importing-module", "title": "field of struct is private when importing module", "body": "<p>I am trying to split my project into multiple files but I am having problems importing them into my <code>main.rs</code> as it says the Column's fields are private but I have declared the struct as public. </p>\n\n<p>src/column.rs</p>\n\n<pre><code>pub struct Column {\n    name: String,\n    vec: Vec&lt;i32&gt;,\n}\n</code></pre>\n\n<p>src/main.rs</p>\n\n<pre><code>pub mod column;\n\nfn main() {\n    let col = column::Column{name:\"a\".to_string(), vec:vec![1;10]};\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>cargo build </p>\n\n<pre><code>src/main.rs:4:15: 4:75 error: field `name` of struct `column::Column` is private\nsrc/main.rs:4     let col = column::Column{name:\"a\".to_string(), vec:vec![1;10]};\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/main.rs:4:15: 4:75 error: field `vec` of struct `column::Column` is private\nsrc/main.rs:4     let col = column::Column{name:\"a\".to_string(), vec:vec![1;10]};\n</code></pre>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1426812594, "post_id": 29156978, "comment_id": 46535695, "body": "&quot;When a library ... then it should be up to that library to decide how to handle that&quot; -- yes, but maybe it is a good idea to just pass it to the library client. For example, the database library cannot do anything with <code>io::Error</code> in case it cannot open a file, but library user can, so it just wraps <code>io::Error</code> and returns as a result. But this db library user can be another library: for example, a cache which uses db as a backend. And this cache library in its turn can have errors of type <code>io::Errors</code>, so why just don&#39;t return it to the client, if it&#39;s going to handle them in the same way?"}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1426812826, "post_id": 29156978, "comment_id": 46535756, "body": "...or maybe it is a good idea to always wrap these errors into spreading <code>enum</code> trees in <code>FromError</code> impls to know exactly where the problem has occurred? Like manually building exception stacktrace."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1426816066, "post_id": 29156978, "comment_id": 46536559, "body": "For your DB example, I would expect to see <code>Error:UnableToOpenStorage(io::Error)</code>. But I would not expect the cache library to perform some IO operation and then ask the DB to construct an error from the result. But your cache layer could just re-wrap (or optionally unwrap and then wrap) the error."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1426808676, "creation_date": 1426808676, "answer_id": 29156978, "question_id": 29156200, "link": "https://stackoverflow.com/questions/29156200/stderrorfromerror-idiomatic-usage/29156978#29156978", "title": "std::error::FromError idiomatic usage", "body": "<blockquote>\n  <p>there is no conversion from <code>num::ParseIntError</code> to <code>Error</code></p>\n</blockquote>\n\n<p>It does seem like you doing the wrong thing, conceptually. When a library generates an <code>io::Error</code>, like your first example, then it should be <em>up to that library</em> to decide how to handle that error. However, from your question, it sounds like you are generating <code>io::Error</code>s <em>somewhere else</em> and then wanting to treat them as the first library would.</p>\n\n<p>This seems very strange. I wouldn't expect to hand an error generated by library B to library A and say \"wrap this error as if you made it\". Maybe the thing you are doing should be <strong>a part</strong> of the appropriate library? Then it can handle the errors as it normally would. Perhaps you could just accept a closure and call the error-conversion as appropriate.</p>\n\n<blockquote>\n  <p>So definitely there is a clean way for Rust to convert one type to another <em>without my explicit help</em>.</p>\n</blockquote>\n\n<p>(Emphasis mine). That seems <strong>really scary</strong> to me. How many steps should be allowed in an implicit conversion? What if there are multiple paths, or even if there are cycles? Having those as explicit steps seems reasonable to me.</p>\n\n<blockquote>\n  <p>I can even understand the origin of problem [...], but I can't get how to fix it.</p>\n</blockquote>\n\n<p>I don't think it is possible to fix this. If you could implement a trait for the same type in multiple different ways, there's simply no way to pick between them, and so the code is ambiguous and rejected by the compiler.</p>\n"}], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1087, "favorite_count": 0, "accepted_answer_id": 29156978, "answer_count": 1, "score": 2, "last_activity_date": 1426808676, "creation_date": 1426804352, "question_id": 29156200, "link": "https://stackoverflow.com/questions/29156200/stderrorfromerror-idiomatic-usage", "title": "std::error::FromError idiomatic usage", "body": "<p>I'm trying to involve <code>std::error::FromError</code> trait as widely as possible in my projects to take advantage of <code>try!</code> macro. However, I'm a little lost with these errors conversions between different mods.</p>\n\n<p>For example, I have mod (or crate) <code>a</code>, which has some error handling using it's own <code>Error</code> type, and implements errors conversion for <code>io::Error</code>:</p>\n\n<pre><code>mod a {\n    use std::io;\n    use std::io::Write;\n    use std::error::FromError;\n\n    #[derive(Debug)]\n    pub struct Error(pub String);\n\n    impl FromError&lt;io::Error&gt; for Error {\n        fn from_error(err: io::Error) -&gt; Error {\n            Error(format!(\"{}\", err))\n        }\n    }\n\n    pub fn func() -&gt; Result&lt;(), Error&gt; {\n        try!(writeln!(&amp;mut io::stdout(), \"Hello, world!\"));\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>I also have mod <code>b</code> in the same situation, but it implements error conversion for <code>num::ParseIntError</code>:</p>\n\n<pre><code>mod b {\n    use std::str::FromStr;\n    use std::error::FromError;\n    use std::num::ParseIntError;\n\n    #[derive(Debug)]\n    pub struct Error(pub String);\n\n    impl FromError&lt;ParseIntError&gt; for Error {\n        fn from_error(err: ParseIntError) -&gt; Error {\n            Error(format!(\"{}\", err))\n        }\n    }\n\n    pub fn func() -&gt; Result&lt;usize, Error&gt; {\n        Ok(try!(FromStr::from_str(\"14\")))\n    }\n}\n</code></pre>\n\n<p>Now I'm in my current mod <code>super</code>, which has it's own <code>Error</code> type, and my goal is to write a procedure like this:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Error(String);\n\nfn func() -&gt; Result&lt;(), Error&gt; {\n    println!(\"a::func() -&gt; {:?}\", try!(a::func()));\n    println!(\"b::func() -&gt; {:?}\", try!(b::func()));\n    Ok(())\n}\n</code></pre>\n\n<p>So I definitely need to implement conversions from <code>a::Error</code> and <code>b::Error</code> for my <code>Error</code> type:</p>\n\n<pre><code>impl FromError&lt;a::Error&gt; for Error {\n    fn from_error(a::Error(contents): a::Error) -&gt; Error {\n        Error(contents)\n    }\n}\n\nimpl FromError&lt;b::Error&gt; for Error {\n    fn from_error(b::Error(contents): b::Error) -&gt; Error {\n        Error(contents)\n    }\n}\n</code></pre>\n\n<p>Ok, it works up until that time. And now I need to write something like this:</p>\n\n<pre><code>fn another_func() -&gt; Result&lt;(), Error&gt; {\n    let _ = try!(&lt;usize as std::str::FromStr&gt;::from_str(\"14\"));\n    Ok(())\n}\n</code></pre>\n\n<p>And here a problem raises, because there is no conversion from <code>num::ParseIntError</code> to <code>Error</code>. So it seems that I have to implement it again. But why should I? There is a conversion implemented already from <code>num::ParseIntError</code> to <code>b::Error</code>, and there is also a conversion from <code>b::Error</code> to <code>Error</code>. So definitely there is a clean way for rust to convert one type to another without my explicit help.</p>\n\n<p>So, I removed my <code>impl FromError&lt;b::Error&gt;</code> block and tried this blanket impl instead:</p>\n\n<pre><code>impl&lt;E&gt; FromError&lt;E&gt; for Error where b::Error: FromError&lt;E&gt; {\n    fn from_error(err: E) -&gt; Error {\n        let b::Error(contents) = &lt;b::Error as FromError&lt;E&gt;&gt;::from_error(err);\n        Error(contents)\n    }\n}\n</code></pre>\n\n<p>And it's even worked! However, I didn't succeed to repeat this trick with <code>a::Error</code>, because rustc started to complain about conflicting implementations:</p>\n\n<pre><code>experiment.rs:57:1: 62:2 error: conflicting implementations for trait `core::error::FromError` [E0119]\nexperiment.rs:57 impl&lt;E&gt; FromError&lt;E&gt; for Error where a::Error: FromError&lt;E&gt; {\nexperiment.rs:58     fn from_error(err: E) -&gt; Error {\nexperiment.rs:59         let a::Error(contents) = &lt;a::Error as FromError&lt;E&gt;&gt;::from_error(err);\nexperiment.rs:60         Error(contents)\nexperiment.rs:61     }\nexperiment.rs:62 }\nexperiment.rs:64:1: 69:2 note: note conflicting implementation here\nexperiment.rs:64 impl&lt;E&gt; FromError&lt;E&gt; for Error where b::Error: FromError&lt;E&gt; {\nexperiment.rs:65     fn from_error(err: E) -&gt; Error {\nexperiment.rs:66         let b::Error(contents) = &lt;b::Error as FromError&lt;E&gt;&gt;::from_error(err);\nexperiment.rs:67         Error(contents)\nexperiment.rs:68     }\nexperiment.rs:69 }\n</code></pre>\n\n<p>I can even understand the origin of problem (one type <code>FromError&lt;E&gt;</code> can be implemented both for <code>a::Error</code> and <code>b::Error</code>), but I can't get how to fix it.</p>\n\n<p>Theoretically, maybe this is a wrong way and there is another solution for my problem? Or I still have to repeat manually all errors conversions in every new module? </p>\n"}, {"tags": ["loops", "tuples", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1426780723, "post_id": 29148544, "comment_id": 46520806, "body": "Note that in Rust the arity of the tuple is known at compile-time (unlike Python), and no Rust does not have <i>variadic parameters</i> yet; tuples are special cased by the compiler and traits are implemented for a number of arities &quot;manually&quot;."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1426835239, "post_id": 29148544, "comment_id": 46541879, "body": "Python has a tendency to glom types together where Rust has the opposite tendency; in Python, all tuples are of the one type and all functions of the one type; in Rust, each combination of field types in a tuple is a different type, and each function is its own unique type. It&#39;s a difference in approach: in Python all is resolved at runtime; in Rust, at compile time. Tuples are in Rust simply unnamed tuple structs, with no relation to one another."}, {"owner": {"reputation": 173, "user_id": 4690345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/35c169d723843777350acd7c3db47ced?s=128&d=identicon&r=PG&f=1", "display_name": "oleid", "link": "https://stackoverflow.com/users/4690345/oleid"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1426870396, "post_id": 29148544, "comment_id": 46561862, "body": "@MatthieuM.: Would it be possible to get the arity of a tuple as constant?"}, {"owner": {"reputation": 173, "user_id": 4690345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/35c169d723843777350acd7c3db47ced?s=128&d=identicon&r=PG&f=1", "display_name": "oleid", "link": "https://stackoverflow.com/users/4690345/oleid"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1426870769, "post_id": 29148544, "comment_id": 46562100, "body": "@ChrisMorgan: Still, if there are different types in a tuple, it should be possible to call a certain function of some trait, if all types implement that trait, e.g. &quot;.to_string()&quot;. I realize, that calling arbitrary functions is not possible, as overloading isn&#39;t implemented atm."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 2, "creation_date": 1426897445, "post_id": 29148544, "comment_id": 46573078, "body": "@oleid: not necessarily, only if it&#39;s implemented explicitly. After all, what would you expect from the human-friendly <code>fmt::Display</code> (which is what <code>.to_string()</code> uses)? <code>a b c</code>, <code>a, b, c</code>, <code>(a, b, c)</code>? None of them is \u201cright\u201d, none of them is \u201ccorrect\u201d."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 21, "last_activity_date": 1528381199, "last_edit_date": 1528381199, "creation_date": 1427036884, "answer_id": 29195954, "question_id": 29148544, "link": "https://stackoverflow.com/questions/29148544/how-to-iterate-or-map-over-tuples/29195954#29195954", "title": "How to iterate or map over tuples?", "body": "<p>Here's an overly-clever macro solution:</p>\n\n<pre><code>trait JoinTuple {\n    fn join_tuple(&amp;self, sep: &amp;str) -&gt; String;\n}\n\nmacro_rules! tuple_impls {\n    () =&gt; {};\n\n    ( ($idx:tt =&gt; $typ:ident), $( ($nidx:tt =&gt; $ntyp:ident), )* ) =&gt; {\n        impl&lt;$typ, $( $ntyp ),*&gt; JoinTuple for ($typ, $( $ntyp ),*)\n        where\n            $typ: ::std::fmt::Display,\n            $( $ntyp: ::std::fmt::Display ),*\n        {\n            fn join_tuple(&amp;self, sep: &amp;str) -&gt; String {\n                let parts: &amp;[&amp;::std::fmt::Display] = &amp;[&amp;self.$idx, $( &amp;self.$nidx ),*];\n                parts.iter().rev().map(|x| x.to_string()).collect::&lt;Vec&lt;_&gt;&gt;().join(sep)\n            }\n        }\n\n        tuple_impls!($( ($nidx =&gt; $ntyp), )*);\n    };\n}\n\ntuple_impls!(\n    (9 =&gt; J),\n    (8 =&gt; I),\n    (7 =&gt; H),\n    (6 =&gt; G),\n    (5 =&gt; F),\n    (4 =&gt; E),\n    (3 =&gt; D),\n    (2 =&gt; C),\n    (1 =&gt; B),\n    (0 =&gt; A),\n);\n\nfn main() {\n    let a = (1.3, 1, 'c');\n\n    let s = a.join_tuple(\", \");\n    println!(\"{}\", s);\n    assert_eq!(\"1.3, 1, c\", s);\n}\n</code></pre>\n\n<p>The basic idea is that we can take a tuple and unpack it into a <code>&amp;[&amp;fmt::Display]</code>. Once we have that, it's straight-forward to map each item into a string and then combine them all with a separator. Here's what that would look like on its own:</p>\n\n<pre><code>fn main() {\n    let tup = (1.3, 1, 'c');\n\n    let slice: &amp;[&amp;::std::fmt::Display] = &amp;[&amp;tup.0, &amp;tup.1, &amp;tup.2];\n    let parts: Vec&lt;_&gt; = slice.iter().map(|x| x.to_string()).collect();\n    let joined = parts.join(\", \");\n\n    println!(\"{}\", joined);\n}\n</code></pre>\n\n<p>The next step would be to create a trait and implement it for the specific case:</p>\n\n<pre><code>trait TupleJoin {\n    fn tuple_join(&amp;self, sep: &amp;str) -&gt; String;\n}\n\nimpl&lt;A, B, C&gt; TupleJoin for (A, B, C)\nwhere\n    A: ::std::fmt::Display,\n    B: ::std::fmt::Display,\n    C: ::std::fmt::Display,\n{\n    fn tuple_join(&amp;self, sep: &amp;str) -&gt; String {\n        let slice: &amp;[&amp;::std::fmt::Display] = &amp;[&amp;self.0, &amp;self.1, &amp;self.2];\n        let parts: Vec&lt;_&gt; = slice.iter().map(|x| x.to_string()).collect();\n        parts.join(sep)\n    }\n}\n\nfn main() {\n    let tup = (1.3, 1, 'c');\n\n    println!(\"{}\", tup.tuple_join(\", \"));\n}\n</code></pre>\n\n<p>This only implements our trait for a specific size of tuple, which may be fine for certain cases, but certainly isn't <strong>cool</strong> yet. The <a href=\"https://github.com/rust-lang/rust/blob/ecf8c64e1b1b60f228f0c472c0b0dab4a5b5aa61/src/libcore/tuple.rs#L46-L117\" rel=\"noreferrer\">standard library</a> uses some macros to reduce the drudgery of the copy-and-paste that you would need to do to get more sizes. I decided to be <em>even lazier</em> and reduce the copy-and-paste of that solution!</p>\n\n<p>Instead of clearly and explicitly listing out each size of tuple and the corresponding index/generic name, I made my macro recursive. That way, I only have to list it out once, and all the smaller sizes are just part of the recursive call. Unfortunately, I couldn't figure out how to make it go in a forwards direction, so I just flipped everything around and went backwards. This means there's a small inefficiency in that we have to use a reverse iterator, but that should overall be a small price to pay. </p>\n"}, {"tags": [], "owner": {"reputation": 1259, "user_id": 1814775, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/ea9a58ab403c34bc21cde3a006d2e6d8?s=128&d=identicon&r=PG", "display_name": "lloydmeta", "link": "https://stackoverflow.com/users/1814775/lloydmeta"}, "is_accepted": false, "score": 2, "last_activity_date": 1476627714, "last_edit_date": 1495535409, "creation_date": 1476625076, "answer_id": 40070907, "question_id": 29148544, "link": "https://stackoverflow.com/questions/29148544/how-to-iterate-or-map-over-tuples/40070907#40070907", "title": "How to iterate or map over tuples?", "body": "<p>The <a href=\"https://stackoverflow.com/a/29195954/155423\">other answer</a> helped me a lot because it clearly illustrated the power of Rust's simple macro system once you make use of recursion and pattern matching.</p>\n\n<p>I've managed to make a few crude improvements (might be able to make the patterns a bit simpler, but it's rather tricky) on top of it so that the tuple accessor->type list is reversed by the macro at compile time before expansion into the trait implementation so that we no longer need to have a <code>.rev()</code> call at runtime, thus making it more efficient:</p>\n\n<pre><code>trait JoinTuple {\n    fn join_tuple(&amp;self, sep: &amp;str) -&gt; String;\n}\n\nmacro_rules! tuple_impls {\n    () =&gt; {}; // no more\n\n    (($idx:tt =&gt; $typ:ident), $( ($nidx:tt =&gt; $ntyp:ident), )*) =&gt; {\n        /*\n         * Invoke recursive reversal of list that ends in the macro expansion implementation\n         * of the reversed list\n        */\n        tuple_impls!([($idx, $typ);] $( ($nidx =&gt; $ntyp), )*);\n        tuple_impls!($( ($nidx =&gt; $ntyp), )*); // invoke macro on tail\n    };\n\n    /*\n     * ([accumulatedList], listToReverse); recursively calls tuple_impls until the list to reverse\n     + is empty (see next pattern)\n    */\n    ([$(($accIdx: tt, $accTyp: ident);)+]  ($idx:tt =&gt; $typ:ident), $( ($nidx:tt =&gt; $ntyp:ident), )*) =&gt; {\n      tuple_impls!([($idx, $typ); $(($accIdx, $accTyp); )*] $( ($nidx =&gt; $ntyp), ) *);\n    };\n\n    // Finally expand into the implementation\n    ([($idx:tt, $typ:ident); $( ($nidx:tt, $ntyp:ident); )*]) =&gt; {\n        impl&lt;$typ, $( $ntyp ),*&gt; JoinTuple for ($typ, $( $ntyp ),*)\n            where $typ: ::std::fmt::Display,\n                  $( $ntyp: ::std::fmt::Display ),*\n        {\n            fn join_tuple(&amp;self, sep: &amp;str) -&gt; String {\n                let parts = vec![self.$idx.to_string(), $( self.$nidx.to_string() ),*];\n                parts.join(sep)\n            }\n        }\n    }\n}\n\ntuple_impls!(\n    (9 =&gt; J),\n    (8 =&gt; I),\n    (7 =&gt; H),\n    (6 =&gt; G),\n    (5 =&gt; F),\n    (4 =&gt; E),\n    (3 =&gt; D),\n    (2 =&gt; C),\n    (1 =&gt; B),\n    (0 =&gt; A),\n);\n\n#[test]\nfn test_join_tuple() {\n    let a = ( 1.3, 1, 'c' );\n\n    let s = a.join_tuple(\", \");\n    println!(\"{}\", s);\n    assert_eq!(\"1.3, 1, c\", s);\n}\n</code></pre>\n"}], "owner": {"reputation": 173, "user_id": 4690345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/35c169d723843777350acd7c3db47ced?s=128&d=identicon&r=PG&f=1", "display_name": "oleid", "link": "https://stackoverflow.com/users/4690345/oleid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12273, "favorite_count": 4, "accepted_answer_id": 29195954, "answer_count": 2, "score": 16, "last_activity_date": 1528381199, "creation_date": 1426778552, "last_edit_date": 1426779346, "question_id": 29148544, "link": "https://stackoverflow.com/questions/29148544/how-to-iterate-or-map-over-tuples", "title": "How to iterate or map over tuples?", "body": "<p>My initial problem was to convert a tuple of different types to a string. In Python, this would be something like:</p>\n\n<pre><code>&gt;&gt; a = ( 1.3, 1, 'c' )\n&gt;&gt; b = map(  lambda x:  str(x), a )\n['1.3', '1', 'c']\n\n&gt;&gt; \" \".join(b)\n'1.3 1 c\"\n</code></pre>\n\n<p>Yet, Rust doesn't support map on tuples -- only on vector-like structures. Obviously, this is due to being able to pack different types into a tuple and the lack of function overloading. Also, I couldn't find a way to get the tuple length at runtime. So, I guess, a macro would be needed to do the conversion.</p>\n\n<p>As a start, I tried to match the head of an tuple, something like: </p>\n\n<pre><code>// doesn't work\nmatch some_tuple {\n    (a, ..) =&gt; println!(\"{}\", a),\n          _ =&gt; ()\n}\n</code></pre>\n\n<p>So, my question: </p>\n\n<ol>\n<li>Is it possible, using library functions, to convert a tuple to a string, specifying an arbitrary separator?</li>\n<li>How to write a macro to be able to map functions to arbitrary sized tuples?</li>\n</ol>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1426773153, "post_id": 29146092, "comment_id": 46515318, "body": "can&#39;t you simply use <code>git = &quot;&#47;path&#47;to&#47;package&quot;</code> like you&#39;d use a github package that isn&#39;t on crates.io? I thought whatever&#39;s behind the git link will be processed by git and not cargo."}], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1426834860, "post_id": 29146940, "comment_id": 46541710, "body": "And the version can be put in if desired with <code>version = &quot;0.0.1&quot;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1426774533, "creation_date": 1426774533, "answer_id": 29146940, "question_id": 29146092, "link": "https://stackoverflow.com/questions/29146092/what-is-npm-install-my-another-package-in-rusts-cargo/29146940#29146940", "title": "What is ``npm install ../my-another-package&#39;&#39; in Rust&#39;s Cargo?", "body": "<p>You want what Cargo calls a <a href=\"http://doc.crates.io/guide.html#path-dependencies\" rel=\"nofollow\">\"path dependency\"</a>:</p>\n\n<pre><code>[dependencies.my-another-package]\npath = \"path/to/my-another-package\"\n</code></pre>\n"}], "owner": {"reputation": 157, "user_id": 4685140, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-T08eTE_l_BQ/AAAAAAAAAAI/AAAAAAAAC6A/Q4pYAI2JIPc/photo.jpg?sz=128", "display_name": "Vee Satayamas", "link": "https://stackoverflow.com/users/4685140/vee-satayamas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 29146940, "answer_count": 1, "score": 3, "last_activity_date": 1426774643, "creation_date": 1426772231, "last_edit_date": 1426774643, "question_id": 29146092, "link": "https://stackoverflow.com/questions/29146092/what-is-npm-install-my-another-package-in-rusts-cargo", "title": "What is ``npm install ../my-another-package&#39;&#39; in Rust&#39;s Cargo?", "body": "<p>In my Cargo.toml, I defined <code>[dependencies]</code> like:</p>\n\n<pre><code>[dependencies]\nmy-another-package = \"0.0.1\"\n</code></pre>\n\n<p>But I don't want to put <code>my_another_package</code> on GitHub because it is proprietary. I want to install it from my local disk. Using NPM, I would do something like <code>npm install ../my-another-package</code>. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 7, "last_activity_date": 1426761466, "creation_date": 1426761466, "answer_id": 29142318, "question_id": 29141637, "link": "https://stackoverflow.com/questions/29141637/cannot-modify-a-struct-field-from-implementation-cannot-borrow-immutable-borro/29142318#29142318", "title": "Cannot modify a struct field from implementation: &quot;cannot borrow immutable borrowed content as mutable&quot;", "body": "<p>Your <code>PrimesIterator</code> type contains a non-mutable reference to a <code>Vec&lt;u64&gt;</code>. You need to declare it as a mutable reference:</p>\n\n<pre><code>struct PrimesIterator&lt;'a&gt; {\n    primes: &amp;'a mut Vec&lt;u64&gt;,\n    index: usize,\n}\n</code></pre>\n\n<p>This will of course require you to also modify the <code>iter()</code> function to make sure it passes a mutable reference:</p>\n\n<pre><code>impl Primes {\n    fn new() -&gt; Primes {\n        Primes { primes: vec!(2, 3) }\n    }\n\n    fn iter(&amp;mut self) -&gt; PrimesIterator {\n        PrimesIterator { primes: &amp;mut self.primes, index : 0 }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4756, "favorite_count": 1, "accepted_answer_id": 29142318, "answer_count": 1, "score": 3, "last_activity_date": 1426770940, "creation_date": 1426759486, "last_edit_date": 1426770940, "question_id": 29141637, "link": "https://stackoverflow.com/questions/29141637/cannot-modify-a-struct-field-from-implementation-cannot-borrow-immutable-borro", "title": "Cannot modify a struct field from implementation: &quot;cannot borrow immutable borrowed content as mutable&quot;", "body": "<p>I'm trying to implement an iterator which will yield prime numbers. I store already found prime numbers in a <code>Vec&lt;u64&gt;</code>.</p>\n\n<p>Here's my implementation:</p>\n\n<pre><code>struct Primes {\n    primes: Vec&lt;u64&gt;,\n}\n\nimpl Primes {\n    fn new() -&gt; Primes {\n        Primes { primes: vec!(2, 3) }\n    }\n\n    fn iter(&amp;self) -&gt; PrimesIterator {\n        PrimesIterator { primes: &amp;self.primes, index : 0 }\n    }\n}\n\nstruct PrimesIterator&lt;'a&gt; {\n    primes: &amp; 'a Vec&lt;u64&gt;,\n    index: usize,\n}\n\nimpl&lt;'a&gt; Iterator for PrimesIterator&lt;'a&gt; {\n    type Item = u64;\n\n    fn next(&amp;mut self) -&gt; Option&lt;u64&gt; {\n        if self.index &lt; self.primes.len() {\n            let result = self.primes[self.index];\n            self.index += 1;\n            Some(result)\n        } else {\n            let mut n = *self.primes.last().unwrap();\n            loop {\n                n += 2;\n                if is_prime(self.primes, n) {\n                    self.primes.push(n);\n                    self.index += 1;\n                    return Some(n);\n                }\n            }\n        }\n    }\n}\n\nfn is_prime(primes: &amp;[u64], n: u64) -&gt; bool {\n    for &amp;p in primes.iter() {\n        if n % p == 0 {\n            return false;\n        }\n        if p * p &gt; n {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>but when I'm trying to compile it, I'm getting the following error:</p>\n\n<pre><code>main.rs: error: cannot borrow immutable borrowed content `*self.primes` as mutable\nmain.rs:                     self.primes.push(n);\n</code></pre>\n\n<p>I declared self as &amp;mut so I don't really understand what's wrong here and how to fix that.</p>\n"}]