[{"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1549483232, "post_id": 54561570, "comment_id": 95922246, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/39482131/155423\">Using impl Trait in Trait definition</a>. If there <b>were</b> any workarounds, that&#39;s where they would live. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/54561570/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549483344, "post_id": 54561570, "comment_id": 95922278, "body": "See also <a href=\"https://stackoverflow.com/q/54161441/155423\">Is there any way to simulate Associated Type Constructors in Rust?</a>."}, {"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549484225, "post_id": 54561570, "comment_id": 95922659, "body": "Thanks for the links, I had already read the first one before posting. I suppose my question is more closely linked to the blogpost I linked (which is only a few days old). I take it the claim made in there w.r.t anonymous associated types is somewhat misleading then?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549484520, "post_id": 54561570, "comment_id": 95922797, "body": "<i>my question is more closely linked to the blogpost I linked</i> \u2014 if that&#39;s the case, then you need to include the pertinent contents / concepts of the blog post <i>in the question</i> and ask a specific question about it (e.g. &quot;how do I use the technique...&quot; or &quot;is the technique ... a lie&quot;)."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1549557970, "post_id": 54561570, "comment_id": 95953889, "body": "I think for the trick you mentioned, you would to have to add <code>type Assoc</code> to <code>Trait</code>, and possibly even adjust a bit more."}], "owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 129, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1549532986, "creation_date": 1549482980, "last_edit_date": 1549532986, "question_id": 54561570, "link": "https://stackoverflow.com/questions/54561570/is-it-possible-to-emulate-impl-trait-in-return-position-in-trait-methods-witho", "title": "Is it possible to emulate `impl Trait` in return position in trait methods without using trait objects?", "body": "<p>I have somewhat followed the progress on the existential types and GAT proposals (though I'm not entirely sure which one is most applicable for my problem), but those are not available yet.</p>\n\n<p>Here is roughly what I'd like to do:</p>\n\n<pre><code>trait Trait: Sized {\n    fn generic_associated&lt;T&gt;() -&gt; impl Assoc&lt;Item = T, Trait = Self&gt;;\n}\n\ntrait Assoc: Sized {\n    type Item;\n    type Trait: Trait;\n}\n</code></pre>\n\n<p>This doesn't compile because you can't have <code>impl Trait</code> in return position in trait methods. Is there some way to emulate something like that? I know I could return <code>Box&lt;dyn Assoc&lt;Item = T, Trait = Self&gt;&gt;</code>, but that is not an option for my specific case.</p>\n\n<p>I've read <a href=\"https://vorner.github.io/2019/02/03/hacks.html\" rel=\"nofollow noreferrer\">this</a> blog post (the section called 'Anonymous Associated Types'), which claims something along those lines could be emulated using <code>Fn</code> traits and blanket implementations, but I fail to how to apply the given example to my problem, since that example uses a freestanding function in the end to avoid having to name the concrete type.</p>\n\n<p><strong>edit</strong></p>\n\n<p>While the post does not explicitly claim to emulate existential types or generic associated types, it does demonstrate a technique using <code>Fn</code> traits to use an anonymous associated type. Is this something that could potentially be used for emulating existential types?</p>\n"}, {"tags": ["rust", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549482736, "post_id": 54561389, "comment_id": 95922059, "body": "<i>I think returning a type <code>EmptyResponse</code> would be what I want</i> \u2014 this is impossible: <a href=\"https://stackoverflow.com/q/32551177/155423\">\u201cExpected type parameter\u201d error in the constructor of a generic struct</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549482971, "post_id": 54561389, "comment_id": 95922147, "body": "I&#39;m not sure I understand. When you make the request (call <code>send</code>), do you know in advance whether the response (if successful) will contain data or not? Or do you make the request not knowing whether an <code>R</code> will actually be returned?"}, {"owner": {"reputation": 131, "user_id": 5864270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/435158a26dfd4709e77779f6ebfddc88?s=128&d=identicon&r=PG&f=1", "display_name": "n41r0j", "link": "https://stackoverflow.com/users/5864270/n41r0j"}, "edited": false, "score": 0, "creation_date": 1549483180, "post_id": 54561389, "comment_id": 95922228, "body": "I know beforehand what types will be returned, either the type I want or an Err. Even for the request where a success returns nothing, an error will return a JSON with error message."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1549483706, "post_id": 54561389, "comment_id": 95922428, "body": "Does <code>send&lt;(), _&gt;</code> work? If the caller knows it&#39;s expecting &quot;nothing&quot;, then it shouldn&#39;t tell <code>send</code> to deserialize to &quot;something&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549526813, "post_id": 54566396, "comment_id": 95935484, "body": "That <code>if let</code> without an <code>else</code> is only really OK when you want to just ignore errors and continue, which shouldn&#39;t be most of the time. I&#39;d expect <code>.unwrap()</code> (panicking) or <code>?</code> (propagating the error up the call stack) to be more generally useful."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549552612, "post_id": 54566396, "comment_id": 95950522, "body": "I don&#39;t think OP is worried about the performance of unwrapping twice but the <b>ergonomics</b>. Your proposed solution requires <i>every call site</i> to have 6 or so extra lines of boilerplate. In &quot;98% of the responses&quot;, the empty response will be treated as an error, duplicating code everywhere."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1549552461, "last_edit_date": 1549552461, "creation_date": 1549514498, "answer_id": 54566396, "question_id": 54561389, "link": "https://stackoverflow.com/questions/54561389/how-can-i-return-something-meaningful-from-a-generic-function-if-there-is-nothin/54566396#54566396", "title": "How can I return something meaningful from a generic function if there is nothing to return?", "body": "<p>You can return an <code>Result&lt;Option&lt;R&gt;, ApiError&gt;</code> as shown in <a href=\"https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/option_result.html\" rel=\"nofollow noreferrer\">the documentation</a>, then match it like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match sender.send(request) {\n    Ok(Some(r)) =&gt; {\n        // process response\n    }\n    Ok(None) =&gt; {\n        // process empty response\n    }\n    Err(e) =&gt; {\n        // process error\n    }\n}\n// or\nif let Ok(Some(r)) = sender.send(request) {\n    // process response\n}\n</code></pre>\n\n<blockquote>\n  <p>I tried to work around this by wrapping <code>R</code> with <code>Option</code>, but that means I have to double unwrap every response, and 98% of the responses from reqwest do have data in their response, so it feels a bit like overkill.  </p>\n</blockquote>\n\n<p>Unwrapping the <code>Option</code> is a very cheap operation, there's nothing to be worried about.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1549555412, "last_edit_date": 1549555412, "creation_date": 1549553455, "answer_id": 54576768, "question_id": 54561389, "link": "https://stackoverflow.com/questions/54561389/how-can-i-return-something-meaningful-from-a-generic-function-if-there-is-nothin/54576768#54576768", "title": "How can I return something meaningful from a generic function if there is nothing to return?", "body": "<p>The pragmatic answer is to have two functions:</p>\n\n<pre><code>fn send&lt;R, T&gt;(&amp;self, request: &amp;RpcRequest&lt;T&gt;) -&gt; Result&lt;R, ApiError&gt;\nwhere\n    T: Serialize + Debug,\n    R: DeserializeOwned + Debug,\n</code></pre>\n\n<pre><code>fn send_no_response&lt;T&gt;(&amp;self, request: &amp;RpcRequest&lt;T&gt;) -&gt; Result&lt;(), ApiError&gt;\nwhere\n    T: Serialize + Debug,\n</code></pre>\n\n<hr>\n\n<p><em>If</em> your server happens to return a value that can be deserialized into the type  <code>()</code>, then you can avoid the overhead of two functions. However, this is <strong>not</strong> the case for JSON, one of the most common formats:</p>\n\n<pre><code>use serde::de::DeserializeOwned; // 1.0.85\nuse serde_json; // 1.0.37\n\ntype Error = Box&lt;std::error::Error&gt;;\ntype Result&lt;T, E = Error&gt; = std::result::Result&lt;T, E&gt;;\n\nfn send&lt;R&gt;() -&gt; Result&lt;R, Error&gt;\nwhere\n    R: DeserializeOwned,\n{\n    serde_json::from_str(\"\").map_err(Into::into)\n}\n\nfn main() {\n    let _r: () = send().expect(\"Unable to deserialize\");\n}\n</code></pre>\n\n<p>This panics:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Unable to deserialize: Error(\"EOF while parsing a value\", line: 1, column: 0)\n</code></pre>\n\n<hr>\n\n<p>In a world with specialization, you can use it and a helper trait to reduce back to one function:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse serde::de::DeserializeOwned; // 1.0.85\nuse serde_json; // 1.0.37\n\ntype Error = Box&lt;std::error::Error&gt;;\ntype Result&lt;T, E = Error&gt; = std::result::Result&lt;T, E&gt;;\n\ntype ApiResponse = &amp;'static str;\n\ntrait FromApi: Sized {\n    fn convert(response: ApiResponse) -&gt; Result&lt;Self, Error&gt;;\n}\n\nimpl&lt;R&gt; FromApi for R\nwhere\n    R: DeserializeOwned,\n{\n    default fn convert(response: ApiResponse) -&gt; Result&lt;R, Error&gt; {\n        eprintln!(\"deserializing the response\");\n        serde_json::from_str(response).map_err(Into::into)\n    }\n}\n\nimpl FromApi for () {\n    fn convert(_response: ApiResponse) -&gt; Result&lt;Self, Error&gt; {\n        eprintln!(\"Ignoring the response\");\n        Ok(())\n    }\n}\n\nfn send&lt;R: FromApi&gt;() -&gt; Result&lt;R&gt; {\n    eprintln!(r#\"\"sending\" the request\"#);\n    let api_response = \"\";\n    R::convert(api_response)\n}\n\nfn main() {\n    let _r: () = send().expect(\"Unable to deserialize\");\n}\n</code></pre>\n"}], "owner": {"reputation": 131, "user_id": 5864270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/435158a26dfd4709e77779f6ebfddc88?s=128&d=identicon&r=PG&f=1", "display_name": "n41r0j", "link": "https://stackoverflow.com/users/5864270/n41r0j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1549555412, "creation_date": 1549482239, "last_edit_date": 1549483034, "question_id": 54561389, "link": "https://stackoverflow.com/questions/54561389/how-can-i-return-something-meaningful-from-a-generic-function-if-there-is-nothin", "title": "How can I return something meaningful from a generic function if there is nothing to return?", "body": "<p>I'm building a library in Rust that has a <code>send</code> method that performs HTTP requests against a local RPC server using reqwest.</p>\n\n<p>This method returns a generic type <code>R</code> in a <code>Result</code> where <code>R: DeserializeOwned</code>. After making the correct types for every response, <code>serde_json::from_str()</code> can get me the type. </p>\n\n<p>If there is no response upon a request, how can I make <code>send</code> still return something meaningful?</p>\n\n<p>This is the code I have now: </p>\n\n<pre><code>fn send&lt;R, T&gt;(\n    &amp;self,\n    request: &amp;RpcRequest&lt;T&gt;,\n) -&gt; Result&lt;R, ApiError&gt;\n    where\n        T: Serialize + Debug,\n        R: DeserializeOwned + Debug,\n</code></pre>\n\n\n\n<pre><code>let res = serde_json::from_str(&amp;buf).map_err(|err| ClientError::Json(err))\n</code></pre>\n\n<p>I am now forced to create and return an <code>Err</code>, but technically, the request returning no response is expected behavior, so I want to return something other than an <code>Err</code>. </p>\n\n<p>I tried to work around this by wrapping <code>R</code> with <code>Option</code>, but that means I have to double unwrap every response, and 98% of the responses from reqwest do have data in their response, so it feels a bit like overkill.</p>\n\n<p>I also tried to return a self-made <code>EmptyResponse</code> type, but the compiler complains: <code>expected type R, found type EmptyResponse</code>. I think returning a type <code>EmptyResponse</code> would be what I want, but maybe someone can shed some tips on how to maybe do this even better.</p>\n"}, {"tags": ["json", "rust", "serde"], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1549472131, "answer_count": 0, "score": 1, "last_activity_date": 1549472277, "creation_date": 1549472038, "last_edit_date": 1549472277, "question_id": 54558741, "link": "https://stackoverflow.com/questions/54558741/how-can-i-convert-a-json-string-to-an-i64-using-serde-json", "closed_reason": "Duplicate", "title": "How can I convert a JSON string to an i64 using serde_json?", "body": "<p>This is a sample JSON object I want to parse:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>{  \n   \"name\":\"John\",\n   \"balance\":\"300000\",\n   \"address\":\"Palo Alto, CA\",\n   \"car\":null\n}\n</code></pre>\n\n<p>I've got the following struct using <a href=\"https://github.com/serde-rs/json\" rel=\"nofollow noreferrer\"><code>serde_json</code></a> for parsing JSON:</p>\n\n<pre><code>#[derive(Serialize, Deserialize, Debug)]\npub struct Person {\n    #[serde(alias = \"name\")]\n    pub firstname: String,\n    #[serde(alias = \"balance\")]\n    pub amount: i64,\n    pub address: String,\n}\n</code></pre>\n\n<p>I want the <code>amount</code> field to be <code>i64</code> instead of <code>String</code> but it's a string in the JSON object.</p>\n\n<p>Is there a <a href=\"https://serde.rs/field-attrs.html\" rel=\"nofollow noreferrer\">field attribute</a> to enforce <code>String -&gt; i64</code> conversion during parsing? Otherwise, I'll have to create a similar structure where <code>balance</code> is <code>i64</code> or tune my other project code to accept <code>balance</code> as <code>String</code> which is bad.</p>\n"}, {"tags": ["rust", "type-alias"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1549476303, "last_edit_date": 1549476303, "creation_date": 1549473361, "answer_id": 54559108, "question_id": 54558719, "link": "https://stackoverflow.com/questions/54558719/how-to-define-a-function-local-type-alias-of-the-functions-type-parameters-or/54559108#54559108", "title": "How to define a function-local type alias of the function&#39;s type parameters (or their associated types)?", "body": "<p>The only way I have seen this done is to add the type as another type parameter to the function.</p>\n\n<pre><code>fn foo&lt;F, C&gt;(container: &amp;C)\nwhere\n    F: Float,\n    C: Index&lt;u32, Output = F&gt;,\n{\n    let pi = F::PI;\n    // ...\n}\n</code></pre>\n\n<p>This doesn't usually cause problems with type inference, as there will only be one type <code>F</code> that works for a given <code>C</code> (at least in this example), but it does make certain uses noisier, since to specify the type <code>F</code> you have to also put a placeholder for <code>C</code> and vice versa.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1549478036, "last_edit_date": 1549478036, "creation_date": 1549477735, "answer_id": 54560272, "question_id": 54558719, "link": "https://stackoverflow.com/questions/54558719/how-to-define-a-function-local-type-alias-of-the-functions-type-parameters-or/54560272#54560272", "title": "How to define a function-local type alias of the function&#39;s type parameters (or their associated types)?", "body": "<p>Diesel has a similar \"problem\" and they've solved it by <a href=\"https://docs.rs/diesel/1.4.1/diesel/helper_types/index.html\" rel=\"nofollow noreferrer\">defining non-function-local type aliases</a>. I like this solution because you can use the alias to clean up your trait bounds as well:</p>\n\n<pre><code>type Floaty&lt;C&gt; = &lt;C as Index&lt;u32&gt;&gt;::Output;\n\nfn foo&lt;C&gt;(container: &amp;C)\nwhere\n    C: Index&lt;u32&gt;,\n    Floaty&lt;C&gt;: Float,\n{\n    let p = Floaty::&lt;C&gt;::PI;\n    // ...\n}\n</code></pre>\n\n<p>Note that you'll have to change your trait <code>Float</code> to require that it's <code>Sized</code> in order to actually run this code.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 930, "favorite_count": 0, "accepted_answer_id": 54560272, "answer_count": 2, "score": 4, "last_activity_date": 1549478036, "creation_date": 1549471963, "question_id": 54558719, "link": "https://stackoverflow.com/questions/54558719/how-to-define-a-function-local-type-alias-of-the-functions-type-parameters-or", "title": "How to define a function-local type alias of the function&#39;s type parameters (or their associated types)?", "body": "<p>I have a generic function <code>foo</code> with some complex-ish trait bounds:</p>\n\n<pre><code>use std::ops::Index;\n\n// This trait is just as an example\ntrait Float {\n    const PI: Self;\n    fn from_f32(v: f32) -&gt; Self;\n}\n// impl Float for f32, f64 ...\n\nfn foo&lt;C&gt;(container: &amp;C)\nwhere\n    C: Index&lt;u32&gt;,\n    &lt;C as Index&lt;u32&gt;&gt;::Output: Float,\n{\n    // ...\n}\n</code></pre>\n\n<p>I now need to use the type <code>&lt;C as Index&lt;u32&gt;&gt;::Output</code> inside the function a bunch (e.g. to get \u03c0 via <code>::PI</code> or say <code>::from_f32(3.0)</code>). But this type is long to type out by hand and makes the whole code very verbose and hard to read. (<em>Note</em>: in my real code, the actual type is even longer and more ugly.)</p>\n\n<p>To solve this, I tried to create a function local type alias:</p>\n\n<pre><code>// Inside of `foo`:\ntype Floaty = &lt;C as Index&lt;u32&gt;&gt;::Output;\n</code></pre>\n\n<p>But this results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0401]: can't use type parameters from outer function\n  --&gt; src/lib.rs:16:20\n   |\n10 | fn foo&lt;C&gt;(container: &amp;C)\n   |    --- - type variable from outer function\n   |    |\n   |    try adding a local type parameter in this method instead\n...\n16 |     type Floaty = &lt;C as Index&lt;u32&gt;&gt;::Output;\n   |                    ^ use of type variable from outer function\n</code></pre>\n\n<p>So, just like other items, <code>type</code> aliases are also treated regardless of whether they are in a function or not. Not having any good ideas, I tried to write a macro that expands to the type:</p>\n\n<pre><code>// Inside of `foo`:\nmacro_rules! Floaty {\n    () =&gt; { &lt;C as Index&lt;u32&gt;&gt;::Output };\n}\n\nFloaty!()::PI;    // errors\n</code></pre>\n\n<p>While I had partial success with this (<code>Floaty!()</code> is valid in some type contexts), this last line errors with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n  --&gt; src/lib.rs:20:14\n   |\n20 |     Floaty!()::PI;    // errors\n   |              ^^ expected one of `.`, `;`, `?`, `}`, or an operator here\n\nerror[E0575]: expected method or associated constant, found associated type `Index::Output`\n  --&gt; src/lib.rs:17:17\n   |\n17 |         () =&gt; { &lt;C as Index&lt;u32&gt;&gt;::Output };\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n20 |     Floaty!()::PI;    // errors\n   |     --------- in this macro invocation\n   |\n   = note: can't use a type alias as a constructor\n</code></pre>\n\n<hr>\n\n<p>None of my attempts worked completely. <strong>Is it possible to avoid writing out the full type name each time?</strong></p>\n"}, {"tags": ["vector", "reference", "rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 2771, "user_id": 1073672, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/6d79e3914b0743bce4ea6d138a454d72?s=128&d=identicon&r=PG", "display_name": "user10607", "link": "https://stackoverflow.com/users/1073672/user10607"}, "edited": false, "score": 0, "creation_date": 1549454827, "post_id": 54553209, "comment_id": 95906263, "body": "Thanks! And consider putting <code>.cloned()</code> after the <code>.filter()</code> due to this: <a href=\"https://stackoverflow.com/q/35354716/1073672\">stackoverflow.com/q/35354716/1073672</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2771, "user_id": 1073672, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/6d79e3914b0743bce4ea6d138a454d72?s=128&d=identicon&r=PG", "display_name": "user10607", "link": "https://stackoverflow.com/users/1073672/user10607"}, "edited": false, "score": 0, "creation_date": 1549455109, "post_id": 54553209, "comment_id": 95906442, "body": "@user10607 Yes! I&#39;d just spotted and changed that before seeing your comment. Although, I&#39;m not sure it makes too much difference in the case, since it&#39;s only a pointer getting cloned."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2771, "user_id": 1073672, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/6d79e3914b0743bce4ea6d138a454d72?s=128&d=identicon&r=PG", "display_name": "user10607", "link": "https://stackoverflow.com/users/1073672/user10607"}, "edited": false, "score": 1, "creation_date": 1549455404, "post_id": 54553209, "comment_id": 95906630, "body": "@user10607 But also see the <a href=\"https://stackoverflow.com/a/35370500/493729\">second answer</a> for that question, which applies here  (since a pointer is small and <code>Copy</code>)"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1549455882, "last_edit_date": 1549455882, "creation_date": 1549454549, "answer_id": 54553209, "question_id": 54553139, "link": "https://stackoverflow.com/questions/54553139/how-to-get-vecstring-after-using-iter-filter-collect-instead-of-vecs/54553209#54553209", "title": "How to get Vec&lt;&amp;String&gt; after using iter().filter().collect() instead of Vec&lt;&amp;&amp;String&gt;", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" rel=\"noreferrer\"><code>Iterator::cloned</code></a> to clone each reference instead of referencing them again:</p>\n\n<pre><code>let v_zzz: Vec&lt;&amp;String&gt; = v_before\n    .iter()\n    .filter(|&amp;element| element.contains(\"zzz\"))\n    .cloned()\n    .collect();\n</code></pre>\n\n<p>Cloning a reference is cheap, since it is <a href=\"https://doc.rust-lang.org/src/core/clone.rs.html#207-212\" rel=\"noreferrer\">implemented by dereferencing</a>.</p>\n\n<hr>\n\n<p><em>Aside: usually it's better to pass around <code>&amp;str</code> instead of <code>&amp;String</code>, as it's more flexible. When I see <code>&amp;String</code> in Rust code, it stands out as something that is probably not intended, or can be improved.</em></p>\n"}], "owner": {"reputation": 2771, "user_id": 1073672, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/6d79e3914b0743bce4ea6d138a454d72?s=128&d=identicon&r=PG", "display_name": "user10607", "link": "https://stackoverflow.com/users/1073672/user10607"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 443, "favorite_count": 0, "accepted_answer_id": 54553209, "answer_count": 1, "score": 3, "last_activity_date": 1549997542, "creation_date": 1549454309, "last_edit_date": 1549997542, "question_id": 54553139, "link": "https://stackoverflow.com/questions/54553139/how-to-get-vecstring-after-using-iter-filter-collect-instead-of-vecs", "title": "How to get Vec&lt;&amp;String&gt; after using iter().filter().collect() instead of Vec&lt;&amp;&amp;String&gt;", "body": "<p>I have a vector of Strings. I want to get two subsets from this vector:\nstrings with <code>\"zzz\"</code> and strings with <code>\"bye\"</code>.</p>\n\n<p>The type of each subset is <code>Vec&lt; &amp;&amp; String&gt;</code>. Which is a vector of references to a reference to original String. How can I get just <code>Vec&lt;&amp; String&gt;</code>?</p>\n\n<p>Code I am currently working on:</p>\n\n<pre><code>use std::string::String;\nuse std::vec::Vec;\n\nfn main() {\n    let a1 = String::from(\"hi\");\n    let a2 = String::from(\"bye\");\n    let a3 = String::from(\"zzz\");\n\n    let v_before: Vec&lt;&amp;String&gt; = vec![&amp;a1, &amp;a2, &amp;a3];\n\n    // ref_a is a copy of v_before[0]\n    let ref_zzz_a: &amp;String = v_before[2];\n    let ref_zzz_b: &amp;String = v_before[2];\n\n    println!(\"before: {:?}\", v_before);\n\n    // QUESTION: why can not this also be Vec&lt;&amp; String&gt; ?\n    // v_zzz is just like making  vec![ref_zzz_a, ref_zzz_b]\n    let v_zzz: Vec&lt;&amp;&amp;String&gt; = v_before\n        .iter()\n        .filter(|&amp;&amp;element| element.contains(\"zzz\"))\n        .collect();\n\n    let v_bye: Vec&lt;&amp;&amp;String&gt; = v_before\n        .iter()\n        .filter(|&amp;&amp;element| element.contains(\"bye\"))\n        .collect();\n\n    let hand_made: Vec&lt;&amp;String&gt; = vec![ref_zzz_a, ref_zzz_b];\n\n    println!(\"v_zzz: {:?}\", v_zzz);\n    println!(\"v_bye: {:?}\", v_bye);\n    println!(\"hand_made: {:?}\", hand_made);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=825d9220bfca83604d1adda9f35582b1\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>One way would be to use <code>vector.into_iter()...</code>, but then I would not be able to run the second filter.</p>\n\n<p>Also maybe this is just the way rust is? Due to automatic dereference maybe I should just not care that this is a <code>Vec&lt;&amp;&amp; String&gt;</code>? Would it lead to problems later?</p>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549453568, "post_id": 54552847, "comment_id": 95905550, "body": "There is definitely a short-coming in the expressivity of declarative macros. But I&#39;ve hit the same problem with <code>quote</code> in proc macros. When you have two repeating variables, they are always interpolated pair-wise, and it&#39;s quite tricky to interpolate over all permutations."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1549453311, "creation_date": 1549453311, "answer_id": 54552848, "question_id": 54552847, "link": "https://stackoverflow.com/questions/54552847/build-all-pairs-of-elements-quadratic-set-in-declarative-macro/54552848#54552848", "title": "Build all pairs of elements (quadratic set) in declarative macro", "body": "<blockquote>\n  <p>Is this possible with declarative macros at all?</p>\n</blockquote>\n\n<p><strong>Yes</strong>. </p>\n\n<p>But (to the best of my knowledge) we have to iterate through the list via head/tail recursion once instead of using the built-in <code>$( ... )*</code> mechanism everywhere. This means that the list length is limited by the recursion depth of macro expansion. That's not a problem for \"only\" 12 items, though.</p>\n\n<p>In the code below, I separated the \"for all pairs\" functionality from the printing-code by passing a macro name to the <code>for_all_pairs</code> macro. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0c694217cd937b208787585aad6a2dbc\" rel=\"noreferrer\">Playground</a>).</p>\n\n<pre><code>// The macro that expands into all pairs\nmacro_rules! for_all_pairs {\n    ($mac:ident: $($x:ident)*) =&gt; {\n        // Duplicate the list\n        for_all_pairs!(@inner $mac: $($x)*; $($x)*);\n    };\n\n    // The end of iteration: we exhausted the list\n    (@inner $mac:ident: ; $($x:ident)*) =&gt; {};\n\n    // The head/tail recursion: pick the first element of the first list\n    // and recursively do it for the tail.\n    (@inner $mac:ident: $head:ident $($tail:ident)*; $($x:ident)*) =&gt; {\n        $(\n            $mac!($head $x);\n        )*\n        for_all_pairs!(@inner $mac: $($tail)*; $($x)*);\n    };\n}\n\n// What you actually want to do for each pair\nmacro_rules! print_pair {\n    ($a:ident $b:ident) =&gt; {\n        println!(\"{} &lt;-&gt; {}\", $a, $b);\n    }\n}\n\n// Test code\nlet a = 'a';\nlet b = 'b';\nlet c = 'c';\n\nfor_all_pairs!(print_pair: a b c);\n</code></pre>\n\n<p>This code prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a &lt;-&gt; a\na &lt;-&gt; b\na &lt;-&gt; c\nb &lt;-&gt; a\nb &lt;-&gt; b\nb &lt;-&gt; c\nc &lt;-&gt; a\nc &lt;-&gt; b\nc &lt;-&gt; c\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 0, "accepted_answer_id": 54552848, "answer_count": 1, "score": 7, "last_activity_date": 1549453979, "creation_date": 1549453311, "last_edit_date": 1549453979, "question_id": 54552847, "link": "https://stackoverflow.com/questions/54552847/build-all-pairs-of-elements-quadratic-set-in-declarative-macro", "title": "Build all pairs of elements (quadratic set) in declarative macro", "body": "<p>I have a list of identifier and I want to invoke a macro for each pair of identifiers from that list. For example, if I have <code>a</code>, <code>b</code> and <code>c</code>, I would like to generate this:</p>\n\n<pre><code>println!(\"{} &lt;-&gt; {}\", a, a);\nprintln!(\"{} &lt;-&gt; {}\", a, b);\nprintln!(\"{} &lt;-&gt; {}\", a, c);\nprintln!(\"{} &lt;-&gt; {}\", b, a);\nprintln!(\"{} &lt;-&gt; {}\", b, b);\nprintln!(\"{} &lt;-&gt; {}\", b, c);\nprintln!(\"{} &lt;-&gt; {}\", c, a);\nprintln!(\"{} &lt;-&gt; {}\", c, b);\nprintln!(\"{} &lt;-&gt; {}\", c, c);\n</code></pre>\n\n<p>Of course, this is a dummy example. In my real code, the identifiers are types and I want to generate <code>impl</code> blocks or something like that.</p>\n\n<p>My goal is to list each identifier only once. In my real code, I have around 12 identifier and don't want to manually write down all 12\u00b2 = 144 pairs. So I thought that a macro might help me. I know that it can be solved with the all powerful procedural macros, but I hoped that it's also possible with declarative macros (<code>macro_rules!</code>).</p>\n\n<hr>\n\n<p>I tried what I thought was the intuitive way to handle this (two nested \"loops\") (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f37ff5ec940e85e2874be1f4797c5445\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>macro_rules! print_all_pairs {\n    ($($x:ident)*) =&gt; {\n        $(\n            $(\n                println!(\"{} &lt;-&gt; {}\", $x, $x);  // `$x, $x` feels awkward... \n            )*\n        )*\n    }\n}\n\nlet a = 'a';\nlet b = 'b';\nlet c = 'c';\n\nprint_all_pairs!(a b c);\n</code></pre>\n\n<p>However, this results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: attempted to repeat an expression containing no syntax variables matched as repeating at this depth\n --&gt; src/main.rs:4:14\n  |\n4 |               $(\n  |  ______________^\n5 | |                 println!(\"{} &lt;-&gt; {}\", $x, $x);\n6 | |             )*\n  | |_____________^\n</code></pre>\n\n<p>I guess it makes kind of sense, so I tried something else (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fa57db12656bb708c3be64bb585a22dc\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>macro_rules! print_all_pairs {\n    ($($x:ident)*) =&gt; {\n        print_all_pairs!(@inner $($x)*; $($x)*);\n    };\n    (@inner $($x:ident)*; $($y:ident)*) =&gt; {\n        $(\n            $(\n                println!(\"{} &lt;-&gt; {}\", $x, $y);\n            )*\n        )*\n    };\n}\n</code></pre>\n\n<p>But this results in the same error as above!</p>\n\n<p><strong>Is this possible with declarative macros at all?</strong></p>\n"}, {"tags": ["concurrency", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549451844, "post_id": 54552165, "comment_id": 95904500, "body": "Are you seeing significant overhead with cloning the sender? I would expect this to be a very efficient operation."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549451905, "post_id": 54552165, "comment_id": 95904539, "body": "you can avoid one clone in your example. &quot;every closures would require it&#39;s own cloned version of tx to use it.&quot; =&gt; &quot;every closures would require it&#39;s own version of tx to use it.&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1549456591, "post_id": 54552849, "comment_id": 95907396, "body": "I was not afraid of performance. It was more a syntax/style oriented question. In the case I would have 10 closures, I wanted to avoid typing clone 10 times."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1549454076, "last_edit_date": 1549454076, "creation_date": 1549453318, "answer_id": 54552849, "question_id": 54552165, "link": "https://stackoverflow.com/questions/54552165/alternative-to-cloning-tokio-channels-sender-for-futures-closures/54552849#54552849", "title": "Alternative to cloning tokio channel&#39;s sender for futures&#39; closures", "body": "<blockquote>\n  <p>Could we achieve the same without cloning the channel's sender for each declared closure that uses it?</p>\n</blockquote>\n\n<p>No. This is how a <code>Sender</code> is shared, and there isn't another safe way to do it.</p>\n\n<p>The channel manages shared resources by wrapping them in <code>Arc</code>s, so they can be shared safely between threads. There is a bit of logic involved in the <code>Sender</code>'s clone method, but ultimately it is about cloning those <code>Arc</code>s - which is how <code>Arc</code>s are shared.</p>\n\n<p>Cloning an <code>Arc</code> is cheap, and probably not something you should worry about, unless you are cloning them in a tight loop. Once they are cloned, there is very little overhead to an <code>Arc</code> - each clone is essentially a pointer.</p>\n"}], "owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 54552849, "answer_count": 1, "score": 1, "last_activity_date": 1549454076, "creation_date": 1549451312, "last_edit_date": 1549451698, "question_id": 54552165, "link": "https://stackoverflow.com/questions/54552165/alternative-to-cloning-tokio-channels-sender-for-futures-closures", "title": "Alternative to cloning tokio channel&#39;s sender for futures&#39; closures", "body": "<p>I'm working with <code>tokio</code> and <code>hyper</code> to spawn several tasks.</p>\n\n<pre><code>// Defining the task\nlet task = self.some_future_using\n            .map(move |resp| println!(\"OK: {}\", resp))\n            .map_err(move |e| println!(\"Error: {}\",e));\n\n// Spawning the task\ntokio::spawn(task);\n</code></pre>\n\n<p>Instead of simply logging the results, I would like to send the result over a bounded tokio channel.</p>\n\n<pre><code>// Defines the channel\nlet (tx, rx) = mpsc::channel(10);\n\n// Defining the task\nlet task = self.some_future_using\n            .map(|resp| /* Send Ok(resp) to tx */ )\n            .map_err(|e| /* Send Err(e) to tx */);\n\n// Spawning the task\ntokio::spawn(task);\n</code></pre>\n\n<p>As both closures may outlive the scope where <code>tx</code> is defined, we need to clone and move <code>tx</code> for both closures:</p>\n\n<pre><code>// Defines the channel\nlet (tx, rx) = mpsc::channel(10);\nlet mut tx_ok = tx.clone();\nlet mut tx_err = tx.clone();\n\n// Defining the task\nlet task = self.some_future_using\n            .map(move |resp| tx_ok.try_send(Ok(())).unwrap() )\n            .map_err(move |e| tx_err.try_send(Ok(())).unwrap() );\n\n// Spawning the task\ntokio::spawn(task);\n</code></pre>\n\n<p>In the case more logic is added using combinators (<code>map</code>, <code>and_then</code>, etc), every closures would require it's own cloned version of <code>tx</code> to use it.</p>\n\n<p>Is cloning the only solution? Could we achieve the same without cloning the channel's sender for each declared closure that uses it?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1549446132, "creation_date": 1549446132, "answer_id": 54550499, "question_id": 54550179, "link": "https://stackoverflow.com/questions/54550179/why-is-the-amount-of-bytes-read-different-in-each-case/54550499#54550499", "title": "Why is the amount of bytes read different in each case?", "body": "<p>From the docs for <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"noreferrer\"><code>BufRead.lines</code></a>:</p>\n\n<blockquote>\n  <p>The iterator returned from this function will yield instances of\u00a0<code>io::Result&lt;String&gt;</code>. Each string returned will\u00a0<strong><em>not</em></strong>\u00a0have a newline byte.</p>\n</blockquote>\n\n<p>Your count is off by 3 because you have 3 lines in the data and newline characters are not being counted in the second example.</p>\n"}], "owner": {"reputation": 125, "user_id": 3397032, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6Vh9Q.jpg?s=128&g=1", "display_name": "greyowl", "link": "https://stackoverflow.com/users/3397032/greyowl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 54550499, "answer_count": 1, "score": 3, "last_activity_date": 1551011465, "creation_date": 1549444922, "last_edit_date": 1551011465, "question_id": 54550179, "link": "https://stackoverflow.com/questions/54550179/why-is-the-amount-of-bytes-read-different-in-each-case", "title": "Why is the amount of bytes read different in each case?", "body": "<p>Snippet is trying to count the number of bytes read in the following <code>sample.txt</code></p>\n\n<p><strong>sample.txt</strong></p>\n\n<pre><code>one two three four five six\nseven eight nine ten eleven twelve\nthirteen fourteen fifteen sixteen\n%\n</code></pre>\n\n<p><strong>case 1:</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let file = File::open(fname)?;\nlet mut reader = BufReader::new(&amp;file);\nlet mut buffer: Vec&lt;u8&gt; = vec![];\nlet num_bytes = reader.read_until(b'%', &amp;mut buffer);\n//println!(\"{}\", String::from_utf8(buffer).unwrap());\nprintln!(\"read_bytes: {}\", num_bytes.unwrap());\n</code></pre>\n\n<blockquote>\n  <p><code>read_bytes: 101</code></p>\n</blockquote>\n\n<p><strong>case 2:</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let file = File::open(fname)?;\nlet mut reader = BufReader::new(&amp;file);\nlet mut num_bytes: u32 = 0;\nfor readline in reader.lines() {\n    if let Ok(line) = readline {\n        //println!(\"{}\", line);\n        let bytes = line.as_bytes();\n        num_bytes += bytes.len() as u32;\n        if bytes == b\"%\" {\n            break;\n        }\n    }\n}\nprintln!(\"read_bytes: {}\", num_bytes)\n</code></pre>\n\n<blockquote>\n  <p><code>read_bytes: 98</code></p>\n</blockquote>\n\n<p>I can't seem to figure out why the two cases are outputting different results. Any help with appreciated thanks</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1549438378, "post_id": 54548563, "comment_id": 95897382, "body": "Please provide a full <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>, because currently the types <code>Delegate</code>, <code>EventEmitter</code>, <code>Event</code> and <code>CB</code> are missing. You could use <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a> to create and share one"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549438481, "post_id": 54548563, "comment_id": 95897435, "body": "Since there is no verifiable code in my hand I am guessing, Your Process new method does not taking parameterized closure: <code>pub fn new&lt;CB: &#39;static + FnMut()&gt;(c: CB) -&gt; Self</code>  You can start changing it like following: <code>pub fn new&lt;CB: &#39;static + FnMut(String)&gt;(c: CB) -&gt; Self</code>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1549438488, "post_id": 54548563, "comment_id": 95897440, "body": "<code>callback: Box&lt;FnMut()&gt;,</code> you are defining a closure that takes no parameters. I don&#39;t know what you are expecting. Can you please a bite more clear about that? E.g. provide an example that does not work, but you want it to work."}], "answers": [{"tags": [], "owner": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "is_accepted": true, "score": 1, "last_activity_date": 1549535152, "last_edit_date": 1549535152, "creation_date": 1549534461, "answer_id": 54570969, "question_id": 54548563, "link": "https://stackoverflow.com/questions/54548563/how-to-pass-arguments-to-stored-callbacks/54570969#54570969", "title": "How to pass arguments to stored callbacks?", "body": "<p>Here you have written:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Processor {\n    callback: Box&lt;FnMut(/* RIGHT HERE */)&gt;,\n    message: Option&lt;String&gt;\n}\n</code></pre>\n\n<p>You have declared a <code>FnMut</code> (a closure) that takes no arguments.\nThe syntax is <code>FnMut(/* arguments to closure */)</code>, but you have not provided any. As such, you cannot pass it a closure that <em>does</em> take arguments.\n<strong>You cannot have a closure that both takes an argument and doesn't take an argument at the same time.</strong></p>\n\n<p>Additionally, you used <code>FnMut(&amp;str)</code>, but only at <em>one place</em>. You need it at all places. Since you want to either pass or not pass the string, I have converted it to a <code>Optional&lt;&amp;str&gt;</code> (so that the closure type is <code>FnMut(Option&lt;&amp;str&gt;)</code>).</p>\n\n<p>I have modified your code such that the closure takes an optional <code>&amp;str</code>.\nThis is how I would suggest you handle this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Processor {\n    // The closure takes an optional string.\n    callback: Box&lt;FnMut(Option&lt;&amp;str&gt;)&gt;,\n    message: Option&lt;String&gt;\n}\n\nimpl Processor {\n    pub fn new&lt;CB: 'static + FnMut(Option&lt;&amp;str&gt;)&gt;(c: CB) -&gt; Self {\n        Processor {\n            callback: Box::new(c),\n            message: Some(\"\".into())\n        }\n    }\n\n    pub fn set_callback&lt;CB: 'static + FnMut(Option&lt;&amp;str&gt;)&gt;(&amp;mut self, callback: CB) {\n        self.callback = Box::new(callback);\n    }\n\n    pub fn set_message&lt;S&gt;(&amp;mut self, message: S) where S: Into&lt;String&gt; {\n        self.message = Some(message.into());\n    }\n\n    pub fn process(&amp;mut self) {\n        match self.message {\n            Some(string) =&gt; {\n                // NOTE: Instead of .chars().count &gt; 0\n                if !self.message.is_empty() {\n                    (self.callback)(Some(self.message));\n                } else {\n                    (self.callback)(None);\n                }\n            },\n            None =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p><strong>NOTE</strong>: This is untested, but should probably work. If any errors come up, do comment.</p>\n"}], "owner": {"reputation": 1334, "user_id": 674033, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/cc717715a1581d90638854e3c3f4e2ef?s=128&d=identicon&r=PG&f=1", "display_name": "AVProgrammer", "link": "https://stackoverflow.com/users/674033/avprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 54570969, "answer_count": 1, "score": -2, "last_activity_date": 1549535152, "creation_date": 1549438135, "question_id": 54548563, "link": "https://stackoverflow.com/questions/54548563/how-to-pass-arguments-to-stored-callbacks", "title": "How to pass arguments to stored callbacks?", "body": "<p>Given a \"delegate\" struct that has a \"handler\" member, how can I invoked the handler with a dynamic string?</p>\n\n<pre><code>pub struct Processor {\n    callback: Box&lt;FnMut()&gt;,\n    message: Option&lt;String&gt;\n}\n\nimpl Processor {\n    pub fn new&lt;CB: 'static + FnMut()&gt;(c: CB) -&gt; Self {\n        Processor {\n            callback: Box::new(c),\n            message: Some(\"\".into())\n        }\n    }\n\n    pub fn set_callback&lt;CB: 'static + FnMut(&amp;str)&gt;(&amp;mut self, callback: CB) {\n        self.callback = Box::new(callback);\n    }\n\n    pub fn set_message&lt;S&gt;(&amp;mut self, message: S) where S: Into&lt;String&gt; {\n        self.message = Some(message.into());\n    }\n\n    pub fn process(&amp;mut self) {\n        match self.message {\n            Some(string) =&gt; {\n                if self.message.chars().count() &gt; 0 {\n                    (self.callback)(self.message);\n                } else {\n                    (self.callback)();\n                }\n            },\n            None =&gt; {}\n        }\n    }\n}\n\nimpl EventEmitter {\n    pub fn new() -&gt; Self {\n        EventEmitter {\n            delegates: Vec::new()\n        }\n    }\n\n    /// Register an Event and a handler\n    pub fn on(&amp;mut self, event: Event, handler: Processor) {\n        self.delegates.push(Delegate::new(event, handler))\n    }\n\n    /// Run handlers on the emitted event\n    pub fn emit(&amp;mut self, name: &amp;'static str/*, with message!! */) {\n        for delegate in self.delegates.iter_mut(){\n            if delegate.event.name == name {\n                delegate.handler.process();\n            }\n        }\n    }\n\n    /// Run handlers on the emitted event\n    pub fn emit_with(&amp;mut self, name: &amp;'static str, message: &amp;'static str) {\n        for delegate in self.delegates.iter_mut() {\n            if delegate.event.name == name {\n                delegate.handler.set_message(message);\n                delegate.handler.process();\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Then later on I have:</p>\n\n<pre><code>emitter.on(\n    Event::new(\"TEST\"), \n    Processor::new(|x| println!(\"Test: {}\", x))\n);\nemitter.emit_with(\"TEST\", \"test\");\n</code></pre>\n\n<p>But the compiler complains:</p>\n\n<pre><code>  --&gt; src/main.rs:97:3\n   |\n97 |         Processor::new(|x| println!(\"Test: {}\", x))\n   |         ^^^^^^^^^^^^^^ --- takes 1 argument\n   |         |\n   |         expected closure that takes 0 arguments\n</code></pre>\n\n<p>If I remove the \"&amp;str\" type argument in the set_callback() definition:</p>\n\n<pre><code>set_callback&lt;CB: 'static + FnMut()&gt;(&amp;mut self, callback: CB)\n</code></pre>\n\n<p>I can get this to work using a closure that does not take any arguments:</p>\n\n<pre><code>emitter.on( // emitter.emit(\"TEST\");\n    Event::new(\"TEST\"), \n    Processor::new(|| println!(\"static string.\"))\n);\n</code></pre>\n\n<p>Is there a way to pass a String to the emit_with() function that can ultimately be passed to the handler?</p>\n"}, {"tags": ["rust", "key-value-store"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549435199, "post_id": 54547868, "comment_id": 95896110, "body": "I think this question should be asked at <a href=\"https://softwarerecs.stackexchange.com/\">software-recommandations</a> Could you please move this question to there."}, {"owner": {"reputation": 363, "user_id": 8378890, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa66d1d860b241703569cc848352c322?s=128&d=identicon&r=PG&f=1", "display_name": "John", "link": "https://stackoverflow.com/users/8378890/john"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549435316, "post_id": 54547868, "comment_id": 95896168, "body": "I already got an answer, but I&#39;ll keep that in mind for the next time"}], "answers": [{"tags": [], "owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "is_accepted": true, "score": 1, "last_activity_date": 1549434995, "creation_date": 1549434995, "answer_id": 54547914, "question_id": 54547868, "link": "https://stackoverflow.com/questions/54547868/compact-key-value-store-in-rust/54547914#54547914", "title": "Compact key value store in Rust", "body": "<p>I can recommend <a href=\"https://github.com/seladb/pickledb-rs\" rel=\"nofollow noreferrer\">PickleDB-rs</a>. I think it answers most of your requirements. PickleDB-rs is a Rust version of <a href=\"https://pythonhosted.org/pickleDB/\" rel=\"nofollow noreferrer\">Python's PickleDB</a>. It's intended for small DBs (I think 1000-2000 records should be ok) and the performance isn't guaranteed to be as great as large scale DBs, but for the purpose of dumping daily web-site stats into a file it should be sufficient.</p>\n"}], "owner": {"reputation": 363, "user_id": 8378890, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa66d1d860b241703569cc848352c322?s=128&d=identicon&r=PG&f=1", "display_name": "John", "link": "https://stackoverflow.com/users/8378890/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 385, "favorite_count": 0, "closed_date": 1593140257, "accepted_answer_id": 54547914, "answer_count": 1, "score": 1, "last_activity_date": 1549434995, "creation_date": 1549434793, "question_id": 54547868, "link": "https://stackoverflow.com/questions/54547868/compact-key-value-store-in-rust", "closed_reason": "Not suitable for this site", "title": "Compact key value store in Rust", "body": "<p>I'm working on a Rust project that collects daily statistics for a web-site (number of requests, number of unique users, average latency etc.). I'd like to store this data in a compact key-value store where the key is a date (or a date string) and the value is an object that contain the statistics. I also need this data to be persisted to a file.</p>\n\n<p>I don't have any special performance or storage requirements. That's why I don't want to use major DBs like Redis, MongoDB or Cassandra that require a separate installation and significant resources to run. I'd like something much simpler and lightweight.</p>\n\n<p>The ideal solution for me would be a library that can read and write key-value data and persist it into a file. The data size I'm aiming for is around 1000-2000 records.</p>\n\n<p>Can you recommend a library I can use?</p>\n"}, {"tags": ["rust", "reqwest"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 11020787, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-1HFCHTapVXs/AAAAAAAAAAI/AAAAAAAAKVc/t0hq2PCqezk/photo.jpg?sz=128", "display_name": "Harrison Grieve", "link": "https://stackoverflow.com/users/11020787/harrison-grieve"}, "edited": false, "score": 0, "creation_date": 1549449362, "post_id": 54547006, "comment_id": 95903039, "body": "Thanks for the help! It&#39;s working as expected. If I wanted to extend this to uploading a file (see my <a href=\"https://github.com/rhgrieve/fastball/blob/master/fastball.py\" rel=\"nofollow noreferrer\">python implementation</a>), would I be able to accomplish this with a HashMap? Error output states <code>the trait serde::ser::Serialize is not implemented for std::fs::File</code>. Is this an issue with the collection itself?"}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "reply_to_user": {"reputation": 13, "user_id": 11020787, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-1HFCHTapVXs/AAAAAAAAAAI/AAAAAAAAKVc/t0hq2PCqezk/photo.jpg?sz=128", "display_name": "Harrison Grieve", "link": "https://stackoverflow.com/users/11020787/harrison-grieve"}, "edited": false, "score": 0, "creation_date": 1549457686, "post_id": 54547006, "comment_id": 95908020, "body": "according to documentation <code>files=</code> param in python <code>requests</code> means &quot;send multipart-encoded file&quot;. Corresponding function in <code>reqwest</code>: <a href=\"https://docs.rs/reqwest/0.9.9/reqwest/struct.RequestBuilder.html#method.multipart\" rel=\"nofollow noreferrer\">docs.rs/reqwest/0.9.9/reqwest/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 2, "last_activity_date": 1549430021, "creation_date": 1549430021, "answer_id": 54547006, "question_id": 54546363, "link": "https://stackoverflow.com/questions/54546363/reqwests-client-post-returning-400-bad-request-for-file-io-api/54547006#54547006", "title": "Reqwest&#39;s Client.post() returning 400 bad request for File.io API", "body": "<p>Your requests are not equivalent. <code>curl --data</code> means you're trying to send a HTML form with content type \"x-www-form-urlencoded\" or similar, whereas this line in your code</p>\n\n<pre><code>.body(\"text=this is a practice run\")\n</code></pre>\n\n<p>means \"just a text\". You should use <code>ReqwestBuilder::form</code> as described <a href=\"https://docs.rs/reqwest/0.9.9/reqwest/struct.RequestBuilder.html#method.form\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 13, "user_id": 11020787, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-1HFCHTapVXs/AAAAAAAAAAI/AAAAAAAAKVc/t0hq2PCqezk/photo.jpg?sz=128", "display_name": "Harrison Grieve", "link": "https://stackoverflow.com/users/11020787/harrison-grieve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "accepted_answer_id": 54547006, "answer_count": 1, "score": 1, "last_activity_date": 1549433174, "creation_date": 1549425171, "question_id": 54546363, "link": "https://stackoverflow.com/questions/54546363/reqwests-client-post-returning-400-bad-request-for-file-io-api", "title": "Reqwest&#39;s Client.post() returning 400 bad request for File.io API", "body": "<p>I'm learning Rust, and thought it would be handy to build a CLI to share files with the File.io API. </p>\n\n<p>To do so, I am trying to use <a href=\"https://docs.rs/crate/reqwest/0.8.1\" rel=\"nofollow noreferrer\">reqwest</a> to send a request as described in the <a href=\"https://www.file.io/#api\" rel=\"nofollow noreferrer\">File.io docs</a>:</p>\n\n<pre><code># from file.io doc -&gt; works fine\n$ curl --data \"text=this is a secret pw\" https://file.io\n&gt; {\"success\":true,\"key\":\"zX0Vko\",\"link\":\"https://file.io/zX0Vko\",\"expiry\":\"14 days\"}\n</code></pre>\n\n<p>When I run the below code, I get a 400 response. Perhaps there's an issue with the headers? I've tried looking at the curl docs to find out what I could be missing, but I'm stumped. </p>\n\n<p>Any help would be appreciated. </p>\n\n<p>My code: </p>\n\n<pre><code>extern crate reqwest;\n\nfn main() {\n    let client = reqwest::Client::new();\n    let res = client.post(\"https://file.io/\")\n        .body(\"text=this is a practice run\")\n        .send();\n\n    println!(\"{:?}\", res);\n}\n</code></pre>\n\n<p>Expected Response: </p>\n\n<pre><code>{\"success\":true,\"key\":\"SOME_KEY\",\"link\":\"SOME_LINK\",\"expiry\":\"14 days\"}\n</code></pre>\n\n<p>Actual Response:</p>\n\n<pre><code>Ok(Response { url: \"https://file.io/\", status: 400, headers: {\"date\": \"Wed, 06 Feb 2019 03:40:35 GMT\", \"content-type\": \"application/json; charset=utf-8\", \"content-length\": \"64\", \"connection\": \"keep-alive\", \"x-powered-by\": \"Express\", \"x-ratelimit-limit\": \"5\", \"x-ratelimit-remaining\": \"4\", \"access-control-allow-origin\": \"*\", \"access-control-allow-headers\": \"Cache-Control,X-reqed-With,x-requested-with\", \"etag\": \"W/\\\"40-SEaBd3tIA9c06hg3p17dhWTvFz0\\\"\"} })\n</code></pre>\n"}, {"tags": ["compiler-errors", "rust", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1549424010, "last_edit_date": 1549424010, "creation_date": 1549423625, "answer_id": 54546209, "question_id": 54545775, "link": "https://stackoverflow.com/questions/54545775/why-can-i-not-add-a-main-rs-to-a-crates-source-code-and-import-a-struct/54546209#54546209", "title": "Why can I not add a main.rs to a crate&#39;s source code and import a struct?", "body": "<p>First things first, go back and re-read <a href=\"https://doc.rust-lang.org/book/ch07-00-packages-crates-and-modules.html\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em>'s chapter on \"Packages, Crates, and Modules\"</a>. This discusses several fundamental concepts that are vital for understanding.</p>\n\n<blockquote>\n  <p>Why can I not clone a git project, add a main.rs and import one of the structs?</p>\n</blockquote>\n\n<p>To me, this feels like the same question as \"why can't I reach into another human, grab their lungs, and then use them to breathe\"? You simply cannot download some arbitrary Rust library and start pulling random files out of it and expect them to work. </p>\n\n<p>Specifically in your case, all libraries have a <code>lib.rs</code> that is the <em>crate root</em>. The crate root tends to have many common definitions that are needed by the rest of the code and imports all the submodules. When you create a <code>main.rs</code> and declare the modules from the library as your own, your <code>main.rs</code> <em>becomes</em> the crate root, but it doesn't define all the things that the library needs. This causes the code to fail to compile.</p>\n\n<p>Instead, just use the crate <em>as a library</em>, as it's intended.</p>\n\n<p>The <strong>easiest</strong> thing to do create a new Cargo project and add the crate as a dependency to your Cargo.toml. The <a href=\"https://crates.io/crates/gitlab\" rel=\"nofollow noreferrer\"><code>gitlab</code> crate is already distributed on crates.io</a>, so you just add the version number:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\ngitlab = \"0.1104.1\"\n</code></pre>\n\n<p>Add <code>use gitlab::types::*</code> in your <code>main.rs</code> and write your code.</p>\n\n<hr>\n\n<p>If you need to use the locally-checked out sources (perhaps you are modifying the crate?), or if you really want to edit the upstream library to have both a <code>lib.rs</code> and <code>main.rs</code>, see:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33025887/155423\">How to use a local unpublished crate?</a></li>\n<li><a href=\"https://stackoverflow.com/q/26946646/155423\">Rust package with both a library and a binary?</a></li>\n</ul>\n"}], "owner": {"reputation": 22041, "user_id": 108207, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas R.", "link": "https://stackoverflow.com/users/108207/niklas-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 54546209, "answer_count": 1, "score": 0, "last_activity_date": 1549424143, "creation_date": 1549419582, "last_edit_date": 1549424143, "question_id": 54545775, "link": "https://stackoverflow.com/questions/54545775/why-can-i-not-add-a-main-rs-to-a-crates-source-code-and-import-a-struct", "title": "Why can I not add a main.rs to a crate&#39;s source code and import a struct?", "body": "<p>Why can I not clone a git project, add a <code>main.rs</code> and import one of the structs? The compiler complains that the import is unknown and if I make it known it complains about the library file can't be compiled. </p>\n\n<p>My files</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\datan\\proj\\gitlab.kitware.com\\rust-gitlab&gt;dir\n Volume in drive C is OS\n Volume Serial Number is 9410-E4E7\n\n Directory of C:\\Users\\datan\\proj\\gitlab.kitware.com\\rust-gitlab\n\n2019-02-06  02:12    &lt;DIR&gt;          .\n2019-02-06  02:12    &lt;DIR&gt;          ..\n2019-02-06  02:04                20 .gitignore\n2019-02-06  03:18    &lt;DIR&gt;          .idea\n2019-02-06  02:05            63\u00a0519 Cargo.lock\n2019-02-06  02:04               660 Cargo.toml\n2019-02-06  02:12    &lt;DIR&gt;          cmake-build-debug\n2019-02-06  02:04    &lt;DIR&gt;          data\n2019-02-06  02:04            11\u00a0048 LICENSE-APACHE\n2019-02-06  02:04             1\u00a0082 LICENSE-MIT\n2019-02-06  02:04             2\u00a0720 README.md\n2019-02-06  02:04               335 rustfmt.toml\n2019-02-06  03:16    &lt;DIR&gt;          src\n2019-02-06  02:11    &lt;DIR&gt;          target\n               7 File(s)         79\u00a0384 bytes\n               7 Dir(s)  55\u00a0351\u00a0238\u00a0656 bytes free\n</code></pre>\n\n<p>My \"code\":</p>\n\n<pre><code>use types::*;\n\nfn main() {\n    println!(\"Hello, rust-gitlab!\");\n    let repo_commit_detail: RepoCommitDetail = read_test_file(\"repo_commit_detail\");\n}\n</code></pre>\n\n<p>Structure</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Users\\datan\\proj\\gitlab.kitware.com\\rust-gitlab&gt;tree .\nFolder PATH listing for volume OS\nVolume serial number is 00000242 9410:E4E7\nC:\\USERS\\DATAN\\PROJ\\GITLAB.KITWARE.COM\\RUST-GITLAB\n\u251c\u2500\u2500\u2500.idea\n\u2502   \u2514\u2500\u2500\u2500codeStyles\n\u251c\u2500\u2500\u2500cmake-build-debug\n\u2502   \u2514\u2500\u2500\u2500CMakeFiles\n\u251c\u2500\u2500\u2500data\n\u251c\u2500\u2500\u2500src\n\u2502   \u2514\u2500\u2500\u2500test\n\u2514\u2500\u2500\u2500target\n    \u2514\u2500\u2500\u2500debug\n        \u251c\u2500\u2500\u2500.fingerprint\n        \u2502   \u251c\u2500\u2500\u2500adler32-008121952d6e723e\n        \u2502   \u251c\u2500\u2500\u2500arrayvec-646ad0ece92a7d00\n        \u2502   \u251c\u2500\u2500\u2500arrayvec-800298e92d8a6b00\n        \u2502   \u251c\u2500\u2500\u2500arrayvec-8dcfe3021b2d6a8c\n        \u2502   \u251c\u2500\u2500\u2500autocfg-d540d3308658af53\n        \u2502   \u251c\u2500\u2500\u2500backtrace-4a5d8bbe58343768\n        \u2502   \u251c\u2500\u2500\u2500backtrace-76389fa126a505ca\n        \u2502   \u251c\u2500\u2500\u2500backtrace-a25120398233fbf2\n        \u2502   \u251c\u2500\u2500\u2500base64-8605715cecafa1de\n        \u2502   \u251c\u2500\u2500\u2500byteorder-6005d7caf2ed9454\n        \u2502   \u251c\u2500\u2500\u2500byteorder-675368122e548ca7\n        \u2502   \u251c\u2500\u2500\u2500byteorder-cacda78970cb326d\n        \u2502   \u251c\u2500\u2500\u2500bytes-245614f42b19aebe\n        \u2502   \u251c\u2500\u2500\u2500cfg-if-199b060bf8390609\n        \u2502   \u251c\u2500\u2500\u2500chrono-5959f27994de03e0\n        \u2502   \u251c\u2500\u2500\u2500crc32fast-0e880f27a0ce35a3\n        \u2502   \u251c\u2500\u2500\u2500crc32fast-601ce62d000e21bd\n        \u2502   \u251c\u2500\u2500\u2500crc32fast-9c59fdb01a618f87\n        \u2502   \u251c\u2500\u2500\u2500crossbeam-424114c559f55459\n        \u2502   \u251c\u2500\u2500\u2500crossbeam-channel-11d639148a522581\n        \u2502   \u251c\u2500\u2500\u2500crossbeam-deque-52c98f99d1a02bdd\n        \u2502   \u251c\u2500\u2500\u2500crossbeam-epoch-af8d62f026998a89\n        \u2502   \u251c\u2500\u2500\u2500crossbeam-utils-0d1e4d7da8a9ef57\n        \u2502   \u251c\u2500\u2500\u2500dtoa-24ecc23d181a18d5\n        \u2502   \u251c\u2500\u2500\u2500either-2ee3e437ff6c971e\n        \u2502   \u251c\u2500\u2500\u2500encoding_rs-d0dc5ad1a07eed3c\n        \u2502   \u251c\u2500\u2500\u2500encoding_rs-da47aa074a980d52\n        \u2502   \u251c\u2500\u2500\u2500encoding_rs-fd6e16943622578f\n        \u2502   \u251c\u2500\u2500\u2500error-chain-bf90b77261c62193\n        \u2502   \u251c\u2500\u2500\u2500fnv-aa2431fc6bc1ad66\n        \u2502   \u251c\u2500\u2500\u2500futures-c6e67b10dc6edbd6\n        \u2502   \u251c\u2500\u2500\u2500futures-cpupool-8e39e86f34ba679d\n        \u2502   \u251c\u2500\u2500\u2500gitlab-08ffdd36690d90f8\n        \u2502   \u251c\u2500\u2500\u2500gitlab-11fbba92a7cac036\n        \u2502   \u251c\u2500\u2500\u2500gitlab-6a33ea7f6205065e\n        \u2502   \u251c\u2500\u2500\u2500gitlab-ff4e8c6912a1992b\n        \u2502   \u251c\u2500\u2500\u2500h2-0ee18ce773a0a89d\n        \u2502   \u251c\u2500\u2500\u2500http-d2636b675bcf6465\n        \u2502   \u251c\u2500\u2500\u2500httparse-3bfb6bbc4103b725\n        \u2502   \u251c\u2500\u2500\u2500httparse-945236f44bbaae4b\n        \u2502   \u251c\u2500\u2500\u2500httparse-a633d1291de4b063\n        \u2502   \u251c\u2500\u2500\u2500hyper-d5c769dc0bac17de\n        \u2502   \u251c\u2500\u2500\u2500hyper-tls-bb5d862976202e56\n        \u2502   \u251c\u2500\u2500\u2500idna-eb455bf3c0c933b1\n        \u2502   \u251c\u2500\u2500\u2500indexmap-fd3d2119afdeaa48\n        \u2502   \u251c\u2500\u2500\u2500iovec-baee453073a2d5a5\n        \u2502   \u251c\u2500\u2500\u2500itertools-ecd8c4d65670cbd4\n        \u2502   \u251c\u2500\u2500\u2500itoa-2d8a8a209336a4b1\n        \u2502   \u251c\u2500\u2500\u2500kernel32-sys-323344e9ba717bff\n        \u2502   \u251c\u2500\u2500\u2500kernel32-sys-83eb403a9b94134f\n        \u2502   \u251c\u2500\u2500\u2500kernel32-sys-8f6a7cb898839565\n        \u2502   \u251c\u2500\u2500\u2500lazycell-c863022fb753ec04\n        \u2502   \u251c\u2500\u2500\u2500lazy_static-ba3bb80e02027d7a\n        \u2502   \u251c\u2500\u2500\u2500libc-058cf61bc83378d2\n        \u2502   \u251c\u2500\u2500\u2500libc-0d6d3d189a8fcbc8\n        \u2502   \u251c\u2500\u2500\u2500libc-7939fbb070556365\n        \u2502   \u251c\u2500\u2500\u2500libflate-dda03a69fd4704db\n        \u2502   \u251c\u2500\u2500\u2500lock_api-effbd268c74fb367\n        \u2502   \u251c\u2500\u2500\u2500log-2694fa5b5ff478b9\n        \u2502   \u251c\u2500\u2500\u2500matches-34ff768fe7fdff16\n        \u2502   \u251c\u2500\u2500\u2500memoffset-5218595f33c3708e\n        \u2502   \u251c\u2500\u2500\u2500mime-c20b452517077c0f\n        \u2502   \u251c\u2500\u2500\u2500mime_guess-78f6fdcc75bfb801\n        \u2502   \u251c\u2500\u2500\u2500mime_guess-b0cdb33e00444552\n        \u2502   \u251c\u2500\u2500\u2500mime_guess-bbd685b703852b01\n        \u2502   \u251c\u2500\u2500\u2500mio-97ff8160514f5116\n        \u2502   \u251c\u2500\u2500\u2500miow-77aa8c8f9462ad96\n        \u2502   \u251c\u2500\u2500\u2500native-tls-3753990a7317fe2a\n        \u2502   \u251c\u2500\u2500\u2500native-tls-6abda051a7bbee28\n        \u2502   \u251c\u2500\u2500\u2500native-tls-f608c79f4e18dacd\n        \u2502   \u251c\u2500\u2500\u2500net2-508ac492f9b7b00d\n        \u2502   \u251c\u2500\u2500\u2500nodrop-9f556cbcc9819baa\n        \u2502   \u251c\u2500\u2500\u2500num-integer-3b8af9e09499eb17\n        \u2502   \u251c\u2500\u2500\u2500num-integer-6591db06d92151f8\n        \u2502   \u251c\u2500\u2500\u2500num-integer-f5b2b5fbdf9ab12f\n        \u2502   \u251c\u2500\u2500\u2500num-traits-122ab06899abc72a\n        \u2502   \u251c\u2500\u2500\u2500num-traits-5e3121b94e205820\n        \u2502   \u251c\u2500\u2500\u2500num-traits-892c39b3d2eb30ab\n        \u2502   \u251c\u2500\u2500\u2500num_cpus-e0b2ff8b8d59c6e1\n        \u2502   \u251c\u2500\u2500\u2500owning_ref-bf183c7d773e0123\n        \u2502   \u251c\u2500\u2500\u2500parking_lot-12a126bd707a9322\n        \u2502   \u251c\u2500\u2500\u2500parking_lot_core-5118c128aa288759\n        \u2502   \u251c\u2500\u2500\u2500parking_lot_core-d807a50d17f4c651\n        \u2502   \u251c\u2500\u2500\u2500parking_lot_core-ff708f491c5bff4c\n        \u2502   \u251c\u2500\u2500\u2500percent-encoding-2476bdc6c1b57ab9\n        \u2502   \u251c\u2500\u2500\u2500phf-94566d3a79ef4ee4\n        \u2502   \u251c\u2500\u2500\u2500phf_codegen-e81124e1842629f7\n        \u2502   \u251c\u2500\u2500\u2500phf_generator-77be707e85bdbaab\n        \u2502   \u251c\u2500\u2500\u2500phf_shared-83f1cdc4827f16e2\n        \u2502   \u251c\u2500\u2500\u2500proc-macro2-3730dc9da7871eda\n        \u2502   \u251c\u2500\u2500\u2500proc-macro2-490294cd99fdab5c\n        \u2502   \u251c\u2500\u2500\u2500proc-macro2-a7ad7b68ac88e1e9\n        \u2502   \u251c\u2500\u2500\u2500quote-0815e85bf26aa999\n        \u2502   \u251c\u2500\u2500\u2500rand-36058bce56ceb9f0\n        \u2502   \u251c\u2500\u2500\u2500rand-7bb4cfe73bf0dd1e\n        \u2502   \u251c\u2500\u2500\u2500rand-e1919e05ce4b78ef\n        \u2502   \u251c\u2500\u2500\u2500rand_chacha-5b135890bc288e05\n        \u2502   \u251c\u2500\u2500\u2500rand_chacha-88fea0759acfb849\n        \u2502   \u251c\u2500\u2500\u2500rand_chacha-ff6617e45043fb8d\n        \u2502   \u251c\u2500\u2500\u2500rand_core-22f8b569c1c44c74\n        \u2502   \u251c\u2500\u2500\u2500rand_core-44b0efb2e9232e43\n        \u2502   \u251c\u2500\u2500\u2500rand_hc-6db16b100e560df6\n        \u2502   \u251c\u2500\u2500\u2500rand_isaac-cd4ed7aeaa173fa8\n        \u2502   \u251c\u2500\u2500\u2500rand_jitter-594b9541efdf7198\n        \u2502   \u251c\u2500\u2500\u2500rand_os-408f5a001096e49e\n        \u2502   \u251c\u2500\u2500\u2500rand_pcg-04b94dbba308ed6e\n        \u2502   \u251c\u2500\u2500\u2500rand_pcg-7251ce262f199c3c\n        \u2502   \u251c\u2500\u2500\u2500rand_pcg-ee7758f0896a3792\n        \u2502   \u251c\u2500\u2500\u2500rand_xorshift-b4798ffeed80dc8e\n        \u2502   \u251c\u2500\u2500\u2500reqwest-8cc9d5a46fc1cada\n        \u2502   \u251c\u2500\u2500\u2500rustc-demangle-54becd0a270f9042\n        \u2502   \u251c\u2500\u2500\u2500rustc_version-a903e7df435c73ab\n        \u2502   \u251c\u2500\u2500\u2500ryu-5f4d3c0db59c3c54\n        \u2502   \u251c\u2500\u2500\u2500ryu-6ba019180c4a274b\n        \u2502   \u251c\u2500\u2500\u2500ryu-9235d9421bf627c7\n        \u2502   \u251c\u2500\u2500\u2500schannel-8bdf6ec01769ef1c\n        \u2502   \u251c\u2500\u2500\u2500scopeguard-56bbc3bacf26b561\n        \u2502   \u251c\u2500\u2500\u2500semver-c5c93388824cc96e\n        \u2502   \u251c\u2500\u2500\u2500semver-parser-654d61a88b761106\n        \u2502   \u251c\u2500\u2500\u2500serde-d8d5485694af815f\n        \u2502   \u251c\u2500\u2500\u2500serde-dad6256f5839031b\n        \u2502   \u251c\u2500\u2500\u2500serde-fe431a9eda84f305\n        \u2502   \u251c\u2500\u2500\u2500serde_derive-27a8dc8a7e741ec3\n        \u2502   \u251c\u2500\u2500\u2500serde_json-54e6f40131bbe4f3\n        \u2502   \u251c\u2500\u2500\u2500serde_urlencoded-164f04fa4cf91ece\n        \u2502   \u251c\u2500\u2500\u2500siphasher-2144e89659a7ccab\n        \u2502   \u251c\u2500\u2500\u2500slab-29ad5a838c81f6af\n        \u2502   \u251c\u2500\u2500\u2500smallvec-8c0ee41d14e5bd2a\n        \u2502   \u251c\u2500\u2500\u2500stable_deref_trait-6b5901538f6cb51d\n        \u2502   \u251c\u2500\u2500\u2500string-726f5a2abd463420\n        \u2502   \u251c\u2500\u2500\u2500syn-3788b283d77da292\n        \u2502   \u251c\u2500\u2500\u2500time-2cbb174b24b625e6\n        \u2502   \u251c\u2500\u2500\u2500tokio-current-thread-3f718ab37342974a\n        \u2502   \u251c\u2500\u2500\u2500tokio-executor-e90e6a555413eaff\n        \u2502   \u251c\u2500\u2500\u2500tokio-f4f06f03abb9066d\n        \u2502   \u251c\u2500\u2500\u2500tokio-io-83563994d5ed4ae3\n        \u2502   \u251c\u2500\u2500\u2500tokio-reactor-cee5f1c0b2993ee0\n        \u2502   \u251c\u2500\u2500\u2500tokio-tcp-e384fdc1139f59d4\n        \u2502   \u251c\u2500\u2500\u2500tokio-threadpool-f5fc7c392f4d3bcd\n        \u2502   \u251c\u2500\u2500\u2500tokio-timer-baf35f3876a94a68\n        \u2502   \u251c\u2500\u2500\u2500try-lock-5b05e80f1baf5381\n        \u2502   \u251c\u2500\u2500\u2500unicase-24a369037c028ed4\n        \u2502   \u251c\u2500\u2500\u2500unicase-355ca4fd327fabfd\n        \u2502   \u251c\u2500\u2500\u2500unicase-5ce264aa1273838b\n        \u2502   \u251c\u2500\u2500\u2500unicase-8ac0f082768d424a\n        \u2502   \u251c\u2500\u2500\u2500unicase-cf024d918a538866\n        \u2502   \u251c\u2500\u2500\u2500unicase-e9044cba12acdee6\n        \u2502   \u251c\u2500\u2500\u2500unicode-bidi-bb475f0c3944d6b7\n        \u2502   \u251c\u2500\u2500\u2500unicode-normalization-64e9089438d2ebfd\n        \u2502   \u251c\u2500\u2500\u2500unicode-xid-a7467f62a39abf94\n        \u2502   \u251c\u2500\u2500\u2500unreachable-67223564bef6342d\n        \u2502   \u251c\u2500\u2500\u2500url-58e1116538252022\n        \u2502   \u251c\u2500\u2500\u2500uuid-8d3ab2c31242ff75\n        \u2502   \u251c\u2500\u2500\u2500version_check-8ad7f975e23d024d\n        \u2502   \u251c\u2500\u2500\u2500void-0896fe1d47015a04\n        \u2502   \u251c\u2500\u2500\u2500want-6f48436d34182abd\n        \u2502   \u251c\u2500\u2500\u2500winapi-4a53e903331f64f4\n        \u2502   \u251c\u2500\u2500\u2500winapi-4b6d1267534d970d\n        \u2502   \u251c\u2500\u2500\u2500winapi-6f75c5e1021b74d7\n        \u2502   \u251c\u2500\u2500\u2500winapi-752db0e8208ff517\n        \u2502   \u251c\u2500\u2500\u2500winapi-build-2ed6cec7c9de885d\n        \u2502   \u251c\u2500\u2500\u2500ws2_32-sys-5c26f11f3d3ba52f\n        \u2502   \u251c\u2500\u2500\u2500ws2_32-sys-a6c2fe9a71ea1454\n        \u2502   \u2514\u2500\u2500\u2500ws2_32-sys-e4a5aabbb21dd0b8\n        \u251c\u2500\u2500\u2500build\n        \u2502   \u251c\u2500\u2500\u2500arrayvec-646ad0ece92a7d00\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500arrayvec-8dcfe3021b2d6a8c\n        \u2502   \u251c\u2500\u2500\u2500backtrace-4a5d8bbe58343768\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500backtrace-76389fa126a505ca\n        \u2502   \u251c\u2500\u2500\u2500byteorder-6005d7caf2ed9454\n        \u2502   \u251c\u2500\u2500\u2500byteorder-cacda78970cb326d\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500crc32fast-601ce62d000e21bd\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500crc32fast-9c59fdb01a618f87\n        \u2502   \u251c\u2500\u2500\u2500encoding_rs-d0dc5ad1a07eed3c\n        \u2502   \u251c\u2500\u2500\u2500encoding_rs-da47aa074a980d52\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500httparse-3bfb6bbc4103b725\n        \u2502   \u251c\u2500\u2500\u2500httparse-a633d1291de4b063\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500kernel32-sys-323344e9ba717bff\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500kernel32-sys-83eb403a9b94134f\n        \u2502   \u251c\u2500\u2500\u2500libc-058cf61bc83378d2\n        \u2502   \u251c\u2500\u2500\u2500libc-7939fbb070556365\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500mime_guess-78f6fdcc75bfb801\n        \u2502   \u251c\u2500\u2500\u2500mime_guess-b0cdb33e00444552\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500native-tls-6abda051a7bbee28\n        \u2502   \u251c\u2500\u2500\u2500native-tls-f608c79f4e18dacd\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500num-integer-3b8af9e09499eb17\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500num-integer-f5b2b5fbdf9ab12f\n        \u2502   \u251c\u2500\u2500\u2500num-traits-122ab06899abc72a\n        \u2502   \u251c\u2500\u2500\u2500num-traits-892c39b3d2eb30ab\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500parking_lot_core-5118c128aa288759\n        \u2502   \u251c\u2500\u2500\u2500parking_lot_core-ff708f491c5bff4c\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500proc-macro2-3730dc9da7871eda\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500proc-macro2-a7ad7b68ac88e1e9\n        \u2502   \u251c\u2500\u2500\u2500rand-7bb4cfe73bf0dd1e\n        \u2502   \u251c\u2500\u2500\u2500rand-e1919e05ce4b78ef\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500rand_chacha-5b135890bc288e05\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500rand_chacha-88fea0759acfb849\n        \u2502   \u251c\u2500\u2500\u2500rand_pcg-04b94dbba308ed6e\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500rand_pcg-ee7758f0896a3792\n        \u2502   \u251c\u2500\u2500\u2500ryu-5f4d3c0db59c3c54\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500ryu-6ba019180c4a274b\n        \u2502   \u251c\u2500\u2500\u2500serde-d8d5485694af815f\n        \u2502   \u251c\u2500\u2500\u2500serde-fe431a9eda84f305\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500unicase-355ca4fd327fabfd\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500unicase-5ce264aa1273838b\n        \u2502   \u251c\u2500\u2500\u2500unicase-8ac0f082768d424a\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500unicase-e9044cba12acdee6\n        \u2502   \u251c\u2500\u2500\u2500winapi-6f75c5e1021b74d7\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u251c\u2500\u2500\u2500winapi-752db0e8208ff517\n        \u2502   \u251c\u2500\u2500\u2500ws2_32-sys-a6c2fe9a71ea1454\n        \u2502   \u2502   \u2514\u2500\u2500\u2500out\n        \u2502   \u2514\u2500\u2500\u2500ws2_32-sys-e4a5aabbb21dd0b8\n        \u251c\u2500\u2500\u2500deps\n        \u251c\u2500\u2500\u2500examples\n        \u251c\u2500\u2500\u2500incremental\n        \u2502   \u251c\u2500\u2500\u2500gitlab-18ycyqu9smunr\n        \u2502   \u2502   \u2514\u2500\u2500\u2500s-f97zmznulc-1et4slk-glq89ki51e1z\n        \u2502   \u251c\u2500\u2500\u2500gitlab-2ig8akjm0w1yx\n        \u2502   \u2502   \u251c\u2500\u2500\u2500s-f980cgaxw0-1jrgkvo-1ievukzcrjc88\n        \u2502   \u2502   \u2514\u2500\u2500\u2500s-f981eiai94-z9lt25-working\n        \u2502   \u2514\u2500\u2500\u2500gitlab-3fwelxjyajmph\n        \u2502       \u2514\u2500\u2500\u2500s-f97zp4swxe-tfxev5-1duuud7rw47m5\n        \u2514\u2500\u2500\u2500native\n</code></pre>\n\n<p>If I make my <code>main.rs</code> compile by following all available advice, then I break the library which I have not touched:</p>\n\n<pre><code>error[E0433]: failed to resolve: maybe a missing extern crate crates;? --&gt; src\\types.rs:17:5 | 17 | use crates::chrono::{DateTime, NaiveDate, Utc}; | ^^^^^^ maybe a missing extern crate crates;?\n</code></pre>\n"}, {"tags": ["methods", "reference", "rust", "immutability"], "comments": [{"owner": {"reputation": 28753, "user_id": 371184, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cebee1b08fb960edf79a359af330391a?s=128&d=identicon&r=PG", "display_name": "Mike Cluck", "link": "https://stackoverflow.com/users/371184/mike-cluck"}, "edited": false, "score": 1, "creation_date": 1549403232, "post_id": 54543522, "comment_id": 95888228, "body": "What&#39;s the reasoning behind this? If I&#39;m not mistaken, you want to first consume <code>self</code> by taking ownership of it then mutate <code>self</code> after you&#39;ve already handed it over. What is your actual goal?"}, {"owner": {"reputation": 441, "user_id": 10364449, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14647f02302a1fc1ee251f5cd7318f69?s=128&d=identicon&r=PG&f=1", "display_name": "Arek C.", "link": "https://stackoverflow.com/users/10364449/arek-c"}, "edited": false, "score": 0, "creation_date": 1549403351, "post_id": 54543522, "comment_id": 95888280, "body": "You do not need to pass a self argument. It&#39;s already &quot;passed&quot; when you call this method on a self instance"}, {"owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 1, "creation_date": 1549403602, "post_id": 54543522, "comment_id": 95888375, "body": "<code>add_assign</code> is supposed to use self and generally a different variable <code>other</code> to be added. But if I want to double, I want not to duplicate my code in <code>add_assign</code> and just pass <code>self</code> as the argument to be added."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1549406970, "post_id": 54543522, "comment_id": 95889445, "body": "@Fomalhaut You should make an add_assign (use the trait BTW), that take self, and the true type you want to add that will implement clone or copy."}], "answers": [{"comments": [{"owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 0, "creation_date": 1549403843, "post_id": 54543609, "comment_id": 95888465, "body": "If I had <code>copy</code> or <code>clone</code> how the correct code would look like? Could you, please, provide a full working example of my <code>double</code> with <code>copy</code> or <code>clone</code> implementation?"}, {"owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 0, "creation_date": 1549404594, "post_id": 54543609, "comment_id": 95888752, "body": "With <code>clone</code> it doesn&#39;t work. The error is <code>immutable borrow occurs here</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 0, "creation_date": 1549404676, "post_id": 54543609, "comment_id": 95888779, "body": "@Fomalhaut <a href=\"https://stackoverflow.com/q/41187296/155423\">please upgrade to Rust&#39;s 2018 Edition</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1589214419, "last_edit_date": 1589214419, "creation_date": 1549403492, "answer_id": 54543609, "question_id": 54543522, "link": "https://stackoverflow.com/questions/54543522/how-do-i-convert-a-mutable-reference-to-self-into-an-immutable-reference-to-be-u/54543609#54543609", "title": "How do I convert a mutable reference to self into an immutable reference to be used as an argument for a method?", "body": "<h1>For the current version of the question</h1>\n\n<blockquote>\n<pre><code>fn add_assign(&amp;mut self, other: &amp;Self)\n</code></pre>\n</blockquote>\n\n<p>Your request is impossible.</p>\n\n<p>You cannot have a mutable reference and an immutable reference to the same value at the same time. This is a fundamental aspect of Rust.</p>\n\n<p>Please re-read <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">the rules of references</a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47618823/155423\">Cannot borrow as mutable because it is also borrowed as immutable</a></li>\n</ul>\n\n<h1>For the <a href=\"https://stackoverflow.com/revisions/54543522/2\">first version</a> of the question</h1>\n\n<blockquote>\n<pre><code>fn add_assign(&amp;mut self, other: Self)\n</code></pre>\n</blockquote>\n\n<p>Your request is impossible.</p>\n\n<p>You need one instance of struct <code>A</code> to call the method on and <em>another</em> instance of <code>A</code> to pass as the argument. Your type does not implement <code>Copy</code> or <code>Clone</code> or provide any equivalent methods so there is <strong>no way</strong> to get a second instance.</p>\n\n<p>Beyond that, there's no universal way to take a mutable reference to a value and get an owned value out of it.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content / cannot move out of behind a shared reference</a></li>\n</ul>\n\n<h1>Workarounds</h1>\n\n<p>If you implement <code>Copy</code> or <code>Clone</code>, then you can get a second value from the original and then call either of your versions.</p>\n\n<p>If you implemented <code>Copy</code>:</p>\n\n<ul>\n<li><p><code>(other: Self)</code></p>\n\n<pre><code>self.add_assign(*self);\n</code></pre></li>\n<li><p><code>(other: &amp;Self)</code></p>\n\n<pre><code>let other = *self;\nself.add_assign(&amp;other);\n</code></pre></li>\n</ul>\n\n<p>If only <code>Clone</code>:</p>\n\n<ul>\n<li><p><code>(other: Self)</code></p>\n\n<pre><code>self.add_assign(self.clone());\n</code></pre></li>\n<li><p><code>(other: &amp;Self)</code></p>\n\n<pre><code>self.add_assign(&amp;self.clone());\n</code></pre></li>\n</ul>\n\n<p>You probably want to implement the <a href=\"https://doc.rust-lang.org/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\"><code>AddAssign</code></a> trait to provide syntax sugar. Assuming you've implemented <code>Copy</code>:</p>\n\n<pre><code>impl A {\n    fn double(&amp;mut self) {\n        *self += *self;\n    }\n}\n\nimpl std::ops::AddAssign&lt;Self&gt; for A {\n    fn add_assign(&amp;mut self, other: Self) {\n        self.x += other.x;\n    }\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/54543522/how-do-i-convert-a-mutable-reference-to-self-into-an-immutable-reference-to-be-u#comment95889445_54543522\">Stargateur's comment</a> may also be applicable, as <code>i32</code> implements <code>Copy</code>:</p>\n\n<pre><code>impl A {\n    fn double(&amp;mut self) {\n        *self += self.x;\n    }\n}\n\nimpl std::ops::AddAssign&lt;i32&gt; for A {\n    fn add_assign(&amp;mut self, other: i32) {\n        self.x += other;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1064, "favorite_count": 0, "accepted_answer_id": 54543609, "answer_count": 1, "score": 0, "last_activity_date": 1589214419, "creation_date": 1549402958, "last_edit_date": 1549404496, "question_id": 54543522, "link": "https://stackoverflow.com/questions/54543522/how-do-i-convert-a-mutable-reference-to-self-into-an-immutable-reference-to-be-u", "title": "How do I convert a mutable reference to self into an immutable reference to be used as an argument for a method?", "body": "<p>I have following code that can't be compiled:</p>\n\n<pre><code>struct A {\n    x: i32,\n}\n\nimpl A {\n    fn add_assign(&amp;mut self, other: &amp;Self) {\n        self.x += other.x;\n    }\n\n    fn double(&amp;mut self) {\n        self.add_assign(self);\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:11:9\n   |\n11 |         self.add_assign(self);\n   |         ^^^^^----------^----^\n   |         |    |          |\n   |         |    |          immutable borrow occurs here\n   |         |    immutable borrow later used by call\n   |         mutable borrow occurs here\n</code></pre>\n\n<p>How to pass <code>self</code> as the argument of <code>add_assign</code>? I have tried <code>&amp;self</code>, <code>*self</code>, <code>&amp;*self</code> without success.</p>\n"}, {"tags": ["methods", "reference", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1549402582, "last_edit_date": 1549402582, "creation_date": 1549402199, "answer_id": 54543332, "question_id": 54543286, "link": "https://stackoverflow.com/questions/54543286/how-to-assign-data-of-a-struct-into-self-in-a-method/54543332#54543332", "title": "How to assign data of a struct into self in a method?", "body": "<p>You need to dereference <code>self</code>:</p>\n\n<pre><code>*self = a;\n</code></pre>\n\n<p>There's nothing unique about <code>self</code> or the fact that this is a method. The same thing is true for <em>any</em> mutable reference where you are replacing the value. </p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27098694/155423\">How can I swap in a new value for a field in a mutable reference to a structure?</a></li>\n</ul>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 54543332, "answer_count": 1, "score": 0, "last_activity_date": 1549402582, "creation_date": 1549401990, "last_edit_date": 1549402239, "question_id": 54543286, "link": "https://stackoverflow.com/questions/54543286/how-to-assign-data-of-a-struct-into-self-in-a-method", "title": "How to assign data of a struct into self in a method?", "body": "<p>I am trying to modify <code>self</code> that temporarily is stored into another variable. At the last step I want to copy all the data from the variable into <code>self</code>.</p>\n\n<pre><code>struct A {\n    x: i32,\n}\n\nimpl A {\n    fn new() -&gt; Self {\n        Self { x: 0 }\n    }\n\n    fn change(&amp;mut self) {\n        let mut a = Self::new();\n        a.x += 1;\n\n        self = a; // How to copy data from a variable into self?\n    }\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:14:16\n   |\n14 |         self = a; // How to copy data from a variable into self?\n   |                ^\n   |                |\n   |                expected &amp;mut A, found struct `A`\n   |                help: consider mutably borrowing here: `&amp;mut a`\n   |\n   = note: expected type `&amp;mut A`\n              found type `A`\n</code></pre>\n\n<p>I have tried <code>self = &amp;a</code> and <code>self = &amp;mut a</code>, it didn't work. How am I supposed to copy the data into <code>self</code> from <code>a</code> in this line?</p>\n\n<p>I know that my example is not optimal because I could just write <code>self.x += 1</code>. In my complete project, I have hard calculations with <code>a</code> that include <code>self</code> itself so I need to copy in the last line strictly.</p>\n"}, {"tags": ["linux", "rust"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1549355423, "post_id": 54530125, "comment_id": 95862099, "body": "<i>File mode</i> is a dozen or so bits that say what can be done with the file. These bits do not contain the uid, the gid, and a host of other information There are other parts of metadata besides the mode. Try <code>let user_id = meta.uid();</code> or something."}, {"owner": {"reputation": 169, "user_id": 11016337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aeacd7e5f41e814d67641cbe01af822a?s=128&d=identicon&r=PG&f=1", "display_name": "Basur", "link": "https://stackoverflow.com/users/11016337/basur"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1549355424, "post_id": 54530125, "comment_id": 95862100, "body": "ty , for this quick response. your hint gave me a push in the ( i think ) right direction, ill update the post with additional code later. hopefully i can poste a full version for anyone who searchs for similar problems"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1549355560, "post_id": 54530125, "comment_id": 95862164, "body": "Sorry I didn&#39;t see it was rust initially (was browsing from the phone), thought it was python or something. Info updated."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549356037, "post_id": 54530125, "comment_id": 95862384, "body": "metedata has created,modified,accessed fields in it which returns SystemTime. You may want to check. <a href=\"https://doc.rust-lang.org/std/fs/struct.Metadata.html#method.modified\" rel=\"nofollow noreferrer\">Reference</a>"}], "answers": [{"tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": false, "score": 1, "last_activity_date": 1549359703, "last_edit_date": 1549359703, "creation_date": 1549357967, "answer_id": 54530949, "question_id": 54530125, "link": "https://stackoverflow.com/questions/54530125/display-file-metadata-like-owner-and-group-using-rust/54530949#54530949", "title": "Display file metadata like owner and group using Rust", "body": "<p>Owner is <code>meta.unwrap().</code><a href=\"https://doc.rust-lang.org/std/os/unix/fs/trait.MetadataExt.html#tymethod.uid\" rel=\"nofollow noreferrer\"><code>uid()</code></a> and group is <code>meta.unwrap().</code><a href=\"https://doc.rust-lang.org/std/os/unix/fs/trait.MetadataExt.html#tymethod.gid\" rel=\"nofollow noreferrer\"><code>gid()</code></a>. They are <code>u32</code> each, which is what Linux uses.</p>\n\n<p>To get the actual names, use <a href=\"https://docs.rs/libc/0.2.48/libc/fn.getpwuid_r.html\" rel=\"nofollow noreferrer\">libc::getpwuid_r</a> and <a href=\"https://docs.rs/libc/0.2.48/libc/fn.getgrgid_r.html\" rel=\"nofollow noreferrer\">libc::getgrgid_r</a>. See also <a href=\"https://linux.die.net/man/3/getpwuid\" rel=\"nofollow noreferrer\">getpwuid(3)</a> and <a href=\"https://linux.die.net/man/3/getgrgid\" rel=\"nofollow noreferrer\">getgrgid(3)</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1549358790, "creation_date": 1549358790, "answer_id": 54531171, "question_id": 54530125, "link": "https://stackoverflow.com/questions/54530125/display-file-metadata-like-owner-and-group-using-rust/54531171#54531171", "title": "Display file metadata like owner and group using Rust", "body": "<p><code>std::os::linux::fs::MetadataExt</code> (or os::unix) provides relevant platform-specific functions. <a href=\"https://doc.rust-lang.org/stable/std/os/linux/fs/trait.MetadataExt.html\" rel=\"nofollow noreferrer\">Reference</a>. Looks like you need <code>meta.std_uid()</code>, <code>meta.st_gid()</code>, etc. By the way, it is much better to write your code like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Ok(meta) = metadata(\"./test.txt\") {\n  println!(\"{}\", meta.st_gid());\n  // ...\n}\n</code></pre>\n\n<blockquote>\n  <p>I'm working in rust and would not fear to write a C module  </p>\n</blockquote>\n\n<p>Rust has excellent FFI for such cases. For example, you can add <a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\">libc</a> crate with libc bindings and just call <code>libc::stat</code> function with familiar API.</p>\n"}], "owner": {"reputation": 169, "user_id": 11016337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aeacd7e5f41e814d67641cbe01af822a?s=128&d=identicon&r=PG&f=1", "display_name": "Basur", "link": "https://stackoverflow.com/users/11016337/basur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 1, "accepted_answer_id": 54531171, "answer_count": 2, "score": 0, "last_activity_date": 1549359703, "creation_date": 1549354471, "last_edit_date": 1549356861, "question_id": 54530125, "link": "https://stackoverflow.com/questions/54530125/display-file-metadata-like-owner-and-group-using-rust", "title": "Display file metadata like owner and group using Rust", "body": "<p>I'm working recursive file search and got it to work with simple permissions, but I can't determinate how to get the owner (owner id) or the group (group id) of an folder or file. I've discovered how to get the current permissions of an file or folder. I get an uint_32 so about 9 bits of this are used to save the permission. But where and how are the timestamp is saved? and the owner? On my research I've read that the linux kernel allowing more than 4 billion users on an system. Obviously this isn't in the uint_32 that I'm getting. </p>\n\n<p>I'm working in rust and would not fear to write a C module.\nBut now here is my main.rs:</p>\n\n<pre><code>use std::fs::*;\nuse std::os::unix::fs::MetadataExt;\nuse std::os::unix::fs::PermissionsExt;\nuse std::mem::transmute;\n\n\nfn main(){\n    let meta = metadata(\"./test.txt\");\n    if meta.is_ok(){\n        let m:u32 = meta.unwrap().permissions().mode();\n        //let bytes: [u8; 4] = unsafe { transmute(m.to_be()) };//etv. used later\n\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;9)) &gt;= 1 {\"d\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;8)) &gt;= 1 {\"r\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;7)) &gt;= 1 {\"w\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;6)) &gt;= 1 {\"x\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;5)) &gt;= 1 {\"r\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;4)) &gt;= 1 {\"w\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;3)) &gt;= 1 {\"x\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;2)) &gt;= 1 {\"r\"}else{\"-\"});\n        print!(\"{}\",if (m &amp; (0x1&lt;&lt;1)) &gt;= 1 {\"w\"}else{\"-\"});\n        println!(\"{}\",if (m &amp; 0x1) &gt;= 1 {\"x\"}else{\"-\"});\n        println!(\"{:b}\",m);\n    }\n}\n</code></pre>\n\n<p>Do not hesitate to modify my code if you think so.</p>\n\n<p>I'm doing this for fun and to learn more about the code underneath the horizon.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 7, "creation_date": 1549350591, "post_id": 54527297, "comment_id": 95860106, "body": "<i>&quot;I know how to define ge_p3 in Rust&quot;</i> that&#39;s not rust code! Also idiomatic rust code uses <i>snake_case</i> for variable names, e.g. <code>x</code>, <code>y</code>, <code>z</code>, <code>t</code> and UpperCamelCase for structs, e.g. <code>GeP3</code>."}], "answers": [{"tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": true, "score": 4, "last_activity_date": 1549376553, "last_edit_date": 1549376553, "creation_date": 1549349629, "answer_id": 54529095, "question_id": 54527297, "link": "https://stackoverflow.com/questions/54527297/does-rust-have-an-equivalent-to-cs-typedef-int32-t-fe10/54529095#54529095", "title": "Does Rust have an equivalent to C&#39;s `typedef int32_t fe[10]`?", "body": "<p>Try <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=86f45bbd0fa1f0ed9a40d75f363678c8\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>fn main() {\n    let a: Int32Array = [1; 10];\n    println!(\"{:?}\", a);\n    let g: GeP3 = GeP3 {\n        x: a,\n        ..Default::default()\n    };\n    println!(\"{:?}\", g);\n}\ntype Int32Array = [i32; 10];\n\n#[derive(Default, Debug)]\nstruct GeP3 {\n    x: Int32Array,\n    y: Int32Array,\n    z: Int32Array,\n    t: Int32Array,\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\nGeP3 { x: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user11015522"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 54529095, "answer_count": 1, "score": -1, "last_activity_date": 1549376647, "creation_date": 1549336661, "last_edit_date": 1549376647, "question_id": 54527297, "link": "https://stackoverflow.com/questions/54527297/does-rust-have-an-equivalent-to-cs-typedef-int32-t-fe10", "title": "Does Rust have an equivalent to C&#39;s `typedef int32_t fe[10]`?", "body": "<p>Does Rust have the following type definition?</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef int32_t fe[10];\ntypedef struct {\n    fe X;\n    fe Y;\n    fe Z;\n    fe T;\n} ge_p3;\n</code></pre>\n\n<p>I know how to define <code>ge_p3</code> in Rust, but I don't know how to define <code>fe</code>:</p>\n\n<pre><code>type ge_p3 {\n    X:fe, Y:fe, Z: fe, T: fe\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1549319466, "post_id": 54525254, "comment_id": 95852961, "body": "Could you specify the former part of your answer?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 1, "creation_date": 1549319828, "post_id": 54525254, "comment_id": 95853081, "body": "@JamesLarkin <code>actix</code> logs all errors using the <code>log</code> crate. Depending on the <a href=\"https://docs.rs/log/0.4.6/log/index.html#available-logging-implementations\" rel=\"nofollow noreferrer\">logger your program uses</a>, some messages will be filtered out. Nikolay assumes you are using <a href=\"https://docs.rs/env_logger/%2A/env_logger/\" rel=\"nofollow noreferrer\"><code>env_logger</code></a> or something compatible, which allows to change the filter while starting the program to include those error messages."}], "tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": true, "score": 1, "last_activity_date": 1549323328, "last_edit_date": 1549323328, "creation_date": 1549319274, "answer_id": 54525254, "question_id": 54525155, "link": "https://stackoverflow.com/questions/54525155/how-can-i-print-an-errors-message-in-actix-web-without-panicking/54525254#54525254", "title": "How can I print an error&#39;s message in Actix-Web without panicking?", "body": "<p>Actix-Web renders errors to <a href=\"https://docs.rs/log/0.4.6/log/macro.error.html\" rel=\"nofollow noreferrer\"><code>log::error!</code></a>. Try to start your example with <code>RUST_LOG=actix_web=debug</code></p>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1357, "favorite_count": 0, "accepted_answer_id": 54525254, "answer_count": 1, "score": 1, "last_activity_date": 1549323328, "creation_date": 1549318673, "last_edit_date": 1549323290, "question_id": 54525155, "link": "https://stackoverflow.com/questions/54525155/how-can-i-print-an-errors-message-in-actix-web-without-panicking", "title": "How can I print an error&#39;s message in Actix-Web without panicking?", "body": "<p>I'm trying to understand the error handling from one of the <a href=\"https://github.com/actix/examples/blob/master/simple-auth-server/src/errors.rs\" rel=\"nofollow noreferrer\">examples</a> from the Actix repo. It uses the <code>failure</code> crate to handle errors. Here's a relevant piece of code:</p>\n\n<pre><code>#[derive(Fail, Debug)]\npub enum ServiceError {\n    #[fail(display = \"Internal Server Error: {}\", _0)]\n    InternalServerError(String),\n\n    #[fail(display = \"BadRequest: {}\", _0)]\n    BadRequest(String),\n\n    #[fail(display = \"Unauthorized\")]\n    Unauthorized,\n}\n\nimpl ResponseError for ServiceError {\n    fn error_response(&amp;self) -&gt; HttpResponse {\n        match *self {\n            ServiceError::InternalServerError { .. } =&gt; HttpResponse::InternalServerError().json(\"Internal Server Error, Please try later\"),\n            ServiceError::BadRequest(ref message) =&gt; HttpResponse::BadRequest().json(message)\n        }\n    }\n}\n\nimpl From&lt;ParseError&gt; for ServiceError {\n    fn from(_: ParseError) -&gt; ServiceError {\n        ServiceError::BadRequest(\"Invalid UUID\".into())\n    }\n}\n</code></pre>\n\n<p>If my handler returns a <code>ServiceError</code> the code doesn't panic, it will render an <code>HttpResponse</code> (see <code>error_response()</code>). Because of this, I won't be able to see a <code>Fail</code> message (<code>#[fail(display</code>...) in my terminal.</p>\n\n<p>Is there any nice built-in way to display it in my logs other than by adding <code>println!</code> to <code>error_response</code>? I believe it totally makes sense to display the exact error rather than generic <code>InternalServerError</code>: i.e., <em>NetworkError/ParseError</em>. </p>\n\n<p>If not, what is the reason it was designed without the ability to see the exact error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549309862, "post_id": 54523314, "comment_id": 95849188, "body": "The duplicate applied to your question: <code>#[cfg_attr(windows, allow(dead_code))]</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549309891, "post_id": 54523314, "comment_id": 95849196, "body": "<i>However</i>, why not just mark <code>cross_platform</code> as <code>#[cfg(windows)]</code> as well?"}], "owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 112, "favorite_count": 0, "closed_date": 1549309829, "answer_count": 0, "score": 1, "last_activity_date": 1549309910, "creation_date": 1549309642, "question_id": 54523314, "link": "https://stackoverflow.com/questions/54523314/how-can-i-suppress-dead-code-warnings-for-a-particular-platform", "closed_reason": "Duplicate", "title": "How can I suppress dead code warnings for a particular platform?", "body": "<p>I have a particular function that is unused on one platform, but I would still like it to be compiled. Is there any way to <code>#[allow(dead_code)]</code> for only a particular configuration?</p>\n\n<p>Here's some example code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[ (what do I put here?) ]\nfn cross_platform() {\n}\n\n#[cfg(windows)]\npub fn windows_only() {\n    // Do a cross-platform thing\n    cross_platform();\n}\n</code></pre>\n\n<p>Is there any way to suppress the dead code warning on non-Windows platforms only?</p>\n"}, {"tags": ["functional-programming", "rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "edited": false, "score": 0, "creation_date": 1549309455, "post_id": 54523023, "comment_id": 95849027, "body": "Thanks everyone for answers and pointing out a similar question! It is a great pleasure to be a part of such responsive and intelligent community!"}, {"owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "edited": false, "score": 0, "creation_date": 1549309502, "post_id": 54523023, "comment_id": 95849045, "body": "I found that <code>flatten().collect()</code> does the trick and I&#39;m pleasantly amazed. <code>Rust</code> is awesome!"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "reply_to_user": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "edited": false, "score": 1, "creation_date": 1549312146, "post_id": 54523023, "comment_id": 95850176, "body": "yes. <code>flatten</code> is even nicer. I always forget that <code>Option</code> also implements <code>Iterator</code>"}], "tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 10, "last_activity_date": 1549308383, "creation_date": 1549308383, "answer_id": 54523023, "question_id": 54522948, "link": "https://stackoverflow.com/questions/54522948/is-it-possible-to-somehow-cast-vecoptionvalue-into-vecvalue-after-filterin/54523023#54523023", "title": "Is it possible to somehow cast Vec&lt;Option&lt;Value&gt;&gt; into Vec&lt;Value&gt; after filtering out None elements in Rust?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"noreferrer\"><code>Iterator::filter_map</code></a> to filter and map the element in one go.</p>\n\n<pre><code>let v = vec![None, None, Some(1), Some(2), None, Some(3)];\nlet filtered: Vec&lt;_&gt; = v.into_iter().filter_map(|e| e).collect();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5cd6dc6a61776b512d546ed1b40e5bf1\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1734, "user_id": 882187, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/J5Vum.png?s=128&g=1", "display_name": "Vladimir Ignatyev", "link": "https://stackoverflow.com/users/882187/vladimir-ignatyev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1378, "favorite_count": 0, "closed_date": 1549308476, "answer_count": 1, "score": 4, "last_activity_date": 1549308743, "creation_date": 1549308101, "last_edit_date": 1549308743, "question_id": 54522948, "link": "https://stackoverflow.com/questions/54522948/is-it-possible-to-somehow-cast-vecoptionvalue-into-vecvalue-after-filterin", "closed_reason": "Duplicate", "title": "Is it possible to somehow cast Vec&lt;Option&lt;Value&gt;&gt; into Vec&lt;Value&gt; after filtering out None elements in Rust?", "body": "<p>I want some way to have such a cast when writing code like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Value;\n\nfn remove_missed(uncertain_vector: Vec&lt;Option&lt;Value&gt;&gt;) -&gt; Vec&lt;Value&gt; {\n    uncertain_vector\n        .into_iter()\n        .filter(|element| match element {\n            Some(val) =&gt; true,\n            None =&gt; false,\n        })\n        .collect()\n}\n</code></pre>\n\n<p>How can I achieve this? I believe that the type implication mechanism is not smart enough to determine that the resulting collection will contain only <code>Option&lt;Value&gt;</code> where all such objects are the same in terms of their type (<code>Value</code>). </p>\n\n<p>The compiler answers my question partially:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;Value&gt;` cannot be built from an iterator over elements of type `std::option::Option&lt;Value&gt;`\n  --&gt; src/lib.rs:10:10\n   |\n10 |         .collect()\n   |          ^^^^^^^ a collection of type `std::vec::Vec&lt;Value&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::option::Option&lt;Value&gt;&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::option::Option&lt;Value&gt;&gt;` is not implemented for `std::vec::Vec&lt;Value&gt;`\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 428, "user_id": 4917890, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29109f0a256a1fdbb598c890c8e18b5a?s=128&d=identicon&r=PG&f=1", "display_name": "Alex Ozdemir", "link": "https://stackoverflow.com/users/4917890/alex-ozdemir"}, "edited": false, "score": 0, "creation_date": 1549477873, "post_id": 54526047, "comment_id": 95919807, "body": "This is very clever. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1549375607, "last_edit_date": 1549375607, "creation_date": 1549324748, "answer_id": 54526047, "question_id": 54522623, "link": "https://stackoverflow.com/questions/54522623/can-a-tokio-task-terminate-the-whole-runtime-gracefully/54526047#54526047", "title": "Can a Tokio task terminate the whole runtime gracefully?", "body": "<p>You can use a <a href=\"https://docs.rs/tokio/0.1.15/tokio/sync/oneshot/index.html\" rel=\"nofollow noreferrer\">oneshot channel</a> to communicate from inside the runtime to outside. When the delay expires, we send a single message through the channel.</p>\n\n<p>Outside of the runtime, once we receive that message we initiate a shutdown of the runtime and <code>wait</code> for it to finish.</p>\n\n<pre><code>use std::time::{Duration, Instant};\nuse tokio::{\n    prelude::*,\n    runtime::Runtime,\n    sync::oneshot,\n    timer::{Delay, Interval},\n}; // 0.1.15\n\nfn main() {\n    let mut runtime = Runtime::new().expect(\"failed to start new Runtime\");\n\n    let (tx, rx) = oneshot::channel();\n\n    runtime.spawn({\n        let every_second = Interval::new_interval(Duration::from_secs(1));\n        every_second\n            .for_each(|t| Ok(println!(\"{:?}\", t)))\n            .map_err(drop)\n    });\n\n    runtime.spawn({\n        let in_three_seconds = Delay::new(Instant::now() + Duration::from_secs(3));\n        in_three_seconds\n            .map_err(|_| eprintln!(\"Timer error\"))\n            .and_then(move |_| tx.send(()))\n    });\n\n    rx.wait().expect(\"unable to wait for receiver\");\n    runtime\n        .shutdown_now()\n        .wait()\n        .expect(\"unable to wait for shutdown\");\n\n    println!(\"Done\");\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53458755/155423\">How do I gracefully shutdown the Tokio runtime in response to a SIGTERM?</a></li>\n<li><a href=\"https://stackoverflow.com/q/53752726/155423\">Is there any way to shutdown `tokio::runtime::current_thread::Runtime`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51987105/155423\">How can I stop the hyper HTTP web server and return an error?</a></li>\n</ul>\n"}], "owner": {"reputation": 428, "user_id": 4917890, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29109f0a256a1fdbb598c890c8e18b5a?s=128&d=identicon&r=PG&f=1", "display_name": "Alex Ozdemir", "link": "https://stackoverflow.com/users/4917890/alex-ozdemir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1609, "favorite_count": 1, "accepted_answer_id": 54526047, "answer_count": 1, "score": 2, "last_activity_date": 1549375684, "creation_date": 1549306698, "last_edit_date": 1549375684, "question_id": 54522623, "link": "https://stackoverflow.com/questions/54522623/can-a-tokio-task-terminate-the-whole-runtime-gracefully", "title": "Can a Tokio task terminate the whole runtime gracefully?", "body": "<p>I start up a Tokio runtime with code like this:</p>\n\n<pre><code>tokio::run(my_future);\n</code></pre>\n\n<p>My future goes on to start a bunch of tasks in response to various conditions.</p>\n\n<p>One of those tasks is responsible for determining when the program should shut down. However, I don't know how to have that task gracefully terminate the program. Ideally, I'd like to find a way for this task to cause the <code>run</code> function call to terminate.</p>\n\n<p>Below is an example of the kind of program I would like to write:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate tokio;\n\nuse tokio::prelude::*;\n\nuse std::time::Duration;\nuse std::time::Instant;\n\nuse tokio::timer::{Delay, Interval};\n\nfn main() {\n    let kill_future = Delay::new(Instant::now() + Duration::from_secs(3));\n\n    let time_print_future = Interval::new_interval(Duration::from_secs(1));\n\n    let mut runtime = tokio::runtime::Runtime::new().expect(\"failed to start new Runtime\");\n    runtime.spawn(time_print_future.for_each(|t| Ok(println!(\"{:?}\", t))).map_err(|_| ()));\n    runtime.spawn(\n        kill_future\n            .map_err(|_| {\n                eprintln!(\"Timer error\");\n            })\n            .map(move |()| {\n                // TODO\n                unimplemented!(\"Shutdown the runtime!\");\n            }),\n    );\n    // TODO\n    unimplemented!(\"Block until the runtime is shutdown\");\n    println!(\"Done\");\n}\n</code></pre>\n\n<p><a href=\"https://docs.rs/tokio/0.1.15/tokio/runtime/struct.Runtime.html#method.shutdown_now\" rel=\"nofollow noreferrer\"><code>shutdown_now</code></a> seems promising, but upon further investigation, it's probably not going to work. In particular, it takes ownership of the runtime, and Tokio is probably not going to allow both the main thread (where the runtime was created) and some random task to own the runtime. </p>\n"}, {"tags": ["casting", "reference", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549297252, "post_id": 54520085, "comment_id": 95843216, "body": "See also <a href=\"https://stackoverflow.com/q/47156009/155423\">How to iterate over a collection of structs as an iterator of trait object references?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549297446, "post_id": 54520085, "comment_id": 95843327, "body": "See also <a href=\"https://stackoverflow.com/q/48218224/155423\">Trait mismatch for function argument</a> and <a href=\"https://stackoverflow.com/q/41889727/155423\">Why does Rust not allow coercion to trait objects inside containers?</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1549299635, "post_id": 54520085, "comment_id": 95844533, "body": "Both <code>show_items</code> and <code>show_item</code> would be more idiomatic as generic functions: <code>show_items&lt;T: Display&gt;(items: impl Iterator&lt;Item = T&gt;)</code>. Since <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html#impl-Display-72\" rel=\"nofollow noreferrer\"><code>&amp;T</code> implements <code>Display</code> when <code>T</code> does</a>, this will work for <code>show_items(items.iter())</code> (and if you use <code>IntoIterator</code>, you can also just write <code>show_items(&amp;items)</code>)."}, {"owner": {"reputation": 137, "user_id": 1894121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68684ee18306f0f64fb8105b1b16b070?s=128&d=identicon&r=PG", "display_name": "flopacero", "link": "https://stackoverflow.com/users/1894121/flopacero"}, "edited": false, "score": 0, "creation_date": 1549455789, "post_id": 54520085, "comment_id": 95906883, "body": "I did almost the same: <code>show_items(items: impl Iterator&lt;Item = impl Display&gt;)</code>. But still I was curious about the original case."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1549312201, "last_edit_date": 1549312201, "creation_date": 1549310319, "answer_id": 54523476, "question_id": 54520085, "link": "https://stackoverflow.com/questions/54520085/why-are-iterator-items-which-are-references-not-cast-to-a-trait-object-reference/54523476#54523476", "title": "Why are iterator items which are references not cast to a trait object reference?", "body": "<p>The implicit conversion from a type <code>T</code> to <code>dyn Trait</code> for a <code>Trait</code> implemented by <code>T</code> is a so-called <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\" rel=\"nofollow noreferrer\">unsized coercion</a>, a special kind of coercion. While Rust is somewhat reluctant with implicit type conversions, coercions do happen implicitly at <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#coercion-sites\" rel=\"nofollow noreferrer\">coercion sites</a>, but not in other places.</p>\n\n<p>Function call arguments are coercion sites. This explains why your <code>show_item()</code> function works as desired.</p>\n\n<p>All coercions can also be performed explicitly using the <code>as</code> operator. For this reason, the version using <code>map()</code> works fine.</p>\n\n<p>Your definition of <code>show_items()</code>,</p>\n\n<pre><code>fn show_items&lt;'a&gt;(items: impl Iterator&lt;Item = &amp;'a Display&gt;)\n</code></pre>\n\n<p>on the other hand is a completely different story. The <code>impl</code> syntax used here is a shorthand for</p>\n\n<pre><code>fn show_items&lt;'a, I&gt;(items: I)\nwhere\n    I: Iterator&lt;Item = &amp;'a dyn Display&gt;,\n</code></pre>\n\n<p>The function is <em>generic</em> over the iterator type, and the compiler verifies that the type that you actually pass in implements the trait bound <code>Iterator&lt;Item = &amp;'a dyn Display&gt;</code>. The type <code>std::slice::Iter&lt;'_, u32&gt;</code> from you example code simply does not, hence the error. There is no coercion that converts an argument to a different type to make it implement some trait bound required by a generic function. It is also entirely unclear what type to convert <code>std::slice::Iter&lt;'_, u32&gt;</code> to to turn it into an iterator over <code>&amp;dyn Display</code>.</p>\n\n<p>Note that your version of the function definition is unnecessarily restrictive by requiring an iterator over trait objects.  It would be far more natural and more performant to simply require that the iterator items implement <code>Display</code> instead:</p>\n\n<pre><code>fn show_items&lt;I&gt;(items: I)\nwhere\n    I: IntoIterator,\n    I::Item: Display,\n</code></pre>\n\n<p>(I also changed <code>Iterator</code> to <code>IntoIterator</code>, since this is more general and more convenient.)</p>\n"}], "owner": {"reputation": 137, "user_id": 1894121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68684ee18306f0f64fb8105b1b16b070?s=128&d=identicon&r=PG", "display_name": "flopacero", "link": "https://stackoverflow.com/users/1894121/flopacero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 460, "favorite_count": 0, "accepted_answer_id": 54523476, "answer_count": 1, "score": 1, "last_activity_date": 1549312201, "creation_date": 1549296822, "last_edit_date": 1549297072, "question_id": 54520085, "link": "https://stackoverflow.com/questions/54520085/why-are-iterator-items-which-are-references-not-cast-to-a-trait-object-reference", "title": "Why are iterator items which are references not cast to a trait object reference?", "body": "<p>I'm trying to define a function that should receive an iterator where each item is a reference to a trait object. For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Display;\n\nfn show_items&lt;'a&gt;(items: impl Iterator&lt;Item = &amp;'a Display&gt;) {\n    items.for_each(|item| println!(\"{}\", item));\n}\n</code></pre>\n\n<p>When I try to call it on an iterator where each item is a reference to a type implementing <code>Display</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let items: Vec&lt;u32&gt; = (1..10).into_iter().collect();\nshow_items(items.iter());\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;std::slice::Iter&lt;'_, u32&gt; as std::iter::Iterator&gt;::Item == &amp;dyn std::fmt::Display`\n --&gt; src/lib.rs:9:5\n  |\n9 |     show_items(items.iter());\n  |     ^^^^^^^^^^ expected u32, found trait std::fmt::Display\n  |\n  = note: expected type `&amp;u32`\n             found type `&amp;dyn std::fmt::Display`\nnote: required by `show_items`\n --&gt; src/lib.rs:3:1\n  |\n3 | fn show_items&lt;'a&gt;(items: impl Iterator&lt;Item = &amp;'a Display&gt;) {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Why is <code>&amp;u32</code> not considered as <code>&amp;dyn std::fmt::Display</code>?</p>\n\n<p>An explicit cast works fine:</p>\n\n<pre><code>show_items(items.iter().map(|item| item as &amp;Display));\n</code></pre>\n\n<p>It also works fine for a single item:</p>\n\n<pre><code>fn show_item(item: &amp;Display) {\n    println!(\"{:?}\", item);\n}\n</code></pre>\n\n<pre><code>let item: u32 = 1;\nshow_item(&amp;item);\n</code></pre>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 7, "creation_date": 1549291785, "post_id": 54518622, "comment_id": 95840078, "body": "floats are strange duh"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 3, "creation_date": 1549292015, "post_id": 54518622, "comment_id": 95840225, "body": "(2 \u2212 2&lt;sup&gt;\u221223&lt;/sup&gt;) &#215; 2127 <i>is</i> 340282346638528859811704183484516925440. It looks like <code>println!</code> may round floats when printing them."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1549292782, "post_id": 54518799, "comment_id": 95840724, "body": "Since single-precision floats only have about 8 siginificant digits, the remaining digits are generally just noise \u2013 they don&#39;t contain any actual information, and mainly result from the conversion between number systems. So defaulting to that number of significant digits makes sense to me, though of course the exponential number format also makes more sense for floating-point numbers."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1549314826, "post_id": 54518799, "comment_id": 95851174, "body": "It is not a fixed number of digits. It maximizes the number of zeros so that when the printed number is rounded to the nearest <code>f32</code> it results in the original float. <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=df6817c1a5c381ae6e90765185a4bbbd\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 2463, "user_id": 2346731, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54b21109a70f680b9c50261b90d22f87?s=128&d=identicon&r=PG", "display_name": "Marcus", "link": "https://stackoverflow.com/users/2346731/marcus"}, "is_accepted": true, "score": 11, "last_activity_date": 1549292270, "last_edit_date": 1549292270, "creation_date": 1549292201, "answer_id": 54518799, "question_id": 54518622, "link": "https://stackoverflow.com/questions/54518622/casting-f32max-to-u128-results-in-unexpected-value/54518799#54518799", "title": "Casting `f32::MAX` to `u128` results in unexpected value", "body": "<p>This is due to the formatting of the float when you are printing it. It seems by default the formatter will only show 8 significant figures when printing floats. Explicitly specifying the precision in the format string will yield the same results for line 2 and 3.</p>\n\n<pre><code>println!(\"u128 max:    {}\", u128::max_value());\nprintln!(\"f32 max:     {:.0}\", std::f32::MAX);\nprintln!(\"f32 as u128: {}\", std::f32::MAX as u128);\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>u128 max:    340282366920938463463374607431768211455\nf32 max:     340282346638528859811704183484516925440\nf32 as u128: 340282346638528859811704183484516925440\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "accepted_answer_id": 54518799, "answer_count": 1, "score": 6, "last_activity_date": 1549292270, "creation_date": 1549291625, "question_id": 54518622, "link": "https://stackoverflow.com/questions/54518622/casting-f32max-to-u128-results-in-unexpected-value", "title": "Casting `f32::MAX` to `u128` results in unexpected value", "body": "<p>Executing this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9844bcb21bad2831d7898ac16b5f280a\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>println!(\"u128 max:    {}\", u128::max_value());\nprintln!(\"f32 max:     {}\", std::f32::MAX);\nprintln!(\"f32 as u128: {}\", std::f32::MAX as u128);\n</code></pre>\n\n<p>... prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>u128 max:    340282366920938463463374607431768211455\nf32 max:     340282350000000000000000000000000000000\nf32 as u128: 340282346638528859811704183484516925440\n</code></pre>\n\n<p>Judging from this output, we can deduce that <code>u128::max_value() &gt; f32::MAX</code> and that <code>f32::MAX</code> is an integer (without fractional part). Indeed, <a href=\"https://en.wikipedia.org/wiki/Single-precision_floating-point_format\" rel=\"noreferrer\">Wikipedia agrees</a> with the max values and says that <code>f32::MAX</code> is (2 \u2212 2<sup>\u221223</sup>) \u00d7 2<sup>127</sup> which is slightly less than 2<sup>128</sup>. Given that, I would think that <code>f32::MAX</code> is exactly representable as <code>u128</code>. But as you can see, casting it via <code>as</code> gives an entirely different value.</p>\n\n<p><strong>Why does the result of the cast differ from the original value?</strong></p>\n\n<p>(<em>I know that floats are very strange beasts and all. But I hope that there is an answer to this question that contains more information than \"floats are strange duh\"</em>)</p>\n"}, {"tags": ["syntax", "rust", "conditional-compilation"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1549283264, "post_id": 54515989, "comment_id": 95835043, "body": "Yes it is possible, just leave out <code>{</code> and <code>}</code>. So your example is just a typographical error. Also see <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/conditional-compilation.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 12866, "user_id": 110488, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/21369d30fe2c6c976ffe735f2fd0ee91?s=128&d=identicon&r=PG", "display_name": "Chen Levy", "link": "https://stackoverflow.com/users/110488/chen-levy"}, "is_accepted": true, "score": 5, "last_activity_date": 1549285929, "last_edit_date": 1549285929, "creation_date": 1549285534, "answer_id": 54516780, "question_id": 54515989, "link": "https://stackoverflow.com/questions/54515989/how-to-mark-use-statements-for-conditional-compilation/54516780#54516780", "title": "How to mark use statements for conditional compilation?", "body": "<p>The syntax you are looking for is:</p>\n\n<pre><code>#[cfg(target_os = \"unix\")]\nuse std::os::unix::io::IntoRawFd;\n\n#[cfg(target_os = \"windows\")]\nuse std::os::windows::io::AsRawHandle;\n</code></pre>\n"}], "owner": {"reputation": 87, "user_id": 6531515, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh5.googleusercontent.com/-2Oqsx0I4PFU/AAAAAAAAAAI/AAAAAAAAIuM/aS5wv658f5g/photo.jpg?sz=128", "display_name": "Joshua Leung", "link": "https://stackoverflow.com/users/6531515/joshua-leung"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1017, "favorite_count": 1, "closed_date": 1549289784, "accepted_answer_id": 54516780, "answer_count": 1, "score": 3, "last_activity_date": 1549289806, "creation_date": 1549282826, "last_edit_date": 1549285685, "question_id": 54515989, "link": "https://stackoverflow.com/questions/54515989/how-to-mark-use-statements-for-conditional-compilation", "closed_reason": "Duplicate", "title": "How to mark use statements for conditional compilation?", "body": "<p>Is it possible to mark certain includes to only get included on relevant OS's?</p>\n\n<p>For example, can you do something like:</p>\n\n<pre><code>#[cfg(unix)] {\n    use std::os::unix::io::IntoRawFd;\n}\n#[cfg(windows)] {\n   // https://doc.rust-lang.org/std/os/unix/io/trait.AsRawFd.html  suggests this is equivalent?\n   use std::os::windows::io::AsRawHandle;\n}\n</code></pre>\n\n<p>Trying to compile the above code gives me syntax errors (i.e. <code>error: expected item after attributes</code>).</p>\n\n<p>I'm trying to patch a Rust project I found on GitHub to compile on Windows (while still making it retain the ability to be compiled on its existing targets - i.e. Unixes &amp; WASM). Currently I'm running into a problem where some of the files import platform-specific parts from <code>std::os</code> (e.g. <code>use std::os::unix::io::IntoRawFd;</code>), which ends up breaking the build on Windows. </p>\n\n<p>Note: I'm using Rust Stable (1.31.1) and not nightly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1549279751, "post_id": 54515074, "comment_id": 95833127, "body": "You probably mean <code>MyError::Error3</code> rather than <code>MyError:Error3</code>. The way I see it, there is nothing wrong with an if-statement for that. At best one could write a macro to make it slightly slimmer."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549280784, "post_id": 54515074, "comment_id": 95833638, "body": "how do you want rust guess this ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549289394, "post_id": 54515074, "comment_id": 95838581, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54515074/edit\">edit</a> your question to include it. We cannot tell what variables are present in the code, like where <code>vec</code> comes from. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1549284521, "post_id": 54515446, "comment_id": 95835791, "body": "In case you are using one of the popular error handling crates, you can use their macro which does more or less the same: <a href=\"https://docs.rs/failure/0.1.5/failure/macro.ensure.html\" rel=\"nofollow noreferrer\"><code>ensure</code> in <code>failure</code></a> and <a href=\"https://docs.rs/error-chain/0.12.0/error_chain/macro.ensure.html\" rel=\"nofollow noreferrer\"><code>ensure</code> in <code>error-chain</code></a>"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 4, "last_activity_date": 1549280899, "creation_date": 1549280899, "answer_id": 54515446, "question_id": 54515074, "link": "https://stackoverflow.com/questions/54515074/what-operator-can-i-use-in-rust-to-return-a-specific-error-if-the-condition-is-f/54515446#54515446", "title": "What operator can I use in Rust to return a specific error if the condition is false?", "body": "<p>Let's write a macro for that!</p>\n\n<pre><code>macro_rules! assert_throw {\n    ($cond:expr, $err:expr) =&gt; {\n        if $cond {\n            Err($err)?;\n        }\n    };\n}\n</code></pre>\n\n<p>You can use it like:</p>\n\n<pre><code>fn foo(v: &amp;[u32]) -&gt; Result&lt;String, MyError&gt; {\n    assert_throw!(v.len() != 3, MyError::Error1);\n\n    Ok(\"Ok\".to_string())\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b8256b9b39e51133dc310fff5c1c59f3\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}, {"comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 1, "creation_date": 1549283346, "post_id": 54515615, "comment_id": 95835090, "body": "this is not really nicer than using <code>return</code>. In fact I think it is a bit worse, since you will always <code>Err</code> in this case."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1549283905, "post_id": 54515615, "comment_id": 95835440, "body": "@belst, The OP is asking that are there any option by using <code>some operator</code> and there is the <code>?</code> operator is giving what the OP wants I think. Besides I do not see any reason why you called it a bit worse in this way? Why did you think that it is worse than using return keyword?"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1549284214, "post_id": 54515615, "comment_id": 95835604, "body": "the <code>?</code> operator is only really useful to prevent writing <code>match foo { Some(a) =&gt; a, e =&gt; return e; }</code> in this case you already do the check with the <code>if</code> and then still use the <code>?</code> operator. It is a bit redundant.  And OP asked if there is a nicer way than the <code>if</code> statement in the first place. Which you still have."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1549289488, "last_edit_date": 1549289488, "creation_date": 1549281529, "answer_id": 54515615, "question_id": 54515074, "link": "https://stackoverflow.com/questions/54515074/what-operator-can-i-use-in-rust-to-return-a-specific-error-if-the-condition-is-f/54515615#54515615", "title": "What operator can I use in Rust to return a specific error if the condition is false?", "body": "<blockquote>\n  <p>Is there a way to write it more nicely (by using some operator)</p>\n</blockquote>\n\n<p>Yes, there is. You can use the <code>?</code> operator to throw your <code>Error</code> to the upper levels.</p>\n\n<p>Alternatively to the macro, you can do this in the if statement as well. You do not need to use <code>return</code> keyword. You can basically throw error to the upper levels with <code>try!</code> macro or <code>?</code> operator. </p>\n\n<p>Please note that using the <code>try!</code> macro is deprecated and the <code>?</code> operator is favored in modern Rust.</p>\n\n<pre><code>fn foo(vec: Vec&lt;i32&gt;) -&gt; Result&lt;String, MyError&gt; {\n    if vec.len() == 2 {\n        Err(MyError::Error2)?\n    }\n\n    unimplemented!()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0e5f20e8343d6efbe4bc55d01fbfa3b9\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1549289488, "creation_date": 1549279407, "last_edit_date": 1549289372, "question_id": 54515074, "link": "https://stackoverflow.com/questions/54515074/what-operator-can-i-use-in-rust-to-return-a-specific-error-if-the-condition-is-f", "title": "What operator can I use in Rust to return a specific error if the condition is false?", "body": "<p>I've got the following piece of code:</p>\n\n<pre><code>fn foo() -&gt; Result&lt;String, MyError&gt; {\n    assert_eq!(vec.len(), 2);\n    unimplemented!()\n}\n\npub enum MyError {\n    Error1,\n    Error2,\n    Error3,\n}\n</code></pre>\n\n<p>I'd like to return <code>Err(MyError::Error3)</code> if <code>vec.len() != 2</code> instead of panicking. Is there a way to write it more nicely (by using some operator) other than </p>\n\n<pre><code>if vec.len() != 2 { return Err(MyError::Error3); }\n</code></pre>\n"}, {"tags": ["random", "rust", "arm", "entropy", "raspberry-pi-zero"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1549274246, "post_id": 54513585, "comment_id": 95830347, "body": "First off: the websocket crates <a href=\"https://github.com/housleyjk/ws-rs/blob/3722d1cd80763523debbe2f756e220a70b6436e2/Cargo.toml#L25\" rel=\"nofollow noreferrer\"><code>uses rand = &quot;0.4.2&quot;</code></a>, second you could make a PR at that repo to update the crand crate. If that takes too long, patch it yourself and <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section\" rel=\"nofollow noreferrer\">tell cargo to use your patch</a>"}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 2, "creation_date": 1549276135, "post_id": 54513585, "comment_id": 95831367, "body": "this happens because your program requests too many numbers from /dev/urandom. You can either fix the program (which might be not so trivial) or just add faster entropy sources to your system. Check <a href=\"https://wiki.archlinux.org/index.php/Rng-tools\" rel=\"nofollow noreferrer\">wiki.archlinux.org/index.php/Rng-tools</a> (it specifically mentions raspberry pi) and <a href=\"https://wiki.archlinux.org/index.php/Haveged\" rel=\"nofollow noreferrer\">wiki.archlinux.org/index.php/Haveged</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1549277159, "post_id": 54513585, "comment_id": 95831908, "body": "@Laney but IIRC <code>&#47;dev&#47;urandom</code> doesn&#39;t block if it has no more entropy but just puts out &quot;non secure randomness&quot;, in contrast to <code>&#47;dev&#47;random</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1549277272, "post_id": 54513585, "comment_id": 95831966, "body": "I guess the real problem is, that it isn&#39;t websockets fault, but yours @Petrus, because as already said, the crate uses a different version of rand, which does not cover your error message. It may be your code? You may try any of the <a href=\"https://rust-random.github.io/rand/rand/rngs/index.html\" rel=\"nofollow noreferrer\">other RNGs</a> rand provides."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1549353283, "post_id": 54513585, "comment_id": 95861186, "body": "Thank you @Laney! rng-tools seems to have fixed the problem. Busy doing a long-running test. If you post your suggestion as an answer, I&#39;ll accept it tomorrow :)."}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 423, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1549274114, "creation_date": 1549273914, "last_edit_date": 1549274114, "question_id": 54513585, "link": "https://stackoverflow.com/questions/54513585/thread-main-panicked-at-could-not-initialize-thread-rng-all-entropy-sources", "title": "Thread &#39;main&#39; panicked at &#39;could not initialize thread_rng: All entropy sources failed", "body": "<p>After running a cross-compiled Rust ARM binary on a Raspberry Pi Zero for a few hours, the process panics with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1 Feb 02 12:03:17 raspberrypi monitoring-service[339]: thread 'main'\n panicked at 'could not initialize thread_rng: All entropy sources failed (permanently unavailable); cause: getrandom not ready (not ready\nyet); cause: Resource temporarily unavailable (os error 11)', /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.6.1/src/rngs/thread.rs:82:17\n</code></pre>\n\n<p>systemd tried to restart the process, but it failed with the same error several times. The next day I was able to manually restart it, but countdown to when it fails again.</p>\n\n<p>I suspect this is caused by the <a href=\"https://github.com/housleyjk/ws-rs\" rel=\"nofollow noreferrer\">ws websocket crate</a> indirectly using the <a href=\"https://docs.rs/rand/0.6.1/rand/\" rel=\"nofollow noreferrer\">rand v0.6.1 crate</a>, but I'm not sure.</p>\n\n<p>Is there a way to force these packages to use a newer version of the rand crate, or do I need to tweak an OS setting on Raspbian? I'm running Raspbian Stretch (v9), kernel v4.14.79+. As an internal monitoring tool, my application requires no encryption or privacy so ideally I can get around the entropy issue.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549256620, "post_id": 54510346, "comment_id": 95824044, "body": "Are you working with Rust 2018? With <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/ownership-and-lifetimes/non-lexical-lifetimes.html\" rel=\"nofollow noreferrer\">NLL</a> your issue may be fixed"}, {"owner": {"reputation": 54, "user_id": 1358105, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdbf3dbc02f1d7963ad007548a58f6b7?s=128&d=identicon&r=PG", "display_name": "tlent", "link": "https://stackoverflow.com/users/1358105/tlent"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549257084, "post_id": 54510346, "comment_id": 95824144, "body": "@AkinerAlkan Yes I am using the 2018 edition and the latest stable version of Rust (rustc 1.32.0 (9fda7c223 2019-01-16))"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1549261057, "post_id": 54510346, "comment_id": 95825117, "body": "You can solve this issue by making the ListNode clonable, Does changing ListNode as clonable is allowed for you?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1549264892, "post_id": 54510346, "comment_id": 95826327, "body": "Your main problem is, that you have a <code>continue</code>, without assigning <code>cursor</code> again. But because you are moving it (in your <code>if let</code> statement), you should reassign it."}], "answers": [{"tags": [], "owner": {"reputation": 54, "user_id": 1358105, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdbf3dbc02f1d7963ad007548a58f6b7?s=128&d=identicon&r=PG", "display_name": "tlent", "link": "https://stackoverflow.com/users/1358105/tlent"}, "is_accepted": true, "score": 0, "last_activity_date": 1549314607, "creation_date": 1549314607, "answer_id": 54524356, "question_id": 54510346, "link": "https://stackoverflow.com/questions/54510346/cannot-borrow-as-mutable-more-than-once-error-in-a-loop/54524356#54524356", "title": "Cannot borrow as mutable more than once error in a loop", "body": "<p>Here's the solution I ended up with. Reassigning <code>cursor</code> in the if statement fixes the problem.</p>\n\n<pre><code>fn remove_duplicates(mut list: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut cursor = list.as_mut();\n    while let Some(c) = cursor {\n        if let Some(next) = c.next.as_mut() {\n            if next.val == c.val {\n                c.next = next.next.take();\n                cursor = Some(c);\n                continue;\n            }\n        }\n        cursor = c.next.as_mut();\n    }\n    list\n}\n</code></pre>\n"}], "owner": {"reputation": 54, "user_id": 1358105, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdbf3dbc02f1d7963ad007548a58f6b7?s=128&d=identicon&r=PG", "display_name": "tlent", "link": "https://stackoverflow.com/users/1358105/tlent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 509, "favorite_count": 1, "accepted_answer_id": 54524356, "answer_count": 1, "score": 1, "last_activity_date": 1549314607, "creation_date": 1549256356, "last_edit_date": 1549264236, "question_id": 54510346, "link": "https://stackoverflow.com/questions/54510346/cannot-borrow-as-mutable-more-than-once-error-in-a-loop", "title": "Cannot borrow as mutable more than once error in a loop", "body": "<p>I am working on leetcode problem #83 \"Remove Duplicates from Sorted List\", but I'm stuck on this borrow checker issue.</p>\n\n<p>The ListNode struct is given by the problem so it cannot be changed. I have tried restructuring the loop and if statement, but I haven't found a working solution.</p>\n\n<p>What I am trying to do:</p>\n\n<pre><code>// Definition for singly-linked list.\n#[derive(PartialEq, Eq, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\nimpl ListNode {\n    #[inline]\n    fn new(val: i32) -&gt; Self {\n        ListNode { next: None, val }\n    }\n}\n\nfn remove_duplicates(mut list: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut cursor = &amp;mut list;\n    while let Some(c) = cursor.as_mut() {\n        if let Some(next) = c.next.as_mut() {\n            if next.val == c.val {\n                c.next = next.next.take();\n                continue;\n            }\n        }\n        cursor = &amp;mut c.next;\n    }\n    list\n}\n</code></pre>\n\n<p>The error I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*cursor` as mutable more than once at a time\n  --&gt; src/lib.rs:17:25\n   |\n17 |     while let Some(c) = cursor.as_mut() {\n   |                         ^^^^^^ mutable borrow starts here in previous iteration of loop\n</code></pre>\n\n<p>Simplified code that seems to show the same error:</p>\n\n<pre><code>fn remove_duplicates(mut list: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut cursor = &amp;mut list;\n    while let Some(c) = cursor.as_mut() {\n        if c.val &gt; 0 {\n            cursor = &amp;mut c.next;\n        }\n    }\n    list\n}\n</code></pre>\n\n<p>I don't understand why the mutable borrow hasn't been dropped before the next iteration of the loop. It seems to be caused by conditionally changing the cursor, but I don't see why that would prevent the borrow from being dropped.</p>\n"}, {"tags": ["rust", "set"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549225710, "post_id": 54507150, "comment_id": 95818149, "body": "Your example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2eb06ccb56f4e95d3b0014fbfc011da4\" rel=\"nofollow noreferrer\">seems to work</a> with Rust 2018 (which uses NLL)."}, {"owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549226631, "post_id": 54507150, "comment_id": 95818414, "body": "@LukasKalbertodt thanks, you&#39;re right. Unfortunately using the latest compiler isn&#39;t a solution for me as this is for a uni assessment and the marking environment uses Rust 1.14.0. However, I should be able to make it work with the knowledge that I&#39;m not trying to do something stupid."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549226743, "post_id": 54507150, "comment_id": 95818450, "body": "@Karl Unrelated, but out of interest: what university? Always interested in seeing where Rust is taught."}, {"owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1549227125, "post_id": 54507150, "comment_id": 95818563, "body": "@LukasKalbertodt University of Kent. It might disappoint you, though, that this is just one module that looks at various languages, so the Rust coverage is pretty superficial."}, {"owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549227310, "post_id": 54507150, "comment_id": 95818621, "body": "@Stargateur apologies, edited. Didn&#39;t realise that the compiler wasn&#39;t the latest version when I posted."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549227911, "post_id": 54507150, "comment_id": 95818788, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=8aa4213db032f44d7175c367f06b14c6\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, if you can&#39;t use NLL you need to scope lexical your borrow. See, <a href=\"https://stackoverflow.com/a/50253558/7076153\">stackoverflow.com/a/50253558/7076153</a>, all links have different context where this problem occur."}, {"owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549228799, "post_id": 54507150, "comment_id": 95819008, "body": "@Stargateur thanks, introducing a new scope worked, posted an answer below."}], "answers": [{"tags": [], "owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "is_accepted": false, "score": 0, "last_activity_date": 1549228744, "creation_date": 1549228744, "answer_id": 54507693, "question_id": 54507150, "link": "https://stackoverflow.com/questions/54507150/getting-first-member-of-a-btreeset/54507693#54507693", "title": "Getting first member of a BTreeSet", "body": "<p>Not sure this is the best approach, but I fixed it by introducing a new scope to ensure that the immutable borrow ends before the mutable borrow occurs:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\nfn main() {\n    let mut start_nodes = BTreeSet::new();\n\n    // add items to the set\n\n    while !start_nodes.is_empty() {\n        let mut n = 0;\n\n        {\n            let mut start_iter = start_nodes.iter();\n            let mut start_iter_cloned = start_iter.cloned();\n\n            let x = &amp;mut n;\n            *x = start_iter_cloned.next().unwrap();\n        }\n\n        start_nodes.remove(&amp;n);    \n    } \n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1549230514, "last_edit_date": 1549230514, "creation_date": 1549229415, "answer_id": 54507788, "question_id": 54507150, "link": "https://stackoverflow.com/questions/54507150/getting-first-member-of-a-btreeset/54507788#54507788", "title": "Getting first member of a BTreeSet", "body": "<blockquote>\n  <p>Why is <code>start_nodes.iter()</code> considered an immutable borrow?</p>\n</blockquote>\n\n<p>Whenever you ask a question like this one, you need to look at the prototype of the function, in this case the prototype of <code>BTreeSet::iter()</code>:</p>\n\n<pre><code>fn iter(&amp;self) -&gt; Iter&lt;T&gt;\n</code></pre>\n\n<p>If we look up the <code>Iter</code> type that is returned, we find that it's defined as</p>\n\n<pre><code>pub struct Iter&lt;'a, T&gt; where T: 'a { /* fields omitted */ }\n</code></pre>\n\n<p>The lifetime <code>'a</code> is not explicitly mentioned in the definition of <code>iter()</code>; however, the lifetime elision rules make the function definition equivalent to</p>\n\n<pre><code>fn iter&lt;'a&gt;(&amp;'a self) -&gt; Iter&lt;'a, T&gt;\n</code></pre>\n\n<p>From this expanded version, you can see that the return value has a lifetime that is bound to the lifetime of the reference to <code>self</code> that you pass in, which is just another way of stating that the function call creates a shared borrow that lives as long as the return value. If you store the return value in a variable, the borrow lives at least as long as the variable.</p>\n\n<blockquote>\n  <p>What approach should I take instead to get the first member?</p>\n</blockquote>\n\n<p>As noted in the comments, your code works on recent versions of Rust due to non-lexical lifetimes \u2013 the compiler figures out by itself that <code>start_iter</code> and <code>start_iter_cloned</code> don't need to live longer than the call to <code>next()</code>. In older versions of Rust, you can artificially limit the lifetime by introducing a new scope:</p>\n\n<pre><code>while !start_nodes.is_empty() {\n    let n = {\n        let mut start_iter = start_nodes.iter();\n        let mut start_iter_cloned = start_iter.cloned();\n        start_iter_cloned.next().unwrap()\n    };\n    start_nodes.remove(&amp;n);\n}\n</code></pre>\n\n<p>However, note that this code is needlessly long-winded.  The new iterator you create and its cloning version only live inside the new scope, and they aren't really used for any other purpose, so you could just as well write</p>\n\n<pre><code>while !start_nodes.is_empty() {\n    let n = start_nodes.iter().next().unwrap().clone();\n    start_nodes.remove(&amp;n);\n}\n</code></pre>\n\n<p>which does exactly the same, and avoids the issues with long-living borrows by avoiding to store the intermediate values in variables, to ensure their lifetime ends immediately after the expression.</p>\n\n<p>Finally, while you don't give full details of your use case, I strongly suspect that you would be better off with a <code>BinaryHeap</code> instead of a <code>BTreeSet</code>:</p>\n\n<pre><code>use std::collections::BinaryHeap;\n\nfn main() {\n    let mut start_nodes = BinaryHeap::new();\n    start_nodes.push(42);\n    while let Some(n) = start_nodes.pop() {\n        // Do something with `n`\n    }\n}\n</code></pre>\n\n<p>This code is shorter, simpler, completely sidesteps the issue with the borrow checker, and will also be more efficient.</p>\n"}], "owner": {"reputation": 53, "user_id": 4248774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0568112ff63ba861eaddeba4c7626f0?s=128&d=identicon&r=PG&f=1", "display_name": "Karl", "link": "https://stackoverflow.com/users/4248774/karl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 0, "accepted_answer_id": 54507788, "answer_count": 2, "score": 2, "last_activity_date": 1549230514, "creation_date": 1549225042, "last_edit_date": 1549227542, "question_id": 54507150, "link": "https://stackoverflow.com/questions/54507150/getting-first-member-of-a-btreeset", "title": "Getting first member of a BTreeSet", "body": "<p>In Rust, I have a <code>BTreeSet</code> that I'm using to keep my values in order. I have a loop that should retrieve and remove the first (lowest) member of the set. I'm using a cloned iterator to retrieve the first member. Here's the code:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\nfn main() {\n    let mut start_nodes = BTreeSet::new();\n\n    // add items to the set\n\n    while !start_nodes.is_empty() {\n        let mut start_iter = start_nodes.iter();\n        let mut start_iter_cloned = start_iter.cloned();\n        let n = start_iter_cloned.next().unwrap();\n\n        start_nodes.remove(&amp;n);\n\n    }\n}\n</code></pre>\n\n<p>This, however, gives me the following compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `start_nodes` as mutable because it is also borrowed as immutable\n  --&gt; prog.rs:60:6\n   |\n56 |        let mut start_iter = start_nodes.iter();\n   |                             ----------- immutable borrow occurs here\n...\n60 |        start_nodes.remove(&amp;n);\n   |        ^^^^^^^^^^^ mutable borrow occurs here\n...\n77 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>Why is <code>start_nodes.iter()</code> considered an immutable borrow? What approach should I take instead to get the first member?</p>\n\n<p>I'm using version <code>1.14.0</code> (not by choice).</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1549215335, "post_id": 54505455, "comment_id": 95814879, "body": "<i>&quot;I thought it should be working because <code>WithFinal</code> extend trait <code>State</code>&quot;</i> In that case <code>WithFinal</code> is <i>more specific</i> than <code>State</code>, so the parameter type <code>T</code> in that struct still needs to be explicitly constrained by <code>WithFinal</code>."}, {"owner": {"reputation": 385, "user_id": 5221998, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/IiibO.png?s=128&g=1", "display_name": "DrSensor", "link": "https://stackoverflow.com/users/5221998/drsensor"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549215882, "post_id": 54505455, "comment_id": 95815028, "body": "But if I constrain it with <code>WithFinal</code> then I can&#39;t use <code>WithInitial</code> \ud83d\ude10"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1549216000, "post_id": 54505455, "comment_id": 95815059, "body": "There is no <code>WithInitial</code> in the actual question. Please provide a more accurate <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> (relevant code should not be behind a link)."}, {"owner": {"reputation": 385, "user_id": 5221998, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/IiibO.png?s=128&g=1", "display_name": "DrSensor", "link": "https://stackoverflow.com/users/5221998/drsensor"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1549216299, "post_id": 54505455, "comment_id": 95815155, "body": "<code>WithInitial</code> is on the <b>Full version</b> link \ud83d\ude42 (I wonder if that&#39;s a rule in SO to not only link but also write down the full code \ud83e\udd14)"}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1549220672, "post_id": 54505455, "comment_id": 95816609, "body": "Questions on Stackoverflow should in general not contain links to external code because links tend to become dead with time, making questions incomplete. However, to avoid questions becoming too big, code in the question should follow the rule of MCVE (which has been linked just above)."}], "answers": [{"comments": [{"owner": {"reputation": 385, "user_id": 5221998, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/IiibO.png?s=128&g=1", "display_name": "DrSensor", "link": "https://stackoverflow.com/users/5221998/drsensor"}, "edited": false, "score": 0, "creation_date": 1549216690, "post_id": 54505718, "comment_id": 95815294, "body": "Thank you very much \ud83d\ude4f. So if I want to imply Drop I need to use <code>#[unsafe_destructor]</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 385, "user_id": 5221998, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/IiibO.png?s=128&g=1", "display_name": "DrSensor", "link": "https://stackoverflow.com/users/5221998/drsensor"}, "edited": false, "score": 4, "creation_date": 1549218252, "post_id": 54505718, "comment_id": 95815808, "body": "@cimenx From the same source of that use of <code>#[unsafe_destructor]</code>: <i>&quot;This is wrong.&quot;</i>  The attribute does not even exist in stable Rust."}], "tags": [], "owner": {"reputation": 185, "user_id": 7893410, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-eYSL6UIdVoc/AAAAAAAAAAI/AAAAAAAAAA8/O0VaYpF2uy0/photo.jpg?sz=128", "display_name": "ThatsNoMoon", "link": "https://stackoverflow.com/users/7893410/thatsnomoon"}, "is_accepted": true, "score": 2, "last_activity_date": 1549216156, "creation_date": 1549216156, "answer_id": 54505718, "question_id": 54505455, "link": "https://stackoverflow.com/questions/54505455/drop-cant-be-used-in-the-generic-struct-implementing-extended-trait/54505718#54505718", "title": "Drop can&#39;t be used in the generic struct implementing extended trait", "body": "<p>The short answer is that you aren't allowed to implement <code>Drop</code> on specialized generic types.</p>\n\n<p>Your <code>DropLike</code> trait is <em>like</em> <code>Drop</code>, but <code>Drop</code> is a language item, and gets special treatment from the compiler. This means this error only applies to <code>Drop</code>.</p>\n\n<p>From the <a href=\"https://doc.rust-lang.org/error-index.html#E0367\" rel=\"nofollow noreferrer\">Rustc Error Index</a>:</p>\n\n<blockquote>\n  <p>This code is not legal: it is not possible to specialize <code>Drop</code> to a subset of\n  implementations of a generic type. In order for this code to work, <code>MyStruct</code>\n  must also require that <code>T</code> implements <code>Foo</code>.</p>\n</blockquote>\n\n<p>(Also visible with <code>rustc --explain E0367</code>)</p>\n\n<p>Here's <a href=\"https://github.com/rust-lang/rust/issues/8142\" rel=\"nofollow noreferrer\">the issue</a> that appears to have preciptated this change.</p>\n"}], "owner": {"reputation": 385, "user_id": 5221998, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/IiibO.png?s=128&g=1", "display_name": "DrSensor", "link": "https://stackoverflow.com/users/5221998/drsensor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 329, "favorite_count": 0, "accepted_answer_id": 54505718, "answer_count": 1, "score": -2, "last_activity_date": 1549216765, "creation_date": 1549214343, "last_edit_date": 1592644375, "question_id": 54505455, "link": "https://stackoverflow.com/questions/54505455/drop-cant-be-used-in-the-generic-struct-implementing-extended-trait", "title": "Drop can&#39;t be used in the generic struct implementing extended trait", "body": "<blockquote>\n<p><strong>TL;DR</strong> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99952dfdc8dab353992d2681de6b6f58\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=99952dfdc8dab353992d2681de6b6f58</a></p>\n<p><strong>Full version</strong> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38d0c934cb7e55b868d73bd2dde94454\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38d0c934cb7e55b868d73bd2dde94454</a></p>\n</blockquote>\n<p>I don't quite understand why this doesn't work:</p>\n<pre><code>pub trait State {}\npub trait WithFinal: State {}\npub struct Machine&lt;T: State&gt; {\n    pub state: T,\n    error: Option&lt;fn(&amp;Event, &amp;T)&gt;,\n    transition: Option&lt;fn(&amp;T, &amp;T, Event)&gt;, // fn(&amp;current_state, &amp;previous_state)\n}\n\nimpl&lt;T: WithFinal&gt; Drop for Machine&lt;T&gt; {\n    fn drop(&amp;mut self) {}\n}\n</code></pre>\n<pre><code>   Compiling scdlang v0.1.0 (/home/wildan/Projects/OSS/scdlang)\nerror[E0367]: The requirement `T: statechart::WithFinal` is added only by the Drop impl.\n  --&gt; src/main.rs:92:5\n   |\n92 | /     impl&lt;T: WithFinal&gt; Drop for Machine&lt;T&gt; {\n93 | |         fn drop(&amp;mut self) {}\n94 | |     }\n   | |_____^\n   |\nnote: The same requirement must be part of the struct/enum definition\n  --&gt; src/main.rs:74:5\n   |\n74 | /     pub struct Machine&lt;T: State&gt; {\n75 | |         pub state: T,\n76 | |         error: Option&lt;fn(&amp;Event, &amp;T)&gt;,\n77 | |         transition: Option&lt;fn(&amp;T, &amp;T, Event)&gt;, // fn(&amp;current_state, &amp;previous_state)\n78 | |     }\n   | |_____^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0367`.\nerror: Could not compile `scdlang`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n<p>I thought it should be working because <code>WithFinal</code> extend trait <code>State</code></p>\n<p>However, both these 2 <code>impl</code> work just fine:</p>\n<pre><code>trait DropLike {\n    fn drop(&amp;mut self);\n}\n\nimpl&lt;T: WithFinal&gt; DropLike for Machine&lt;T&gt; {\n    fn drop(&amp;mut self) {}\n}\n\nimpl&lt;T: State&gt; Drop for Machine&lt;T&gt; {\n    fn drop(&amp;mut self) {}\n}\n\n</code></pre>\n"}, {"tags": ["rust", "raii", "borrow-checker", "interior-mutability"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1549217391, "last_edit_date": 1549217391, "creation_date": 1549212662, "answer_id": 54505208, "question_id": 54504779, "link": "https://stackoverflow.com/questions/54504779/how-to-make-a-subscriber-object-with-raii-properties/54505208#54505208", "title": "How to make a subscriber object with RAII properties?", "body": "<p>It is problematic for your <code>Subscription</code> to hold a mutable reference to <code>Transport</code> because, as you discovered, you'll only be able to hold one at a time and you won't be able to do anything else with the transport in the meantime.</p>\n\n<p>Instead, you can use an <code>Rc</code> (for shared ownership) and <code>RefCell</code> (for interior mutability):</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\nstruct TransportInner;\n\npub struct Transport {\n    inner: Rc&lt;RefCell&lt;TransportInner&gt;&gt;,\n}\n\npub struct Subscription { \n    trans: Rc&lt;RefCell&lt;TransportInner&gt;&gt;\n}\n\nimpl TransportInner {\n   pub fn send(&amp;mut self, cmd: &amp;str) { }\n}\n\nimpl Transport {\n   pub fn send(&amp;mut self, cmd: &amp;str) { \n       self.inner.borrow_mut().send(cmd)\n   }\n\n   pub fn subscribe(&amp;mut self, cmd: &amp;str) -&gt; Subscription {\n      self.send(\"subscribe-with-params\");\n      Subscription { trans: Rc::clone(&amp;self.inner) }\n   }\n}\n\nimpl Drop for Subscription {\n   fn drop(&amp;mut self) {\n      self.trans.borrow_mut().send(\"unsubscribe-with params\");\n   }\n}\n</code></pre>\n\n<p>You can do this without splitting it into an inner and outer structure, but that would require the user to access the <code>Transport</code> via an <code>Rc</code> too, which could be unwieldy. </p>\n\n<p>If you need this to work across threads, you should use <code>Arc&lt;Mutex&gt;</code> instead.</p>\n"}], "owner": {"reputation": 3, "user_id": 2100591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99268f64cf674b41e2a324a020a16818?s=128&d=identicon&r=PG", "display_name": "kek", "link": "https://stackoverflow.com/users/2100591/kek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 54505208, "answer_count": 1, "score": 0, "last_activity_date": 1549217391, "creation_date": 1549209988, "last_edit_date": 1549213710, "question_id": 54504779, "link": "https://stackoverflow.com/questions/54504779/how-to-make-a-subscriber-object-with-raii-properties", "title": "How to make a subscriber object with RAII properties?", "body": "<p>I'm talking to some hardware over a link with kind of a publisher/subscriber model. In C++, I did subscriptions with RAII to remember to always unsubscribe, but I can't seem to get the ownerships/borrows right in rust.</p>\n\n<p>Naively, this is something like what I would like to do. <code>send</code> and <code>receive</code> probably needs to be <code>&amp;mut self</code>, so as I understand, <code>Subscription</code> needs mutable access to the <code>Transport</code>.</p>\n\n<pre><code>struct Transport;\n\nimpl Transport {\n    pub fn send(&amp;mut self, cmd: &amp;str) { unimplemented!() }\n    pub fn subscribe(&amp;mut self, cmd: &amp;str) -&gt; Subscription {\n        self.send(\"subscribe-with-params\");\n        Subscription { trans: &amp;mut self }\n    }\n}\n\nstruct Subscription {\n    trans: &amp;mut Transport,\n}\n\nimpl Drop for Subscription {\n    fn drop(&amp;mut self) {\n        self.trans.send(\"unsubscribe-with params\");\n    }\n}\n\nimpl Subscription {\n    fn receive(&amp;mut self) -&gt; &amp;[u8] { /*blocking wait for data*/ }\n}\n\nfn test(t: Transport) {\n    // Need to subscribe before command, as command might generate status messages\n    let mut status_sub = t.subscribe(\"status-message\");\n    {\n        let mut short_lived_sub = t.subscribe(\"command_reply\");\n        t.send(\"command\");\n        short_lived_sub.receive(); // Wait for ack\n    }\n    loop {\n        println!(\"{:?}\", status_sub.receive());\n        /*processing of status */\n    }\n}\n</code></pre>\n\n<p>There are at least two problems here. One is how <code>Subscription</code> should keep some reference to it's \"parent\", the <code>Transport</code>, and another is the problem in <code>fn test</code> that I can't borrow <code>Transport</code> twice for two different subscriptions.</p>\n\n<p>I have a feeling that I'm kind of asking the wrong question here, so maybe there's a good way of approaching this in a different way entirely?</p>\n"}, {"tags": ["generics", "struct", "rust"], "comments": [{"owner": {"reputation": 2930, "user_id": 211280, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/30d93884d1d9fefdc8f93d4ed9079d04?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/211280/manu"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549206563, "post_id": 54504026, "comment_id": 95812251, "body": "@AndreyTyukin I&#39;ve just found your answer now, reading the code of std::rc::Rc in <a href=\"https://doc.rust-lang.org/src/alloc/rc.rs.html#302-374\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/alloc/rc.rs.html#302-374</a>.  If you create the answer, I will happy to mark it.  It wasn&#39;t a typo; I simply didn&#39;t know that &#39;impl &lt;T: Player&gt;&#39; would work."}, {"owner": {"reputation": 2930, "user_id": 211280, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/30d93884d1d9fefdc8f93d4ed9079d04?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/211280/manu"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549214594, "post_id": 54504026, "comment_id": 95814655, "body": "Ok. I also voted to close."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549238700, "post_id": 54507202, "comment_id": 95821102, "body": "It&#39;s probably best if you add the link to your answer so it doesn&#39;t get lost in these transient comments."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 13, "last_activity_date": 1549240184, "last_edit_date": 1549240184, "creation_date": 1549225355, "answer_id": 54507202, "question_id": 54504026, "link": "https://stackoverflow.com/questions/54504026/how-do-i-provide-an-implementation-of-a-generic-struct-in-rust/54507202#54507202", "title": "How do I provide an implementation of a generic struct in Rust?", "body": "<p>The type parameter <code>&lt;T: SomeTrait&gt;</code> should come right after the <code>impl</code> keyword:</p>\n\n<pre><code>impl&lt;T: SomeTrait&gt; MyStruct&lt;T&gt; {\n    fn new(t: T) -&gt; Self {\n        MyStruct { value: t }\n    }\n}\n</code></pre>\n\n<p>If the list of types and constraints in <code>impl&lt;...&gt;</code> becomes too long, you can use the <code>where</code>-syntax and list the constraints separately:</p>\n\n<pre><code>impl&lt;T&gt; MyStruct&lt;T&gt;\nwhere\n    T: SomeTrait,\n{\n    fn new(t: T) -&gt; Self {\n        MyStruct { value: t }\n    }\n}\n</code></pre>\n\n<p>Note the usage of <code>Self</code>, which is a shortcut for <code>MyStruct&lt;T&gt;</code> available inside of the <code>impl</code> block.</p>\n\n<hr>\n\n<p><strong>Remarks</strong></p>\n\n<ol>\n<li><p>The reason why <code>impl&lt;T&gt;</code> is required is explained in <a href=\"https://stackoverflow.com/a/45473717/2707792\">this answer</a>. Essentially, it boils down to the fact that both <code>impl&lt;T&gt; MyStruct&lt;T&gt;</code> and <code>impl MyStruct&lt;T&gt;</code> are valid, but mean different things.</p></li>\n<li><p>When you move <code>new</code> into the <code>impl</code> block, you should remove the superfluous type parameters, otherwise the interface of your struct will become unusable, as the following example shows:</p>\n\n<pre><code>// trait SomeTrait and struct MyStruct as above\n// [...]\n\nimpl&lt;T&gt; MyStruct&lt;T&gt;\nwhere\n    T: SomeTrait,\n{\n    fn new&lt;S: SomeTrait&gt;(t: S) -&gt; MyStruct&lt;S&gt; {\n        MyStruct { value: t }\n    }\n}\n\nimpl SomeTrait for u64 {}\nimpl SomeTrait for u128 {}\n\nfn main() {\n    // just a demo of problematic code, don't do this!\n    let a: MyStruct&lt;u128&gt; = MyStruct::&lt;u64&gt;::new::&lt;u128&gt;(1234);\n    //                                 ^\n    //                                 |\n    //        This is an irrelevant type\n    //        that cannot be inferred. Not only will the compiler\n    //        force you to provide an irrelevant type, it will also\n    //        not prevent you from passing incoherent junk as type\n    //        argument, as this example demonstrates. This happens \n    //        because `S` and `T` are completely unrelated.\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 2930, "user_id": 211280, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/30d93884d1d9fefdc8f93d4ed9079d04?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/211280/manu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4013, "favorite_count": 2, "accepted_answer_id": 54507202, "answer_count": 1, "score": 11, "last_activity_date": 1549240184, "creation_date": 1549205276, "last_edit_date": 1549232332, "question_id": 54504026, "link": "https://stackoverflow.com/questions/54504026/how-do-i-provide-an-implementation-of-a-generic-struct-in-rust", "title": "How do I provide an implementation of a generic struct in Rust?", "body": "<p>I have a struct <code>MyStruct</code> that takes a generic parameter <code>T: SomeTrait</code>, and I want to implement a <code>new</code> method for <code>MyStruct</code>. This works:</p>\n\n<pre><code>/// Constraint for the type parameter `T` in MyStruct\npub trait SomeTrait: Clone {}\n\n/// The struct that I want to construct with `new`\npub struct MyStruct&lt;T: SomeTrait&gt; {\n    value: T,\n}\n\nfn new&lt;T: SomeTrait&gt;(t: T) -&gt; MyStruct&lt;T&gt; {\n    MyStruct { value: t }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I wanted to put the <code>new</code> function inside an <code>impl</code> block like this:</p>\n\n<pre><code>impl MyStruct {\n    fn new&lt;T: SomeTrait&gt;(t: T) -&gt; MyStruct&lt;T&gt; {\n        MyStruct { value: t }\n    }\n}\n</code></pre>\n\n<p>But that fails to compile with:</p>\n\n<pre><code>error[E0107]: wrong number of type arguments: expected 1, found 0\n --&gt; src/main.rs:9:6\n  |\n9 | impl MyStruct {\n  |      ^^^^^^^^ expected 1 type argument\n</code></pre>\n\n<p>If I try to put it like this:</p>\n\n<pre><code>impl MyStruct&lt;T&gt; {\n    fn new(t: T) -&gt; MyStruct&lt;T&gt; {\n        MyStruct { value: t }\n    }\n}\n</code></pre>\n\n<p>The error changes to:</p>\n\n<pre><code>error[E0412]: cannot find type `T` in this scope\n --&gt; src/main.rs:9:15\n  |\n9 | impl MyStruct&lt;T&gt; {\n  |               ^ not found in this scope\n</code></pre>\n\n<p>How do I provide an implementation of a generic struct? Where do I put the generic parameters and their constraints?</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1549204750, "last_edit_date": 1549204750, "creation_date": 1549203429, "answer_id": 54503755, "question_id": 54503625, "link": "https://stackoverflow.com/questions/54503625/why-does-calling-tokiospawn-result-in-the-panic-spawnerror-is-shutdown-tru/54503755#54503755", "title": "Why does calling tokio::spawn result in the panic &quot;SpawnError { is_shutdown: true }&quot;?", "body": "<p>The documentation for <a href=\"https://docs.rs/tokio/0.1.15/tokio/executor/fn.spawn.html\" rel=\"noreferrer\"><code>tokio::spawn</code></a> states:</p>\n\n<blockquote>\n  <p>This function will panic if the default executor is not set or if spawning onto the default executor returns an error.</p>\n</blockquote>\n\n<p>Effectively, this means that <code>tokio::spawn</code> should only be called from <strong>inside</strong> a call to <code>tokio::run</code>.</p>\n\n<p>Since you have only a single future to execute, you might as well just pass it directly to <code>tokio::run</code>. If you had multiple futures, then you can make make use of <a href=\"https://docs.rs/futures/0.1.25/futures/future/fn.lazy.html\" rel=\"noreferrer\"><code>future::lazy</code></a> to construct a lazily-evaluated future that will call <code>spawn</code> when it eventually runs:</p>\n\n<pre><code>use std::time::*;\nuse tokio::prelude::*; // 0.1.14\n\nfn main() {\n    tokio::run(futures::lazy(|| {\n        tokio::spawn(wait_one_sec().map(|_| println!(\"One\")));\n        tokio::spawn(wait_one_sec().map(|_| println!(\"Two\")));\n        Ok(())\n    }));\n}\n\nfn wait_one_sec() -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n    tokio::timer::Delay::new(Instant::now() + Duration::from_secs(1))\n        .map(drop)\n        .map_err(|e| panic!(\"{:?}\", e))\n}\n</code></pre>\n\n<p>Note that if you forget the <code>futures::lazy</code> then you will get the same error. This is because the arguments to functions are evaluated eagerly, which means that the call to <code>tokio::spawn</code> happens first, causing the same sequence of events.</p>\n\n<blockquote>\n<pre><code>use std::sync::mpsc;\n</code></pre>\n</blockquote>\n\n<p>I think it's highly doubtful that you want to use the standard libraries channels, as they are not async-aware and thus will block \u2014 a very bad thing in async code.</p>\n\n<p>Instead, you probably want <a href=\"https://docs.rs/futures/0.1.25/futures/sync/mpsc/index.html\" rel=\"noreferrer\"><code>futures::sync::mpsc</code></a>. </p>\n"}], "owner": {"reputation": 53, "user_id": 7534521, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67e2ada9e72dc11ca4578077e8296ac3?s=128&d=identicon&r=PG", "display_name": "hr567", "link": "https://stackoverflow.com/users/7534521/hr567"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1478, "favorite_count": 1, "accepted_answer_id": 54503755, "answer_count": 1, "score": 5, "last_activity_date": 1549204750, "creation_date": 1549202390, "last_edit_date": 1549202982, "question_id": 54503625, "link": "https://stackoverflow.com/questions/54503625/why-does-calling-tokiospawn-result-in-the-panic-spawnerror-is-shutdown-tru", "title": "Why does calling tokio::spawn result in the panic &quot;SpawnError { is_shutdown: true }&quot;?", "body": "<p>I want to use <code>Delay</code> to do some work later. If I use <code>tokio::run</code>, it just works fine, but it panics when using <code>tokio::spawn</code>:</p>\n\n<pre><code>use std::sync::mpsc;\nuse std::time::*;\n\nuse tokio::prelude::*; // 0.1.14\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n    let task = tokio::timer::Delay::new(Instant::now() + Duration::from_secs(1))\n        .map(move |_| {\n            tx.send(String::from(\"hello\")).unwrap();\n            ()\n        })\n        .map_err(|e| {\n            panic!(\"{:?}\", e);\n        });\n    tokio::spawn(task);\n    let msg = rx.recv().unwrap();\n    println!(\"{}\", msg);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: SpawnError { is_shutdown: true }', src/libcore/result.rs:1009:5\n</code></pre>\n\n<p>I need to use <code>spawn</code> not <code>run</code> if I want various tasks to work concurrently. How to change the code to make it work?</p>\n"}, {"tags": ["rust", "lifetime", "any"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549202252, "post_id": 54503120, "comment_id": 95811099, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>Object</code> and <code>Container</code> instead, please."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1549209386, "post_id": 54503120, "comment_id": 95813075, "body": "Are you certain that you need <code>Any</code>? Is it impossible in your use-case to have the functionality you want to trigger on the <code>GameObj</code> trait instead of extracting relevant method of specific structs with downcasting?"}, {"owner": {"reputation": 63, "user_id": 6144440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ef7609fd138f3ea0d038e7099a9c843?s=128&d=identicon&r=PG&f=1", "display_name": "Tobi", "link": "https://stackoverflow.com/users/6144440/tobi"}, "edited": false, "score": 0, "creation_date": 1549236443, "post_id": 54503120, "comment_id": 95820720, "body": "Thanks for your responses. Jep you are right, i am switching between languages a lot especially Java so I mix up the conventions sometimes.      I thought about that as well but the number of methods would explode and not every object would support them, for example I could trigger method open on a door but this wouldn&#39;t make sense for a tile GameObj."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549287233, "post_id": 54503120, "comment_id": 95837227, "body": "You don&#39;t need to implement every method for every type. Just have <code>enum GameObj { Door(Door), ... }</code> and, anywhere you currently downcast to <code>Door</code>, instead just <code>if let GameObj::Door(d) = game_obj { ... }</code>. Downcasting is almost like &quot;admitting defeat&quot; because you can&#39;t take advantage of type erasure when you have to go back to the concrete type, so you might as well just use an <code>enum</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549288759, "post_id": 54503120, "comment_id": 95838169, "body": "(That said, I suspect you may be going down an awkward and inefficient road design-wise, just based on the example. A principle I have found useful is that in object-oriented programming, objects represent pieces of the machine that solves your problem, not pieces of the problem itself. If you&#39;re coming from an OOP perspective, I suggest reading <a href=\"https://ericlippert.com/2015/04/27/wizards-and-warriors-part-one/\" rel=\"nofollow noreferrer\">this  short blog series</a>, and watching <a href=\"https://m.youtube.com/watch?v=aKLntZcp27M\" rel=\"nofollow noreferrer\">the closing keynote from RustConf 2018, on gamedev in Rust</a>.)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1549285987, "post_id": 54512019, "comment_id": 95836589, "body": "Good answer, one nitpick: <code>Rc&lt;str&gt;</code> is usually preferable to <code>Rc&lt;String&gt;</code> because it has less indirection and you can&#39;t mutate through <code>Rc</code>, anyway, so the capacity is meaningless (same reason one shouldn&#39;t use <code>&amp;String</code>)."}, {"owner": {"reputation": 63, "user_id": 6144440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ef7609fd138f3ea0d038e7099a9c843?s=128&d=identicon&r=PG&f=1", "display_name": "Tobi", "link": "https://stackoverflow.com/users/6144440/tobi"}, "edited": false, "score": 0, "creation_date": 1549483729, "post_id": 54512019, "comment_id": 95922441, "body": "Thanks for the great answer! I think I am gonna go with the enum approach I tried it with a the boiled down update loop and it works fine. Nevertheless it introduces a bit of boiler plait code because to call for example update on the enum I have to use a big match containing all used GameObject structs. Is there a way around that?"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 63, "user_id": 6144440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ef7609fd138f3ea0d038e7099a9c843?s=128&d=identicon&r=PG&f=1", "display_name": "Tobi", "link": "https://stackoverflow.com/users/6144440/tobi"}, "edited": false, "score": 0, "creation_date": 1549484609, "post_id": 54512019, "comment_id": 95922837, "body": "@Tobi Yeah, the <a href=\"https://docs.rs/enum_dispatch/0.1.2/enum_dispatch/\" rel=\"nofollow noreferrer\"><code>enum_dispatch</code> crate</a> can generate that boilerplate for the methods that are common to all of them."}, {"owner": {"reputation": 63, "user_id": 6144440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ef7609fd138f3ea0d038e7099a9c843?s=128&d=identicon&r=PG&f=1", "display_name": "Tobi", "link": "https://stackoverflow.com/users/6144440/tobi"}, "edited": false, "score": 0, "creation_date": 1549496183, "post_id": 54512019, "comment_id": 95927245, "body": "Thank you that looks very promising, I will try it out."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 3, "last_activity_date": 1549315222, "last_edit_date": 1549315222, "creation_date": 1549266836, "answer_id": 54512019, "question_id": 54503120, "link": "https://stackoverflow.com/questions/54503120/lifetime-issue-when-using-the-any-trait-to-get-references-to-structs-containing/54512019#54512019", "title": "Lifetime issue when using the Any trait to get references to structs containing references", "body": "<p><code>Any</code> is <a href=\"https://doc.rust-lang.org/src/core/any.rs.html#88-111\" rel=\"nofollow noreferrer\">declared</a> <code>trait Any: 'static</code> and can <a href=\"https://doc.rust-lang.org/std/any/\" rel=\"nofollow noreferrer\">only store <code>'static</code> types</a>.  So in order to make <code>dyn Any + 'a</code> a well-formed type, your <code>as_any</code> method was given an implicit <code>'a: 'static</code> bound, leading to the lifetime error you showed.</p>\n\n<p>If not for this restriction, you would be able to break safety by putting in an <code>'a</code> type into an <code>Any</code> and getting out a <code>'static</code> type, because <code>TypeId</code> can\u2019t tell the difference\u2014lifetimes are erased during compilation.  See the <a href=\"https://github.com/rust-lang/rfcs/pull/1849\" rel=\"nofollow noreferrer\">discussion on RFC 1849</a> for more information.</p>\n\n<p>You should think more carefully about why you want to use <code>Any</code>.  It\u2019s almost never what you actually want.  Perhaps something as simple as an <a href=\"https://doc.rust-lang.org/book/ch06-00-enums.html\" rel=\"nofollow noreferrer\"><code>enum</code></a> type of all the different object types you might want to store would satisfy your use case better?</p>\n\n<p>If you really want to use <code>Any</code>, then you\u2019ll need to find a way to make your types <code>'static</code>.  <a href=\"https://doc.rust-lang.org/book/ch15-04-rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> (or <a href=\"https://doc.rust-lang.org/book/ch16-03-shared-state.html#atomic-reference-counting-with-arct\" rel=\"nofollow noreferrer\"><code>Arc</code></a>, if threads are involved) is often helpful for this purpose; for example, you could have your <code>object</code> store <code>Rc&lt;String&gt;</code> (or better, <code>Rc&lt;str&gt;</code>) instead of <code>&amp;'a String</code>.</p>\n"}], "owner": {"reputation": 63, "user_id": 6144440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ef7609fd138f3ea0d038e7099a9c843?s=128&d=identicon&r=PG&f=1", "display_name": "Tobi", "link": "https://stackoverflow.com/users/6144440/tobi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 1, "accepted_answer_id": 54512019, "answer_count": 1, "score": 2, "last_activity_date": 1608655178, "creation_date": 1549198733, "last_edit_date": 1608655178, "question_id": 54503120, "link": "https://stackoverflow.com/questions/54503120/lifetime-issue-when-using-the-any-trait-to-get-references-to-structs-containing", "title": "Lifetime issue when using the Any trait to get references to structs containing references", "body": "<p>I ran into a lifetime problem with a little game. The below code represents a very boiled down version of the update loop.\nI need the container mutable reference to get references to other game objects or to create new ones or trigger a functionality.</p>\n<p>For that reason, I need the <code>Any</code> trait to be able to cast the trait to a struct, so in my <code>GameObj</code> trait I added an <code>as_any</code> method, but this resulted in a lifetime issue.</p>\n<pre><code>use std::any::Any;\n\ntrait GameObj&lt;'a&gt; {\n    fn as_any&lt;'b&gt;(&amp;'b self) -&gt; &amp;'b (dyn Any + 'a);\n    fn update(&amp;mut self, cont: &amp;mut container);\n}\n\nstruct object&lt;'a&gt; {\n    content: &amp;'a String,\n}\n\nimpl&lt;'a&gt; GameObj&lt;'a&gt; for object&lt;'a&gt; {\n    fn as_any&lt;'b&gt;(&amp;'b self) -&gt; &amp;'b (dyn Any + 'a) {\n        return self;\n    }\n\n    fn update(&amp;mut self, cont: &amp;mut container) {\n        let val = cont.get_obj().unwrap();\n        let any = val.as_any();\n    }\n}\n\nstruct container&lt;'a&gt; {\n    data: Vec&lt;Box&lt;dyn GameObj&lt;'a&gt; + 'a&gt;&gt;,\n}\nimpl&lt;'a&gt; container&lt;'a&gt; {\n    fn get_obj&lt;'b&gt;(&amp;'b self) -&gt; Option&lt;&amp;'b Box&lt;dyn GameObj&lt;'a&gt; + 'a&gt;&gt; {\n        return Some(&amp;self.data[0]);\n    }\n}\n\npub fn main() {\n    let a = String::from(&quot;hallo&quot;);\n    let b = String::from(&quot;asdf&quot;);\n    {\n        let abc = object { content: &amp;a };\n        let def = object { content: &amp;b };\n        let mut cont = container { data: Vec::new() };\n        cont.data.push(Box::new(abc));\n        cont.data.push(Box::new(def));\n\n        loop {\n            for i in 0..cont.data.len() {\n                let mut obj = cont.data.remove(0);\n                obj.update(&amp;mut cont);\n                cont.data.insert(i, obj);\n            }\n        }\n    }\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8ee7dd33e3d3bfe7350235992ddee98f\" rel=\"nofollow noreferrer\">playground</a></p>\n<p>When I try to build the code, it results in the following error message.\nIf I comment out/delete <code>let any = val.as_any();</code> in the <code>update</code> function it compiles fine.</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:18:24\n   |\n18 |         let val = cont.get_obj().unwrap();\n   |                        ^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #3 defined on the method body at 17:5...\n  --&gt; src/main.rs:17:5\n   |\n17 | /     fn update(&amp;mut self, cont: &amp;mut container) {\n18 | |         let val = cont.get_obj().unwrap();\n19 | |         let any = val.as_any();\n20 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;container&lt;'_&gt;\n              found &amp;container&lt;'_&gt;\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the declared lifetime parameter bounds are satisfied\n  --&gt; src/main.rs:19:23\n   |\n19 |         let any = val.as_any();\n   |                       ^^^^^^\n</code></pre>\n<p>How I can make this work without using <code>'static</code>, or why is this impossible?</p>\n"}, {"tags": ["file", "file-io", "rust", "file-writing"], "comments": [{"owner": {"reputation": 5195, "user_id": 4005175, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/3N6Ze.jpg?s=128&g=1", "display_name": "Martin Heraleck&#253;", "link": "https://stackoverflow.com/users/4005175/martin-heraleck%c3%bd"}, "edited": false, "score": 2, "creation_date": 1549193412, "post_id": 54502272, "comment_id": 95808842, "body": "I can&#39;t see the difference between the two options."}, {"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "reply_to_user": {"reputation": 5195, "user_id": 4005175, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/3N6Ze.jpg?s=128&g=1", "display_name": "Martin Heraleck&#253;", "link": "https://stackoverflow.com/users/4005175/martin-heraleck%c3%bd"}, "edited": false, "score": 0, "creation_date": 1549193564, "post_id": 54502272, "comment_id": 95808880, "body": "I&#39;m not an OS / file-system expert, so I thought maybe one of them is faster due to file system optimizations. Are you sure both of them have the same performance?"}, {"owner": {"reputation": 5195, "user_id": 4005175, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/3N6Ze.jpg?s=128&g=1", "display_name": "Martin Heraleck&#253;", "link": "https://stackoverflow.com/users/4005175/martin-heraleck%c3%bd"}, "edited": false, "score": 0, "creation_date": 1549194084, "post_id": 54502272, "comment_id": 95808996, "body": "Copying the file by asking kernel to do it (not opening the original, looping over it to read into buffer and then writing) will probably be faster (1. option) than reading the whole file into memory and then writing (2. option). The &quot;append-part&quot; stays the same for both options."}, {"owner": {"reputation": 5195, "user_id": 4005175, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/3N6Ze.jpg?s=128&g=1", "display_name": "Martin Heraleck&#253;", "link": "https://stackoverflow.com/users/4005175/martin-heraleck%c3%bd"}, "edited": false, "score": 2, "creation_date": 1549194245, "post_id": 54502272, "comment_id": 95809043, "body": "Another option is to add checksums for each append which will be checked when reading. This is more suitable for large files. See <a href=\"https://blog.gocept.com/2013/07/15/reliable-file-updates-with-python/\" rel=\"nofollow noreferrer\">blog.gocept.com/2013/07/15/reliable-file-updates-with-python</a>&zwnj;&#8203;."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549206512, "post_id": 54502272, "comment_id": 95812242, "body": "See: <a href=\"https://stackoverflow.com/questions/43441166/prepend-line-to-beginning-of-file\">Prepend line to beginning of file</a>"}], "owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1549193330, "creation_date": 1549192531, "last_edit_date": 1549193330, "question_id": 54502272, "link": "https://stackoverflow.com/questions/54502272/append-data-to-file-and-make-sure-it-doesnt-get-corrupted", "title": "Append data to file and make sure it doesn&#39;t get corrupted", "body": "<p>I have an existing file and I'd like to append data to it and make sure it can never (or almost never) get corrupted, even if something fails during writing of the appended data.</p>\n\n<p>One method for ensuring files won't get corrupted it to write the data to a temp file, and then rename/mv the temp file to the original file. </p>\n\n<p>But doing so with append is more tricky.</p>\n\n<p>I have the whole file content in memory (it's not a huge file), so I have two options in mind:</p>\n\n<ul>\n<li>Copy the original file to a temp file, append the data to the temp file and then mv/rename the temp file to the original file</li>\n<li>Write the whole content of the file (including the data I want to append) to a temp file and then mv/rename the temp file to the original file</li>\n</ul>\n\n<p>The downside of both options is that they're slower than just append the data to the original file. Are there better ways to do this?</p>\n\n<p>If not, which option is faster?</p>\n\n<p>I need this to work on Windows, Linux and MacOS. </p>\n\n<p>I'm not sure if the programming language I'm using is relevant, but I'm using Rust to write the data.</p>\n"}, {"tags": ["rust", "clone", "mutex", "borrow-checker", "reference-counting"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1549192762, "post_id": 54501211, "comment_id": 95808702, "body": "&quot;The static FOO_BAR variable is later <b>initialized</b> by replacing the content of the option&quot;, affected. You want use an <code>Arc</code> but you want the ownership of your data, but you can&#39;t clone... that impossible, what wrong with the reference ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549202696, "post_id": 54501211, "comment_id": 95811210, "body": "The duplicates applied to your question: <code>FOO_BAR.lock().unwrap().take()</code>"}, {"owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549217569, "post_id": 54501211, "comment_id": 95815572, "body": "@Stargateur a reference would be perfectly fine, but returning a reference makes the compiler complain about it not living long enough. Whereas using <code>take()</code> will only make the contained struct usable once, though the point of this exercise would be making it available as many times as necessary, like a singleton, after initialization."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549228046, "post_id": 54501211, "comment_id": 95818829, "body": "AFAIK, that impossible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549229552, "post_id": 54501211, "comment_id": 95819217, "body": "<i><code>pub fn unpack_foo_bar() -&gt; Option&lt;FooBar&gt;</code> ... I don&#39;t care if it&#39;s owned</i> \u2014 these two statements are in direct contradiction. You <b>cannot</b> have this signature unless you take ownership."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549229680, "post_id": 54501211, "comment_id": 95819255, "body": "Perhaps <a href=\"https://stackoverflow.com/q/40095383/155423\">How to return a reference to a sub-value of a value that is under a mutex?</a> / <a href=\"https://stackoverflow.com/q/50496879/155423\">Returning a RWLockReadGuard independently from a method</a> is more what you are looking for?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549229888, "post_id": 54501211, "comment_id": 95819323, "body": "<i><code>fn unpack_foo_bar() -&gt; &amp;Option&lt;FooBar&gt;</code></i> \u2014 <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>"}, {"owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549266644, "post_id": 54501211, "comment_id": 95827014, "body": "Thanks for your comments, @Shepmaster. I had seen the sub-value/value question before. Given all the other information in the other questions you linked to, I think the best way for me to proceed is, rather than bringing the FooBar reference to the methods that need them, instead bringing those methods to where I handle the mutex in the form of closures."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549291486, "post_id": 54501211, "comment_id": 95839893, "body": "@arik what&#39;s wrong with returning something using the rental crate or owning_ref crate? That would return a (locked) value that can be treated as a reference to the <code>Option</code>."}, {"owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "edited": false, "score": 0, "creation_date": 1549315757, "post_id": 54501211, "comment_id": 95851607, "body": "It just seemed like too much additional headache for the time being. But I&#39;ll figure it out eventually."}], "owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 655, "favorite_count": 0, "closed_date": 1549202648, "answer_count": 0, "score": 0, "last_activity_date": 1549289091, "creation_date": 1549183229, "last_edit_date": 1549289091, "question_id": 54501211, "link": "https://stackoverflow.com/questions/54501211/how-do-i-return-a-reference-to-an-option-of-a-custom-struct-inside-of-a-lazy-sta", "closed_reason": "Duplicate", "title": "How do I return a reference to an Option of a custom struct inside of a lazy-static Arc Mutex?", "body": "<p>I'm experimenting with Rust's <code>Arc&lt;Mutex&gt;</code>, trying to use it with a struct that is not in the default examples, but rather a custom one that is lazily initialized:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n#[macro_use]\nextern crate lazy_static; // lazy_static = \"1.2.0\"\n\npub struct FooBar {}\n\nlazy_static! {\n    static ref FOO_BAR: Arc&lt;Mutex&lt;Option&lt;FooBar&gt;&gt;&gt; = Arc::new(Mutex::new(None));\n}\n\npub fn unpack_foo_bar() {\n    let foo_bar_arc = Arc::clone(&amp;FOO_BAR);\n    let foo_bar_mutex_result = foo_bar_arc.lock();\n    let foo_bar_mutex = foo_bar_mutex_result.unwrap();\n    let foo_bar = foo_bar_mutex.unwrap();\n    // do something\n}\n</code></pre>\n\n<p>The static <code>FOO_BAR</code> variable is later initialized by replacing the content of the option.</p>\n\n<p>The code above won't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:15:19\n   |\n15 |     let foo_bar = foo_bar_mutex.unwrap();\n   |                   ^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>It would if <code>FooBar</code> were replaced with e. g. <code>u32</code>. The code also doesn't compile with <code>String</code>, but that type has built-in methods for cloning, which my type may not necessarily have. </p>\n\n<p>Short of using <code>foo_bar_mutex.as_ref().unwrap()</code>, what other options do I have, particularly if I'd like to abstract the extraction of the <code>FooBar</code> instance into a method, like this:</p>\n\n<pre><code>pub fn unpack_foo_bar() -&gt; Option&lt;FooBar&gt; {\n    let foo_bar_arc = Arc::clone(&amp;FOO_BAR);\n    let foo_bar_mutex_result = foo_bar_arc.lock();\n    let foo_bar_mutex = foo_bar_mutex_result.unwrap();\n    let foo_bar_option = *foo_bar_mutex;\n    foo_bar_option\n}\n</code></pre>\n\n<p>In this case, the compiler throws almost the same error, which is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:34:26\n   |\n11 |     let foo_bar_option = *foo_bar_mutex;\n   |                          ^^^^^^^^^^^^^^\n   |                          |\n   |                          cannot move out of borrowed content\n   |                          help: consider using a reference instead: `&amp;*foo_bar_mutex`\n</code></pre>\n\n<p>I have a sense that this would be much simpler if <code>FooBar</code> were easily cloned, but in the real world scenario I'm basing this example on <code>FooBar</code> has a field that is an instance of a third party library object that does not derive the <code>Clone</code> trait.</p>\n\n<p>Using <code>Option::take</code> would only make the contained variable usable once. I'm not trying to take ownership of the <code>FooBar</code> instance. I don't care if it's owned as long as I can call its methods. Returning a reference would be great, but when doing this, the compiler complains:</p>\n\n<pre><code>pub fn unpack_foo_bar() -&gt; &amp;Option&lt;FooBar&gt; {\n    let foo_bar_arc = Arc::clone(&amp;FOO_BAR);\n    let foo_bar_mutex_result = foo_bar_arc.lock();\n    let foo_bar_mutex = foo_bar_mutex_result.unwrap();\n    let foo_bar_option = foo_bar_mutex.as_ref();\n    foo_bar_option\n}\n</code></pre>\n\n<p>Compiler's response:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:30:28\n   |\n 7 | pub fn unpack_foo_bar() -&gt; &amp;Option&lt;FooBar&gt; {\n   |                            ^ help: consider giving it a 'static lifetime: `&amp;'static`\n   |\n   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>Experimenting with <code>&amp;*foo_bar_mutex</code> and adding <code>'static</code> to the return type each opens up subsequent cans of compiler errors.</p>\n\n<p>I have also tried experimenting with <code>to_owned()</code> on the <code>FooBar</code> reference and stumbled upon the owning_ref crate, but alas, haven't figured out how to make returning a reference work.</p>\n\n<hr>\n\n<h1>Final Update</h1>\n\n<p>Given that it appears impossible to pass on the reference to the <code>Option&lt;FooBar&gt;</code> to an external function caller, I decided to avoid this problem altogether by allowing passing in the methods relying on the <code>FooBar</code> instance as a closure:</p>\n\n<pre><code>pub fn unpack_foo_bar(use_foo_bar: fn(&amp;FooBar)) {\n    let foo_bar_arc = Arc::clone(&amp;FOO_BAR);\n    let foo_bar_mutex_result = foo_bar_arc.lock();\n    let foo_bar_mutex = foo_bar_mutex_result.unwrap();\n    let foo_bar_reference = foo_bar_mutex.as_ref().unwrap();\n\n    // pass in the closure that needs the foo bar instance\n    use_foo_bar(foo_bar_reference);\n}\n</code></pre>\n"}, {"tags": ["vector", "rust", "borrow-checker", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549163413, "post_id": 54499494, "comment_id": 95804065, "body": "<i>an immutable reference to the [...] other elements</i> \u2014 this doesn&#39;t make sense because there can be items <b>before</b> and <b>after</b> a given element. This would require two additional references, at a minimum."}, {"owner": {"reputation": 402, "user_id": 4476886, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ef771ed046477d324a4dc64aa17b1?s=128&d=identicon&r=PG&f=1", "display_name": "SongWithoutWords", "link": "https://stackoverflow.com/users/4476886/songwithoutwords"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549163540, "post_id": 54499494, "comment_id": 95804078, "body": "@Shepmaster, I&#39;m not sure you understand. In C++ you can have a <code>Vector&lt;T&gt;</code> that is mutable (non const). You could pass this <code>Vector&lt;T&gt;</code>, along with a mutable reference to one of its elements, to a function with a signature like <code>void UpdateElement(const Vector&lt;T&gt;&amp; elems, T&amp; elem)</code>. This is what I am asking about, can update the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549163837, "post_id": 54499494, "comment_id": 95804119, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=29e738aeb9eddea55593483820b5eb8a\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549163923, "post_id": 54499494, "comment_id": 95804132, "body": "@SongWithoutWords In your example of C++ code, you have one mutable reference and one const reference to the same memory, that is unsafe in rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549163929, "post_id": 54499494, "comment_id": 95804135, "body": "Sure, but in C++ you can also trigger undefined behavior quite easily. Rust doesn&#39;t allow that. If something is immutable; it&#39;s <b>immutable</b> (in the absence of interior mutability). IIRC, C++ also allows you to cast away the <code>const</code>-ness of a value."}, {"owner": {"reputation": 402, "user_id": 4476886, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ef771ed046477d324a4dc64aa17b1?s=128&d=identicon&r=PG&f=1", "display_name": "SongWithoutWords", "link": "https://stackoverflow.com/users/4476886/songwithoutwords"}, "edited": false, "score": 0, "creation_date": 1549164034, "post_id": 54499494, "comment_id": 95804149, "body": "Yes - I understand that the borrow checker does not allow this by default.  Conceptually however, this is every bit as (un)safe as having a mutable vector and an index (which the borrow checker naturally allows).  I&#39;m just wondering if there&#39;s a way to work around this in Rust, hence the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549164158, "post_id": 54499494, "comment_id": 95804162, "body": "<i>this is every bit as (un)safe as having a mutable vector an index</i> \u2014 it is not. By using an index, you never hold a reference into the vector that you guarantee will not change at the same time that you attempt to change the value."}, {"owner": {"reputation": 402, "user_id": 4476886, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ef771ed046477d324a4dc64aa17b1?s=128&d=identicon&r=PG&f=1", "display_name": "SongWithoutWords", "link": "https://stackoverflow.com/users/4476886/songwithoutwords"}, "edited": false, "score": 1, "creation_date": 1549164260, "post_id": 54499494, "comment_id": 95804176, "body": "I guess I&#39;ve just always thought of holding an immutable reference as &quot;I will not change this value through this reference&quot;, but I guess with Rust&#39;s stronger guarantees this becomes &quot;no mutable reference exists to this value or any of its components within this scope&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549164358, "post_id": 54499494, "comment_id": 95804186, "body": "You may also be interested in <a href=\"https://stackoverflow.com/q/30831037/155423\">Situations where Cell or RefCell is the best choice</a> or <a href=\"https://stackoverflow.com/q/45674479/155423\">Need holistic explanation about Rust&#39;s cell and reference counted types</a>. Outside of your direct question, using a <code>Cell</code> or a <code>RefCell</code> might allow you to solve your problem in exchange for moving the borrow checking to runtime."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549164435, "post_id": 54499494, "comment_id": 95804201, "body": "<i>with Rust&#39;s stronger guarantees</i> \u2014 yes, these are called <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">The Rules of References</a>."}], "owner": {"reputation": 402, "user_id": 4476886, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ef771ed046477d324a4dc64aa17b1?s=128&d=identicon&r=PG&f=1", "display_name": "SongWithoutWords", "link": "https://stackoverflow.com/users/4476886/songwithoutwords"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "closed_date": 1549163234, "answer_count": 0, "score": 0, "last_activity_date": 1549163291, "creation_date": 1549161529, "last_edit_date": 1549163291, "question_id": 54499494, "link": "https://stackoverflow.com/questions/54499494/is-there-a-way-to-get-a-mutable-reference-to-an-element-of-a-vector-and-an-immut", "closed_reason": "Duplicate", "title": "Is there a way to get a mutable reference to an element of a vector and an immutable reference to the other elements?", "body": "<p>I'm writing some simulation code with a vector of entities. Each entity must be updated with read access to the other entities. There are different types of entities, and each type can have one or more states.</p>\n\n<p>Is there a way in Rust to get both a mutable reference to a single element, and an immutable reference to the vector of other elements? Right now I'm using a combination of a mutable reference to the vector and an index into it.</p>\n"}, {"tags": ["enums", "rust", "memory-layout"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 2, "creation_date": 1549158135, "post_id": 54499156, "comment_id": 95803398, "body": "That&#39;s because rust&#39;s enums are the size of its largest variant. In this case, <code>A</code> is the size of a <code>u8</code>, and therefore there is <i>two</i> bytes required to fit <i>two</i> <code>A</code>s in <code>B</code>, as there is no compile-time micro optimizations like this. Anyway, what if the packed version of this was slower to use than the unpacked version?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549159045, "post_id": 54499156, "comment_id": 95803515, "body": "one word, implemented behavior."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1549159379, "post_id": 54499156, "comment_id": 95803558, "body": "@OptimisticPeach: it&#39;s certainly possible that it would be worse on some platforms/use-cases, but with memory latencies nowadays usually smaller data structures make up any unpacking time through having fewer cache misses. I am going to have fairly large vectors of these objects I&#39;m going to be accessing semi-randomly, so cache misses are a concern for my use case. I&#39;d be fine with something I have to opt into but that still saves me the work of manually doing the packing logic myself."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1549165702, "post_id": 54499156, "comment_id": 95804390, "body": "Rust can do enum layout optimizations in some more limited cases, see <a href=\"https://github.com/rust-lang/rust/pull/45225\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/45225</a> for example"}], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1549214721, "post_id": 54499305, "comment_id": 95814693, "body": "I wonder if it&#39;s possible to have some sort of macro that would make a compact representation of B, that would involve generating multiple possible representations of A and implementing conversions for you to get the best of both worlds..."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 13, "last_activity_date": 1549159215, "creation_date": 1549159215, "answer_id": 54499305, "question_id": 54499156, "link": "https://stackoverflow.com/questions/54499156/why-does-rust-use-two-bytes-to-represent-this-enum-when-only-one-is-necessary/54499305#54499305", "title": "Why does Rust use two bytes to represent this enum when only one is necessary?", "body": "<p>Both bytes are necessary to preserve the ability to borrow struct members.</p>\n\n<p>A type in Rust is not an ideal set of values: it has a data layout, which describe how the values are stored. One of the \"rules\" governing the language is that putting a type inside a <code>struct</code> or <code>enum</code> doesn't change its data layout: it has the same layout inside another type as it does standalone, which allows you to take references to struct members and use them interchangeably with any other reference.*</p>\n\n<p>There's no way to fit two <code>A</code>s into one byte while satisfying this constraint, because the size of <code>A</code> is one whole byte -- you can't address a part of a byte, even with <code>repr(packed)</code>. The unused bits just remain unused (unless they can be repurposed to store the enum tag by niche-filling).</p>\n\n<p><em>*Well, <code>repr(packed)</code> can actually make this untrue. <a href=\"https://github.com/rust-lang/rust/issues/27060\" rel=\"noreferrer\">Taking a reference to a packed field can cause undefined behavior</a>, even in safe code!</em></p>\n"}], "owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 854, "favorite_count": 0, "accepted_answer_id": 54499305, "answer_count": 1, "score": 4, "last_activity_date": 1549159215, "creation_date": 1549157521, "question_id": 54499156, "link": "https://stackoverflow.com/questions/54499156/why-does-rust-use-two-bytes-to-represent-this-enum-when-only-one-is-necessary", "title": "Why does Rust use two bytes to represent this enum when only one is necessary?", "body": "<p>It appears to be smart enough to only use one byte for A, but not smart enough to use one byte for B, even though there are only 8*8=64 possibilities. Is there any way to coax Rust to figure this out or do I have to manually implement a more compact layout?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3961046e2f7574fff93c03a2b3b60c38\" rel=\"nofollow noreferrer\">Playground link.</a></p>\n\n<pre><code>#![allow(dead_code)]\n\nenum A {\n    L,\n    UL,\n    U,\n    UR,\n    R,\n    DR,\n    D,\n    DL,\n}\n\nenum B {\n    C(A, A),\n}\n\nfn main() {\n    println!(\"{:?}\", std::mem::size_of::&lt;A&gt;()); // prints 1\n    println!(\"{:?}\", std::mem::size_of::&lt;B&gt;()); // prints 2\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-piston"], "owner": {"reputation": 494, "user_id": 4517600, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17f6621115e312f096258cba7d765274?s=128&d=identicon&r=PG", "display_name": "Scrumplex", "link": "https://stackoverflow.com/users/4517600/scrumplex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 174, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1549127805, "creation_date": 1549127805, "question_id": 54495485, "link": "https://stackoverflow.com/questions/54495485/making-piston-window-transparent", "title": "Making piston_window transparent", "body": "<p>I am currently trying to use piston_window and just need to know how to make my piston_window transparent. I know that glutin_window supports <code>with_transparency</code> on it's window builder, but I don't know how I could set that.</p>\n\n<p>Relevant code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate piston_window;\n\nuse piston_window::*;\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n\n    let mut window: PistonWindow =\n        WindowSettings::new(\"Transparent test\", [800, 600])\n        .opengl(opengl)\n        .vsync(true)\n        .resizable(false)\n        .decorated(false)\n        .exit_on_esc(true)\n        .build()\n        .unwrap();\n\n    window.set_lazy(true);\n\n    while let Some(e) = window.next() {\n        window.draw_2d(&amp;e, |c, g| {\n            clear(color::TRANSPARENT, g);\n            // ...\n        });\n    }\n}\n</code></pre>\n\n<p>I don't need any support for Windows or macOS. Therefore a way to do it with the glutin_window backend would be good enough for me.</p>\n"}, {"tags": ["enums", "rust", "matching", "interior-mutability"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 4084624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce39526e98709385d65f72b06e9053d7?s=128&d=identicon&r=PG&f=1", "display_name": "Navid Vahdat", "link": "https://stackoverflow.com/users/4084624/navid-vahdat"}, "edited": false, "score": 0, "creation_date": 1549135801, "post_id": 54495215, "comment_id": 95798699, "body": "Thank you so much! This was driving me crazy!  I can even read the contents of the enum if I use ref  <code>rust  fn is_baz_of_5_deref_borrow(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {     match *foo_ref.borrow() {         Foo::Bar(_) =&gt; false,         Foo::Baz(ref baz) =&gt; baz ==&amp;Baz{some_baz:5}     } }   </code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1549126103, "creation_date": 1549126103, "answer_id": 54495215, "question_id": 54495102, "link": "https://stackoverflow.com/questions/54495102/what-is-the-intended-way-to-match-an-interior-mutable-enum/54495215#54495215", "title": "What is the intended way to match an interior mutable enum?", "body": "<p>You can use the <code>Deref</code> impl of <code>Ref</code>:</p>\n\n<pre><code>fn is_baz_get(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match *foo_ref.borrow() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 4084624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce39526e98709385d65f72b06e9053d7?s=128&d=identicon&r=PG&f=1", "display_name": "Navid Vahdat", "link": "https://stackoverflow.com/users/4084624/navid-vahdat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 509, "favorite_count": 0, "accepted_answer_id": 54495215, "answer_count": 1, "score": 1, "last_activity_date": 1582558077, "creation_date": 1549125383, "last_edit_date": 1582558077, "question_id": 54495102, "link": "https://stackoverflow.com/questions/54495102/what-is-the-intended-way-to-match-an-interior-mutable-enum", "title": "What is the intended way to match an interior mutable enum?", "body": "<p>These are the ways I could come up with to try matching a reference counted, interior mutable enum: </p>\n\n<pre><code>#![allow(unused)]\n\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\n#[derive(Debug, Clone, PartialEq)]\nstruct Bar {\n    some_bar: Vec&lt;f64&gt;,\n}\n#[derive(Debug, Clone, PartialEq)]\nstruct Baz {\n    some_baz: i32,\n}\n\n#[derive(Debug, Clone, PartialEq)]\nenum Foo {\n    Bar(Bar),\n    Baz(Baz),\n}\n\nfn is_baz(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_borrow(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref.borrow() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_deref(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match *foo_ref {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_get_mut(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref.get_mut() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_as_ref(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref.as_ref() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_as_ref_borrow(foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref.as_ref().borrow() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn is_baz_get_mut_mut(mut foo_ref: Rc&lt;RefCell&lt;Foo&gt;&gt;) -&gt; bool {\n    match foo_ref.get_mut() {\n        Foo::Bar(_) =&gt; false,\n        Foo::Baz(_) =&gt; true,\n    }\n}\n\nfn main() {\n    let foo = Foo::Bar(Bar {\n        some_bar: vec![1.1, 999.0],\n    });\n    let foo_ref = Rc::new(RefCell::new(foo));\n\n    // none of these work\n    assert!(is_baz(foo_ref.clone()));\n    assert!(is_baz_borrow(foo_ref.clone()));\n    assert!(is_baz_deref(foo_ref.clone()));\n    assert!(is_baz_get_mut(foo_ref.clone()));\n    assert!(is_baz_as_ref(foo_ref.clone()));\n    assert!(is_baz_as_ref_borrow(foo_ref.clone()));\n\n    // this works\n    assert!(is_baz_get_mut_mut(foo_ref.clone()));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a76f1425c0c551f1daa70b408f955222\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>However most ways create an mismatched types error like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:24:9\n   |\n24 |         Foo::Baz(_) =&gt; true\n   |         ^^^^^^^^^^^ expected struct `std::rc::Rc`, found enum `Foo`\n   |\n   = note: expected type `std::rc::Rc&lt;std::cell::RefCell&lt;Foo&gt;&gt;`\n              found type `Foo`\n</code></pre>\n\n<p>or </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:30:9\n   |\n30 |         Foo::Bar(_) =&gt; false,\n   |         ^^^^^^^^^^^ expected struct `std::cell::Ref`, found enum `Foo`\n   |\n   = note: expected type `std::cell::Ref&lt;'_, Foo, &gt;`\n              found type `Foo`\n</code></pre>\n\n<p>The only way that worked is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match foo_ref.get_mut() {\n    Foo::Bar(_) =&gt; false,\n    Foo::Baz(_) =&gt; true\n}\n</code></pre>\n\n<p>Is this the intended way? Even for read only access?</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 1, "creation_date": 1549100252, "post_id": 54491654, "comment_id": 95789367, "body": "Is there a reason <code>F </code> needs be of type<code>FnOnce()</code> ?. If you change it to type <code>Fn()</code> and make <code>helper()</code> accept <code>&amp;F</code>, it will work. <code>F:FnOnce()</code> makes the closure <code>F</code> move by value into the call and hence can be used just once."}], "answers": [{"comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1549114019, "post_id": 54491777, "comment_id": 95792491, "body": "<i>you can call it at least once - but not necessarily more</i> \u2014 Agree, I see  what you meant there :)  <code>F:FnOnce() + Copy</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 1, "creation_date": 1549115360, "post_id": 54491777, "comment_id": 95792797, "body": "@cotigao <code>FnOnce() + Copy</code> does not cover non-move closures that need to mutate their environment. Given that function types in OP&#39;s example do not have a return value, it&#39;s likely that he wants them to have side-effects."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1549216241, "last_edit_date": 1549216241, "creation_date": 1549100255, "answer_id": 54491777, "question_id": 54491654, "link": "https://stackoverflow.com/questions/54491654/how-to-use-a-reference-to-a-fnonce-closure/54491777#54491777", "title": "How to use a reference to a FnOnce closure?", "body": "<p><code>FnOnce</code> is the most most general function constraint. However, that means your code must work for all possible functions, including those that consume their environment. That's why it's called <code>FnOnce</code>: the only thing you know about it is that it can be called it <em>at least</em> once - but not necessarily more. Inside <code>pre_order</code> we can only assume what is true of <em>every possible</em> <code>F</code>: it can be called once.</p>\n\n<p>If you change this to <code>Fn</code> or <code>FnMut</code>, to rule out closures that consume their environments,  you will be able to call it multiple times. <code>FnMut</code> is the next most general function trait, so it is preferred to accept that instead of <code>Fn</code>, to make sure you can accept the most functions:</p>\n\n<pre><code>pub fn pre_order&lt;F&gt;(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, mut f: F)\nwhere\n    F: FnMut(i32),\n{\n    helper(&amp;root, &amp;mut f);\n\n    fn helper&lt;F&gt;(root: &amp;Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, f: &amp;mut F)\n    where\n        F: FnMut(i32),\n    {\n        match root {\n            Some(node) =&gt; {\n                f(node.borrow().val);\n                helper(&amp;node.borrow().left, f);\n                helper(&amp;node.borrow().right, f);\n            }\n            None =&gt; return,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 410, "user_id": 5762090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b0880dd4a323cf3399774137b970d963?s=128&d=identicon&r=PG&f=1", "display_name": "LoneCuriousWolf", "link": "https://stackoverflow.com/users/5762090/lonecuriouswolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 486, "favorite_count": 0, "accepted_answer_id": 54491777, "answer_count": 1, "score": 2, "last_activity_date": 1549216241, "creation_date": 1549099245, "last_edit_date": 1549159696, "question_id": 54491654, "link": "https://stackoverflow.com/questions/54491654/how-to-use-a-reference-to-a-fnonce-closure", "title": "How to use a reference to a FnOnce closure?", "body": "<p>I have a function which needs to pass a closure argument recursively</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\npub struct TreeNode {\n    val: i32,\n    left: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    right: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n}\n\npub fn pre_order&lt;F&gt;(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, f: F)\nwhere\n    F: FnOnce(i32) -&gt; (),\n{\n    helper(&amp;root, f);\n\n    fn helper&lt;F&gt;(root: &amp;Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;, f: F)\n    where\n        F: FnOnce(i32),\n    {\n        match root {\n            Some(node) =&gt; {\n                f(node.borrow().val);\n                helper(&amp;node.borrow().left, f);\n                helper(&amp;node.borrow().right, f);\n            }\n            None =&gt; return,\n        }\n    }\n}\n</code></pre>\n\n<p>This doesn't work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `f`\n  --&gt; src/lib.rs:23:45\n   |\n22 |                 f(node.borrow().val);\n   |                 - value moved here\n23 |                 helper(&amp;node.borrow().left, f);\n   |                                             ^ value used here after move\n   |\n   = note: move occurs because `f` has type `F`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `f`\n  --&gt; src/lib.rs:24:46\n   |\n23 |                 helper(&amp;node.borrow().left, f);\n   |                                             - value moved here\n24 |                 helper(&amp;node.borrow().right, f);\n   |                                              ^ value used here after move\n   |\n   = note: move occurs because `f` has type `F`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>If I try changing type of <code>f</code> from <code>f: F</code> to <code>f: &amp;F</code> I get the compiler error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:22:17\n   |\n22 |                 f(node.borrow().val);\n   |                 ^ cannot move out of borrowed content\n</code></pre>\n\n<p>How can I get around this?</p>\n\n<p>I am calling the function like this: </p>\n\n<pre><code>let mut node = TreeNode::new(15);\nnode.left = Some(Rc::new(RefCell::new(TreeNode::new(9))));\n\nlet node_option = Some(Rc::new(RefCell::new(node)));\npre_order(node_option, |x| {\n    println!(\"{:?}\", x);\n});\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1549096107, "post_id": 54491118, "comment_id": 95788482, "body": "You are trying to access a field <code>name</code> on <code>T</code>, but that doesn&#39;t exist."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549098810, "post_id": 54491118, "comment_id": 95788997, "body": "<code>Repository&lt;T&gt;</code> has to be valid for <i>any</i> possible <code>T</code>, so you cannot assume it has a <code>name</code> property. Constrain <code>T</code> with a trait that has an accessor for <code>name</code> or else use a closure instead of a string for the filter argument."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549099371, "post_id": 54491118, "comment_id": 95789129, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28219730/is-it-possible-to-access-struct-fields-from-within-a-trait\">Is it possible to access struct fields from within a trait?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 495, "user_id": 4253785, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7RjG.jpg?s=128&g=1", "display_name": "Cl&#233;ment Joly", "link": "https://stackoverflow.com/users/4253785/cl%c3%a9ment-joly"}, "is_accepted": true, "score": 1, "last_activity_date": 1549101319, "creation_date": 1549101319, "answer_id": 54491893, "question_id": 54491118, "link": "https://stackoverflow.com/questions/54491118/filter-vector-of-generic-structs/54491893#54491893", "title": "Filter Vector of Generic Structs", "body": "<p>It works if you define a trait <code>Named</code> your <code>Cat</code> will implement. This trait contains the <code>name()</code> method, thus solving your problem.</p>\n\n<p>Here is the main changes to apply:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// \u2026\npub trait Named {\n    fn name(&amp;self) -&gt; &amp;str;\n}\n\nimpl&lt;T&gt; Repository&lt;T&gt; where T: Named {\n// \u2026\n    // this method returns an error\n    pub fn find_by(self, name: &amp;str) -&gt; Vec&lt;T&gt; {\n        self.store.into_iter().filter(|e| e.name() == name).collect()\n    }\n\n// \u2026\n#[cfg(test)]\nmod tests {\n        // \u2026\n        impl Named for Cat {\n            fn name(&amp;self) -&gt; &amp;str {\n                &amp;self.name\n            }\n        }\n</code></pre>\n\n<p>See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=84577244d83df5da27bf570e0de21949\" rel=\"nofollow noreferrer\">the whole code</a> on rust playground.</p>\n"}], "owner": {"reputation": 260, "user_id": 1381004, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/832b80048d98dd1e5a5588bf5ea9e445?s=128&d=identicon&r=PG", "display_name": "Pyx", "link": "https://stackoverflow.com/users/1381004/pyx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 54491893, "answer_count": 1, "score": 0, "last_activity_date": 1549101319, "creation_date": 1549093817, "question_id": 54491118, "link": "https://stackoverflow.com/questions/54491118/filter-vector-of-generic-structs", "title": "Filter Vector of Generic Structs", "body": "<p>I'm trying to get this filter to work, my other tests pass but the <code>find_by</code> function isn't compiling. I'm getting an error <code>no field name on type T</code>. What am I missing here in regards to the filter accessing the fields? I made a version of this code without generics and it works correctly.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>pub struct Repository&lt;T&gt; {\n    store: Vec&lt;T&gt;\n}\n\nimpl&lt;T&gt; Repository&lt;T&gt; {\n    pub fn create() -&gt; Repository&lt;T&gt; {\n        Repository::&lt;T&gt; {\n            store: vec![]\n        }\n    }\n\n    pub fn find_all(self) -&gt; Vec&lt;T&gt; {\n        self.store\n    }\n\n    pub fn add(&amp;mut self, item: T) {\n        &amp;mut self.store.push(item);\n    }\n\n    // this method returns an error\n    pub fn find_by(self, name: &amp;str) -&gt; Vec&lt;T&gt; {\n        self.store.into_iter().filter(|&amp;e| e.name == name).collect()\n    }\n\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    // ...\n\n    #[test]\n    fn can_find_objects_in_repository_by_param() {\n        #[derive(Debug, PartialEq)]\n        pub struct Cat { pub name: String };\n        impl Cat {\n            pub fn create(name: &amp;str) -&gt; Cat { Cat { name: name.to_string() } }\n        }\n\n        let mut repo = Repository::&lt;Cat&gt;::create();\n\n        let c1 = Cat::create(\"Mittens\");\n        let c2 = Cat::create(\"Tiger\");\n\n        repo.add(c1);\n        repo.add(c2);\n\n        assert_eq!(repo.find_by(\"Tiger\"), vec![Cat { name: \"Tiger\".to_string() }]);\n    }\n}\n</code></pre>\n\n<p>If I remove the filter the code compiles and the test fails with the following error as expected:</p>\n\n<pre><code>left: `[Cat { name: \"Mittens\" }, Cat { name: \"Tiger\" }]`,\nright: `[Cat { name: \"Tiger\" }]`'\n</code></pre>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549096355, "post_id": 54490896, "comment_id": 95788531, "body": "Your code creates a <code>HashSet</code> with zero capacity, and then has to reallocate every time the actual size doubles. The iterator version can use the size hint from the vector iterator to allocate the correct size to the <code>HashSet</code>. You can make your code do the same by using <code>HashSet::with_capacity(candies.len())</code> instead of <code>HashSet::new()</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1549118146, "post_id": 54490896, "comment_id": 95793491, "body": "Have you considered sorting first? It&#39;s O(N log N), but would avoid memory allocation altogether and possibly be more cache friendly, which may give better performance. Once sorted, a simple linear pass over the data will easily let you know how many kinds there are."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1549127885, "post_id": 54490896, "comment_id": 95796356, "body": "@MatthieuM. This might be faster, but I don&#39;t know how to benchmark it. It mutates the original data, so that needs to be copied for each iteration of the bencher."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549128219, "post_id": 54490896, "comment_id": 95796453, "body": "@E4_net_or_something_like_that: The current signature takes the <code>Vec</code> by copy anyway..."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549128422, "post_id": 54490896, "comment_id": 95796527, "body": "Right. But to test them properly, the data generation shouldn&#39;t be included in the benchmark. Would be nice if there was a before/after hook on the bench runner."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1549129284, "post_id": 54490896, "comment_id": 95796782, "body": "@MatthieuM. I made <a href=\"https://gist.github.com/peterjoel/00ea232e48f50b7ff76736ae759ed65b\" rel=\"nofollow noreferrer\">a benchmark that clones each iteration</a>. Sorting the vector is actually slower."}], "answers": [{"comments": [{"owner": {"reputation": 465, "user_id": 876147, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/4QjCN.jpg?s=128&g=1", "display_name": "bayinamy", "link": "https://stackoverflow.com/users/876147/bayinamy"}, "edited": false, "score": 0, "creation_date": 1549104691, "post_id": 54492088, "comment_id": 95790367, "body": "Thanks! I just updated my solution with <code>HashSet::with_capacity</code>, and it now cost 32ms against 48ms!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 465, "user_id": 876147, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/4QjCN.jpg?s=128&g=1", "display_name": "bayinamy", "link": "https://stackoverflow.com/users/876147/bayinamy"}, "edited": false, "score": 1, "creation_date": 1549105329, "post_id": 54492088, "comment_id": 95790519, "body": "@bayinamy Are you compiling with <code>--release</code>. Those times in milliseconds sound very slow."}, {"owner": {"reputation": 465, "user_id": 876147, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/4QjCN.jpg?s=128&g=1", "display_name": "bayinamy", "link": "https://stackoverflow.com/users/876147/bayinamy"}, "edited": false, "score": 0, "creation_date": 1549508231, "post_id": 54492088, "comment_id": 95929811, "body": "Sorry, 32ms comes from Leetcode online judge, don&#39;t know how it compiles."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1549127274, "last_edit_date": 1549127274, "creation_date": 1549102896, "answer_id": 54492088, "question_id": 54490896, "link": "https://stackoverflow.com/questions/54490896/why-is-my-for-loop-code-slower-than-an-iterator/54492088#54492088", "title": "Why is my for loop code slower than an iterator?", "body": "<p>The main difference is that the iterator version <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#3100-3113\" rel=\"nofollow noreferrer\">internally uses</a> <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.size_hint\" rel=\"nofollow noreferrer\"><code>Iterator::size_hint</code></a> to determine how much space to reserve in the <code>HashSet</code> before collecting into it. This prevents repeatedly having to reallocate as the set grows.</p>\n\n<p>You can do the same using <code>HashSet::with_capacity</code> instead of <code>HashSet::new</code>:</p>\n\n<pre><code>let mut candies_kinds = HashSet::with_capacity(candies.len());\n</code></pre>\n\n<p>In my benchmark this single change makes your code significantly faster than the iterator. However, if I simplify your code to remove the early bailout optimisation, it runs in almost exactly the same time as the iterator version.</p>\n\n<pre><code>pub fn distribute_candies(candies: &amp;[i32]) -&gt; i32 {\n    let sister_candies = (candies.len() / 2) as i32;\n    let mut candies_kinds = HashSet::with_capacity(candies.len());\n    for candy in candies.into_iter() {\n        candies_kinds.insert(candy);\n    }\n    sister_candies.min(candies_kinds.len() as i32)\n}\n</code></pre>\n\n<p>Timings:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test tests::bench_iter                          ... bench:     262,315 ns/iter (+/- 23,704)\ntest tests::bench_loop                          ... bench:     307,697 ns/iter (+/- 16,119)\ntest tests::bench_loop_with_capacity            ... bench:     112,194 ns/iter (+/- 18,295)\ntest tests::bench_loop_with_capacity_no_bailout ... bench:     259,961 ns/iter (+/- 17,712)\n</code></pre>\n\n<p>This suggests to me that the <code>HashSet</code> preallocation is the dominant difference. Your additional optimisation also proves to be very effective - at least with the dataset that I happened to choose.</p>\n"}], "owner": {"reputation": 465, "user_id": 876147, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/4QjCN.jpg?s=128&g=1", "display_name": "bayinamy", "link": "https://stackoverflow.com/users/876147/bayinamy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 54492088, "answer_count": 1, "score": 4, "last_activity_date": 1549127274, "creation_date": 1549091589, "last_edit_date": 1549127262, "question_id": 54490896, "link": "https://stackoverflow.com/questions/54490896/why-is-my-for-loop-code-slower-than-an-iterator", "title": "Why is my for loop code slower than an iterator?", "body": "<p>I am trying to solve the leetcode problem <a href=\"https://leetcode.com/problems/distribute-candies\" rel=\"nofollow noreferrer\">distribute-candies</a>. It is easy, just find out the minimum between the candies' kinds and candies half number.</p>\n\n<p>Here's my solution (cost 48ms):</p>\n\n<pre><code>use std::collections::HashSet;\n\npub fn distribute_candies(candies: Vec&lt;i32&gt;) -&gt; i32 {\n    let sister_candies = (candies.len() / 2) as i32;\n    let mut kind = 0;\n    let mut candies_kinds = HashSet::new();\n    for candy in candies.into_iter() {\n        if candies_kinds.insert(candy) {\n            kind += 1;\n            if kind &gt; sister_candies {\n                return sister_candies;\n            }\n        }\n    }\n    kind\n}\n</code></pre>\n\n<p>However, I found a solution using an iterator:</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::cmp::min;\n\npub fn distribute_candies(candies: Vec&lt;i32&gt;) -&gt; i32 {\n    min(candies.iter().collect::&lt;HashSet&lt;_&gt;&gt;().len(), candies.len() / 2) as i32\n}\n</code></pre>\n\n<p>and it costs 36ms.</p>\n\n<p>I can't quite understand why the iterator solution is faster than my <code>for</code> loop solution. Are there some magic optimizations that Rust is performing in the background?</p>\n"}, {"tags": ["error-handling", "rust", "mutex", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "edited": false, "score": 0, "creation_date": 1549125984, "post_id": 54491273, "comment_id": 95795721, "body": "That&#39;s awesome, thank you very much! Would there be a way though to get an actual error instance? The clone method does not appear to be supported on <code>PoisonError</code>, for example. I&#39;m not saying String is bad, I&#39;m just curious whether there&#39;s something more idiomatic,"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 2, "last_activity_date": 1549098195, "last_edit_date": 1549098195, "creation_date": 1549095615, "answer_id": 54491273, "question_id": 54490677, "link": "https://stackoverflow.com/questions/54490677/rust-arc-mutex-try-macro-borrowed-content/54491273#54491273", "title": "Rust Arc/Mutex Try Macro Borrowed Content", "body": "<p><code>lock()</code> function returns <code>LockResult&lt;MutexGuard&lt;T&gt;&gt;</code>. <a href=\"https://doc.rust-lang.org/stable/std/sync/type.LockResult.html\" rel=\"nofollow noreferrer\">Documentation</a> says the following: </p>\n\n<blockquote>\n  <p>Note that the Err variant also carries the associated guard, and it can be acquired through the into_inner method  </p>\n</blockquote>\n\n<p>so you're essentially trying to return a reference to a local variable (wrapped into <code>PoisonError</code> struct), which is obviously incorrect. </p>\n\n<p>How to fix it? You can convert this error to something with no such references, for example to <code>String</code>:  </p>\n\n<pre><code>let guarded_big_number_option = mutex_guard_result.map_err(|e| e.to_string())?;\n</code></pre>\n"}], "owner": {"reputation": 23300, "user_id": 299711, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f61d00f60af2317ddd079565680d0bc5?s=128&d=identicon&r=PG", "display_name": "arik", "link": "https://stackoverflow.com/users/299711/arik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 54491273, "answer_count": 1, "score": 1, "last_activity_date": 1603219631, "creation_date": 1549089654, "last_edit_date": 1603219631, "question_id": 54490677, "link": "https://stackoverflow.com/questions/54490677/rust-arc-mutex-try-macro-borrowed-content", "title": "Rust Arc/Mutex Try Macro Borrowed Content", "body": "<p>I'm trying to do several operations with a variable that is shared across threads, encapsulated in an <code>Arc&lt;Mutex&gt;</code>. As not all of the operations may be successful, I'm trying to use the <code>try!</code> macro, or the <code>?</code> operator, to auto-propagate the errors.</p>\n\n<p>Here's a minimum viable example of my code:</p>\n\n<pre><code>lazy_static! {\n    static ref BIG_NUMBER: Arc&lt;Mutex&lt;Option&lt;u32&gt;&gt;&gt; = Arc::new(Mutex::new(Some(174)));\n}\n\npub fn unpack_big_number() -&gt; Result&lt;u32, Box&lt;Error&gt;&gt; {\n    let big_number_arc = Arc::clone(&amp;BIG_NUMBER);\n    let mutex_guard_result = big_number_arc.lock();\n    let guarded_big_number_option = mutex_guard_result?;\n    let dereferenced_big_number_option = *guarded_big_number_option;\n    let big_number = dereferenced_big_number_option.unwrap();\n\n    // do some subsequent operations\n    let result = big_number + 5;\n\n    // happy path\n    Ok(result)\n}\n</code></pre>\n\n<p>You will notice that in the line where I declare <code>guarded_big_number_option</code>, I have a <code>?</code> at the end. This line is throwing the following compiler error (which it does not when I replace the <code>?</code> with <code>.unwrap()</code>:</p>\n\n<pre><code>error[E0597]: `big_number_arc` does not live long enough\n  --&gt; src/main.rs:32:30\n   |\n 7 |     let mutex_guard_result = big_number_arc.lock();\n   |                              ^^^^^^^^^^^^^^ borrowed value does not live long enough\n...\n17 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>Now the thing is, it is my understanding that I'm not trying to use <code>big_number_arc</code> beyond its lifetime. I'm trying to extract a potential <code>PoisonError</code> contained within the result. How can I properly extract that error and make this propagation work?</p>\n\n<p>Additionally, if it's any help, here's a screenshot of the type annotations that my IDE, CLion, automatically adds to each line:</p>\n\n<p><a href=\"https://i.stack.imgur.com/B2PbE.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/B2PbE.png\" alt=\"CLion screenshot of code snippet\"></a></p>\n"}, {"tags": ["sorting", "rust", "binary-heap"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549074429, "post_id": 54489368, "comment_id": 95785275, "body": "<i>this is not the intended API</i> \u2014 what do you mean by this, exactly?"}, {"owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549075425, "post_id": 54489368, "comment_id": 95785409, "body": "I mean that the document ion says that the greatest item will come out next, so when I implement this reversal it&#39;ll be unexpected behavior to new readers (of the code)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549106642, "post_id": 54489368, "comment_id": 95790835, "body": "<a href=\"https://github.com/sekineh/binary-heap-plus-rs\" rel=\"nofollow noreferrer\">github.com/sekineh/binary-heap-plus-rs</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1576924976, "last_edit_date": 1576924976, "creation_date": 1549074316, "answer_id": 54489427, "question_id": 54489368, "link": "https://stackoverflow.com/questions/54489368/how-do-i-create-a-binaryheap-that-pops-the-smallest-value-not-the-largest/54489427#54489427", "title": "How do I create a BinaryHeap that pops the smallest value, not the largest?", "body": "<p>Reversing the order of a type inside the heap is fine. However, you don't need to implement your own order reversal. Instead, use <a href=\"https://doc.rust-lang.org/std/cmp/struct.Reverse.html\" rel=\"nofollow noreferrer\"><code>std::cmp::Reverse</code></a> or <a href=\"https://doc.rust-lang.org/std/cmp/enum.Ordering.html#method.reverse\" rel=\"nofollow noreferrer\"><code>Ordering::reverse</code></a> as appropriate.</p>\n\n<p>If it makes sense for your type to actually be less than another value when some field is greater, implement your own <code>Ord</code>:</p>\n\n<pre><code>impl Ord for Item {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.offset.cmp(&amp;other.offset).reverse()\n    }\n}\n</code></pre>\n\n<p>If you do not wish to change the ordering of your type, flip the ordering when you put it in the <code>BinaryHeap</code>:</p>\n\n<pre><code>use std::{cmp::Reverse, collections::BinaryHeap};\n\nfn main() {\n    let mut a: BinaryHeap&lt;_&gt; = vec![1, 2, 3].into_iter().collect();\n    if let Some(v) = a.pop() {\n        println!(\"Next is {}\", v);\n    }\n\n    let mut b: BinaryHeap&lt;_&gt; = vec![1, 2, 3].into_iter().map(Reverse).collect();\n    if let Some(Reverse(v)) = b.pop() {\n        println!(\"Next is {}\", v);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Next is 3\nNext is 1\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39949939/155423\">How can I implement a min-heap of f64 with Rust&#39;s BinaryHeap?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28778547/155423\">How do I select different std::cmp::Ord (or other trait) implementations for a given type?</a></li>\n</ul>\n\n<blockquote>\n  <p>Is [a <code>LinkedList</code>] the better solution?</p>\n</blockquote>\n\n<p>99.9% of the time, a linked list is <strong>not</strong> a better solution.</p>\n"}], "owner": {"reputation": 6434, "user_id": 4443226, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/C3vUB.png?s=128&g=1", "display_name": "Nevermore", "link": "https://stackoverflow.com/users/4443226/nevermore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 930, "favorite_count": 0, "accepted_answer_id": 54489427, "answer_count": 1, "score": 9, "last_activity_date": 1576924976, "creation_date": 1549073411, "last_edit_date": 1549073943, "question_id": 54489368, "link": "https://stackoverflow.com/questions/54489368/how-do-i-create-a-binaryheap-that-pops-the-smallest-value-not-the-largest", "title": "How do I create a BinaryHeap that pops the smallest value, not the largest?", "body": "<p>I can use the <code>std::collections::BinaryHeap</code> to iterate over a collection of a struct in the <em>greatest</em> to <em>least</em> order with <code>pop</code>, but my goal is to iterate over the collection from least to greatest.</p>\n\n<p>I have succeeded by reversing the <code>Ord</code> implementation:</p>\n\n<pre><code>impl Ord for Item {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        match self.offset {\n            b if b &gt; other.offset =&gt; Ordering::Less,\n            b if b &lt; other.offset =&gt; Ordering::Greater,\n            b if b == other.offset =&gt; Ordering::Equal,\n            _ =&gt; Ordering::Equal, // ?not sure why compiler needs this\n        }\n    }\n}\n</code></pre>\n\n<p>Now the <code>BinaryHeap</code> returns the <code>Item</code>s in least to greatest. Seeing as how this is not the intended API, is this an incorrect or error prone pattern? </p>\n\n<p>I realize that a <code>LinkedList</code> would give me the <code>pop_front</code> method, but I would need to sort the list on insert. Is that the better solution?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 5, "last_activity_date": 1549066402, "creation_date": 1549066402, "answer_id": 54488736, "question_id": 54488669, "link": "https://stackoverflow.com/questions/54488669/no-method-named-to-str-found-for-type-optionstdffiosstr/54488736#54488736", "title": "No method named to_str found for type Option&lt;&amp;std::ffi::OsStr&gt;?", "body": "<p>A couple of issues.</p>\n\n<p>The first one is that the result of <code>extension()</code> is an <code>Option&lt;T&gt;</code>. Specifically, its a <code>Option&lt;&amp;std::ffi::OsStr&gt;</code>. So you must unwrap it:</p>\n\n<p>That isn't the only issue though, because calling <code>to_str()</code> on an <code>&amp;OsStr</code> will return a <code>Option&lt;&amp;str&gt;</code>, which itself is also not a <code>String</code>.</p>\n\n<p>Leaving out all of the potential ignored issues with the conversions between string types ... this is a minimal recreation of the part that is causing you issues:</p>\n\n<pre><code>use std::path::Path;\nuse std::ffi::OsStr;\n\nfn main() {\n    let os_str = OsStr::new(\"example.txt\");\n    let path = Path::new(os_str);\n    let extensioner = path.extension();\n    let my_new_string: String = extensioner.unwrap().to_str().unwrap().into();\n\n    println!(\"Extension: {}\", my_new_string);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dfe613ec145b9d4ca707568187e5dc3a\" rel=\"noreferrer\">Here it is running on the playground</a></p>\n\n<p>Basically, we:</p>\n\n<ul>\n<li><code>unwrap</code> the <code>Option&lt;&amp;OsStr&gt;</code> into an <code>&amp;OsStr</code>.</li>\n<li>Call <code>to_str()</code> on the <code>&amp;OsStr</code></li>\n<li><code>unwrap</code> the resulting <code>Option&lt;&amp;str&gt;</code> into an <code>&amp;str</code></li>\n<li>Call <code>into()</code>, which will convert it into a <code>String</code> (this invokes the <code>From</code> trait implementation of <code>String</code>)</li>\n</ul>\n"}], "owner": {"reputation": 9199, "user_id": 1215344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nuA7S.jpg?s=128&g=1", "display_name": "jamescampbell", "link": "https://stackoverflow.com/users/1215344/jamescampbell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1498, "favorite_count": 0, "accepted_answer_id": 54488736, "answer_count": 1, "score": 1, "last_activity_date": 1593121547, "creation_date": 1549065715, "last_edit_date": 1593121547, "question_id": 54488669, "link": "https://stackoverflow.com/questions/54488669/no-method-named-to-str-found-for-type-optionstdffiosstr", "title": "No method named to_str found for type Option&lt;&amp;std::ffi::OsStr&gt;?", "body": "<p>Here is my current attempt at iterating through a directory and adding filetype extensions to a map and counting how many files have that extension type. </p>\n\n<p>The call to <code>to_str()</code> fails because </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>no method named `to_str` found for type `std::option::Option&lt;&amp;std::ffi::OsStr&gt;` in the current scope [E0599]\n</code></pre>\n\n<p>I tried converting to a string elsewhere, I tried not even evaluating the <code>Option</code> and trying to just insert it as-is into the map, but that didn't work either.</p>\n\n<pre><code>extern crate walkdir;\n\nuse std::ffi::OsStr;\nuse std::path::Path;\nuse walkdir::WalkDir;\n\nextern crate serde_json;\nuse serde_json::{Map, Number, Value};\n\nfn main() {\n    let mut map = Map::new();\n    let walker = WalkDir::new(\"/Users/jamescampbell/\").into_iter();\n    for entry in walker {\n        let entry = entry.unwrap();\n        let os_str = OsStr::new(entry.file_name());\n        let path = Path::new(os_str);\n        let extensioner = path.extension();\n        let my_new_string: String = match extensioner.to_str() {\n            None =&gt; String::from(\"crap, os_str failed\"),\n            Some(s) =&gt; s,\n        };\n        println!(\"should be foo: {}\", my_new_string);\n        if !map[s] {\n            map.insert(s.to_string(), Value::Number(Number::from(1u64)));\n        } else {\n            map[s] += 1;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": true, "score": 2, "last_activity_date": 1549069853, "creation_date": 1549069853, "answer_id": 54489071, "question_id": 54488320, "link": "https://stackoverflow.com/questions/54488320/how-to-implement-display-on-a-trait-object-where-the-types-already-implement-dis/54489071#54489071", "title": "How to implement Display on a trait object where the types already implement Display", "body": "<p>You can make <code>Display</code> a supertrait of <code>MyTrait</code>.</p>\n\n<pre><code>trait MyTrait: fmt::Display {\n    fn is_even(&amp;self) -&gt; bool;\n}\n</code></pre>\n\n<p>This will make trait objects of <code>MyTrait</code> be <code>Display</code>. This only works if you expect all implementors of <code>MyTrait</code> to implement <code>Display</code>, but that was also the case in your previous solution.</p>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1086, "favorite_count": 0, "accepted_answer_id": 54489071, "answer_count": 1, "score": 0, "last_activity_date": 1549079697, "creation_date": 1549062699, "last_edit_date": 1549079697, "question_id": 54488320, "link": "https://stackoverflow.com/questions/54488320/how-to-implement-display-on-a-trait-object-where-the-types-already-implement-dis", "title": "How to implement Display on a trait object where the types already implement Display", "body": "<p>I have some code which returns a trait object of type <code>MyTrait</code> so that it can return one of several different structs. I would like to implement the <code>Display</code> trait for the trait object so that I can print the object, with the details delegated to the various structs as they each need their own custom formatters.</p>\n\n<p>I can achieve this by including a formatting method as part of the <code>MyTrait</code> definition, and then implementing <code>Display</code> for <code>MyTrait</code> and delegating - like this:</p>\n\n<pre><code>trait MyTrait {\n    fn is_even(&amp;self) -&gt; bool;\n    fn my_fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result;\n}\n\nimpl fmt::Display for MyTrait {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        self.my_fmt(f)\n    }\n}\n</code></pre>\n\n<p>However, I already have the <code>Display</code> trait implemented for each of the structs which implement <code>MyTrait</code>. This means I end up with two methods for each struct which do the same thing - the <code>fmt()</code> method to satisfy the <code>Display</code> trait directly on the struct, and the <code>my_fmt()</code> method which is called by the code above. This seems clumsy and repetitions. Is there a simpler way to do it?</p>\n\n<p>Here's a complete example program which illustrates the point. It's a little longer than I would have liked (it's based on the answer to my previous question <a href=\"https://stackoverflow.com/questions/54470036/calling-functions-which-return-different-types-with-shared-trait-and-pass-to-oth/54470897\">Calling functions which return different types with shared trait and pass to other functions</a> but I couldn't think of a simpler way to illustrate the point. Of course, in this toy example the structs and the <code>fmt</code> functions are very simple, but in my real application they are more complex.</p>\n\n<pre><code>use std::fmt;\n\ntrait MyTrait {\n    fn is_even(&amp;self) -&gt; bool;\n    fn my_fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result;\n}\n\nstruct First {\n    v: u8,\n}\n\nstruct Second {\n    v: Vec&lt;u8&gt;,\n}\n\nimpl MyTrait for First {\n    fn is_even(&amp;self) -&gt; bool {\n        self.v % 2 == 0\n    }\n\n    fn my_fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.v)\n    }\n}\n\nimpl MyTrait for Second {\n    fn is_even(&amp;self) -&gt; bool {\n        self.v[0] % 2 == 0\n    }\n\n    fn my_fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.v[0])\n    }\n}\n\nfn make1() -&gt; First {\n    First { v: 5 }\n}\n\nfn make2() -&gt; Second {\n    Second { v: vec![2, 3, 5] }\n}\n\n// Implement Display for the structs and for MyTrait\nimpl fmt::Display for First {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.v)\n    }\n}\n\nimpl fmt::Display for Second {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.v[0])\n    }\n}\n\nimpl fmt::Display for MyTrait {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        self.my_fmt(f)\n    }\n}\n\nfn requires_mytrait&lt;T: MyTrait + ?Sized&gt;(v: &amp;&amp;T) {\n    println!(\"{:?}\", v.is_even());\n}\n\nfn main() {\n    for i in 0..2 {\n        let v1;\n        let v2;\n        let v = match i {\n            0 =&gt; {\n                v1 = make1();\n                println!(\"&gt; {}\", v1); // Demonstrate that Display\n                                      // is implemented directly\n                                      // on the type.\n                &amp;v1 as &amp;MyTrait\n            }\n            _ =&gt; {\n                v2 = make2();\n                println!(\"&gt; {}\", v2); // Demonstrate that Display\n                                      // is implemented directly\n                                      // on the type.\n                &amp;v2 as &amp;MyTrait\n            }\n        };\n        requires_mytrait(&amp;v);\n        println!(\"{}\", v); // Here I print the trait object\n    }\n}\n</code></pre>\n\n<p>Can anyone suggest a simpler, cleaner way to do this?</p>\n"}, {"tags": ["loops", "rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 3, "last_activity_date": 1549065020, "creation_date": 1549065020, "answer_id": 54488598, "question_id": 54488127, "link": "https://stackoverflow.com/questions/54488127/getting-temporary-value-dropped-while-borrowed-when-trying-to-update-an-option/54488598#54488598", "title": "Getting &quot;temporary value dropped while borrowed&quot; when trying to update an Option&lt;&amp;str&gt; in a loop", "body": "<p><code>r.str.to_owned()</code> is a temporary value. <a href=\"https://stackoverflow.com/questions/47662253/why-is-it-legal-to-borrow-a-temporary\">You can take a reference to a temporary</a>, but because the temporary value will usually be dropped (destroyed) at the end of the innermost enclosing statement, the reference becomes dangling at that point. In this case the \"innermost enclosing statement\" is either the last line of the loop, or the loop body itself -- I'm not sure exactly which one applies here, but it doesn't matter, because either way, you're trying to make <code>last</code> contain a reference to a <code>String</code> that will soon be dropped, making <code>last</code> unusable. The compiler is right to stop you from using it again in the next iteration of the loop.</p>\n\n<p>The easiest fix is just to not make <code>last</code> a reference at all -- in the example, it's not necessary or desirable. Just use <code>Option&lt;String&gt;</code>:</p>\n\n<pre><code>fn main() {\n    let times = 10;\n    let mut last = None;\n\n    for _ in 0..times {\n        last = match do_something(last) {\n            Some(r) =&gt; Some(r.str),\n            None =&gt; None,\n        };\n    }\n}\n\nfn do_something(_: Option&lt;String&gt;) -&gt; Option&lt;Result&gt; {\n    // ...\n}\n</code></pre>\n\n<p>There are also ways to make the reference version work; here is one:</p>\n\n<pre><code>let mut current;  // lift this declaration out of the loop so `current` will have\n                  // a lifetime longer than one iteration\nfor _ in 0..times {\n    current = do_something(last);\n    last = match current {\n        Some(ref r) =&gt; Some(&amp;r.str),  // borrow from `current` in the loop instead\n                                      // of from a newly created String\n        None =&gt; None,\n    };\n}\n</code></pre>\n\n<p>You might want to do this if your code is more complicated than the example and using <code>String</code> would mean a lot of potentially expensive <code>.clone()</code>s.</p>\n"}, {"comments": [{"owner": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "edited": false, "score": 0, "creation_date": 1549065987, "post_id": 54488650, "comment_id": 95783893, "body": "Thanks for the answer. I have some more follow up questions.  From what I understand, one should mostly use <code>&amp;str</code> and not <code>String</code> in function arguments. When using some form of <code>Option&lt;String&gt;</code>, is the best way to mostly just pass around <code>&amp;Option&lt;String&gt;</code>? Nothing gets copied then, right?  And in your answer, wouldn&#39;t it be better to just have <code>last: Option&lt;MyRes&gt;</code>? Does it have any downsides, except memory usage I guess?  And yeah, <code>Result</code> was obviously a toy example, though indeed perhaps a bad one."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "edited": false, "score": 1, "creation_date": 1549067216, "post_id": 54488650, "comment_id": 95784125, "body": "@ralh As far as I understand - no, nothing gets copied. Essentially, only a single pointer is passed to <code>do_something</code>, and it is also guaranteed that <code>do_something</code> won&#39;t modify the content of <code>_o</code> in any way. If you have to, you can convert <code>Option&lt;String&gt;</code> into <code>Option&lt;&amp;str&gt;</code> by <code>as_ref()</code> followed by a <code>map</code> with coercion, as <a href=\"https://stackoverflow.com/questions/31233938/converting-from-optionstring-to-optionstr\">explained here</a>. I would actually propose to use neither <code>&amp;str</code> nor <code>String</code>. I added a comparison of the various methods."}, {"owner": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "edited": false, "score": 0, "creation_date": 1549098331, "post_id": 54488650, "comment_id": 95788910, "body": "Thanks again for the very detailed answer! I knew there was probably some Rust type magic to be done here. I wonder - does the <code>AsRef</code> method add any overhead (since you&#39;re calling <code>as_ref</code>, <code>map</code>...), or is Rust smart enough to compile such overhead away?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "edited": false, "score": 2, "creation_date": 1549100860, "post_id": 54488650, "comment_id": 95789513, "body": "@ralh as far as I understand it, rustc has no other choice but to optimize it all away: <code>Option</code> is doing something called <a href=\"https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust\">&quot;null pointer optimization&quot;</a>, so that all <code>Option</code>-related stuff is eliminated here. The type <code>S</code> is inferred statically at compile time, no dynamic dispatch takes place anywhere, so there is no object on which one could actually call <code>map</code> at runtime. So, all of the above seems to be a purely compile-time game with the typechecker, it leaves no traces after the compilation."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1549126944, "post_id": 54488650, "comment_id": 95796046, "body": "<code>Option&lt;&amp;str&gt;</code> and <code>Option&lt;String&gt;</code> can take advantage of null pointer optimization, but you&#39;re still incurring a double indirection cost when you use <code>&amp;Option&lt;...&gt;</code>. And it&#39;s more difficult to call a function taking <code>&amp;Option&lt;T&gt;</code> when you have a <code>T</code> in hand, because you may have to move the <code>T</code> first. For those reasons I would write <code>do_something3</code> to take <code>Option&lt;&amp;S&gt;</code> instead of <code>&amp;Option&lt;S&gt;</code>. You can then call <code>do_something(x.as_ref())</code> (if you don&#39;t want to consume a <code>String</code>) or <code>do_something(y)</code> (since <code>&amp;</code> references are <code>Copy</code>, you don&#39;t need a non-consuming version)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "edited": false, "score": 0, "creation_date": 1549127627, "post_id": 54488650, "comment_id": 95796278, "body": "@ralh A corollary to the above comment is that it actually depends on what you&#39;re doing with the value inside <code>do_something</code>; if you are going to use a <code>String</code>, you should accept a <code>String</code> (or <code>S: Into&lt;String&gt;</code>) and let the caller decide whether to clone or not -- that&#39;s more flexible for the caller than accepting a reference which you then unconditionally copy. That&#39;s why I suggested <code>Option&lt;String&gt;</code> in my answer. There are cases where you may want either one."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549136788, "post_id": 54488650, "comment_id": 95798990, "body": "@trentcl On <i>&quot;it actually depends on what you&#39;re doing with the value inside do_something&quot;</i> - would it maybe make sense to ask a separate question with a list of all the different variants, and then explain step by step what is useful in which situations, and then convert the follow-up answer and the discussion in the comments into one big separate answer?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1549144537, "post_id": 54488650, "comment_id": 95800911, "body": "Sure, that sounds like a good idea. I was looking for a question like that to link to but couldn&#39;t find one."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 8, "last_activity_date": 1549069221, "last_edit_date": 1549069221, "creation_date": 1549065558, "answer_id": 54488650, "question_id": 54488127, "link": "https://stackoverflow.com/questions/54488127/getting-temporary-value-dropped-while-borrowed-when-trying-to-update-an-option/54488650#54488650", "title": "Getting &quot;temporary value dropped while borrowed&quot; when trying to update an Option&lt;&amp;str&gt; in a loop", "body": "<p>In your code, it remains unclear who the owner of the <code>String</code> referenced in <code>last: Option&lt;&amp;str&gt;</code> is supposed to be. You could introduce an extra mutable local variable that owns the string. But then you would have two variables: the owner and the reference, which seems redundant. It would be much simpler to just make <code>last</code> the owner:</p>\n\n<pre><code>struct MyRes {\n    str: String,\n}\n\nfn main() {\n    let times = 10;\n    let mut last: Option&lt;String&gt; = None;\n\n    for _i in 0..times {\n        last = do_something(&amp;last).map(|r| r.str);\n    }\n}\n\nfn do_something(_o: &amp;Option&lt;String&gt;) -&gt; Option&lt;MyRes&gt; {\n    Some(MyRes {\n        str: \"whatever string\".to_string(),\n    })\n}\n</code></pre>\n\n<p>In <code>do_something</code>, you can just pass the whole argument by reference, this seems more likely to be what you wanted. Also note that naming your own struct <code>Result</code> is a bad idea, because <code>Result</code> is such a pervasive trait built deeply into the compiler (<code>?</code>-operator etc).</p>\n\n<hr>\n\n<p><strong>Follow-up question: <code>Option&lt;&amp;str&gt;</code> or <code>Option&lt;String&gt;</code>?</strong></p>\n\n<p>Both <code>Option&lt;&amp;str&gt;</code> and <code>Option&lt;String&gt;</code> have different trade-offs. One is better for passing string literals, other is better for passing owned <code>String</code>s. I'd actually propose to use neither, and instead make the function generic over type <code>S</code> that implements <code>AsRef&lt;str&gt;</code>. Here is a comparison of various methods:</p>\n\n<pre><code>fn do_something(o: &amp;Option&lt;String&gt;) {\n    let _a: Option&lt;&amp;str&gt; = o.as_ref().map(|r| &amp;**r);\n    let _b: Option&lt;String&gt; = o.clone();\n}\nfn do_something2(o: &amp;Option&lt;&amp;str&gt;) {\n    let _a: Option&lt;&amp;str&gt; = o.clone(); // do you need it?\n    let _b: Option&lt;String&gt; = o.map(|r| r.to_string());\n}\nfn do_something3&lt;S: AsRef&lt;str&gt;&gt;(o: &amp;Option&lt;S&gt;) {\n    let _a: Option&lt;&amp;str&gt; = o.as_ref().map(|s| s.as_ref());\n    let _b: Option&lt;String&gt; = o.as_ref().map(|r| r.as_ref().to_string());\n}\n\nfn main() {\n    let x: Option&lt;String&gt; = None;\n    let y: Option&lt;&amp;str&gt; = None;\n\n    do_something(&amp;x);                           // nice\n    do_something(&amp;y.map(|r| r.to_string()));    // awkward &amp; expensive\n\n    do_something2(&amp;x.as_ref().map(|x| &amp;**x));   // cheap but awkward\n    do_something2(&amp;y);                          // nice\n\n    do_something3(&amp;x);                          // nice\n    do_something3(&amp;y);                          // nice, in both cases\n}\n</code></pre>\n\n<p>Note that not all of the above combinations are very idiomatic, some are added just for completeness (e.g. asking for <code>AsRef&lt;str&gt;</code> and then building an owned <code>String</code> out of seems a bit strange).</p>\n"}], "owner": {"reputation": 2274, "user_id": 5169236, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549deb942a43c8ea746f15dc629dde4?s=128&d=identicon&r=PG&f=1", "display_name": "ralh", "link": "https://stackoverflow.com/users/5169236/ralh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8219, "favorite_count": 4, "accepted_answer_id": 54488650, "answer_count": 2, "score": 9, "last_activity_date": 1549098131, "creation_date": 1549061241, "last_edit_date": 1549098131, "question_id": 54488127, "link": "https://stackoverflow.com/questions/54488127/getting-temporary-value-dropped-while-borrowed-when-trying-to-update-an-option", "title": "Getting &quot;temporary value dropped while borrowed&quot; when trying to update an Option&lt;&amp;str&gt; in a loop", "body": "<p>I'm trying to implement a commonly used pattern - using the result of a previous loop iteration in the next loop iteration. For example, to implement pagination where you need to give the id of the last value on the previous page.</p>\n\n<pre><code>struct Result {\n    str: String,\n}    \n\nfn main() {\n    let times = 10;\n    let mut last: Option&lt;&amp;str&gt; = None;\n\n    for i in 0..times {\n        let current = do_something(last);\n        last = match current {\n            Some(r) =&gt; Some(&amp;r.str.to_owned()),\n            None =&gt; None,\n        };\n    }\n}\n\nfn do_something(o: Option&lt;&amp;str&gt;) -&gt; Option&lt;Result&gt; {\n    Some(Result {\n        str: \"whatever string\".to_string(),\n    })\n}\n</code></pre>\n\n<p>However, I'm not sure how to actually get the value out of the loop. Currently, the compiler error is <code>temporary value dropped while borrowed</code> (at <code>&amp;r.str.to_owned()</code>), though I made many other attempts, but to no avail.</p>\n\n<p>The only way I found to actually get it working is to create some sort of local <code>tmp_str</code> variable and do a hack like this:</p>\n\n<pre><code>match current {\n    Some(r) =&gt; {\n        tmp_str.clone_from(&amp;r.str);\n        last = Some(&amp;tmp_str);\n    }\n    None =&gt; {\n        last = None;\n    }\n}\n</code></pre>\n\n<p>But that doesn't feel like it's the way it's supposed to be done.</p>\n"}, {"tags": ["rust", "modulo", "integer-overflow", "int128"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 3, "creation_date": 1549071577, "post_id": 54487936, "comment_id": 95784926, "body": "I don&#39;t want to say that &quot;it can&#39;t be done&quot; right away, but wouldn&#39;t it be much safer and easier to just use big integers from the <code>num</code> crate? Do you have any good reasons to go through this exercise? And by the way: (0 .. e).fold( ... * ... ) is nothing you would want to do with an <code>e: u128</code>, because it would take the clock of your CPU roughly 228951566670 lifetimes of the universe to tick 2^128 times. See: <a href=\"https://en.wikipedia.org/wiki/Exponentiation_by_squaring\" rel=\"nofollow noreferrer\">Square and multiply</a> (that&#39;s the easy part, doesn&#39;t help you with multiplication overflow)."}, {"owner": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1549093792, "post_id": 54487936, "comment_id": 95804024, "body": "I&#39;ve given up on using <code>u128</code>s and I&#39;m just using the <code>num</code> crate now. Thanks to @AndreyTyukin for the tip on square-and-multiply."}], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "edited": false, "score": 0, "creation_date": 1549397199, "post_id": 54531811, "comment_id": 95885607, "body": "Instead of looping with <code>c = add(c, c)</code>, can&#39;t you use <code>checked_shl</code> and use the same <code>unwrap_or_else</code>? Would that increase speed?"}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "edited": false, "score": 1, "creation_date": 1549402611, "post_id": 54531811, "comment_id": 95887974, "body": "@ARaspiK I\u2019m not sure exactly what you\u2019re suggesting, but it sounds unlikely. The current implementation carefully maintains the invariant <code>c &lt; m</code> without doing any modulo operations in the inner loops (128-bit modulo is itself <a href=\"https://github.com/llvm-mirror/compiler-rt/blob/release_80/lib/builtins/udivmodti4.c\" rel=\"nofollow noreferrer\">implemented</a> with a loop over 128 bits). <code>checked_shl</code> wouldn\u2019t do that."}, {"owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "reply_to_user": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "edited": false, "score": 0, "creation_date": 1549403878, "post_id": 54531811, "comment_id": 95888481, "body": "@ARaspiK I just found a separate ~15% improvement, though."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 2, "last_activity_date": 1549405474, "last_edit_date": 1549405474, "creation_date": 1549360919, "answer_id": 54531811, "question_id": 54487936, "link": "https://stackoverflow.com/questions/54487936/how-to-resolve-a-possible-multiplicative-overflow-to-get-correct-modulus-operati/54531811#54531811", "title": "How to resolve a possible multiplicative overflow to get correct modulus operation?", "body": "<p>This implementation, based on splitting the 128-bit product into four 64-bit products, is five times as fast as <a href=\"https://docs.rs/num-bigint/0.2.2/num_bigint/struct.BigUint.html\" rel=\"nofollow noreferrer\"><code>num_bigint::BigUint</code></a>, ten times as fast as <a href=\"https://docs.rs/uint/0.5.0/uint/struct.U256.html\" rel=\"nofollow noreferrer\"><code>uint::U256</code></a>, and 2.3 times as fast as <a href=\"https://docs.rs/rust-gmp/0.5.0/gmp/mpz/struct.Mpz.html\" rel=\"nofollow noreferrer\"><code>gmp::mpz::Mpz</code></a>:</p>\n\n<pre><code>fn mul_mod(a: u128, b: u128, m: u128) -&gt; u128 {\n    if m &lt;= 1 &lt;&lt; 64 {\n        ((a % m) * (b % m)) % m\n    } else {\n        let add = |x: u128, y: u128| x.checked_sub(m - y).unwrap_or_else(|| x + y);\n        let split = |x: u128| (x &gt;&gt; 64, x &amp; !(!0 &lt;&lt; 64));\n        let (a_hi, a_lo) = split(a);\n        let (b_hi, b_lo) = split(b);\n        let mut c = a_hi * b_hi % m;\n        let (d_hi, d_lo) = split(a_lo * b_hi);\n        c = add(c, d_hi);\n        let (e_hi, e_lo) = split(a_hi * b_lo);\n        c = add(c, e_hi);\n        for _ in 0..64 {\n            c = add(c, c);\n        }\n        c = add(c, d_lo);\n        c = add(c, e_lo);\n        let (f_hi, f_lo) = split(a_lo * b_lo);\n        c = add(c, f_hi);\n        for _ in 0..64 {\n            c = add(c, c);\n        }\n        add(c, f_lo)\n    }\n}\n</code></pre>\n\n<p>(<strong>Warning:</strong> none of these implementations are suitable for use in cryptographic code, since they are not hardened against side channel attacks.)</p>\n"}], "owner": {"reputation": 145, "user_id": 9781227, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/110ca73109a1d21ff8af60b54ce2e7b6?s=128&d=identicon&r=PG&f=1", "display_name": "ARaspiK", "link": "https://stackoverflow.com/users/9781227/araspik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 1, "accepted_answer_id": 54531811, "answer_count": 1, "score": 2, "last_activity_date": 1549405474, "creation_date": 1549059980, "last_edit_date": 1549079550, "question_id": 54487936, "link": "https://stackoverflow.com/questions/54487936/how-to-resolve-a-possible-multiplicative-overflow-to-get-correct-modulus-operati", "title": "How to resolve a possible multiplicative overflow to get correct modulus operation?", "body": "<p>I have to perform <code>(a * b) % m</code>, but <code>a</code>, <code>b</code>, <em>and</em> <code>m</code> are 128-bit unsigned types, and overflow during multiplication is a large possibility. How can I still get a correct answer (probably using <code>%</code> more)?</p>\n\n<p>I'm trying to implement the modular exponent function in Rust, where the largest built-in type is <code>u128</code> (which is the max I can use). All three variables are really large, and so <code>(a * b) &gt; 2^128</code> is easy. I can use <code>a.overflowing_mul(b)</code> to detect whether an overflow occurred, but I do not know how to go back from the overflowed result (which can be thought of as <code>(a * b) % 2^128</code>) to get <code>(a * b) % m</code>.</p>\n\n<p>My modular exponent code looks like this (currently no overflowing support is added):</p>\n\n<pre><code>fn mod_exp(b: u128, e: u128, m: u128) {\n    (0..e).fold(1, |x, _| (x * b) % m)\n    //                    ^^^^^^^^^^^\n}\n</code></pre>\n\n<p>From a mathematical perspective:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(a * b) % m IS ACTUALLY (a * b) % B % m\n| B = current base (2^128)\n</code></pre>\n\n<p>Examples:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>// Mathematical\n(9 * 13) % 11 = 7\n// Real (base 20):\n(9 * 13) % (B = 20) % 11 = 6\n         ^^^^^^^^^^        ^ should be 7\n\n(8 * 4) % 14 = 4\n(8 * 4) % (B = 16) % 14 = 0\n        ^^^^^^^^^^        ^ should be 4\n</code></pre>\n"}, {"tags": ["rust", "cloudflare-workers", "wasm-bindgen"], "comments": [{"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1549052816, "post_id": 54486240, "comment_id": 95780096, "body": "Are you using the default allocator? IIRC, you can use <code>wee_alloc</code> to cut the binary size down significantly."}], "answers": [{"comments": [{"owner": {"reputation": 30998, "user_id": 2686899, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/StqEe.jpg?s=128&g=1", "display_name": "Kenton Varda", "link": "https://stackoverflow.com/users/2686899/kenton-varda"}, "edited": false, "score": 1, "creation_date": 1549059687, "post_id": 54487819, "comment_id": 95782360, "body": "Hey @Edouard, actually, after seeing your question, we noticed that the Workers preview service was throwing the error for all <code>new WebAssembly.Memory(...)</code> calls. I tried restarting the service and... that fixed it. Clearly there&#39;s a deeper bug which we&#39;ll be investigating. Just wanted to let you know that when you saw it start working, it may not have been anything you changed, but because I restarted the preview service. (As far as we can tell, this issue only ever affected preview, not workers deployed in production.)"}, {"owner": {"reputation": 151, "user_id": 835460, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/137113fcf4eb0cdb9a563ad4631c883a?s=128&d=identicon&r=PG", "display_name": "Edouard", "link": "https://stackoverflow.com/users/835460/edouard"}, "reply_to_user": {"reputation": 30998, "user_id": 2686899, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/StqEe.jpg?s=128&g=1", "display_name": "Kenton Varda", "link": "https://stackoverflow.com/users/2686899/kenton-varda"}, "edited": false, "score": 0, "creation_date": 1549104117, "post_id": 54487819, "comment_id": 95790215, "body": "This makes sense. I reverted the changes, and it was working again... until I tried making a few more requests, and it no longer works. I replaced the code again with the capacity option, and it does not work either. I guess my module somehow crashes the whole WebAssembly.Memory thing? As a side question, what are the CPU resource limits of the preview service? (equivalent to the 5ms free tier?)"}, {"owner": {"reputation": 30998, "user_id": 2686899, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/StqEe.jpg?s=128&g=1", "display_name": "Kenton Varda", "link": "https://stackoverflow.com/users/2686899/kenton-varda"}, "edited": false, "score": 0, "creation_date": 1549298517, "post_id": 54487819, "comment_id": 95843939, "body": "I haven&#39;t been able to reproduce the problem myself. Would you be up for e-mailing me your zone name and details so I can track this down? kenton at cloudflare. To answer your second question, the CPU limit at which we terminate a request varies but is always at least 50ms, regardless of plan level, in both production and preview."}], "tags": [], "owner": {"reputation": 151, "user_id": 835460, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/137113fcf4eb0cdb9a563ad4631c883a?s=128&d=identicon&r=PG", "display_name": "Edouard", "link": "https://stackoverflow.com/users/835460/edouard"}, "is_accepted": false, "score": 0, "last_activity_date": 1549059115, "creation_date": 1549059115, "answer_id": 54487819, "question_id": 54486240, "link": "https://stackoverflow.com/questions/54486240/out-of-memory-webassembly-instantiation-in-cloudflare-workers/54487819#54487819", "title": "Out of memory WebAssembly Instantiation in Cloudflare Workers", "body": "<p>The problem was the absence of the String capacity (in the <code>process</code> function), so that the WebAssembly module could not provision the required memory to run (likely over-provisions). \nBy setting a limit with <code>String::with_capacity</code>, the module runs properly without any memory issue.</p>\n"}], "owner": {"reputation": 151, "user_id": 835460, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/137113fcf4eb0cdb9a563ad4631c883a?s=128&d=identicon&r=PG", "display_name": "Edouard", "link": "https://stackoverflow.com/users/835460/edouard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 498, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1549059115, "creation_date": 1549050343, "question_id": 54486240, "link": "https://stackoverflow.com/questions/54486240/out-of-memory-webassembly-instantiation-in-cloudflare-workers", "title": "Out of memory WebAssembly Instantiation in Cloudflare Workers", "body": "<p>I am building a WebAssembly module in Rust to be used in Cloudflare Workers, via <code>wasm-bindgen</code>. The module is overall very basic; it has a single function named <code>process</code>, which takes as inputs two binaries (represented by two Uint8BitArrays), and a json_value (to be interpreted by <code>serde</code>), and yields either None or a string, typically something like this.</p>\n\n<pre><code>#[wasm_bindgen]\npub fn process(\n    binary_a: &amp;[u8],\n    binary_b: &amp;[u8],\n    json_value: &amp;JsValue,\n) -&gt; Option&lt;String&gt; {\n   Some(String::new())\n}\n</code></pre>\n\n<p>The glue code to instantiate the WebAssembly module is nearly identical from the <code>wasm-bindgen --no-modules</code> command, I've only changed the init condition at line 93 to <code>true</code>:</p>\n\n<pre><code>self = {};\n\n(function() {\n    var wasm;\n    const __exports = {};\n\n\n    let cachegetUint8Memory = null;\n    function getUint8Memory() {\n        if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n            cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachegetUint8Memory;\n    }\n\n    let WASM_VECTOR_LEN = 0;\n\n    function passArray8ToWasm(arg) {\n        const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n        getUint8Memory().set(arg, ptr / 1);\n        WASM_VECTOR_LEN = arg.length;\n        return ptr;\n    }\n\n    const heap = new Array(32);\n\n    heap.fill(undefined);\n\n    heap.push(undefined, null, true, false);\n\n    let stack_pointer = 32;\n\n    function addBorrowedObject(obj) {\n        if (stack_pointer == 1) throw new Error('out of js stack');\n        heap[--stack_pointer] = obj;\n        return stack_pointer;\n    }\n\n    let cachedTextDecoder = new TextDecoder('utf-8');\n\n    function getStringFromWasm(ptr, len) {\n        return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n    }\n\n    let cachedGlobalArgumentPtr = null;\n    function globalArgumentPtr() {\n        if (cachedGlobalArgumentPtr === null) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    }\n\n    let cachegetUint32Memory = null;\n    function getUint32Memory() {\n        if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n            cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachegetUint32Memory;\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @param {Uint8Array} arg1\n    * @param {any} arg2\n    * @returns {string}\n    */\n    __exports.process = function(arg0, arg1, arg2) {\n        const ptr0 = passArray8ToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm(arg1);\n        const len1 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.process(retptr, ptr0, len0, ptr1, len1, addBorrowedObject(arg2));\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n            if (rustptr === 0) return;\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            wasm.__wbindgen_free(ptr1, len1 * 1);\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    };\n\n    function init(path_or_module) {\n        let instantiation;\n        const imports = { './phototaxon_worker_utils': __exports };\n        if (true) {\n            instantiation = WebAssembly.instantiate(path_or_module, imports)\n            .then(instance =&gt; {\n            return { instance, module: path_or_module }\n        });\n    } else {\n        const data = fetch(path_or_module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            instantiation = WebAssembly.instantiateStreaming(data, imports);\n        } else {\n            instantiation = data\n            .then(response =&gt; response.arrayBuffer())\n            .then(buffer =&gt; WebAssembly.instantiate(buffer, imports));\n        }\n    }\n    return instantiation.then(({instance}) =&gt; {\n        wasm = init.wasm = instance.exports;\n\n    });\n};\nself.wasm_bindgen = Object.assign(init, __exports);\n})();\n\nself.wasm_bindgen(MODULE).then(() =&gt; { XXX }).catch(error =&gt; console.log(error));\n</code></pre>\n\n<p>I've used <a href=\"https://github.com/dollarshaveclub/cloudworker\" rel=\"nofollow noreferrer\">cloudworker</a> to try out the overall script and it operated without issues. I've then tried the same script with the <a href=\"https://stackoverflow.com/a/53907610/835460\">Preview Service API</a> and it did work fine for a few attempts, until it started to throw errors: </p>\n\n<pre><code>RangeError: WebAssembly Instantiation: Out of memory: wasm memory\n    at init (worker.js:1200:35)\n    at Module.&lt;anonymous&gt; (worker.js:1878:15)\n    at __webpack_require__ (worker.js:20:30)\n    at worker.js:84:18\n    at worker.js:87:10\n</code></pre>\n\n<p>This happens at the instantiation, regardless of the request sent (what happens after the initialisation is not .</p>\n\n<p>I've been trying to slim down my Webassembly script, but even a hello-world-type function was rejected. I don't know how to debug, is this related to the glue-code, the rust code, or the Cloudflare's Preview Service?</p>\n"}, {"tags": ["concurrency", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549035938, "post_id": 54482320, "comment_id": 95772456, "body": "<i>who is borrowing my <code>data</code></i> \u2014 the error message points to the culprit: <code>split_whitespace</code>. From <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.split_whitespace\" rel=\"nofollow noreferrer\">its docs</a>, emphasis mine: <i>The iterator returned will return string slices that are <b>sub-slices of the original string slice</b>, separated by any amount of whitespace</i>"}], "answers": [{"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1549035724, "post_id": 54482675, "comment_id": 95772333, "body": "Proper fixes can be found in the duplicates ^^."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549035819, "post_id": 54482675, "comment_id": 95772390, "body": "&quot;Proper&quot; is, as always, situation dependent. <a href=\"https://stackoverflow.com/q/42467829/155423\">Sharing String between threads in Rust</a> discusses the various possible solutions."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 1, "last_activity_date": 1549035625, "creation_date": 1549035625, "answer_id": 54482675, "question_id": 54482320, "link": "https://stackoverflow.com/questions/54482320/why-is-data-still-borrowed-at-the-end-of-my-function/54482675#54482675", "title": "Why is &#39;data&#39; still borrowed at the end of my function?", "body": "<p>The <code>split_whitespace</code> method operates on <code>&amp;str</code>s which is an issue due to the <code>move</code> closure in the loop. A quick fix is to operate on owned <code>String</code>s instead:</p>\n\n<pre><code>for chunk in chunked_data.map(|chunk| chunk.to_owned())\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user11001701"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 750, "favorite_count": 0, "closed_date": 1549035647, "accepted_answer_id": 54482675, "answer_count": 1, "score": 2, "last_activity_date": 1549035736, "creation_date": 1549034394, "last_edit_date": 1549035603, "question_id": 54482320, "link": "https://stackoverflow.com/questions/54482320/why-is-data-still-borrowed-at-the-end-of-my-function", "closed_reason": "Duplicate", "title": "Why is &#39;data&#39; still borrowed at the end of my function?", "body": "<p>After implementing the map-reduce example on <a href=\"https://doc.rust-lang.org/stable/rust-by-example/std_misc/threads/testcase_mapreduce.html\" rel=\"nofollow noreferrer\">rust-by-example</a>, I tried to do the same thing but with the data stored in another file. The compiler now tells me that my <code>data</code> variable is borrowed with a <code>'static</code> lifetime and does not live long enough. I'm not sure who is borrowing my 'data' and I am not sure how to respond to the compiler's help.</p>\n\n<p>I've already tried adding all the type annotations to see if I had assumed a wrong type somewhere, but that didn't help. The same code works if <code>data</code> is a <code>&amp;'static str</code> instead of a <code>String</code>.</p>\n\n<pre><code>use std::{fs, thread};\n\nfn main() {\n    let data = fs::read_to_string(\"data.txt\").unwrap();\n    let chunked_data = data.split_whitespace();\n\n    let mut children = vec![];\n    for chunk in chunked_data {\n        children.push(thread::spawn(move || -&gt; u32 {\n            chunk.chars().map(|c| c.to_digit(10).unwrap()).sum()\n        }));\n    }\n\n    let mut sums = vec![];\n    for child in children {\n        let sum = child.join().unwrap();\n        sums.push(sum);\n    }\n\n    let res = sums.iter().sum::&lt;u32&gt;();\n    println!(\"{}\", res);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `data` does not live long enough\n  --&gt; src/main.rs:5:24\n   |\n5  |     let chunked_data = data.split_whitespace();\n   |                        ^^^^-------------------\n   |                        |\n   |                        borrowed value does not live long enough\n   |                        argument requires that `data` is borrowed for `'static`\n...\n22 | }\n   | - `data` dropped here while still borrowed\n</code></pre>\n\n<p>I'm sure this problem is easy to solve, but I can't seem to find out who is borrowing my <code>data</code>.</p>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549035396, "post_id": 54482301, "comment_id": 95772133, "body": "<a href=\"https://doc.rust-lang.org/book/appendix-02-operators.html\" rel=\"nofollow noreferrer\">Appendix B: Operators and Symbols</a> \u2014 <i><code>..</code> - <code>variant(x, ..)</code>, <code>struct_type { x, .. }</code> - \u201cAnd the rest\u201d pattern binding</i>"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 7, "last_activity_date": 1549035491, "last_edit_date": 1549035491, "creation_date": 1549034439, "answer_id": 54482329, "question_id": 54482301, "link": "https://stackoverflow.com/questions/54482301/what-does-mean-in-a-pattern/54482329#54482329", "title": "What does { .. } mean in a pattern?", "body": "<p>It's a <a href=\"https://doc.rust-lang.org/reference/patterns.html#destructuring\" rel=\"noreferrer\">pattern-matching destructuring wildcard</a> that allows one to not need to specify all the members of an object. In this case:</p>\n\n<pre><code>UserError::ValidationError { .. }\n</code></pre>\n\n<p>It is enough for that <code>match</code> branch that the enum variant is <code>ValidationError</code>, regardless of its contents (in this case <code>field</code>):</p>\n\n<pre><code>enum UserError {\n    #[fail(display = \"Validation error on field: {}\", field)]\n    ValidationError { field: String },\n}\n</code></pre>\n\n<p>It is also useful when one is concerned only with some members of an object; consider a <code>Foo</code> struct containing <code>baz</code> and <code>bar</code> fields:</p>\n\n<pre><code>struct Foo {\n    bar: usize,\n    baz: usize,\n}\n</code></pre>\n\n<p>If you were only interested in <code>baz</code>, you could write:</p>\n\n<pre><code>fn main() {\n    let x = Foo { bar: 0, baz: 1 };\n\n    match x {\n        Foo { baz, .. } =&gt; println!(\"{}\", baz), // prints 1\n        _ =&gt; (),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 54482329, "answer_count": 1, "score": 0, "last_activity_date": 1549222953, "creation_date": 1549034341, "last_edit_date": 1549222953, "question_id": 54482301, "link": "https://stackoverflow.com/questions/54482301/what-does-mean-in-a-pattern", "title": "What does { .. } mean in a pattern?", "body": "<p>I found the following piece of code in the <a href=\"https://actix.rs/docs/errors/#recommended-practices-in-error-handling\" rel=\"nofollow noreferrer\">doc</a> about <a href=\"https://actix.rs/\" rel=\"nofollow noreferrer\">actix</a>:</p>\n\n<pre><code>#[macro_use]\nextern crate failure;\nuse actix_web::{error, http, HttpResponse};\n\n#[derive(Fail, Debug)]\nenum UserError {\n    #[fail(display = \"Validation error on field: {}\", field)]\n    ValidationError { field: String },\n}\n\nimpl error::ResponseError for UserError {\n    fn error_response(&amp;self) -&gt; HttpResponse {\n        match *self {\n            UserError::ValidationError { .. } =&gt;\n                HttpResponse::new(http::StatusCode::BAD_REQUEST),\n        }\n    }\n}\n</code></pre>\n\n<p>What does <code>{ .. }</code> mean here?</p>\n"}, {"tags": ["rust", "compile-time"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1549020606, "post_id": 54477890, "comment_id": 95764025, "body": "Do you just want to see your value with your own eyes? E.g. &quot;I wonder how big my struct would be on ARM&quot;? Or do you want to use that value in code? If yes, that would beg the question in the last comment: where? Inside a proc macro?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1549023090, "post_id": 54477890, "comment_id": 95765346, "body": "See <a href=\"https://stackoverflow.com/questions/49576878/how-do-i-evaluate-expressions-in-rusts-macro-system\">How do I evaluate expressions in Rust&#39;s macro system?</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1549023376, "post_id": 54477890, "comment_id": 95765507, "body": "Would <a href=\"https://stackoverflow.com/questions/30330519/compile-time-generic-type-size-check\" title=\"compile time generic type size check\">stackoverflow.com/questions/30330519/&hellip;</a> solve this?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 4, "creation_date": 1549026529, "post_id": 54477890, "comment_id": 95767272, "body": "For a quick check I just do: <code>() as [(); MYSIZE];</code> that yields an error with the message <code>non-primitive cast: () as [(); X]</code>."}, {"owner": {"reputation": 1992, "user_id": 1486074, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3997074174cc14081602e4f3c76091a5?s=128&d=identicon&r=PG", "display_name": "awelkie", "link": "https://stackoverflow.com/users/1486074/awelkie"}, "edited": false, "score": 0, "creation_date": 1549033354, "post_id": 54477890, "comment_id": 95771083, "body": "My goal is to create an API where the user is required to provide a block of memory with a certain size, and I&#39;d like to automatically create a header file with that size specified in a macro."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1549033517, "post_id": 54477890, "comment_id": 95771160, "body": "In that case, I would say this is a duplicate of the question I linked. There is no way to do this and the answer to that question explains that."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1549033528, "post_id": 54477890, "comment_id": 95771164, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/49576878/how-do-i-evaluate-expressions-in-rusts-macro-system\">How do I evaluate expressions in Rust&#39;s macro system?</a>"}, {"owner": {"reputation": 1992, "user_id": 1486074, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3997074174cc14081602e4f3c76091a5?s=128&d=identicon&r=PG", "display_name": "awelkie", "link": "https://stackoverflow.com/users/1486074/awelkie"}, "edited": false, "score": 0, "creation_date": 1549034467, "post_id": 54477890, "comment_id": 95771651, "body": "I don&#39;t see how this question is a duplicate of the one you&#39;ve linked. &quot;How can you be sure that the size will be the same on the target architecture?&quot; - I&#39;m not depending on the size of a struct being the same between two targets. What I&#39;m saying is that when I compile for a specific target, the compiler knows the size of the struct, and I&#39;m wondering how I can extract that information from the compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549035148, "post_id": 54477890, "comment_id": 95771985, "body": "<i>I&#39;d like to automatically create a header file</i> \u2014 how do you expect to automatically generate this? Are you going to scrape the stdout of <code>cargo build</code> and then run scripts to generate a header file?"}, {"owner": {"reputation": 1992, "user_id": 1486074, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3997074174cc14081602e4f3c76091a5?s=128&d=identicon&r=PG", "display_name": "awelkie", "link": "https://stackoverflow.com/users/1486074/awelkie"}, "edited": false, "score": 0, "creation_date": 1549035347, "post_id": 54477890, "comment_id": 95772103, "body": "I suppose that depends on the answer to this question. Yes, scraping stdout is a possibility. Even just manually copy-pasting whenever I cut a release is fine, I&#39;m just hoping for something better than running my library in an emulator or on target hardware."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1549037568, "post_id": 54477890, "comment_id": 95773444, "body": "@awelkie: Please edit your question to include the usecase (creating a macro expanding to the size in a C header file when cross-compiling). Do you plan to have this header also contain the struct itself? Or not? Would an upper bound suffice?"}, {"owner": {"reputation": 1992, "user_id": 1486074, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3997074174cc14081602e4f3c76091a5?s=128&d=identicon&r=PG", "display_name": "awelkie", "link": "https://stackoverflow.com/users/1486074/awelkie"}, "edited": false, "score": 0, "creation_date": 1549042227, "post_id": 54477890, "comment_id": 95775827, "body": "Done. I hope it&#39;s clearer now."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549058003, "post_id": 54486539, "comment_id": 95781845, "body": "Will this even work like this for cross-compilation?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549058855, "post_id": 54486539, "comment_id": 95782124, "body": "@Shepmaster it should do, if you include the <code>--target</code> option. I didn&#39;t actually test that out though."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1549479708, "last_edit_date": 1549479708, "creation_date": 1549051747, "answer_id": 54486539, "question_id": 54477890, "link": "https://stackoverflow.com/questions/54477890/how-can-i-get-the-value-of-a-const-at-compile-time/54486539#54486539", "title": "How can I get the value of a const at compile time?", "body": "<p>Definitely do <em><strong>not</strong></em> do this:</p>\n\n<ol>\n<li><p>In a new crate, import the type in question, and create a function that returns its size:</p>\n\n<pre><code>#[no_mangle]\npub fn size_of_mystruct() -&gt; usize {\n    std::mem::size_of::&lt;MyStruct&gt;()\n}\n</code></pre></li>\n<li><p>Get the LLVM-IR output:</p>\n\n<pre><code>CARGO_INCREMENTAL=0 cargo rustc -- --emit=llvm-ir -o ir\n</code></pre>\n\n<p>Make sure to add the <code>--target</code> option too. This will create a few files, one which should have extension <code>.ll</code>. The <code>CARGO_INCREMENTAL=0</code> is important - without it, it will create lots of <code>.ll</code> files, and who knows which is the right one! Open the file and search for <code>size_of_mystruct</code>. You'll find something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>; Function Attrs: uwtable\ndefine i64 @size_of_mystruct() unnamed_addr #0 !dbg !142 {\nstart:\n; call core::mem::size_of\n  %0 = call i64 @_ZN4core3mem7size_of17hc5e3caf4d8826b98E(), !dbg !144\n  br label %bb1, !dbg !144\n</code></pre></li>\n<li><p>Search for the internal function being called here. (In this case <code>_ZN4core3mem7size_of17hc5e3caf4d8826b98E</code>). It will look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>; core::mem::size_of\n; Function Attrs: inlinehint uwtable\ndefine internal i64 @_ZN4core3mem7size_of17hc5e3caf4d8826b98E() unnamed_addr #1 !dbg !67 {\nstart:\n  %tmp_ret = alloca i64, align 8\n  store i64 40, i64* %tmp_ret, align 8, !dbg !87\n  %0 = load i64, i64* %tmp_ret, align 8, !dbg !87\n  br label %bb1, !dbg !87\n</code></pre></li>\n<li><p>This is the important bit: <code>store i64 40</code>. The struct is 40 bytes! </p></li>\n<li><p>Automate the process!</p></li>\n<li><p>Wait until the whole process mysteriously breaks.</p></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "is_accepted": false, "score": 0, "last_activity_date": 1618236448, "creation_date": 1618236448, "answer_id": 67059927, "question_id": 54477890, "link": "https://stackoverflow.com/questions/54477890/how-can-i-get-the-value-of-a-const-at-compile-time/67059927#67059927", "title": "How can I get the value of a const at compile time?", "body": "<p>I think it would be wiser to approach this from the opposite direction: define a C struct in a <code>.h</code> file that you will distribute with your library for consumers to use, and then declare the struct <code>#[repr(C)]</code> in Rust (you could even have <a href=\"https://github.com/rust-lang/rust-bindgen\" rel=\"nofollow noreferrer\">bindgen</a> generate the declaration for you automatically from the <code>.h</code> as part of your build).</p>\n"}], "owner": {"reputation": 1992, "user_id": 1486074, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3997074174cc14081602e4f3c76091a5?s=128&d=identicon&r=PG", "display_name": "awelkie", "link": "https://stackoverflow.com/users/1486074/awelkie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1618236448, "creation_date": 1549017956, "last_edit_date": 1549042209, "question_id": 54477890, "link": "https://stackoverflow.com/questions/54477890/how-can-i-get-the-value-of-a-const-at-compile-time", "title": "How can I get the value of a const at compile time?", "body": "<p>My goal is to create a C API where the user is required to provide a block of memory with a certain size. This size happens to be the size of a struct in my rust library, and so I'd like to extract the size of the rust struct and place it in a header file as a C macro.</p>\n\n<p>The problem is that I'm cross-compiling my library, so I can't run a program on my computer that prints <code>core::mem::size_of::&lt;MyStruct&gt;()</code>. But I can store that value in a <code>const</code> variable in my library.</p>\n\n<p>Is there any way to extract the value of this <code>const</code> variable representing the size of my struct at compile time such that I can then paste it into a C header file?</p>\n"}, {"tags": ["reflection", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549034933, "post_id": 54477677, "comment_id": 95771877, "body": "See specifically <a href=\"https://stackoverflow.com/a/29168659/155423\">this answer</a>."}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549036277, "post_id": 54477677, "comment_id": 95772636, "body": "@Shepmaster I&#39;m writing Python extenstions and I needed a way to return the current struct&#39;s name for its <code>__repr__</code> method"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549036374, "post_id": 54477677, "comment_id": 95772692, "body": "You are already familiar with <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow noreferrer\">PyO3</a>, I assume? I would have thought they had tools to do this for you."}, {"owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549036871, "post_id": 54477677, "comment_id": 95773015, "body": "Yes, that&#39;s what I&#39;m using. Is this kind of &quot;introspection&quot; not encouraged in Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549039703, "post_id": 54477677, "comment_id": 95774622, "body": "I wouldn&#39;t say discouraged, just uncommon. The <code>Debug</code> macro does the same thing, really, and uses stable Rust. That&#39;s why I&#39;d expect the PyO3 to have a solution."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1549034890, "last_edit_date": 1549034890, "creation_date": 1549017929, "answer_id": 54477878, "question_id": 54477677, "link": "https://stackoverflow.com/questions/54477677/is-it-possible-to-get-the-name-of-a-struct-using-one-of-its-methods/54477878#54477878", "title": "Is it possible to get the name of a struct using one of its methods?", "body": "<p>It's possible with nightly and the <code>core_intrinsics</code> feature:</p>\n\n<pre><code>#![feature(core_intrinsics)]\n\nuse std::intrinsics::type_name;\n\nstruct ABC;\n\nimpl ABC {\n    fn some_method(&amp;self) -&gt; &amp;'static str {\n        unsafe { type_name::&lt;Self&gt;() }\n    }\n}\n\nfn main() {\n    println!(\"{}\", ABC.some_method()); // ABC\n}\n</code></pre>\n"}], "owner": {"reputation": 1643, "user_id": 434165, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e9b02731158194defd855684bfd313ac?s=128&d=identicon&r=PG", "display_name": "kentwait", "link": "https://stackoverflow.com/users/434165/kentwait"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "closed_date": 1549034881, "accepted_answer_id": 54477878, "answer_count": 1, "score": 2, "last_activity_date": 1549036321, "creation_date": 1549017275, "last_edit_date": 1549036321, "question_id": 54477677, "link": "https://stackoverflow.com/questions/54477677/is-it-possible-to-get-the-name-of-a-struct-using-one-of-its-methods", "closed_reason": "Duplicate", "title": "Is it possible to get the name of a struct using one of its methods?", "body": "<p>For example:</p>\n\n<pre><code>struct ABC;\n\nimpl ABC {\n    fn some_method(&amp;self) -&gt; &amp;str {\n        // return the name of its struct -&gt; \"ABC\"\n    }\n}\n</code></pre>\n\n<p>I'm writing Python extensions and I need a way to return the current struct's name for its <code>repr</code> method. In Python, I can get this using <code>self.__class__.__name__</code>. Is there anything similar in Rust?</p>\n"}, {"tags": ["hashmap", "rust"], "comments": [{"owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1549018063, "post_id": 54473963, "comment_id": 95762676, "body": "I didn&#39;t know that, that&#39;s actually the easiest solution!"}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 2, "last_activity_date": 1549034579, "last_edit_date": 1549034579, "creation_date": 1549005318, "answer_id": 54474649, "question_id": 54473963, "link": "https://stackoverflow.com/questions/54473963/revert-to-previous-value-in-a-hashmap/54474649#54474649", "title": "Revert to previous value in a HashMap", "body": "<p>Rust compiler is not happy with this borrow, just get rid of it</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>--- let val = map.get(\"key1\");\n+++ let val = map.get(\"key1\").cloned();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549040939, "post_id": 54483659, "comment_id": 95775241, "body": "I\u2019d say that using <code>and_then</code> and <code>or_else</code> are not idiomatic here. You want to do side effects, not compute new values. I&#39;d use another <code>match</code>."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1549040807, "last_edit_date": 1549040807, "creation_date": 1549039348, "answer_id": 54483659, "question_id": 54473963, "link": "https://stackoverflow.com/questions/54473963/revert-to-previous-value-in-a-hashmap/54483659#54483659", "title": "Revert to previous value in a HashMap", "body": "<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.insert\" rel=\"nofollow noreferrer\"><code>insert()</code></a> returns the previous value, if any, so your code can be simplified a lot.  This also solves your borrow problem:</p>\n\n<pre><code>fn change_map(map: &amp;mut HashMap&lt;&amp;str, String&gt;) {\n    let previous = map.insert(\"key1\", String::from(\"value2\"));\n    match save_map_to_file(map) {\n        Ok(_) =&gt; (),\n        Err(_) =&gt; {\n            previous\n                .and_then(|previous| map.insert(\"key1\", previous))\n                .or_else(|| map.remove(\"key1\"));\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 552, "user_id": 5007125, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/QbIq9.jpg?s=128&g=1", "display_name": "seladb", "link": "https://stackoverflow.com/users/5007125/seladb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 54483659, "answer_count": 2, "score": 0, "last_activity_date": 1549040807, "creation_date": 1549002156, "last_edit_date": 1549034482, "question_id": 54473963, "link": "https://stackoverflow.com/questions/54473963/revert-to-previous-value-in-a-hashmap", "title": "Revert to previous value in a HashMap", "body": "<p>I'm updating a key-value in a <code>HashMap</code> and then saving the <code>HashMap</code> to a file. I want to make sure that if saving to the file fails update is reverted. Here is the code I've written (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=11c55f9ad1072b8e99125adc5b6ed3c2\" rel=\"nofollow noreferrer\">Rust Playground</a>):</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fs;\nextern crate serde_json; // 1.0.37\n\nfn save_map_to_file(map: &amp;HashMap&lt;String, String&gt;) -&gt; Result&lt;(), ()&gt; {\n    // serialize map to json\n    let map_as_string = match serde_json::to_string(map) {\n        Ok(json_map) =&gt; json_map,\n        Err(_) =&gt; return Err(()),\n    };\n\n    // write the json to a file\n    match fs::write(\"map.bin\", map_as_string) {\n        Ok(_) =&gt; Ok(()),\n        Err(_) =&gt; Err(()),\n    }\n}\n\nfn change_map(map: &amp;mut HashMap&lt;String, String&gt;) {\n    // save current value in \"key1\" (if exists)\n    let val = map.get(\"key1\");\n\n    // insert a new value to \"key1\"\n    map.insert(String::from(\"key1\"), String::from(\"value2\"));\n\n    // try to save the map to a file\n    match save_map_to_file(map) {\n        Ok(_) =&gt; (),\n        Err(_) =&gt; {\n            // if save fails, revert back to the original value\n            match val {\n                Some(value) =&gt; {\n                    // if \"key1\" existed before the change, revert back to\n                    // original value\n                    map.insert(String::from(\"key1\"), value.to_string());\n                }\n\n                None =&gt; {\n                    // if \"key1\" didn't exist before the change, remove the\n                    // new \"key1\"-&gt;\"value2\" record\n                    map.remove(\"key1\");\n                }\n            }\n            ()\n        }\n    }\n}\n\nfn main() {\n    let mut map: HashMap&lt;String, String&gt; = HashMap::new();\n\n    map.insert(String::from(\"key1\"), String::from(\"value1\"));\n\n    change_map(&amp;mut map);\n\n    println!(\"Map: {:?}\", map);\n}\n</code></pre>\n\n<p>When I compile this code I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:24:5\n   |\n21 |     let val = map.get(\"key1\");\n   |               --- immutable borrow occurs here\n...\n24 |     map.insert(String::from(\"key1\"), String::from(\"value2\"));\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n...\n31 |             match val {\n   |                   --- immutable borrow later used here\n</code></pre>\n\n<p>I understand this error but I can't figure out what is the right way to revert the value if saving to file failed.</p>\n"}, {"tags": ["opengl", "rust", "ffi", "egl"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549034215, "post_id": 54473884, "comment_id": 95771512, "body": "<i>When I&#39;m rewriting these EGL functions in Rust</i> \u2014 why would you <b>rewrite</b> these functions in Rust? Do you mean that you wish to <b>call</b> them?"}, {"owner": {"reputation": 76, "user_id": 6756663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZrRxE.jpg?s=128&g=1", "display_name": "Michael.lai", "link": "https://stackoverflow.com/users/6756663/michael-lai"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549177966, "post_id": 54473884, "comment_id": 95805922, "body": "No. I am not trying to call them through FFI. I am implementing them just like the normal graphics driver. I am writing an google/ANGLE alike project in Rust."}], "owner": {"reputation": 76, "user_id": 6756663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZrRxE.jpg?s=128&g=1", "display_name": "Michael.lai", "link": "https://stackoverflow.com/users/6756663/michael-lai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 122, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1549033831, "creation_date": 1549001832, "last_edit_date": 1549033831, "question_id": 54473884, "link": "https://stackoverflow.com/questions/54473884/how-can-i-represent-ownership-and-lifetime-of-egl-types-that-will-be-stored-in-t", "title": "How can I represent ownership and lifetime of EGL types that will be stored in thread-local storage?", "body": "<p>Here are the major EGL functions prototypes.</p>\n\n<pre><code>typedef void *EGLContext;\n\nEGLContext eglCreateContext(EGLDisplay display,\n    EGLConfig config,\n    EGLContext share_context,\n    EGLint const * attrib_list);\n\nEGLBoolean eglMakeCurrent(EGLDisplay display,\n    EGLSurface draw,\n    EGLSurface read,\n    EGLContext context);\n\nEGLBoolean eglDestroyContext(EGLDisplay display,\n    EGLContext context);\n</code></pre>\n\n<p>The instance of <code>EGLContext</code> returned from <code>eglCreateContext()</code> will be set to thread local storage by <code>eglMakeCurrent()</code>. After that, all the OpenGL or OpenGL ES functions will change the states held by that instance.</p>\n\n<p>When I'm rewriting these EGL functions in Rust, how to properly deal with ownership and lifetimes?</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn eglCreateContext() -&gt; EGLContext {\n    // init instance of EGLContext\n    // Rc::new(RefCell::new(instance of EGLContext));\n    // return that instance of Rc?\n}\n\n#[no_mangle]\npub extern \"C\" fn eglMakeCurrent() -&gt; EGLBoolean {\n    // Clone a new Rc instance of the value returned by eglCreateContext?\n    // How to set the new Rc instance to Thread Local Storage variable properly?\n    // TLS can be None if eglMakeCurrent() pass a nullptr as actual value of EGLContext\n}\n\n#[no_mangle]\npub extern \"C\" fn eglDestroyContext(display: EGLDisplay, context: EGLContext) -&gt; EGLBoolean {\n    // Set TLS variable to None if context is already store in it\n    // Dispose all the related resource.\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "is_accepted": true, "score": 3, "last_activity_date": 1593121210, "last_edit_date": 1593121210, "creation_date": 1549000304, "answer_id": 54473609, "question_id": 54472982, "link": "https://stackoverflow.com/questions/54472982/how-to-convert-vector-of-integers-to-and-from-bytes/54473609#54473609", "title": "How to convert vector of integers to and from bytes?", "body": "<p>Maybe you are looking for <a href=\"https://docs.rs/byteorder/1.3.1/byteorder/trait.ByteOrder.html\" rel=\"nofollow noreferrer\"><code>ByteOrder</code></a>:</p>\n<pre><code>extern crate byteorder; // 1.3.1\nuse byteorder::{ByteOrder, LittleEndian};\n\nfn main() -&gt; () {\n    let rdr = vec![1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0];\n    let mut dst = [0; 3];\n    LittleEndian::read_u32_into(&amp;rdr, &amp;mut dst);\n    assert_eq!([1,2,4], dst);\n    let mut bytes = [0; 12];\n    LittleEndian::write_u32_into(&amp;dst, &amp;mut bytes);\n    assert_eq!(rdr, bytes);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": false, "score": 2, "last_activity_date": 1549004122, "last_edit_date": 1549004122, "creation_date": 1549003754, "answer_id": 54474306, "question_id": 54472982, "link": "https://stackoverflow.com/questions/54472982/how-to-convert-vector-of-integers-to-and-from-bytes/54474306#54474306", "title": "How to convert vector of integers to and from bytes?", "body": "<p>You may use <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c22ee90dbf0ab2de1f665af7a3e06fa0\" rel=\"nofollow noreferrer\">this</a> (from <code>Vec&lt;u32&gt;</code> to <code>Vec&lt;u8&gt;</code> or vice versa):</p>\n\n<pre><code>extern crate byteorder;\nuse byteorder::{ByteOrder, LittleEndian, WriteBytesExt};\n\nfn main() {\n    let v32: Vec&lt;u32&gt; = vec![1, 2, 4];\n    let mut v8: Vec&lt;u8&gt; = Vec::new();\n    for n in v32 {\n        v8.write_u32::&lt;LittleEndian&gt;(n).unwrap();\n    }\n    println!(\"{:?}\", v8); // [1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0]\n\n    let mut result: Vec&lt;u32&gt; = Vec::new();\n    for i in (0..v8.len()).step_by(4) {\n        result.push(LittleEndian::read_u32(&amp;v8[i..]));\n    }\n    println!(\"{:?}\", result); // [1, 2, 4]\n}\n</code></pre>\n"}], "owner": {"reputation": 2422, "user_id": 1610273, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ecb15180b9f6e0a36d96da1e0b860572?s=128&d=identicon&r=PG", "display_name": "nevi_me", "link": "https://stackoverflow.com/users/1610273/nevi-me"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2882, "favorite_count": 0, "closed_date": 1549035239, "accepted_answer_id": 54473609, "answer_count": 2, "score": 2, "last_activity_date": 1593121289, "creation_date": 1548995912, "last_edit_date": 1593121289, "question_id": 54472982, "link": "https://stackoverflow.com/questions/54472982/how-to-convert-vector-of-integers-to-and-from-bytes", "closed_reason": "Duplicate", "title": "How to convert vector of integers to and from bytes?", "body": "<p>How can I convert <code>Vec&lt;u32&gt;</code> to bytes, such that <code>[1, 2, 4]</code> should give me <code>[1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0]</code>, and to take the inverse bytes and convert them back to a vector of integers?</p>\n<p>I only know how to convert <code>[u8; 4]</code> into an integer.</p>\n"}, {"tags": ["winapi", "rust", "windows-runtime", "interop"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549033329, "post_id": 54472925, "comment_id": 95771063, "body": "It&#39;s been a long time since we&#39;ve seen you, friend! Good to have you back (even if only for a little while!)"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1549257070, "post_id": 54472925, "comment_id": 95824142, "body": "@Shepmaster: after not having used Rust for anything particularly serious for a couple of years, I am finally seriously working on a project (of my own, still) which is solid Rust, and it\u2019s a delight to get back to using Rust seriously. Good to see you again, too!"}], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1549274252, "post_id": 54510635, "comment_id": 95830348, "body": "Alas, I\u2019ve already got this, and it does take effect: <code>RoInitialize(RO_INIT_SINGLETHREADED)</code> is the equivalent of <code>winrt::init_apartment</code> in single-threaded mode for Rust code. (Look at the definition of <code>init_apartment</code> in winrt/base.h\u2014it\u2019s a <code>WINRT_RoInitialize</code> call plus turning an error <code>hresult</code> into a thrown exception.) Without the <code>RoInitialize</code> call, or with it multi-threaded instead of single-threaded, the code fails as soon as you try to initialise the <code>WebViewControlProcess</code>. But with it, it gets past that line and just seems like it might be failing to actually spawn the process?"}, {"owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1549354834, "post_id": 54510635, "comment_id": 95861831, "body": "So, does it show &quot;Creation call failed&quot;? Since you said  <i>its <code>ProcessId</code> is stuck at 0, and it doesn\u2019t look to have spawned any subprocess.</i>"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1549419648, "post_id": 54510635, "comment_id": 95892150, "body": "No, it gets past that: \u201cthe <code>IAsyncOperation</code> stays determinedly at <code>AsyncStatus.Started</code> (0), and so the <code>blocking_get()</code> call hangs indefinitely.\u201d I don\u2019t know for certain what the expected behaviour of the <code>WebViewControlProcess</code> is (since it\u2019s not working), but I <i>guess</i> that it\u2019s supposed to spawn a subprocess (I see no such thing happening), and that <code>ProcessId</code> should then be a non-zero integer."}], "tags": [], "owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "is_accepted": false, "score": 0, "last_activity_date": 1549258654, "creation_date": 1549258654, "answer_id": 54510635, "question_id": 54472925, "link": "https://stackoverflow.com/questions/54472925/why-is-webviewcontrolprocess-createwebviewcontrolasync-never-completing/54510635#54510635", "title": "Why is WebViewControlProcess.CreateWebViewControlAsync() never completing?", "body": "<p>Try to initialize <code>WebViewProcessControl</code> with <code>winrt::init_apartment();</code> And it may needs a single-threaded apartment(according to the this <a href=\"https://stackoverflow.com/questions/53754235/webviewprocesscontrol-initialization-crash\">answer</a>).</p>\n\n<p>More attention on <a href=\"https://docs.microsoft.com/en-us/microsoft-edge/dev-guide\" rel=\"nofollow noreferrer\">Microsoft Edge Developer Guide</a>:</p>\n\n<blockquote>\n  <p>Lastly, power users might notice the apppearance of the Desktop App\n  Web Viewer (previously named Win32WebViewHost), an internal system app\n  representing the Win32 WebView, in the following places:</p>\n  \n  <p>\u25cf In the Windows 10 Action Center. The source of these notifications\n  should be understood as from a WebView hosted from a Win32 app. </p>\n  \n  <p>\u25cf In the device access settings UI\n  (Settings->Privacy->Camera/Location/Microphone). Disabling any of\n  these settings denies access from all WebViews hosted in Win32 apps.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 2724, "user_id": 500701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71d4efa35b3d11457c35543f9f55fba3?s=128&d=identicon&r=PG", "display_name": "Kenny Kerr", "link": "https://stackoverflow.com/users/500701/kenny-kerr"}, "edited": false, "score": 0, "creation_date": 1596577844, "post_id": 54583592, "comment_id": 111855026, "body": "winrt-rs now supports async-await <a href=\"https://github.com/microsoft/winrt-rs/pull/251\" rel=\"nofollow noreferrer\">github.com/microsoft/winrt-rs/pull/251</a>"}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 4, "last_activity_date": 1549580211, "creation_date": 1549580211, "answer_id": 54583592, "question_id": 54472925, "link": "https://stackoverflow.com/questions/54472925/why-is-webviewcontrolprocess-createwebviewcontrolasync-never-completing/54583592#54583592", "title": "Why is WebViewControlProcess.CreateWebViewControlAsync() never completing?", "body": "<p>It turned out that the problem was threading-related: the winit crate was doing its event loop in a different thread, and I did not realise this; I had erroneously assumed winit to be a harmless abstraction, which it turned out not <em>quite</em> to be.</p>\n\n<p>I discovered this when I tried minimising and porting a known-functioning C++ example, this time doing all the Win32 API calls manually rather than using winit, so that the translation was correct. I got it to work, and discovered this:</p>\n\n<p>The <code>IAsyncOperation</code> is fulfilled in the event loop, deep inside a <code>DispatchMessageW</code> call. <em>That</em> is when the <code>Completion</code> handler is called. Thus, for the operation to complete, you must run an event loop on the same thread. (An event loop on another thread doesn\u2019t do anything.) Otherwise, it stays in the <code>Started</code> state.</p>\n\n<p>Fortunately, winit <a href=\"https://github.com/tomaka/winit/issues/459#issuecomment-461041982\" rel=\"nofollow noreferrer\">is already moving to a new event loop which operates in the same thread</a>, with the Windows implementation having landed a few days ago; when I migrated my code to use the eventloop-2.0 branch of winit, and to using the <code>Completed</code> handler instead of <code>blocking_get()</code>, it all started working.</p>\n\n<p>I shall clarify about the winrt crate\u2019s <code>blocking_get()</code> call which would normally be the obvious solution while prototyping: you can\u2019t use it in this case because it causes deadlock, since it blocks until the <code>IAsyncOperation</code> completes, but the <code>IAsyncOperation</code> will not complete until you process messages in the event loop (<code>DispatchMessageW</code>), which will never happen because you\u2019re blocking the thread.</p>\n"}], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "accepted_answer_id": 54583592, "answer_count": 2, "score": 7, "last_activity_date": 1549580211, "creation_date": 1548995442, "last_edit_date": 1549033529, "question_id": 54472925, "link": "https://stackoverflow.com/questions/54472925/why-is-webviewcontrolprocess-createwebviewcontrolasync-never-completing", "title": "Why is WebViewControlProcess.CreateWebViewControlAsync() never completing?", "body": "<p>I\u2019m trying to write some Rust code that uses <a href=\"https://docs.microsoft.com/en-us/uwp/api/windows.web.ui.interop\" rel=\"noreferrer\"><code>Windows.Web.UI.Interop.WebViewControl</code></a> (which is a Universal Windows Platform out-of-process wrapper expressly designed so Win32 apps can use EdgeHTML), and it\u2019s all compiling, but not working properly at runtime.</p>\n\n<p>The relevant code boils down to this, using the winit, winapi and winrt crates:</p>\n\n<pre><code>use winit::os::windows::WindowExt;\nuse winit::{EventsLoop, WindowBuilder};\n\nuse winapi::winrt::roapi::{RoInitialize, RO_INIT_SINGLETHREADED};\nuse winapi::shared::winerror::S_OK;\n\nuse winrt::{RtDefaultConstructible, RtAsyncOperation};\nuse winrt::windows::foundation::Rect;\nuse winrt::windows::web::ui::interop::WebViewControlProcess;\n\nfn main() {\n    assert!(unsafe { RoInitialize(RO_INIT_SINGLETHREADED) } == S_OK);\n\n    let mut events_loop = EventsLoop::new();\n    let window = WindowBuilder::new()\n        .build(&amp;events_loop)\n        .unwrap();\n\n    WebViewControlProcess::new()\n        .create_web_view_control_async(\n            window.get_hwnd() as usize as i64,\n            Rect {\n                X: 0.0,\n                Y: 0.0,\n                Width: 800.0,\n                Height: 600.0,\n            },\n        )\n        .expect(\"Creation call failed\")\n        .blocking_get()\n        .expect(\"Creation async task failed\")\n        .expect(\"Creation produced None\");\n}\n</code></pre>\n\n<p>The <code>WebViewControlProcess</code> instantiation works, and the <code>CreateWebViewControlAsync</code> function does seem to care about the value it received as <code>host_window_handle</code> (pass it 0, or one off from the actual <code>HWND</code> value, and it complains). Yet the <code>IAsyncOperation</code> stays determinedly at <code>AsyncStatus.Started</code> (0), and so the <code>blocking_get()</code> call hangs indefinitely.</p>\n\n<p><a href=\"https://github.com/chris-morgan/webviewcontrol-rs/tree/a1c65420564971e66a42cc3609f5656713883644\" rel=\"noreferrer\">A full, runnable demonstration of the issue (with a bit more instrumentation)</a>.</p>\n\n<p>I get the feeling that the <code>WebViewControlProcess</code> is at fault: its <code>ProcessId</code> is stuck at 0, and it doesn\u2019t look to have spawned any subprocess. The <code>ProcessExited</code> event does not <em>seem</em> to be being fired (I attached something to it immediately after instantiation, is there opportunity for it to be fired before that?). Calling <code>Terminate()</code> fails as one might expect in such a situation, <code>E_FAIL</code>.</p>\n\n<p>Have I missed some sort of initialization for using <code>Windows.Web.UI.Interop</code>? Or is there some other reason why it\u2019s not working?</p>\n"}, {"tags": ["node.js", "npm", "rust", "npm-install"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1548985252, "post_id": 54471516, "comment_id": 95751146, "body": "look like there is a issue in the wood, <a href=\"https://npm.community/t/always-reproducible-maximum-call-stack-size-exceeded-npm-install-error/1645/13\" rel=\"nofollow noreferrer\">npm.community/t/&hellip;</a>, if you have an account I advise you to link your SO question"}, {"owner": {"reputation": 61, "user_id": 9124404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b198424b25d4f8e95cde3963e5b3084?s=128&d=identicon&r=PG&f=1", "display_name": "Spaceface16518", "link": "https://stackoverflow.com/users/9124404/spaceface16518"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548987440, "post_id": 54471516, "comment_id": 95751731, "body": "Thanks @Stargateur! I posted it here <a href=\"https://npm.community/t/always-reproducible-maximum-call-stack-size-exceeded-npm-install-error/1645/17?u=spaceface16518\" rel=\"nofollow noreferrer\">npm.community/t/&hellip;</a>"}], "owner": {"reputation": 61, "user_id": 9124404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b198424b25d4f8e95cde3963e5b3084?s=128&d=identicon&r=PG&f=1", "display_name": "Spaceface16518", "link": "https://stackoverflow.com/users/9124404/spaceface16518"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 3042, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1596739367, "creation_date": 1548983166, "last_edit_date": 1551455415, "question_id": 54471516, "link": "https://stackoverflow.com/questions/54471516/maximum-call-stack-exceeded-running-npm-install", "title": "Maximum call stack exceeded running npm install", "body": "<p>I'm following the <a href=\"https://rustwasm.github.io/book/introduction.html\" rel=\"nofollow noreferrer\">Conway's Game of Life tutorial for Rust and WebAssembly</a> and I'm stuck at the point where I'm <a href=\"https://rustwasm.github.io/book/game-of-life/hello-world.html#install-the-dependencies\" rel=\"nofollow noreferrer\">supposed to run <code>npm install</code> to install dependencies</a>. I keep getting ambiguous errors but after going through many different logs it boils down the <code>RangeError: Maximum call stack size exceeded</code>.</p>\n\n<p>I'm using</p>\n\n<ul>\n<li>macOS 10.14.2</li>\n<li>Node v10.15.1</li>\n<li>npm 6.7.0</li>\n<li>Rust 1.32.0 (with rustup, Cargo, and wasm-pack)</li>\n<li>webpack ^4.16.3</li>\n</ul>\n\n<p>(copied from various manifest and <code>-v</code> commands)</p>\n\n<p>I've tried</p>\n\n<ul>\n<li>clearing npm's cache and re-running <code>npm install</code> like in <a href=\"https://stackoverflow.com/q/40566348/9124404\">this answer</a></li>\n<li>Updating npm</li>\n<li>Reinstalling npm (and Node.js) from scratch (x2)</li>\n<li>Installing specific dependencies (like <code>npm install webpack</code>)</li>\n<li>Downloading a package and running <code>npm install</code> on the archive</li>\n</ul>\n\n<p>I noticed that I was getting some error 404's upon fetching some of <a href=\"https://www.npmjs.com/~xtuc\" rel=\"nofollow noreferrer\">xtuc</a>'s packages, supposedly because either the user is not found or because the URL contains non-url-friendly characters or something, but this is happening no matter what.</p>\n\n<p>The log fails here</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>107 http fetch GET 404 https://registry.npmjs.org/@xtuc%2flong 1309ms\n108 http fetch GET 404 https://registry.npmjs.org/@xtuc%2flong 406ms\n109 silly fetchPackageMetaData error for @xtuc/long@4.2.1 404 Not Found - GET https://registry.npmjs.org/@xtuc%2flong - User not found\n110 verbose stack RangeError: Maximum call stack size exceeded\n110 verbose stack     at RegExp.test (&lt;anonymous&gt;)\n110 verbose stack     at isDepOptional (/usr/local/lib/node_modules/npm/lib/install/deps.js:405:45)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:414:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n110 verbose stack     at failedDependency (/usr/local/lib/node_modules/npm/lib/install/deps.js:430:9)\n...\n</code></pre>\n\n<p>This keeps going on for a while.</p>\n\n<p>The terminal output looks like this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>npm ERR! Maximum call stack size exceeded\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     ~/.npm/_logs/2019-02-01T00_45_12_400Z-debug.log\n</code></pre>\n\n<p>I have minimal experience with npm and node.js (I am more a Rust person) but I used to use them a lot a while ago and I never remember having this issue before.</p>\n\n<p>That said, my best guess as to what's happening (purely from what the logs look like) is that npm can't fetch the package because it can't find the user, which is inadvertently causing some sort of loop that keeps calling the same function over and over again, eventually exceeding the call stack. I have no idea though.</p>\n"}, {"tags": ["java", "networking", "rust"], "comments": [{"owner": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 1, "creation_date": 1548977792, "post_id": 54470649, "comment_id": 95749450, "body": "It doesn&#39;t look like it&#39;s spawning a thread per request. It looks like it&#39;s a thread per client."}, {"owner": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1548977940, "post_id": 54470649, "comment_id": 95749493, "body": "I would run Linux <code>strace</code> on both programs and see if the &quot;look&quot; the same from the system call level."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 1, "creation_date": 1548978439, "post_id": 54470649, "comment_id": 95749613, "body": "@WillisBlackburn Yes, you&#39;re right. Still - it doesn&#39;t seem equivalent, because the Java version doesn&#39;t spawn anything at all, or does it? Also, the java version doesn&#39;t do anything with the number of bytes read, and it doesn&#39;t use <code>readFully</code> (or whatever it&#39;s called)."}, {"owner": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1548978528, "post_id": 54470649, "comment_id": 95749639, "body": "It doesn&#39;t. The Java version is limited to one client at at time."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548983713, "post_id": 54470649, "comment_id": 95750782, "body": "Could you please <b><a href=\"https://stackoverflow.com/posts/54470649/edit\">edit</a></b> your question to address why <i>you</i> think that these two pieces of code are the same? As the previous comments point out, one implementation spawns threads and the other does not. That&#39;s a pretty drastic difference in architecture."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548983975, "post_id": 54470649, "comment_id": 95750847, "body": "Your <code>handle_client</code> can <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3ae710df7b63bc43d0e8e120861d58b4\" rel=\"nofollow noreferrer\">be simplified and optimized</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548984083, "post_id": 54470649, "comment_id": 95750879, "body": "Why are you reading into a 32-byte long buffer in the Rust code?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548984267, "post_id": 54470649, "comment_id": 95750912, "body": "<code>let index = packets_to_send % nb_packets as u32;</code>, this value never change also this cast is ugly. I don&#39;t think we can reproduce your problem."}, {"owner": {"reputation": 13, "user_id": 10998402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e81ed39f9c39b9c780f0899b2e6e246?s=128&d=identicon&r=PG&f=1", "display_name": "user10998402", "link": "https://stackoverflow.com/users/10998402/user10998402"}, "reply_to_user": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1549028601, "post_id": 54470649, "comment_id": 95768332, "body": "@WillisBlackburn Yes, the java program is single threaded but I was using this only with one client at at time. I&#39;ve updated the rust program to be single-threaded too. The problem was in the receiver&#39;s buffer size. See answer below."}, {"owner": {"reputation": 13, "user_id": 10998402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e81ed39f9c39b9c780f0899b2e6e246?s=128&d=identicon&r=PG&f=1", "display_name": "user10998402", "link": "https://stackoverflow.com/users/10998402/user10998402"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549028742, "post_id": 54470649, "comment_id": 95768400, "body": "@Shepmaster thanks for the pointer. It&#39;s indeed simpler but I don&#39;t understand how it&#39;s more &#39;optimal&#39;. Looking at the implemetantion of io::copy (<a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/io/util.rs\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/master/src/libstd/io/util.rs</a>&zwnj;&#8203;) it creates an additional buffer in memory each time it is invoked while this just reuses the buffer. Can you elaborate?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549031962, "post_id": 54470649, "comment_id": 95770301, "body": "@user10998402 your <code>handle_client</code> also creates the <code>buf</code> every time it is called, so I don&#39;t understand your point. Neither of them matter because they are both stack-allocated. <code>io::copy</code> is more efficient because it has a bigger buffer, doesn&#39;t zero out the buffer, and more correct because it handles more error cases."}, {"owner": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1549041548, "post_id": 54470649, "comment_id": 95775499, "body": "Don\u2019t understand the downvotes. The author asked a clear, answerable question, and supplied the actual code that was failing."}, {"owner": {"reputation": 13, "user_id": 10998402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e81ed39f9c39b9c780f0899b2e6e246?s=128&d=identicon&r=PG&f=1", "display_name": "user10998402", "link": "https://stackoverflow.com/users/10998402/user10998402"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549044941, "post_id": 54470649, "comment_id": 95777028, "body": "@Shepmaster handle_client creates the buffer once per client client while io::copy creates it multiple times per client (once per sucesful read). I agree with the rest of your points though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549047398, "post_id": 54470649, "comment_id": 95778024, "body": "@user10998402 both implementations create one buffer once per client. I do not understand how you see anything else."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1549047669, "post_id": 54470649, "comment_id": 95778145, "body": "@WillisBlackburn one possibility is that there are obvious differences between the two pieces of code (the threading and the fixed sized buffers are ones that have been mentioned in the comments). The OP asked if there were any differences in the two pieces of code hey wrote, but didn\u2019t <b>seemingly</b> take any time of their own to compare the two. Who knows why people downvote though."}, {"owner": {"reputation": 7348, "user_id": 2684196, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/45AEF.jpg?s=128&g=1", "display_name": "Willis Blackburn", "link": "https://stackoverflow.com/users/2684196/willis-blackburn"}, "edited": false, "score": 0, "creation_date": 1549050540, "post_id": 54470649, "comment_id": 95779217, "body": "I agree the OP missed something, but almost every OP is missing something, that\u2019s why they\u2019re asking for help. Last week I pointed out that someone\u2019s problem was due to there being an unwanted semicolon after a while statement. We\u2019ve all been there."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 10998402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e81ed39f9c39b9c780f0899b2e6e246?s=128&d=identicon&r=PG&f=1", "display_name": "user10998402", "link": "https://stackoverflow.com/users/10998402/user10998402"}, "edited": false, "score": 0, "creation_date": 1549028826, "post_id": 54471709, "comment_id": 95768454, "body": "This was the issue indeed."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 0, "last_activity_date": 1548985136, "last_edit_date": 1548985136, "creation_date": 1548984773, "answer_id": 54471709, "question_id": 54470649, "link": "https://stackoverflow.com/questions/54470649/different-network-behavior-in-rust-vs-java-when-sending-packets-as-fast-as-possi/54471709#54471709", "title": "Different network behavior in Rust vs Java when sending packets as fast as possible", "body": "<p>You write 256 octet:</p>\n\n<pre><code>let mut packet_size = 256;\n</code></pre>\n\n<p>but you only read 32 in your client:</p>\n\n<pre><code>let mut buffer = [0 as u8; 32];\n</code></pre>\n\n<p>So the write buffer in the server is full cause the client don't read all the available data, so the server will block on its write call waiting that the client read the packet, and the client will also block on the write call because the server has stop reading the socket.</p>\n\n<p>You can fix this with a bigger size for your read buffer:</p>\n\n<pre><code>let mut buffer = [0u8; 512];\n</code></pre>\n\n<p>Or better you should always read the socket when there is data available, any non trivial program must do it.</p>\n"}], "owner": {"reputation": 13, "user_id": 10998402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e81ed39f9c39b9c780f0899b2e6e246?s=128&d=identicon&r=PG&f=1", "display_name": "user10998402", "link": "https://stackoverflow.com/users/10998402/user10998402"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 54471709, "answer_count": 1, "score": -1, "last_activity_date": 1549019593, "creation_date": 1548976471, "last_edit_date": 1549019593, "question_id": 54470649, "link": "https://stackoverflow.com/questions/54470649/different-network-behavior-in-rust-vs-java-when-sending-packets-as-fast-as-possi", "title": "Different network behavior in Rust vs Java when sending packets as fast as possible", "body": "<p>I'm running some networking experiments to measure how fast Rust can send TCP packets over the network.</p>\n\n<p>To do this, I generate a vector of 100 random packets with custom size and then loop over that array, sending a packet and reading it back.</p>\n\n<p>For a few thousand packets this works fine, however the program blocks if the number of packets to send is 50k or more.</p>\n\n<p>Initially, I thought this might be some throttling from the kernel/TCP stack and I've written an equivalent (I think) Java program. Surprisingly, Java works fine (it finishes regardless of the target number of packets) but Rust gets stuck.</p>\n\n<p>I've observed this in macOS 10.14.2 with Java 9.0.4 and Linux with OpenJDK 9.</p>\n\n<ul>\n<li><p>Are these programs equivalent? If not, what's the fundamental difference?</p></li>\n<li><p>If they are equivalent, what explains the Rust behavior?</p></li>\n</ul>\n\n<h3>Rust</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate argparse;\nextern crate rand;\n\nuse std::io::{Error, Read, Write};\nuse std::net::{TcpListener, TcpStream};\nuse std::thread;\nuse std::time::Instant;\n\nuse argparse::{ArgumentParser, Store, StoreTrue};\nuse rand::Rng;\n\nfn start_server(port: u16) {\n    let addr = format!(\"{}:{}\", \"0.0.0.0\", port);\n    let listener = TcpListener::bind(addr).expect(\"Could not bind\");\n    for stream in listener.incoming() {\n        match stream {\n            Err(e) =&gt; eprintln!(\"failed: {}\", e),\n            Ok(stream) =&gt; {\n                handle_client(stream);\n            }\n        }\n    }\n}\n\nfn handle_client(mut stream: TcpStream) -&gt; Result&lt;(), Error&gt; {\n    println!(\"Incoming connection from: {}\", stream.peer_addr()?);\n    let mut buf = [0; 512];\n    loop {\n        let bytes_read = stream.read(&amp;mut buf)?;\n        if bytes_read == 0 {\n            return Ok(());\n        }\n        stream.write(&amp;buf[..bytes_read])?;\n    }\n}\n\nfn start_client(port: u16, packets_to_send: u32, packet_size: u32) {\n    let addr = format!(\"{}:{}\", \"127.0.0.1\", port);\n    let mut stream = TcpStream::connect(addr).expect(\"Could not connect to server\");\n\n    let nb_packets = 100;\n    let start = Instant::now();\n    let random_packets = gen_random_packets(nb_packets, packet_size);\n    let stop = Instant::now().duration_since(start);\n    println!(\"Packets generated, took {:?}\", stop);\n\n    let mut packets_sent = 1;\n    let start = Instant::now();\n    loop {\n        let mut buffer = [0 as u8; 32];\n\n        let index = packets_to_send % nb_packets as u32;\n        //println!(\"sent: {} missing: {} mod:{}\", packets_sent, packets_to_send, index);\n\n        let to_send = &amp;random_packets[index as usize];\n        stream.write(to_send).expect(\"Failed to write to server\");\n\n        stream\n            .read(&amp;mut buffer)\n            .expect(\"Failed to read from server.\");\n\n        packets_sent += 1;\n\n        if packets_sent &gt; packets_to_send {\n            break;\n        }\n\n        if (packets_sent % 1000) == 0 {\n            println!(\"Packets sent {} / total {}\", packets_sent, packets_to_send);\n        }\n    }\n\n    let stop = Instant::now().duration_since(start);\n\n    println!(\"Wrote {} packets in {:?}\", packets_sent, stop)\n}\n\nfn gen_random_packets(nb: u16, size: u32) -&gt; Vec&lt;Vec&lt;u8&gt;&gt; {\n    let mut random_bytes = Vec::with_capacity(nb as usize);\n\n    for _ in 0..nb {\n        random_bytes.push((0..size).map(|_| rand::random::&lt;u8&gt;()).collect());\n    }\n\n    random_bytes\n}\n\nfn main() {\n    // default configuration\n    let mut port = 8888;\n    let mut server = false;\n    let mut packets_to_send = 100;\n    let mut packet_size = 256;\n    //read config parameters from stdin, if any\n    {\n        let mut ap = ArgumentParser::new();\n        ap.set_description(\"Rust network.\");\n        ap.refer(&amp;mut server).add_option(\n            &amp;[\"--server\"],\n            StoreTrue,\n            \"Whether to spawn a server or a client, defaults to client.\",\n        );\n        ap.refer(&amp;mut port)\n            .add_option(&amp;[\"--port\"], Store, \"Listening port\");\n        ap.refer(&amp;mut packets_to_send).add_option(\n            &amp;[\"--packets\"],\n            Store,\n            \"Number of packets to send\",\n        );\n        ap.refer(&amp;mut packet_size)\n            .add_option(&amp;[\"--packet-size\"], Store, \"Packet size\");\n        ap.parse_args_or_exit();\n    }\n\n    if server {\n        start_server(port);\n    } else {\n        println!(\n            \"Starting client, connecting to port {}. Sending {} packets.\",\n            port, packets_to_send\n        );\n        start_client(port, packets_to_send, packet_size);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/miguelammatos/6ca284132908b53d773af944d1ca3f9c\" rel=\"nofollow noreferrer\">Gist</a></p>\n\n<h3>Java</h3>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.Arrays;\nimport java.util.Random;\n\npublic class Network {\n\n\n    public static  void main(String[] args) throws IOException {\n\n        System.out.println(Arrays.toString(args));\n        int port = Integer.valueOf(args[0]);\n        boolean server =Boolean.valueOf(args[1]);\n        int packets_to_send = Integer.valueOf(args[2]);\n\n\n        if(server){\n        start_server(port);\n        } else  {\n\n            start_client(port,packets_to_send);\n\n        }\n    }\n\n    private static void start_server(int port) throws IOException {\n\n        System.out.println(\"Starting server\");\n        ServerSocket ss = new ServerSocket(port);\n\n        while (true) {\n            System.out.println(\"Listening\");\n            Socket sock = ss.accept();\n\n            try{\n\n            OutputStream os = sock.getOutputStream();\n            InputStream is = sock.getInputStream();\n\n\n            byte[] buffer = new byte[512];\n            while (true) {\n                is.read(buffer);\n                os.write(buffer);\n            }\n            } catch (Exception e){\n                System.out.println(\"Exception e\"+e.getMessage());\n            }\n        }\n    }\n\n    private static void start_client(int port, int packets_to_send) throws IOException {\n\n        System.out.println(\"Starting client\");\n        Socket sock = new Socket(\"localhost\",port);\n\n        OutputStream os = sock.getOutputStream();\n        InputStream is = sock.getInputStream();\n\n        Random rand = new Random();\n        byte[][] packets = new byte[100][256];\n\n        long start = System.currentTimeMillis();\n        for(int i = 0; i &lt; packets.length; i++) {\n            rand.nextBytes(packets[i]);\n        }\n\n        System.out.println(String.format(\"Packets generated: %d\", (System.currentTimeMillis() - start)));\n\n        int packets_sent=1;\n\n        byte[] buff = new byte[256];\n\n\n        start = System.currentTimeMillis();\n        while(packets_sent &lt; packets_to_send) {\n\n            os.write(packets[ packets_to_send % packets.length]);\n\n            is.read(buff);\n            packets_sent++;\n        }\n\n        System.out.println(String.format(\"Packets sent: %d Time: %d\", packets_sent, System.currentTimeMillis() - start));\n\n        System.out.println(\"Done!\");\n\n    }\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/miguelammatos/9d72be4a6b7ac793de86b0f386e131f0\" rel=\"nofollow noreferrer\">Gist</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1548974081, "post_id": 54470036, "comment_id": 95748278, "body": "If you want the function <code>requires_is_even()</code> to perform dynamic dispatch at runtime, it needs to accept a trait object, e.g. <code>fn requires_is_even(v: &amp;dyn IsEven)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "edited": false, "score": 0, "creation_date": 1549003804, "post_id": 54470897, "comment_id": 95755898, "body": "Thanks for the quick and comprehensive answer. I&#39;ll be bookmarking this one! Your first answer works fine for me here, but I&#39;ll study all your answers to understand it better - I think I need to learn a little more rust first though!"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1548978202, "creation_date": 1548978202, "answer_id": 54470897, "question_id": 54470036, "link": "https://stackoverflow.com/questions/54470036/calling-functions-which-return-different-types-with-shared-trait-and-pass-to-oth/54470897#54470897", "title": "Calling functions which return different types with shared trait and pass to other functions", "body": "<p><code>requires_is_even</code>, as you've written it, receives an object that implements <code>IsEven</code> by value, although all methods on the trait take <code>self</code> by shared reference. However, despite that, <code>&amp;dyn IsEven</code> doesn't automatically implement <code>IsEven</code> (though we can add that implementation ourselves, see below).</p>\n\n<p>You have a few options here:</p>\n\n<ol>\n<li><p>Change the function to receive an object implementing <code>IsEven</code> by shared reference. (This version does static dispatch.)</p>\n\n<pre><code>fn requires_is_even(v: &amp;(impl IsEven + ?Sized)) {\n     println!(\"{:?}\", v.is_even());\n}\n</code></pre>\n\n<p><em>Note:</em> The <code>?Sized</code> bound is necessary here because <code>impl Trait</code> in argument position is syntactic sugar for a type parameter, and type parameters have an implicit <code>Sized</code> bound.</p></li>\n<li><p>Change the function to receive an <code>IsEven</code> trait object by shared reference. (This version does dynamic dispatch.)</p>\n\n<pre><code>fn requires_is_even(v: &amp;dyn IsEven) {\n    println!(\"{:?}\", v.is_even());\n}\n</code></pre></li>\n<li><p>Implement <code>IsEven</code> for any shared reference to a type that implements <code>IsEven</code>.</p>\n\n<pre><code>impl&lt;T&gt; IsEven for &amp;T\nwhere\n    T: IsEven + ?Sized\n{\n    fn is_even(&amp;self) -&gt; bool {\n        (**self).is_even()\n    }\n}\n</code></pre>\n\n<p><em>Note:</em> By adding the <code>?Sized</code> bound, this <code>impl</code> applies to <code>&amp;dyn IsEven</code> as well. Trait objects (<code>dyn IsEven</code> here, <em>not</em> <code>&amp;dyn IsEven</code> or <code>Box&lt;dyn IsEven&gt;</code>) automatically implement their corresponding trait (if the trait is <a href=\"http://huonw.github.io/blog/2015/01/object-safety/\" rel=\"nofollow noreferrer\">object-safe</a>, otherwise the trait object type isn't usable at all, by definition).</p></li>\n</ol>\n"}], "owner": {"reputation": 503, "user_id": 1411129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d42da643012ab430da59672d90fdad2?s=128&d=identicon&r=PG", "display_name": "Bob", "link": "https://stackoverflow.com/users/1411129/bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 54470897, "answer_count": 1, "score": 0, "last_activity_date": 1548978202, "creation_date": 1548973048, "question_id": 54470036, "link": "https://stackoverflow.com/questions/54470036/calling-functions-which-return-different-types-with-shared-trait-and-pass-to-oth", "title": "Calling functions which return different types with shared trait and pass to other functions", "body": "<p>I'm still fairly new to rust. I would like to use a variable to choose between one of several functions which return structs of different types, but all of which have the same trait implemented. I would then like to pass the returned struct from the selected function to some functions which are meant to accept any variable which has that trait. However, I can't figure out how to do it. I've read <a href=\"https://stackoverflow.com/questions/26378842/how-do-i-overcome-match-arms-with-incompatible-types-for-structs-implementing-sa\">How do I overcome match arms with incompatible types for structs implementing same trait?</a> but I'm missing something because I still can't get it to work. The function which I pass the returned value to doesn't accept the value - see below.</p>\n\n<p>Here's a simplified example using one of the methods from the above link:</p>\n\n<pre><code>trait IsEven {\n    fn is_even(&amp;self) -&gt; bool;\n}\n\nstruct First {\n    v: u8,\n}\n\nimpl IsEven for First {\n    fn is_even(&amp;self) -&gt; bool {\n        self.v % 2 == 0\n    }\n}\n\nstruct Second {\n    v: Vec&lt;u8&gt;,\n}\n\nimpl IsEven for Second {\n    fn is_even(&amp;self) -&gt; bool {\n        self.v[0] % 2 == 0\n    }\n}\n\nfn make1() -&gt; First {\n    First{v: 5}\n}\n\nfn make2() -&gt; Second {\n    Second{v: vec![2, 3, 5]}\n}\n\n\nfn requires_is_even(v: impl IsEven) {\n    println!(\"{:?}\", v.is_even());\n}\n\nfn main() {\n    for i in 0..2 {\n        let v1;\n        let v2;\n        let v = match i {\n            0 =&gt; {\n                v1 = make1();\n                &amp;v1 as &amp;IsEven\n            }\n            _ =&gt; {\n                v2 = make2();\n                &amp;v2 as &amp;IsEven\n            }\n        };\n        requires_is_even(v);  // This is where it fails\n    }\n}\n</code></pre>\n\n<p>The error I get in this case is:</p>\n\n<pre><code>52 |         requires_is_even(v);\n   |         ^^^^^^^^^^^^^^^^ the trait `IsEven` is not implemented for `&amp;dyn IsEven`\n</code></pre>\n\n<p>I've also tried using Box as in some of the other examples in the link above, but still can't get it to work. Can anyone help?</p>\n\n<p>Thanks</p>\n\n<p>Bob</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548982818, "post_id": 54469463, "comment_id": 95750607, "body": "See also <a href=\"https://stackoverflow.com/q/29969208/155423\">How to build Rust examples without running</a>."}], "answers": [{"tags": [], "owner": {"reputation": 2085, "user_id": 1369495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e028df13ec6576b6327fb0992ffc7bf3?s=128&d=identicon&r=PG", "display_name": "ct_", "link": "https://stackoverflow.com/users/1369495/ct"}, "is_accepted": true, "score": 9, "last_activity_date": 1548974109, "creation_date": 1548974109, "answer_id": 54470219, "question_id": 54469463, "link": "https://stackoverflow.com/questions/54469463/how-do-i-run-a-projects-example-using-cargo/54470219#54470219", "title": "How do I run a project&#39;s example using Cargo?", "body": "<p>Try the following:</p>\n\n<pre><code>cd rust-procol-ftp-client\ncargo build --examples\n./target/debug/examples/ftp-get\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 21, "last_activity_date": 1561935103, "last_edit_date": 1561935103, "creation_date": 1548978613, "answer_id": 54470945, "question_id": 54469463, "link": "https://stackoverflow.com/questions/54469463/how-do-i-run-a-projects-example-using-cargo/54470945#54470945", "title": "How do I run a project&#39;s example using Cargo?", "body": "<p>You can run a specific example with:</p>\n\n<pre><code>cargo run --example name_of_example\n</code></pre>\n\n<p>where <code>name_of_example</code> is the base filename (without <code>.rs</code>)</p>\n\n<p>or to run it in release mode:</p>\n\n<pre><code>cargo run --release --example name_of_example\n</code></pre>\n\n<p>To pass arguments to the example:</p>\n\n<pre><code>cargo run --example name_of_example -- arguments go here\n</code></pre>\n\n<p><code>cargo run</code> will automatically build (or rebuild) the program first if it's out of date.</p>\n"}], "owner": {"reputation": 707, "user_id": 7868376, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/4d92cc168903249d34560da543ef621f?s=128&d=identicon&r=PG&f=1", "display_name": "picotard", "link": "https://stackoverflow.com/users/7868376/picotard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2419, "favorite_count": 2, "accepted_answer_id": 54470219, "answer_count": 2, "score": 8, "last_activity_date": 1561935103, "creation_date": 1548969904, "last_edit_date": 1549056021, "question_id": 54469463, "link": "https://stackoverflow.com/questions/54469463/how-do-i-run-a-projects-example-using-cargo", "title": "How do I run a project&#39;s example using Cargo?", "body": "<p>I'm trying to run the example code <a href=\"https://github.com/basiliscos/rust-procol-ftp-client\" rel=\"noreferrer\">from this project</a>. Following the instructions on the Cargo docs, I did the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>git clone https://github.com/basiliscos/rust-procol-ftp-client\ncd rust-procol-ftp-client\ncargo run \ncargo test\n</code></pre>\n\n<p><code>cargo test</code> should also have compiled <a href=\"https://github.com/basiliscos/rust-procol-ftp-client/blob/master/examples/ftp-get.rs\" rel=\"noreferrer\">the example</a> according to the Rust docs. </p>\n\n<p>Although <code>cargo test</code> executes successfully, when I change into the <code>target/debug</code> directory, I don't find an executable for <code>ftp-get</code> (which is the example code). The <code>target/debug/examples</code> directory is also empty.</p>\n\n<p>What is the best way to go about running this example? </p>\n"}, {"tags": ["reference", "rust", "borrow-checker", "coercion"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1548957854, "post_id": 54466319, "comment_id": 95741257, "body": "This question conflates two unrelated things. Your code has essentially nothing to do with your question - whether it works or doesn&#39;t work depends on <code>Deref</code> trait, not <code>Borrow</code> trait. If you want to fix the code, you should reword the question accordingly. If you want to know about difference between <code>AsRef</code> and <code>Borrow</code>, then your code is mostly irrelevant (and there&#39;s probably a duplicate question about that already). See also: <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/borrow-and-asref.html\" rel=\"nofollow noreferrer\">Borrow and AsRef</a> in the documentation."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 2, "creation_date": 1548980177, "post_id": 54466319, "comment_id": 95749999, "body": "I reformulated the question so that it focuses on the actual error, instead of speculating about differences between <code>Borrow</code> and <code>AsRef</code> (both traits are irrelevant for this error message). If you want to know what the difference between <code>Borrow</code> and <code>AsRef</code> is, then please ask a new question (I think it would even have good chances to become canonical). If you disagree with the edit, then please roll it back and reformulate so that your question has something to do with your code and the error message."}], "answers": [{"tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 3, "last_activity_date": 1548980716, "last_edit_date": 1548980716, "creation_date": 1548958066, "answer_id": 54466780, "question_id": 54466319, "link": "https://stackoverflow.com/questions/54466319/how-to-coerce-reference-b-into-a-for-b-b-in-let-a-a-b/54466780#54466780", "title": "How to coerce reference `&amp;b` into `&amp;A` for `b: B` in `let a: &amp;A = &amp;b;`?", "body": "<p>The two examples with <code>Box</code> and <code>String</code> work not because of the <code>Borrow</code> trait, but because of the <code>Deref</code> trait. The box <code>&amp;b</code> in your example can be coerced into <code>&amp;Age</code> because <code>Box&lt;Age&gt;</code> implements <code>Deref&lt;Target = Age&gt;</code>. Similarly, <code>String</code> has a <code>Deref</code> implementation so that the String reference <code>&amp;s</code> can be coerced into <code>&amp;str</code>. It would work for your <code>User</code> in exactly the same way:</p>\n\n<pre><code>use std::ops::Deref;\n\nimpl Deref for User { // That's bad, don't do that.\n    type Target = Age;\n    fn deref(&amp;self) -&gt; &amp;Age {\n        &amp;self.age\n    }\n}\n</code></pre>\n\n<p>with this in scope, the following now compiles:</p>\n\n<pre><code>let u = User { age: Age(8) };\nlet a: &amp;Age = &amp;u;\n</code></pre>\n\n<p>Note that the example is somewhat artificial and not idiomatic: nobody would expect <code>User</code> to behave like a pointer type to <code>Age</code>. Similarly, nobody would expect that <code>user.borrow()</code> borrows <code>Age</code> instead of a <code>User</code>, that's not what the <code>Borrow</code> trait is for.</p>\n"}], "owner": {"reputation": 1263, "user_id": 5817767, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/209584382725014/picture?type=large", "display_name": "Pawan Kumar", "link": "https://stackoverflow.com/users/5817767/pawan-kumar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 54466780, "answer_count": 1, "score": 2, "last_activity_date": 1549028404, "creation_date": 1548956383, "last_edit_date": 1549028404, "question_id": 54466319, "link": "https://stackoverflow.com/questions/54466319/how-to-coerce-reference-b-into-a-for-b-b-in-let-a-a-b", "title": "How to coerce reference `&amp;b` into `&amp;A` for `b: B` in `let a: &amp;A = &amp;b;`?", "body": "<p>I have the following structs:</p>\n\n<pre><code>struct Age(u8);\nstruct User {\n    age: Age,\n}\n</code></pre>\n\n<p>I want to coerce a borrowed value of type <code>User</code> into an <code>&amp;Age</code>, like in the following examples:</p>\n\n<pre><code>let s = String::from(\"abcd\");\nlet z: &amp;str = &amp;s; // This works\n\nlet b = Box::new(Age(8));\nlet a: &amp;Age = &amp;b; // This also works\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"nofollow noreferrer\">documentation for <code>Borrow</code></a> mentions that type <code>A</code> can be borrowed as some other type <code>B</code> if <code>A</code> implements <code>Borrow&lt;B&gt;</code>, so I tried to implement <code>Borrow&lt;Age&gt;</code> for <code>User</code>:</p>\n\n<pre><code>use std::borrow::Borrow;\n\nimpl Borrow&lt;Age&gt; for User {\n    fn borrow(&amp;self) -&gt; &amp;Age {\n        &amp;self.age\n    }\n}\n\nfn main() {\n    let u = User { age: Age(8) };\n    let a: &amp;Age = u.borrow();     // Works\n    let a: &amp;Age = &amp;u;             // Error\n}\n</code></pre>\n\n<p>This is the error message that I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:23:19\n   |\n23 |     let a: &amp;Age = &amp;u; // Error: expected struct `Age`, found struct `User`\n   |                   ^^ expected struct `example::Age`, found struct `example::User`\n   |\n   = note: expected type `&amp;example::Age`\n              found type `&amp;example::User`\n</code></pre>\n\n<p>Am I missing something? How do I coerce <code>&amp;u</code> into <code>&amp;Age</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548959257, "post_id": 54466140, "comment_id": 95741974, "body": "It&#39;s not possible in this context, because array size can&#39;t be share between all implementations of trait <code>Test</code> that could compile one day but not now. Use a vector or do not use default implementation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548963133, "post_id": 54466140, "comment_id": 95743819, "body": "This is a known issue, covered by the duplicate and <a href=\"https://github.com/rust-lang/rust/issues/42863\" rel=\"nofollow noreferrer\">Rust issue #42863</a>."}, {"owner": {"reputation": 448, "user_id": 4584387, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/gRotu.png?s=128&g=1", "display_name": "tga", "link": "https://stackoverflow.com/users/4584387/tga"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548966379, "post_id": 54466140, "comment_id": 95745264, "body": "@Shepmaster Thanks for the info"}], "owner": {"reputation": 448, "user_id": 4584387, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/gRotu.png?s=128&g=1", "display_name": "tga", "link": "https://stackoverflow.com/users/4584387/tga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1548963093, "answer_count": 0, "score": 4, "last_activity_date": 1548963074, "creation_date": 1548955685, "last_edit_date": 1548963074, "question_id": 54466140, "link": "https://stackoverflow.com/questions/54466140/could-not-use-trait-associated-constants-as-an-array-length", "closed_reason": "Duplicate", "title": "Could not use trait associated constants as an array length?", "body": "<p>consider the following trait:</p>\n\n<pre><code>trait Test {\n    const COUNT: usize = 12;\n    fn test() {\n        let arr: [f32; Self::COUNT]; // doesn't work\n        dbg!(Self::COUNT); // works\n    }\n}\n</code></pre>\n\n<p><code>dbg!(Self::COUNT)</code> works fine but I can't declare an array with <code>[f32; Self::COUNT]</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no associated item named `COUNT` found for type `Self` in the current scope\n --&gt; src/lib.rs:4:24\n  |\n4 |         let arr: [f32; Self::COUNT];\n  |                        ^^^^^^^^^^^ associated item not found in `Self`\n  |\n  = help: items from traits can only be used if the trait is implemented and in scope\n  = note: the following trait defines an item `COUNT`, perhaps you need to implement it:\n          candidate #1: `Test`\n\n</code></pre>\n\n<p>However this works in global constants:</p>\n\n<pre><code>const G_COUNT: usize = 1;\nconst G_ARR: [i32; G_COUNT] = [1]; // works\n</code></pre>\n\n<p>Is there a way to use trait associated constants like global constants?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ee1098f20f23b5c7cca0bb88d38a887\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548954109, "post_id": 54465400, "comment_id": 95739274, "body": "<a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch19-04-advanced-types.html</a> for other people like me who trust the compiler."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1549020499, "last_edit_date": 1549020499, "creation_date": 1548955061, "answer_id": 54465962, "question_id": 54465400, "link": "https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires/54465962#54465962", "title": "Why does returning `Self` in trait work, but returning `Option&lt;Self&gt;` requires `Sized`?", "body": "<p>It's in the error message:</p>\n\n<blockquote>\n  <p><code>= note: required by `std::option::Option`</code></p>\n</blockquote>\n\n<p><code>Option</code> requires the type to be <code>Sized</code> because it allocates on the stack. All type parameters to a concrete type definition are bound to <code>Sized</code> by default. Some types choose to opt out with a <code>?Sized</code> bound but <code>Option</code> does not.</p>\n\n<blockquote>\n  <p>Why doesn't the first trait definition already trigger that error?</p>\n</blockquote>\n\n<p>I think this is a conscious design decision, due to history, future-proofing and ergonomics.</p>\n\n<p>First of all, <code>Self</code> is not assumed to be <code>Sized</code> in a trait definition because people are going to forget to write <code>where Self: ?Sized</code>, and those traits would be less useful. Letting traits be as flexible as possible <em>by default</em> is a sensible design philosophy; push errors to impls or make developers explicitly add constraints where they are needed.</p>\n\n<p>With that in mind, imagine that trait definitions did <em>not</em> permit unsized types to be returned by a method. <em>Every</em> trait method that returns <code>Self</code> would have to also specify <code>where Self: Sized</code>. Apart from being a lot of visual noise, this would be bad for future language development: if unsized types are allowed to be returned in the future (e.g. to be used with <a href=\"https://github.com/rust-lang/rfcs/pull/1228\" rel=\"nofollow noreferrer\">placement-new</a>), then all of these existing traits would be overly constrained.</p>\n"}, {"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 3, "creation_date": 1548977368, "post_id": 54468427, "comment_id": 95749324, "body": "BTW, <code>Box&lt;dyn FnOnce()&gt;</code> works on nightly now (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9b00c85886a8f8447f8763d577697d16\" rel=\"nofollow noreferrer\">example</a>). See <a href=\"https://github.com/rust-lang/rust/pull/54183\" rel=\"nofollow noreferrer\">#54183</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1548978398, "post_id": 54468427, "comment_id": 95749601, "body": "@FrancisGagn&#233; hmm. <a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/unsized-locals.html\" rel=\"nofollow noreferrer\">The docs</a> haven\u2019t been updated so I didn\u2019t even think to try."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1595882328, "last_edit_date": 1595882328, "creation_date": 1548964988, "answer_id": 54468427, "question_id": 54465400, "link": "https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires/54468427#54468427", "title": "Why does returning `Self` in trait work, but returning `Option&lt;Self&gt;` requires `Sized`?", "body": "<p>There are two sets of checks happening here, which is why the difference appears confusing.</p>\n<ol>\n<li><p>Each type in the function signature is checked for validity. <code>Option</code> inherently requires <code>T: Sized</code>. A return type that doesn't require <code>Sized</code> is fine:</p>\n<pre><code>trait Works {\n    fn foo() -&gt; Box&lt;Self&gt;;\n}\n</code></pre>\n<p>The <a href=\"https://stackoverflow.com/a/54465962/155423\">existing answer</a> covers this well.</p>\n</li>\n<li><p>Any function <strong>with a body</strong> also checks that all of the parameters are <code>Sized</code>. Trait functions without a body do not have this check applied.</p>\n<p>Why is this useful? Allowing unsized types to be used in trait methods is a key part of allowing <em>by-value trait objects</em>, a very useful feature. For example, <code>FnOnce</code> does not require that <code>Self</code> be <code>Sized</code>:</p>\n<pre><code>pub trait FnOnce&lt;Args&gt; {\n    type Output;\n    extern &quot;rust-call&quot; fn call_once(self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n<pre><code>fn call_it(f: Box&lt;dyn FnOnce() -&gt; i32&gt;) -&gt; i32 {\n    f()\n}\n\nfn main() {\n    println!(&quot;{}&quot;, call_it(Box::new(|| 42)));\n}\n</code></pre>\n</li>\n</ol>\n<p>A big thanks to <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/144729-wg-traits/topic/questions.20from.20Stack.20Overflow/near/157298199\" rel=\"nofollow noreferrer\">pnkfelix and nikomatsakis for answering my questions on this topic</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1549017193, "last_edit_date": 1549017193, "creation_date": 1549016653, "answer_id": 54477490, "question_id": 54465400, "link": "https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires/54477490#54477490", "title": "Why does returning `Self` in trait work, but returning `Option&lt;Self&gt;` requires `Sized`?", "body": "<p>The issue with <code>Option</code> is just the tip of the iceberg and the others have already explained that bit; I'd like to elaborate on <a href=\"https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires/54477490#comment95740147_54465962\">your question in the comment</a>:</p>\n\n<blockquote>\n  <p>is there a way I can implement fn <code>foo() -&gt; Self</code> with <code>Self</code> not being\n  <code>Sized</code>? Because if there is no way to do that, I don't see the point in\n  allowing to return <code>Self</code> without a <code>Sized</code> bound.</p>\n</blockquote>\n\n<p>That method indeed makes it impossible (at least currently) to utilize the trait as a trait object due to 2 issues:</p>\n\n<ol>\n<li><a href=\"https://doc.rust-lang.org/error-index.html#method-has-no-receiver\" rel=\"nofollow noreferrer\">Method has no receiver</a>:</li>\n</ol>\n\n<blockquote>\n  <p>Methods that do not take a <code>self</code> parameter can't be called since there\n  won't be a way to get a pointer to the method table for them.</p>\n</blockquote>\n\n<ol start=\"2\">\n<li><a href=\"https://doc.rust-lang.org/error-index.html#method-references-the-self-type-in-its-arguments-or-return-type\" rel=\"nofollow noreferrer\">Method references the Self type in its arguments or return type</a>:</li>\n</ol>\n\n<p>This renders the trait not object-safe, i.e. it is impossible to create a trait object from it.</p>\n\n<p>You are still perfectly able to use it for other things, though:</p>\n\n<pre><code>trait Works {\n    fn foo() -&gt; Self;\n}\n\n#[derive(PartialEq, Debug)]\nstruct Foo;\n\nimpl Works for Foo {\n    fn foo() -&gt; Self {\n        Foo\n    }\n}\n\nfn main() {\n    assert_eq!(Foo::foo(), Foo);\n}\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4822, "favorite_count": 0, "accepted_answer_id": 54468427, "answer_count": 3, "score": 16, "last_activity_date": 1595882328, "creation_date": 1548953219, "question_id": 54465400, "link": "https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires", "title": "Why does returning `Self` in trait work, but returning `Option&lt;Self&gt;` requires `Sized`?", "body": "<p>This trait definition compiles fine:</p>\n\n<pre><code>trait Works {\n    fn foo() -&gt; Self;\n}\n</code></pre>\n\n<p>This, however, does lead to an error:</p>\n\n<pre><code>trait Errors {\n    fn foo() -&gt; Option&lt;Self&gt;;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `Self` cannot be known at compilation time\n --&gt; src/lib.rs:6:5\n  |\n6 |     fn foo() -&gt; Option&lt;Self&gt;;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `Self`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = help: consider adding a `where Self: std::marker::Sized` bound\n  = note: required by `std::option::Option`\n</code></pre>\n\n<p>With the <code>: Sized</code> supertrait bound, it works.</p>\n\n<p>I know that the <code>Self</code> type in traits is not automatically bound to be <code>Sized</code>. And I understand that <code>Option&lt;Self&gt;</code> cannot be returned (via the stack) unless it is sized (which, in turn, requires <code>Self</code> to be sized). However, the same would go for <code>Self</code> as return type, right? It also cannot be stored on the stack unless it's sized.</p>\n\n<p><strong>Why doesn't the first trait definition already trigger that error?</strong></p>\n\n<p>(<em><a href=\"https://stackoverflow.com/questions/30938499/why-is-the-sized-bound-necessary-in-this-trait\">This question</a> is related, but it doesn't answer my exact question \u2013 unless I didn't understand it.</em>)</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1548937924, "post_id": 54460475, "comment_id": 95729257, "body": "because you limit the lifetime, by writhing it this way. There is no reason to do that in your exemple. Compiler in 2018 edition give an accurate explanation."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1548938761, "post_id": 54460475, "comment_id": 95729761, "body": "Tl;dr the duplicate: Because <code>&amp;mut T</code> is invariant in <code>T</code>, <code>y(a)</code> has to reborrow <code>a</code> for all of <code>&#39;r</code>. In general, if you don&#39;t specify any lifetimes, they will be minimally constrained; if you specify a single lifetime and use it everywhere, they will be maximally constrained. If you get a compiler error, and try to fix it by creating one lifetime and using it everywhere, you&#39;re likely to accidentally overconstrain your code, which leads to hard-to-debug errors. Think hard before you use the same lifetime in two different places."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1548940882, "last_edit_date": 1548940882, "creation_date": 1548938415, "answer_id": 54460824, "question_id": 54460475, "link": "https://stackoverflow.com/questions/54460475/why-cant-i-use-mutable-reference-to-a-vec-of-references-twice-if-it-has-same-li/54460824#54460824", "title": "Why can&#39;t I use mutable reference to a Vec of references twice if it has same lifetime as its content?", "body": "<p>In this function:</p>\n\n<pre><code>fn y&lt;'r&gt;(a: &amp;'r mut Vec&lt;&amp;'r A&gt;) {}\n</code></pre>\n\n<p>you are asking that <code>&amp;A</code> has the same lifetime as the (mutable) reference to the <code>Vec</code>. If the reference wasn't mutable, you'd be asking that the lifetime of the <code>&amp;A</code> <em>outlives</em> the reference to the vector, and there wouldn't be a problem. However, mutability makes lifetimes <em>invariant</em>.</p>\n\n<p>Inside this function:</p>\n\n<pre><code>fn x&lt;'r&gt;(a: &amp;'r mut Vec&lt;&amp;'r A&gt;) {\n    y(a);\n    y(a);\n}\n</code></pre>\n\n<p>the lifetime of <code>a</code> is the full duration of the function because it's used in every statement. The borrow checker believes (based on the constraint on the lifetimes in <code>y</code>) that <code>y</code> needs the <code>&amp;A</code> for the full lifetime of the vector reference. So the second time you call <code>y</code>, it thinks the reference is still in use.</p>\n\n<p>The reason why removing the explicit lifetimes fixes it is because the borrow checker will infer different lifetimes:</p>\n\n<pre><code>fn y&lt;'r, 's&gt;(a: &amp;'r mut Vec&lt;&amp;'s A&gt;) {}\n</code></pre>\n\n<p>Now they are not tied together, the borrow checker no longer believes that <code>y</code> needs <code>&amp;A</code> for the whole lifetime of <code>a</code>.</p>\n"}], "owner": {"reputation": 4135, "user_id": 1336234, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/078607c20f8ed7fee9f786bf2b19a4f9?s=128&d=identicon&r=PG", "display_name": "OlegTheCat", "link": "https://stackoverflow.com/users/1336234/olegthecat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "closed_date": 1548950498, "answer_count": 1, "score": 1, "last_activity_date": 1548940882, "creation_date": 1548937220, "last_edit_date": 1548937875, "question_id": 54460475, "link": "https://stackoverflow.com/questions/54460475/why-cant-i-use-mutable-reference-to-a-vec-of-references-twice-if-it-has-same-li", "closed_reason": "Duplicate", "title": "Why can&#39;t I use mutable reference to a Vec of references twice if it has same lifetime as its content?", "body": "<pre><code>struct A;\n\nfn y&lt;'r&gt;(a: &amp;'r mut Vec&lt;&amp;'r A&gt;) {}\n\nfn x&lt;'r&gt;(a: &amp;'r mut Vec&lt;&amp;'r A&gt;) {\n    y(a);\n    y(a);\n}\n</code></pre>\n\n<p>Compilation of this code fails, saying that <code>*a</code> cannot be mutably borrowed second time. When I make the signature look like this <code>(a: &amp;'a mut Vec&lt;&amp;A&gt;)</code>, i.e. remove a lifetime from a reference of <code>Vec</code>s content, it compiles just fine.</p>\n\n<p>Why the original code cannot be compiled? I'm unable to see an issue here. For me lifetimes on reference to vector and its content mean just that vector and its content live for the same amount of \"time\". Where am I wrong?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1548926544, "post_id": 54456343, "comment_id": 95722416, "body": "But then when you call <code>run</code> from the web assembly, which function should get called?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1548927813, "post_id": 54456343, "comment_id": 95723166, "body": "Not an answer to your question, but do you know about <code>wasm-bindgen</code>? That seems to be the de-facto solution for WASM stuff right now."}], "answers": [{"comments": [{"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1548961695, "post_id": 54464399, "comment_id": 95743091, "body": "Thanks. Just to be 100% clear. It&#39;s the &quot;extern&quot; keyword that effectively takes the fn name from within a module and makes it available in the global namespace?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 2, "creation_date": 1548962298, "post_id": 54464399, "comment_id": 95743398, "body": "@AndrewMackenzie no, it&#39;s <code>no_mangle</code>: &quot;do not mangle this function name so that it&#39;s (very likely to be) unique in the global namespace, I will handle it.&quot;"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1548949980, "creation_date": 1548949980, "answer_id": 54464399, "question_id": 54456343, "link": "https://stackoverflow.com/questions/54456343/how-to-extern-a-function-in-multiple-modules-with-the-same-name/54464399#54464399", "title": "How to &quot;extern&quot; a function in multiple modules with the same name?", "body": "<p>No, you cannot give multiple things the same name in a global namespace. That's kind of the definition of what a name and a namespace is. You will need to export them as two different names.</p>\n\n<p>I prefer to have a single location that exports things so it's easier to see and prevent clashes. Additionally, your symbols should be unique among <strong>all</strong> libraries that will ever be linked with your library. That's why most high-quality C projects use the library name in every single public method.</p>\n\n<pre><code>mod one {\n    pub fn run() {\n        println!(\"One\");\n    }\n}\n\nmod two {\n    pub fn run() {\n        println!(\"Two\");\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn mylib_one_run() {\n    one::run()\n}\n\n#[no_mangle]\npub extern \"C\" fn mylib_two_run() {\n    two::run()\n}\n\nfn main() {\n    one::run();\n    two::run();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53364002/155423\">How do I apply a macro attribute to a function defined in a separate module?</a></li>\n</ul>\n"}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 54464399, "answer_count": 1, "score": 1, "last_activity_date": 1548950047, "creation_date": 1548923710, "last_edit_date": 1548950047, "question_id": 54456343, "link": "https://stackoverflow.com/questions/54456343/how-to-extern-a-function-in-multiple-modules-with-the-same-name", "title": "How to &quot;extern&quot; a function in multiple modules with the same name?", "body": "<p>I have a lib project with multiple modules called <code>one</code> and <code>two</code>, in separate files. Each module has a function called <code>run</code>:</p>\n\n<pre><code>mod one {\n    pub fn run() {\n        println!(\"One\");\n    }\n}\n\nmod two {\n    pub fn run() {\n        println!(\"Two\");\n    }\n}\n\nfn main() {\n    one::run();\n    two::run();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67393a8b07045579d8de0ffb59a2d2dd\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I would like to compile each of these files/functions to WebAssembly and then be able to load them and call the function <code>run()</code>.</p>\n\n<p>I believe I have to add the <code>#[no_mangle]</code> directive and mark them as <code>extern \"C\"</code> functions. When I do that, then there is a name clash on the <code>run</code> function, despite the module structure.</p>\n\n<p>This is the modified version that won't compile:</p>\n\n<pre><code>mod one {\n    #[no_mangle]\n    pub extern \"C\" fn run() {\n        println!(\"One\");\n    }\n}\n\nmod two {\n    #[no_mangle]\n    pub extern \"C\" fn run() {\n        println!(\"Two\");\n    }\n}\n\nfn main() {\n    one::run();\n    two::run();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69c6f77605709af52d3eda7257285c3b\" rel=\"nofollow noreferrer\">Playground</a> </p>\n\n<p>Is there a way to have multiple modules in a project, each with a function with the same name, such that I can compile the files with the function to WebAssembly, preserving the function name?</p>\n"}, {"tags": ["struct", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548907603, "post_id": 54453085, "comment_id": 95714530, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54453085/edit\">edit</a> your question to include it. A strong emphasis is placed on <b>minimal</b> (this is far too long) and <b>complete</b> (it&#39;s not valid Rust syntax, and does not produce the error you claim it does). Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548907797, "post_id": 54453085, "comment_id": 95714577, "body": "Please also take some time in the future to investigate rustfmt and clippy, both of which will make your code more idiomatic."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548907848, "post_id": 54453085, "comment_id": 95714591, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>set_specs</code> instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548907955, "post_id": 54453085, "comment_id": 95714616, "body": "I&#39;ve read through your prose and code multiple times and I <i>still</i> don&#39;t know what you are asking. A hyper-focused MCVE is really going to help you out here (and in 99% of all programming questions in any context)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1548946939, "post_id": 54453085, "comment_id": 95734806, "body": "I&#39;m not sure, but I <i>think</i> you want to do something where the type of one thing depends on the value of another. This is going to be difficult or impossible in Rust. Types in Rust are only a compile time affair; you can&#39;t have a value of more than one type, or query a value for its type, or have a type that depends on a condition only known at runtime. You can do <i>some</i> reflection-ish stuff with <code>Any</code>, but I doubt that will solve your problem (whatever it is)."}, {"owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1548949240, "post_id": 54453085, "comment_id": 95736392, "body": "@Shepmaster I&#39;ve tried to clarify things a bit, I&#39;ll go over again later when I have time but right now the rust-specific conventions might not match what I&#39;ve used for vairable naming."}, {"owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1548949345, "post_id": 54453085, "comment_id": 95736452, "body": "@trentcl that is kind of what I&#39;m going for, but I get that is tough when things must be defined at compile time. Really I am just trying to come up with a way to reference an object that contains both the struct representing the configured specs which are specific to that type of device and also the specifications which are device agnostic."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549034369, "post_id": 54474453, "comment_id": 95771594, "body": "<i>Rust is not an object-oriented language</i> \u2014 this is a hotly contested point, often depending on what you think &quot;object-oriented&quot; is. For example, <b>I</b> know that Rust is OO because you create objects that have associated data and methods. <a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" rel=\"nofollow noreferrer\">From Wikipedia</a>: <i>Object-oriented programming (OOP) is a programming paradigm based on the concept of &quot;objects&quot;, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549034391, "post_id": 54474453, "comment_id": 95771605, "body": "Just because Rust does not have <b>inheritance</b> does not make it non-OO."}, {"owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "edited": false, "score": 0, "creation_date": 1549044349, "post_id": 54474453, "comment_id": 95776773, "body": "Thanks, I believe this is what I&#39;m after. This discussion has been illuminating."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1549034256, "last_edit_date": 1549034256, "creation_date": 1549004407, "answer_id": 54474453, "question_id": 54453085, "link": "https://stackoverflow.com/questions/54453085/how-to-link-a-traits-generic-type-to-some-other-element-in-the-implemented-type/54474453#54474453", "title": "How to link a traits generic type to some other element in the implemented type", "body": "<blockquote>\n  <p>Certain specifications will need to be configured for all devices and I have created a struct which, in an OO paradigm would be a parent class  </p>\n</blockquote>\n\n<p>Rust is not an object-oriented language, so it is bad idea to apply OO paradigms. There's no reason to use traits too. Rust traits are for defining common behavior, not common data.  </p>\n\n<p>I believe you should use composition instead of inheritance.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum DeviceSpecificCfg {\n    RaspberryPi(RaspberryPiCfg),\n    Esp8266(Esp8266Cfg),\n    // ...\n}\n\nstruct Devicecfg {\n    // common fields ...\n    device_specific_cfg: DeviceSpecificCfg\n}\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 54474453, "answer_count": 1, "score": 0, "last_activity_date": 1549160007, "creation_date": 1548907431, "last_edit_date": 1549160007, "question_id": 54453085, "link": "https://stackoverflow.com/questions/54453085/how-to-link-a-traits-generic-type-to-some-other-element-in-the-implemented-type", "title": "How to link a traits generic type to some other element in the implemented type", "body": "<p>I am trying to create a struct that contains a generic field which is type-specified based on another field. This type is to be one of several structs I have defined.</p>\n\n<p>Essentially what I am trying to do here is create a module which takes care of device configuration. This is meant to handle a bunch of different device types. Certain specifications will need to be configured for all devices and I have created a struct which, in an OO paradigm would be a parent class (here denoted as DeviceCfg). The device-type-specific specs would then represent child classes. (These are denoted as RaspberryPiCfg,Esp8266Cfg, ect).</p>\n\n<p>I am trying to structure things such that I can reference a single object which merges both the generic specs (that apply to all devices) as well as the device-type-specific specs. </p>\n\n<pre><code>use std::net::{Ipv4Addr};\nuse std::any::Any;\n\n\n//this struct is made to show the device-type-specific configurable items\nstruct RaspberryPiCfg {\n    led_pin : u8,\n    //GPIO pin connected to the LED strip pixels (must support PWM)\n    led_freq_hz : u32,\n    //LED signal frequency in Hz (usually 800kHz)\n    led_dma : u8,\n    //DMA channel used for generating PWM signal (try 5)\n    brightness : u8,\n    //Brightness of LED strip between 0 and 255\"\n    led_invert : bool,\n    //Set True if using an inverting logic level converter\n    software_gamma_correction : bool\n    //Set to True because Raspberry Pi doesn't use hardware dithering\n    }\n\n//this creates a default function which sets all configurable items\nimpl Default for RaspberryPiCfg {\n    fn default() -&gt; RaspberryPiCfg {\n        RaspberryPiCfg {\n            led_pin : 18,\n            led_freq_hz : 800_000,\n            led_dma : 5,\n            brightness : 255,\n            led_invert : true,\n            software_gamma_correction : true\n        }\n    }\n}\n //this struct is made to show the device-type-specific configurable items\n struct Esp8266Cfg {\n    udp_ip : Ipv4Addr,\n    //IP address of the ESP8266. Must match IP in ws2812_controller.ino\n    udp_port : u16,\n    //Port number used for socket communication between Python and ESP8266\"\n    software_gamma_correction : bool\n    //Set to True because Raspberry Pi doesn't use hardware dithering\n}\n\n\n//this creates a default function which sets all configurable items\nimpl Default for Esp8266Cfg {\n   fn default() -&gt; Esp8266Cfg {\n        Esp8266Cfg {\n            udp_ip : Ipv4use std::net::{Ipv4Addr};\n            udp_port : 7777,\n            software_gamma_correction : false\n        }\n    }\n}\n//this struct is made to show the device-type-specific configurable items\nstruct BlinkstickCfg {\n    software_gamma_correction : bool\n    //Set to True because BlinkstickCfg doesn't use hardware dithering\n}\n\n\n//this creates a default function which sets all configurable items\nimpl Default for BlinkstickCfg {\n    fn default() -&gt; BlinkstickCfg {\n        BlinkstickCfg {\n            software_gamma_correction : true\n        }\n    }\n}\n\nenum DeviceType {\n    ESP8266,\n    RASPBERRY_PI,\n    BLINKSTICK\n}\n\nenum StatusType {\n   ERROR,\n   OK\n}\n\n//this struct is made to show the configurable items that are relevant\n//for all devices\nstruct Devicecfg {\n    use_gui : bool,\n    //Whether or not to display a PyQtGraph GUI plot of visualization\n    display_fps : bool,\n    //Whether to display the FPS when running (can reduce performance)\n    pixel_num : u8,\n    //Number of pixels in the LED strip (must match ESP8266 firmware)\n    gamma_table_path : String,\n    //Location of the gamma correction table\"\n    mic_rate : u32,\n    //Sampling frequency of the microphone in Hz\n    fps : u8,\n    //Desired refresh rate of the visualization (frames per second)\n    min_led_fps : u32,\n    //Frequencies below this value will be removed during audio processing\n    max_led_fps : u32,\n    //Frequencies above this value will be removed during audio processing\n    device_type : DeviceType//,\n    //device_cfg : T\n}\n\n//I am trying to create a trait to implement which I could use to create\n//an object which when referenced represents the configuration of \n//both a devices device-type-specific specs and the specs that are not\n//specific to the type of device being configured. \ntrait DeviceSpec {\n    type specs;\n    fn setSpecs(&amp;self);\n}\n\nimpl DeviceSpec for Devicecfg {\n    fn setSpecs(&amp;self) {\n        match self.device_type {\n            DeviceType::ESP8266 =&gt; {\n                self.specs = Esp8266Cfg::default();\n            }\n            DeviceType::RASPBERRY_PI =&gt; {\n                self.specs = Ra\\spberryPiCfg::default();\n            }\n            DeviceType::BLINKSTICK =&gt; {\n                self.specs = BlinkstickCfg::default();\n            }\n        }\n    }\n}\n\nimpl Default for Devicecfg {\n    fn default() -&gt; Devicecfg {\n        Devicecfg {\n            use_gui : true,\n            display_fps : true,\n            pixel_num : 65,\n            gamma_table_path : \"directory\".to_string(),\n            mic_rate : 44_100,\n            fps : 60,\n            min_led_fps : 200,\n            max_led_fps : 12_000,\n            device_type : DeviceType::ESP8266,\n            device_cfg : self.setSpecificCfg();\n        }\n    }\n}\n</code></pre>\n\n<p>Thanks for all the help. I'm still very much a learner in rust.</p>\n"}, {"tags": ["json", "rust", "floating-point", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548906316, "post_id": 54452734, "comment_id": 95714241, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a> and <a href=\"https://stackoverflow.com/q/39383809/155423\">How to transform fields during serialization using Serde?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/54452734/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1548906461, "post_id": 54452734, "comment_id": 95714270, "body": "See also <a href=\"https://stackoverflow.com/q/44836327/155423\">Is there is a simpler way to convert a type upon deserialization?</a>; <a href=\"https://stackoverflow.com/q/37870428/155423\">Convert two types into a single type with Serde</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1548932024, "post_id": 54452734, "comment_id": 95725772, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/46753955/how-to-transform-fields-during-deserialization-using-serde\">How to transform fields during deserialization using Serde?</a>"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1548940316, "post_id": 54452734, "comment_id": 95730748, "body": "Adding up all of those suggested posts kind of leads to an answer (that answer being, write a custom serializer / deserializer and figure it out yourself) but considering this is a not-rare use case with some closed-but-not-resolved github issues on the serde project, it seems like having a canonical answer (or better yet, a serde flag) would be a bit nicer."}], "answers": [{"tags": [], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "is_accepted": false, "score": 1, "last_activity_date": 1548949315, "last_edit_date": 1548949315, "creation_date": 1548948977, "answer_id": 54464085, "question_id": 54452734, "link": "https://stackoverflow.com/questions/54452734/how-to-deserialize-nan-as-nan-with-serde-json/54464085#54464085", "title": "How to deserialize &quot;NaN&quot; as `nan` with serde_json?", "body": "<p>It actually seems like using a custom deserializer inside a Vec (or Map or etc.) is an open issue on serde and has been for a little over a year (as of time of writing): <a href=\"https://github.com/serde-rs/serde/issues/723\" rel=\"nofollow noreferrer\">https://github.com/serde-rs/serde/issues/723</a></p>\n\n<p>I believe the solution is to write a custom deserializer for <code>f64</code> (which is fine), as well as everything which uses <code>f64</code> as a subthing (e.g. <code>Vec&lt;f64&gt;</code>, <code>HashMap&lt;K, f64&gt;</code>, etc.). Unfortunately it does not seem like these things are composable, as implementations of these methods look like </p>\n\n<pre><code>deserialize&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Vec&lt;f64&gt;, D::Error&gt;\nwhere D: Deserializer&lt;'de&gt; { /* snip */ }\n</code></pre>\n\n<p>and once you have a Deserializer you can only interact with it through visitors.</p>\n\n<p>Long story short, I eventually got it working, but it seems like a lot of code that shouldn't be necessary. Posting it here in the hopes that either (a) someone knows how to clean this up, or (b)  this is really how it should be done, and this answer will be useful to someone. I've spent a whole day fervently reading docs and making trial and error guesses, so maybe this will be useful to someone else. The functions <code>(de)serialize_float(s)</code> should be used with an appropriate <code>#[serde( (de)serialize_with=\"etc.\" )]</code> above the field name.</p>\n\n<pre><code>use serde::de::{self, SeqAccess, Visitor};\nuse serde::ser::SerializeSeq;\nuse serde::{Deserialize, Deserializer, Serialize, Serializer};\nuse std::fmt;\n\ntype Float = f64;\n\nconst NAN: Float = std::f64::NAN;\n\nstruct NiceFloat(Float);\n\nimpl Serialize for NiceFloat {\n    #[inline]\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        serialize_float(&amp;self.0, serializer)\n    }\n}\n\npub fn serialize_float&lt;S&gt;(x: &amp;Float, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\nwhere\n    S: Serializer,\n{\n    if x.is_nan() {\n        serializer.serialize_str(\"NaN\")\n    } else {\n        serializer.serialize_f64(*x)\n    }\n}\n\npub fn serialize_floats&lt;S&gt;(floats: &amp;[Float], serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\nwhere\n    S: Serializer,\n{\n    let mut seq = serializer.serialize_seq(Some(floats.len()))?;\n\n    for f in floats {\n        seq.serialize_element(&amp;NiceFloat(*f))?;\n    }\n\n    seq.end()\n}\n\nstruct FloatDeserializeVisitor;\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for FloatDeserializeVisitor {\n    type Value = Float;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"a float or the string \\\"NaN\\\"\")\n    }\n\n    fn visit_i32&lt;E&gt;(self, v: i32) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_i64&lt;E&gt;(self, v: i64) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_u32&lt;E&gt;(self, v: u32) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_u64&lt;E&gt;(self, v: u64) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_f32&lt;E&gt;(self, v: f32) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_f64&lt;E&gt;(self, v: f64) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v as Float)\n    }\n\n    fn visit_str&lt;E&gt;(self, v: &amp;str) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        if v == \"NaN\" {\n            Ok(NAN)\n        } else {\n            Err(E::invalid_value(de::Unexpected::Str(v), &amp;self))\n        }\n    }\n}\n\nstruct NiceFloatDeserializeVisitor;\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for NiceFloatDeserializeVisitor {\n    type Value = NiceFloat;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"a float or the string \\\"NaN\\\"\")\n    }\n\n    fn visit_f32&lt;E&gt;(self, v: f32) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(NiceFloat(v as Float))\n    }\n\n    fn visit_f64&lt;E&gt;(self, v: f64) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(NiceFloat(v as Float))\n    }\n\n    fn visit_str&lt;E&gt;(self, v: &amp;str) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        if v == \"NaN\" {\n            Ok(NiceFloat(NAN))\n        } else {\n            Err(E::invalid_value(de::Unexpected::Str(v), &amp;self))\n        }\n    }\n}\n\npub fn deserialize_float&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Float, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    deserializer.deserialize_any(FloatDeserializeVisitor)\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for NiceFloat {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        let raw = deserialize_float(deserializer)?;\n        Ok(NiceFloat(raw))\n    }\n}\n\npub struct VecDeserializeVisitor&lt;T&gt;(std::marker::PhantomData&lt;T&gt;);\n\nimpl&lt;'de, T&gt; Visitor&lt;'de&gt; for VecDeserializeVisitor&lt;T&gt;\nwhere\n    T: Deserialize&lt;'de&gt; + Sized,\n{\n    type Value = Vec&lt;T&gt;;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"A sequence of floats or \\\"NaN\\\" string values\")\n    }\n\n    fn visit_seq&lt;S&gt;(self, mut seq: S) -&gt; Result&lt;Self::Value, S::Error&gt;\n    where\n        S: SeqAccess&lt;'de&gt;,\n    {\n        let mut out = Vec::with_capacity(seq.size_hint().unwrap_or(0));\n\n        while let Some(value) = seq.next_element()? {\n            out.push(value);\n        }\n\n        Ok(out)\n    }\n}\n\npub fn deserialize_floats&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Vec&lt;Float&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let visitor: VecDeserializeVisitor&lt;NiceFloat&gt; = VecDeserializeVisitor(std::marker::PhantomData);\n\n    let seq: Vec&lt;NiceFloat&gt; = deserializer.deserialize_seq(visitor)?;\n\n    let raw: Vec&lt;Float&gt; = seq.into_iter().map(|nf| nf.0).collect::&lt;Vec&lt;Float&gt;&gt;();\n\n    Ok(raw)\n}\n</code></pre>\n"}], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 548, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1548949315, "creation_date": 1548904050, "last_edit_date": 1548940204, "question_id": 54452734, "link": "https://stackoverflow.com/questions/54452734/how-to-deserialize-nan-as-nan-with-serde-json", "title": "How to deserialize &quot;NaN&quot; as `nan` with serde_json?", "body": "<p>I have datatypes which look like this:</p>\n\n<pre><code>#[derive(Serialize, Deserialize, Debug)]\n#[serde(rename_all = \"camelCase\")]\npub struct Matrix {\n    #[serde(rename = \"numColumns\")]\n    pub num_cols: usize,\n    #[serde(rename = \"numRows\")]\n    pub num_rows: usize,\n    pub data: Vec&lt;f64&gt;,\n}\n</code></pre>\n\n<p>My JSON bodies look something like this:</p>\n\n<pre><code>{\n    \"numRows\": 2,\n    \"numColumns\": 1,\n    \"data\": [1.0, \"NaN\"]\n}\n</code></pre>\n\n<p>This is the serialization provided by Jackson (from a Java server we use), and is valid JSON. Unfortunately if we call <code>serde_json::from_str(&amp;blob)</code> we get an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error(\"invalid type: string \"NaN\", expected f64\", [snip]\n</code></pre>\n\n<p>I understand there are subtleties around floating point numbers and people get very opinionated about the way things ought to be. I respect that. Rust in particular likes to be very opinionated, and I like that.</p>\n\n<p>However at the end of the day these JSON blobs are what I'm going to receive, and I need that <code>\"NaN\"</code> string to deserialize to some <code>f64</code> value where <code>is_nan()</code> is true, and which serialized back to the string <code>\"NaN\"</code>, because the rest of the ecosystem uses Jackson and this is fine there.</p>\n\n<p>Can this be achieved in a reasonable way?</p>\n\n<p>Edit: the suggested linked questions talk about overriding the derived derializer, but they do not explain how to deserialize floats specifically.</p>\n"}, {"tags": ["async-await", "rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1548904880, "post_id": 54452736, "comment_id": 95713930, "body": "I am sure I were tried this before but it does not work... But now it does. Thanks anyways."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1548908826, "last_edit_date": 1548908826, "creation_date": 1548904058, "answer_id": 54452736, "question_id": 54452339, "link": "https://stackoverflow.com/questions/54452339/how-do-i-erase-the-type-of-future-in-the-new-future-api/54452736#54452736", "title": "How do I erase the type of future in the new future API?", "body": "<p>Wrap the <code>Box</code> in a <code>Pin</code>:</p>\n\n<pre><code>impl Bar for () {\n    type Output = Pin&lt;Box&lt;dyn Future&lt;Output = ()&gt;&gt;&gt;;\n    fn bar(&amp;self) -&gt; Self::Output {\n        Box::pin(foo())\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 525, "favorite_count": 0, "accepted_answer_id": 54452736, "answer_count": 1, "score": 1, "last_activity_date": 1548908826, "creation_date": 1548900635, "last_edit_date": 1548907364, "question_id": 54452339, "link": "https://stackoverflow.com/questions/54452339/how-do-i-erase-the-type-of-future-in-the-new-future-api", "title": "How do I erase the type of future in the new future API?", "body": "<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=3725356ddcc70c5abcb5e3370392a136\" rel=\"nofollow noreferrer\">The following does not compile</a></p>\n\n<pre><code>#![feature(await_macro, async_await, futures_api)]\nuse core::future::Future;\n\nasync fn foo() {}\n\ntrait Bar {\n    type Output: Future&lt;Output = ()&gt;;\n    fn bar(&amp;self) -&gt; Self::Output;\n}\n\nimpl Bar for () {\n    type Output = Box&lt;dyn Future&lt;Output = ()&gt;&gt;;\n    fn bar(&amp;self) -&gt; Self::Output {\n        Box::new(foo())\n    }\n}\n\nasync fn buz() {\n    await!(().bar())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(dyn std::future::Future&lt;Output=()&gt; + 'static): std::marker::Unpin` is not satisfied\n  --&gt; src/lib.rs:19:15\n   |\n19 |     await!(().bar())\n   |               ^^^ the trait `std::marker::Unpin` is not implemented for `(dyn std::future::Future&lt;Output=()&gt; + 'static)`\n   |\n   = note: required because of the requirements on the impl of `std::future::Future` for `std::boxed::Box&lt;(dyn std::future::Future&lt;Output=()&gt; + 'static)&gt;`\n\nerror[E0277]: the trait bound `dyn std::future::Future&lt;Output=()&gt;: std::marker::Unpin` is not satisfied\n  --&gt; src/lib.rs:19:5\n   |\n19 |     await!(().bar())\n   |     ^^^^^^^^^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::future::Future&lt;Output=()&gt;`\n   |\n   = note: required because of the requirements on the impl of `std::future::Future` for `std::boxed::Box&lt;dyn std::future::Future&lt;Output=()&gt;&gt;`\n   = note: required by `std::future::poll_with_tls_waker`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>How can I set the type <code>Output</code>? I want <code>bar</code> to return some <code>Future</code> by calling <code>foo</code> so I can <code>await!</code> in <code>buz</code>.</p>\n\n<p>In the old days with <code>Future&lt;Item = (), Error = ()&gt;</code>, the above would compile without any problems as we don't have the <code>Unpin</code> constraint, but we also don't have <code>await</code>.</p>\n"}]