[{"tags": ["hashmap", "rust", "iteration", "mutability"], "answers": [{"comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1502928149, "post_id": 45724688, "comment_id": 78407087, "body": "I can get the same error with <code>for (key, value) in map {}; for (key, value) in map {}</code>, and I don&#39;t think this answer explains that."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1502929176, "post_id": 45724688, "comment_id": 78407286, "body": "One way to think about it is, what would happen if you called that <code>map.clear()</code> inside the loop? <code>key</code> and <code>value</code> are references, and they wouldn&#39;t be referencing anything anymore. <code>clear</code> and <code>remove</code> both use <code>&amp;mut self</code>, from a borrow-checker standpoint they are the same."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1502929272, "post_id": 45724688, "comment_id": 78407306, "body": "This led me to an even odder issue, but I suspect that the method call syntax is obscuring the issue. <a href=\"https://play.rust-lang.org/?gist=ecf6d9bdbe8e1ad99e5fb3c35c402d1c&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 1, "creation_date": 1502929711, "post_id": 45724688, "comment_id": 78407399, "body": "@JoshLee That&#39;s a non-obvious one! The magic keyword you are looking for will be &quot;reborrowing&quot;, which is a special property of mutable references."}, {"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 0, "creation_date": 1502930168, "post_id": 45724688, "comment_id": 78407497, "body": "@Shepmaster So now I know why <a href=\"https://doc.rust-lang.org/std/iter/index.html#for-loops-and-intoiterator\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/&hellip;</a> writes <code>IntoIterator::into_iter(values)</code> instead of <code>values.into_iter()</code>."}, {"owner": {"reputation": 2089, "user_id": 1291118, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5347088e8b4e042e3ed3717051455f94?s=128&d=identicon&r=PG", "display_name": "vasilakisfil", "link": "https://stackoverflow.com/users/1291118/vasilakisfil"}, "edited": false, "score": 0, "creation_date": 1602844843, "post_id": 45724688, "comment_id": 113855116, "body": "how can I use retain when the predicate for retaining or not needs await (calls an async fn) ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2089, "user_id": 1291118, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5347088e8b4e042e3ed3717051455f94?s=128&d=identicon&r=PG", "display_name": "vasilakisfil", "link": "https://stackoverflow.com/users/1291118/vasilakisfil"}, "edited": false, "score": 1, "creation_date": 1603116181, "post_id": 45724688, "comment_id": 113926625, "body": "@vasilakisfil you can&#39;t, easily. The brute force answer is to spin up an executor for each predicate (<a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a>). That&#39;s probably a non-performant idea. I&#39;d instead maybe try converting the hashmap to an iterator, then to a stream, then filter the stream using <code>StreamExt</code> then convert it back to a hashmap. Benchmarking would be important."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 27, "last_activity_date": 1502983218, "last_edit_date": 1502983218, "creation_date": 1502928016, "answer_id": 45724688, "question_id": 45724517, "link": "https://stackoverflow.com/questions/45724517/how-to-iterate-through-a-hashmap-print-the-key-value-and-remove-the-value-in-ru/45724688#45724688", "title": "How to iterate through a Hashmap, print the key/value and remove the value in Rust?", "body": "<p>There are at least two reasons why this is disallowed:</p>\n\n<ol>\n<li><p>You would need to have two concurrent mutable references to <code>map</code> \u2014 one held by the iterator used in the <code>for</code> loop and one in the variable <code>map</code> to call <code>map.remove</code>.</p></li>\n<li><p>You have references to the key and the value <em>within</em> the map when trying to mutate the map. If you were allowed to modify the map in any way, these references could be invalidated, opening the door for memory unsafety.</p></li>\n</ol>\n\n<p>A core Rust principle is <strong>Aliasing XOR Mutability</strong>. You can have multiple immutable references to a value or you can have a single mutable reference to it.</p>\n\n<blockquote>\n  <p>I didn't think moving/borrowing applied to references.</p>\n</blockquote>\n\n<p>Every type is subject to Rust's rules of moving as well as mutable aliasing. Please let us know what part of the documentation says it isn't so we can address that.</p>\n\n<blockquote>\n  <p>Why it is trying to move a reference?</p>\n</blockquote>\n\n<p>This is combined of two parts:</p>\n\n<ol>\n<li>You can only have a single mutable reference</li>\n<li><code>for</code> loops <a href=\"https://doc.rust-lang.org/std/iter/index.html#for-loops-and-intoiterator\" rel=\"noreferrer\">take the value to iterate over by value</a></li>\n</ol>\n\n<p>When you call <code>for (k, v) in map {}</code>, the ownership of <code>map</code> is transferred to the for loop and is now gone. </p>\n\n<hr>\n\n<p>I'd perform an immutable borrow of the map (<code>&amp;*map</code>) and iterate over that. At the end, I'd clear the whole thing:</p>\n\n<pre><code>fn do_it(map: &amp;mut HashMap&lt;String, String&gt;) {\n    for (key, value) in &amp;*map {\n        println!(\"{} / {}\", key, value);\n    }\n    map.clear();\n}\n</code></pre>\n\n<blockquote>\n  <p>remove every value with a key that starts with the letter \"A\"</p>\n</blockquote>\n\n<p>I'd use <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.retain\" rel=\"noreferrer\"><code>HashMap::retain</code></a>:</p>\n\n<pre><code>fn do_it(map: &amp;mut HashMap&lt;String, String&gt;) {\n    map.retain(|key, value| {\n        println!(\"{} / {}\", key, value);\n\n        !key.starts_with(\"a\")\n    })\n}\n</code></pre>\n\n<p>This guarantees that <code>key</code> and <code>value</code> no longer exist when the map is actually modified, thus any borrow that they would have had is now gone.</p>\n"}, {"comments": [{"owner": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 2, "creation_date": 1544015544, "post_id": 45724774, "comment_id": 94125662, "body": "&quot;often the behaviour is not well-defined, and removal of the item can interfere with the iteration, compromising its correctness.&quot; very well said. the bugs caused by this type of thing are extremely bizarre, have spent a few dozen hours tracking them down before in C++. especially inside nested loops. thanks."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 13, "last_activity_date": 1502932903, "last_edit_date": 1502932903, "creation_date": 1502928841, "answer_id": 45724774, "question_id": 45724517, "link": "https://stackoverflow.com/questions/45724517/how-to-iterate-through-a-hashmap-print-the-key-value-and-remove-the-value-in-ru/45724774#45724774", "title": "How to iterate through a Hashmap, print the key/value and remove the value in Rust?", "body": "<blockquote>\n  <p>This should be a trivial task in any language. </p>\n</blockquote>\n\n<p>Rust is preventing you from mutating the map <em>while</em> you are iterating over it. In most languages this is allowed, but often the behaviour is not well-defined, and removal of the item can interfere with the iteration, compromising its correctness.</p>\n\n<blockquote>\n  <p>Why it is trying to move a reference?</p>\n</blockquote>\n\n<p><code>HashMap</code> implements <code>IntoIterator</code>, <a href=\"https://doc.rust-lang.org/std/iter/#for-loops-and-intoiterator\" rel=\"noreferrer\">so your loop is equivalent to</a>:</p>\n\n<pre><code>for (key, value) in map.into_iter() {\n    println!(\"{} / {}\", key, value);\n    map.remove(key);\n}\n</code></pre>\n\n<p>If you look at the <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#tymethod.into_iter\" rel=\"noreferrer\">definition of <code>into_iter</code></a>, you'll see that it takes <code>self</code>, not <code>&amp;self</code> or <code>&amp;mut self</code>. Your variable <code>map</code> is a reference, so it is implicitly dereferenced to get at <code>self</code>, which is why the error says that <code>*map</code> has been moved.</p>\n\n<p>The API is intentionally built that way so that you can't do anything dangerous while looping over a structure. Once the loop is complete, the ownership of the structure is relinquished and you can use it again.</p>\n\n<p>One solution is to keep track of the items you intend to remove in a <code>Vec</code> and then remove them afterwards:</p>\n\n<pre><code>fn do_it(map: &amp;mut HashMap&lt;String, String&gt;) {\n    let mut to_remove = Vec::new();\n    for (key, value) in &amp;*map {\n        if key.starts_with(\"A\") {\n            to_remove.push(key.to_owned());\n        }\n    }\n    for key in to_remove.iter() {\n        map.remove(key);\n    }\n}\n</code></pre>\n\n<p>You may also use an iterator to filter the map into a new one. Perhaps something like this:</p>\n\n<pre><code>fn do_it(map: &amp;mut HashMap&lt;String, String&gt;) {\n    *map = map.into_iter().filter_map(|(key, value)| {\n        if key.starts_with(\"A\") {\n            None\n        } else {\n            Some((key.to_owned(), value.to_owned()))\n        }\n    }).collect();\n}\n</code></pre>\n\n<p>But I just saw Shepmaster's edit - I had forgotten about <code>retain</code>, which is better. It's more concise and doesn't do unnecessary copying as I have done.</p>\n"}], "owner": {"reputation": 1090, "user_id": 4674479, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/56af09c0905f13125aefb9c10c5af2f8?s=128&d=identicon&r=PG&f=1", "display_name": "adapt-dev", "link": "https://stackoverflow.com/users/4674479/adapt-dev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 24044, "favorite_count": 1, "answer_count": 2, "score": 32, "last_activity_date": 1545156264, "creation_date": 1502926698, "last_edit_date": 1545156264, "question_id": 45724517, "link": "https://stackoverflow.com/questions/45724517/how-to-iterate-through-a-hashmap-print-the-key-value-and-remove-the-value-in-ru", "title": "How to iterate through a Hashmap, print the key/value and remove the value in Rust?", "body": "<p>This should be a trivial task in any language.   This isn't working in Rust. </p>\n\n<pre><code>use std::collections::HashMap;\n\nfn do_it(map: &amp;mut HashMap&lt;String, String&gt;) {\n    for (key, value) in map {\n        println!(\"{} / {}\", key, value);\n        map.remove(key);\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Here's the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `*map`\n --&gt; src/main.rs:6:9\n  |\n4 |     for (key, value) in map {\n  |                         --- value moved here\n5 |         println!(\"{} / {}\", key, value);\n6 |         map.remove(key);\n  |         ^^^ value used here after move\n  |\n  = note: move occurs because `map` has type `&amp;mut std::collections::HashMap&lt;std::string::String, std::string::String&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Why it is trying to move a reference?  From the documentation, I didn't think moving/borrowing applied to references.</p>\n"}, {"tags": ["rust", "windows-10", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502917188, "post_id": 45722823, "comment_id": 78403724, "body": "Have you already read <a href=\"https://github.com/rust-lang/cargo/issues/636\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/636</a>? Do you have a proxy? Have you tried looking at the logs for any network utilities that block outgoing / incoming connections?"}, {"owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502917317, "post_id": 45722823, "comment_id": 78403776, "body": "Yes, I did read that, but I do not have a proxy at home. I&#39;ll have to try and find relevant logs."}], "answers": [{"comments": [{"owner": {"reputation": 786, "user_id": 2357439, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rkRtI.jpg?s=128&g=1", "display_name": "Alexander Bollaert", "link": "https://stackoverflow.com/users/2357439/alexander-bollaert"}, "edited": false, "score": 0, "creation_date": 1579354566, "post_id": 59800933, "comment_id": 105742772, "body": "This was already covered in the comments of the original answer, where the author of the question indicates he doesn&#39;t use a proxy at home."}, {"owner": {"reputation": 147, "user_id": 11979804, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0iwxhCwlZ9A/AAAAAAAAAAI/AAAAAAAAAEQ/4QYbLD-uCSQ/photo.jpg?sz=128", "display_name": "SLIMANI Mohammed", "link": "https://stackoverflow.com/users/11979804/slimani-mohammed"}, "reply_to_user": {"reputation": 786, "user_id": 2357439, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rkRtI.jpg?s=128&g=1", "display_name": "Alexander Bollaert", "link": "https://stackoverflow.com/users/2357439/alexander-bollaert"}, "edited": false, "score": 0, "creation_date": 1579485332, "post_id": 59800933, "comment_id": 105770378, "body": "I changed the proxy once and when I stop using the proxy, the winhttp params of cmd stayed. It is worth making sure that it is clear."}], "tags": [], "owner": {"reputation": 147, "user_id": 11979804, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-0iwxhCwlZ9A/AAAAAAAAAAI/AAAAAAAAAEQ/4QYbLD-uCSQ/photo.jpg?sz=128", "display_name": "SLIMANI Mohammed", "link": "https://stackoverflow.com/users/11979804/slimani-mohammed"}, "is_accepted": false, "score": 1, "last_activity_date": 1579353250, "creation_date": 1579353250, "answer_id": 59800933, "question_id": 45722823, "link": "https://stackoverflow.com/questions/45722823/cargo-fails-with-spurious-network-error-the-operation-timed-out-on-windows-10/59800933#59800933", "title": "Cargo fails with &quot;spurious network error: The operation timed out&quot; on Windows 10 when using a local user", "body": "<p>For me, I used a proxy once and it was set as a variable in CMD.<br>\nTo show your proxy settings, in an administrator cmd type:</p>\n\n<pre><code>netsh winhttp show proxy\n</code></pre>\n\n<p>if you have one you can reset it by:</p>\n\n<pre><code>netsh winhttp reset proxy\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "is_accepted": true, "score": 0, "last_activity_date": 1579428843, "creation_date": 1579428843, "answer_id": 59809073, "question_id": 45722823, "link": "https://stackoverflow.com/questions/45722823/cargo-fails-with-spurious-network-error-the-operation-timed-out-on-windows-10/59809073#59809073", "title": "Cargo fails with &quot;spurious network error: The operation timed out&quot; on Windows 10 when using a local user", "body": "<p>I don't have a definite explanation, but <code>cargo</code> works correctly when the VPN towards my office is active. I guess it really is something to do with security software.</p>\n"}, {"tags": [], "owner": {"reputation": 1719, "user_id": 4130114, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YxSDJ.jpg?s=128&g=1", "display_name": "Hom Bahrani", "link": "https://stackoverflow.com/users/4130114/hom-bahrani"}, "is_accepted": false, "score": 0, "last_activity_date": 1594734083, "creation_date": 1594734083, "answer_id": 62896599, "question_id": 45722823, "link": "https://stackoverflow.com/questions/45722823/cargo-fails-with-spurious-network-error-the-operation-timed-out-on-windows-10/62896599#62896599", "title": "Cargo fails with &quot;spurious network error: The operation timed out&quot; on Windows 10 when using a local user", "body": "<p>I spent a good hour trying to figure this out and came across 2 potential solutions</p>\n<ol>\n<li>There could be an issue with ssh: dependency, fixed it by starting ssh agent:</li>\n</ol>\n<pre class=\"lang-sh prettyprint-override\"><code>eval `ssh-agent -s`\nssh-add\ncargo build\n</code></pre>\n<ol start=\"2\">\n<li>setup in a global ~/.gitconfig</li>\n</ol>\n<pre class=\"lang-sh prettyprint-override\"><code>[url &quot;ssh://git@github.com/&quot;]\n    insteadOf = https://github.com/\n</code></pre>\n<p>Removing this in <code>~/.gitconfig</code> also solved the issue</p>\n"}], "owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1738, "favorite_count": 0, "accepted_answer_id": 59809073, "answer_count": 3, "score": 4, "last_activity_date": 1594734083, "creation_date": 1502916797, "last_edit_date": 1502916933, "question_id": 45722823, "link": "https://stackoverflow.com/questions/45722823/cargo-fails-with-spurious-network-error-the-operation-timed-out-on-windows-10", "title": "Cargo fails with &quot;spurious network error: The operation timed out&quot; on Windows 10 when using a local user", "body": "<p>I'm trying to setup a Rust programming environment for a local user on a Windows 10 laptop that is usually connected to my company domain. Installing the stable version of Rust with <code>rustup</code> via <code>rustup-init.exe</code> completed without problems, but every time I try to use <code>cargo</code> to install tools or libraries I get an error message like the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: spurious network error (5 tries remaining): [2/-1] failed to send request: The operation timed out\n</code></pre>\n\n<p>This happens both from my company network and from my home one. I managed to setup Rust for my domain account without problems.</p>\n\n<p>I suppose this is network related or it might involve the Sophos software my company uses as firewall/anti-virus; what is puzzling me is the fact that just about every other network related utility I tried works without problems, from <code>git</code> to <code>curl</code>.</p>\n\n<p>I'd like to use this additional user because there are utilities my company blocks for domain users but not for local ones, such as Dropbox.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502908349, "post_id": 45720185, "comment_id": 78399637, "body": "@Shepmaster OK removed the version. (BTW fixing this will require changing syntax =&gt; requires FCP/RFC =&gt; even if someone implements it this won&#39;t land on master soon)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502908446, "post_id": 45720185, "comment_id": 78399686, "body": "Oh, I recognize that. My point was mostly around making definitive statements about versions of software that don&#39;t exist yet."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1502908186, "last_edit_date": 1502908186, "creation_date": 1502906323, "answer_id": 45720185, "question_id": 45719079, "link": "https://stackoverflow.com/questions/45719079/how-to-define-a-macro-with-an-indefinite-amount-of-arguments-inside-another-macr/45720185#45720185", "title": "How to define a macro with an indefinite amount of arguments inside another macro?", "body": "<p>It is a known bug that <a href=\"https://github.com/rust-lang/rust/issues/35853\" rel=\"nofollow noreferrer\">nested macros don't allow repetitions in binding patterns (issue #35853)</a>.</p>\n\n<p>Unfortunately, there is no workaround. The only solution is to change your API to not rely on repetition inside nested macros. </p>\n"}, {"tags": [], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "is_accepted": false, "score": 3, "last_activity_date": 1546619567, "last_edit_date": 1546619567, "creation_date": 1502957652, "answer_id": 45729830, "question_id": 45719079, "link": "https://stackoverflow.com/questions/45719079/how-to-define-a-macro-with-an-indefinite-amount-of-arguments-inside-another-macr/45729830#45729830", "title": "How to define a macro with an indefinite amount of arguments inside another macro?", "body": "<p>While it is not possible to do this directly, as <a href=\"https://stackoverflow.com/a/45720185/8159982\">kennytm described in this answer</a>, you could do this using <a href=\"https://doc.rust-lang.org/beta/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">procedural macros</a>(<em>in case you really need to, otherwise I would not recommend it</em>).\nWhile it's probably a lot simpler when using <a href=\"https://doc.rust-lang.org/1.13.0/book/nightly-rust.html\" rel=\"nofollow noreferrer\"><code>nightly</code></a>, it is also possible in <code>stable</code>.</p>\n\n<h1>Limitations</h1>\n\n<p>Please tell me in case I missed anything or in case there might be problems when using <a href=\"https://stackoverflow.com/a/45720185/8159982\">custom derive</a> like this in the future.</p>\n\n<ul>\n<li>You need to create a struct, which causes one of the following problems\n\n<ol>\n<li>there is either a maximum of 1 macro call per module</li>\n<li>the user is required to add another string of characters when calling the outer macro</li>\n<li>you create a private module which contains the required struct and could be accessed</li>\n</ol></li>\n</ul>\n\n<hr>\n\n<p>So let's just copy the example from <a href=\"https://doc.rust-lang.org/beta/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">here</a>, and just look at this part of the code:</p>\n\n<pre><code>fn impl_hello_world(ast: &amp;syn::DeriveInput) -&gt; quote::Tokens {\n    let name = &amp;ast.ident;\n    quote! {\n        impl HelloWorld for #name {\n            fn hello_world() {\n                println!(\"Hello, World! My name is {}\", stringify!(#name));\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>inside of the <code>quote!</code> macro, you are not limited to the implementation of the <code>struct</code>. you could change this to</p>\n\n<pre><code>quote! {\n    macro_rules! #name {\n         ($($expr:expr),*) =&gt; {\n         // something\n         }\n    }\n}\n</code></pre>\n\n<p>now you have a macro with the same name as a <code>struct</code> which takes an infinite amount of arguments.</p>\n\n<p>To do this in another macro, the outer macro just has to look like this:</p>\n\n<pre><code>macro_rules! test_define {\n    ($name:ident) =&gt; {\n        #[allow(non_camel_case_types)] // because macro names are lower case\n        #[allow(dead_code)] // because this struct should never be used\n        #[derive(HelloWorld)]\n        struct $name { }\n    }\n};\n</code></pre>\n\n<p>And now you can call <code>test_define</code> and then the inner macro:</p>\n\n<pre><code>test_define!(foo);\n\nfn main() {\n    foo!()\n}\n</code></pre>\n\n<hr>\n\n<p>However, there is still one problem: people could accidentally access your struct. So there are ways to circumvent this(each solution is a directly linked the problem with the same number):</p>\n\n<ol>\n<li><p>name the struct in a way which prevents accidental access by pure chance:</p>\n\n<pre><code>macro_rules! test_define {\n    ($name:ident) =&gt; {\n        #[allow(dead_code)]\n        #[derive(HelloWorld)]\n        struct Dgfggsdfgujksdsdsdfsdfsdg { \n            $name: u8,\n        }\n    }\n};\n</code></pre>\n\n<p>You have to change your <a href=\"https://doc.rust-lang.org/beta/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">proc macro</a> to use the <code>struct field</code> instead of <code>name</code> inside of <code>quote!</code> and in case the <code>test_define!</code> is called more than once in the same crate you have 2 structs with identical names which causes a compile time error.</p></li>\n<li><p>to prevent two identical struct names you could also change <code>test_define!</code> to take an additional argument:</p>\n\n<pre><code>macro_rules! test_define {\n    ($name:ident, $rep_guard:ident) =&gt; {\n        #[allow(non_camel_case_types)]\n        #[allow(dead_code]\n        #[derive(HelloWorld)]\n        struct $rep_guard { \n            $name: u8,\n        }\n    }\n};\n</code></pre>\n\n<p>You are using a <code>struct field</code> instead of the <code>name</code> with this method. To use you now have to write <code>test_define!(foo,fvgfdgdfgdfgd)</code>, which is really awkward, so I would not recommend this.</p></li>\n<li><p>This is probably the best option, now you can keep your strange <code>struct</code> name from <em>solution 1</em> and just put the whole thing in a <code>module</code>. Meaning that no one can accidentally access the created struct and you can have an infinite amount of calls to <code>test_define!</code>.</p>\n\n<pre><code>macro_rules! test_define {\n    ($name:ident) =&gt; {\n        #[macro_use] // to use the macro in the current module\n        mod $name {\n            #[allow(dead_code)]\n            #[derive(HelloWorld)]\n            struct Dgfggsdfgujksdsdsdfsdfsdg { \n                $name: u8,\n            }\n        }\n    }\n};\n</code></pre></li>\n</ol>\n\n<hr>\n\n<p>The compiler should simply remove all of those structs, as they are <code>dead_code</code>\n(at least when building with the <code>--release</code> flag). You could adapt the <code>quote!</code> by adding <code>#[macro_export]</code> if you need it.</p>\n\n<p>Another advantage is that proc macros use your source code in the same way as a <code>String</code> or as <code>Tokens</code> which can be cast to a <code>String</code>, this means that you could create multiple macros, for example:</p>\n\n<p><code>test_derive!(foo)</code> =>  <code>foo!()</code>, <code>foo_with_var!(75)</code></p>\n\n<p>In case there is anything you don't understand, just ask.</p>\n"}], "owner": {"reputation": 109, "user_id": 7851861, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db1d107615eac833bc16aacf9a15bff9?s=128&d=identicon&r=PG", "display_name": "Rijenkii", "link": "https://stackoverflow.com/users/7851861/rijenkii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 877, "favorite_count": 0, "accepted_answer_id": 45720185, "answer_count": 2, "score": 4, "last_activity_date": 1546619567, "creation_date": 1502902215, "last_edit_date": 1502903601, "question_id": 45719079, "link": "https://stackoverflow.com/questions/45719079/how-to-define-a-macro-with-an-indefinite-amount-of-arguments-inside-another-macr", "title": "How to define a macro with an indefinite amount of arguments inside another macro?", "body": "<p>This works, but <code>test_macro</code> accepts only one argument:</p>\n\n<pre><code>macro_rules! test_define (\n    ($name:ident) =&gt; (\n        macro_rules! $name (\n            ( $x:expr ) =&gt; (\n                // something\n            )\n        );\n    )\n);\n\ntest_define!(test_macro);\n</code></pre>\n\n<p>If I try and do this:</p>\n\n<pre><code>macro_rules! test_define2 (\n    ($name:ident) =&gt; (\n        macro_rules! $name (\n            ( $($x:expr),* ) =&gt; (\n                // something\n            )\n        );\n    )\n);\n\ntest_define2!(test_macro2);\n</code></pre>\n\n<p>Compilation fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: attempted to repeat an expression containing no syntax variables matched as repeating at this depth\n --&gt; src/main.rs:4:16\n  |\n4 |             ( $($x:expr),* ) =&gt; (\n  |                ^^^^^^^^^\n</code></pre>\n"}, {"tags": ["hashmap", "rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502897059, "post_id": 45717092, "comment_id": 78393006, "body": "<i>the first reasonable key</i> \u2014 <a href=\"https://stackoverflow.com/q/45194220/155423\"><code>HashMap</code>s have no useful ordering</a>, so iterating over one to get the &quot;first&quot; anything is fairly suspicious."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1502897188, "post_id": 45717092, "comment_id": 78393095, "body": "I have to say <code>rustc</code>&#39;s error message &quot;<code>the trait bound `&amp;std::collections::HashMap&lt;VarIdx, f64&gt;: std::iter::IntoIterator` is not satisfied</code>&quot; is totally useless, and the suggestions does not mention <code>VarIdx: Eq + Hash</code> at all. XD"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1502897461, "post_id": 45717092, "comment_id": 78393296, "body": "@kennytm I know that you know how to improve the compiler, so I&#39;ll watch for your PR ^_^. I assume it&#39;s difficult because you have to traverse trait implementations and see what <b>all</b> the transitive dependencies are. That being said, OP has posted what error they are getting and it&#39;s different from the error their code provides. Chances are good once their code has the matching error, it will be a duplicate."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502897836, "post_id": 45717092, "comment_id": 78393550, "body": "@Shepmaster I don&#39;t touch the type-checker deeply, so I&#39;ll just file an issue :p. More importantly, OP should mention what exactly the manipulation is performed, e.g. removing the key can be done with <code>retain</code>, but if the manipulation is something else the answer would be incorrect."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1502898258, "post_id": 45717092, "comment_id": 78393882, "body": "&#39;not satisfied&#39; message was reasonable, my inital question was missing code, required to create nested hashmap. Dear participants, please review updated version. Thanx."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1502898298, "post_id": 45717092, "comment_id": 78393913, "body": "In my case I need any key longer then 2 entries."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502903438, "post_id": 45717092, "comment_id": 78397000, "body": "<i>non-nested <code>HashMap</code> instead of <code>Polynome</code></i> \u2014 It&#39;s not a <code>HashMap</code> that makes the difference; it&#39;s that you are returning a reference (<code>Option&lt;&amp;VarIdx&gt;</code>) in the code that doesn&#39;t work. In the code that works, you are <i>not</i> returning a reference, but a value instead (<code>Option&lt;u16&gt;</code>). If you return a <code>Option&lt;&amp;u16&gt;</code>, you see the same problem. This is also a potential fix: if you can return a <code>Option&lt;VarIdx&gt;</code> instead."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1502904891, "post_id": 45717092, "comment_id": 78397855, "body": "Dear Shepmaster, please post your last comment as an answer, so I can accept it."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1502908568, "post_id": 45717092, "comment_id": 78399751, "body": "@StepanYakovenko Since Shepmaster <a href=\"https://stackoverflow.com/help/closed-questions\">closed</a> the post as duplicate, no one can answer it here."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1502909501, "post_id": 45717092, "comment_id": 78400183, "body": "Oh, I believe it was not correctly closed, Option&lt;&amp;VarIdx&gt;  is the rootcause of the problem."}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1502898705, "answer_count": 0, "score": 0, "last_activity_date": 1502900080, "creation_date": 1502895768, "last_edit_date": 1502900080, "question_id": 45717092, "link": "https://stackoverflow.com/questions/45717092/how-to-modify-a-borrowed-hashmap-after-one-branch-has-returned-from-the-function", "closed_reason": "Duplicate", "title": "How to modify a borrowed HashMap after one branch has returned from the function?", "body": "<p>I tried to simplify my program, but there is no error if I use a simple <code>HashMap&lt;u16, u16&gt;</code> instead of my nested <code>HashMap</code> <code>Polynome</code> class.</p>\n\n<p>You will need these imports to reproduce the problem:</p>\n\n<pre><code>use std::collections::{HashMap, BTreeMap};\nuse std::hash::{Hash, Hasher};\n</code></pre>\n\n<p>These are my types:</p>\n\n<pre><code>pub struct VarIdx(pub BTreeMap&lt;u16, u8&gt;);\npub type Polynome = HashMap&lt;VarIdx, f64&gt;;\n</code></pre>\n\n<p>This is stuff I need to make the nested <code>HashMap</code> work:</p>\n\n<pre><code>impl PartialEq for VarIdx {\n    fn eq(&amp;self, other: &amp;VarIdx) -&gt; bool {\n        if self.0 == other.0 {\n            return true;\n        }\n        if self.0.len() != other.0.len() {\n            return false;\n        }\n        for (k, v) in self.0.iter() {\n            match other.0.get(k) {\n                Some(v1) =&gt; {\n                    if v != v1 {\n                        return false;\n                    }\n                }\n                None =&gt; {}\n            }\n\n        }\n        (true)\n    }\n}\nimpl Eq for VarIdx {}\nimpl VarIdx {\n    pub fn len(&amp;self) -&gt; usize {\n        return self.0.len();\n    }\n}\nimpl Hash for VarIdx {\n    fn hash&lt;H&gt;(&amp;self, _state: &amp;mut H)\n    where\n        H: Hasher,\n    {\n        for (k, v) in self.0.iter() {\n            k.hash(_state);\n            v.hash(_state);\n        }\n    }\n}\n</code></pre>\n\n<p>I have this function to find the first reasonable key:</p>\n\n<pre><code>fn get_first_product(poly: &amp;Polynome) -&gt; Option&lt;&amp;VarIdx&gt; {\n    for (key, coeff) in poly {\n        if key.len() &lt; 2 {\n            return None;\n        }\n        return Some(key);\n    }\n    None\n}\n</code></pre>\n\n<p>I want to invoke this function and perform some manipulation based on returned key, for simplicity I want to remove this key from the <code>HashMap</code>:</p>\n\n<pre><code>fn reduce_product(poly: &amp;mut Polynome) -&gt; bool {\n    let key = {\n        let res = get_first_product(poly);\n        if res == None {\n            return false;\n        }\n        res.unwrap()\n    };\n    poly.remove(&amp;key);\n    true\n}\n</code></pre>\n\n<p>This doesn't compile, because <code>poly</code> is borrowed to <code>get_first_product</code> and can't be reborrowed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*poly` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:64:5\n   |\n60 |         let res = get_first_product(poly);\n   |                                     ---- immutable borrow occurs here\n...\n64 |     poly.remove(&amp;key);\n   |     ^^^^ mutable borrow occurs here\n65 |     true\n66 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>How can I solve this elementary task? I tried to <code>.clone()</code> before passing <code>poly</code> to <code>get_first_product()</code>, but I get another error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `clone` found for type `&amp;mut std::collections::HashMap&lt;VarIdx, f64&gt;` in the current scope\n  --&gt; src/main.rs:65:42\n   |\n65 |         let res = get_first_product(poly.clone());\n   |                                          ^^^^^\n   |\n   = note: the method `clone` exists but the following trait bounds were not satisfied:\n           `VarIdx : std::clone::Clone`\n</code></pre>\n\n<p>I have <code>.clone()</code> implemented for <code>VarIdx</code>.</p>\n\n<p>What is recommended way to handle such case? I would like to avoid <code>.clone</code> to have an efficient program.</p>\n\n<p>This doesn't seem to be duplicate of <a href=\"https://stackoverflow.com/questions/38023871/rust-borrow-of-a-hashmap-lasts-beyond-the-scope-its-in\">this question</a>, because if I try to use non-nested HashMap instead of Polynome, the code compiles fine:</p>\n\n<pre><code>fn get_first_product_nonnested(poly: &amp;HashMap&lt;u16, u16&gt;) -&gt; Option&lt;u16&gt; {\n    for (key, coeff) in poly {\n        if coeff&gt;&amp;2 {\n            return None;\n        }\n        return Some(*key);\n    }\n    None\n}\nfn reduce_product_nonnested(poly: &amp;mut HashMap&lt;u16,u16&gt;) -&gt; bool {\n    let key = {\n        let res = get_first_product_nonnested(poly);\n        if res == None { return false; }\n        res.unwrap()\n    };\n    poly.remove(&amp;key);\n    true\n}\n</code></pre>\n\n<p>So there is something, which makes my Polynome type different from HashMap.</p>\n"}, {"tags": ["server", "rust", "hyper"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 1, "creation_date": 1502886593, "post_id": 45713444, "comment_id": 78385108, "body": "In real world deployment, your <code>nginx</code> or <code>caddy</code> will serve the files anyways, so I wouldn&#39;t worry to much about this and setup a reverse proxy instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 4, "creation_date": 1502887287, "post_id": 45713444, "comment_id": 78385693, "body": "@JanNilsFerner I respectfully disagree with such a broad pronouncement. Remember that Rust is a systems language, the kind of language you would <i>write NGINX in</i>. Who is to say that OP isn&#39;t attempting to write such a layer as that?"}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1502890035, "post_id": 45713444, "comment_id": 78387836, "body": "@Shepmaster Agreed, Rust would be the ideal language to write a reverse proxy. Note that I meant my comment to be interpreted as a pragmatical advice, i.e. I assume OP is probably not writing the next nginx and just wants to do some low level networking, in which case I would recommend to not reinvent the wheel and use his code together with other proved solutions."}, {"owner": {"reputation": 413, "user_id": 5683109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62c83659808b54d9596183ee00c4eb9b?s=128&d=identicon&r=PG&f=1", "display_name": "I3ck", "link": "https://stackoverflow.com/users/5683109/i3ck"}, "edited": false, "score": 0, "creation_date": 1502902550, "post_id": 45713444, "comment_id": 78396478, "body": "I&#39;d prefer having it in one place. Other frameworks allowed to simply map paths to directories. Using nginx is a good suggestion tho. But I&#39;ll try to do it in hyper first"}], "answers": [{"comments": [{"owner": {"reputation": 413, "user_id": 5683109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62c83659808b54d9596183ee00c4eb9b?s=128&d=identicon&r=PG&f=1", "display_name": "I3ck", "link": "https://stackoverflow.com/users/5683109/i3ck"}, "edited": false, "score": 0, "creation_date": 1502902431, "post_id": 45713981, "comment_id": 78396406, "body": "looking good. Only problem currently is that the return values don&#39;t match. <code>hyper-static</code> uses <code>type Future = Box&lt;Future&lt;Item = Response, Error = Error&gt;&gt;</code> while I use <code>type Future = futures::future::FutureResult&lt;Response, Error&gt;</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1502887693, "creation_date": 1502887693, "answer_id": 45713981, "question_id": 45713444, "link": "https://stackoverflow.com/questions/45713444/how-can-i-serve-static-files-a-directory-in-hyper/45713981#45713981", "title": "How can I serve static files / a directory in hyper?", "body": "<p>After typing in the words \"hyper static\" into <a href=\"https://crates.io/crates/hyper-staticfile\" rel=\"noreferrer\">crates.io</a>, the first result was <a href=\"https://crates.io/crates/hyper-staticfile\" rel=\"noreferrer\">hyper-staticfile</a>. The project's <a href=\"https://github.com/stephank/hyper-staticfile\" rel=\"noreferrer\">GitHub repository</a> has an <a href=\"https://github.com/stephank/hyper-staticfile/tree/554215012b589288750406362527b6e94d5464b7/examples\" rel=\"noreferrer\">examples directory</a>, with one such example:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate hyper_staticfile;\nextern crate tokio_core;\n\n// This example serves the docs from target/doc/hyper_staticfile at /doc/\n//\n// Run `cargo doc &amp;&amp; cargo run --example doc_server`, then\n// point your browser to http://localhost:3000/\n\nuse futures::{Future, Stream, future};\nuse hyper::Error;\nuse hyper::server::{Http, Request, Response, Service};\nuse hyper_staticfile::Static;\nuse std::path::Path;\nuse tokio_core::reactor::{Core, Handle};\nuse tokio_core::net::TcpListener;\n\ntype ResponseFuture = Box&lt;Future&lt;Item=Response, Error=Error&gt;&gt;;\n\nstruct MainService {\n    static_: Static,\n}\n\nimpl MainService {\n    fn new(handle: &amp;Handle) -&gt; MainService {\n        MainService {\n            static_: Static::new(handle, Path::new(\"target/doc/\")),\n        }\n    }\n}\n\nimpl Service for MainService {\n    type Request = Request;\n    type Response = Response;\n    type Error = Error;\n    type Future = ResponseFuture;\n\n    fn call(&amp;self, req: Request) -&gt; Self::Future {\n        if req.path() == \"/\" {\n            let res = Response::new()\n                .with_status(hyper::StatusCode::MovedPermanently)\n                .with_header(hyper::header::Location::new(\"/hyper_staticfile/\"));\n            Box::new(future::ok(res))\n        } else {\n            self.static_.call(req)\n        }\n    }\n}\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n    let listener = TcpListener::bind(&amp;addr, &amp;handle).unwrap();\n\n    let http = Http::new();\n    let server = listener.incoming().for_each(|(sock, addr)| {\n        let s = MainService::new(&amp;handle);\n        http.bind_connection(&amp;handle, sock, addr, s);\n        Ok(())\n    });\n\n    println!(\"Doc server running on http://localhost:3000/\");\n    core.run(server).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 413, "user_id": 5683109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62c83659808b54d9596183ee00c4eb9b?s=128&d=identicon&r=PG&f=1", "display_name": "I3ck", "link": "https://stackoverflow.com/users/5683109/i3ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1319, "favorite_count": 1, "accepted_answer_id": 45713981, "answer_count": 1, "score": 3, "last_activity_date": 1502887693, "creation_date": 1502886224, "question_id": 45713444, "link": "https://stackoverflow.com/questions/45713444/how-can-i-serve-static-files-a-directory-in-hyper", "title": "How can I serve static files / a directory in hyper?", "body": "<p>I want to serve some static files (.js, .css, ...) from my hyper server.<br>\nCurrently the only way I can think of is inlining the files as strings / load them on startup.<br>\nIs there a better way to directly serve an entire directory or selected files?</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1502892007, "post_id": 45713314, "comment_id": 78389252, "body": "If you&#39;re trying to replicate something that would work in a managed language, reference counting and <a href=\"https://doc.rust-lang.org/std/rc/struct.Weak.html\" rel=\"nofollow noreferrer\">weak (non-owning) references</a> can allow you to emulate something like this. But the safety will then be enforced at runtime, not by the compiler."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1502894643, "post_id": 45713314, "comment_id": 78391293, "body": "What is the purpose of defining <code>foo</code> ahead of time, here?"}, {"owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1502900816, "post_id": 45713314, "comment_id": 78395525, "body": "@Matthieu M. There are other struct fields and I do this in a loop where performance is important. In this example it&#39;s completely useless :D"}, {"owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1502901161, "post_id": 45713314, "comment_id": 78395726, "body": "@trentcl While this is irrelevant in my case as the only reason I&#39;m actually not just creating a new struct is for performance reasons, this still seems interesting. Would you mind to post an answer using either &#180;Rc&lt;&gt;` or weak references? If you don&#39;t I will just look a bit into this and create a self answer once I have the time."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1502903331, "post_id": 45713659, "comment_id": 78396927, "body": "Note: It might be better to pass <code>FooCore</code> by reference if it&#39;s anything not trivial."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527691984, "post_id": 45713659, "comment_id": 88225190, "body": "I can&#39;t get this to work if FooCore is referenced as mutable."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527692352, "post_id": 45713659, "comment_id": 88225455, "body": "@Cthutu <a href=\"https://play.rust-lang.org/?gist=ac7b54c5f8eb44437ab130d2c88ca1a2&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">works fine for me</a>. Notice how you didn&#39;t specify what you mean by &quot;can&#39;t get this to work&quot; even means? That means that I can&#39;t point to an appropriate Q&amp;A that explains what problem you are experiencing. Even in comments, it&#39;s important to practice the effective communication skills that are so valuable here on SO as well as in the real world."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1527693291, "post_id": 45713659, "comment_id": 88226095, "body": "It&#39;s hard to describe it because I really don&#39;t have a clue what Rust is doing.  In the example above, change <code>core: FooCore</code> to <code>core: &amp;mut FooCore</code> and you will see what I mean."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 1, "creation_date": 1527693553, "post_id": 45713659, "comment_id": 88226262, "body": "@Cthutu <a href=\"https://play.rust-lang.org/?gist=ac7b54c5f8eb44437ab130d2c88ca1a2&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">I did change <code>core</code> to a mutable reference and it worked for me</a>, as I linked in my previous comment. <i>It&#39;s hard to describe it because I really don&#39;t have a clue what Rust is doing.</i> \u2014 I&#39;m not asking you to describe anything. All you have to do is provide a link to the playground with the failing code. At the very least, you could copy and paste the error message you get. Rust has <i>really good</i> error messages."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529671839, "post_id": 45713659, "comment_id": 88971198, "body": "Sorry I didn&#39;t see your message until now.  I&#39;ve created an example code that splits up Foo into FooCore &amp; Foo: <a href=\"https://gist.github.com/rust-play/e68586753b785c02b6c27c02bf90f5b0\" rel=\"nofollow noreferrer\">gist.github.com/rust-play/e68586753b785c02b6c27c02bf90f5b0</a>.  The issue is making the FooCore instance mutable.  I am not sure how to fix this yet."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529695157, "post_id": 45713659, "comment_id": 88983273, "body": "@Cthutu no, the issue is that you are attempting to have mutable aliasing. Go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#mutable-references\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i> chapter on mutable references</a>. You cannot have two mutable references to the same value."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529784975, "post_id": 45713659, "comment_id": 89002889, "body": "I understand why it doesn&#39;t work.  And I understand the rules and why they&#39;re there.  What I don&#39;t understand is what I have to do to get what I want: a way to replace an instance of a mutable data structure inside another mutable data structure.  I haven&#39;t found an answer to this problem."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529785045, "post_id": 45713659, "comment_id": 89002910, "body": "For example, how can I change the code in the gist I posted to get what I want in the main function?  This information would be vital.  If I can&#39;t solve this simple problem in Rust, I will not be recommending it.  I was a big fan up until this point."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 2, "creation_date": 1529788051, "post_id": 45713659, "comment_id": 89003576, "body": "@Cthutu <a href=\"https://play.rust-lang.org/?gist=e0ba85f9e74a64cd3318c08c8dd4b56e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Solved</a>. <a href=\"https://gist.github.com/d2965c155b891e83b6c56f7b651957a6\" rel=\"nofollow noreferrer\">Solved</a>. <a href=\"https://play.rust-lang.org/?gist=3ec722e5e415f64bcefb91514a438917&amp;version=nightly&amp;mode=debug\" rel=\"nofollow noreferrer\">Solved</a>. I don&#39;t get what you are trying to accomplish by threatening to not recommend Rust. If Rust isn&#39;t appropriate for your case or if it&#39;s not understandable to you, <i>that&#39;s ok</i>. Not everything is for everyone \u2014 use what is comfortable to you and what lets you do what you need to do."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529792425, "post_id": 45713659, "comment_id": 89004524, "body": "The solution was to add braces?  So redefining foo doesn&#39;t not destroy the original ?  Does this mean that only scope defined by braces define the destruction points?"}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529792575, "post_id": 45713659, "comment_id": 89004556, "body": "I tried refcells before and didn&#39;t get far with them.  BTW, it wasn&#39;t a threat.  I need to determine the right tools and if I am fighting the Rust compiler all the time then practically it won&#39;t be useful for me or my team, even in theory it is a better language than, say, C++."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1529795616, "post_id": 45713659, "comment_id": 89004960, "body": "@Cthutu Rust policy is to fight with compiler time error instead of runtime error, thus C++ is not bad on this point too. Whatever if you expect code in rust without compile error everytime, I think you will be disappointed"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1527648096, "last_edit_date": 1527648096, "creation_date": 1502886764, "answer_id": 45713659, "question_id": 45713314, "link": "https://stackoverflow.com/questions/45713314/is-it-possible-to-have-a-struct-which-contains-a-reference-to-a-value-which-has/45713659#45713659", "title": "Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?", "body": "<blockquote>\n  <p>This is obviously completely safe</p>\n</blockquote>\n\n<p>What is obvious to humans isn't always obvious to the compiler; sometimes the compiler isn't as smart as humans (but it's way more vigilant!).</p>\n\n<p>In this case, your original code compiles when <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a> are enabled:</p>\n\n<pre><code>#![feature(nll)]\n\nstruct Foo&lt;'a&gt; {\n    boo: Option&lt;&amp;'a mut String&gt;,\n}\n\nfn main() {\n    let mut foo = Foo { boo: None };\n    {\n        let mut string = \"Hello\".to_string();\n        foo.boo = Some(&amp;mut string);\n        foo.boo.unwrap().push_str(\", I am foo!\");\n        foo.boo = None;\n    } // string goes out of scope. foo does not reference string anymore\n\n} // foo goes out of scope\n</code></pre>\n\n<p>This is <em>only</em> because <code>foo</code> is never used once it would be invalid (after <code>string</code> goes out of scope), <em>not</em> because you set the value to <code>None</code>. Trying to print out the value after the innermost scope would still result in an error.</p>\n\n<blockquote>\n  <p>Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?</p>\n</blockquote>\n\n<p><em>The purpose of Rust's borrowing system</em> is to ensure that things holding references <strong>do not</strong> live longer than the referred-to item.</p>\n\n<h3>After non-lexical lifetimes</h3>\n\n<p>Maybe, so long as you <em>don't make use</em> of the reference after it is no longer valid. This works, for example:</p>\n\n<pre><code>#![feature(nll)]\n\nstruct Foo&lt;'a&gt; {\n    boo: Option&lt;&amp;'a mut String&gt;,\n}\n\nfn main() {\n    let mut foo = Foo { boo: None };\n    // This lives less than `foo`\n    let mut string1 = \"Hello\".to_string();\n    foo.boo = Some(&amp;mut string1); \n    // This lives less than both `foo` and `string1`!\n    let mut string2 = \"Goodbye\".to_string();\n    foo.boo = Some(&amp;mut string2); \n}\n</code></pre>\n\n<h3>Before non-lexical lifetimes</h3>\n\n<p>No. The borrow checker is not smart enough to tell that you cannot / don't use the reference after it would be invalid. It's overly conservative.</p>\n\n<p>In this case, you are running into the fact that lifetimes are represented as part of the type. Said another way, the <em>generic lifetime parameter</em> <code>'a</code> has been \"filled in\" with a concrete lifetime value covering the lines where <code>string</code> is alive. However, the lifetime of <code>foo</code> is longer than those lines, thus you get an error. </p>\n\n<p>The compiler does not look at what actions your code takes; once it has seen that you parameterize it with that specific lifetime, that's what it is.</p>\n\n<hr>\n\n<p>The usual fix I would reach for is to split the type into two parts, those that need the reference and those that don't:</p>\n\n<pre><code>struct FooCore {\n    size: i32,\n}\n\nstruct Foo&lt;'a&gt; {\n    core: FooCore, \n    boo: &amp;'a mut String,\n}\n\nfn main() {\n    let core = FooCore { size: 42 };\n    let core = {\n        let mut string = \"Hello\".to_string();\n        let foo = Foo { core, boo: &amp;mut string };\n        foo.boo.push_str(\", I am foo!\");\n        foo.core        \n    }; // string goes out of scope. foo does not reference string anymore\n\n} // foo goes out of scope\n</code></pre>\n\n<p>Note how this removes the need for the <code>Option</code> \u2014 your types now tell you if the string is present or not.</p>\n\n<p>An alternate solution would be to map the whole type when setting the string. In this case, we consume the whole variable and change the type by changing the lifetime:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    boo: Option&lt;&amp;'a mut String&gt;,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn set&lt;'b&gt;(self, boo: &amp;'b mut String) -&gt; Foo&lt;'b&gt; {\n        Foo { boo: Some(boo) }\n    }\n\n    fn unset(self) -&gt; Foo&lt;'static&gt; {\n        Foo { boo: None }\n    }\n}\n\nfn main() {\n    let foo = Foo { boo: None };\n    let foo = {\n        let mut string = \"Hello\".to_string();\n        let mut foo = foo.set(&amp;mut string);\n        foo.boo.as_mut().unwrap().push_str(\", I am foo!\");\n        foo.unset()\n    }; // string goes out of scope. foo does not reference string anymore\n\n} // foo goes out of scope\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502986386, "post_id": 45739957, "comment_id": 78437943, "body": "Pedantically, this <i>still</i> doesn&#39;t allow you to have a reference to something with a shorter lifetime ^_^. It gives you something that can tell you if the value is kept alive by something then from that allows you to get a reference."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1503082825, "post_id": 45739957, "comment_id": 78484878, "body": "Yep, that&#39;s a more technically correct (the best kind of correct!) way of putting it."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1502985643, "creation_date": 1502985643, "answer_id": 45739957, "question_id": 45713314, "link": "https://stackoverflow.com/questions/45713314/is-it-possible-to-have-a-struct-which-contains-a-reference-to-a-value-which-has/45739957#45739957", "title": "Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?", "body": "<p>Shepmaster's answer is completely correct: you can't express this with lifetimes, which are a compile time feature. But if you're trying to replicate something that would work in a managed language, you can use <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">reference counting</a> to enforce safety at run time.</p>\n\n<p>(<em>Safety</em> in the usual Rust sense of memory safety. Panics and leaks are still possible in safe Rust; there are good reasons for this, but that's a topic for another question.)</p>\n\n<p>Here's an example (<a href=\"https://play.rust-lang.org/?gist=bd4fc661dfa041ababb181ad7c390b76&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>). <code>Rc</code> pointers disallow mutation, so I had to add a layer of <code>RefCell</code> to imitate the code in the question.</p>\n\n<pre><code>use std::rc::{Rc,Weak};\nuse std::cell::RefCell;\n\nstruct Foo {\n    boo: Weak&lt;RefCell&lt;String&gt;&gt;,\n}\n\nfn main() {\n    let mut foo = Foo { boo: Weak::new() };\n    {\n        // create a string with a shorter lifetime than foo\n        let string = \"Hello\".to_string();\n        // move the string behind an Rc pointer\n        let rc1 = Rc::new(RefCell::new(string));\n        // weaken the pointer to store it in foo\n        foo.boo = Rc::downgrade(&amp;rc1);\n\n        // accessing the string\n        let rc2 = foo.boo.upgrade().unwrap();\n        assert_eq!(\"Hello\", *rc2.borrow());\n\n        // mutating the string\n        let rc3 = foo.boo.upgrade().unwrap();\n        rc3.borrow_mut().push_str(\", I am foo!\");\n        assert_eq!(\"Hello, I am foo!\", *rc3.borrow());\n\n    } // rc1, rc2 and rc3 go out of scope and string is automatically dropped.\n    // foo.boo now refers to a dropped value and cannot be upgraded anymore.\n    assert!(foo.boo.upgrade().is_none());\n}\n</code></pre>\n\n<p>Notice that I didn't have to reassign <code>foo.boo</code> before <code>string</code> went out of scope, like in your example -- the <code>Weak</code> pointer is automatically marked invalid when the last extant <code>Rc</code> pointer is dropped. This is one way in which Rust's type system still helps you enforce memory safety even after dropping the strong compile-time guarantees of shared <code>&amp;</code> pointers.</p>\n"}], "owner": {"reputation": 696, "user_id": 8159982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vhr5o.jpg?s=128&g=1", "display_name": "lncr", "link": "https://stackoverflow.com/users/8159982/lncr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 663, "favorite_count": 0, "accepted_answer_id": 45713659, "answer_count": 2, "score": 4, "last_activity_date": 1527648096, "creation_date": 1502885740, "last_edit_date": 1502886679, "question_id": 45713314, "link": "https://stackoverflow.com/questions/45713314/is-it-possible-to-have-a-struct-which-contains-a-reference-to-a-value-which-has", "title": "Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?", "body": "<p>Here is a simplified version of what I want to archive:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    boo: Option&lt;&amp;'a mut String&gt;,\n}\n\nfn main() {\n    let mut foo = Foo { boo: None };\n    {\n        let mut string = \"Hello\".to_string();\n        foo.boo = Some(&amp;mut string);\n        foo.boo.unwrap().push_str(\", I am foo!\");\n        foo.boo = None;\n    } // string goes out of scope. foo does not reference string anymore\n\n} // foo goes out of scope\n</code></pre>\n\n<p>This is obviously completely safe as <code>foo.boo</code> is <code>None</code> once <code>string</code> goes out of scope.</p>\n\n<p>Is there a way to tell this to the compiler?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "edited": false, "score": 0, "creation_date": 1527671039, "post_id": 45867246, "comment_id": 88210196, "body": "Many thanks for posting your solution, helped me a lot."}], "tags": [], "owner": {"reputation": 2755, "user_id": 382508, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/162ba763482bf53ed1d9a4589fad393f?s=128&d=identicon&r=PG", "display_name": "daaku", "link": "https://stackoverflow.com/users/382508/daaku"}, "is_accepted": false, "score": 1, "last_activity_date": 1503594005, "creation_date": 1503594005, "answer_id": 45867246, "question_id": 45712156, "link": "https://stackoverflow.com/questions/45712156/implementing-hyperclientconnect-for-testing/45867246#45867246", "title": "Implementing hyper::client::Connect for testing", "body": "<p>The reason the original code didn't work was because the reader side provided the response before the client sent the request, so <code>tokio-proto</code> errored out with <code>request / response mismatch</code>. The fix turns out to be non trivial in that first we need to arrange for the reader to block, or more specifically error out with <code>std::io::ErrorKind::WouldBlock</code> to indicate to the event loop that there isn't anything yet, but don't consider it an <code>EOF</code>. Additionally once we get the write which indicates the request has been sent and the tokio-proto machinery is waiting for a response, we use <code>futures::task::current.notify</code> to unblock the read. Here's an updated implementation that works as expected:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::{future, Future, Stream, task, Poll};\nuse std::str::from_utf8;\nuse std::io::{self, Cursor, Read, Write};\nuse tokio_io::{AsyncRead, AsyncWrite};\n\nstruct Client&lt;'a, C: 'a&gt; {\n    client: &amp;'a hyper::Client&lt;C&gt;,\n    url: &amp;'a str,\n}\n\nimpl&lt;'a, C: hyper::client::Connect&gt; Client&lt;'a, C&gt; {\n    fn get(&amp;self) -&gt; Box&lt;Future&lt;Item = String, Error = hyper::Error&gt;&gt; {\n        Box::new(self.client.get(self.url.parse().unwrap()).and_then(|res| {\n            let body = Vec::new();\n            res.body()\n                .fold(body, |mut acc, chunk| {\n                    acc.extend_from_slice(chunk.as_ref());\n                    Ok::&lt;_, hyper::Error&gt;(acc)\n                })\n                .and_then(move |value| Ok(String::from(from_utf8(&amp;value).unwrap())))\n        }))\n    }\n}\n\nstruct StaticStream {\n    wrote: bool,\n    body: Cursor&lt;Vec&lt;u8&gt;&gt;,\n}\n\nimpl Read for StaticStream {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n        if self.wrote {\n            self.body.read(buf)\n        } else {\n            Err(io::ErrorKind::WouldBlock.into())\n        }\n    }\n}\n\nimpl Write for StaticStream {\n    fn write&lt;'a&gt;(&amp;mut self, buf: &amp;'a [u8]) -&gt; io::Result&lt;usize&gt; {\n        self.wrote = true;\n        task::current().notify();\n        Ok(buf.len())\n    }\n\n    fn flush(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        Ok(())\n    }\n}\n\nimpl AsyncRead for StaticStream {}\n\nimpl AsyncWrite for StaticStream {\n    fn shutdown(&amp;mut self) -&gt; Poll&lt;(), io::Error&gt; {\n        Ok(().into())\n    }\n}\n\nstruct StaticConnector&lt;'a&gt; {\n    body: &amp;'a [u8],\n}\n\nimpl&lt;'a&gt; StaticConnector&lt;'a&gt; {\n    fn new(body: &amp;'a [u8]) -&gt; StaticConnector {\n        StaticConnector { body: body }\n    }\n}\n\nimpl&lt;'a&gt; hyper::server::Service for StaticConnector&lt;'a&gt; {\n    type Request = hyper::Uri;\n    type Response = StaticStream;\n    type Error = std::io::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, _: Self::Request) -&gt; Self::Future {\n        Box::new(future::ok(StaticStream {\n            wrote: false,\n            body: Cursor::new(self.body.to_vec()),\n        }))\n    }\n}\n\nfn main() {\n    let mut core = tokio_core::reactor::Core::new().unwrap();\n    let handle = core.handle();\n\n    // My StaticConnector for testing\n    let hyper_client = hyper::Client::configure()\n        .connector(StaticConnector::new(\n            b\"\\\n                 HTTP/1.1 200 OK\\r\\n\\\n                 Content-Length: 8\\r\\n\\\n                 \\r\\n\\\n                 Maldives\\\n                 \",\n        ))\n        .build(&amp;handle);\n\n    // Real Connector\n    /*\n    let hyper_client = hyper::Client::configure().build(&amp;handle);\n    */\n\n    let client = Client {\n        client: &amp;hyper_client,\n        url: \"http://ifconfig.co/country\",\n    };\n    let result = core.run(client.get()).unwrap();\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c0f434d3260f1cd5cf9f048ca96eabde&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Note: This implementation works for simple cases, but I haven't tested more complex scenarios. For example one thing I'm unsure of is how large request/responses behave as they may involve more than 1 read/write call.</p>\n"}], "owner": {"reputation": 2755, "user_id": 382508, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/162ba763482bf53ed1d9a4589fad393f?s=128&d=identicon&r=PG", "display_name": "daaku", "link": "https://stackoverflow.com/users/382508/daaku"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1503594005, "creation_date": 1502882371, "last_edit_date": 1502888613, "question_id": 45712156, "link": "https://stackoverflow.com/questions/45712156/implementing-hyperclientconnect-for-testing", "title": "Implementing hyper::client::Connect for testing", "body": "<p>I'm trying to test some code that uses a <code>hyper::Client</code> by implementing my own <code>hyper::client::Connect</code> using a static response. I've got the types figured out, but can't figure out a runtime issue where <code>tokio-proto</code> complains saying <code>request / response mismatch</code>. Here's a simplified version of my code that demonstrates the failure:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::{future, Future, Stream};\nuse std::str::from_utf8;\nuse std::io::Cursor;\n\nstruct Client&lt;'a, C: 'a&gt; {\n    client: &amp;'a hyper::Client&lt;C&gt;,\n    url: &amp;'a str,\n}\n\nimpl&lt;'a, C: hyper::client::Connect&gt; Client&lt;'a, C&gt; {\n    fn get(&amp;self) -&gt; Box&lt;Future&lt;Item = String, Error = hyper::Error&gt;&gt; {\n        Box::new(self.client.get(self.url.parse().unwrap()).and_then(|res| {\n            let body = Vec::new();\n            res.body()\n                .fold(body, |mut acc, chunk| {\n                    acc.extend_from_slice(chunk.as_ref());\n                    Ok::&lt;_, hyper::Error&gt;(acc)\n                })\n                .and_then(move |value| Ok(String::from(from_utf8(&amp;value).unwrap())))\n        }))\n    }\n}\n\nstruct StaticConnector&lt;'a&gt; {\n    body: &amp;'a [u8],\n}\n\nimpl&lt;'a&gt; StaticConnector&lt;'a&gt; {\n    fn new(body: &amp;'a [u8]) -&gt; StaticConnector {\n        StaticConnector { body: body }\n    }\n}\n\nimpl&lt;'a&gt; hyper::server::Service for StaticConnector&lt;'a&gt; {\n    type Request = hyper::Uri;\n    type Response = Cursor&lt;Vec&lt;u8&gt;&gt;;\n    type Error = std::io::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, _: Self::Request) -&gt; Self::Future {\n        Box::new(future::ok(Cursor::new(self.body.to_vec())))\n    }\n}\n\nfn main() {\n    let mut core = tokio_core::reactor::Core::new().unwrap();\n    let handle = core.handle();\n\n    // My StaticConnector for testing\n    let hyper_client = hyper::Client::configure()\n        .connector(StaticConnector::new(\n            b\"\\\n                 HTTP/1.1 200 OK\\r\\n\\\n                 Content-Length: 8\\r\\n\\\n                 \\r\\n\\\n                 Maldives\\\n                 \",\n        ))\n        .build(&amp;handle);\n\n    // Real Connector\n    /*\n    let hyper_client = hyper::Client::configure().build(&amp;handle);\n    */\n\n    let client = Client {\n        client: &amp;hyper_client,\n        url: \"http://ifconfig.co/country\",\n    };\n    let result = core.run(client.get()).unwrap();\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4603feb41a59a69ea478f7d62af85c44&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I'm guessing it's my use of the <code>Cursor</code> for <code>Io</code> that is incomplete in some way, but I'm failing to debug and make progress. One thought is that the writes to this <code>Cursor</code> the <code>hyper::Client</code> presumably makes are not working as expected. Maybe I need a combination of a <code>sink</code> for the writes and the static content for the reads? All ideas I've failed to make progress using!</p>\n"}, {"tags": ["rust", "lazy-initialization"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1502881255, "post_id": 45711295, "comment_id": 78381502, "body": "Not a solution, but a potential explanation of why <code>sysinfo</code> doesn&#39;t let you do this: When you create an instance of the <code>System</code> struct, <a href=\"https://docs.rs/sysinfo/0.3.13/src/sysinfo/linux/system.rs.html#100\" rel=\"nofollow noreferrer\">it retrieves all its data up front</a>, <a href=\"https://docs.rs/sysinfo/0.3.13/src/sysinfo/linux/system.rs.html#191\" rel=\"nofollow noreferrer\">storing the process list in a <code>HashMap</code></a>. If <code>System</code> allowed you to take ownership of one of its <code>Process</code> objects, it would have to remove it from the <code>HashMap</code>, as it can&#39;t have multiple owners. This would mean that the process list wouldn&#39;t be correct for later lookups!"}, {"owner": {"reputation": 875, "user_id": 1313057, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5f3e5fe7d6a4062ad188336e06f1cb78?s=128&d=identicon&r=PG", "display_name": "Philip Daniels", "link": "https://stackoverflow.com/users/1313057/philip-daniels"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1502881458, "post_id": 45711295, "comment_id": 78381647, "body": "@JoeClay That must be why it is so slow...I have just done an strace on it and I can see it statting every process..."}], "answers": [{"comments": [{"owner": {"reputation": 875, "user_id": 1313057, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5f3e5fe7d6a4062ad188336e06f1cb78?s=128&d=identicon&r=PG", "display_name": "Philip Daniels", "link": "https://stackoverflow.com/users/1313057/philip-daniels"}, "edited": false, "score": 0, "creation_date": 1502915511, "post_id": 45711747, "comment_id": 78403006, "body": "Thanks Matthieu. My mental model was wrong. When I see the <code>&amp;</code> I was thinking &quot;this is a heap allocated object, I just need to get hold of the bits&quot;. Thinking of <code>&amp;</code> as meaning &quot;is owned by someone else&quot; is what I should be doing."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1502881194, "creation_date": 1502881194, "answer_id": 45711747, "question_id": 45711295, "link": "https://stackoverflow.com/questions/45711295/how-can-i-eliminate-this-seemingly-unnecessary-clone-call-using-the-sysinfo/45711747#45711747", "title": "How can I eliminate this (seemingly) unnecessary clone() call using the sysinfo crate?", "body": "<p>From a cursory reading of the <code>sysinfo</code> crate, the answer is <strong>no</strong>.</p>\n\n<p>There does not appear to be a method which returns anything but references to <code>Process</code>; and therefore <code>System</code> never relinquishes ownership and it would be unsafe to attempt to steal it...</p>\n\n<hr>\n\n<p>A solution, which seems more palatable to me, would be to change <code>ProgramInfo</code> to:</p>\n\n<ul>\n<li>hold onto a <code>system: Lazy&lt;System&gt;</code>,</li>\n<li>query <code>system</code> each time for the current PID.</li>\n</ul>\n\n<p>How efficient that is would depend on whether <code>system</code> re-reads the process info each time, or not.</p>\n\n<hr>\n\n<p>That being said, from a <em>purely theoretical standpoint</em>, you could indeed steal it anyway:</p>\n\n<ul>\n<li>you can use <code>ptr::read</code> to create a copy of the instance,</li>\n<li>then call <code>mem::forget</code> on <code>system</code> so the <code>System</code> instance is <strong>leaked</strong> and thus never destroyed.</li>\n</ul>\n\n<p>I doubt this is what you want, I would certainly never recommend it.</p>\n"}], "owner": {"reputation": 875, "user_id": 1313057, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5f3e5fe7d6a4062ad188336e06f1cb78?s=128&d=identicon&r=PG", "display_name": "Philip Daniels", "link": "https://stackoverflow.com/users/1313057/philip-daniels"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 45711747, "answer_count": 1, "score": 2, "last_activity_date": 1502885139, "creation_date": 1502879825, "last_edit_date": 1502885139, "question_id": 45711295, "link": "https://stackoverflow.com/questions/45711295/how-can-i-eliminate-this-seemingly-unnecessary-clone-call-using-the-sysinfo", "title": "How can I eliminate this (seemingly) unnecessary clone() call using the sysinfo crate?", "body": "<p>I'm using the <a href=\"https://docs.rs/lazy-init/0.1.1/lazy_init/struct.Lazy.html\" rel=\"nofollow noreferrer\">lazy-init</a> and <a href=\"https://docs.rs/sysinfo/0.3.13/sysinfo/\" rel=\"nofollow noreferrer\">sysinfo</a> crates together. Getting information about a process is quite expensive so I thought I would hide it behind a <code>Lazy&lt;T&gt;</code>, in fact a <code>Lazy&lt;Process&gt;</code>. So I have a little struct - just focusing on the pertinent bits:</p>\n\n<pre><code>pub struct ProgramInfo {\n    process: Lazy&lt;Process&gt;\n}\n</code></pre>\n\n<p>and a function to get the <code>Process</code>:</p>\n\n<pre><code>impl ProgramInfo {\n    pub fn process(&amp;self) -&gt; &amp;Process {\n        self.process.get_or_create(|| {\n            let system = System::new();\n            let pid = sysinfo::get_current_pid();\n            let ref_to_process = system.get_process(pid).unwrap();\n            ref_to_process.clone()\n    })\n}\n</code></pre>\n\n<p>I added the <code>clone()</code> to get it to compile, but it bothers me because it appears unnecessary. A second copy of the Process struct is being made simply so that it can be moved into <code>ProgramInfo.process</code>. Is there a way of just moving the <code>Process</code> referenced by <code>ref_to_process</code> instead? I tried changing the last line to just</p>\n\n<pre><code>*ref_to_process\n</code></pre>\n\n<p>but that won't compile, giving error \"cannot move out of borrowed content\".</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 1, "last_activity_date": 1502873971, "last_edit_date": 1502873971, "creation_date": 1502873415, "answer_id": 45709044, "question_id": 45708909, "link": "https://stackoverflow.com/questions/45708909/the-std-documentation-examples-with-question-marks-dont-compile/45709044#45709044", "title": "The std documentation examples with question marks don&#39;t compile", "body": "<p>These examples are currently expected to be run wrapped in a function returning a <code>Result</code>; if you click Run in the upper right corner of the example, you will see that it expands to:</p>\n\n<pre><code>fn main() {\n    use std::fs::File;\n    use std::io::prelude::*;\n\n    fn foo() -&gt; std::io::Result&lt;()&gt; {\n        let mut file = File::create(\"foo.txt\")?;\n        file.write_all(b\"Hello, world!\")?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>This is because functions returning <code>Result</code>s (like <code>File::create</code> and <code>io::Write::write_all</code>) should be handled with possible errors in mind (which is especially important in documentation examples).</p>\n\n<p>There was an <a href=\"https://github.com/rust-lang/rfcs/issues/1176\" rel=\"nofollow noreferrer\">RFC</a> to allow returning <code>Result</code> from <code>main()</code> that was already merged, though the <a href=\"https://github.com/rust-lang/rust/issues/43301\" rel=\"nofollow noreferrer\">issue</a> to allow <code>?</code>s in <code>main()</code> is still active.</p>\n"}], "owner": {"reputation": 343, "user_id": 1870238, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/9de9d6c88fcfb4a8312845c5dce8c1e1?s=128&d=identicon&r=PG", "display_name": "user1870238", "link": "https://stackoverflow.com/users/1870238/user1870238"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "closed_date": 1502884924, "accepted_answer_id": 45709044, "answer_count": 1, "score": 1, "last_activity_date": 1502883763, "creation_date": 1502872934, "last_edit_date": 1502883763, "question_id": 45708909, "link": "https://stackoverflow.com/questions/45708909/the-std-documentation-examples-with-question-marks-dont-compile", "closed_reason": "Duplicate", "title": "The std documentation examples with question marks don&#39;t compile", "body": "<p>I'm having extreme difficulties with the <code>try!</code> and <code>?</code> macro to the point that I'm starting to question the very fabric of reality. I lifted the example below <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\">straight from the rust-docs</a> and it still blows up in my face.</p>\n\n<p><strong>Code:</strong></p>\n\n<pre><code>pub use std::fs::File;\npub use std::io::prelude::*;\n\nfn main() {\n    let mut file: File = File::open(\"foo.txt\")?;\n    file.write_all(b\"Hello, world!\")?;\n}\n</code></pre>\n\n<p><strong>Error:</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n--&gt; src/main.rs:6:23\n|\n6 |     let mut file: File = File::open(\"foo.txt\")?;\n|                          ----------------------\n|                          |\n|                          the trait `std::ops::Try` is not implemented for `()`\n|                          in this macro invocation\n|\n= note: required by `std::ops::Try::from_error`\n\nerror[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n--&gt; src/main.rs:7:2\n|\n7 |     file.write_all(b\"Hello, world!\")?;\n|     ---------------------------------\n|     |\n|     the trait `std::ops::Try` is not implemented for `()`\n|     in this macro invocation\n|\n= note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>I'm on the latest stable release of Rust according to <code>rustup</code> (1.19.0)</p>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502834893, "post_id": 45702112, "comment_id": 78362946, "body": "Why do you think that usage of this library will change the semantics and rules of the rest of the language? Said another way, why do you think that it&#39;s important that gtk-rs is in use? Could this be closed as a duplicate of a hypothetical question that is &quot;How to set a variable inside a Rust closure&quot; ?"}, {"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502835262, "post_id": 45702112, "comment_id": 78363057, "body": "I&#39;m not sure what to rename the question to."}], "answers": [{"comments": [{"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502992853, "post_id": 45703043, "comment_id": 78441585, "body": "Thank you so much, this was it!"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 2, "last_activity_date": 1502842018, "last_edit_date": 1502842018, "creation_date": 1502840233, "answer_id": 45703043, "question_id": 45702112, "link": "https://stackoverflow.com/questions/45702112/how-to-set-a-variable-inside-a-gtk-rs-closure/45703043#45703043", "title": "How to set a variable inside a gtk-rs closure?", "body": "<p><code>TextBufferExt::connect_begin_user_action()</code> accepts <code>Fn</code>-closures, that is closures which can't change their captured environment. When you need to change something that can't be changed, you can use types with interior mutability, like <code>RefCell</code>.</p>\n\n<p>If you'll adjust the type of <code>source</code> to <code>RefCell&lt;String&gt;</code> and change assignment inside closure to <code>*source.borrow_mut() = text;</code>, the code will compile, but there's another problem. You assign a value to the cloned <code>source</code>. </p>\n\n<p>The macro <code>clone!</code> expands into</p>\n\n<pre><code>{\n    let source = source.clone();\n    move |a| {\n       let text = // ...\n       // ...\n    }\n}\n</code></pre>\n\n<p>That is, the closure captures and changes a copy of the variable <code>source</code>, not the original variable. <code>Rc</code> is one of the methods to do what you intended</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n// ...\nlet source = Rc::new(RefCell::new(\"Text\".to_string()));\n// ...\nbuffer.connect_begin_user_action(clone!(source =&gt; move |a| {\n    let text = a.get_text(&amp;a.get_start_iter(), &amp;a.get_end_iter(), false).unwrap();\n    *source.borrow_mut() = text;\n    // ...\n}));\n</code></pre>\n\n<p>Another method is removing <code>clone!</code> macro and capturing <code>source</code> by reference (you'll need to remove <code>move</code> before closure), but in this case it will not work as <code>connect_begin_user_action()</code> expects a closure with <code>'static</code> lifetime, that is a closure with no captured references to local variables.</p>\n"}], "owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 410, "favorite_count": 0, "accepted_answer_id": 45703043, "answer_count": 1, "score": 0, "last_activity_date": 1537710380, "creation_date": 1502833944, "last_edit_date": 1502834729, "question_id": 45702112, "link": "https://stackoverflow.com/questions/45702112/how-to-set-a-variable-inside-a-gtk-rs-closure", "title": "How to set a variable inside a gtk-rs closure?", "body": "<p>I'm building a markdown app, and I want to keep two copies of the text, one a <code>source</code> text, and the other the <code>TextBuffer</code> with all the correct tags and such. </p>\n\n<p>I need to set the contents of this source field inside a closure:</p>\n\n<pre><code>buffer.connect_begin_user_action(clone!(source =&gt; move |a| {\n  let text = a.get_text(&amp;a.get_start_iter(), &amp;a.get_end_iter(), false).unwrap();\n  source = text; // error: cannot assign to captured outer variable in an `Fn` closure\n</code></pre>\n\n<p>An alternative might be to set some attribute on the <code>TextBuffer</code>, but I don't know if this is possible. </p>\n"}, {"tags": ["intellij-idea", "console", "rust"], "comments": [{"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 1, "creation_date": 1502819815, "post_id": 45694766, "comment_id": 78355711, "body": "There is an <a href=\"https://github.com/intellij-rust/intellij-rust/issues/1008\" rel=\"nofollow noreferrer\">issue</a> on GitHub for this. Unfortunately it doesn&#39;t look like there are any plans to fix it."}, {"owner": {"reputation": 391, "user_id": 3121607, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8XDvo.jpg?s=128&g=1", "display_name": "Alesis Joan", "link": "https://stackoverflow.com/users/3121607/alesis-joan"}, "edited": false, "score": 0, "creation_date": 1506342786, "post_id": 45694766, "comment_id": 79767958, "body": "It does happen to me but for another environment: PyCharm on Linux Mint."}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 219, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1502806986, "creation_date": 1502806667, "last_edit_date": 1502806986, "question_id": 45694766, "link": "https://stackoverflow.com/questions/45694766/disable-scrolling-to-the-bottom-of-console-in-intellij-idea-rust-plugin", "title": "Disable scrolling to the bottom of console in Intellij IDEA Rust plugin", "body": "<p>Each time I build my application, the output in the console is scrolled to the bottom. The button forgets its state and I need to click it each time to see first error. How can I fix this?</p>\n\n<p><a href=\"https://i.stack.imgur.com/o6JJs.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/o6JJs.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["rust", "zip"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1502795501, "last_edit_date": 1502795501, "creation_date": 1502795159, "answer_id": 45691585, "question_id": 45690958, "link": "https://stackoverflow.com/questions/45690958/is-there-any-way-to-implement-the-send-trait-for-zipfile/45691585#45691585", "title": "Is there any way to implement the Send trait for ZipFile?", "body": "<p>This is <strong>a limitation of the <code>zip</code> crate's API</strong> and you can't really change anything. The problem is that the file <code>ZipArchive</code> is created by calling <code>new</code> and passing a reader -- something that implements <code>Read</code> and <code>Seek</code>. But these are the only requirements for the reader (in particular, the reader doesn't need to be <code>Clone</code>). Thus, the whole <code>ZipArchive</code> can only own one reader.</p>\n\n<p>But now the <code>ZipArchive</code> is able to produce <code>ZipFile</code>s which implement <code>Read</code> themselves. How does that work if the whole <code>ZipArchive</code> only has one reader? Through sharing! The only reader is shared between the archive and all files. But this sharing is not thread save! A mutable reference to the reader is stored in each <code>ZipFile</code> -- this violates Rust's core principle.</p>\n\n<p>This is a known issue of the crate and is being discussed <a href=\"https://github.com/mvdnes/zip-rs/issues/14\" rel=\"noreferrer\">on the GitHub issue tracker</a>.</p>\n\n<hr>\n\n<p>So what can you do now? Not a whole lot, but a few possibilities (as mentioned by the library author) might be OK for your use case:</p>\n\n<ul>\n<li><p>You could decompress the whole file into memory first, then send the raw data to another thread to do calculations on it. Something like:</p>\n\n<pre><code>let data = Vec::new();\nBufReader::new(file).read_to_end(&amp;mut data)?;\nlet reader_thread= thread::spawn(move || {\n    // Do stuff with `data`\n});\n</code></pre>\n\n<p>But if you just want to compute a cheap hash function on all files, loading the contents into memory is probably slower than computing the hash on the fly and might be infeasible if your files are big.</p></li>\n<li><p>Creating one <code>ZipArchive</code> for each thread. This might be very slow if you have many small files in your archive...</p></li>\n</ul>\n\n<hr>\n\n<p>A tiny hint: starting a thread costs time. You often don't want to start a thread for each unit of work, but rather maintain a fixed number of threads in a thread pool, manage work in a queue and assign work to idle worker threads. <a href=\"https://crates.io/crates/threadpool\" rel=\"noreferrer\">The <code>threadpool</code> crate</a> might serve your needs. </p>\n"}], "owner": {"reputation": 43, "user_id": 8115593, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/804e7e20677370a3c00620d6f7f0be46?s=128&d=identicon&r=PG&f=1", "display_name": "Jakub Onderka", "link": "https://stackoverflow.com/users/8115593/jakub-onderka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "accepted_answer_id": 45691585, "answer_count": 1, "score": 4, "last_activity_date": 1502800636, "creation_date": 1502792496, "last_edit_date": 1502800636, "question_id": 45690958, "link": "https://stackoverflow.com/questions/45690958/is-there-any-way-to-implement-the-send-trait-for-zipfile", "title": "Is there any way to implement the Send trait for ZipFile?", "body": "<p>I want to read a <code>.zip</code> file in a different thread by using the <a href=\"https://crates.io/crates/zip\" rel=\"nofollow noreferrer\">zip crate</a>.</p>\n\n<pre><code>extern crate zip;\n\nuse zip::ZipArchive;\nuse zip::read::ZipFile;\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::thread;\n\nfn compute_hashes(mut file: ZipFile) {\n    let reader_thread= thread::spawn(move || {\n        let mut reader = BufReader::new(file);\n        /* ... */\n    });\n}\n\nfn main() {\n    let mut file = File::open(r\"facebook-JakubOnderka.zip\").unwrap();\n    let mut zip = ZipArchive::new(file).unwrap();\n\n    for i in 0..zip.len() {\n        let mut inside = zip.by_index(i).unwrap();\n\n        if !inside.name().ends_with(\"/\") { // skip directories\n            println!(\"Filename: {}\", inside.name());\n            compute_hashes(inside);\n        }\n    }\n}\n</code></pre>\n\n<p>But the compiler shows me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::io::Read: std::marker::Send` is not satisfied\n  --&gt; src/main.rs:10:24\n   |\n10 |     let reader_thread= thread::spawn(move || {\n   |                        ^^^^^^^^^^^^^ `std::io::Read` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `std::io::Read`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;mut std::io::Read`\n   = note: required because it appears within the type `std::io::Take&lt;&amp;mut std::io::Read&gt;`\n   = note: required because it appears within the type `zip::crc32::Crc32Reader&lt;std::io::Take&lt;&amp;mut std::io::Read&gt;&gt;`\n   = note: required because it appears within the type `zip::read::ZipFileReader&lt;'_&gt;`\n   = note: required because it appears within the type `zip::read::ZipFile&lt;'_&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:10:38: 13:6 file:zip::read::ZipFile&lt;'_&gt;]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>But the same works for the type <code>std::fs::File</code>. Is it necessary to fix the <code>zip</code> crate or is there any other method?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1502791485, "post_id": 45690562, "comment_id": 78338795, "body": "What is your question..? BTW, <code>SomeId</code> is a tuple struct, <code>Something</code> is a normal struct \u2013 not exactly apples and apples if you&#39;re asking about pattern matching."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1502792541, "post_id": 45690562, "comment_id": 78339321, "body": "<a href=\"https://stackoverflow.com/questions/45624813/how-can-i-unpack-a-tuple-struct-like-i-would-a-classic-tuple/45624862\">Related (unpacking tuple struct)</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1502792186, "post_id": 45690833, "comment_id": 78339141, "body": "saying <code>let test = external_struct</code> creates a variable of type <code>SomeId</code> rather than <code>Something</code>."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1502792368, "post_id": 45690833, "comment_id": 78339218, "body": "Ah, I missed that <code>external_struct</code> was a <code>SomeId</code> since it was in the text rather than the code. :-P Apologies, my mistake."}], "tags": [], "owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "is_accepted": true, "score": 5, "last_activity_date": 1502792072, "last_edit_date": 1502792072, "creation_date": 1502791972, "answer_id": 45690833, "question_id": 45690562, "link": "https://stackoverflow.com/questions/45690562/how-do-i-extract-a-value-from-a-tuple-struct/45690833#45690833", "title": "How do I extract a value from a tuple struct?", "body": "<p>You should probably try </p>\n\n<pre><code>let test = Something { id: external_struct.0 };\n</code></pre>\n\n<p>or, to the second question,:</p>\n\n<pre><code>let test = external_struct.0;\n</code></pre>\n\n<p>These structs , of the form , <code>struct structname(variables...)</code> are called tuple structs and acts very similar to <code>tuples</code> in rust.</p>\n"}, {"tags": [], "owner": {"reputation": 2870, "user_id": 2173453, "user_type": "registered", "accept_rate": 41, "profile_image": "https://i.stack.imgur.com/p92s9.jpg?s=128&g=1", "display_name": "Murali", "link": "https://stackoverflow.com/users/2173453/murali"}, "is_accepted": false, "score": 2, "last_activity_date": 1502792494, "last_edit_date": 1502792494, "creation_date": 1502792151, "answer_id": 45690882, "question_id": 45690562, "link": "https://stackoverflow.com/questions/45690562/how-do-i-extract-a-value-from-a-tuple-struct/45690882#45690882", "title": "How do I extract a value from a tuple struct?", "body": "<p>May be you are looking for something like the below?</p>\n\n<pre><code>pub struct SomeId(i32);\n\n#[derive(Debug)]\npub struct Something {\n    pub id: i32,\n}\n\n\nfn main() {\n    let sid = SomeId(10);\n    let sth = Something { id: sid.0 };\n    println!(\"{:?}\", sth);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=11864886f47da124b15c0f33e1c9c3c2&amp;version=stable\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"tags": [], "owner": {"reputation": 154, "user_id": 6261816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ba543809a6a39a1fec992b8bf8721e8?s=128&d=identicon&r=PG&f=1", "display_name": "lukwol", "link": "https://stackoverflow.com/users/6261816/lukwol"}, "is_accepted": false, "score": 5, "last_activity_date": 1502799907, "creation_date": 1502799907, "answer_id": 45692796, "question_id": 45690562, "link": "https://stackoverflow.com/questions/45690562/how-do-i-extract-a-value-from-a-tuple-struct/45692796#45692796", "title": "How do I extract a value from a tuple struct?", "body": "<p>It's also possible to use struct destructuring to extract value from <code>SomeId</code>.</p>\n\n<pre><code>pub struct SomeId(pub i64);\n\n#[derive(Debug)]\npub struct Something {\n    pub id: i64,\n}\n\nfn main() {\n    let some_id = SomeId(42);\n    let SomeId(id) = some_id;\n    let test = Something { id: id };\n    let test: i64 = id;\n}\n</code></pre>\n\n<p><a href=\"https://rustbyexample.com/flow_control/match/destructuring/destructure_structures.html\" rel=\"noreferrer\">Link</a> to more examples.</p>\n"}], "owner": {"reputation": 376, "user_id": 7268884, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/pYfwn.png?s=128&g=1", "display_name": "twistezo", "link": "https://stackoverflow.com/users/7268884/twistezo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2983, "favorite_count": 0, "accepted_answer_id": 45690833, "answer_count": 3, "score": 1, "last_activity_date": 1502800897, "creation_date": 1502790985, "last_edit_date": 1502800897, "question_id": 45690562, "link": "https://stackoverflow.com/questions/45690562/how-do-i-extract-a-value-from-a-tuple-struct", "title": "How do I extract a value from a tuple struct?", "body": "<p>I have an object of a struct with one field from an external library, which is defined as: <code>pub struct SomeId(pub i64);</code></p>\n\n<p>Using <code>println!</code> to print the object shows this, for example: <code>SomeId(123)</code></p>\n\n<p>I created my own struct:</p>\n\n<pre><code>#[derive(Debug)]\npub struct Something {\n    pub id: i64,\n}\n</code></pre>\n\n<p>And I'm trying to put value from external struct <code>SomeId</code> to field <code>id</code> in my struct <code>Something</code>:</p>\n\n<pre><code>let test = Something { id: ?? };\n</code></pre>\n\n<p>or extract value from struct <code>SomeId</code>:</p>\n\n<pre><code>let test: i64 = ??;\n</code></pre>\n"}, {"tags": ["stream", "rust"], "answers": [{"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": false, "score": 0, "last_activity_date": 1502789084, "creation_date": 1502789084, "answer_id": 45690070, "question_id": 45684038, "link": "https://stackoverflow.com/questions/45684038/splitting-a-futuresstream-into-multiple-streams-based-on-a-property-of-the-str/45690070#45690070", "title": "Splitting a futures::Stream into multiple streams based on a property of the stream item", "body": "<p>You could use <a href=\"http://alexcrichton.com/futures-rs/futures/sync/mpsc/index.html\" rel=\"nofollow noreferrer\">channels</a> to represent the index-specific streams. You'd have to spawn one <code>Task</code> that pulls from the original stream and has a map of <code>Sender</code>s.</p>\n"}, {"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": false, "score": 3, "last_activity_date": 1502791140, "last_edit_date": 1502791140, "creation_date": 1502790229, "answer_id": 45690378, "question_id": 45684038, "link": "https://stackoverflow.com/questions/45684038/splitting-a-futuresstream-into-multiple-streams-based-on-a-property-of-the-str/45690378#45690378", "title": "Splitting a futures::Stream into multiple streams based on a property of the stream item", "body": "<p>At one point I had a similar requirement and wrote a <code>group_by</code> operator for <code>Stream</code>.</p>\n\n<p>I haven't yet published this to crates.io as I didn't really feel it was ready for consumption but feel free to take a look at the code at <a href=\"https://github.com/Lukazoid/lz_stream_tools\" rel=\"nofollow noreferrer\">https://github.com/Lukazoid/lz_stream_tools</a> or attempt to use it for yourself.</p>\n\n<p>Add the following to your cargo.toml:</p>\n\n<pre><code>[dependencies]\nlz_stream_tools = { git = \"https://github.com/Lukazoid/lz_stream_tools\" }\n</code></pre>\n\n<p>And <code>extern crate lz_stream_tools;</code> to your bin.rs/lib.rs.</p>\n\n<p>Then from your code you may use it like so:</p>\n\n<pre><code>use lz_stream_tools::StreamTools;\n\nlet groups = some_stream.group_by(|x| x.0);\n</code></pre>\n\n<p><code>groups</code> will now be a <code>Stream</code> of <code>(u32, Stream&lt;Item=Bytes))</code>.</p>\n"}], "owner": {"reputation": 211, "user_id": 2725281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c26408672eb9c84547a5247fb83b7ef?s=128&d=identicon&r=PG&f=1", "display_name": "real-or-random", "link": "https://stackoverflow.com/users/2725281/real-or-random"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 716, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1502791140, "creation_date": 1502750327, "last_edit_date": 1502756215, "question_id": 45684038, "link": "https://stackoverflow.com/questions/45684038/splitting-a-futuresstream-into-multiple-streams-based-on-a-property-of-the-str", "title": "Splitting a futures::Stream into multiple streams based on a property of the stream item", "body": "<p>I have a <code>Stream</code> of items <code>(u32, Bytes)</code> where the integer is an index in the range <code>0..n</code> I would like to split this stream into <code>n</code> streams, basically filtering by the integer.</p>\n\n<p>I considered several possibilities, including</p>\n\n<ul>\n<li>creating <code>n</code> streams each of which peeks at the underlying stream to determine if the next item is for it</li>\n<li>pushing the items to one of <code>n</code> sinks when they arrive, and then use the other side of the sink as a stream again. (This seems to be related to \n<a href=\"https://stackoverflow.com/questions/44990227/forwarding-from-a-futuresstream-to-a-futuressink\">Forwarding from a futures::Stream to a futures::Sink</a>.).</li>\n</ul>\n\n<p>I feel that neither of these possibilities is convincing. The first one seems to create unnecessary overhead and the second one is just not elegant (if it even works, I am not sure).</p>\n\n<p>What's a good way of splitting the stream?</p>\n"}, {"tags": ["concurrency", "rust", "double-checked-locking"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1502741414, "post_id": 45681531, "comment_id": 78322434, "body": "Your question is a reasonable one, but it sounds like <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">an X-Y problem</a>. You may wish to investigate components like <a href=\"https://doc.rust-lang.org/std/sync/struct.Once.html\" rel=\"nofollow noreferrer\"><code>Once</code></a> and <a href=\"https://crates.io/crates/lazy-static\" rel=\"nofollow noreferrer\">lazy-static</a> demonstrated <a href=\"https://stackoverflow.com/q/27791532/155423\">here</a> and <a href=\"https://stackoverflow.com/q/27221504/155423\">here</a>."}], "answers": [{"comments": [{"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502902849, "post_id": 45692413, "comment_id": 78396646, "body": "Thank you for a lot. But I see one mistake (may be I&#39;m wrong). Last read *self.value.get() see write operation in case when self.initialized.load(Ordering::Acquire) == true. For the reasons you mention. But in case if initialized == false, there is not the acquired load between the released store and non-atomic read *self.value.get(). In Java, for example, this is the reason that would make the value volatile (SeqCst)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502903269, "post_id": 45692413, "comment_id": 78396891, "body": "@\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432: I don&#39;t think it&#39;s a mistake. Note that you do not load with <code>Acquire</code> semantics only if <code>self.initialized</code> is true: you first load and then know whether it&#39;s true or false. Therefore, even if it eventually evaluates to <code>false</code>, you execute it with <code>Acquire</code> semantics which sequences the reads <i>after</i> evaluating it (and sequences the write before the store with <code>Release</code> semantics)."}, {"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502904397, "post_id": 45692413, "comment_id": 78397582, "body": "Yes, but after the store with <code>Release</code> semantics we don&#39;t make load with <code>Acquire</code> <b>in the same thread</b>, and just read the value in the race for return. And this read doesn&#39;t see writes because load with <code>Acquire</code> semantic was called before any writes. May be Rust have a guarantee for sequence all read and write in the same thread with shared memory -- then you are right. Just Java does not. And this is a reason for my skepticism."}, {"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502905123, "post_id": 45692413, "comment_id": 78397999, "body": "At the C++ example (the article by Preshing), they store the value in a local variable for avoiding such problems."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502906797, "post_id": 45692413, "comment_id": 78398884, "body": "@\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432: First, do we agree that if <code>self.initialized.load(..)</code> evaluates to <code>true</code> then everything works fine? Now, in the case were <code>self.initialized.load(..)</code> evaluates to <code>false</code>... the atomic semantics are useless indeed. However, I think it doesn&#39;t matter because <i>mutex</i>. AFAIK, when you use a mutex to protect some changes, you have a guarantee that the next thread to obtain the lock will see the changes; in short, locking the mutex is at least as good as a new <code>Acquire</code> call and unlocking it is at least as good as a new <code>Release</code> call."}, {"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502963004, "post_id": 45692413, "comment_id": 78420883, "body": "Yes. If we have read <code>value</code> immediately after load with <code>Acquire</code> everything works fine. And I can believe if we see the result of <code>store</code> under the lock in <code>load</code> with <code>Relaxed</code> everything will fine because mutex synchronizes <code>load</code> and <code>store</code> under the lock. But the thread which initializes the <code>value</code> (both <code>initialized.load</code> return <code>false</code>) might not see its own <code>store</code> when reading the` value` for return. In Java, the local order in one thread works only for local variables, but the <code>value</code> is shared. For avoiding this problem often use local temp copy for shared value."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502968033, "post_id": 45692413, "comment_id": 78424552, "body": "@\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432: This looks like a subtle issue. I&#39;ve never heard of such an issue in C or C++; I think the C and C++ standards guarantee that in a single-thread a read will see previous (sequentials) writes without any need for synchronization and I am surprised that there could be an issue in Java around that. If you know of any article explaining this in more details, I&#39;d be happy to understand it, because as it is it just seems really weird to me."}, {"owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502981921, "post_id": 45692413, "comment_id": 78434896, "body": "Hm... I have reread the <a href=\"https://shipilev.net/blog/2016/close-encounters-of-jmm-kind/\" rel=\"nofollow noreferrer\">post</a> (search for text &quot;WARNING: Second read&quot;) of Aleksey Shipilev who is OpenJDK developer. And looks like this is little bit different situation. My apologies."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "edited": false, "score": 0, "creation_date": 1502983654, "post_id": 45692413, "comment_id": 78436117, "body": "@\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432: Nice article, thanks for the link. I don&#39;t think this applies to C++ (or Rust) because it seems to be relying specifically on the semantics of <code>volatile</code> in Java. In C++ or Rust, <code>volatile</code> works differently (and should not be used for multi-threading), so you have to use atomics or fences. So, with all that, I think that the situation here is fine. (btw, for a reading of ordering, I just realized that LLVM has a pretty nice explanation of each: <a href=\"http://llvm.org/docs/Atomics.html#monotonic\" rel=\"nofollow noreferrer\">llvm.org/docs/Atomics.html#monotonic</a>)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 13, "last_activity_date": 1509594846, "last_edit_date": 1509594846, "creation_date": 1502798356, "answer_id": 45692413, "question_id": 45681531, "link": "https://stackoverflow.com/questions/45681531/what-is-the-right-way-to-write-double-checked-locking-in-rust/45692413#45692413", "title": "What is the right way to write double-checked locking in Rust?", "body": "<blockquote>\n  <p>Does <code>Atomic_.store(true, Ordering::Release)</code> affect other non-atomic write operations?</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<p>Actually, the primary reason <a href=\"https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html\" rel=\"nofollow noreferrer\"><code>Ordering</code></a> exists is to impose some ordering guarantees on non-atomic reads and writes:</p>\n\n<ul>\n<li>within a same thread of execution, for both compiler and CPU,</li>\n<li>so that other threads have guarantees in the order in which they will see the changes.</li>\n</ul>\n\n<p><strong>Relaxed</strong></p>\n\n<p>The less constraining <code>Ordering</code>; the only operations which cannot be reordered are operations on the same atomic value:</p>\n\n<pre><code>atomic.set(4, Ordering::Relaxed);\nother = 8;\nprintln!(\"{}\", atomic.get(Ordering::Relaxed));\n</code></pre>\n\n<p>is guaranteed to print <code>4</code>. If another thread reads that <code>atomic</code> is <code>4</code>, it has no guarantee about whether <code>other</code> is <code>8</code> or not.</p>\n\n<p><strong>Release/Acquire</strong></p>\n\n<p>Write and read barriers, respectively:</p>\n\n<ul>\n<li><strong>Release</strong> is to be used with <code>store</code> operations, and guarantees that prior writes are executed,</li>\n<li><strong>Acquire</strong> is to be used with <code>load</code> operations, and guarantees that further reads will see values at least as fresh as the ones written prior to the corresponding <code>store</code>.</li>\n</ul>\n\n<p>So:</p>\n\n<pre><code>// thread 1\none = 1;\natomic.set(true, Ordering::Release);\ntwo = 2;\n\n// thread 2\nwhile !atomic.get(Ordering::Acquire) {}\n\nprintln!(\"{} {}\", one, two);\n</code></pre>\n\n<p>guarantees that <code>one</code> is <code>1</code>, and says nothing about <code>two</code>.</p>\n\n<p>Note that a <code>Relaxed</code> store with an <code>Acquire</code> load or a <code>Release</code> store with a <code>Relaxed</code> load are essentially meaningless.</p>\n\n<p>Note that Rust provides <code>AcqRel</code>: it behaves as <code>Release</code> for stores and <code>Acquire</code> for loads, so you don't have to remember which is which... I do not recommend it though, since the guarantees provided are so different.</p>\n\n<p><strong>SeqCst</strong></p>\n\n<p>The most constraining <code>Ordering</code>. Guarantees ordering across all threads at once.</p>\n\n<hr>\n\n<blockquote>\n  <p>What is the right way to write double-checked locking in Rust?</p>\n</blockquote>\n\n<p>So, double-checked locking is about taking advantage of those atomic operations to avoid locking when unnecessary.</p>\n\n<p>The idea is to have 3 pieces:</p>\n\n<ul>\n<li>a flag, initially false, and true once the action has been executed,</li>\n<li>a mutex, to guarantee exclusion during initialization,</li>\n<li>a value, to be initialized.</li>\n</ul>\n\n<p>And use them as such:</p>\n\n<ul>\n<li>if the flag is true, value already initialized,</li>\n<li>otherwise, lock the mutex,</li>\n<li>if the flag still false: initialize and set the flag to true,</li>\n<li>release the lock, the value is now initialized.</li>\n</ul>\n\n<p>The difficulty is ensuring that the non-atomic reads/writes are correctly ordered (and become visible in the correct order). In theory, you would need full fences for that; in practice following the idioms of the C11/C++11 memory models will be sufficient since compilers <em>must</em> make it work.</p>\n\n<p>Let's examine the code first (simplified):</p>\n\n<pre><code>struct Lazy&lt;T&gt; {\n    initialized: AtomicBool,\n    lock: Mutex&lt;()&gt;,\n    value: UnsafeCell&lt;Option&lt;T&gt;&gt;,\n}\n\nimpl&lt;T&gt; Lazy&lt;T&gt; {\n    pub fn get_or_create&lt;'a, F&gt;(&amp;'a self, f: F) -&gt; &amp;'a T\n    where\n        F: FnOnce() -&gt; T\n    {\n        if !self.initialized.load(Ordering::Acquire) { // (1)\n            let _lock = self.lock.lock().unwrap();\n\n            if !self.initialized.load(Ordering::Relaxed) { // (2)\n                let value = unsafe { &amp;mut *self.value.get() };\n                *value = Some(f(value));\n                self.initialized.store(true, Ordering::Release); // (3)\n            }\n        }\n\n        unsafe { &amp;*self.value.get() }.as_ref().unwrap()\n    }\n}\n</code></pre>\n\n<p>There are 3 atomic operations, numbered via comments. We can now check which kind of guarantee on memory ordering each must provide for correctness.</p>\n\n<p>(1) if true, a reference to the value is returned, which must reference valid memory. This requires that the writes to this memory be executed before the atomic turns true, and the reads of this memory be executed only after it is true. Thus (1) requires <code>Acquire</code> and (3) requires <code>Release</code>.</p>\n\n<p>(2) on the other hand has no such constraint because locking a <code>Mutex</code> is equivalent to a full memory barrier: all writes are guaranteed to have occured before and all reads will only occur after. As such, there is no further guarantee needed for this load, so <code>Relaxed</code> is the most optimized.</p>\n\n<p>Thus, as far as I am concerned, this implementation of double-checking looks correct in practice.</p>\n\n<hr>\n\n<p>For further reading, I really recommend <a href=\"http://preshing.com/20130930/double-checked-locking-is-fixed-in-cpp11/\" rel=\"nofollow noreferrer\">the article by Preshing</a> which is linked in the piece you linked. It notably highlights the difference between the theory (fences) and practice (atomic loads/stores which are lowered to fences).</p>\n"}], "owner": {"reputation": 487, "user_id": 5388450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh5.googleusercontent.com/-qLG4_TrbSJg/AAAAAAAAAAI/AAAAAAAAAj4/SKl5L6G8Z38/photo.jpg?sz=128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041c\u0435\u043d\u044c\u0448\u0438\u043a\u043e\u0432", "link": "https://stackoverflow.com/users/5388450/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9c%d0%b5%d0%bd%d1%8c%d1%88%d0%b8%d0%ba%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 613, "favorite_count": 0, "accepted_answer_id": 45692413, "answer_count": 1, "score": 9, "last_activity_date": 1509594846, "creation_date": 1502738159, "last_edit_date": 1502740383, "question_id": 45681531, "link": "https://stackoverflow.com/questions/45681531/what-is-the-right-way-to-write-double-checked-locking-in-rust", "title": "What is the right way to write double-checked locking in Rust?", "body": "<p>I found <a href=\"http://blog.kylehuey.com/post/156464146312/lazy-initialization-in-rust\" rel=\"noreferrer\">this article</a>, but it looks wrong because <code>Cell</code> does not guarantee a synchronization between the <code>set()</code> under a lock and the <code>get()</code> over the lock.</p>\n\n<p>Does <code>Atomic_.store(true, Ordering::Release)</code> affect other non-atomic write operations?</p>\n\n<p>I tried to write it with <code>AtomicPtr</code> which looks close to Java-style but it failed. I couldn't find examples of the correct using of <code>AtomicPtr</code> in such cases.</p>\n"}, {"tags": ["linux", "command-line", "process", "rust", "command"], "comments": [{"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 1, "creation_date": 1502734365, "post_id": 45680349, "comment_id": 78318690, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/21011330/in-rust-how-do-i-invoke-a-system-command-and-capture-its-output\">In Rust, how do I invoke a system command and capture its output?</a>"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "reply_to_user": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 1, "creation_date": 1502734484, "post_id": 45680349, "comment_id": 78318748, "body": "@Malice Please read the post before reporting a duplicate or explain why it is a duplicate. I specifically asked for a lower level interface that is not std::process::Command"}, {"owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 3, "creation_date": 1502735025, "post_id": 45680349, "comment_id": 78319023, "body": "Can you expand upon what you mean by a &quot;lower level interface&quot; and why you require one? Creating a subprocess to execute a command is inherently challenging and error-prone which might explain why <code>std::process::Command</code> may seem complex to you. I would imagine any lower level interface would be just as complex. As far as documentation, this seems pretty good to me - <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/process/struct.Command.html</a>. If you have a specific question about the docs/using Command, please edit your question to address that."}, {"owner": {"reputation": 1769, "user_id": 822068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0LKR7.jpg?s=128&g=1", "display_name": "behnam", "link": "https://stackoverflow.com/users/822068/behnam"}, "edited": false, "score": 5, "creation_date": 1502735326, "post_id": 45680349, "comment_id": 78319170, "body": "A single string is <i>not</i> a lower-level interface. In a command-line shell (like Windows&#39; cmd or <i>nix bash), the single string gets parsed and split into components, and those components get put in place in the memory in order to execute the command as you have desired.  The <code>std::process:Command</code> interface *is</i> the lower-level interface here, and you can easily write a parser for your <i>expected</i> syntax, to take one string and split it into something feedable to this API. But, that&#39;s higher-level logic and is left up to your taste and need."}, {"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 1, "creation_date": 1502735516, "post_id": 45680349, "comment_id": 78319285, "body": "I think <code>std::process:Command</code> gives you more control rather than a string command"}, {"owner": {"reputation": 233489, "user_id": 14122, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5e2861b08f37fa306fbf5384994af688?s=128&d=identicon&r=PG", "display_name": "Charles Duffy", "link": "https://stackoverflow.com/users/14122/charles-duffy"}, "edited": false, "score": 2, "creation_date": 1502736667, "post_id": 45680349, "comment_id": 78319899, "body": "If you want to talk about &quot;complex and hard to debug&quot;, there&#39;s little more complex than having code you&#39;re running go through a shell. Trying to cover the corner cases if you substitute untrusted data in is <b>hard</b> -- as in, it&#39;s been the cause of many, many major security bugs, including ones in products made by people who should have known better. I&#39;ve caught some of those (shell injection) bugs myself. Don&#39;t open yourself up -- <b>use something that maps to the OS interface, which accepts a single array of C strings as argv, and optionally another to specify the environment</b>."}, {"owner": {"reputation": 537, "user_id": 9084915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ff65e99963b96ac06f17208e71f37db?s=128&d=identicon&r=PG&f=1", "display_name": "chub500", "link": "https://stackoverflow.com/users/9084915/chub500"}, "edited": false, "score": 0, "creation_date": 1589490387, "post_id": 45680349, "comment_id": 109324109, "body": "If the OP is truly interested in a lower level interface, they should check out <a href=\"https://docs.rs/nix/0.17.0/nix/unistd/index.html\" rel=\"nofollow noreferrer\">docs.rs/nix/0.17.0/nix/unistd/index.html</a> - it supports many platforms. You would call <code>fork</code> -&gt; <code>execv</code> (in the child). This is certainly not easier to use, but is technically a thin wrapper around what the standard library&#39;s <code>Command</code> will do on unix systems."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1502736560, "last_edit_date": 1502736560, "creation_date": 1502735702, "answer_id": 45680862, "question_id": 45680349, "link": "https://stackoverflow.com/questions/45680349/is-there-a-lower-level-interface-than-stdprocesscommand-to-execute-a-singl/45680862#45680862", "title": "Is there a lower level interface than `std::process::Command` to execute a single string as a process?", "body": "<p>No, there is no such thing available in the standard library. As mentioned in the comments, <code>Command</code> <strong>is</strong> the lower level interface. Shells and other tools that take a single string have to do exceedingly clever parsing of the string in order to split it back up into pieces. This parsing is non-trivial and may differ between shells!</p>\n\n<p>You can always write your own simplified parser, of course:</p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let args = \"ls -l /etc /tmp\";\n    let args: Vec&lt;_&gt; = args.split(\" \").collect();\n\n    let output = Command::new(args[0])\n        .args(&amp;args[1..])\n        .output()\n        .expect(\"Couldn't run it\");\n\n    println!(\"{:?}\", ::std::str::from_utf8(&amp;output.stdout));\n    println!(\"{:?}\", ::std::str::from_utf8(&amp;output.stderr));\n}\n</code></pre>\n\n<blockquote>\n  <p>but it's not well documented</p>\n</blockquote>\n\n<p>I'm obviously biased, but I don't understand how it could be <em>more</em> documented. Every useful method has prose describing it and examples demonstrating it.</p>\n\n<blockquote>\n  <p>and seems too complex</p>\n</blockquote>\n\n<p>I'm not sure why; perhaps the amount of choice is overwhelming, but realistically that control is needed.</p>\n\n<blockquote>\n  <p>and hard to debug.</p>\n</blockquote>\n\n<p>I'm not sure what debugging needs to be done \u2014 either the code will compile or not, then it will execute or not. Compiler errors are frequently useful, runtime errors of this nature usually depend on the OS.</p>\n"}], "owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1502736560, "creation_date": 1502733661, "last_edit_date": 1502735716, "question_id": 45680349, "link": "https://stackoverflow.com/questions/45680349/is-there-a-lower-level-interface-than-stdprocesscommand-to-execute-a-singl", "title": "Is there a lower level interface than `std::process::Command` to execute a single string as a process?", "body": "<p>Is there an equivalent in Rust for something like:</p>\n\n<pre><code>os.run(\"/bin/bash ln -s /dir1 /dir2\");\n</code></pre>\n\n<p>I want the ability to spawn a process using a string expression similar to one I would use in a ptty.</p>\n\n<p>The only utility I've found for doing this is <code>std::process::Command</code>, but it's not well documented and seems too complex and hard to debug.</p>\n\n<p>There is <a href=\"https://stackoverflow.com/questions/21011330/in-rust-how-do-i-invoke-a-system-command-and-capture-its-output\">In Rust, how do I invoke a system command and capture its output?</a> that gives <code>std::process::Command</code> as an answer, hence why I specified finding it as a possible option. However, I'm looking for a lower level interface to make <code>std::process::Command</code> execute a single string as a query rather than forcing me to feed it the arguments one by one.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1502720814, "post_id": 45676411, "comment_id": 78311196, "body": "Note: borrowing is lexical at the moment, however there&#39;s work to change this. In the future (once Non Lexical Lifetimes: NLL are implemented) rustc will notice that since <code>r1</code> is unused by the time <code>r2</code> is formed, it&#39;s okay."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1502720425, "creation_date": 1502720425, "answer_id": 45676677, "question_id": 45676411, "link": "https://stackoverflow.com/questions/45676411/why-does-shadowing-not-release-a-borrowed-reference/45676677#45676677", "title": "Why does shadowing not release a borrowed reference?", "body": "<p>It's not like the original <code>r1</code> ceases to exist after it becomes shadowed; consider the MIR produced for your code without the last line (<code>r2</code> binding):</p>\n\n<pre><code>fn main() -&gt; () {\n    let mut _0: ();                      // return pointer\n    scope 1 {\n        let mut _1: i32;                 // \"a\" in scope 1 at src/main.rs:2:9: 2:14\n        scope 2 {\n            let _2: &amp;mut i32;            // \"r1\" in scope 2 at src/main.rs:3:9: 3:11\n            scope 3 {\n                let _3: &amp;str;            // \"r1\" in scope 3 at src/main.rs:4:9: 4:11\n            }\n        }\n    }\n\n    bb0: {\n        StorageLive(_1);                 // scope 0 at src/main.rs:2:9: 2:14\n        _1 = const 40i32;                // scope 0 at src/main.rs:2:17: 2:19\n        StorageLive(_2);                 // scope 1 at src/main.rs:3:9: 3:11\n        _2 = &amp;mut _1;                    // scope 1 at src/main.rs:3:14: 3:20\n        StorageLive(_3);                 // scope 2 at src/main.rs:4:9: 4:11\n        _3 = const \"shadowed\";           // scope 2 at src/main.rs:4:14: 4:24\n        _0 = ();                         // scope 3 at src/main.rs:1:11: 5:2\n        StorageDead(_3);                 // scope 2 at src/main.rs:5:2: 5:2\n        StorageDead(_2);                 // scope 1 at src/main.rs:5:2: 5:2\n        StorageDead(_1);                 // scope 0 at src/main.rs:5:2: 5:2\n        return;                          // scope 0 at src/main.rs:5:2: 5:2\n    }\n}\n</code></pre>\n\n<p>Note that when <code>\"shadowed\"</code> becomes bound (<code>_3</code>), it doesn't change anything related to the original <code>r1</code> binding (<code>_2</code>); the name <code>r1</code> no longer applies to the mutable reference, but the original variable still exists.</p>\n\n<p>I wouldn't consider your example a very useful case of shadowing; its usual applications, e.g. bodies of loops, are much more likely to utilize it.</p>\n"}, {"comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1502721259, "post_id": 45676778, "comment_id": 78311456, "body": "This makes sense to me, although it seems like an &quot;optimization&quot; the compiler could easily know about. Your comment to the question clarified that: <i>Because it&#39;s not yet implemented.</i>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1502721659, "post_id": 45676778, "comment_id": 78311689, "body": "@kazemakase: Shadowing and NLLs are... only partially related. NLLs, despite its name, does not affect lifetimes but only borrowing state. In the example with a loop I showed, even though <code>i</code> is shadowed in the loop, the outer <code>i</code> still is usable afterward. If it were a borrow, the borrow would be active across the loop: shadowing is purely <i>cosmetic</i>. If you want to &quot;change&quot; the borrow status, once NLL is implemented, you will be able to either (1) re-assign to the variable or (2) <code>drop</code> it."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1502722774, "last_edit_date": 1502722774, "creation_date": 1502720728, "answer_id": 45676778, "question_id": 45676411, "link": "https://stackoverflow.com/questions/45676411/why-does-shadowing-not-release-a-borrowed-reference/45676778#45676778", "title": "Why does shadowing not release a borrowed reference?", "body": "<p><strong>TL;DR: Shadowing is about name-lookup, borrowing is about lifetimes.</strong></p>\n\n<p>From a compiler point of view, variables have no name:</p>\n\n<pre><code>fn main() {\n    let mut __0 = 40;\n    let __1 = &amp;mut __0;\n    let __2 = \"shadowed\";\n    let __3 = &amp;mut __0;\n}\n</code></pre>\n\n<p>This is not very readable for a human being, so the language allows us to use descriptive names instead.</p>\n\n<p>Shadowing is an allowance on <em>reusing names</em>, which for the lexical scope of the \"shadowing\" variable will resolve the name to the \"shadowing\" one (<code>__2</code> here) instead of the \"original\" one (<code>__1</code> here).</p>\n\n<p>However just because the old one can no longer be accessed does not mean it no longer <em>lives</em>: <em>Shadowing != Assignment</em>. This is especially notable with different scopes:</p>\n\n<pre><code>fn main() {\n    let i = 3;\n    for i in 0..10 {\n    }\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>Will always print <code>3</code>: once the shadowing variable's scope ends, the name resolves to the original again!</p>\n"}], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 45676778, "answer_count": 2, "score": 5, "last_activity_date": 1502722803, "creation_date": 1502719546, "last_edit_date": 1502722803, "question_id": 45676411, "link": "https://stackoverflow.com/questions/45676411/why-does-shadowing-not-release-a-borrowed-reference", "title": "Why does shadowing not release a borrowed reference?", "body": "<p>It seems that shadowing a variable does not release the borrowed reference it holds. The following code does not compile:</p>\n\n<pre><code>fn main() {\n    let mut a = 40;\n    let r1 = &amp;mut a;\n    let r1 = \"shadowed\";\n    let r2 = &amp;mut a;\n}\n</code></pre>\n\n<p>With the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `a` as mutable more than once at a time\n --&gt; src/main.rs:5:19\n  |\n3 |     let r1 = &amp;mut a;\n  |                   - first mutable borrow occurs here\n4 |     let r1 = \"shadowed\";\n5 |     let r2 = &amp;mut a;\n  |                   ^ second mutable borrow occurs here\n6 | }\n  | - first borrow ends here\n</code></pre>\n\n<p>I would expect the code to compile because the first reference <code>r1</code> is shadowed before borrowing the second reference <code>r2</code>. Obviously, the first borrow lives until the end of the block although it is no longer accessible after line 4. Why is that the case?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1502725232, "last_edit_date": 1502725232, "creation_date": 1502717629, "answer_id": 45675749, "question_id": 45675506, "link": "https://stackoverflow.com/questions/45675506/is-there-a-shared-pointer-from-which-it-is-possible-to-steal-data/45675749#45675749", "title": "Is there a shared pointer from which it is possible to steal data?", "body": "<blockquote>\n  <p>Is there a shared pointer from which it is possible to steal data?</p>\n</blockquote>\n\n<p>No, but you have all the building blocks you need to create one. Since you</p>\n\n<ul>\n<li>want to change the value, you need the <em>interior mutability</em> provided by <code>RefCell</code>.</li>\n<li>want to share ownership, you need <code>Rc</code>. </li>\n<li>want to have the possibility of having a value or not a value, you need <code>Option</code>.</li>\n</ul>\n\n\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\nstruct Foo;\n\nfn main() {\n    let foo1 = Rc::new(RefCell::new(Some(Foo)));\n    let foo2 = foo1.clone();\n\n    if foo1.borrow().is_some() {\n        let stolen = foo1.borrow_mut().take();\n    } else {\n        println!(\"Already stolen!\")\n    }\n\n    if foo2.borrow().is_some() {\n        let stolen = foo2.borrow_mut().take();\n    } else {\n        println!(\"Already stolen!\")\n    }\n}\n</code></pre>\n\n<p>If you felt like it, you could probably wrap all this up into a single type.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29177449/155423\">How to take ownership of T from Arc&lt;Mutex&lt;T&gt;&gt;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/45530536/155423\">Conditionally move T out from Rc&lt;T&gt; when the count is 1</a></li>\n</ul>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 45675749, "answer_count": 1, "score": 1, "last_activity_date": 1502725232, "creation_date": 1502716880, "last_edit_date": 1502717785, "question_id": 45675506, "link": "https://stackoverflow.com/questions/45675506/is-there-a-shared-pointer-from-which-it-is-possible-to-steal-data", "title": "Is there a shared pointer from which it is possible to steal data?", "body": "<p>I want to share a structure <code>Foo</code> between several other structures\nwith the ability to extract this data. All other holders of this structure will see the value disappear.</p>\n\n<p>Pseudocode:</p>\n\n<pre><code>if boo.ref_to_foo.is_valid() {\n   let foo: Foo = boo.ref_to_foo.steal(); //1\n} else {\n   //after executing 1 one time all come here \n}\n</code></pre>\n\n<p>I do not need multithreading.</p>\n\n<p>Is <code>Rc&lt;RefCell&lt;Foo&gt;&gt;</code> what I want? <code>Deref for Rc</code> + <code>RefCell::borrow_mut</code> + <code>Option::take</code>, or maybe some simpler way to achieve what I want?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1502713935, "post_id": 45674479, "comment_id": 78306561, "body": "Please describe <i>what</i> you don&#39;t understand. The documentation you&#39;ve linked to has had hundreds (or thousands) of people read it, and likely tens to hundreds of people contribute to it. What can we possibly say that would be any different from what is already said, especially if you don&#39;t tell us what you don&#39;t understand?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502714227, "post_id": 45674479, "comment_id": 78306740, "body": "@Shepmaster The explanations in the documentation speak about <i>interior mutability</i>. This concept is unclear for me. Maybe my question has been unclear too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1502714918, "post_id": 45674479, "comment_id": 78307204, "body": "A quick internet search found <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">a chapter in the book about interior mutability</a>, a <a href=\"https://ricardomartins.cc/2016/06/08/interior-mutability\" rel=\"nofollow noreferrer\">blog post</a>, and <a href=\"https://stackoverflow.com/q/32062285/155423\">a SO question</a>. Perhaps now that you know what you are unclear about, you can perform some research and update your question."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1502716148, "post_id": 45674912, "comment_id": 78307970, "body": "Thank you <i>so</i> much, you answer exactly to all my perplexity about &quot;complicated&quot; types in Rust. The comparison with C++ is perfect, also."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1502716291, "post_id": 45674912, "comment_id": 78308059, "body": "The term <b>aliasing</b>, though, beats me. I understand it as &quot;multiple reference on a data&quot;, is it that?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1502717014, "post_id": 45674912, "comment_id": 78308524, "body": "@Boiethios: Yes, that&#39;s exactly that. Each reference/pointer is &quot;an alias&quot; to the real data (a different name for the same &quot;person&quot; is what an alias is, after all), and by extension in software we talk about aliasing when there are multiple aliases at a given time."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1502725658, "post_id": 45674912, "comment_id": 78314200, "body": "The first edition of the book had <a href=\"https://doc.rust-lang.org/book/first-edition/choosing-your-guarantees.html\" rel=\"nofollow noreferrer\">a chapter on this</a>. It&#39;s one of the ones that was lost in the rewrite, which I think is unfortunate -- maybe it should be made into an appendix or something"}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 6, "creation_date": 1502729038, "post_id": 45674912, "comment_id": 78316015, "body": "If <b>Aliasing XOR Mutability</b> is the rule for safety, that implies that <b>(not Aliasing) AND (not Mutability)</b> is unsafe? But surely, if there is no aliasing AND no mutability then that is totally safe? I think you want something else than XOR there."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 0, "creation_date": 1502733062, "post_id": 45674912, "comment_id": 78318029, "body": "@Lii: <i>Coward&#39;s way out</i> =&gt; just citing core developers&#39; slide, I&#39;ll keep with their slogan ;)"}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 11, "creation_date": 1502742356, "post_id": 45674912, "comment_id": 78322878, "body": "Maybe the slogan should use NAND instead of XOR :P"}, {"owner": {"reputation": 976, "user_id": 2427672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc34b049a33674b91a2335d31db475b2?s=128&d=identicon&r=PG", "display_name": "Seph", "link": "https://stackoverflow.com/users/2427672/seph"}, "edited": false, "score": 0, "creation_date": 1537707442, "post_id": 45674912, "comment_id": 91874233, "body": "What does &quot;prevents the formation of reference to its interior&quot; even mean? This is what I hate about the documentation that&#39;s there. I actually already know what <code>Cell</code> does, but this kind of explanation is unnecessary. It doesn&#39;t need to be explained like an academic proof."}, {"owner": {"reputation": 35031, "user_id": 1889329, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/57bec3f0b9c5879cdd9d9fa2e8629318?s=128&d=identicon&r=PG&f=1", "display_name": "IInspectable", "link": "https://stackoverflow.com/users/1889329/iinspectable"}, "reply_to_user": {"reputation": 976, "user_id": 2427672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc34b049a33674b91a2335d31db475b2?s=128&d=identicon&r=PG", "display_name": "Seph", "link": "https://stackoverflow.com/users/2427672/seph"}, "edited": false, "score": 0, "creation_date": 1595365501, "post_id": 45674912, "comment_id": 111448393, "body": "@sep What&#39;s your alternative to explain the concept? I found that to be pretty much on spot. In case that was a genuine question: It means that you gain interior mutability by giving up the ability to hold references to said interiors. Is that less academic enough?"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 147, "last_activity_date": 1502733887, "last_edit_date": 1502733887, "creation_date": 1502714900, "answer_id": 45674912, "question_id": 45674479, "link": "https://stackoverflow.com/questions/45674479/need-holistic-explanation-about-rusts-cell-and-reference-counted-types/45674912#45674912", "title": "Need holistic explanation about Rust&#39;s cell and reference counted types", "body": "<p>There are two essential concepts in Rust:</p>\n\n<ul>\n<li>Ownership,</li>\n<li>Mutability.</li>\n</ul>\n\n<p>The various pointer types (<code>Box</code>, <code>Rc</code>, <code>Arc</code>) are concerned with <em>Ownership</em>: they allow controlling whether there is a single or multiple owners for a single object.</p>\n\n<p>On the other hand, the various cells (<code>Cell</code>, <code>RefCell</code>, <code>Mutex</code>, <code>RwLock</code>, <code>AtomicXXX</code>) are concerned with <em>Mutability</em>.</p>\n\n<hr>\n\n<p>The founding rule of Rust's safety is <strong>Aliasing XOR Mutability</strong>. That is, an object can only be safely mutated if there is no outstanding reference to its interior.</p>\n\n<p>This rule is generally enforced at compile time by the <em>borrow checker</em>:</p>\n\n<ul>\n<li>if you have a <code>&amp;T</code>, you cannot also have a <code>&amp;mut T</code> to the same object in scope,</li>\n<li>if you have a <code>&amp;mut T</code>, you cannot also have any reference to the same object in scope.</li>\n</ul>\n\n<p>However, sometimes, this is not flexible enough. Sometimes you DO need (or want) the ability to have multiple references to the same object and yet mutate it. Enter the <strong>cells</strong>.</p>\n\n<p>The idea of <code>Cell</code> and <code>RefCell</code> is to permit mutability in the presence of aliasing <em>in a controlled manner</em>:</p>\n\n<ul>\n<li><code>Cell</code> prevents the formation of reference to its interior, avoiding dangling references,</li>\n<li><code>RefCell</code> shifts the enforcement of <strong>Aliasing XOR Mutability</strong> from compile time to runtime.</li>\n</ul>\n\n<p>This functionality is sometimes described as providing <strong>interior mutability</strong>, that is where an object which otherwise looks immutable from the outside (<code>&amp;T</code>) can actually be mutated.</p>\n\n<p>When this mutability extends across multiple threads, you will instead use <code>Mutex</code>, <code>RwLock</code> or <code>AtomicXXX</code>; they provide the same functionality:</p>\n\n<ul>\n<li><code>AtomicXXX</code> are just <code>Cell</code>: no reference to the interior, just moving in/out,</li>\n<li><code>RwLock</code> is just <code>RefCell</code>: can obtain references to the interior through <em>guards</em>,</li>\n<li><code>Mutex</code> is a simplified version of <code>RwLock</code> which does not distinguish between a read-only guard and write guard; so conceptually similar to a <code>RefCell</code> with only a <code>borrow_mut</code> method.</li>\n</ul>\n\n<hr>\n\n<p>If you come from a C++ background:</p>\n\n<ul>\n<li><code>Box</code> is <code>unique_ptr</code>,</li>\n<li><code>Arc</code> is <code>shared_ptr</code>,</li>\n<li><code>Rc</code> is a non thread-safe version of <code>shared_ptr</code>.</li>\n</ul>\n\n<p>And the cells provide a similar functionality as <code>mutable</code>, except with additional guarantees to avoid aliasing issues; think of <code>Cell</code> as <code>std::atomic</code> and <code>RefCell</code> as a non thread-safe version of <code>std::shared_mutex</code> (which throws instead of blocking if the lock is taken).</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 21, "last_activity_date": 1532939738, "last_edit_date": 1532939738, "creation_date": 1528190044, "answer_id": 50696381, "question_id": 45674479, "link": "https://stackoverflow.com/questions/45674479/need-holistic-explanation-about-rusts-cell-and-reference-counted-types/50696381#50696381", "title": "Need holistic explanation about Rust&#39;s cell and reference counted types", "body": "<p>Thanks to <a href=\"https://stackoverflow.com/a/45674912/4498831\">Matthieu's good answer</a>, here is a diagram to help people to find the wrapper they need:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+-----------+\n| Ownership |\n+--+--------+                              +================+\n   |                         +-Static-----&gt;| T              |(1)\n   |                         |             +================+\n   |                         |\n   |                         |             +================+\n   |          +-----------+  | Local    Val| Cell&lt;T&gt;        |(1)\n   +-Unique--&gt;| Borrowing +--+-Dynamic----&gt;|----------------|\n   |          +-----------+  |          Ref| RefCell&lt;T&gt;     |(1)\n   |                         |             +================+\n   |                         |\n   |                         |             +================+\n   |                         | Threaded    | AtomicT        |(2)\n   |                         +-Dynamic----&gt;|----------------|\n   |                                       | Mutex&lt;T&gt;       |(1)\n   |                                       | RwLock&lt;T&gt;      |(1)\n   |                                       +================+\n   |\n   |\n   |                                       +================+\n   |                         +-No---------&gt;| Rc&lt;T&gt;          |\n   |                         |             +================+\n   | Locally  +-----------+  |\n   +-Shared--&gt;| Mutable?  +--+             +================+\n   |          +-----------+  |          Val| Rc&lt;Cell&lt;T&gt;&gt;    |\n   |                         +-Yes--------&gt;|----------------|\n   |                                    Ref| Rc&lt;RefCell&lt;T&gt;&gt; |\n   |                                       +================+\n   |\n   |\n   |                                       +================+\n   |                         +-No---------&gt;| Arc&lt;T&gt;         |\n   |                         |             +================+\n   | Shared   +-----------+  |\n   +-Between-&gt;| Mutable?  +--+             +================+\n     Threads  +-----------+  |             | Arc&lt;AtomicT&gt;   |(2)\n                             +-Yes--------&gt;|----------------|\n                                           | Arc&lt;Mutex&lt;T&gt;&gt;  |\n                                           | Arc&lt;RwLock&lt;T&gt;&gt; |\n                                           +================+\n</code></pre>\n\n<ol>\n<li>In those cases, <code>T</code> can be replaced with <code>Box&lt;T&gt;</code></li>\n<li>Use <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html#structs\" rel=\"noreferrer\"><code>AtomicT</code></a> when <code>T</code> is a <code>bool</code> or a number</li>\n</ol>\n\n<hr>\n\n<p>To know if you should use <code>Mutex</code> or <code>RwLock</code>, see <a href=\"https://stackoverflow.com/questions/50704279/when-or-why-should-i-use-a-mutex-over-an-rwlock/50704283\">this related question</a>.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7536, "favorite_count": 40, "protected_date": 1502890502, "accepted_answer_id": 45674912, "answer_count": 2, "score": 78, "last_activity_date": 1532939738, "creation_date": 1502713427, "last_edit_date": 1528206027, "question_id": 45674479, "link": "https://stackoverflow.com/questions/45674479/need-holistic-explanation-about-rusts-cell-and-reference-counted-types", "title": "Need holistic explanation about Rust&#39;s cell and reference counted types", "body": "<p>There are several wrapper types in the Rust standard library:</p>\n\n<ul>\n<li>The cells in the <a href=\"https://doc.rust-lang.org/std/cell/index.html#structs\" rel=\"noreferrer\"><code>std::cell</code> module</a>: <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"noreferrer\"><code>Cell</code></a> and <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"noreferrer\"><code>RefCell</code></a></li>\n<li>The reference-counted wrappers, like <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\"><code>Rc</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc</code></a>.</li>\n<li>The types in the <a href=\"https://doc.rust-lang.org/std/sync/index.html\" rel=\"noreferrer\"><code>std::sync</code> module</a>: <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html\" rel=\"noreferrer\"><code>AtomicBool</code></a> for example</li>\n</ul>\n\n<p>As I understand it, these are wrappers which provide further possibilities than a simple reference. While I understand some basics, I cannot  see the whole picture.</p>\n\n<p>What do they do exactly? Do cells and reference-counted families provide orthogonal or similar features?</p>\n"}, {"tags": ["tcp", "rust", "tcpserver"], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "edited": false, "score": 0, "creation_date": 1502715286, "post_id": 45674748, "comment_id": 78307436, "body": "Ah thanks. I am actually kinda newish to coding, will complete a year next month. So I was trying to implement it on my own as much as I can before using an abstraction like tokio, so I understand what&#39;s going on under the hood. I will try implementing the controller worker model. Will each seperate thread have a seperate channel or will they use the same receiver, sender pair?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "edited": false, "score": 0, "creation_date": 1502715633, "post_id": 45674748, "comment_id": 78307648, "body": "I&#39;d expect that the controller thread to have one unique channel per worker thread to send data to them, then a reused channel from each worker back to the controller (since they are <b>m</b>ultiple <b>p</b>roducer, <b>s</b>ingle <b>c</b>onsumer channels). In total, there should be N + 1 channels."}, {"owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "edited": false, "score": 0, "creation_date": 1502715804, "post_id": 45674748, "comment_id": 78307761, "body": "Ah okay. Makes sense. Thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1502714790, "last_edit_date": 1502714790, "creation_date": 1502714329, "answer_id": 45674748, "question_id": 45673552, "link": "https://stackoverflow.com/questions/45673552/can-i-maintain-a-vec-of-tcpstreams-to-write-to-them-across-threads-whenever-one/45674748#45674748", "title": "Can I maintain a Vec of TcpStreams to write to them across threads whenever one of them reads a new input?", "body": "<p>Another idea is to spawn a single \"controller\" thread <strong>and</strong> a thread for every socket. Each thread would own the socket and have a channel to send data back to the controller. The controller would own a <code>Vec</code> of channels to send to each thread. When a thread receives data, you send it to the controller which duplicates it and sends it back to each worker thread. You can wrap the data in an <code>Arc</code> to prevent unneeded duplication, and you should provide an ID to avoid echoing the data back to the original sender (if you need to).</p>\n\n<p>This moves the ownership completely within a single thread, which should avoid the issues you are experiencing.</p>\n\n<p>You may also wish to look into <a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">Tokio</a>, which should allow you to do something similar but without the need to spawn threads in a 1-1 mapping.</p>\n\n<blockquote>\n  <p>I can't use <code>Mutex</code> because that will lock the access of other threads</p>\n</blockquote>\n\n<p>You can always try a different locking mechanism such as a <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a>.</p>\n\n<blockquote>\n  <p>because <code>TcpStream</code> can't be cloned</p>\n</blockquote>\n\n<p>Sure it can: <a href=\"https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.try_clone\" rel=\"nofollow noreferrer\"><code>TcpStream::try_clone</code></a>.</p>\n"}], "owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 563, "favorite_count": 1, "accepted_answer_id": 45674748, "answer_count": 1, "score": 0, "last_activity_date": 1502714790, "creation_date": 1502710196, "last_edit_date": 1502714005, "question_id": 45673552, "link": "https://stackoverflow.com/questions/45673552/can-i-maintain-a-vec-of-tcpstreams-to-write-to-them-across-threads-whenever-one", "title": "Can I maintain a Vec of TcpStreams to write to them across threads whenever one of them reads a new input?", "body": "<p>I want to do message broadcasting: when one of the clients sends a message, the server writes it to each socket. My main problem is I can't figure out how to send the <code>Vec</code> to the threads. I can't use <code>Mutex</code> because that will lock the access of other threads to the <code>Vec</code> for reading. I can't clone and send because <code>TcpStream</code> can't  be cloned and sent. Here's my attempt until now</p>\n\n<pre><code>use std::net::{TcpStream, TcpListener};\nuse std::io::prelude::*;\nuse std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::sync::mpsc::{channel, Receiver};\nuse std::cell::RefCell;\n\ntype StreamSet = Arc&lt;RefCell&lt;Vec&lt;TcpStream&gt;&gt;&gt;;\ntype StreamReceiver = Arc&lt;Mutex&lt;Receiver&lt;StreamSet&gt;&gt;&gt;;\n\nfn main() {\n    let listener = TcpListener::bind(\"0.0.0.0:8000\").unwrap();\n    let mut connection_set: StreamSet = Arc::new(RefCell::new(vec![]));\n    let mut id = 0;\n    let (tx, rx) = channel();\n    let rx = Arc::new(Mutex::new(rx));\n    for stream in listener.incoming() {\n        let receiver = rx.clone();\n        let stream = stream.unwrap();\n        (*connection_set).borrow_mut().push(stream);\n        println!(\"A connection established with client {}\", id);\n        thread::spawn(move || handle_connection(receiver, id));\n        id += 1;\n        tx.send(connection_set.clone()).unwrap();\n    }\n\n}\n\nfn handle_connection(rx: StreamReceiver, id: usize) {\n    let streams;\n    {\n        streams = *(rx.lock().unwrap().recv().unwrap()).borrow();\n    }\n    let mut connection = &amp;streams[id];\n    loop {\n        let mut buffer = [0; 512];\n        if let Err(_) = connection.read(&amp;mut buffer) {\n            break;\n        };\n        println!(\"Request: {}\", String::from_utf8_lossy(&amp;buffer[..]));\n        if let Err(_) = connection.write(&amp;buffer[..]) {\n            break;\n        };\n        if let Err(_) = connection.flush() {\n            break;\n        };\n    }\n}\n</code></pre>\n"}, {"tags": ["tcp", "rust", "netcat"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502691369, "post_id": 45668153, "comment_id": 78294208, "body": "&quot;but subsequent request aren&#39;t. &quot; Please be specific. How are you sending data via <code>nc</code>? What exact error are you getting? You code seems to work for me."}, {"owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502691713, "post_id": 45668153, "comment_id": 78294336, "body": "@loganfsmyth I am sending data by typing them on the terminal. Updated the question"}], "answers": [{"tags": [], "owner": {"reputation": 100407, "user_id": 16406, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/fadf252892475e9b177d5cd5e8b24145?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Dodd", "link": "https://stackoverflow.com/users/16406/chris-dodd"}, "is_accepted": true, "score": 11, "last_activity_date": 1502736656, "last_edit_date": 1502736656, "creation_date": 1502692606, "answer_id": 45668701, "question_id": 45668153, "link": "https://stackoverflow.com/questions/45668153/when-does-a-broken-pipe-occur-in-a-tcp-stream/45668701#45668701", "title": "When does a broken pipe occur in a TCP stream?", "body": "<p>A 'Broken pipe' message happens when you write to a stream where the other end has been closed.  In your example, your <code>handle_connection</code> routine reads a single buffer from the client, copies that back to the client, and then returns, which will close the stream.  When you run <code>netcat</code> from the terminal like that, the terminal defaults to line buffering, so each line you type will be sent to the server as a single write.</p>\n\n<p>The first line is sent, read by the server, echoed back, and then the server closes the connection.  Netcat gets a second line, writes that to the socket, and gets a 'Broken pipe' because the server has closed the connection.</p>\n\n<p>If you want your server to read multiple messages, you need to have your <code>handle_connection</code> routine loop, reading from the stream until it gets an EOF.</p>\n"}], "owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12356, "favorite_count": 1, "accepted_answer_id": 45668701, "answer_count": 1, "score": 9, "last_activity_date": 1502736656, "creation_date": 1502689928, "last_edit_date": 1502714409, "question_id": 45668153, "link": "https://stackoverflow.com/questions/45668153/when-does-a-broken-pipe-occur-in-a-tcp-stream", "title": "When does a broken pipe occur in a TCP stream?", "body": "<p>I am trying to write an echo server in Rust. </p>\n\n<pre><code>use std::net::{TcpStream, TcpListener};\nuse std::io::prelude::*;\n\nfn main() {\n    let listener = TcpListener::bind(\"0.0.0.0:8000\").unwrap();\n    for stream in listener.incoming() {\n        let stream = stream.unwrap();\n        println!(\"A connection established\");\n        handle_connection(stream);\n    }\n\n}\n\nfn handle_connection(mut stream: TcpStream) {\n    let mut buffer = [0; 512];\n\n    stream.read(&amp;mut buffer).unwrap();\n\n    println!(\"Request: {}\", String::from_utf8_lossy(&amp;buffer[..]));\n    stream.write(&amp;buffer[..]).unwrap();\n    stream.flush().unwrap();\n}\n</code></pre>\n\n<p>The first request with <code>nc localhost 8000</code> is working as expected but subsequent request aren't. What am I doing wrong? Is the problem in how the server is reading requests from clients? Though there is no error server side.</p>\n\n<p>I am sending data by typing them on the terminal:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ nc localhost 8000\nhi\nhi\nhello\n# no response\n# on pressing enter\nNcat: Broken pipe.\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 5520, "user_id": 2128319, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be88209d2b01753efb0b1d43eff9bbfe?s=128&d=identicon&r=PG", "display_name": "neverfox", "link": "https://stackoverflow.com/users/2128319/neverfox"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502664932, "post_id": 45665121, "comment_id": 78288790, "body": "While I appreciate the code formatting edits, @Shepmaster, the code I posted was formatted by rustfmt using its default settings, which are supposed to conform the the Rust style guide. If what you&#39;ve done is indeed &quot;standard Rust indentation and style,&quot; should I report this to them?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1502665163, "post_id": 45665121, "comment_id": 78288837, "body": "My process is to copy the code, paste it into <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a> and click &quot;Format&quot;, which runs the latest released version of rustfmt (which appears to be <code>0.9.0</code>). Which version of rustfmt are you using?"}, {"owner": {"reputation": 5520, "user_id": 2128319, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be88209d2b01753efb0b1d43eff9bbfe?s=128&d=identicon&r=PG", "display_name": "neverfox", "link": "https://stackoverflow.com/users/2128319/neverfox"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502665460, "post_id": 45665121, "comment_id": 78288888, "body": "0.7.1. I guess it&#39;s time for an upgrade!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1502667123, "last_edit_date": 1502667123, "creation_date": 1502664938, "answer_id": 45665580, "question_id": 45665121, "link": "https://stackoverflow.com/questions/45665121/deserializing-an-optional-struct-field-with-a-generic-type-leads-to-semantic-wei/45665580#45665580", "title": "Deserializing an optional struct field with a generic type leads to semantic weirdness", "body": "<p><a href=\"https://stackoverflow.com/q/42141129/155423\">There's no concept of a <code>None</code> without a corresponding <code>Some</code> type</a>. The compiler needs to know how much space to allocate for the value for <em>either</em> case:</p>\n\n<pre><code>struct ReallyBig([u8; 1024]);\nstruct ReallySmall(u8);\n\nfn main() {\n    let mut choice = None; // How much space to allocate?\n}\n</code></pre>\n\n<p>In your code, the size of <code>Authorization</code> can depend on the value chosen for <code>S</code>. Since <code>Headers</code> contains an <code>Option&lt;Authorization&lt;S&gt;&gt;</code>, the size of <code>Headers</code> <em>also</em> can depend on the choice of <code>S</code>.</p>\n\n<p>Even when you get no value, you must choose to parse into some specific type. Perhaps you will later manually change it from a <code>None</code> to a <code>Some</code> by building the appropriate values \u2014 if it wasn't allocated with enough space, that would be trouble!</p>\n\n<p>Because of this, I can't see how your solution will work. Types are static \u2014 you need to know <strong>at compile time</strong> if decoding that JSON is going to result in <code>Authorization</code> or <code>Bearer</code>, and that's simply not possible.</p>\n\n<p>Normally, I'd suggest you use dynamic dispatch with a <code>Box&lt;Scheme&gt;</code>. This won't work here because <code>Scheme</code> isn't object-safe.</p>\n\n<p>Then, I would suggest you implement your own enum wrapping either <code>Basic</code> or <code>Box</code> and implement <code>Scheme</code> for that. This doesn't easily work because <code>Scheme::scheme</code> has to return a <em>single</em> keyword, but you actually support two keywords!</p>\n\n<p>The next step up is to implement our own <code>Header</code>:</p>\n\n<pre><code>extern crate hyper;\nextern crate serde;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\n\nuse hyper::header::{Authorization, Header, Raw, Basic, Bearer};\nuse serde::{Deserialize, Deserializer};\nuse std::fmt;\n\n#[derive(Debug, Clone, PartialEq)]\nenum MyAuthorization {\n    Basic(Authorization&lt;Basic&gt;),\n    Bearer(Authorization&lt;Bearer&gt;),\n}\n\nimpl Header for MyAuthorization {\n    fn header_name() -&gt; &amp;'static str {\n        // Should always be the same header name, right?\n        Authorization::&lt;Basic&gt;::header_name()\n    }\n\n    fn parse_header(raw: &amp;Raw) -&gt; hyper::error::Result&lt;Self&gt; {\n        Authorization::&lt;Basic&gt;::parse_header(raw)\n            .map(MyAuthorization::Basic)\n            .or_else(|_| {\n                Authorization::&lt;Bearer&gt;::parse_header(raw).map(MyAuthorization::Bearer)\n            })\n    }\n\n    fn fmt_header(&amp;self, f: &amp;mut hyper::header::Formatter) -&gt; fmt::Result {\n        match *self {\n            MyAuthorization::Basic(ref a) =&gt; a.fmt_header(f),\n            MyAuthorization::Bearer(ref a) =&gt; a.fmt_header(f),\n        }\n    }\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Headers {\n    #[serde(deserialize_with = \"auth_header\", default)]\n    authorization: Option&lt;MyAuthorization&gt;,\n    #[serde(rename = \":path\")]\n    path: String,\n}\n\nfn auth_header&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Option&lt;MyAuthorization&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let s = String::deserialize(deserializer)?;\n    let auth = MyAuthorization::parse_header(&amp;Raw::from(s.into_bytes()));\n    auth.map(Some).map_err(serde::de::Error::custom)\n}\n\n#[cfg(test)]\nmod test {\n    use hyper::header::{Basic, Bearer};\n    use serde_json;\n    use super::*;\n\n    #[test]\n    fn de_json_basic() {\n        let data = r#\"{\n                        \"authorization\": \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: Some(MyAuthorization::Basic(Authorization(Basic {\n                username: \"Aladdin\".to_owned(),\n                password: Some(\"open sesame\".to_owned()),\n            }))),\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n\n    #[test]\n    fn de_json_bearer() {\n        let data = r#\"{\n                        \"authorization\": \"Bearer fpKL54jvWmEGVoRdCNjG\",\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: Some(MyAuthorization::Bearer(Authorization(\n                Bearer { token: \"fpKL54jvWmEGVoRdCNjG\".to_owned() },\n            ))),\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n\n    #[test]\n    fn de_json_none() {\n        let data = r#\"{\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: None,\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n}\n</code></pre>\n\n<p>You may wish to check with the Hyper maintainers to see if this is the expected way of doing such a thing.</p>\n"}], "owner": {"reputation": 5520, "user_id": 2128319, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be88209d2b01753efb0b1d43eff9bbfe?s=128&d=identicon&r=PG", "display_name": "neverfox", "link": "https://stackoverflow.com/users/2128319/neverfox"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1034, "favorite_count": 0, "accepted_answer_id": 45665580, "answer_count": 1, "score": 8, "last_activity_date": 1502672668, "creation_date": 1502660075, "last_edit_date": 1502672668, "question_id": 45665121, "link": "https://stackoverflow.com/questions/45665121/deserializing-an-optional-struct-field-with-a-generic-type-leads-to-semantic-wei", "title": "Deserializing an optional struct field with a generic type leads to semantic weirdness", "body": "<p>I am attempting to deserialize JSON into a struct that contains an optional field <code>authorization</code>. The JSON may or may not include this field. If it does include the field, I'm doing a custom deserialization into a <code>hyper::header::Authorization&lt;hyper::header::Scheme&gt;</code>. Because <code>Authorization</code> requires a generic type for <code>Scheme</code>, I'm required (as I've written it) to include the generic type on my struct.</p>\n\n<p>All of the tests pass, but the last one (<code>de_json_none</code>, the one for JSON <em>without</em> the authorization field) is semantically weird because I have to target a variable with a definite <code>Scheme</code> type (either <code>Bearer</code> as shown or <code>Basic</code>), neither of which makes any sense for that data, despite being perfectly valid from Rust's perspective.</p>\n\n<p>It's clear why that is the case, but it's something I don't want and something I'm not sure how to fix. </p>\n\n<p>I want to write a Rocket handler that only matches data that contains the authorization field of type <code>Authorization&lt;Bearer&gt;</code> by setting the data type to <code>Headers&lt;Bearer&gt;</code>. At the moment, it would also match data that doesn't have the field at all. I'm also stuck without a clear way to call out the data with the missing field specifically by type.</p>\n\n<p>I'm looking for suggestions on how to refactor this code to reflect the fact that <code>Headers</code> really has three distinct, mutually-exclusive incarnations (<code>Basic</code>, <code>Bearer</code> and <code>None</code>). Perhaps I should be looking to do something with an enum here?</p>\n\n<pre><code>extern crate hyper;\nextern crate serde;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\n\nuse hyper::header::{Authorization, Header, Raw, Scheme};\nuse serde::{Deserialize, Deserializer};\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Headers&lt;S&gt;\nwhere\n    S: Scheme + 'static,\n{\n    #[serde(deserialize_with = \"auth_header\", default = \"no_auth\")]\n    authorization: Option&lt;Authorization&lt;S&gt;&gt;,\n    #[serde(rename = \":path\")]\n    path: String,\n}\n\nfn auth_header&lt;'de, D, S&gt;(deserializer: D) -&gt; Result&lt;Option&lt;Authorization&lt;S&gt;&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n    S: Scheme + 'static,\n{\n    let s = String::deserialize(deserializer)?;\n    let auth = Authorization::parse_header(&amp;Raw::from(s.into_bytes()));\n    auth.map(|a| Some(a)).map_err(serde::de::Error::custom)\n}\n\nfn no_auth&lt;S&gt;() -&gt; Option&lt;Authorization&lt;S&gt;&gt;\nwhere\n    S: Scheme + 'static,\n{\n    None\n}\n\n#[cfg(test)]\nmod test {\n    use hyper::header::{Basic, Bearer};\n    use serde_json;\n    use super::*;\n\n    #[test]\n    fn de_json_basic() {\n        let data = r#\"{\n                        \"authorization\": \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: Some(Authorization(Basic {\n                username: \"Aladdin\".to_owned(),\n                password: Some(\"open sesame\".to_owned()),\n            })),\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers&lt;Basic&gt; = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n\n    #[test]\n    fn de_json_bearer() {\n        let data = r#\"{\n                        \"authorization\": \"Bearer fpKL54jvWmEGVoRdCNjG\",\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: Some(Authorization(\n                Bearer { token: \"fpKL54jvWmEGVoRdCNjG\".to_owned() },\n            )),\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers&lt;Bearer&gt; = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n\n    #[test]\n    fn de_json_none() {\n        let data = r#\"{\n                        \":path\": \"/service/\",\n                        \":method\": \"GET\"\n                      }\"#;\n\n        let message = Headers {\n            authorization: None,\n            path: \"/service/\".to_owned(),\n        };\n\n        let h: Headers&lt;Bearer&gt; = serde_json::from_str(data).unwrap();\n        // this also works, though neither should ideally\n        // let h: Headers&lt;Basic&gt; = serde_json::from_str(data).unwrap();\n\n        assert_eq!(message, h);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1546824657, "last_edit_date": 1546824657, "creation_date": 1502656307, "answer_id": 45664656, "question_id": 45664456, "link": "https://stackoverflow.com/questions/45664456/value-does-not-live-long-enough-when-trying-to-set-a-variable-outside-a-loop-fro/45664656#45664656", "title": "Value does not live long enough when trying to set a variable outside a loop from inside the loop", "body": "<h1>A smaller example</h1>\n\n<p>Here's a <a href=\"/help/mcve\">MCVE</a> of the problem:</p>\n\n<pre><code>fn main() {\n    let mut prefix = \"!\";\n    let mut i = 0;\n\n    loop {\n        let event = String::from(\"hello\");\n\n        match i {\n            0 =&gt; prefix = &amp;event,\n            _ =&gt; println!(\"{}\", prefix),\n        }\n\n        i += 1;\n    }\n}\n</code></pre>\n\n<p><strong>Rust 2015</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `event` does not live long enough\n  --&gt; src/main.rs:9:28\n   |\n9  |             0 =&gt; prefix = &amp;event,\n   |                            ^^^^^ borrowed value does not live long enough\n...\n14 |     }\n   |     - `event` dropped here while still borrowed\n15 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p><strong>Rust 2018</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `event` does not live long enough\n  --&gt; src/main.rs:9:27\n   |\n9  |             0 =&gt; prefix = &amp;event,\n   |                           ^^^^^^ borrowed value does not live long enough\n10 |             _ =&gt; println!(\"{}\", prefix),\n   |                                 ------ borrow used here, in later iteration of loop\n...\n14 |     }\n   |     - `event` dropped here while still borrowed\n</code></pre>\n\n<p>The core issue is that <code>event</code> is dropped at the end of each iteration. However, the code attempts to use <code>prefix</code>, a reference to <code>event</code>, in a subsequent iteration. If that were allowed to happen, you'd be accessing invalid memory, causing undefined behavior. Rust disallows this from happening.</p>\n\n<p>You need to change the code so that <code>event</code> (or the part of it you need) lives longer than any one loop iteration.</p>\n\n<h1>Applied to the original code</h1>\n\n<p>The golden rule for borrowing problems is to identify who owns a variable. The compiler error messages help you here:</p>\n\n<blockquote>\n  <p>`message.content` does not live long enough</p>\n</blockquote>\n\n<p>Ok, so we need to look at <code>message.content</code> or just <code>message</code>. Who owns that? We've matched a enum and transferred ownership to a local variable called <code>message</code>, so the variable <code>message</code> <em>is</em> the owner:</p>\n\n<blockquote>\n<pre><code>Ok(Event::MessageCreate(message)) =&gt; {\n</code></pre>\n</blockquote>\n\n<p>The compiler error message agrees, as this error points to the block where <code>message</code> is in scope (actually the <code>match</code> braces for technical reasons):</p>\n\n<blockquote>\n<pre><code>^ `message.content` dropped here while still borrowed\n</code></pre>\n</blockquote>\n\n<p>You are trying to take a reference to that string and store the reference somewhere that needs to live longer than a single loop iteration. The compiler has stopped you from introducing memory unsafety into your program. In other languages, you'd write this code and at some point in the future your program would crash (at best) or leak sensitive information or allow injecting code in (at worst).</p>\n\n<p>Instead, allocate a <code>String</code> inside the loop. Because it has its own allocation, it can live longer than <code>message</code>. You also need to change the type of the original value of <code>prefix</code> and change the call to <code>starts_with</code>:</p>\n\n<pre><code>let mut prefix = \"!\".to_string();\n\nloop {\n    match connection.recv_event() {\n        Ok(Event::MessageCreate(message)) =&gt; {\n            if message.content.starts_with(&amp;prefix) {\n                let msg: Vec&lt;_&gt; = message.content[prefix.len()..].split(\" \").collect();\n                // message.content gets split into separate words and is checked for the command\n                match msg[0] {\n                    \"ag3nprefix\" =&gt; {\n                        prefix = msg[1].to_string();\n                        // ^ here is the line that makes it not compile\n                        let text = format!(\"AG3N's command prefix changed to: {}\", prefix);\n                        let _ = discord.send_message(message.channel_id, &amp;text, \"\", false);\n                    }\n                    &amp;_ =&gt; {}\n                }\n            }\n        }\n        Ok(_) =&gt; {}\n        Err(discord::Error::Closed(code, body)) =&gt; {\n            println!(\"Gateway closed on us with code {:?}: {}\", code, body);\n            break;\n        }\n        Err(err) =&gt; println!(\"Receive error: {:?}\", err),\n    }\n}\n</code></pre>\n\n<hr>\n\n<pre><code>let _ = discord.send_message(message.channel_id, &amp;text, \"\", false);\n</code></pre>\n\n<p><strong>DO NOT IGNORE ERRORS</strong>. If you don't want to handle it, just add <code>.expect(\"I didn't handle this error\")</code>.</p>\n"}], "owner": {"reputation": 33, "user_id": 3452978, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44c6297721f4ecb082a0d1cdf1be146a?s=128&d=identicon&r=PG", "display_name": "Agenerick", "link": "https://stackoverflow.com/users/3452978/agenerick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 704, "favorite_count": 0, "accepted_answer_id": 45664656, "answer_count": 1, "score": 1, "last_activity_date": 1546824657, "creation_date": 1502654798, "last_edit_date": 1502655550, "question_id": 45664456, "link": "https://stackoverflow.com/questions/45664456/value-does-not-live-long-enough-when-trying-to-set-a-variable-outside-a-loop-fro", "title": "Value does not live long enough when trying to set a variable outside a loop from inside the loop", "body": "<p>I'm making a Discord chat bot using discord-rs, starting from <a href=\"https://github.com/SpaceManiac/discord-rs/blob/master/examples/basic_chatbot.rs\" rel=\"nofollow noreferrer\">this example</a>. Everything was working and compiling fine until I tried to modify a value that is declared before a loop.</p>\n\n<p>I'm trying to change <code>prefix</code> to the second word that is entered in a command:</p>\n\n<pre><code>extern crate discord;\nuse discord::Discord;\nuse discord::model::Event;\nuse std::env;\n\nfn main() {\n    let discord = Discord::from_bot_token(&amp;env::var(\"DISCORD_TOKEN\").expect(\"Expected token\"))\n        .expect(\"login failed\");\n    let (mut connection, _) = discord.connect().expect(\"connect failed\");\n    println!(\"Ready.\");\n\n    let mut prefix = \"!\";\n\n    loop {\n        match connection.recv_event() {\n            Ok(Event::MessageCreate(message)) =&gt; {\n                if message.content.starts_with(prefix) {\n                    let msg: Vec&lt;&amp;str&gt; = message.content[prefix.len()..].split(\" \").collect();\n                    // message.content gets split into separate words and is checked for the command\n                    match msg[0] {\n                        \"ag3nprefix\" =&gt; {\n                            prefix = msg[1];\n                            // ^ here is the line that makes it not compile\n                            let text = format!(\"AG3N's command prefix changed to: {}\", prefix);\n                            let _ = discord.send_message(message.channel_id, &amp;text, \"\", false);\n                        }\n                        &amp;_ =&gt; {}\n                    }\n                }\n            }\n            Ok(_) =&gt; {}\n            Err(discord::Error::Closed(code, body)) =&gt; {\n                println!(\"Gateway closed on us with code {:?}: {}\", code, body);\n                break;\n            }\n            Err(err) =&gt; println!(\"Receive error: {:?}\", err),\n        }\n    }\n}\n</code></pre>\n\n<p>I tried doing it various ways, but nothing would work. Here's the error from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `message.content` does not live long enough\n  --&gt; src/main.rs:38:9\n   |\n19 |                     let msg: Vec&lt;&amp;str&gt; = message.content[prefix.len()..].split(\" \").collect();\n   |                                          --------------- borrow occurs here\n...\n38 |         }\n   |         ^ `message.content` dropped here while still borrowed\n39 |     }\n40 | }\n   | - borrowed value needs to live until here\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502656557, "post_id": 45664392, "comment_id": 78286984, "body": "Given that there&#39;s nothing about <code>Student</code> as a datatype that implies a specific sort order, I&#39;ll second that <code>sort_by</code> seems like the way to go."}], "answers": [{"comments": [{"owner": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "edited": false, "score": 0, "creation_date": 1502658893, "post_id": 45664710, "comment_id": 78287581, "body": "Ahh I see. Thanks, this is great. You see, I tried using <code>sort_by_key(|a| a.last_name)</code> and I got the error &quot;cannot move out of borrowed content&quot;. I don&#39;t know why I though this would work (but hey, I&#39;m learning).  But this led me to this: Try to figure out how macros work. So harm done, lessons learned :)  Again, thank you for a clear and thorough response!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "edited": false, "score": 0, "creation_date": 1502659701, "post_id": 45664710, "comment_id": 78287764, "body": "You&#39;re welcome! Your <code>sort_by_key()</code> invocation has a different problem, which could be solved like so: <code>sort_by_key(|a| a.last_name.clone())</code> but it is <i>very</i> slow! A better solution would be <code>sort_by_key(|a| &amp;a.last_name)</code>, but this doesn&#39;t work (we&#39;re discussing this problem <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">in the chat</a>). Oh and btw, a tip for using StackOverfow: if you like and accept an answer, you should usually upvote it. Otherwise the answerer often falls into despair wondering why he/she didn&#39;t deserve the upvote ^_^"}, {"owner": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "edited": false, "score": 0, "creation_date": 1502659736, "post_id": 45664710, "comment_id": 78287769, "body": "And no worries I took your lessons to heart. But I do want to point out a possible use case for this.   You see, I have another struct <code>Grade</code> that&#39;s linked to this one: <code>struct Grade { grade: u8, student_roster: Vec&lt;Student&gt;, }</code>. This one, in my opinion has a natural ordering in a <code>Vec&lt;Grade&gt;</code>. 1st grade &lt; 2nd grade &lt; 7th grade.   So, I don&#39;t know, I feel this macro has some uses. I mainly feel the code you&#39;re writing to get <code>Ord</code> implemented can be a bit tedious and not DRY. But hey I&#39;m a noob so maybe I&#39;ll have a different opinion later down the road."}, {"owner": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "edited": false, "score": 0, "creation_date": 1502659877, "post_id": 45664710, "comment_id": 78287801, "body": "I tried! I get an error that I don&#39;t have enough repetition :P I need some like 15 (I&#39;m pretty new here, heheh).  Would if I could, bro."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "edited": false, "score": 0, "creation_date": 1502660620, "post_id": 45664710, "comment_id": 78288001, "body": "@Haffix There are plenty of use cases, absolutely! But many people coming from some other languages tend to implement <code>Ord</code> just so they can use <code>sort</code> in a specific situation. My answer just wants to make the reader aware of the possibilities with the result that they think about &quot;natural ordering&quot;. In the end, the programmer has to decide ;-)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1502660550, "last_edit_date": 1502660550, "creation_date": 1502656746, "answer_id": 45664710, "question_id": 45664392, "link": "https://stackoverflow.com/questions/45664392/is-it-possible-to-create-a-macro-that-implements-ord-by-delegating-to-a-struct-m/45664710#45664710", "title": "Is it possible to create a macro that implements Ord by delegating to a struct member?", "body": "<p>Yes, <strong>you can</strong>, but first: please read why <strong>you shouldn't</strong>!</p>\n\n<hr>\n\n<h3>Why not?</h3>\n\n<p>When a type implements <code>Ord</code> or <code>PartialOrd</code> it means that this type has a <em>natural</em> ordering, which in turn means that the ordering implemented is the only logical one. Take integers: 3 is naturally smaller than 4. There are other useful orderings, for sure. You could sort integers in decreasing order instead by using a reversed ordering, but there is only <em>one</em> natural one. </p>\n\n<p>Now you have a type consisting of two strings. Is there a natural ordering? I claim: <strong>no!</strong> There are a lot of useful orderings, but is ordering by the last name more natural than ordering by the first name? I don't think so.</p>\n\n<h3>How to do it then?</h3>\n\n<p>There are two other sort methods:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.sort_by\" rel=\"nofollow noreferrer\"><code>sort_by()</code></a>, and</li>\n<li><a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.sort_by_key\" rel=\"nofollow noreferrer\"><code>sort_by_key()</code></a>.</li>\n</ul>\n\n<p>Both let you modify the way the sorting algorithm compares value. Sorting by the last name can be done like this (<a href=\"https://play.rust-lang.org/?gist=a30596dcdcf21c702415e9d764235de3&amp;version=stable\" rel=\"nofollow noreferrer\">full code</a>):</p>\n\n<pre><code>students.sort_by(|a, b| a.last_name.cmp(&amp;b.last_name));\n</code></pre>\n\n<p>This way, you can specify how to sort on each method call. Sometimes you might want to sort by last name and other times you want to sort by first name. Since there is no obvious and natural way to sort, you shouldn't \"attach\" any specific way of sorting to the type itself.</p>\n\n<h3>But seriously, I want a macro...</h3>\n\n<p>Of course, it is possible in Rust to write such a macro. It's actually quite easy once you understand the macro system. But let's not do it for your <code>Student</code> example, because -- as I hope you understand by now -- it's a bad idea. </p>\n\n<p>When is it a good idea? When only one field <em>semantically</em> is part of the type. Take this data structure:</p>\n\n<pre><code>struct Foo {\n    actual_data: String,\n    _internal_cache: String,\n}\n</code></pre>\n\n<p>Here, the <code>_internal_cache</code> does not semantically belong to your type. It's just an implementation detail and thus should be ignored for <code>Eq</code> and <code>Ord</code>. The simple macro is:</p>\n\n<pre><code>macro_rules! impl_ord {\n    ($type_name:ident, $field:ident) =&gt; {\n        impl Ord for $type_name {\n            fn cmp(&amp;self, other: &amp;$type_name) -&gt; Ordering {\n                self.$field.cmp(&amp;other.$field)\n            }\n        }\n\n        impl PartialOrd for $type_name {\n            fn partial_cmp(&amp;self, other: &amp;$type_name) -&gt; Option&lt;Ordering&gt; {\n                Some(self.cmp(other))\n            }\n        }\n\n        impl PartialEq for $type_name {\n            fn eq(&amp;self, other: &amp;$type_name) -&gt; bool {\n                self.$field == other.$field\n            }\n        }\n\n        impl Eq for $type_name {}\n    }\n}\n</code></pre>\n\n<p>Why do I call such a big chunk of code <em>simple</em> you ask? Well, the vast majority of this code is just exactly what you have already written: the <code>impls</code>. I performed two simple steps:</p>\n\n<ol>\n<li>Add the macro definition around your code and think about what parameters we need (<code>type_name</code> and <code>field</code>)</li>\n<li>Replace all your mentions of <code>Student</code> with <code>$type_name</code> and all your mentions of <code>last_name</code> with <code>$field</code></li>\n</ol>\n\n<p>That's why it's called \"macro by example\": you basically just write your normal code as an example, but can make parts of it variable per parameter.</p>\n\n<p>You can test the whole thing <a href=\"https://play.rust-lang.org/?gist=77b101bdcf84631fd574fae69c895bd0&amp;version=stable\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 14653647, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/046beac37b79307f887c6789e623166c?s=128&d=identicon&r=PG&f=1", "display_name": "Kris Pinespear", "link": "https://stackoverflow.com/users/14653647/kris-pinespear"}, "is_accepted": false, "score": 1, "last_activity_date": 1605639868, "creation_date": 1605639868, "answer_id": 64881702, "question_id": 45664392, "link": "https://stackoverflow.com/questions/45664392/is-it-possible-to-create-a-macro-that-implements-ord-by-delegating-to-a-struct-m/64881702#64881702", "title": "Is it possible to create a macro that implements Ord by delegating to a struct member?", "body": "<p>I created a macro which allows implementing <code>Ord</code> by defining expression which will be used to compare elements: <a href=\"https://docs.rs/ord_by_key/0.1.3/ord_by_key/attr.ord_eq_by_key_selec\" rel=\"nofollow noreferrer\">ord_by_key::ord_eq_by_key_selector</a>, similar to what you were asking.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use ord_by_key::ord_eq_by_key_selector;\n\n#[ord_eq_by_key_selector(|s| &amp;s.last_name)]\nstruct Student {\n    first_name: String,\n    last_name: String,\n}\n</code></pre>\n<p>If you have to sort by different criteria in different cases, you can introduce a containers for your struct which would implement different sorting strategies:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use ord_by_key::ord_eq_by_key_selector;\n\nstruct Student {\n    first_name: String,\n    last_name: String,\n}\n\n#[ord_eq_by_key_selector(|(s)| &amp;s.first_name)]\nstruct StudentByFirstName(Student);\n\n#[ord_eq_by_key_selector(|(s)| &amp;s.last_name, &amp;s.first_name)]\nstruct StudentByLastNameAndFirstName(Student);\n</code></pre>\n"}], "owner": {"reputation": 88, "user_id": 4339501, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DZaWaNxFt7g/AAAAAAAAAAI/AAAAAAAAAPM/SM0m2NmVp04/photo.jpg?sz=128", "display_name": "Haffix", "link": "https://stackoverflow.com/users/4339501/haffix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 45664710, "answer_count": 2, "score": 3, "last_activity_date": 1605639868, "creation_date": 1502654396, "last_edit_date": 1502654775, "question_id": 45664392, "link": "https://stackoverflow.com/questions/45664392/is-it-possible-to-create-a-macro-that-implements-ord-by-delegating-to-a-struct-m", "title": "Is it possible to create a macro that implements Ord by delegating to a struct member?", "body": "<p>I have a struct:</p>\n\n<pre><code>struct Student {\n    first_name: String,\n    last_name: String,\n}\n</code></pre>\n\n<p>I want to create a <code>Vec&lt;Student&gt;</code> that can be sorted by <code>last_name</code>. I need to implement <code>Ord</code>, <code>PartialOrd</code> and <code>PartialEq</code>:</p>\n\n<pre><code>use std::cmp::Ordering;\n\nimpl Ord for Student {\n    fn cmp(&amp;self, other: &amp;Student) -&gt; Ordering {\n        self.last_name.cmp(&amp;other.last_name)\n    }\n}\n\nimpl PartialOrd for Student {\n    fn partial_cmp(&amp;self, other: &amp;Student) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(other))\n    }\n}\n\nimpl PartialEq for Student {\n    fn eq(&amp;self, other: &amp;Student) -&gt; bool {\n        self.last_name == other.last_name\n    }\n}\n</code></pre>\n\n<p>This can be quite monotonous and repetitive if you have a lot of structs with an obvious field to sort by. Is it possible to create a macro to automatically implement this?</p>\n\n<p>Something like:</p>\n\n<pre><code>impl_ord!(Student, Student.last_name)\n</code></pre>\n\n<p>I found <a href=\"https://stackoverflow.com/questions/24831573/automatically-implement-traits-of-enclosed-type-for-rust-newtypes-tuple-structs\">Automatically implement traits of enclosed type for Rust newtypes (tuple structs with one field)</a>, but it's not quite what I'm looking for.</p>\n"}, {"tags": ["rust", "uninstallation"], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 0, "last_activity_date": 1502633403, "last_edit_date": 1502633403, "creation_date": 1502633312, "answer_id": 45661235, "question_id": 45661186, "link": "https://stackoverflow.com/questions/45661186/how-do-i-uninstall-rust-on-fedora-26/45661235#45661235", "title": "How do I uninstall Rust on Fedora 26?", "body": "<p>Look at the output of <code>dnf history</code> and find the transaction which installed Rust. Use <code>dnf history undo NNN</code> to undo this transaction.  This will uninstall all dependencies which were installed along with Rust.  You may have to do the same thing for Cargo if you installed it separately.</p>\n"}], "owner": {"reputation": 25, "user_id": 6937580, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9ceku.png?s=128&g=1", "display_name": "Bruno Anken", "link": "https://stackoverflow.com/users/6937580/bruno-anken"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "accepted_answer_id": 45661235, "answer_count": 1, "score": 0, "last_activity_date": 1502633403, "creation_date": 1502632992, "last_edit_date": 1502633183, "question_id": 45661186, "link": "https://stackoverflow.com/questions/45661186/how-do-i-uninstall-rust-on-fedora-26", "title": "How do I uninstall Rust on Fedora 26?", "body": "<p>I installed Rust on my machine via <code>dnf</code> following <a href=\"https://developer.fedoraproject.org/tech/languages/rust/rust-installation.html\" rel=\"nofollow noreferrer\">these instructions</a>. Now I want to install Rustup, but it's unable to be installed alongside another Rust installation.\nSo, how do I uninstall the Rust compiler so I can install Rustup?</p>\n"}, {"tags": ["rust", "glfw"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502634223, "post_id": 45656733, "comment_id": 78280408, "body": "This feels like it&#39;s going to be a system configuration issue. I&#39;d encourage you to add what OS you are using, what video card drivers you are using, what version of OpenGL, maybe even details on the hardware. The other guess I have is that it&#39;s actually runtime compilation of the shaders; you could also try removing parts of the program to see if you can identify that as the actual culprit."}, {"owner": {"reputation": 743, "user_id": 1724034, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/51c52cc10c45583725384ccefb943472?s=128&d=identicon&r=PG", "display_name": "plast1k", "link": "https://stackoverflow.com/users/1724034/plast1k"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502636436, "post_id": 45656733, "comment_id": 78281100, "body": "@Shepmaster Added my specs.  I also just upgraded my NVIDIA drivers and it doesn&#39;t seem to have helped.  It might have even made things worse (over 2 second on average now) but I can&#39;t be certain that was the cause.  EDIT: Running with my integrated graphics card drops it down to 50 milliseconds? Does anyone know why?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1502696555, "post_id": 45656733, "comment_id": 78296547, "body": "@plast1k Did you explore the possibility of runtime compilation of the shaders? Maybe you can compile them at compile time? You can search some question about precompiled shaders like this: <a href=\"https://www.opengl.org/discussion_boards/showthread.php/153087-Precompiled-GLSL\" rel=\"nofollow noreferrer\">opengl.org/discussion_boards/showthread.php/&hellip;</a>"}], "owner": {"reputation": 743, "user_id": 1724034, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/51c52cc10c45583725384ccefb943472?s=128&d=identicon&r=PG", "display_name": "plast1k", "link": "https://stackoverflow.com/users/1724034/plast1k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 780, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1502636660, "creation_date": 1502594058, "last_edit_date": 1592644375, "question_id": 45656733, "link": "https://stackoverflow.com/questions/45656733/should-this-gfx-rs-glutin-window-really-take-a-full-second-to-load", "title": "Should this (gfx-rs) glutin window really take a full second to load?", "body": "<p>I'm trying to start working with <a href=\"https://github.com/gfx-rs/gfx\" rel=\"nofollow noreferrer\">gfx-rs</a> and have simply copied the source code from <a href=\"https://github.com/gfx-rs/gfx/tree/9e9a3301342595c06ce6b5e4df67ae661dcadb49/examples/triangle\" rel=\"nofollow noreferrer\">the triangle example</a> just to make sure things run.  I noticed that the window was taking a noticeable amount of time to fully load. It appears to <em>open</em> relatively quickly but I can see a completely blank (white) window for close to a second. I threw some timing checks in to see what part of the code was bogging things down.</p>\n<p>Cargo.toml</p>\n<pre><code>[package]\nname = &quot;graphics&quot;\nversion = &quot;0.1.0&quot;\n\n[dependencies]\ngfx = &quot;0.14&quot;\ngfx_macros = &quot;0.2&quot;\nglutin = &quot;0.7.1&quot;\ngfx_window_glutin = &quot;0.14&quot;\ntime = &quot;*&quot;\nfps_counter = &quot;*&quot;\n</code></pre>\n<p>main.rs</p>\n<pre><code>#[macro_use]\nextern crate gfx;\nextern crate gfx_window_glutin;\nextern crate glutin;\nextern crate time;\nextern crate fps_counter;\n\nuse time::PreciseTime;\nuse gfx::traits::FactoryExt;\nuse gfx::Device;\n// use fps_counter::FPSCounter;\nuse std::io;\n// use std::time::Duration;\n// use std::thread::sleep;\n\n\npub type ColorFormat = gfx::format::Rgba8;\npub type DepthFormat = gfx::format::DepthStencil;\n\ngfx_defines!{\n    vertex Vertex {\n        pos: [f32; 2] = &quot;a_Pos&quot;,\n        color: [f32; 3] = &quot;a_Color&quot;,\n    }\n\n    pipeline pipe {\n        vbuf: gfx::VertexBuffer&lt;Vertex&gt; = (),\n        out: gfx::RenderTarget&lt;ColorFormat&gt; = &quot;Target0&quot;,\n    }\n}\n\nconst TRIANGLE: [Vertex; 3] = [\n    Vertex { pos: [ -0.5, -0.5 ], color: [1.0, 0.0, 0.0] },\n    Vertex { pos: [  0.5, -0.5 ], color: [0.0, 1.0, 0.0] },\n    Vertex { pos: [  0.0,  0.5 ], color: [0.0, 0.0, 1.0] }\n];\n\nconst CLEAR_COLOR: [f32; 4] = [0.1, 0.2, 0.3, 1.0];\n\npub fn main() {\n    let mut start = PreciseTime::now();\n    let builder = glutin::WindowBuilder::new()\n        .with_title(&quot;Triangle example&quot;.to_string())\n        .with_dimensions(1024, 768)\n        .with_vsync();\n    let mut end = PreciseTime::now();\n    println!(&quot;window builder: {}&quot;, start.to(end).num_milliseconds());\n    start = PreciseTime::now();\n    let (window, mut device, mut factory, main_color, mut main_depth) =\n        gfx_window_glutin::init::&lt;ColorFormat, DepthFormat&gt;(builder);\n    end = PreciseTime::now();\n    println!(&quot;init window: {}&quot;, start.to(end).num_milliseconds());\n\n    start = PreciseTime::now();\n    let mut encoder: gfx::Encoder&lt;_, _&gt; = factory.create_command_buffer().into();\n    let pso = factory.create_pipeline_simple(\n        include_bytes!(&quot;shader/triangle_150.glslv&quot;),\n        include_bytes!(&quot;shader/triangle_150.glslf&quot;),\n        pipe::new()\n    ).unwrap();\n    let (vertex_buffer, slice) = factory.create_vertex_buffer_with_slice(&amp;TRIANGLE, ());\n    let mut data = pipe::Data {\n        vbuf: vertex_buffer,\n        out: main_color\n    };\n\n    // let mut fps = FPSCounter::new();\n    // let mut count = 0;\n    end = PreciseTime::now();\n    println!(&quot;setup: {}&quot;, start.to(end).num_milliseconds());\n\n    'main: loop {\n        // loop over events\n        for event in window.poll_events() {\n            match event {\n                glutin::Event::KeyboardInput(_, _, Some(glutin::VirtualKeyCode::Escape)) |\n                glutin::Event::Closed =&gt; break 'main,\n                glutin::Event::Resized(_width, _height) =&gt; {\n                    gfx_window_glutin::update_views(&amp;window, &amp;mut data.out, &amp;mut main_depth);\n                },\n                _ =&gt; {},\n            }\n        }\n        // draw a frame\n        encoder.clear(&amp;data.out, CLEAR_COLOR);\n        encoder.draw(&amp;slice, &amp;pso, &amp;data);\n        encoder.flush(&amp;mut device);\n        window.swap_buffers().unwrap();\n        device.cleanup();\n        // count = fps.tick();\n    }\n\n    // println!(&quot;fps: {}&quot;, count);\n    // let mut entered = String::new();\n    // io::stdin().read_line(&amp;mut entered)\n    //     .expect(&quot;Failed to read line&quot;);\n}\n</code></pre>\n<p>The output of the above shows the call to initialize the window is taking almost a second.</p>\n<blockquote>\n<p>window builder: 0</p>\n<p>init window: 933</p>\n<p>setup: 3</p>\n</blockquote>\n<p>the line in question:</p>\n<pre><code>let (window, mut device, mut factory, main_color, mut main_depth) =\n    gfx_window_glutin::init::&lt;ColorFormat, DepthFormat&gt;(builder);\n</code></pre>\n<p>This happens via cargo run, debug and release, as well as running the executable directly from the build output folder.</p>\n<p>Is this to be expected?</p>\n<p><strong>System Information:</strong></p>\n<ul>\n<li>Windows 10, 64 bit</li>\n<li>i7-4720HQ, 16GB RAM, GTX-960M</li>\n<li>OpenGL 4.4</li>\n<li>Rust 1.19.0</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1502579497, "post_id": 45654852, "comment_id": 78269564, "body": "There are some other questions with the same problem. Quick answer: it&#39;s not possible right now due a limitation of the compiler, called lexical borrowing. Non-lexical borrow will probably be implemented soonish. You have to work around the issue, probably by using an ugly <code>bool</code> and call <code>push</code> after the <code>match</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1502587591, "post_id": 45654852, "comment_id": 78270751, "body": "<a href=\"https://play.integer32.com/?gist=2e089100ad08d3bfb6439fead971d07c&amp;version=stable\" rel=\"nofollow noreferrer\">One example of such a workaround</a>."}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 118, "favorite_count": 0, "closed_date": 1502586602, "answer_count": 0, "score": 1, "last_activity_date": 1502586779, "creation_date": 1502571241, "last_edit_date": 1502586779, "question_id": 45654852, "link": "https://stackoverflow.com/questions/45654852/how-can-i-forget-a-reference-in-match-after-i-dont-need-it-anymore", "closed_reason": "Duplicate", "title": "How can I forget a reference in match after I don&#39;t need it anymore?", "body": "<p>In a match, I'm checking many conditions. If the check is successful, I want to save the item. Here's simplified code with only one condition:</p>\n\n<pre><code>struct Item {\n    node: ItemKind,\n}\n\nstruct Generics;\n\nenum ItemKind {\n    Impl(Generics),\n}\n\nfn main() {\n    let item = Item { node: ItemKind::Impl(Generics) };\n    let mut items = Vec::&lt;Item&gt;::new();\n    match item {\n        Item { node: ItemKind::Impl(ref generic), .. } =&gt; {\n            // do some checks with generic\n            // here we not need it anymore\n            ::std::mem::forget(generic); // attempt to forget about generic doesn't help\n            items.push(item);\n        }\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p>I got the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0505]: cannot move out of `item` because it is borrowed\n  --&gt; src/main.rs:19:24\n   |\n15 |         Item { node: ItemKind::Impl(ref generic), .. } =&gt; {\n   |                                     ----------- borrow of `item.node.0` occurs here\n...\n19 |             items.push(item);\n   |                        ^^^^ move out of `item` occurs here\n</code></pre>\n\n<p>I do not need the <code>generic</code> reference on line <code>items.push(item);</code>, but I don't know how to tell the compiler that.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "edited": false, "score": 0, "creation_date": 1502539553, "post_id": 45649927, "comment_id": 78258529, "body": "it seems you have network/firewall/internet access error"}], "answers": [{"tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": false, "score": 1, "last_activity_date": 1502546549, "last_edit_date": 1502546549, "creation_date": 1502539968, "answer_id": 45650121, "question_id": 45649927, "link": "https://stackoverflow.com/questions/45649927/unable-to-update-registry-the-server-name-or-address-could-not-be-resolved-fo/45650121#45650121", "title": "&quot;Unable to update registry: The server name or address could not be resolved&quot; for a dependency", "body": "<p>You need internet access to download dependencies like <code>rand</code>:</p>\n\n<p>Try these steps:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo new guessing_game --bin\ncd guessing_game\ncargo build\ncargo run\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\rust&gt;cargo new guessing_game --bin\n     Created binary (application) `guessing_game` project\n\nC:\\rust&gt;cd guessing_game\n\nC:\\rust\\guessing_game&gt;cargo build\n   Compiling guessing_game v0.1.0 (file:///C:/rust/guessing_game)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.34 secs\n\nC:\\rust\\guessing_game&gt;cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target\\debug\\guessing_game.exe`\nHello, world!\n</code></pre>\n\n<p>Edit the Cargo.toml file:</p>\n\n<pre><code>[package]\nname = \"guessing_game\"\nversion = \"0.1.0\"\nauthors = [\"Your Name &lt;you@example.com&gt;\"]\n\n[dependencies]\nrand = \"0.3.14\"\n</code></pre>\n\n<p>Output when there is no internet access:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\rust\\guessing_game&gt;cargo build\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nwarning: spurious network error (2 tries remaining): [2/-1] failed to send request: A connection with the serve\nr could not be established\n\nwarning: spurious network error (1 tries remaining): [2/-1] failed to send request: A connection with the server could not be established\n\nerror: failed to load source for a dependency on `rand`\n\nCaused by:\n  Unable to update registry https://github.com/rust-lang/crates.io-index\n\nCaused by:\n  failed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n  [2/-1] failed to send request: A connection with the server could not be established\n</code></pre>\n\n<p>Output with internet access. This takes some time and downloads 65MB of data for me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\rust\\guessing_game&gt;cargo build\n    Updating registry `https://github.com/rust-lang/crates.io-index`\n Downloading rand v0.3.16\n Downloading libc v0.2.29\n   Compiling libc v0.2.29\n   Compiling rand v0.3.16\n   Compiling guessing_game v0.1.0 (file:///C:/rust/guessing_game)\n    Finished dev [unoptimized + debuginfo] target(s) in 4.35 secs\n</code></pre>\n\n<p>Use the crate in main.rs:</p>\n\n<pre><code>extern crate rand;\n\nuse std::io;\nuse std::cmp::Ordering;\nuse rand::Rng;\n\nfn main() {\n    println!(\"Guess the number!\");\n\n    let secret_number = rand::thread_rng().gen_range(1, 101);\n\n    loop {\n        println!(\"Please input your guess.\");\n\n        let mut guess = String::new();\n\n        io::stdin()\n            .read_line(&amp;mut guess)\n            .expect(\"Failed to read line\");\n\n        let guess: u32 = match guess.trim().parse() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; continue,\n        };\n\n        println!(\"You guessed: {}\", guess);\n\n        match guess.cmp(&amp;secret_number) {\n            Ordering::Less =&gt; println!(\"Too small!\"),\n            Ordering::Greater =&gt; println!(\"Too big!\"),\n            Ordering::Equal =&gt; {\n                println!(\"You win!\");\n                break;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\rust\\guessing_game&gt;cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target\\debug\\guessing_game.exe`\nGuess the number!\nPlease input your guess.\n50\nYou guessed: 50\nToo small!\nPlease input your guess.\n75\nYou guessed: 75\nToo big!\nPlease input your guess.\n60\nYou guessed: 60\nToo big!\nPlease input your guess.\n55\nYou guessed: 55\nToo small!\nPlease input your guess.\n57\nYou guessed: 57\nYou win!\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user5778069"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 438, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1618013333, "creation_date": 1502538676, "last_edit_date": 1618013333, "question_id": 45649927, "link": "https://stackoverflow.com/questions/45649927/unable-to-update-registry-the-server-name-or-address-could-not-be-resolved-fo", "title": "&quot;Unable to update registry: The server name or address could not be resolved&quot; for a dependency", "body": "<p>I am using Windows and facing below error. Not sure why it's not working.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\RUST\\guess_game&gt;cargo build\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nwarning: spurious network error (2 tries remaining): [2/-1] failed to send request: The server name or address could not be resolved\n\nwarning: spurious network error (1 tries remaining): [2/-1] failed to send request: The server name or address could not be resolved\n\nerror: failed to load source for a dependency on `rand`\n\nCaused by:\n  Unable to update registry https://github.com/rust-lang/crates.io-index\n\nCaused by:\n  failed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n  [2/-1] failed to send request: The server name or address could not be resolved\n</code></pre>\n"}, {"tags": ["generics", "rust", "type-inference"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1502532620, "post_id": 45647917, "comment_id": 78256647, "body": "Just to be clear: in your example, the user would have to state the destination type in both lines, right? Because on the type level, we obviously can&#39;t know the values of the variables. And on type level <code>usize</code> -&gt; <code>i32</code> has the potential to change the value."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1502535494, "post_id": 45647917, "comment_id": 78257450, "body": "Inference is effectively disabled in Rust when it is <i>ambiguous</i>. An example is <code>.collect()</code> which regularly requires annotation because the receiver is otherwise unconstrained. I am not sure if one can easily create an ambiguity only in some circumstances, and I am not sure it is actually desirable. From an interface point of view; I think I&#39;d rather have two functions."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1502538919, "post_id": 45647917, "comment_id": 78258377, "body": "@LukasKalbertodt Very good point! I&#39;ll adapt my example."}], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 152, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1502547194, "creation_date": 1502524454, "last_edit_date": 1502547194, "question_id": 45647917, "link": "https://stackoverflow.com/questions/45647917/is-it-possible-to-disable-type-inference-in-certain-situations", "title": "Is it possible to disable type inference in certain situations?", "body": "<p>I wrote the crate <a href=\"https://crates.io/crates/as_num\" rel=\"nofollow noreferrer\"><code>as_num</code></a> which does \"checked casts\" between primitive numeric types. A \"checked cast\" is an analog to Rust's built-in checked addition. In <code>--debug</code>, a checked cast ensures that you can convert the result back to the original type without loss (i.e. truncation does not alter the numeric value), while in <code>--release</code> it should compile to a simple <code>src as dest</code>.</p>\n\n<p>To achieve that, the crate offers a generic method <code>as_num</code> for primitive types that can be used to cast between types:</p>\n\n<pre><code>take_i32(2u8.as_num()); // 2 will be converted to i32 successfully\ntake_i8(12345u32.as_num()); // asserts at runtime since 12345 does not fit into an i8\n</code></pre>\n\n<p>This allows you to call <code>as_num</code> without stating the destination type, inferring it instead. You can explicitly state the destination type using <code>as_num::&lt;dest&gt;()</code>.</p>\n\n<p>When a cast is guaranteed to succeed (according to <a href=\"https://doc.rust-lang.org/nomicon/casts.html\" rel=\"nofollow noreferrer\">this</a>), I would like the programmer to not have to bother with stating the destination type and let type inference do its work. If we have a (possibly) truncating cast, the programmer should be required to write the destination type.</p>\n\n<p>Is this possible to achieve without resorting to two different function names, i.e. with only <code>as_num</code>?</p>\n"}, {"tags": ["csv", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1502477620, "post_id": 45642034, "comment_id": 78243632, "body": "The CSV format is a lot more than splitting on commas, so do you want advice on fixing your borrow error, or on how to parse as CSV with a library?"}, {"owner": {"reputation": 41, "user_id": 8320319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f144a2be73899a9d1cb571a165692eb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dragon", "link": "https://stackoverflow.com/users/8320319/dragon"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502477697, "post_id": 45642034, "comment_id": 78243669, "body": "@loganfsmyth I know, If I were using this in production, I would use a crate. Here I am just trying to get some better feeling for this borrowing. Should I delete the CSV tag?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1502477902, "post_id": 45642034, "comment_id": 78243764, "body": "Nice idea trying to put the error message into the code. However, for most experienced Rust programmer, it&#39;s much more helpful if you just copy the error message of the compiler verbatim. Would be awesome if you could still do that :)  Also: please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> ... you&#39;re code is missing the function signature, for example."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502478206, "post_id": 45642034, "comment_id": 78243926, "body": "Hard to decide when this counts as an exact duplicate, but it&#39;s the same issue as in <a href=\"https://stackoverflow.com/questions/33286213/why-does-my-variable-not-live-long-enough\" title=\"why does my variable not live long enough\">stackoverflow.com/questions/33286213/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/34652021/how-to-iterate-and-extract-values-out-of-a-for-loop-in-rust\" title=\"how to iterate and extract values out of a for loop in rust\">stackoverflow.com/questions/34652021/&hellip;</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502479453, "post_id": 45642034, "comment_id": 78244451, "body": "TL;DR from the duplicates: when you iterate over <code>iter</code>, you transfer ownership of the <code>Vec</code> and the strings inside it to the <code>for</code> loop. <code>split</code> returns a reference to the string, but the string will be deallocated (&quot;dropped&quot;) at the end of each loop iteration, invalidating any references. Instead of consuming <code>iter</code> during iteration, iterate over references to it. <a href=\"https://play.integer32.com/?gist=1fe300faddab8f7e9029ab96b4c86572&amp;version=stable\" rel=\"nofollow noreferrer\">One example</a>"}], "owner": {"reputation": 41, "user_id": 8320319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f144a2be73899a9d1cb571a165692eb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dragon", "link": "https://stackoverflow.com/users/8320319/dragon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 515, "favorite_count": 0, "closed_date": 1502479002, "answer_count": 0, "score": 0, "last_activity_date": 1502479070, "creation_date": 1502477533, "last_edit_date": 1502478875, "question_id": 45642034, "link": "https://stackoverflow.com/questions/45642034/how-to-split-the-lines-of-a-csv-on-commas-and-save-the-results-in-memory", "closed_reason": "Duplicate", "title": "How to split the lines of a CSV on commas and save the results in memory?", "body": "<p>I have a string that was read from a file. For each line, I would like to split the string and save the split strings to memory as vectors:</p>\n\n<pre><code>use std::io::{BufReader, BufRead};\n\nfn main() {\n    let s = r#\"line1,line\n    line2,line2\"#;\n\n    let reader = BufReader::new(s.as_bytes());\n    let mut out = Vec::new();\n\n    let iter = reader\n        .lines()\n        .map(|line| line.unwrap().to_string())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    for x in iter {\n        let split = x.split(',').collect::&lt;Vec&lt;_&gt;&gt;();\n        out.push(split);\n    }\n}\n</code></pre>\n\n<p>Error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `x` does not live long enough\n  --&gt; src/main.rs:18:6\n   |\n16 |         let split = x.split(',').collect::&lt;Vec&lt;_&gt;&gt;();\n   |                     - borrow occurs here\n17 |         out.push(split);\n18 |     }\n   |      ^ `x` dropped here while still borrowed\n19 | }\n   | - borrowed value needs to live until here\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502461017, "post_id": 45637192, "comment_id": 78234118, "body": "Please take the time to read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>. It has an <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch07-01-mod-and-the-filesystem.html\" rel=\"nofollow noreferrer\">entire section on how modules live on the filesystem</a>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1502461045, "post_id": 45637192, "comment_id": 78234146, "body": "Have you read <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-00-modules.html\" rel=\"nofollow noreferrer\">the &quot;Modules&quot; chapter in the Rust book</a>? I&#39;d really recommend you to read all of it to understand the whole module system. The tl;dr is: you need <code>mod</code> declarations. <a href=\"https://stackoverflow.com/a/43262123/2408867\">See here, too</a>. And if interested: this might change in the future -- there is a lot of discussion about how to redesign Rust&#39;s modules."}, {"owner": {"reputation": 8130, "user_id": 2713740, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f1f024ede163fdaebe61807ad5c88f1e?s=128&d=identicon&r=PG&f=1", "display_name": "Luca", "link": "https://stackoverflow.com/users/2713740/luca"}, "edited": false, "score": 1, "creation_date": 1502461374, "post_id": 45637192, "comment_id": 78234358, "body": "Thank you for these pointers. I just started using it and looking at the online book. Was just jumping a bit ahead there"}], "answers": [{"tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": true, "score": 2, "last_activity_date": 1502460781, "creation_date": 1502460781, "answer_id": 45637337, "question_id": 45637192, "link": "https://stackoverflow.com/questions/45637192/unresolved-import-when-organising-rust-code-in-multiple-directories/45637337#45637337", "title": "Unresolved import when organising Rust code in multiple directories", "body": "<p>It is possible, however you need to inform your code about additional module that is inside your code using:</p>\n\n<pre><code>mod test;\n</code></pre>\n\n<p>And then create additional file</p>\n\n<pre><code>// src/test/mod.rs\n\npub mod one;\n</code></pre>\n"}], "owner": {"reputation": 8130, "user_id": 2713740, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f1f024ede163fdaebe61807ad5c88f1e?s=128&d=identicon&r=PG&f=1", "display_name": "Luca", "link": "https://stackoverflow.com/users/2713740/luca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 905, "favorite_count": 0, "accepted_answer_id": 45637337, "answer_count": 1, "score": 2, "last_activity_date": 1502460914, "creation_date": 1502460347, "last_edit_date": 1502460914, "question_id": 45637192, "link": "https://stackoverflow.com/questions/45637192/unresolved-import-when-organising-rust-code-in-multiple-directories", "title": "Unresolved import when organising Rust code in multiple directories", "body": "<p>I am used to organising files in separate directories depending on the problem domain (for example grouping image processing stuff together, IO stuff in another directory etc). I am not sure if this way or organisation is even recommended in Rust.</p>\n\n<p>I have setup my project in multiple directories:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>- helloworld\n    - Cargo.toml\n    - src\n        - main.rs\n        - test\n            - one.rs\n</code></pre>\n\n<p>I am trying to use a function from <code>one.rs</code> in <code>main.rs</code></p>\n\n<p><strong>one.rs</strong></p>\n\n<pre><code>fn test() {\n    println!(\"Calling test...\");\n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use test::one::*;\n\nfn main() {\n    println!(\"Hello, world!\");\n    test();\n}\n</code></pre>\n\n<p>This results in a compile time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `test::one::*`\n --&gt; src/main.rs:1:5\n  |\n1 | use test::one::*;\n  |     ^^^^^^^^^^^^^ Maybe a missing `extern crate test;`?\n\nerror[E0425]: cannot find function `test` in this scope\n --&gt; src/main.rs:6:5\n  |\n6 |     test();\n  |     ^^^^ not found in this scope\n</code></pre>\n\n<p>Looking at some online projects, it seems like something like this should be possible.</p>\n"}, {"tags": ["hashmap", "rust", "dereference"], "answers": [{"comments": [{"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1502457106, "post_id": 45635940, "comment_id": 78231272, "body": "Could you see my supplement?"}], "tags": [], "owner": {"reputation": 348, "user_id": 5086919, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wlVbd.jpg?s=128&g=1", "display_name": "Teo", "link": "https://stackoverflow.com/users/5086919/teo"}, "is_accepted": false, "score": 0, "last_activity_date": 1502456628, "creation_date": 1502456628, "answer_id": 45635940, "question_id": 45635783, "link": "https://stackoverflow.com/questions/45635783/why-do-i-need-to-dereference-hashmaps-key-twice/45635940#45635940", "title": "Why do I need to dereference HashMap&#39;s key twice?", "body": "<p>You only need to dereference once</p>\n\n<p>Here's an <a href=\"https://play.rust-lang.org/?gist=3ea366fb2e5ca98429e82ac22094e7ad&amp;version=stable\" rel=\"nofollow noreferrer\">example</a> of your code working</p>\n"}, {"tags": [], "owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "is_accepted": true, "score": 6, "last_activity_date": 1502458102, "last_edit_date": 1502458102, "creation_date": 1502457988, "answer_id": 45636380, "question_id": 45635783, "link": "https://stackoverflow.com/questions/45635783/why-do-i-need-to-dereference-hashmaps-key-twice/45636380#45636380", "title": "Why do I need to dereference HashMap&#39;s key twice?", "body": "<p>Since you didn't specify the type of your <code>HashMap</code>, the compiler inferred it.</p>\n\n<pre><code>let v = vec![1i32, 2, 3];\nlet mut h = HashMap::new();\nfor i in &amp;v {\n    h.insert(i, ());\n}\n</code></pre>\n\n<p>The type of <code>h</code> here is <code>HashMap&lt;&amp;i32, ()&gt;</code>, and the type of <code>i</code> is <code>&amp;i32</code>. Why does <code>i</code> have the type <code>&amp;i32</code>? Because that's how <code>IntoIterator</code> on <code>&amp;Vec</code> is implemented. In general, when you iterate over a reference, you get references.</p>\n\n<p>If you want a <code>HashMap</code> with a key type that isn't a reference, you can say so. Then you'll get a different error message when you attempt to insert the reference.</p>\n\n<pre><code>let v = vec![1i32, 2, 3];\nlet mut h: HashMap&lt;i32, ()&gt; = HashMap::new();\nfor i in &amp;v {\n    h.insert(i, ());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:6:18\n  |\n6 |         h.insert(i, ());\n  |                  ^ expected i32, found &amp;i32\n  |\n  = note: expected type `i32`\n             found type `&amp;i32`\n</code></pre>\n\n<p>And then you can replace the key to be inserted with <code>*i</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 4, "last_activity_date": 1502458548, "last_edit_date": 1502458548, "creation_date": 1502458330, "answer_id": 45636515, "question_id": 45635783, "link": "https://stackoverflow.com/questions/45635783/why-do-i-need-to-dereference-hashmaps-key-twice/45636515#45636515", "title": "Why do I need to dereference HashMap&#39;s key twice?", "body": "<p>The full type of your <code>HashMap</code> is inferred as <code>HashMap&lt;&amp;i32, i32&gt;</code>. This can be verified by <a href=\"https://stackoverflow.com/q/21747136/155423\">using the following trick</a>:</p>\n\n<pre><code>let () = h;\n</code></pre>\n\n<p>to trigger a type error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:9\n   |\n17 |     let () = h;\n   |         ^^ expected struct `std::collections::HashMap`, found ()\n   |\n   = note: expected type `std::collections::HashMap&lt;&amp;{integer}, {integer}&gt;`\n              found type `()`\n</code></pre>\n\n<p>(at this point the compiler was not yet sure the final type will be <code>HashMap&lt;&amp;i32, i32&gt;</code>, hence the <code>{integer}</code>s in the type signature)</p>\n\n<p>When you are iterating over <code>&amp;h</code>, the <code>(k, v)</code> tuple has type <code>(&amp;&amp;i32, &amp;i32)</code> (which can also be confirmed with the aforementioned trick), which is why you need a double dereference for <code>k</code> and only one for <code>v</code>.</p>\n"}], "owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 949, "favorite_count": 2, "accepted_answer_id": 45636380, "answer_count": 3, "score": 1, "last_activity_date": 1502458548, "creation_date": 1502456122, "last_edit_date": 1502458000, "question_id": 45635783, "link": "https://stackoverflow.com/questions/45635783/why-do-i-need-to-dereference-hashmaps-key-twice", "title": "Why do I need to dereference HashMap&#39;s key twice?", "body": "<p>I've only been learning Rust for a few days. I think that these two code samples are the same, but the compiler disagrees. Can you explain what happens in part II? Why do I need to dereference <code>key</code> twice, but <code>value</code> once?</p>\n\n<p><strong>Part I</strong></p>\n\n<pre><code>use std::collections::HashMap;\n\nlet mut h = HashMap::new();   \nh.insert(1, 1);\nh.insert(2, 2);\n\nlet mut keys: Vec&lt;i32&gt; = Vec::new();\nlet mut values: Vec&lt;i32&gt; = Vec::new();\n\nfor (k, v) in &amp;h {\n    keys.push(**k);\n    values.push(*v);\n}\n</code></pre>\n\n<p><strong>Part II</strong></p>\n\n<pre><code>fn main() {\n    let mut v = vec![2, 3, 5, 1, 2, 3, 8, 6, 3, 1, 4, 6, 7];\n\n    use std::collections::HashMap;\n\n    let mut h = HashMap::new();\n\n    for element in &amp;v {\n        let count = h.entry(element).or_insert(0);\n\n        *count += 1;\n    }\n\n    let mut keys: Vec&lt;i32&gt; = Vec::new();\n    let mut values: Vec&lt;i32&gt; = Vec::new();\n\n    for (k, v) in &amp;h {\n        keys.push(**k);\n        values.push(*v);\n    }\n\n    println!(\"{:?}\", keys);\n}\n</code></pre>\n"}, {"tags": ["rust", "stack", "heap", "memcpy", "boxing"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1502462567, "last_edit_date": 1502462567, "creation_date": 1502461519, "answer_id": 45637585, "question_id": 45634972, "link": "https://stackoverflow.com/questions/45634972/is-there-a-best-practice-when-a-type-should-be-boxed/45637585#45637585", "title": "Is there a best practice when a type should be boxed?", "body": "<p><strong>TL;DR: start with no boxing, then profile.</strong></p>\n\n<hr>\n\n<p><strong>Stack Allocation vs Boxed Allocation</strong></p>\n\n<p>This is perhaps more clear cut:</p>\n\n<ul>\n<li>Stick to the stack,</li>\n<li>Unless the value is big enough that it would blow it up.</li>\n</ul>\n\n<p>While <em>semantically</em> writing <code>fn foo() -&gt; Bar</code> implies moving <code>Bar</code> from the callee frame to the caller frame, in practice you are more likely to end up with the equivalent of a <code>fn foo(__result: mut * Bar)</code> signature where the caller allocates space on its stack and passes a pointer to the callee.</p>\n\n<p>This may not always be sufficient to avoid copying, as some patterns may prevent writing directly in the return slot:</p>\n\n<pre><code>fn defeat_copy_elision() -&gt; WithDrop {\n    let one = side_effectful();\n    if side_effectful_too() {\n        one\n    } else {\n        side_effects_hurt()\n    }\n}\n</code></pre>\n\n<p>Here, there is no magic:</p>\n\n<ul>\n<li>if the compiler uses the return slot for <code>one</code>, then in case the branch evaluates to <code>false</code> it has to move <code>one</code> out then instantiate the new <code>WithDrop</code> into it, and finally destroy <code>one</code>,</li>\n<li>if the compiler instantiates <code>one</code> on the current stack, and it has to return it, then it has to perform a copy.</li>\n</ul>\n\n<p>If the type didn't need <code>Drop</code>, there would be no issue.</p>\n\n<p>Despite these oddball cases, I advise sticking to the stack if possible unless profiling reveals a place where it'd be beneficial to box.</p>\n\n<hr>\n\n<p><strong>Inline Member or Boxed Member</strong></p>\n\n<p>This case is much more complicated:</p>\n\n<ul>\n<li><p>the size of the <code>struct</code>/<code>enum</code> is affected, thus CPU cache behavior is affected:</p>\n\n<ul>\n<li>less frequently used big variants are a good candidate for boxing (or boxing parts of them),</li>\n<li>less frequently accessed big members are a good candidate for boxing.</li>\n</ul></li>\n<li><p>at the same time, there are costs for boxing:</p>\n\n<ul>\n<li>it's incompatible with <code>Copy</code> types, and implicitly implements <code>Drop</code> (which, as seen above, disables some optimizations),</li>\n<li>allocating/freeing memory has unbounded latency<sup>1</sup>,</li>\n<li>accessing boxed memory introduces data-dependency: you cannot know which cache line to request before knowing the address.</li>\n</ul></li>\n</ul>\n\n<p>As a result, this is a very fine balancing act. Boxing or unboxing a member may improve the performance of some parts of the codebase while decreasing the performance of others.</p>\n\n<p>There is definitely no one-size fits all.</p>\n\n<p>Thus, once again, I advise avoiding boxing until profiling reveals a place where it'd be beneficial to box.</p>\n\n<p><sup>1</sup> <em>Consider that on Linux, any memory allocation for which there is no spare memory in the process may require a system call, which if there is no spare memory in the OS may trigger the OOM killer to kill a process, at which point its memory is salvaged and made available. A simple <code>malloc(1)</code> may easily require <strong>milliseconds</strong>.</em></p>\n"}], "owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 1, "accepted_answer_id": 45637585, "answer_count": 1, "score": 6, "last_activity_date": 1518483925, "creation_date": 1502453601, "last_edit_date": 1518483925, "question_id": 45634972, "link": "https://stackoverflow.com/questions/45634972/is-there-a-best-practice-when-a-type-should-be-boxed", "title": "Is there a best practice when a type should be boxed?", "body": "<p>In C#, there are structs and classes. Structs are usually (i.e. there are exceptions) stack allocated and classes are always heap allocated. Class instances, therefore, put pressure on the GC and are considered \"slower\" than structs. Microsoft has <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/choosing-between-class-and-struct\" rel=\"nofollow noreferrer\">a best practice guide</a> when to use structs over classes. This says to consider a struct if:</p>\n\n<blockquote>\n  <ul>\n  <li>It logically represents a single value, similar to primitive types (int, double, etc.).</li>\n  <li>It has an instance size under 16 bytes.</li>\n  <li>It is immutable.</li>\n  <li>It will not have to be boxed frequently.</li>\n  </ul>\n</blockquote>\n\n<p>In C#, using struct instances that are larger than 16 bytes is generally said to perform worse than garbage collected class instances (dynamically allocated).</p>\n\n<p>When does a boxed instance (which is heap-allocated) perform better, in terms of speed, than a non-boxed equivalent instance (which is stack-allocated)? Is there any best practice about when we should dynamically allocate (on the heap) instead of sticking to the default stack allocation?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 12, "last_activity_date": 1549644921, "last_edit_date": 1549644921, "creation_date": 1502450818, "answer_id": 45634084, "question_id": 45634083, "link": "https://stackoverflow.com/questions/45634083/is-there-a-concept-of-pod-types-in-rust/45634084#45634084", "title": "Is there a concept of POD types in Rust?", "body": "<p>Quick answer; <strong>C++'s POD types \u2248 Rust's <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code> types</a></strong>. </p>\n\n<p>However, there are a few other, related concepts. Let's discuss them in detail!</p>\n\n<hr>\n\n<p>The <strong><code>Copy</code> trait</strong> is closest to the term \"POD type\" in C++ and is defined as follows:</p>\n\n<blockquote>\n  <p>Types whose values can be duplicated simply by copying bits.</p>\n</blockquote>\n\n<p>By \"copying bits\", the documentation basically means <code>memcpy()</code>. This includes all primitive types, such as <code>u32</code>, <code>f32</code>, <code>char</code> and <code>bool</code>, but user defined types can be <code>Copy</code>, too. Usually the trait is simply <em>derived</em>:</p>\n\n<pre><code>#[derive(Clone, Copy)]\nstruct Point {\n    x: f32,\n    y: f32,\n}\n</code></pre>\n\n<p>You might have noticed the <code>Clone</code>: the <a href=\"https://doc.rust-lang.org/stable/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><strong><code>Clone</code> trait</strong></a> is a requirement of <code>Copy</code> and is defined as:</p>\n\n<blockquote>\n  <p>A common trait for the ability to explicitly duplicate an object.</p>\n</blockquote>\n\n<p><code>Clone</code> says that a type is \"somehow able to duplicate itself\" and <code>Copy</code> requires more by saying the type is \"able to duplicate itself by just copying the type's bits\".</p>\n\n<hr>\n\n<p>The C++ answer states that POD types don't contain \"constructors, destructors and virtual members functions\". Let's break that down for Rust:</p>\n\n<ul>\n<li><p><strong>Constructors</strong>: Rust doesn't have dedicated constructor methods, but instead uses associated functions (static methods in C++). Every type, even all <code>Copy</code> types, may have as many associated functions and methods as they want. In Rust it is not really a requirement to be \"POD\". In particular, even Rust's primitive types have many methods, like <a href=\"https://doc.rust-lang.org/stable/std/primitive.u32.html#method.pow\" rel=\"nofollow noreferrer\"><code>u32::pow()</code></a>. This restriction doesn't apply to Rust.</p></li>\n<li><p><strong>Destructors</strong>: in Rust, objects are destructed by calling <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Drop.html#tymethod.drop\" rel=\"nofollow noreferrer\"><code>drop()</code></a> from the <code>Drop</code> trait (or rather: <code>drop()</code> is automatically called at the end of scope). <strong>Types can't be <code>Copy</code> when they implement the <code>Drop</code> trait!</strong> Rust has a similar restriction here.</p></li>\n<li><p><strong>Virtual member functions</strong>: in Rust, <em>virtual</em> is not a property of a function. Most functions can be used in a <em>virtual context</em>, that is: they can be used with dynamic dispatch, but being <code>Copy</code> doesn't prevent a type from being used in a dynamic dispatch context (in Rust terms: being used as trait object). This is partly thanks to the fact that the vptr is not stored within the type, but next to the pointer to the object (<em>fat pointers</em>). This point doesn't apply to Rust. </p></li>\n</ul>\n\n<hr>\n\n<p>However, you might require more things from your \"POD types\" than \"being copyable by copying bits\". Rust has built-in, specific trait bounds for some additional properties:</p>\n\n<ul>\n<li><p><strong><code>'static</code></strong>: requires that the type does not contain any internal references. For example, <code>struct Foo&lt;'a&gt;(&amp;'a u32);</code> would not satisfy this trait bound. If you know your type is <code>'static</code>, you have no lifetime restrictions and the borrow checker won't make you any problems.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\"><strong><code>Sized</code></strong></a>: requires that the type has a size known at compile time and can thus be stored on the stack. That is true for almost all types; there are only a few rare-ish exceptions: <code>[T]</code> and <code>str</code> (slices), <code>dyn MyTrait</code> (trait objects) and structs that contain an unsized types as the last field (e.g. <a href=\"https://doc.rust-lang.org/stable/std/path/struct.Path.html\" rel=\"nofollow noreferrer\"><code>Path</code></a>).</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><strong><code>Send</code></strong></a> and <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><strong><code>Sync</code></strong></a>: require that the type can be sent to other threads and can shared via immutable reference (<code>&amp;T</code>) across threads. Both traits are implemented for almost all types. It's not implemented if the type contains some kind of magic (e.g. <a href=\"https://doc.rust-lang.org/stable/std/cell/index.html\" rel=\"nofollow noreferrer\">interior mutability</a>, <a href=\"https://doc.rust-lang.org/stable/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">references to something without having a lifetime</a>, ...). Requiring those two trait bounds makes sure that your type does not have this magic.</p></li>\n</ul>\n\n<p>So if you really want a <strong>very simple, no-magic \"bag of bits\" type</strong>, this seems like a fitting trait/collection of bounds:</p>\n\n<pre><code>trait Pod: 'static + Copy + Sized + Send + Sync {}\n\nimpl&lt;T: 'static + Copy + Sized + Send + Sync&gt; Pod for T {}\n</code></pre>\n\n<p>With those kinds of type, you won't deal with move semantics (due to <code>Copy</code>) or the borrow checker (due to <code>'static</code>).</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 780, "favorite_count": 0, "accepted_answer_id": 45634084, "answer_count": 1, "score": 10, "last_activity_date": 1549644921, "creation_date": 1502450818, "question_id": 45634083, "link": "https://stackoverflow.com/questions/45634083/is-there-a-concept-of-pod-types-in-rust", "title": "Is there a concept of POD types in Rust?", "body": "<p>In C++, the term <em>POD type</em> is used to describe types which only contain <em>plain old data</em>. <a href=\"https://stackoverflow.com/questions/146452/what-are-pod-types-in-c\">Quoted from here</a>:</p>\n\n<blockquote>\n  <p>A class [...] without constructors, destructors and virtual members functions. </p>\n</blockquote>\n\n<p>Is there a similar concept in Rust?</p>\n"}, {"tags": ["interface", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1502450705, "post_id": 45633269, "comment_id": 78226993, "body": "Mixed feelings about this question; this is really <i>trivia</i>, and anyone reading the book should learn this tidbit. If it were not a self-answered question, I would probably downvote it as &quot;showing lack of research&quot;; I will not expect everyone to memorize the full book, but a cursory reading should be sufficient to pick this fact up."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 7, "creation_date": 1502451028, "post_id": 45633269, "comment_id": 78227196, "body": "@MatthieuM. Absolutely! However, many people don&#39;t read the book first, many people just want to quickly find an answer and many people like finding answers on StackOverflow. There is a <a href=\"https://stackoverflow.com/questions/318064/how-do-you-declare-an-interface-in-c\">very similar question for C++</a> which could also be regarded as &quot;trivia&quot;. <i>I</i> think this question could help beginners a lot and it should stay. However, I don&#39;t mind you disagreeing or downvoting or maybe even casting a close vote to see what others think ^_^"}, {"owner": {"reputation": 254, "user_id": 4325755, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/afcb6055b5be0c5353a38ed160e05b2b?s=128&d=identicon&r=PG&f=1", "display_name": "Brent Allard", "link": "https://stackoverflow.com/users/4325755/brent-allard"}, "edited": false, "score": 6, "creation_date": 1540766922, "post_id": 45633269, "comment_id": 92973628, "body": "I just read (some of) the book, sat down to write my first lines of Rust, realized I&#39;d forgotten most of the syntax, and came straight to this post. This sort of thing is worth making easily accessible."}, {"owner": {"reputation": 327, "user_id": 6662425, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3e6664d0619a92cc63d9e42c2fafb7c?s=128&d=identicon&r=PG&f=1", "display_name": "Felix B.", "link": "https://stackoverflow.com/users/6662425/felix-b"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1574541518, "post_id": 45633269, "comment_id": 104271692, "body": "@MatthieuM. StackOverflow is a lot more searchable. A book makes sense, if you want a complete introduction. If you just want to learn or remember a specific concept, then being able to search for a specific question is great. As soon as search engines are able to compile answers from books that might change.  e.g. I stumbled upon this question, because I was curious how Rust tackles interfaces. I want to know how rust approaches certain topics since it seemed to have good solutions to other problems I encountered. But as a student I also don&#39;t really need to learn rust right now."}], "answers": [{"comments": [{"owner": {"reputation": 2868, "user_id": 142605, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ea0662af98f5642193079ebbb7e78fd5?s=128&d=identicon&r=PG", "display_name": "dzieciou", "link": "https://stackoverflow.com/users/142605/dzieciou"}, "edited": false, "score": 0, "creation_date": 1593194721, "post_id": 45636553, "comment_id": 110704736, "body": "Did you mean &quot;<a href=\"https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html\" rel=\"nofollow noreferrer\">default</a>&quot; methods in Java interfaces instead of &quot;defender&quot;?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2868, "user_id": 142605, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ea0662af98f5642193079ebbb7e78fd5?s=128&d=identicon&r=PG", "display_name": "dzieciou", "link": "https://stackoverflow.com/users/142605/dzieciou"}, "edited": false, "score": 1, "creation_date": 1593195050, "post_id": 45636553, "comment_id": 110704850, "body": "@dzieciou <i>defender</i> is another name for a default method in Java <a href=\"https://stackoverflow.com/q/19998309/4498831\">stackoverflow.com/q/19998309/4498831</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 48, "last_activity_date": 1571389867, "last_edit_date": 1571389867, "creation_date": 1502458444, "answer_id": 45636553, "question_id": 45633269, "link": "https://stackoverflow.com/questions/45633269/how-do-you-declare-an-interface-in-rust/45636553#45636553", "title": "How do you declare an interface in Rust?", "body": "<p><em>TL;DR</em>: The closest to interface in Rust is a trait. However, do <strong>not</strong> expect it to be similar in all point to an interface. My answer does not aim to be exhaustive but gives some elements of comparison to those coming from other languages.</p>\n\n<hr>\n\n<p>If you want an abstraction similar to interface, you need to use Rust's <code>trait</code>s:</p>\n\n<pre><code>trait Shape {\n    fn area(&amp;self) -&gt; f32;\n}\n\nstruct Circle {\n    radius: f32,\n}\n\nimpl Shape for Circle {\n    fn area(&amp;self) -&gt; f32 {\n        self.radius.powi(2) * std::f32::consts::PI\n    }\n}\n\nstruct Square {\n    side: f32,\n}\n\nimpl Shape for Square {\n    fn area(&amp;self) -&gt; f32 {\n        self.side.powi(2)\n    }\n}\n\nfn main() {\n    display_area(&amp;Circle { radius: 1. });\n    display_area(&amp;Square { side: 1. });\n}\n\nfn display_area(shape: &amp;dyn Shape) {\n    println!(\"area is {}\", shape.area())\n}\n</code></pre>\n\n<p>However, <strong>it is an error to see a Rust trait as an equivalent of OOP interface.</strong> I will enumerate some particularities of Rust's <code>trait</code>s.</p>\n\n<h1>Dispatch</h1>\n\n<p>In Rust, the dispatch (<em>i.e.</em> using the right data and methods when given a trait) can be done <a href=\"https://doc.rust-lang.org/1.0.0-beta/book/static-and-dynamic-dispatch.html\" rel=\"noreferrer\">in two ways</a>:</p>\n\n<h3>Static dispatch</h3>\n\n<p>When a trait is statically dispatched, there is no overhead at runtime. This is an equivalent of C++ templates; but where C++ uses SFINAE, the Rust compiler checks the validity using the \"hints\" we give to him:</p>\n\n<pre><code>fn display_area(shape: &amp;impl Shape) {\n    println!(\"area is {}\", shape.area())\n}\n</code></pre>\n\n<p>With <code>impl Shape</code>, we say to the compiler that our function has a generic type parameter that implements <code>Shape</code>, therefore we can use the method <code>Shape::area</code> on our <code>shape</code>.</p>\n\n<p>In this case, like in C++ templates, the compiler will generate a different function for each different type passed in.</p>\n\n<h3>Dynamic dispatch</h3>\n\n<p>In our first example:</p>\n\n<pre><code>fn display_area(shape: &amp;dyn Shape) {\n    println!(\"area is {}\", shape.area())\n}\n</code></pre>\n\n<p>the dispatch is dynamic. This is an equivalent to using an interface in C#/Java or an abstract class in C++.</p>\n\n<p>In this case, the compiler does not care about the type of <code>shape</code>. The right thing to do with it will be determined at runtime, usually at a very slight cost.</p>\n\n<h1>Separation between data and implementation</h1>\n\n<p>As you see, the data is separated from the implementation; like, for example, C# extension methods. Moreover, one of the utilities of a trait is to extend the available methods on a value:</p>\n\n<pre><code>trait Hello {\n    fn say_hello(&amp;self);\n}\n\nimpl Hello for &amp;'static str {\n    fn say_hello(&amp;self) {\n        println!(\"Hello, {}!\", *self)\n    }\n}\n\nfn main() {\n    \"world\".say_hello();\n}\n</code></pre>\n\n<p>A great advantage of this, is that you can implement a trait for a data without modifying the data. In contrast, in classical object oriented languages, you must modify the class to implement another interface. Said otherwise, you can implement your own traits for external data.</p>\n\n<p><a href=\"http://huonw.github.io/blog/2015/01/peeking-inside-trait-objects/\" rel=\"noreferrer\">This separation is true also at the lowest level</a>. In case of dynamic dispatch, the method is given two pointers: one for the data, and another for the methods (the vtable).</p>\n\n<h1>Default implementation</h1>\n\n<p>The trait has one more thing than a classic interface: it can provide a default implementation of a method (just like the \"defender\" method in Java 8). Example:</p>\n\n<pre><code>trait Hello {\n    fn say_hello(&amp;self) {\n        println!(\"Hello there!\")\n    }\n}\n\nimpl Hello for i32 {}\n\nfn main() {\n    123.say_hello(); // call default implementation\n}\n</code></pre>\n\n<p>To use classic OOP words, this is like an abstract class without variable members.</p>\n\n<h1>No inheritance</h1>\n\n<p>The Rust trait's system is not an inheritance system. You cannot try to downcast, for example, or try to cast a reference on a trait to another trait. To get more information about this, see <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\">this question about upcasting</a>.</p>\n\n<p>Moreover, you can use the <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"noreferrer\">dynamic type</a> to simulate some behavior you want.</p>\n\n<p><strong>While you can simulate the inheritance mechanism in Rust with various tricks, this is a better idea to use idiomatic designs instead of twist the language to a foreign way of thinking that will uselessly make grow the complexity of code.</strong></p>\n\n<p>You should read <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"noreferrer\">the chapter about traits</a> in the Rust book to learn more about this topic.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9342, "favorite_count": 7, "accepted_answer_id": 45636553, "answer_count": 1, "score": 29, "last_activity_date": 1571389867, "creation_date": 1502448205, "last_edit_date": 1502458469, "question_id": 45633269, "link": "https://stackoverflow.com/questions/45633269/how-do-you-declare-an-interface-in-rust", "title": "How do you declare an interface in Rust?", "body": "<p>I have multiple types with similar methods. I want to abstract over them by writing an interface, like I would in Java:</p>\n\n\n\n<pre><code>public interface Shape {\n    public float area();\n}\n\nclass Circle implements Shape {\n    public float area() {\n        return radius * radius * Math.PI;\n    }\n\n    public float radius;\n}\n</code></pre>\n\n<p>However, there is no <code>interface</code> keyword in Rust. Doesn't Rust offer the possibility to abstract over multiple types?</p>\n"}, {"tags": ["rust", "language-lawyer"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1502447061, "post_id": 45632812, "comment_id": 78224505, "body": "Well, at least starting with one underscore seems common practice for unused arguments. The prelude and lack of text-based macros may help considerably in cutting down the number of reserved identifiers."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1502449128, "last_edit_date": 1502449128, "creation_date": 1502447544, "answer_id": 45633067, "question_id": 45632812, "link": "https://stackoverflow.com/questions/45632812/are-there-any-reserved-identifiers-e-g-starting-with-underscore-in-rust-apart/45633067#45633067", "title": "Are there any reserved identifiers (e.g. starting with underscore) in Rust apart from keywords?", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/stable/reference/identifiers.html\" rel=\"nofollow noreferrer\">Rust Reference</a>, identifiers may start with an underscore and there don't seem to be restrictions other than the length (not just an underscore) and keywords:</p>\n\n<blockquote>\n  <p>An identifier is any nonempty Unicode (see note) string of the following form:</p>\n  \n  <p>Either</p>\n  \n  <ul>\n  <li>The first character has property <a href=\"http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID_Start%3A%5D&amp;abb=on&amp;g=&amp;i=\" rel=\"nofollow noreferrer\">XID_start</a></li>\n  <li>The remaining characters have property <a href=\"http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID_Continue%3A%5D&amp;abb=on&amp;g=&amp;i=\" rel=\"nofollow noreferrer\">XID_continue</a></li>\n  </ul>\n  \n  <p>Or</p>\n  \n  <ul>\n  <li><strong>The first character is _</strong> </li>\n  <li>The identifier is more than one character, _ alone is not an identifier </li>\n  <li>The remaining characters have property <a href=\"http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID_Continue%3A%5D&amp;abb=on&amp;g=&amp;i=\" rel=\"nofollow noreferrer\">XID_continue</a></li>\n  </ul>\n  \n  <p>that does not occur in the set of <a href=\"https://doc.rust-lang.org/stable/grammar.html#keywords\" rel=\"nofollow noreferrer\">keywords</a>.</p>\n  \n  <p>note: Non-ASCII characters in identifiers are currently feature gated.</p>\n</blockquote>\n\n<p>XID_start and XID_continue are <a href=\"http://unicode.org/cldr/utility/properties.jsp\" rel=\"nofollow noreferrer\">properties</a> of Unicode <a href=\"https://en.wikipedia.org/wiki/Code_point\" rel=\"nofollow noreferrer\">code points</a>; digits, for example (and most notably), do not have the XID_start property and are thus not valid as first characters of identifiers.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 249, "favorite_count": 1, "accepted_answer_id": 45633067, "answer_count": 1, "score": 3, "last_activity_date": 1504446284, "creation_date": 1502446888, "last_edit_date": 1504446284, "question_id": 45632812, "link": "https://stackoverflow.com/questions/45632812/are-there-any-reserved-identifiers-e-g-starting-with-underscore-in-rust-apart", "title": "Are there any reserved identifiers (e.g. starting with underscore) in Rust apart from keywords?", "body": "<p>In C++, <a href=\"https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier\">certain identifiers starting with underscores are reserved to be used by the compiler or the standard library</a>. Are there similar rules for identifiers in Rust? Of course, keywords (like <code>if</code>) are not allowed as an identifier, but apart from that: may I use any identifier I want?</p>\n"}, {"tags": ["security", "encryption", "rust", "padding", "tls1.2"], "comments": [{"owner": {"reputation": 36469, "user_id": 238704, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VgOZI.png?s=128&g=1", "display_name": "President James K. Polk", "link": "https://stackoverflow.com/users/238704/president-james-k-polk"}, "edited": false, "score": 0, "creation_date": 1502460615, "post_id": 45631806, "comment_id": 78233829, "body": "What padding are you talking about?"}, {"owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "reply_to_user": {"reputation": 36469, "user_id": 238704, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VgOZI.png?s=128&g=1", "display_name": "President James K. Polk", "link": "https://stackoverflow.com/users/238704/president-james-k-polk"}, "edited": false, "score": 0, "creation_date": 1502465466, "post_id": 45631806, "comment_id": 78237086, "body": "Padding added by encryption algorithms @JamesPolk"}, {"owner": {"reputation": 36469, "user_id": 238704, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VgOZI.png?s=128&g=1", "display_name": "President James K. Polk", "link": "https://stackoverflow.com/users/238704/president-james-k-polk"}, "edited": false, "score": 0, "creation_date": 1502465610, "post_id": 45631806, "comment_id": 78237174, "body": "That padding is insignificant compared to the all the rest of the overhead added by TLS."}, {"owner": {"reputation": 273, "user_id": 6811484, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kI8m3.png?s=128&g=1", "display_name": "Esteban Cervantes", "link": "https://stackoverflow.com/users/6811484/esteban-cervantes"}, "edited": false, "score": 0, "creation_date": 1502475053, "post_id": 45631806, "comment_id": 78242297, "body": "I&#39;m guessing you&#39;re using AES in CBC mode as the selected block cipher. You could use it in CTR mode, which doesn&#39;t use padding at all."}], "owner": {"reputation": 309, "user_id": 8394326, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10213751014238196/picture?type=large", "display_name": "Traor&#233; Moussa", "link": "https://stackoverflow.com/users/8394326/traor%c3%a9-moussa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 124, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1502458322, "creation_date": 1502444257, "last_edit_date": 1502458322, "question_id": 45631806, "link": "https://stackoverflow.com/questions/45631806/how-to-remove-padding-from-encrypted-data-using-tls-1-2-and-rustls", "title": "How to remove padding from encrypted data using TLS 1.2 and rustls?", "body": "<p>I'm trying to use <a href=\"https://crates.io/crates/rustls\" rel=\"nofollow noreferrer\">rustls</a> to encrypt data that will be sent over TCP. I thought of using TLS 1.2 to secure the connection. The cost of data usage in my use-cases is pretty constraining, so I was wondering if I could remove the padding from the algorithm.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 2848042, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vZNTOPFmQi0/AAAAAAAAAAI/AAAAAAAAApQ/hpoaqppTsKI/photo.jpg?sz=128", "display_name": "Xaldew", "link": "https://stackoverflow.com/users/2848042/xaldew"}, "edited": false, "score": 0, "creation_date": 1502441448, "post_id": 45630370, "comment_id": 78220713, "body": "Hmm, that was pretty much what I didn&#39;t want to hear :(  Looking at the rust repo tickets, I guess this is the same issue as: <a href=\"https://github.com/rust-lang/rust/issues/32094\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/32094</a> right?"}, {"owner": {"reputation": 327, "user_id": 2848042, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vZNTOPFmQi0/AAAAAAAAAAI/AAAAAAAAApQ/hpoaqppTsKI/photo.jpg?sz=128", "display_name": "Xaldew", "link": "https://stackoverflow.com/users/2848042/xaldew"}, "edited": false, "score": 0, "creation_date": 1511433233, "post_id": 45630370, "comment_id": 81861281, "body": "Looking over the <a href=\"https://blog.rust-lang.org/2017/11/22/Rust-1.22.html\" rel=\"nofollow noreferrer\">blog.rust-lang.org/2017/11/22/Rust-1.22.html</a> changes, it seems like this have actually been fixed now. Just a minor thing I noticed when revisiting this: Why do I need to dereference the left hand side <code>x</code>?"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1502439970, "creation_date": 1502439970, "answer_id": 45630370, "question_id": 45630057, "link": "https://stackoverflow.com/questions/45630057/rust-generic-addassign-with-references/45630370#45630370", "title": "Rust generic AddAssign with references", "body": "<p>Just a tiny oversight in your code. Let's look at the trait:</p>\n\n<pre><code>pub trait AddAssign&lt;Rhs = Self&gt; {\n    fn add_assign(&amp;mut self, rhs: Rhs);\n}\n</code></pre>\n\n<p>The receiver of the method is already <code>&amp;mut self</code> and not <code>self</code>. The reason that you had to do the extra work with <code>Add</code> is because it accepts <code>self</code> as receiver. For <code>AddAssign</code> this means: if a type <code>T</code> implements <code>AddAssign</code>, you can call the method <code>add_assign()</code> on a <code>&amp;mut T</code>!</p>\n\n<p>Thus, instead of writing:</p>\n\n<pre><code>where for &lt;'b&gt; &amp;'b mut T: AddAssign&lt;&amp;'b T&gt;,\n</code></pre>\n\n<p>... you would write:</p>\n\n<pre><code>where for &lt;'b&gt; T: AddAssign&lt;&amp;'b T&gt;,\n</code></pre>\n\n<p>(No other line changed so far)</p>\n\n<hr>\n\n<p>However, you notice that the code <a href=\"https://play.rust-lang.org/?gist=ac6f0f9c0ebfe6f02d8942706c4ec100&amp;version=stable\" rel=\"nofollow noreferrer\">still won't compile</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'b&gt; {integer}: std::ops::AddAssign&lt;&amp;'b {integer}&gt;` is not satisfied\n  --&gt; src/main.rs:13:38\n   |\n13 |     println!(\"add_assign_test()={}\", add_assign_test(&amp;mut 2, &amp;2));\n   |                                      ^^^^^^^^^^^^^^^ no implementation for `{integer} += &amp;'b {integer}`\n   |\n   = help: the trait `for&lt;'b&gt; std::ops::AddAssign&lt;&amp;'b {integer}&gt;` is not implemented for `{integer}`\n   = note: required by `add_assign_test`\n</code></pre>\n\n<p>The reason is simple: there is simply no implementation of <code>AddAssign</code> for primitive types which takes an immutable reference as rhs (<a href=\"https://doc.rust-lang.org/stable/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\">Docs</a>). I don't know if this is an oversight -- it could be worth opening an issue on the Rust repo.</p>\n\n<p>To verify the above code works, I write my own type and implemented <code>AddAssign</code> appropriately: <a href=\"https://play.rust-lang.org/?gist=456f5544179da469cf1413680b1b468a&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1502891830, "creation_date": 1502891830, "answer_id": 45715578, "question_id": 45630057, "link": "https://stackoverflow.com/questions/45630057/rust-generic-addassign-with-references/45715578#45715578", "title": "Rust generic AddAssign with references", "body": "<p>Corrected the code snippet based on Lukas' reply:</p>\n\n<pre><code>use std::ops::{Add, AddAssign};\n\nfn add_test&lt;'a, T&gt;(x: &amp;'a T, y: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b&gt; &amp;'b T: Add&lt;Output = T&gt;,\n{\n    x + y\n}\n\nfn add_assign_test&lt;'a, T&gt;(x: &amp;'a mut T, y: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b&gt; T: AddAssign&lt;&amp;'b T&gt;,\n    T: Clone,\n{\n    *x += y;\n    x.clone()\n}\n\nfn main() {\n    println!(\"add_test()={}\", add_test(&amp;1, &amp;2));\n    println!(\"add_assign_test()={}\", add_assign_test(&amp;mut 2, &amp;2));\n}\n</code></pre>\n\n<p>It appears that this is an issue in Rust itself. There is currently a tracker <a href=\"https://github.com/rust-lang/rust/issues/32094\" rel=\"nofollow noreferrer\">for this issue</a>.</p>\n\n<p>Until this is fixed, there's two possible workarounds:</p>\n\n<ol>\n<li><p>Create named-tuples for each primitives and implement <code>OpAssign</code> for those types instead. This does however force you to 'cast' all primitives to your custom type.</p></li>\n<li><p>Duplicate the 'generic' code with specializations for the primitives.</p></li>\n</ol>\n"}], "owner": {"reputation": 327, "user_id": 2848042, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vZNTOPFmQi0/AAAAAAAAAAI/AAAAAAAAApQ/hpoaqppTsKI/photo.jpg?sz=128", "display_name": "Xaldew", "link": "https://stackoverflow.com/users/2848042/xaldew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1408, "favorite_count": 2, "accepted_answer_id": 45630370, "answer_count": 2, "score": 5, "last_activity_date": 1502891830, "creation_date": 1502438833, "last_edit_date": 1502891783, "question_id": 45630057, "link": "https://stackoverflow.com/questions/45630057/rust-generic-addassign-with-references", "title": "Rust generic AddAssign with references", "body": "<p>A while ago I looked into writing a generic iterator for the Fibonacci sequence\nthat could accept both primitive numbers as well as custom types (such as\n<code>bignums</code>). After failing to get a version working for both the primitive types\nand <code>bignums</code>, I stumbled upon this question:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type\">How to write a trait bound for adding two references of a generic type?</a></p>\n\n<p>Which used so called <em>Higher Ranked Trait Bounds</em> to solve the problem with this\nparticular issue.</p>\n\n<p>Now however, I'm trying to use a similar strategy to use the <code>*_assign</code>\noperators instead. In particular, I'm trying to get something similar to this\nworking:</p>\n\n<pre><code>use std::ops::{Add, AddAssign};\n\nfn add_test&lt;'a, T&gt;(x: &amp;'a T, y: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b&gt; &amp;'b T: Add&lt;Output = T&gt;,\n{\n    x + y\n}\n\nfn add_assign_test&lt;'a, T&gt;(x: &amp;'a mut T, y: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b&gt; &amp;'b mut T: AddAssign&lt;&amp;'b T&gt;,\n    T: Clone,\n{\n    x += y;\n    x.clone()\n}\n\nfn main() {\n    println!(\"add_test()={}\", add_test(&amp;1, &amp;2));\n    println!(\"add_assign_test()={}\", add_assign_test(&amp;mut 2, &amp;2));\n}\n</code></pre>\n\n<p><code>add_test()</code> works as expected but I'm unable to get <code>add_assign_test()</code> to work in a similar way. The errors I'm getting suggest that there might not actually exist an implementation for this kind of behaviour on the primitive types:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'b&gt; &amp;'b mut _: std::ops::AddAssign&lt;&amp;'b _&gt;` is not satisfied\n  --&gt; src/main.rs:21:38\n   |\n21 |     println!(\"add_assign_test()={}\", add_assign_test(&amp;mut 2, &amp;2));\n   |                                      ^^^^^^^^^^^^^^^ no implementation for `&amp;'b mut _ += &amp;'b _`\n   |\n   = help: the trait `for&lt;'b&gt; std::ops::AddAssign&lt;&amp;'b _&gt;` is not implemented for `&amp;'b mut _`\n   = note: required by `add_assign_test`\n</code></pre>\n\n<p>I could create a macro that creates implementations for these operators that actually takes references to the primitive types, but that seems a little wasteful. Is there any other way to achieve the same effect?</p>\n"}, {"tags": ["struct", "rust", "tuples", "tuple-struct"], "answers": [{"comments": [{"owner": {"reputation": 2269, "user_id": 1794002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b63211e8bd9155deed45b05dd9d249ce?s=128&d=identicon&r=PG", "display_name": "Anssi", "link": "https://stackoverflow.com/users/1794002/anssi"}, "edited": false, "score": 0, "creation_date": 1617953197, "post_id": 45624862, "comment_id": 118459597, "body": "Rust is hands down best language i&#39;ve ever done."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 15, "last_activity_date": 1502407824, "creation_date": 1502407824, "answer_id": 45624862, "question_id": 45624813, "link": "https://stackoverflow.com/questions/45624813/how-can-i-unpack-a-tuple-struct-like-i-would-a-classic-tuple/45624862#45624862", "title": "How can I unpack a tuple struct like I would a classic tuple?", "body": "<p>It's simple: <strong>just add the type name!</strong></p>\n\n<pre><code>struct Matrix(f32, f32, f32, f32);\n\nlet mat = Matrix(1.1, 1.2, 2.1, 2.2);\nlet Matrix(one, two, three, four) = mat;\n//  ^^^^^^\n</code></pre>\n\n<p>This works as expected.</p>\n\n<hr>\n\n<p>It works exactly the same with normal structs. Here, you can bind either to the field name or a custom name (like <code>height</code>):</p>\n\n<pre><code>struct Point {\n    x: f64,\n    y: f64,\n}\n\nlet p = Point { x: 0.0, y: 5.0 };\nlet Point { x, y: height } = p;\n</code></pre>\n"}], "owner": {"reputation": 379, "user_id": 5903025, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AH2NX.jpg?s=128&g=1", "display_name": "eisterman", "link": "https://stackoverflow.com/users/5903025/eisterman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1378, "favorite_count": 1, "accepted_answer_id": 45624862, "answer_count": 1, "score": 15, "last_activity_date": 1539211252, "creation_date": 1502407369, "last_edit_date": 1539211252, "question_id": 45624813, "link": "https://stackoverflow.com/questions/45624813/how-can-i-unpack-a-tuple-struct-like-i-would-a-classic-tuple", "title": "How can I unpack a tuple struct like I would a classic tuple?", "body": "<p>I can unpack a classic tuple like this:</p>\n\n<pre><code>let pair = (1, true);\nlet (one, two) = pair;\n</code></pre>\n\n<p>If I have a tuple struct such as <code>struct Matrix(f32, f32, f32, f32)</code> and I try to unpack it, I get an error about \"unexpected type\":</p>\n\n<pre><code>struct Matrix(f32, f32, f32, f32);\nlet mat = Matrix(1.1, 1.2, 2.1, 2.2);\nlet (one, two, three, four) = mat;\n</code></pre>\n\n<p>Results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:47:9\n   |\n47 |     let (one, two, three, four) = mat;\n   |\n   = note: expected type `Matrix`\n              found type `(_, _, _, _)`\n</code></pre>\n\n<p>How can I unpack a tuple struct? Do I need to convert it explicitly to a tuple type? Or do I need to hardcode it?</p>\n"}, {"tags": ["rust", "rust-piston"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1502404623, "creation_date": 1502404623, "answer_id": 45624451, "question_id": 45624020, "link": "https://stackoverflow.com/questions/45624020/type-mismatch-when-calling-spritescenedraw/45624451#45624451", "title": "Type mismatch when calling sprite::Scene::draw", "body": "<p>The definition of <code>draw</code> is:</p>\n\n<pre><code>impl&lt;I: ImageSize&gt; Scene&lt;I&gt; {\n    fn draw&lt;B: Graphics&lt;Texture = I&gt;&gt;(&amp;self, t: Matrix2d, b: &amp;mut B)\n}\n</code></pre>\n\n<p>In words, this roughly corresponds to:</p>\n\n<p>When <code>Scene</code> is parameterized with a type <code>I</code> that implements <code>ImageSize</code>, the function <code>draw</code> will be available. <code>draw</code> is parameterized with a type <code>B</code> which must implement the trait <code>Graphics</code> with the associated type <code>Texture</code> set to the <em>same</em> type as <code>I</code>. The <code>draw</code> function is a method on a reference to a <code>Scene</code> and takes two more arguments: <code>t</code>, a <code>Matrix2d</code> and <code>b</code>, a mutable reference to whatever concrete type <code>B</code> is.</p>\n\n<p>To be able to call <code>draw</code>, your function needs to have the same restrictions, but you are not restricting <code>S</code> to be the same as <code>Graphics::Texture</code>. Doing so allows the code to compile:</p>\n\n<pre><code>extern crate sprite;\nextern crate graphics;\n\nuse graphics::{Graphics, ImageSize, Context};\nuse sprite::Scene;\n\nstruct X;\nimpl X {\n    fn draw&lt;G&gt;(&amp;self, c: &amp;Context, g: &amp;mut G, scene: &amp;mut Scene&lt;G::Texture&gt;)\n    where\n        G: Graphics,\n    {\n        scene.draw(c.transform, g);\n    }\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 96, "user_id": 5840759, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0032a8882be4c00036c87369a701ab9a?s=128&d=identicon&r=PG&f=1", "display_name": "P bertJoha", "link": "https://stackoverflow.com/users/5840759/p-bertjoha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 1, "accepted_answer_id": 45624451, "answer_count": 1, "score": 1, "last_activity_date": 1502404623, "creation_date": 1502402080, "last_edit_date": 1502403918, "question_id": 45624020, "link": "https://stackoverflow.com/questions/45624020/type-mismatch-when-calling-spritescenedraw", "title": "Type mismatch when calling sprite::Scene::draw", "body": "<p>I am working on a personal project using Piston and Sprite. The <a href=\"https://github.com/PistonDevelopers/piston-examples/blob/master/src/sprite.rs\" rel=\"nofollow noreferrer\">example code</a> calls this method:</p>\n\n<pre><code>scene.draw(c.transform, g);\n</code></pre>\n\n<p>I am trying to call a method to draw everything.\nI first tried:</p>\n\n<pre><code>draw&lt;G: Graphics&gt;(&amp;self, c: &amp;Context, g: &amp;mut G, scene: &amp;mut Scene)\n</code></pre>\n\n<p>Then the compiler tells me I need to give a type parameter to the <code>Scene</code> so I tried this: </p>\n\n<pre><code>draw&lt;G: Graphics, S&gt;(&amp;self, c: &amp;Context, g: &amp;mut G, scene: &amp;mut Scene&lt;S&gt;)\n</code></pre>\n\n<p>Then the compiler tells me that the type needs to implements trait <code>ImageSize</code> so I tried this :</p>\n\n<pre><code>draw&lt;G: Graphics, S: ImageSize&gt;(&amp;self, c: &amp;Context, g: &amp;mut G, scene: &amp;mut Scene&lt;S&gt;)\n</code></pre>\n\n<p>Then I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;G as graphics::Graphics&gt;::Texture == S`\n  --&gt; src/game.rs:38:15\n   |\n38 |         scene.draw(c.transform, g);\n   |               ^^^^ expected associated type, found type parameter\n   |\n   = note: expected type `&lt;G as graphics::Graphics&gt;::Texture`\n          found type `S`\n</code></pre>\n\n<p>I don't understand what the compiler is trying to say here. The full type of <code>Scene</code> is <code>sprite::Scene&lt;piston_window::Texture&lt;gfx_device_gl::Resources&gt;&gt;</code> \nbut I don't want to write that in the method's signature.</p>\n\n<p>I have two questions then:</p>\n\n<ol>\n<li>What is the compiler trying to tell me?</li>\n<li>How can I pass the scene to the method?</li>\n</ol>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1502401641, "post_id": 45623879, "comment_id": 78207486, "body": "The compiler&#39;s message does not seem to match the code above. Please make an MCVE, preferably with a link to the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1502402127, "post_id": 45623879, "comment_id": 78207673, "body": "@E_net4 that caught me too. OP split the code into two blocks, but it was the combination of the two that had the error."}], "answers": [{"comments": [{"owner": {"reputation": 14299, "user_id": 791713, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1d51e358999bd31439d3810486942e9b?s=128&d=identicon&r=PG", "display_name": "Niklas R", "link": "https://stackoverflow.com/users/791713/niklas-r"}, "edited": false, "score": 0, "creation_date": 1502417276, "post_id": 45624170, "comment_id": 78211406, "body": "Thank you for this explanation. I don&#39;t think that I can use <code>enumerate()</code> here, using the <code>Cell</code> works perfectly fine though! :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1502403409, "last_edit_date": 1502403409, "creation_date": 1502403040, "answer_id": 45624170, "question_id": 45623879, "link": "https://stackoverflow.com/questions/45623879/cannot-assign-to-a-variable-used-in-a-closure-because-it-is-borrowed/45624170#45624170", "title": "Cannot assign to a variable used in a closure because it is borrowed", "body": "<p>As the error message says, you can't change the value because it's borrowed. It's the same as if you had said:</p>\n\n<pre><code>let mut loop_index = 0;\nlet foo = &amp;loop_index;\nloop_index += 1;\n</code></pre>\n\n<p>You aren't allowed to <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-02-references-and-borrowing.html\" rel=\"noreferrer\">modify a value while there is an outstanding immutable borrow</a>. This is a fundamental concept in Rust and underpins the safety it provides.</p>\n\n<p>Why does the closure have a reference to the variable? That's the <em>entire point</em> of closures \u2014 to <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch13-01-closures.html#closures-can-capture-their-environment\" rel=\"noreferrer\">capture the environment</a>. Closures <em>infer</em> how to capture the variables based on the operations taking place inside, and in this case a reference is sufficient.</p>\n\n<p>This is normally what you want because a reference is easy to pass around. In <em>this</em> case, you have numbers so there's no reason to prefer the reference. We can use the <code>move</code> keyword to move the number <em>into</em> the closure. Since numbers implement <code>Copy</code>, this will make a copy. Then the closure is completely separate from the existing value:</p>\n\n<pre><code>let mut loop_index = 0;\n\nlet get_src_index = move || loop_index % 2; // No need for `return`\nlet get_dst_index = move || (loop_index + 1) % 2;\n\nloop_index += 1;\n</code></pre>\n\n<p>However, I don't think that these particular closures really buy you anything. Integer operations are generally cheap and conditionals are often less cheap, so doing an extra computation might be better.</p>\n\n<hr>\n\n<p>If you needed the ability to modify the <code>loop_index</code> and have that change reflected inside the closures, you could use a <code>Cell</code>:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let mut loop_index = Cell::new(0);\n\n    let get_src_index = || loop_index.get() % 2;\n    let get_dst_index = || (loop_index.get() + 1) % 2;\n\n    loop_index.set(loop_index.get() + 1);\n}\n</code></pre>\n\n<hr>\n\n<p>Even <em>better</em>, in many cases you don't need to maintain your own loop index anyway. <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"noreferrer\"><code>Iterator::enumerate</code></a> takes care of it for you.</p>\n"}], "owner": {"reputation": 14299, "user_id": 791713, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/1d51e358999bd31439d3810486942e9b?s=128&d=identicon&r=PG", "display_name": "Niklas R", "link": "https://stackoverflow.com/users/791713/niklas-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 761, "favorite_count": 1, "accepted_answer_id": 45624170, "answer_count": 1, "score": 3, "last_activity_date": 1502403409, "creation_date": 1502401377, "last_edit_date": 1502403097, "question_id": 45623879, "link": "https://stackoverflow.com/questions/45623879/cannot-assign-to-a-variable-used-in-a-closure-because-it-is-borrowed", "title": "Cannot assign to a variable used in a closure because it is borrowed", "body": "<p>I'm trying to make some sections of my code easier to read by using small helper closures.</p>\n\n<pre><code>fn main() {\n    let mut loop_index = 0;\n\n    let get_src_index = || return loop_index % 2;\n    let get_dst_index = || return (loop_index + 1) % 2;\n\n    loop_index += 1;\n}\n</code></pre>\n\n<p>There's a few more closures that make use of <code>get_src_index()</code> and <code>get_dst_index()</code>, but they are not important to the problem. The problem is that I can no longer modify <code>loop_index</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `loop_index` because it is borrowed\n --&gt; src/main.rs:6:5\n  |\n4 |     let get_src_index = || return loop_index % 2;\n  |                         -- borrow of `loop_index` occurs here\n5 |     let get_dst_index = || return (loop_index + 1) % 2;\n6 |     loop_index += 1;\n  |     ^^^^^^^^^^^^^^^ assignment to borrowed `loop_index` occurs here\n</code></pre>\n\n<p>I don't quite understand why Rust doesn't allow incrementing the <code>loop_index</code> variable. Is there a more \"Rusty\" way of doing this?</p>\n"}, {"tags": ["parallel-processing", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1502393488, "creation_date": 1502393488, "answer_id": 45622117, "question_id": 45621834, "link": "https://stackoverflow.com/questions/45621834/what-should-the-type-signature-be-for-a-function-that-takes-a-function-and-retur/45622117#45622117", "title": "What should the type signature be for a function that takes a function and returns another function that returns a handle to a thread?", "body": "<p>Let's step through it piece by piece:</p>\n\n<blockquote>\n  <p>a function <code>parallelize</code></p>\n</blockquote>\n\n<pre><code>fn parallelize() {\n    unimplemented!()\n}\n</code></pre>\n\n<p>Yes, that's a function alright.</p>\n\n<blockquote>\n  <p>argument a function B</p>\n</blockquote>\n\n<p>I assume you'd like the function to be able to return something, so I'll use the generic type <code>R</code>.</p>\n\n<pre><code>fn parallelize&lt;B, R&gt;(function: B)\nwhere\n    B: FnOnce() -&gt; R,\n{\n    unimplemented!()\n}\n</code></pre>\n\n<blockquote>\n  <p>returns a function C</p>\n</blockquote>\n\n<p>Uh oh. You <a href=\"https://stackoverflow.com/q/25445761/155423\">can't do this cleanly in Rust yet</a>. That means we will return a <em>boxed trait object</em> instead</p>\n\n<pre><code>fn parallelize&lt;B, R&gt;(function: B) -&gt; Box&lt;FnOnce()&gt;\nwhere\n    B: FnOnce() -&gt; R,\n{\n    unimplemented!()\n}\n</code></pre>\n\n<blockquote>\n  <p>where C returns a handle to a thread which is running B</p>\n</blockquote>\n\n<pre><code>use std::thread::JoinHandle;\n\nfn parallelize&lt;B, R&gt;(function: B) -&gt; Box&lt;FnOnce() -&gt; JoinHandle&lt;R&gt;&gt;\nwhere\n    B: FnOnce() -&gt; R,\n{\n    unimplemented!()\n}\n</code></pre>\n\n<p>And there's your signature. All done here!</p>\n\n<p>.....</p>\n\n<p>Of course, there's more to do. For example, you didn't state when the thread should actually <em>start</em>. That means I get to pick, and I pick the easiest way \u2014 the thread is started when the caller asks for the handle.</p>\n\n<pre><code>use std::thread::{self, JoinHandle};\n\nfn parallelize&lt;B, R&gt;(function: B) -&gt; Box&lt;FnOnce() -&gt; JoinHandle&lt;R&gt;&gt;\nwhere\n    B: Send + FnOnce() -&gt; R + 'static,\n    R: Send + 'static,\n{\n    Box::new(|| thread::spawn(function))\n}\n</code></pre>\n\n<p>I guess you could start it immediately, as well:</p>\n\n<pre><code>use std::thread::{self, JoinHandle};\n\nfn parallelize&lt;B, R&gt;(function: B) -&gt; Box&lt;FnOnce() -&gt; JoinHandle&lt;R&gt;&gt;\nwhere\n    B: Send + FnOnce() -&gt; R + 'static,\n    R: Send + 'static,\n{\n    let handle = thread::spawn(function);\n    Box::new(|| handle)\n}\n</code></pre>\n\n<p>I don't know <em>why</em> you'd do the second one; in that case you might as well just return the handle directly. And if you do <strong>that</strong>, you might as well just call <code>thread::spawn</code> directly.</p>\n\n<p>Oh, I suppose I couldn't slip those extra trait bounds past you, could I? When calling <code>thread::spawn</code>, you have to ensure that nothing you pass it will stop being valid before the thread exits (thus <code>'static</code>) and is safe to transfer between threads (thus <code>Send</code>).</p>\n\n<blockquote>\n  <p>The higher level goal is to implement a parallel map function on iterators</p>\n</blockquote>\n\n<p>That exists and is called <a href=\"https://crates.io/crates/rayon\" rel=\"noreferrer\">Rayon</a>.</p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34439977/155423\">Lifetime of variables passed to a new thread</a></li>\n<li><a href=\"https://stackoverflow.com/q/30562443/155423\">How do I use static lifetimes with threads?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33938547/155423\">Cannot call a function in a spawned thread because it &quot;does not fulfill the required lifetime&quot;</a></li>\n<li><a href=\"https://stackoverflow.com/q/27754877/155423\">Lifetime woes when using threads</a></li>\n<li><a href=\"https://stackoverflow.com/q/32981382/155423\">Thread references require static lifetime?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33442053/155423\">&quot;the type does not fulfill the required lifetime&quot; when using a method in a thread</a></li>\n</ul>\n"}], "owner": {"reputation": 337, "user_id": 5162056, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh3.googleusercontent.com/-C5J6CgSAg0k/AAAAAAAAAAI/AAAAAAAAAio/QDSPhsFDaCU/photo.jpg?sz=128", "display_name": "Sam Schick", "link": "https://stackoverflow.com/users/5162056/sam-schick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 1, "accepted_answer_id": 45622117, "answer_count": 1, "score": 1, "last_activity_date": 1502393488, "creation_date": 1502392468, "last_edit_date": 1502392594, "question_id": 45621834, "link": "https://stackoverflow.com/questions/45621834/what-should-the-type-signature-be-for-a-function-that-takes-a-function-and-retur", "title": "What should the type signature be for a function that takes a function and returns another function that returns a handle to a thread?", "body": "<p>I'm trying to write a function <code>parallelize</code> that takes as an argument a function <code>B</code> and returns a function <code>C</code>, where <code>C</code> returns a handle to a thread which is running <code>B</code>. I understand this may be clunky or ridiculous; it's mostly as a learning project. The higher level goal is to implement a parallel map function on iterators, where each element of the list will be mapped in a different thread (or potentially through a thread pool eventually). I have quickly realized that I'm in way over my head. Given what I have described, what should the type of <code>parallelize</code> be?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1502387000, "post_id": 45620072, "comment_id": 78200039, "body": "Why should this not be a duplicate of <a href=\"https://stackoverflow.com/q/28258548/155423\">stackoverflow.com/q/28258548/155423</a> ?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1502387483, "post_id": 45620072, "comment_id": 78200344, "body": "Ownership matters a lot in Rust. Do you want <code>get_children</code> to return <i>copies</i> of the scenes, or <i>references</i> to the scenes? Otherwise you&#39;re transferring ownership, which causes the issue you are seeing. This is explained in the question linked above."}, {"owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "edited": false, "score": 0, "creation_date": 1502387630, "post_id": 45620072, "comment_id": 78200440, "body": "I want a reference to the scenes in a mutable way, so I can loop over it and call the scene methods (which may mutate data from the struct the scene implements, like in this case, update method will set <code>running</code> to false if running."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1502387994, "post_id": 45620072, "comment_id": 78200641, "body": "<code>Vec&lt;Box&lt;Scene&gt;&gt;</code> explicitly says &quot;a vector that owns a bunch of <code>Scene</code> objects. If you want references, your type should include references, like <code>&amp;mut [Box&lt;Scene&gt;]</code> or something. This was already explained in <a href=\"https://stackoverflow.com/questions/40075031/cannot-move-out-of-borrowed-content-in-rust\" title=\"cannot move out of borrowed content in rust\">stackoverflow.com/questions/40075031/&hellip;</a>"}, {"owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "edited": false, "score": 0, "creation_date": 1502388024, "post_id": 45620072, "comment_id": 78200659, "body": "cool story bro. Shits fixed"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1502388303, "post_id": 45620072, "comment_id": 78200811, "body": "Dang dude, if you want help getting frustrated with people isn&#39;t the way to do it..."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1502412550, "post_id": 45620072, "comment_id": 78210407, "body": "As a general observation, looking at your previous questions, can I suggest in the nicest way possible that you might benefit from fiddling with simpler Rust programs prior to jumping into game development with Rust? Rust is a different beast compared to most and as you&#39;re now finding, things you expect to work in another language you&#39;re more comfortable in don&#39;t work in Rust and poking and prodding at it constant gets you nowhere. Its clearly making you frustrated (which, it really shouldn&#39;t). A more thorough understanding of the language itself would benefit here and stop the frustrations."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1502412647, "post_id": 45620072, "comment_id": 78210430, "body": "When I say &quot;a more thorough understanding of the language&quot; I don&#39;t mean spending 2 hours reading the documentation before jumping back into Rust game dev... I mean reading the documentation, trying a little snippet to get an understanding, changing it, breaking it, etc. Smaller snippets help in understanding the issues you&#39;re facing and once you can solve the issues in smaller samples the bigger ones will begin to make more sense. Just trying to give some advice, anyway. Do with it what you will. Good luck!"}], "answers": [{"comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 4, "creation_date": 1502388222, "post_id": 45620262, "comment_id": 78200766, "body": "Why is this accepted if it directly contradicts your comment saying <code>I want a reference to the scenes in a mutable way</code>?"}], "tags": [], "owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "is_accepted": true, "score": 1, "last_activity_date": 1502388055, "last_edit_date": 1502388055, "creation_date": 1502386873, "answer_id": 45620262, "question_id": 45620072, "link": "https://stackoverflow.com/questions/45620072/why-do-i-get-a-borrowed-content-error-when-trying-to-return-a-vec-from-a-metho/45620262#45620262", "title": "Why do I get a &quot;borrowed content&quot; error when trying to return a Vec from a method that takes &amp;self?", "body": "<p>Your <code>fn get_children(&amp;self)</code> is equivalent to </p>\n\n<pre><code>fn get_children(&amp;self) -&gt; Vec&lt;Box&lt;Scene&gt;&gt; {\n    return self.scenes;\n}\n</code></pre>\n\n<p>You call the function like</p>\n\n<pre><code>let children = scene_manager.get_children();\n</code></pre>\n\n<p>This effectively moves the <code>self.scenes</code> variable into <code>children</code>;</p>\n\n<p>You called the function <code>get_children</code> with argument <code>(&amp;self)</code>, so the variable <code>scene_manager</code> is borrowed into the function,  and later you are trying to return (or move) a value from inside the struct, which is what the compiler complains about.</p>\n"}], "owner": {"reputation": 9945, "user_id": 1270259, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f8493a9385dae9f438379050d76ac2bf?s=128&d=identicon&r=PG", "display_name": "TheWebs", "link": "https://stackoverflow.com/users/1270259/thewebs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 1, "closed_date": 1502388515, "accepted_answer_id": 45620262, "answer_count": 1, "score": 0, "last_activity_date": 1502388055, "creation_date": 1502386210, "last_edit_date": 1502387287, "question_id": 45620072, "link": "https://stackoverflow.com/questions/45620072/why-do-i-get-a-borrowed-content-error-when-trying-to-return-a-vec-from-a-metho", "closed_reason": "Duplicate", "title": "Why do I get a &quot;borrowed content&quot; error when trying to return a Vec from a method that takes &amp;self?", "body": "<p>Yes I have <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">read the docs</a>, <strong>three times</strong>.</p>\n\n<p>I have looked at: <a href=\"https://stackoverflow.com/questions/40075031/cannot-move-out-of-borrowed-content-in-rust\">Cannot move out of borrowed content in Rust</a> and <a href=\"https://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">Cannot move out of borrowed content</a>. Neither of these answer my question or help me get a better understanding of what's going on here.</p>\n\n<p>Consider the following code snippet:</p>\n\n<pre><code>pub trait Scene {\n    fn on_start(&amp;mut self) {}\n    fn update(&amp;mut self) {}\n    fn stop(&amp;mut self) {}\n    fn is_active(&amp;self) -&gt; bool { return false; }\n}\n\npub struct SceneManager {\n    scenes: Vec&lt;Box&lt;Scene&gt;&gt;\n}\n\nimpl SceneManager {\n    fn new&lt;T&gt;(mut scene: T) -&gt; SceneManager where T: Scene + 'static {\n        scene.on_start();\n\n        SceneManager {\n            scenes: vec![Box::new(scene)]\n        }\n    }\n\n    fn update_children(&amp;mut self) {\n        for mut scene in &amp;mut self.scenes {\n            scene.update();\n        }\n    }\n    ...\n\n    fn get_children(&amp;self) -&gt; Vec&lt;Box&lt;Scene&gt;&gt; {\n        return self.scenes\n    }\n\n    ...\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    struct Sample {\n        running: bool\n    }\n\n    impl Scene for Sample {\n        fn update(&amp;mut self) {\n            if self.running {\n                self.stop()\n            }\n        }\n\n        fn stop(&amp;mut self) {\n            self.running = false;\n        }\n\n        fn is_active(&amp;self) -&gt; bool { self.running }\n    }\n\n    ...\n\n    #[test]\n    fn test_no_scene_is_running() {\n        let mut scene_manager = SceneManager::new(Sample{running: true});\n        scene_manager.update_children();\n        let children = scene_manager.get_children();\n        for mut scenes in children {\n            assert!(!scene.is_active());\n        }\n    }\n}\n</code></pre>\n\n<p>Issue:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:12:9\n   |\n12 |         self.scenes\n   |         ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>We have seen it a million times. Most of the answers say to use <code>&amp;self</code> instead of <code>self</code>. Well that's what I am doing here. even <code>&amp;mut self</code> doesn't work, although I am not mutating anything here so no need for that.</p>\n\n<p>Please enlighten me and point me to docs that explain how I cannot do this.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1502383136, "post_id": 45618552, "comment_id": 78197713, "body": "There is a <code>fmt-rfcs</code> repo for discussing style related questions. In <a href=\"https://github.com/rust-lang-nursery/fmt-rfcs/issues/24\" rel=\"nofollow noreferrer\">this issue</a> they are discussing <code>use</code> imports -- without a clear consent so far. They also don&#39;t talk a lot about module-level imports vs function-level imports. In my experience, nearly all things are imported at module level, especially those used in multiple functions. Personally, I think I only use function-level imports when I have a very specialized import or a glob-import which I want to scope. But I guess a rule should be established in the linked issue."}, {"owner": {"reputation": 3649, "user_id": 1656568, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/sY2E9.jpg?s=128&g=1", "display_name": "achedeuzot", "link": "https://stackoverflow.com/users/1656568/achedeuzot"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1502383811, "post_id": 45618552, "comment_id": 78198093, "body": "Thanks for pointing at the issue discussion, it is very interesting !"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1502384321, "post_id": 45619314, "comment_id": 78198387, "body": "+1 for the enum case; I use it a lot to save typing in <code>match</code> (and line length), but it would really pollute the top-level module to use them there."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1502387842, "last_edit_date": 1502387842, "creation_date": 1502383526, "answer_id": 45619314, "question_id": 45618552, "link": "https://stackoverflow.com/questions/45618552/where-is-the-recommended-place-to-put-use-declarations-in-rust/45619314#45619314", "title": "Where is the recommended place to put `use` declarations in Rust?", "body": "<p>TL;DR: Like almost every other piece of software, it depends on what you are doing. The common style that I have observed (and prefer myself) is to put them at the top of the file and only moving them to narrower scope as needed.</p>\n\n<hr>\n\n<p>Generally, I recommend starting by placing <code>use</code> statements directly after any <code>extern crate</code> and <code>mod</code> statements, separated by a blank line:</p>\n\n<pre><code>extern crate foo;\nextern crate bar;\n\nmod interesting;\n\nuse std::collections::HashMap;\nuse foo::Foo;\nuse bar::{Quux, moo};    \nuse interesting::something;    \n\n// structs, functions, etc.\n</code></pre>\n\n<p>I base this default on the fact that \u2014 most times \u2014 an import is used in multiple top-level items. Thus, it makes sense to only import it once.</p>\n\n<p>There are times where <a href=\"https://stackoverflow.com/q/44953197/155423\">imported traits have conflicting methods</a>, and in those cases I scope the import to where it's needed. There are also cases where I'm heavily dealing with a single enum and wish to glob-import it to avoid re-stating the enum's name:</p>\n\n<pre><code>fn foo(e: MyEnum) {\n    use MyEnum::*;\n\n    match e {\n        One =&gt; 1,\n        Two =&gt; 2,\n    }\n}\n</code></pre>\n\n<p>In certain cases, conflicting <code>use</code> statements indicate that you are attempting too much in a single file and it should be split into separate files and then the <code>use</code> statements are no longer ambiguous.</p>\n"}], "owner": {"reputation": 3649, "user_id": 1656568, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/sY2E9.jpg?s=128&g=1", "display_name": "achedeuzot", "link": "https://stackoverflow.com/users/1656568/achedeuzot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 718, "favorite_count": 1, "accepted_answer_id": 45619314, "answer_count": 1, "score": 6, "last_activity_date": 1502387842, "creation_date": 1502381061, "last_edit_date": 1502383553, "question_id": 45618552, "link": "https://stackoverflow.com/questions/45618552/where-is-the-recommended-place-to-put-use-declarations-in-rust", "title": "Where is the recommended place to put `use` declarations in Rust?", "body": "<p>Where is the recommended place to put <code>use</code> declarations? I couldn't find any decisive answer in the book, in FAQs, mailing lists or online forums. I'm beginning a new project in Rust and I'd prefer to get the right approach right away.</p>\n\n<p>Is one of the two below approaches recommended? Is it only for \"aliasing\" stuff or does it do more, like initialize a module if it hasn't been used before?</p>\n\n<pre><code>use std::io;\nuse std::io::Write;\n\nfn some_func() -&gt; () {\n    [...] // We assume we need std::io here\n}\n\nfn some_other_func() -&gt; () {\n    [...] // We assume we need std::io and std::io::Write here\n}\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>fn some_func() -&gt; () {\n    use std::io;\n    [...] // We assume we need std::io here\n}\n\nfn some_other_func() -&gt; () {\n    use std::io;\n    use std::io::Write;\n    [...] // We assume we need std::io and std::io::Write here\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502377840, "post_id": 45616627, "comment_id": 78194082, "body": "@Shepmaster I update my question, I do not like gap between what I want <code>ty.node&lt;TyKind::Path&gt;.1.segments.last().identifiers</code> and how much code I need to write to get what I want."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502378068, "post_id": 45616627, "comment_id": 78194262, "body": "<i>without introducing analogs of Option::map/unwrap_else</i> \u2014 why? Those functions exist <i>because</i> they provide value."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502378840, "post_id": 45616627, "comment_id": 78194851, "body": "In a similar vein, what other restrictions are you imposing on any potential answers? Are answerers prohibited from creating <i>any</i> new functions?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1502378969, "post_id": 45616627, "comment_id": 78194957, "body": "<i>between what I want</i> \u2014 but what you want <i>underspecifies</i> what to do in the error cases. How would such a syntax know what should be done when (1) the enum <b>isn&#39;t</b> one of those types (2) when there are no segments so <code>last</code> returns <code>None</code> (3) the fact that you want to return <code>None</code> in some cases and a default value in others?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502379054, "post_id": 45616627, "comment_id": 78195016, "body": "For example, I&#39;d probably write something <a href=\"https://play.integer32.com/?gist=f27912ede77033ec2fe2b8ec2a813973&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a>, but I can&#39;t tell if that meets whatever arbitrary restrictions have yet to be said."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502379504, "post_id": 45616627, "comment_id": 78195369, "body": "@Shepmaster I update my question. I want to solve only one particular case. <code>Option::map</code> is convenient because of <code>Option::map</code> + many places where possible to use <code>Option::map</code> instead of <code>if let Some(x)</code> good in compare with many <code>if let Some(</code>, but if you use <code>if let Some(x)</code> only once then better write just <code>if let Some(</code>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1502426926, "post_id": 45616627, "comment_id": 78213554, "body": "@user1244932, you probably should propose RFC for expanding Rust in this way."}], "answers": [{"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1502384234, "post_id": 45618491, "comment_id": 78198339, "body": "Lenses are used in Haskell to be able modify a part of a structure. In Rust you can just use (possibly mutable) references to focus on a part of a structure. I&#39;m not sure how you think references would work in Rust or how they would help OP. In any case, this would be better as a comment since you didn&#39;t provide a solution."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user933161"}, "is_accepted": false, "score": 0, "last_activity_date": 1502380890, "creation_date": 1502380890, "answer_id": 45618491, "question_id": 45616627, "link": "https://stackoverflow.com/questions/45616627/is-there-a-shorter-way-than-a-match-or-if-let-to-get-data-through-many-nested-le/45618491#45618491", "title": "Is there a shorter way than a match or if let to get data through many nested levels without increasing the total amount of code?", "body": "<p>I guess what you want is called Lenses. Not sure about Rust, but here is about Haskell <a href=\"https://en.m.wikibooks.org/wiki/Haskell/Lenses_and_functional_references\" rel=\"nofollow noreferrer\">https://en.m.wikibooks.org/wiki/Haskell/Lenses_and_functional_references</a></p>\n\n<p>It might be possible to implement that in Rust, if somebody haven't done yet.</p>\n"}, {"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1502442631, "post_id": 45627684, "comment_id": 78221528, "body": "Thanks, why <code>MyOption</code>, no <code>TryTrait</code> for <code>std Option</code>?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1502445465, "post_id": 45627684, "comment_id": 78223446, "body": "@user1244932, orphan rules. You can&#39;t implement trait from another crate for type from another crate."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 2, "last_activity_date": 1502429881, "creation_date": 1502429881, "answer_id": 45627684, "question_id": 45616627, "link": "https://stackoverflow.com/questions/45616627/is-there-a-shorter-way-than-a-match-or-if-let-to-get-data-through-many-nested-le/45627684#45627684", "title": "Is there a shorter way than a match or if let to get data through many nested levels without increasing the total amount of code?", "body": "<p>No.</p>\n\n<p>The closest you can get, using nightly features and helper code, is probably this</p>\n\n<pre><code>fn f(ty: &amp;Ty) -&gt; MyOption&lt;(String, Vec&lt;Box&lt;Ty&gt;&gt;)&gt; {\n    let last = ty.node.path()?.segments.my_last()?;\n    Just((\n        last.identifier.clone(),\n        last.ab_parameters()\n            .map(|v| v.types.clone())\n            .unwrap_or_else(|| vec![]),\n    ))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bc6b2b5fbb78bc5d0192b7eac1968efe&amp;version=nightly\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 1, "accepted_answer_id": 45627684, "answer_count": 2, "score": 2, "last_activity_date": 1502429881, "creation_date": 1502375562, "last_edit_date": 1502380371, "question_id": 45616627, "link": "https://stackoverflow.com/questions/45616627/is-there-a-shorter-way-than-a-match-or-if-let-to-get-data-through-many-nested-le", "title": "Is there a shorter way than a match or if let to get data through many nested levels without increasing the total amount of code?", "body": "<p>I work with a bunch of structs / enums included in each other. I need to get <code>ty.node&lt;TyKind::Path&gt;.1.segments.last().identifiers</code> and <code>ty.node&lt;TyKind::Path&gt;.1.segments.last().parameters&lt;AngleBracketed::AngleBracketed&gt;.types</code>.</p>\n\n<p>Is there a simpler way to get these two values then my implementation of <code>f</code>? My ideal syntax would be:</p>\n\n<pre><code>ty.node&lt;TyKind::Path&gt;?.1.segments.last().identifiers\n// and \nty.node&lt;TyKind::Path&gt;?.1.segments.last().parameters&lt;AngleBracketed::AngleBracketed&gt;?.types\n</code></pre>\n\n<p>It that's impossible, maybe there is a way to reduce the number of <code>if let</code>? I want to solve only this particular case, so simplification should be possible compared to <code>f</code>. If an analog of <code>Option::map</code> / <code>Option::unwrap_or_else</code> were introduced, then the sum of its code + the code in <code>f</code> should be less then my original <code>f</code>.</p>\n\n<pre><code>#[derive(Clone)]\nstruct Ty {\n    node: TyKind,\n}\n\n#[derive(Clone)]\nenum TyKind {\n    Path(Option&lt;i32&gt;, Path),\n}\n\n#[derive(Clone)]\nstruct Path {\n    segments: Vec&lt;PathSegment&gt;,\n}\n\n#[derive(Clone)]\nstruct PathSegment {\n    identifier: String,\n    parameters: Option&lt;Box&lt;PathParameters&gt;&gt;,\n}\n\n#[derive(Clone)]\nenum PathParameters {\n    AngleBracketed(AngleBracketedParameterData),\n}\n\n#[derive(Clone)]\nstruct AngleBracketedParameterData {\n    types: Vec&lt;Box&lt;Ty&gt;&gt;,\n}\n\n/// If Tylnode == Path -&gt;  return last path segment + types\nfn f(ty: &amp;Ty) -&gt; Option&lt;(String, Vec&lt;Box&lt;Ty&gt;&gt;)&gt; {\n    match ty.node {\n        TyKind::Path(_, ref path) =&gt; if let Some(seg) = path.segments.iter().last() {\n            let ident = seg.identifier.clone();\n            println!(\"next_ty: seg.id {:?}\", seg.identifier);\n            match seg.parameters.as_ref() {\n                Some(params) =&gt; match **params {\n                    PathParameters::AngleBracketed(ref params) =&gt; {\n                        Some((ident, params.types.clone()))\n                    }\n                    _ =&gt; Some((ident, vec![])),\n                },\n                None =&gt; Some((ident, vec![])),\n            }\n        } else {\n            None\n        },\n        _ =&gt; None,\n    }\n}\n</code></pre>\n\n<p>To simplify the question, I have removed unrelated enum variants and struct fields.</p>\n"}, {"tags": ["rust", "llvm-codegen"], "comments": [{"owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "edited": false, "score": 0, "creation_date": 1502354928, "post_id": 45608392, "comment_id": 78176136, "body": "and see: <a href=\"https://clang.llvm.org/docs/CommandGuide/clang.html\" rel=\"nofollow noreferrer\">clang.llvm.org/docs/CommandGuide/clang.html</a>    -Os Like -O2 with extra optimizations to reduce code size.  -Oz Like -Os (and thus -O2), but reduces code size further."}], "answers": [{"comments": [{"owner": {"reputation": 188404, "user_id": 541686, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG", "display_name": "user541686", "link": "https://stackoverflow.com/users/541686/user541686"}, "edited": false, "score": 0, "creation_date": 1502364994, "post_id": 45608730, "comment_id": 78183357, "body": "I&#39;m guessing &quot;z&quot; means strive for getting as close to &quot;zero&quot; size as possible?"}, {"owner": {"reputation": 14978, "user_id": 673852, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/S5IZ5.png?s=128&g=1", "display_name": "Ruslan", "link": "https://stackoverflow.com/users/673852/ruslan"}, "reply_to_user": {"reputation": 188404, "user_id": 541686, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG", "display_name": "user541686", "link": "https://stackoverflow.com/users/541686/user541686"}, "edited": false, "score": 4, "creation_date": 1502375330, "post_id": 45608730, "comment_id": 78192028, "body": "@Mehrdad I suppose it&#39;s more liks <code>s</code> is for Size, while <code>z</code> is for siZe."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1502380036, "post_id": 45608730, "comment_id": 78195736, "body": "Could you describe in more detail how <code>s</code> and <code>z</code> work compared to 0--3? Are they completely different optimization profiles? Or are they &quot;like 2, plus a few additional optimization passes&quot; or something like that?"}], "tags": [], "owner": {"reputation": 1027, "user_id": 2365566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f9d395e4811053702a13a08b96a10d3?s=128&d=identicon&r=PG", "display_name": "Englund", "link": "https://stackoverflow.com/users/2365566/englund"}, "is_accepted": false, "score": 19, "last_activity_date": 1502369844, "last_edit_date": 1502369844, "creation_date": 1502354818, "answer_id": 45608730, "question_id": 45608392, "link": "https://stackoverflow.com/questions/45608392/what-do-the-optimization-levels-os-and-oz-do-in-rustc/45608730#45608730", "title": "What do the optimization levels `-Os` and `-Oz` do in rustc?", "body": "<p>It seems like you are not the only one confused, as described <a href=\"https://github.com/rust-lang/rust/issues/35784\" rel=\"noreferrer\">in a Rust issue</a>. It seems to follow the same pattern as Clang:</p>\n\n<ul>\n<li><code>Os</code> For optimising the size when compiling. </li>\n<li><code>Oz</code> For even more size optimisation.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1502444518, "post_id": 45608756, "comment_id": 78222829, "body": "Could you describe in more detail how <code>s</code> and <code>z</code> work compared to 0--3? Are they completely different optimization profiles? Or are they &quot;like 2, plus a few additional optimization passes&quot; or something like that?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1513590219, "post_id": 45608756, "comment_id": 82696193, "body": "@LukasKalbertodt since those optimizations are performed by LLVM and are not rust-specific you should consult the LLVM documentation."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 15, "last_activity_date": 1502369863, "last_edit_date": 1502369863, "creation_date": 1502354873, "answer_id": 45608756, "question_id": 45608392, "link": "https://stackoverflow.com/questions/45608392/what-do-the-optimization-levels-os-and-oz-do-in-rustc/45608756#45608756", "title": "What do the optimization levels `-Os` and `-Oz` do in rustc?", "body": "<p>Looking at <a href=\"https://github.com/rust-lang/rust/blob/16268a88fc0cfe3657439139c63913ffb904b2fa/src/librustc/session/config.rs#L1560-L1561\" rel=\"noreferrer\">these</a> and <a href=\"https://github.com/rust-lang/rust/blob/16268a88fc0cfe3657439139c63913ffb904b2fa/src/librustc_trans/back/write.rs#L133-L134\" rel=\"noreferrer\">these</a> lines in Rust's source code, I can say that <code>s</code> means optimize for size, and <code>z</code> means optimize for size some more. </p>\n\n<p>All optimizations seem to be performed by the LLVM code-generation engine.</p>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1617721865, "post_id": 66957193, "comment_id": 118380784, "body": "Nice information, thanks! Could you still link to some document listing those passes? (Could be code or docs)."}, {"owner": {"reputation": 31, "user_id": 7094867, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-EDAyxc1al7M/AAAAAAAAAAI/AAAAAAAAAAA/g4_JGJXDWJc/photo.jpg?sz=128", "display_name": "Fernando Magno Quintao Pereira", "link": "https://stackoverflow.com/users/7094867/fernando-magno-quintao-pereira"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1617815216, "post_id": 66957193, "comment_id": 118414730, "body": "Hi @LukasKalbertodt, you can check the passes invoked by an optimization level, using something like:  <code>llvm-as &lt; &#47;dev&#47;null | opt -O3 -disable-output -debug-pass=Arguments</code>  We have a paper where we analyze the effectiveness of the different size-reduction levels <a href=\"https://homepages.dcc.ufmg.br/~fernando/publications/papers/FaustinoCC21.pdf\" rel=\"nofollow noreferrer\">here</a>. And there is a technical report that accompanies the paper, with a few new code-size reduction sequences <a href=\"http://lac.dcc.ufmg.br/pubs/TechReports/LaC_TechReport022020.pdf\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 31, "user_id": 7094867, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-EDAyxc1al7M/AAAAAAAAAAI/AAAAAAAAAAA/g4_JGJXDWJc/photo.jpg?sz=128", "display_name": "Fernando Magno Quintao Pereira", "link": "https://stackoverflow.com/users/7094867/fernando-magno-quintao-pereira"}, "is_accepted": false, "score": 1, "last_activity_date": 1617644119, "creation_date": 1617644119, "answer_id": 66957193, "question_id": 45608392, "link": "https://stackoverflow.com/questions/45608392/what-do-the-optimization-levels-os-and-oz-do-in-rustc/66957193#66957193", "title": "What do the optimization levels `-Os` and `-Oz` do in rustc?", "body": "<p>These two sequences, Os and Oz, within LLVM, are pretty similar. Oz invokes 260 passes (I am using LLVM 12.0), whereas Os invokes 264. Oz' sequence of analyses and optimizations is almost a strict subsequence of Os', except for one pass (opt -loops), which appears in a different place within Os. This said, notice that the effects of the optimizations can still be different, because they use different cost models, e.g., constants that determine the behavior of optimizations. Thus, optimizations that have impact on size, like loop unrolling and inlining can behave differently in these two sequences.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5372, "favorite_count": 1, "answer_count": 3, "score": 29, "last_activity_date": 1617644119, "creation_date": 1502353904, "last_edit_date": 1564862452, "question_id": 45608392, "link": "https://stackoverflow.com/questions/45608392/what-do-the-optimization-levels-os-and-oz-do-in-rustc", "title": "What do the optimization levels `-Os` and `-Oz` do in rustc?", "body": "<p>Executing <code>rustc -C help</code> shows (among other things):</p>\n\n<p>\n\n<pre><code>-C opt-level=val       -- optimize with possible levels 0-3, s, or z\n</code></pre>\n\n<p>The levels 0 to 3 are fairly intuitive, I think: the higher the level, the more aggressive optimizations will be performed. However, I have no clue what the <code>s</code> and <code>z</code> options are doing and I couldn't find Rust-related information about them.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1502349562, "post_id": 45605563, "comment_id": 78172631, "body": "Note that Rust will support this soon normally: <a href=\"https://github.com/rust-lang/rfcs/pull/2094\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/2094</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1502370722, "post_id": 45605563, "comment_id": 78187959, "body": "@Boiethios &quot;soon&quot; is a <i>massive</i> simplification of the facts. The RFC hasn&#39;t even been accepted yet! <b>If</b> it&#39;s accepted, then all the arguments and details need to be sorted, it needs to be fully implemented, regression tested, then ride the release trains. In all, I&#39;d be surprised if it lands in 2017."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1502370849, "post_id": 45605563, "comment_id": 78188074, "body": "Use <code>if let</code> when you have a <code>match</code> where you only care about one arm."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1502371177, "post_id": 45605563, "comment_id": 78188337, "body": "@Shepmaster Come on, don&#39;t break my dreams. About the <b>if</b> restriction, no doubt that this amelioration will be accepted soon or later, this is so a massive improvement that one cannot pass by it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1502371434, "post_id": 45605563, "comment_id": 78188578, "body": "@Boiethios you are absolutely correct that it&#39;s important. However, it&#39;s been important since before Rust 1.0 was released (and I&#39;ve seen <b>all</b> the duplicate Q&amp;A that have arisen because of it since then). There&#39;s just a lot of work required to get from here to there; no amount of importance can make it disappear or go faster. Recall that MIR had to be completely designed and implemented as a step towards NLL."}, {"owner": {"reputation": 667, "user_id": 2529202, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/de2b11b06a6aab8867768a369a1c94e0?s=128&d=identicon&r=PG", "display_name": "functorial", "link": "https://stackoverflow.com/users/2529202/functorial"}, "edited": false, "score": 0, "creation_date": 1502396808, "post_id": 45605563, "comment_id": 78205422, "body": "Ah, I was wondering what all those non-lexical posts were about on /r/rust. Thanks!"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 4, "last_activity_date": 1502370816, "last_edit_date": 1502370816, "creation_date": 1502344700, "answer_id": 45605563, "question_id": 45605054, "link": "https://stackoverflow.com/questions/45605054/rust-cannot-borrow-x-as-mutable-more-than-once-at-a-time/45605563#45605563", "title": "Rust cannot borrow `x` as mutable more than once at a time", "body": "<p>Right now, borrows in Rust are lexical. The error message shows that borrow of <code>chain</code> starts at <code>chain.last_mut()</code> and ends at the end of the match block. While it is possible to infer that borrow of <code>chain</code> ends before <code>chain.push(...)</code>, Rust doesn't support it yet.</p>\n\n<p>The general principle of solving such problems is to reorganize the code to end the borrow earlier. In your case it could be like this</p>\n\n<pre><code>let maybe_next_block = chain.last_mut().map(|tip| tip.next_block(\"some\".into()));\n// borrow of `chain` ended\nmatch maybe_next_block {\n    Some(block) =&gt; chain.push(block),\n    None =&gt; {}\n}\n</code></pre>\n"}], "owner": {"reputation": 667, "user_id": 2529202, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/de2b11b06a6aab8867768a369a1c94e0?s=128&d=identicon&r=PG", "display_name": "functorial", "link": "https://stackoverflow.com/users/2529202/functorial"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 962, "favorite_count": 1, "closed_date": 1502370606, "accepted_answer_id": 45605563, "answer_count": 1, "score": 1, "last_activity_date": 1502370816, "creation_date": 1502342487, "last_edit_date": 1502370591, "question_id": 45605054, "link": "https://stackoverflow.com/questions/45605054/rust-cannot-borrow-x-as-mutable-more-than-once-at-a-time", "closed_reason": "Duplicate", "title": "Rust cannot borrow `x` as mutable more than once at a time", "body": "<p>I have the following code:</p>\n\n<pre><code>pub type Blockchain&lt;T&gt; = Vec&lt;Block&lt;T&gt;&gt;;\n\npub fn blockchain() -&gt; Blockchain&lt;String&gt; {\n    let size = 10;\n    let mut chain: Blockchain&lt;String&gt; = Vec::with_capacity(size);\n    chain.push(Block::genesis());\n    for i in 0..(size-1) {\n        match chain.last_mut() {\n            Some(tip) =&gt; chain.push(tip.next_block(String::from(\"yooooo\"))),\n            None      =&gt; {}\n        }\n    }\n    chain\n}\n</code></pre>\n\n<p>I'm getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `chain` as mutable more than once at a time\n  --&gt; src/blockchain/mod.rs:33:26\n   |\n32 |         match chain.last_mut() {\n   |               ----- first mutable borrow occurs here\n33 |             Some(tip) =&gt; chain.push(tip.next_block(String::from(\"yooooo\"))),\n   |                          ^^^^^ second mutable borrow occurs here\n34 |             None      =&gt; {}\n35 |         }\n   |         - first borrow ends here\n</code></pre>\n\n<p>How can I validly implement this in Rust?? So far I've tried using <code>Box</code>, <code>Rc</code>, and <code>RefCell</code>, with no luck.</p>\n"}]