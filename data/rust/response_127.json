[{"tags": ["math", "rust", "arithmetic-expressions"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1497465668, "post_id": 44552219, "comment_id": 76095201, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/34913484/subtraction-not-implemented-for-f32\">Subtraction not implemented for f32?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1497465748, "post_id": 44552219, "comment_id": 76095244, "body": "by the way, <code>( c * ( 9&#47;5 ) ) + 32</code> =&gt; <code>c * (9 &#47; 5) + 32</code>."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 4, "creation_date": 1497466362, "post_id": 44552219, "comment_id": 76095632, "body": "=&gt; <code>c * 0 + 32</code> =&gt; <code>32</code>"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1497466237, "post_id": 44552464, "comment_id": 76095538, "body": "Maybe explain how to cast ? &quot;What is the solution if I want to multiply/divide/add/subtract numbers of different types in the future?&quot;."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1497466413, "post_id": 44552464, "comment_id": 76095669, "body": "@Stargateur: Good point, it seemed obvious to me but best spell it out, especially as casting from FP to integral requiring picking the appropriate rounding mode."}, {"owner": {"reputation": 1338, "user_id": 1678392, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LuMvG.jpg?s=128&g=1", "display_name": "skia.heliou", "link": "https://stackoverflow.com/users/1678392/skia-heliou"}, "edited": false, "score": 0, "creation_date": 1517880783, "post_id": 44552464, "comment_id": 84265265, "body": "Concrete example please"}, {"owner": {"reputation": 320, "user_id": 2849548, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ee1d78aee0f66d7449722eceb47fac18?s=128&d=identicon&r=PG&f=1", "display_name": "alvitawa", "link": "https://stackoverflow.com/users/2849548/alvitawa"}, "edited": false, "score": 0, "creation_date": 1562191330, "post_id": 44552464, "comment_id": 100305465, "body": "So, in case I want to get an f64 from dividing to u128&#39;s for example, how can you do that without casting the u128&#39;s to f64&#39;s first (because they would overflow)?."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 38, "last_activity_date": 1517888451, "last_edit_date": 1517888451, "creation_date": 1497466048, "answer_id": 44552464, "question_id": 44552219, "link": "https://stackoverflow.com/questions/44552219/how-to-multiply-divide-add-subtract-numbers-of-different-types/44552464#44552464", "title": "How to multiply/divide/add/subtract numbers of different types?", "body": "<p><strong>TL;DR</strong>: <code>as</code> is the most common way to convert between the primitive numeric types but using it requires thinking.</p>\n\n<pre><code>fn c_to_f(c: f32) -&gt; f32 {\n    (c * (9 as f32 / 5 as f32)) + 32 as f32\n}\n</code></pre>\n\n<p>In this example though, it's more reasonable to just use floating point literals to start with:</p>\n\n<pre><code>fn c_to_f(c: f32) -&gt; f32 {\n    (c * (9. / 5.)) + 32.\n}\n</code></pre>\n\n<hr>\n\n<p>The <strong>real</strong> problem is that doing mixed type arithmetic is a bit complicated.</p>\n\n<p>If you are multiplying<sup>1</sup> a <code>T</code> by a <code>T</code>, you generally expect to get a result of type <code>T</code>, at least with the basic types.</p>\n\n<p>When mixing types, however, there are some difficulties:</p>\n\n<ul>\n<li>mixing signedness,</li>\n<li>mixing precision.</li>\n</ul>\n\n<p>So, for example, what is the ideal result of <code>i8 * u32</code>? The smallest type that can encompass the full set of all <code>i8</code> and <code>u32</code> values is a <code>i64</code>. Should that be the result?</p>\n\n<p>As another example, what is the ideal result of <code>f32 * i32</code>? The smallest type that can encompass the full set of all <code>f32</code> and <code>i32</code> values is a <code>f64</code>. Should that be the result?</p>\n\n<p>I find the idea of having a such <em>widening</em> rather confusing. It also has performance impacts (operations on <code>f32</code> can be much speedier than operations on <code>f64</code>, once vectorized).</p>\n\n<p>Due to those issues, Rust for now requires you to be explicit: which type do you want the computation to be carried in? Which type makes sense for your particular situation?</p>\n\n<p>And then cast appropriately, using <code>as</code>, and do think about which rounding mode to apply (<code>.round()</code>, <code>.ceil()</code>, <code>.floor()</code> or <code>.trunc()</code> when going from floating point to integral).</p>\n\n<p><sup>1</sup> <em>Adding, Subtracting and Dividing work in similar ways</em>.</p>\n"}], "owner": {"reputation": 3690, "user_id": 3960852, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/FhcvT.png?s=128&g=1", "display_name": "Kenny Worden", "link": "https://stackoverflow.com/users/3960852/kenny-worden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9004, "favorite_count": 3, "accepted_answer_id": 44552464, "answer_count": 1, "score": 25, "last_activity_date": 1517888451, "creation_date": 1497465289, "last_edit_date": 1497467097, "question_id": 44552219, "link": "https://stackoverflow.com/questions/44552219/how-to-multiply-divide-add-subtract-numbers-of-different-types", "title": "How to multiply/divide/add/subtract numbers of different types?", "body": "<p>I'm working through the second edition of the Rust handbook, and decided to try and make the classic Celsius-to-Fahrenheit converter:</p>\n\n<pre><code>fn c_to_f(c: f32) -&gt; f32 {\n    return ( c * ( 9/5 ) ) + 32;\n}\n</code></pre>\n\n<p>Compiling this with <code>cargo build</code> will yield the compile-time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `f32: std::ops::Mul&lt;{integer}&gt;` is not satisfied\n --&gt; src/main.rs:2:12\n  |\n2 |     return (c * (9 / 5)) + 32;\n  |            ^^^^^^^^^^^^^ the trait `std::ops::Mul&lt;{integer}&gt;` is not implemented for `f32`\n  |\n  = note: no implementation for `f32 * {integer}`\n</code></pre>\n\n<p>As a new Rust programmer, my interpretation is that I cannot multiply float and integer types together. I solved this by making all of my constants floating points:</p>\n\n<pre><code>fn c_to_f(c: f32) -&gt; f32 {\n    return ( c * ( 9.0/5.0 ) ) + 32.0;\n}\n</code></pre>\n\n<p>This leaves me with reservations. Coming from C/C++/Java/Python, it was surprising to learn that you cannot simply perform arithmetic on numbers of different types. Is the right thing to simply convert them to the same type, as I did here?</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1497457303, "post_id": 44549759, "comment_id": 76090515, "body": "<code>pop</code> removes the last one, use <code>last</code> to access it by reference without removing it."}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497463132, "post_id": 44549759, "comment_id": 76093857, "body": "@Boiethios last does not take parameters, though, right?  If I could call <code>blahblah.last(2)</code> to get the last two items that would be perfect."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497463220, "post_id": 44549759, "comment_id": 76093915, "body": "It was a little piece of advice. See the answer of Shepmaster."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497460783, "post_id": 44550108, "comment_id": 76092466, "body": "The behavior of calling <code>next</code> after an iterator returns <code>None</code> the first time is undefined. This answer calls <code>next</code> multiple times <i>without</i> checking if each preceding one is <code>None</code>, thus it can lead to unexpected results."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497461395, "post_id": 44550108, "comment_id": 76092831, "body": "@Shepmaster I know. The length of the vector does not go under 2, and I call <code>next</code> 2 times only, so there is no problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497461733, "post_id": 44550108, "comment_id": 76093037, "body": "The <i>example</i> provided never goes below 2 elements, but the <i>question</i> is more general than the example."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497462543, "post_id": 44550108, "comment_id": 76093547, "body": "My answer is very contextual and did not aimed to give a general answer. Anyway, your answer is better as usual \ud83d\ude1b"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1497457705, "creation_date": 1497457705, "answer_id": 44550108, "question_id": 44549759, "link": "https://stackoverflow.com/questions/44549759/return-last-n-elements-of-vector-in-rust-without-mutating-the-vector/44550108#44550108", "title": "Return last n elements of vector in Rust without mutating the vector", "body": "<p>You can use a reverse iterator on the <code>Vec</code>:</p>\n\n<pre><code>let (n1, n2) = {\n    let mut rev_iter = stored_nums.iter().rev();\n    (rev_iter.next().unwrap().clone(), rev_iter.next().unwrap().clone())\n};\nstored_nums.push(n1 + n2);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 1, "creation_date": 1497463508, "post_id": 44551083, "comment_id": 76094079, "body": "Iterator is the way to go.  Thanks.  Because I&#39;m prepopulating the vec with two items I didn&#39;t think to worry about the case where there might not be two items.  I also changed my integer type to u64 as u32 topped out at &lt;50th number in the sequence."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1589293702, "last_edit_date": 1589293702, "creation_date": 1497461078, "answer_id": 44551083, "question_id": 44549759, "link": "https://stackoverflow.com/questions/44549759/return-last-n-elements-of-vector-in-rust-without-mutating-the-vector/44551083#44551083", "title": "Return last n elements of vector in Rust without mutating the vector", "body": "<p>You need to consider the case where the vector <em>doesn't have two items</em>.</p>\n\n<p>I'd use iterator adapters like <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.rev\" rel=\"nofollow noreferrer\"><code>Iterator::rev</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take\" rel=\"nofollow noreferrer\"><code>Iterator::take</code></a> and then finish with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum\" rel=\"nofollow noreferrer\"><code>Iterator::sum</code></a>:</p>\n\n<pre><code>let sum = stored_nums.iter().rev().take(2).sum();\nstored_nums.push(sum);\n</code></pre>\n\n<p>This allows you to avoid <em>explicit</em> handling of cases where the vector / slice / iterator is too short but the code still deals with it implicitly.</p>\n\n<hr>\n\n<p>You could also directly index into the slice:</p>\n\n<pre><code>let len = stored_nums.len();\nlet sum = stored_nums[len - 1] + stored_nums[len - 2];\nstored_nums.push(sum);\n</code></pre>\n\n<p>This will panic if there are less than 2 elements, however.</p>\n\n<p>You could attempt to deal with the vector being too short in this case, but it's a bit verbose:</p>\n\n<pre><code>fn add_last_two(nums: &amp;[u32]) -&gt; Option&lt;u32&gt; {\n    let len = nums.len();\n\n    let idx_a = len.checked_sub(1)?;\n    let idx_b = len.checked_sub(2)?;\n\n    let a = nums.get(idx_a)?;\n    let b = nums.get(idx_b)?;\n\n    Some(a + b)\n}\n\nfn main() {\n    let mut stored_nums: Vec&lt;u32&gt; = vec![0, 1];\n    let sum = add_last_two(&amp;stored_nums).unwrap_or(0);\n    stored_nums.push(sum);\n}\n</code></pre>\n\n<hr>\n\n<p>Note that it might be nicer to use <a href=\"https://stackoverflow.com/q/31798737/155423\">a Fibonacci iterator</a> and just <code>collect</code> that into a <code>Vec</code>.</p>\n"}], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6098, "favorite_count": 0, "accepted_answer_id": 44551083, "answer_count": 2, "score": 6, "last_activity_date": 1589293702, "creation_date": 1497456540, "last_edit_date": 1497460687, "question_id": 44549759, "link": "https://stackoverflow.com/questions/44549759/return-last-n-elements-of-vector-in-rust-without-mutating-the-vector", "title": "Return last n elements of vector in Rust without mutating the vector", "body": "<p>I  am struggling to find a way to take two values from the end of a vector, sum those values, and push the sum to the vector.</p>\n\n<p>I have found that <code>pop</code>, <code>truncate</code>, and <code>drain</code> do not work because they remove the values from the original vector.</p>\n\n<pre><code>fn main() {\n    println!(\"Which Fibonacci number would you like to find?\");\n\n    let mut fib_num = String::new();\n\n    io::stdin().read_line(&amp;mut fib_num)\n        .expect(\"Failed to read line\");\n\n    let fib_num: u32 = fib_num.trim().parse()\n        .expect(\"Please enter a number\");\n\n    let mut stored_nums: Vec&lt;u32&gt; = vec![0, 1];\n\n    while fib_num &gt; stored_nums.len() as u32 {\n        let mut limit = stored_nums.len();\n        let mut new_num1 = stored_nums.pop().unwrap();\n        let mut new_num2 = stored_nums.pop().unwrap_or(0);\n        stored_nums.push(new_num1 + new_num2);\n    }\n}\n</code></pre>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497443504, "post_id": 44544323, "comment_id": 76080260, "body": "&quot;I don&#39;t fully understand why collect does the right thing when collecting a <code>Vec&lt;Result&lt;_, _&gt;&gt;</code>&quot; That would make a separate question, which fortunately has already been answered <a href=\"https://stackoverflow.com/a/26370894/1233251\">here</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497444995, "post_id": 44544323, "comment_id": 76081401, "body": "As for this matter, you have indeed stumbled upon an intriguing challenge. <code>unzip</code> behaves pretty much <i>unlike</i> <code>collect</code>: explicitly according to the API, unzip will create two empty containers and shove data into them with <code>extend</code>. This means that it cannot do special tricks with <code>Result</code>"}, {"owner": {"reputation": 43, "user_id": 8160173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af8418a25f7915238fb88c759ee6ac6e?s=128&d=identicon&r=PG&f=1", "display_name": "novice-rusticean", "link": "https://stackoverflow.com/users/8160173/novice-rusticean"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497445453, "post_id": 44544323, "comment_id": 76081758, "body": "This is indeed helpful, thank you. But can I  collect into something like Result&lt;SomeIterator, E&gt;? Would this even make sense? Edit: Your second comment arrived on my screen just as I was posting my reply. I think I&#39;ll just keep things simple with a hand written loop."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 8160173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af8418a25f7915238fb88c759ee6ac6e?s=128&d=identicon&r=PG&f=1", "display_name": "novice-rusticean", "link": "https://stackoverflow.com/users/8160173/novice-rusticean"}, "edited": false, "score": 0, "creation_date": 1497447451, "post_id": 44545694, "comment_id": 76083411, "body": "This did the trick! Also thanks for pointing me to itertools. I didn&#39;t even know about that crate."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1497448349, "last_edit_date": 1497448349, "creation_date": 1497445548, "answer_id": 44545694, "question_id": 44544323, "link": "https://stackoverflow.com/questions/44544323/how-to-unzip-a-sequence-of-resulta-b-e-to-a-veca-vecb-and-stop-on-f/44545694#44545694", "title": "How to unzip a sequence of Result&lt;(A, B), E&gt; to a (Vec&lt;A&gt;, Vec&lt;B&gt;) and stop on first error?", "body": "<p>I feel like I've commonly run into this type of problem with an iterator of <code>Result</code>s. So much so that I added a (private) helper type to the standard library called <a href=\"https://github.com/rust-lang/rust/blob/1.18.0/src/libcore/iter/traits.rs#L738-L795\" rel=\"nofollow noreferrer\"><code>ResultShunt</code></a>. This powers the implementation of <a href=\"https://github.com/rust-lang/rust/blob/1.18.0/src/libcore/iter/traits.rs#L797-L817\" rel=\"nofollow noreferrer\"><code>Sum</code> and <code>Product</code> for <code>Result</code>s</a>. I <s>should submit it</s> have <a href=\"https://github.com/bluss/rust-itertools/pull/203\" rel=\"nofollow noreferrer\">submitted it to itertools</a> so it can be reused:</p>\n\n<pre><code>fn main() {\n    let iter_source: Vec&lt;Result&lt;(i32, i32), bool&gt;&gt; =\n        vec![Ok((1, 2)), Err(false), Ok((3, 4))];\n\n    let z = ResultShunt::process(iter_source.into_iter(), |iter| {\n        iter.unzip::&lt;_, _, Vec&lt;_&gt;, Vec&lt;_&gt;&gt;()\n    });\n\n    println!(\"{:?}\", z);\n}\n\n// ----- Begin copy-pasta -----\n\n/// An iterator adapter that produces output as long as the underlying\n/// iterator produces `Result::Ok` values.\n///\n/// If an error is encountered, the iterator stops and the error is\n/// stored. The error may be recovered later via `reconstruct`.\nstruct ResultShunt&lt;I, E&gt; {\n    iter: I,\n    error: Option&lt;E&gt;,\n}\n\nimpl&lt;I, T, E&gt; ResultShunt&lt;I, E&gt;\n    where I: Iterator&lt;Item = Result&lt;T, E&gt;&gt;\n{\n    /// Process the given iterator as if it yielded a `T` instead of a\n    /// `Result&lt;T, _&gt;`. Any errors will stop the inner iterator and\n    /// the overall result will be an error.\n    pub fn process&lt;F, U&gt;(iter: I, mut f: F) -&gt; Result&lt;U, E&gt;\n        where F: FnMut(&amp;mut Self) -&gt; U\n    {\n        let mut shunt = ResultShunt::new(iter);\n        let value = f(shunt.by_ref());\n        shunt.reconstruct(value)\n    }\n\n    fn new(iter: I) -&gt; Self {\n        ResultShunt {\n            iter: iter,\n            error: None,\n        }\n    }\n\n    /// Consume the adapter and rebuild a `Result` value. This should\n    /// *always* be called, otherwise any potential error would be\n    /// lost.\n    fn reconstruct&lt;U&gt;(self, val: U) -&gt; Result&lt;U, E&gt; {\n        match self.error {\n            None =&gt; Ok(val),\n            Some(e) =&gt; Err(e),\n        }\n    }\n}\n\nimpl&lt;I, T, E&gt; Iterator for ResultShunt&lt;I, E&gt;\n    where I: Iterator&lt;Item = Result&lt;T, E&gt;&gt;\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.iter.next() {\n            Some(Ok(v)) =&gt; Some(v),\n            Some(Err(e)) =&gt; {\n                self.error = Some(e);\n                None\n            }\n            None =&gt; None,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 8160173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af8418a25f7915238fb88c759ee6ac6e?s=128&d=identicon&r=PG&f=1", "display_name": "novice-rusticean", "link": "https://stackoverflow.com/users/8160173/novice-rusticean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 0, "accepted_answer_id": 44545694, "answer_count": 1, "score": 4, "last_activity_date": 1497448349, "creation_date": 1497441945, "last_edit_date": 1497445622, "question_id": 44544323, "link": "https://stackoverflow.com/questions/44544323/how-to-unzip-a-sequence-of-resulta-b-e-to-a-veca-vecb-and-stop-on-f", "title": "How to unzip a sequence of Result&lt;(A, B), E&gt; to a (Vec&lt;A&gt;, Vec&lt;B&gt;) and stop on first error?", "body": "<p>I would like to do something like this:</p>\n\n<pre><code>enum MyEnum {\n    Foo(Vec&lt;Stuff&gt;),\n    // ...\n}\n\nimpl MyEnum {\n    fn do_sth(&amp;self) -&gt; Result&lt;Bar, E&gt; {\n        match *self {\n            MyEnum::Foo(ref vec) =&gt; {\n                let (a, b): (Vec&lt;A&gt;, Vec&lt;B&gt;) = vec\n                    .iter()\n                    .map(|thing| thing.make_a_tuple(arg)) // returns Result&lt;(A, B), E&gt;\n                    .collect::&lt;Result&lt;_, _&gt;&gt;()? // stop on first error\n                    .unzip();\n\n                // use a and b\n            }\n\n            // other cases\n        }\n\n        // ...\n    }\n}\n</code></pre>\n\n<p>This fails to compile with <code>error: the type of this value must be known in this context</code>.\nThrough trial and error, I got it to compile like this</p>\n\n<pre><code>    fn do_sth(&amp;self) -&gt; Result&lt;Bar, E&gt; {\n        match *self {\n            MyEnum::Foo(ref vec) =&gt; {\n                let (a, b): (Vec&lt;A&gt;, Vec&lt;B&gt;) = vec\n                    .iter()\n                    .map(|thing| thing.make_a_tuple(arg))\n                    .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()?\n                    .into_iter()\n                    .unzip();\n\n                // use a and b\n            }\n\n            // other cases\n        }\n    }\n</code></pre>\n\n<p>However, I would like to avoid the unnecessary allocation of a <code>Vec&lt;(A, B)&gt;</code>. </p>\n\n<p>Is it possible to do this without intermediate allocations? I am sure I could do this myself with a loop, but I would prefer to learn the Rusty way.</p>\n"}, {"tags": ["testing", "rust", "benchmarking", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497432382, "post_id": 44539729, "comment_id": 76071988, "body": "Maybe you could do an extern crate if you will reuse them?"}, {"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497433186, "post_id": 44539729, "comment_id": 76072556, "body": "It is not universal funcitons, but just helpers related to this project. So I don&#39;t think, that will be good solution."}], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 93405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aed3eb291895487e95cc2850cb92391?s=128&d=identicon&r=PG", "display_name": "antifuchs", "link": "https://stackoverflow.com/users/93405/antifuchs"}, "edited": false, "score": 2, "creation_date": 1540597165, "post_id": 44541071, "comment_id": 92938231, "body": "For crates that should be released, this is the better solution: crates.io will refuse path dependencies, so you either have to publish your util crate, or put them into an undocumented module. I think the latter is preferable."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 5, "last_activity_date": 1497433380, "creation_date": 1497433380, "answer_id": 44541071, "question_id": 44539729, "link": "https://stackoverflow.com/questions/44539729/what-is-an-idiomatic-way-to-have-shared-utility-functions-for-integration-tests/44541071#44541071", "title": "What is an idiomatic way to have shared utility functions for integration tests and benchmarks?", "body": "<p>You could add those utility-functions to a <code>pub</code>-module inside your main crate and use the <code>#[doc(hidden)]</code> or <code>#![doc(hidden)]</code> attribute to hide them from the docs-generator. Extra comments will guide the reader to why they are there.</p>\n"}, {"comments": [{"owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "edited": false, "score": 0, "creation_date": 1512646310, "post_id": 44545091, "comment_id": 82347432, "body": "Just to confirm, the &quot;test-only module&quot; solution up top only works with libraries and not with binaries, am I right ? (<code>extern crate the_library;</code> cannot be found if <code>the_library</code> has been created with <code>cargo new --bin</code>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "edited": false, "score": 0, "creation_date": 1512666492, "post_id": 44545091, "comment_id": 82360428, "body": "@jean553 yes; only library crates can be reused by other crates."}, {"owner": {"reputation": 646, "user_id": 2177312, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a3a639e2cd256dc91dd3b687946fbbfd?s=128&d=identicon&r=PG", "display_name": "Greg0ry", "link": "https://stackoverflow.com/users/2177312/greg0ry"}, "edited": false, "score": 0, "creation_date": 1537651607, "post_id": 44545091, "comment_id": 91864030, "body": "Hi @Shepmaster, great answer! It had been 4 years since you provided it. I can&#39;t find anything in documentation that would suggest how to share some helper methods between unit tests and integration tests. Has anything changed since your original answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 646, "user_id": 2177312, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a3a639e2cd256dc91dd3b687946fbbfd?s=128&d=identicon&r=PG", "display_name": "Greg0ry", "link": "https://stackoverflow.com/users/2177312/greg0ry"}, "edited": false, "score": 0, "creation_date": 1537651775, "post_id": 44545091, "comment_id": 91864068, "body": "@Greg0ry <i>It has been 4 years since you provided it</i> \u2014 you and I are using different calendars. This answer was created <b>2017-06-14</b> (hover over the date next to &quot;answered&quot; for an ISO format date), a little over one year ago. But no, I don&#39;t believe so."}, {"owner": {"reputation": 646, "user_id": 2177312, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a3a639e2cd256dc91dd3b687946fbbfd?s=128&d=identicon&r=PG", "display_name": "Greg0ry", "link": "https://stackoverflow.com/users/2177312/greg0ry"}, "edited": false, "score": 0, "creation_date": 1537657646, "post_id": 44545091, "comment_id": 91865324, "body": "Ah silly me... Anyways thanks again, in the end I went for test-only module."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1555505547, "post_id": 44545091, "comment_id": 98134825, "body": "This does not work though if the main crate is set to <code>crate-type = [&quot;staticlib&quot;]</code> - in this case you won\u2018t be able to access the crate\u2018s types in the integration tests."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1555505730, "post_id": 44545091, "comment_id": 98134950, "body": "@PhilippLudwig there are 3 separate answers here. Are you saying that <b>all three</b> fail in this case? Additionally, what prevents you from creating both a staticlib and an rlib? That section of Cargo.toml is an array for a reason..."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 2, "creation_date": 1556818354, "post_id": 44545091, "comment_id": 98566655, "body": "<a href=\"https://stackoverflow.com/questions/44539729/what-is-an-idiomatic-way-to-have-shared-utility-functions-for-integration-tests#comment92938231_44541071\">Another comment here</a> claims the &quot;shared crate&quot; approach will prevent you from publishing the main crate (unless you also publish the utilities crate). If that&#39;s correct, it ought to be mentioned in the answer I think.."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1557143905, "post_id": 44545091, "comment_id": 98654974, "body": "@Shepmaster I wasn\u2019t aware that you could build more than one library type at the same time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1617378003, "last_edit_date": 1617378003, "creation_date": 1497444019, "answer_id": 44545091, "question_id": 44539729, "link": "https://stackoverflow.com/questions/44539729/what-is-an-idiomatic-way-to-have-shared-utility-functions-for-integration-tests/44545091#44545091", "title": "What is an idiomatic way to have shared utility functions for integration tests and benchmarks?", "body": "<h1>Create a shared crate (preferred)</h1>\n<p>As stated in the comments, create a new crate. You <strong>don't have to publish the crate to crates.io</strong>. Just <a href=\"https://stackoverflow.com/questions/33025887/how-to-use-a-local-unpublished-crate\">keep it as a local unpublished crate</a> inside your project and mark it as a <a href=\"https://stackoverflow.com/questions/29857002/how-to-define-test-only-dependencies\">development-only dependency</a>.</p>\n<p>This is best used with <a href=\"https://doc.rust-lang.org/cargo/reference/features.html#feature-resolver-version-2\" rel=\"nofollow noreferrer\">version 2 of the Cargo resolver</a>.</p>\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 tests\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 integration.rs\n\u2514\u2500\u2500 utilities\n    \u251c\u2500\u2500 Cargo.toml\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 lib.rs\n</code></pre>\n<p><strong>Cargo.toml</strong></p>\n<pre><code># ...\n\n[dev-dependencies]\nutilities = { path = &quot;utilities&quot; }\n</code></pre>\n<p><strong>utilities/src/lib.rs</strong></p>\n<pre><code>pub fn shared_code() {\n    println!(&quot;I am shared code&quot;);\n}\n</code></pre>\n<p><strong>tests/integration.rs</strong></p>\n<pre><code>extern crate utilities;\n\n#[test]\nfn a_test() {\n    utilities::shared_code();\n}\n</code></pre>\n<h1>A test-only module</h1>\n<p>You could place a module inside your crate that is only compiled when a specific feature is passed. This is the same concept used for unit tests. This has the advantage that it can access internals of your library code. It has the disadvantage that you need to pass the flag each time you run the code.</p>\n<p>This is best used with <a href=\"https://doc.rust-lang.org/cargo/reference/features.html#feature-resolver-version-2\" rel=\"nofollow noreferrer\">version 2 of the Cargo resolver</a>.</p>\n<p><strong>Cargo.toml</strong></p>\n<pre><code># ...\n\n[features]\ntest-utilities = []\n</code></pre>\n<p><strong>src/lib.rs</strong></p>\n<pre><code>#[cfg(feature = &quot;test-utilities&quot;)]\npub mod test_utilities {\n    pub fn shared_code() {\n        println!(&quot;I'm inside the library&quot;)\n    }\n}\n</code></pre>\n<p><strong>tests/integration.rs</strong></p>\n<pre><code>extern crate the_library;\n\n#[test]\nfn a_test() {\n    the_library::test_utilities::shared_code();\n}\n</code></pre>\n<p><strong>execution</strong></p>\n<pre class=\"lang-none prettyprint-override\"><code>cargo test --features=test-utilities\n</code></pre>\n<p>This is best used with <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2\" rel=\"nofollow noreferrer\">version 2 of the Cargo resolver</a>.</p>\n<h1>Use a module from an arbitrary file path</h1>\n<p>This is just ugly to me, and really goes out of the normal path.</p>\n<p><strong>utilities.rs</strong></p>\n<pre><code>pub fn shared_code() {\n    println!(&quot;This is just sitting out there&quot;);\n}\n</code></pre>\n<p><strong>tests/integration.rs</strong></p>\n<pre><code>#[path = &quot;../utilities.rs&quot;]\nmod utilities;\n\n#[test]\nfn a_test() {\n    utilities::shared_code();\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37993886/155423\">Where should I put test utility functions in Rust?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 1427, "user_id": 3424746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e09ba41aee19d01cf5070f7f5e47a3ba?s=128&d=identicon&r=PG&f=1", "display_name": "PiRocks", "link": "https://stackoverflow.com/users/3424746/pirocks"}, "is_accepted": false, "score": 0, "last_activity_date": 1603467810, "creation_date": 1603467810, "answer_id": 64503190, "question_id": 44539729, "link": "https://stackoverflow.com/questions/44539729/what-is-an-idiomatic-way-to-have-shared-utility-functions-for-integration-tests/64503190#64503190", "title": "What is an idiomatic way to have shared utility functions for integration tests and benchmarks?", "body": "<p>Whilst this doesn't help for benchmarks, I came here looking for a way to do this with multiple integration tests, and later found that you can do the following for integration tests:</p>\n<blockquote>\n<p>Modules with common code follow the ordinary modules rules, so it's ok to create common module as tests/common/mod.rs.</p>\n</blockquote>\n<p>Source: <a href=\"https://doc.rust-lang.org/rust-by-example/testing/integration_testing.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/rust-by-example/testing/integration_testing.html</a></p>\n"}], "owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2125, "favorite_count": 3, "accepted_answer_id": 44545091, "answer_count": 3, "score": 10, "last_activity_date": 1617378003, "creation_date": 1497429774, "last_edit_date": 1538930780, "question_id": 44539729, "link": "https://stackoverflow.com/questions/44539729/what-is-an-idiomatic-way-to-have-shared-utility-functions-for-integration-tests", "title": "What is an idiomatic way to have shared utility functions for integration tests and benchmarks?", "body": "<p>I have Rust project with both integration tests (in the <code>/tests</code> dir) and benchmarks (in the <code>/benches</code> dir). There are a couple of utility functions that I need in tests and benches, but they aren't related to my crate itself, so I can't just put them in the <code>/utils</code> dir.</p>\n\n<p>What is idiomatic way to handle this situation?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 3, "creation_date": 1497419423, "post_id": 44535298, "comment_id": 76063783, "body": "Possibly duplicate of <a href=\"https://stackoverflow.com/q/38023871/2731452\">stackoverflow.com/q/38023871/2731452</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497442009, "post_id": 44535298, "comment_id": 76079178, "body": "Instead of recursive, <a href=\"https://stackoverflow.com/questions/28767108/borrow-pointer-errors-recursively-traversing-tree\">use iterative</a>."}], "owner": {"reputation": 5062, "user_id": 133973, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/92d504a7d4adce3ebb09fac7d536200c?s=128&d=identicon&r=PG", "display_name": "Jeeyoung Kim", "link": "https://stackoverflow.com/users/133973/jeeyoung-kim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1497441876, "answer_count": 0, "score": 0, "last_activity_date": 1497441989, "creation_date": 1497413654, "last_edit_date": 1497441989, "question_id": 44535298, "link": "https://stackoverflow.com/questions/44535298/cannot-figure-out-how-rusts-borrow-checker-is-working-on-this-example", "closed_reason": "Duplicate", "title": "Cannot figure out how Rust&#39;s borrow checker is working on this example", "body": "<p>I have the following code (dumbed down a bit from the code I had), that recursively traverses mutable list until certain condition is hit.</p>\n\n<pre><code>struct Node {\n    value: usize,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\nfn recursive&lt;'a&gt;(link: &amp;'a mut Option&lt;Box&lt;Node&gt;&gt;) -&gt; Option&lt;&amp;'a mut Option&lt;Box&lt;Node&gt;&gt;&gt; {\n    {\n        match link.as_mut() {\n            None =&gt; (),\n            Some(cur) =&gt; {\n                let next: &amp;mut Option&lt;Box&lt;Node&gt;&gt; = &amp;mut cur.next;\n                return recursive(next);\n            }\n        }\n    }\n    return Some(link);\n}\n\nfn main() {\n}\n</code></pre>\n\n<p>But the code doesn't compile with the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*link` as mutable more than once at a time\n  --&gt; &lt;anon&gt;:16:17\n   |\n7  |         match link.as_mut() {\n   |               ---- first mutable borrow occurs here\n...\n16 |     return Some(link);\n   |                 ^^^^ second mutable borrow occurs here\n17 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>I thought this code would work because the first borrow @ the match line <code>link.as_mut()</code> would end as soon as the match is done, thus <code>link</code> can be borrowed again. Is that incorrect?</p>\n\n<p>If I change the code to not use pattern matching but use <code>link.as_mut().unwrap()</code>, the code also compiles.</p>\n\n<p>What is going on here?</p>\n"}, {"tags": ["windows", "rust", "cygwin", "msys2"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1497354868, "post_id": 44520572, "comment_id": 76033307, "body": "you must install Visual Studio 14 2015 Win64 because <code>cryptominisat</code> need it, there is a free version."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497358000, "post_id": 44520572, "comment_id": 76035665, "body": "Probably a duplicate of <a href=\"https://stackoverflow.com/q/19913804/155423\">stackoverflow.com/q/19913804/155423</a> \u2014 Tl;DR - Cygwin&#39;s <code>cmake</code> doesn&#39;t know how to create the Visual Studio files. Use the native Windows cmake instead. Probably worth reporting to the cryptominisat maintainers so they can update the documentation."}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497358036, "post_id": 44520572, "comment_id": 76035695, "body": "@Shepmaster I just tried that. How would I get the windows cmake into the cygwin path?   It still wants to use the cygwin cmake,"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497358158, "post_id": 44520572, "comment_id": 76035782, "body": "The same way you&#39;d edit the Cygwin path for any other program. I&#39;m not a Windows / Cygwin user, so I&#39;d just be doing the same internet searches you can do."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497358741, "post_id": 44520572, "comment_id": 76036263, "body": "Which Rust toolchain do you have installed? That targeting the MSVC ABI, or that targeting the GNU ABI?"}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497358906, "post_id": 44520572, "comment_id": 76036414, "body": "@ildjarn I literally just run <code>cargo build</code> in cygwin. The only c/c++ compiler I have is gcc/g++.  I am a newbie to rust as you may tell."}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497359075, "post_id": 44520572, "comment_id": 76036557, "body": "@Shepmaster I just added the windows version  of cmake to PATH and now I get <a href=\"https://bpaste.net/show/793800778981\" rel=\"nofollow noreferrer\">bpaste.net/show/793800778981</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497359466, "post_id": 44520572, "comment_id": 76036889, "body": "<i>&#39;xxd&#39; is not recognized as an internal or external command</i>. Looks like that is missing."}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497359514, "post_id": 44520572, "comment_id": 76036926, "body": "@Shepmaster Any idea what xxd is? Google gives me nothing for it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497359702, "post_id": 44520572, "comment_id": 76037082, "body": "That doesn&#39;t make sense. I opened an incognito window, went to Google, typed in &quot;xxd&quot; and 8 of the 10 results were all relevant. <a href=\"https://wiki.christophchamp.com/index.php?title=Xxd\" rel=\"nofollow noreferrer\">wiki.christophchamp.com/index.php?title=Xxd</a>"}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497360197, "post_id": 44520572, "comment_id": 76037498, "body": "@Shepmaster (I had googled the whole error message.) xxd installed. Now I get <code>c:\\program files\\haskell platform\\8.0.2-a\\mingw\\include\\zconf.h(452): fatal error C1083: Cannot open include file: &#39;unistd.h&#39;: No such file or directory [C:\\Users\\foo\\Downloads\\rust\\target\\debug\\build\\cryptominisa&zwnj;&#8203;t-d635308a8cbd254c\\o&zwnj;&#8203;ut\\build\\cmsat5-src\\&zwnj;&#8203;libcryptominisat5.vc&zwnj;&#8203;xproj]</code>"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1497360202, "post_id": 44520572, "comment_id": 76037502, "body": "@eleanora : What is the output of <code>rustup toolchain list</code>? Does it end in <code>-gnu</code> or <code>-msvc</code>? If the latter, that&#39;s your problem; installing the GNU toolchain instead should cause CMake to get invoked with <code>-G MSYS Makefiles</code> instead of <code>-G Visual Studio 14 2015 Win64</code>."}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497360287, "post_id": 44520572, "comment_id": 76037577, "body": "@ildjarn <code>rustup toolchain list stable-x86_64-pc-windows-msvc (default)</code>. How do I install the gnu toolchain instead?"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497360371, "post_id": 44520572, "comment_id": 76037643, "body": "@eleanora : No offense, but I&#39;m quite sure the rustup docs cover that in detail... ;-]"}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497361017, "post_id": 44520572, "comment_id": 76038207, "body": "@ildjarn ok... I got that to work. Now I get  <a href=\"https://bpaste.net/show/56d870c3dba2\" rel=\"nofollow noreferrer\">bpaste.net/show/56d870c3dba2</a> . Do I have to have msys instead of the gcc that comes with cygwin? Is there some way to get it to use -GUnix Makefiles  ?"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497361455, "post_id": 44520572, "comment_id": 76038576, "body": "@eleanora : &quot;<i>Do I have to have msys instead of the gcc that comes with cygwin?</i>&quot; For Rust in general, I&#39;m not sure (I use the MSVC ABI on Windows), but I&#39;m pretty sure it&#39;s supposed to work with Cygwin. But for this specific library, I think so, since it uses <a href=\"https://github.com/alexcrichton/cmake-rs\" rel=\"nofollow noreferrer\">cmake-rs</a> to invoke CMake, and cmake-rs <a href=\"https://github.com/alexcrichton/cmake-rs/blob/b78c02db126d2cafbb457cb768d44d30dd0bfba4/src/lib.rs#L282\" rel=\"nofollow noreferrer\">exclusively passes <code>MSYS Makefiles</code> when targeting windows-gnu from Windows</a>. :-/"}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497361607, "post_id": 44520572, "comment_id": 76038689, "body": "@ildjarn ah... I did manage to compile the cryptominisat separately using <code>cmake -GUnix Makefiles</code> so in principle it should be possible."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497361866, "post_id": 44520572, "comment_id": 76038893, "body": "@eleanora : This appears to be a deficiency in cmake-rs \u2013 it seems to me that it could check for a <code>CYGWIN</code> environment variable and pass <code>-G Unix Makefiles</code> if it&#39;s present. You may want to open an issue on GH. (Or, it&#39;s possible that <code>host</code> isn&#39;t supposed to == <code>windows</code> when building under cygwin, in which case it&#39;s an environmental issue on your computer. I don&#39;t use cygwin, though, so I&#39;m not sure, sorry.)"}, {"owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497431809, "post_id": 44520572, "comment_id": 76071559, "body": "@ildjarn sadly it still fails in msys2 . I get <a href=\"https://bpaste.net/show/211f58910cd7\" rel=\"nofollow noreferrer\">bpaste.net/show/211f58910cd7</a>"}], "owner": {"reputation": 9307, "user_id": 2179021, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/629b9942cb64be30074eecfe0a100a50?s=128&d=identicon&r=PG", "display_name": "eleanora", "link": "https://stackoverflow.com/users/2179021/eleanora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1091, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1497602780, "creation_date": 1497354260, "last_edit_date": 1497431960, "question_id": 44520572, "link": "https://stackoverflow.com/questions/44520572/failed-to-run-custom-build-command-for-cryptominisat-on-windows", "title": "Failed to run custom build command for cryptominisat on Windows", "body": "<p>I am trying and failing to compile this <a href=\"https://codegolf.stackexchange.com/a/125961/9206\">Rust code</a> in Windows. I have copied it below for completeness.  When I do <code>cargo build</code> I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n   Compiling cryptominisat v5.0.1\nerror: failed to run custom build command for `cryptominisat v5.0.1`\nprocess didn't exit successfully: `C:\\Users\\foo\\Downloads\\rust\\target\\debug\\build\\cryptominisat-9c79fbb9e62f2dba\\build-script-build` (exit code: 101)\n--- stdout\nrunning: \"cmake\" \"C:\\\\Users\\\\foo\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\cryptominisat-5.0.1\\\\cryptominisat\" \"-G\" \"Visual Studio 14 2015 Win64\" \"-DCMAKE_INSTALL_PREFIX=C:\\\\Users\\\\foo\\\\Downloads\\\\rust\\\\target\\\\debug\\\\build\\\\cryptominisat-d635308a8cbd254c\\\\out\" \"-DCMAKE_C_FLAGS= /nologo /MD\" \"-DCMAKE_C_FLAGS_DEBUG= /nologo /MD\" \"-DCMAKE_CXX_FLAGS= /nologo /MD\" \"-DCMAKE_CXX_FLAGS_DEBUG= /nologo /MD\" \"-DCMAKE_BUILD_TYPE=Debug\"\n\n--- stderr\nCMake Error: Could not create named generator Visual Studio 14 2015 Win64\n\nGenerators\n  Unix Makefiles               = Generates standard UNIX makefiles.\n  Ninja                        = Generates build.ninja files.\n  CodeBlocks - Ninja           = Generates CodeBlocks project files.\n  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.\n  CodeLite - Ninja             = Generates CodeLite project files.\n  CodeLite - Unix Makefiles    = Generates CodeLite project files.\n  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.\n  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.\n  KDevelop3                    = Generates KDevelop 3 project files.\n  KDevelop3 - Unix Makefiles   = Generates KDevelop 3 project files.\n  Kate - Ninja                 = Generates Kate project files.\n  Kate - Unix Makefiles        = Generates Kate project files.\n  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.\n  Sublime Text 2 - Unix Makefiles\n                               = Generates Sublime Text 2 project files.\n</code></pre>\n\n<p>My computer is running Windows 7 with Cygwin and I have gcc/g++ and cmake  installed from Cygwin. I would be happy trying any other method that works in Windows.</p>\n\n<h3><code>src/main.rs</code></h3>\n\n<pre><code>extern crate cryptominisat;\nextern crate itertools;\n\nuse std::iter::once;\nuse cryptominisat::{Lbool, Lit, Solver};\nuse itertools::Itertools;\n\nfn make_solver(n: usize) -&gt; (Solver, Vec&lt;Lit&gt;) {\n    let mut solver = Solver::new();\n    let s: Vec&lt;Lit&gt; = (1..n).map(|_| solver.new_var()).collect();\n    let d: Vec&lt;Vec&lt;Lit&gt;&gt; = (1..n - 1)\n        .map(|k| {\n                 (0..n - k)\n                     .map(|i| (if i == 0 { s[k - 1] } else { solver.new_var() }))\n                     .collect()\n             })\n        .collect();\n    let a: Vec&lt;Lit&gt; = (1..n - 1).map(|_| solver.new_var()).collect();\n    for k in 1..n - 1 {\n        for i in 1..n - k {\n            solver.add_xor_literal_clause(&amp;[s[i - 1], s[k + i - 1], d[k - 1][i]], true);\n        }\n        for t in (0..n - k).combinations(2) {\n            solver.add_clause(&amp;t.iter()\n                                   .map(|&amp;i| d[k - 1][i])\n                                   .chain(once(!a[k - 1]))\n                                   .collect::&lt;Vec&lt;_&gt;&gt;()\n                                   [..]);\n        }\n        for t in (0..n - k).combinations(n - k - 1) {\n            solver.add_clause(&amp;t.iter()\n                                   .map(|&amp;i| !d[k - 1][i])\n                                   .chain(once(a[k - 1]))\n                                   .collect::&lt;Vec&lt;_&gt;&gt;()\n                                   [..]);\n        }\n    }\n    (solver, a)\n}\n\nfn search(n: usize,\n          solver: &amp;mut Solver,\n          a: &amp;Vec&lt;Lit&gt;,\n          assumptions: &amp;mut Vec&lt;Lit&gt;,\n          k: usize)\n          -&gt; usize {\n    match solver.solve_with_assumptions(assumptions) {\n        Lbool::True =&gt; search_sat(n, solver, a, assumptions, k),\n        Lbool::False =&gt; 0,\n        Lbool::Undef =&gt; panic!(),\n    }\n}\n\nfn search_sat(n: usize,\n              solver: &amp;mut Solver,\n              a: &amp;Vec&lt;Lit&gt;,\n              assumptions: &amp;mut Vec&lt;Lit&gt;,\n              k: usize)\n              -&gt; usize {\n    if k &gt;= n - 1 {\n        1\n    } else {\n        let s = solver.is_true(a[k - 1]);\n        assumptions.push(if s { a[k - 1] } else { !a[k - 1] });\n        let c = search_sat(n, solver, a, assumptions, k + 1);\n        assumptions.pop();\n        assumptions.push(if s { !a[k - 1] } else { a[k - 1] });\n        let c1 = search(n, solver, a, assumptions, k + 1);\n        assumptions.pop();\n        c + c1\n    }\n}\n\nfn f(n: usize) -&gt; usize {\n    let (mut solver, proj) = make_solver(n);\n    search(n, &amp;mut solver, &amp;proj, &amp;mut vec![], 1)\n}\n\nfn main() {\n    for n in 1.. {\n        println!(\"{}: {}\", n, f(n));\n    }\n}\n</code></pre>\n\n<h3><code>Cargo.toml</code></h3>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\nname = \"correlations-cms\"\nversion = \"0.1.0\"\nauthors = [\"Anders Kaseorg &lt;andersk@mit.edu&gt;\"]\n\n[dependencies]\ncryptominisat = \"5.0.1\"\nitertools = \"0.6.0\"\n</code></pre>\n\n<hr>\n\n<p>I tried switching toolchain with  <code>rustup toolchain install stable-x86_64-pc-windows-gnu</code>.   Now I get this error:</p>\n\n<pre><code>$ cargo build\n   Compiling either v1.1.0\n   Compiling gcc v0.3.50\n   Compiling libc v0.2.23\n   Compiling itertools v0.6.0\n   Compiling cmake v0.1.24\n   Compiling cryptominisat v5.0.1\nerror: failed to run custom build command for `cryptominisat v5.0.1`\nprocess didn't exit successfully: `C:\\Users\\foo\\Downloads\\rust\\target\\debug\\bu                                  ild\\cryptominisat-1b603d882d3d5aef\\build-script-build` (exit code: 101)\n--- stdout\nrunning: \"cmake\" \"C:\\\\Users\\\\foo\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db                                  9ec823\\\\cryptominisat-5.0.1\\\\cryptominisat\" \"-G\" \"MSYS Makefiles\" \"-DCMAKE_INSTA                                  LL_PREFIX=C:\\\\Users\\\\foo\\\\Downloads\\\\rust\\\\target\\\\debug\\\\build\\\\cryptominisat                                  -3d06123643d625eb\\\\out\" \"-DCMAKE_C_FLAGS= -ffunction-sections -fdata-sections -m                                  64\" \"-DCMAKE_CXX_FLAGS= -ffunction-sections -fdata-sections -m64\" \"-DCMAKE_BUILD                                  _TYPE=Debug\"\n\n--- stderr\nCMake Error: Could not create named generator MSYS Makefiles\n</code></pre>\n\n<hr>\n\n<p>I have now tried switching to using <a href=\"http://www.msys2.org/\" rel=\"nofollow noreferrer\">msys2</a> . Sadly this also fails, this time with:</p>\n\n<pre><code>/c/Users/foo/Downloads/rust\n$ cargo build\n   Compiling cryptominisat v5.0.1\nerror: failed to run custom build command for `cryptominisat v5.0.1`\nprocess didn't exit successfully: `C:\\Users\\foo\\Downloads\\rust\\target\\debug\\build\\cryptominisat-a2f1d448eae9af61\\build-script-build` (exit code: 3221225477)\n--- stdout\nrunning: \"cmake\" \"C:\\\\Users\\\\foo\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\cryptominisat-5.0.1\\\\cryptominisat\" \"-G\" \"MSYS Makefiles\" \"-DCMAKE_INSTALL_PREFIX=C:\\\\Users\\\\foo\\\\Downloads\\\\rust\\\\target\\\\debug\\\\build\\\\cryptominisat-44b3c950a6288408\\\\out\" \"-DCMAKE_C_FLAGS= -ffunction-sections -fdata-sections -m64\" \"-DCMAKE_CXX_FLAGS= -ffunction-sections -fdata-sections -m64\" \"-DCMAKE_BUILD_TYPE=Debug\"\n-- Doing a Debug build\n-- Configuring incomplete, errors occurred!\n\n--- stderr\nCMake Error: CMake was unable to find a build program corresponding to \"MSYS Makefiles\".  CMAKE_MAKE_PROGRAM is not set.  You probably need to select a different build tool.\nCMake Error: CMake was unable to find a build program corresponding to \"MSYS Makefiles\".  CMAKE_MAKE_PROGRAM is not set.  You probably need to select a different build tool.\nCMake Error: CMAKE_C_COMPILER not set, after EnableLanguage\nCMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage\nCMake Error: CMAKE_AR was not found, please set to archive program.\nthread 'main' panicked at '\ncommand did not execute successfully, got: exit code: 1\n\nbuild script failed, must exit now', C:\\Users\\foo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.24\\src\\lib.rs:593\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nthread 'main' has overflowed its stack\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1497352898, "creation_date": 1497352898, "answer_id": 44520107, "question_id": 44519975, "link": "https://stackoverflow.com/questions/44519975/does-rust-support-using-an-infix-operator-as-a-function/44520107#44520107", "title": "Does Rust support using an infix operator as a function?", "body": "<p>No. The <code>*</code> operator is implemented in <code>std::Ops::Mul</code>, but it can't be used directly:</p>\n\n<pre><code>use std::ops::Mul::mul;\n\nfn main() {\n    let v1 = vec![1, 2, 3];\n    let v2 = vec![1, 2, 3];\n\n    println!(\"{:?}\", v1.iter().zip(v2).map(|(x, y)| mul).collect());\n}\n</code></pre>\n\n<p>Will result in the following error:</p>\n\n<pre><code>error[E0253]: `mul` is not directly importable\n --&gt; &lt;anon&gt;:1:5\n  |\n1 | use std::ops::Mul::mul;\n  |     ^^^^^^^^^^^^^^^^^^ cannot be imported directly\n</code></pre>\n\n<p>You could introduce your own function using the <code>*</code> operator, but there wouldn't be much added value :).</p>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 13, "last_activity_date": 1497353367, "last_edit_date": 1497353367, "creation_date": 1497353021, "answer_id": 44520144, "question_id": 44519975, "link": "https://stackoverflow.com/questions/44519975/does-rust-support-using-an-infix-operator-as-a-function/44520144#44520144", "title": "Does Rust support using an infix operator as a function?", "body": "<p>Nnn<em>yes</em>.  Sorta kinda not really.</p>\n\n<p>You can't write an operator as a name.  But most operators are backed by traits, and you <em>can</em> write the name of those, so <code>a * b</code> is effectively <code>Mul::mul(a, b)</code>, and you can pass <code>Mul::mul</code> as a function pointer.</p>\n\n<p>But that doesn't help in this case because <code>Iterator::map</code> is expecting a <code>FnMut((A, B)) -&gt; C</code>, and the binary operators all implement <code>FnMut(A, B) -&gt; C</code>.</p>\n\n<p>Now, you <em>could</em> write an adapter for this, but you'd need one for every combination of arity and mutability.  <em>And</em> you'd have to eat a heap allocation and indirection <em>or</em> require a nightly compiler.</p>\n\n<p>Or, you could write your own version of <code>Iterator::map</code> on an extension trait that accepts higher arity functions for iterators of tuples... again, one for each arity...</p>\n\n<p>Honestly, it's simpler to just use a closure.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 9, "last_activity_date": 1497353187, "creation_date": 1497353187, "answer_id": 44520206, "question_id": 44519975, "link": "https://stackoverflow.com/questions/44519975/does-rust-support-using-an-infix-operator-as-a-function/44520206#44520206", "title": "Does Rust support using an infix operator as a function?", "body": "<p>Rust does not have any syntax to pass infix operators, mostly because it is redundant anyway.</p>\n\n<p>In Rust, each operator maps to a trait: <code>*</code> maps to the <code>std::ops::Mul</code> trait, for example.</p>\n\n<p>Therefore, using <code>*</code> directly should be using <code>std::ops::Mul::mul</code>:</p>\n\n<pre><code>xs.iter().zip(ys).map(Mul::mul).sum();\n</code></pre>\n\n<p>However there are several difficulties:</p>\n\n<ol>\n<li>Generally, iterators yield references while <code>Mul</code> is implemented for plain values, </li>\n<li><code>Mul::mul</code> expects two arguments, <code>xs.zip(ys)</code> yields a single element (a tuple of two elements).</li>\n</ol>\n\n<p>So, you need to go from reference to value and then \"unpack\" the tuple and... it ends up being shorter to use a closure.</p>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 772, "favorite_count": 0, "accepted_answer_id": 44520144, "answer_count": 3, "score": 6, "last_activity_date": 1497357754, "creation_date": 1497352520, "last_edit_date": 1497357754, "question_id": 44519975, "link": "https://stackoverflow.com/questions/44519975/does-rust-support-using-an-infix-operator-as-a-function", "title": "Does Rust support using an infix operator as a function?", "body": "<p>I am writing a function that does piecewise multiplication of two arrays.</p>\n\n<pre><code>    xs.iter()\n        .zip(ys).map(|(x, y)| x * y)\n        .sum()\n</code></pre>\n\n<p>In some other languages, I can pass <code>(*)</code> as a function to <code>map</code>. Does Rust have this feature?</p>\n"}, {"tags": ["rust", "traits", "mutability"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1497351694, "post_id": 44519479, "comment_id": 76030987, "body": "On a side note, <code>self.vars.iter_mut().rev().next().unwrap()</code> is a one-liner for what you&#39;re doing there, which does no indexing. :)"}, {"owner": {"reputation": 3400, "user_id": 1055398, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f206b0db3be9d8840483035b45f1312f?s=128&d=identicon&r=PG", "display_name": "lfxgroove", "link": "https://stackoverflow.com/users/1055398/lfxgroove"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497352735, "post_id": 44519479, "comment_id": 76031689, "body": "Coolio, didn&#39;t think of that. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 3400, "user_id": 1055398, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f206b0db3be9d8840483035b45f1312f?s=128&d=identicon&r=PG", "display_name": "lfxgroove", "link": "https://stackoverflow.com/users/1055398/lfxgroove"}, "edited": false, "score": 0, "creation_date": 1497352469, "post_id": 44519573, "comment_id": 76031513, "body": "Thanks a heap, I&#39;ll go with that then!"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1497351478, "creation_date": 1497351478, "answer_id": 44519573, "question_id": 44519479, "link": "https://stackoverflow.com/questions/44519479/returning-mutable-reference-when-self-is-mutable-otherwise-reference/44519573#44519573", "title": "Returning mutable reference when self is mutable, otherwise reference", "body": "<p>You cannot have a single function to achieve that. However, it is actually conventional (and recommended by the <a href=\"https://github.com/brson/rust-api-guidelines#ownership-suffixes-use-_mut-_ref-c-own-suffix\" rel=\"noreferrer\">API guidelines</a>) to have <code>_mut</code> variants of the same function for that purpose:</p>\n\n<pre><code>pub fn scope(&amp;self) -&gt; &amp;HashMap&lt;String, Type&gt; {\n    let idx = self.vars.len() - 1;\n    &amp;self.vars[idx]\n}\n\npub fn scope_mut(&amp;mut self) -&gt; &amp;mut HashMap&lt;String, Type&gt; {\n    let idx = self.vars.len() - 1;\n    &amp;mut self.vars[idx]\n}\n</code></pre>\n"}], "owner": {"reputation": 3400, "user_id": 1055398, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f206b0db3be9d8840483035b45f1312f?s=128&d=identicon&r=PG", "display_name": "lfxgroove", "link": "https://stackoverflow.com/users/1055398/lfxgroove"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 634, "favorite_count": 0, "closed_date": 1497357712, "accepted_answer_id": 44519573, "answer_count": 1, "score": 1, "last_activity_date": 1497357675, "creation_date": 1497351228, "last_edit_date": 1497357675, "question_id": 44519479, "link": "https://stackoverflow.com/questions/44519479/returning-mutable-reference-when-self-is-mutable-otherwise-reference", "closed_reason": "Duplicate", "title": "Returning mutable reference when self is mutable, otherwise reference", "body": "<p>I have the following snippet of Rust:</p>\n\n<pre><code>pub fn scope(&amp;mut self) -&gt; &amp;mut HashMap&lt;String, Type&gt; {\n    let idx = self.vars.len() - 1;\n    &amp;mut self.vars[idx]\n}\n</code></pre>\n\n<p>I've realized that I have some contexts where I would like to use this function with a non-mutable version of the function e.g.:</p>\n\n<pre><code>pub fn scope(&amp;self) -&gt; &amp;HashMap&lt;String, Type&gt; {\n    let idx = self.vars.len() - 1;\n    &amp;self.vars[idx]\n}\n</code></pre>\n\n<p>There's only 3 <code>mut</code>s removed between the two functions. Can I somehow turn these into one function that derives the mutability of my returned reference depending on the mutability of <code>self</code>? Is there perhaps some kind of trait I can make use of or similar?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497339361, "post_id": 44512523, "comment_id": 76022584, "body": "I think the best way is to use trait. Define the contracts (with callbacks, eg) and then no matter what is the data implementing the trait."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497340458, "post_id": 44512523, "comment_id": 76023294, "body": "<code>Box&lt;Any&gt;</code> will solve the dispatching part easily, but serialization is definitely trickier. I am not sure serde covers the requirements; you may need to invest into your own serialization system (and have a registry of deserialization functions to dispatch to based on the &quot;tag&quot; of the concrete type)."}], "owner": {"reputation": 1618, "user_id": 3308630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c0ede3156d320fef148bcc75a52e3e9?s=128&d=identicon&r=PG", "display_name": "Carter Sande", "link": "https://stackoverflow.com/users/3308630/carter-sande"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 328, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1497328865, "creation_date": 1497328865, "question_id": 44512523, "link": "https://stackoverflow.com/questions/44512523/how-can-i-create-an-enum-like-type-whose-variants-are-defined-by-multiple-crates", "title": "How can I create an enum-like type whose variants are defined by multiple crates?", "body": "<p>I'm working on a system that generates and processes I/O events. I would like to do this by creating \"filters\" that handle the events they understand and forward all others to a fallback filter. For example, a console output crate could define <code>PrintString</code> and <code>SetColor</code> events and expose a <code>ConsoleOutputFilter</code>:</p>\n\n<pre><code>// pseudo-Rust for an event filter\nimpl&lt;Fallback: EventFilter&gt; EventFilter for ConsoleOutputFilter&lt;Fallback&gt; {\n    fn handle(evt: Event) {\n        match evt {\n            PrintString(str) =&gt; print!(\"{}\", str),\n            SetColor(r, g, b) =&gt; { /* somehow change the text color */ },\n            _ =&gt; Fallback::handle(evt)\n        }\n    }\n}\n</code></pre>\n\n<p>If <code>ConsoleOutputFilter</code> receives any other kind of event (say, an <code>AlertBox</code> event defined by a GUI crate), it would just ignore it and pass it to the next event filter in the chain.</p>\n\n<p>This seems like a reasonable design, but I'm unsure how to define the <code>Event</code> type. Using an enum seemed like a reasonable choice at first, but that would mean that I'd have to define all possible events in a single crate instead of splitting them into multiple packages.</p>\n\n<p><a href=\"https://stackoverflow.com/a/39003567/3308630\">An answer to a similar question</a> suggested using trait objects, but I'm not sure how I would handle the fact that each event type could have a different associated data type. I'd also like to be able to serialize/deserialize events (e.g. to send them over the network), and that doesn't seem to be possible with trait objects.</p>\n\n<p>In Rust, is there a way to create a type that behaves sort of like an enum with associated data, but whose variants can be defined in multiple crates?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1497327423, "post_id": 44511030, "comment_id": 76017180, "body": "There&#39;s an example implementation in <a href=\"https://rosettacode.org/wiki/Y_combinator#Rust\" rel=\"nofollow noreferrer\">Rosetta Code</a>; it uses a Haskellish approach with a <code>Mu</code> helper type."}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 284, "favorite_count": 0, "closed_date": 1497357160, "answer_count": 0, "score": 1, "last_activity_date": 1497779951, "creation_date": 1497317529, "last_edit_date": 1497779951, "question_id": 44511030, "link": "https://stackoverflow.com/questions/44511030/how-to-implement-the-y-combinator-in-rust", "closed_reason": "Duplicate", "title": "How to implement the Y combinator in Rust?", "body": "<p>I wanted to implement the <a href=\"https://en.wikipedia.org/wiki/Fixed-point_combinator#Fixed_point_combinators_in_lambda_calculus\" rel=\"nofollow noreferrer\">Y combinator</a> in Rust:</p>\n\n<pre><code>trait Loop&lt;T&gt;: Fn(&amp;Self) -&gt; T {}\n\nimpl&lt;T&gt; Loop&lt;T&gt; for Fn(&amp;Loop&lt;T&gt;) -&gt; T {}\n\nfn main() {\n    let y = |f| { |w| { w(w) }(|w| f(w(w))) };\n}\n</code></pre>\n\n<p>My first target is just to make the code compile, so I am ignoring the call-by-name issue here. Compiling output from <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.19.0-nightly (e2eaef849 2017-06-11)\nerror[E0038]: the trait `Loop` cannot be made into an object\n --&gt; &lt;anon&gt;:4:25\n  |\n4 | impl&lt;T&gt; Loop&lt;T&gt; for Fn(&amp;Loop&lt;T&gt;) -&gt; T {\n  |                         ^^^^^^^ the trait `Loop` cannot be made into an object\n  |\n  = note: the trait cannot use `Self` as a type parameter in the supertraits or where-clauses\n</code></pre>\n\n<p>I understand why I run into trouble, but how can I fix and make it compile?</p>\n\n<p><strong>Update</strong></p>\n\n<p>This question is not a duplication of the linked question, as this question is about writing the Y combinator, not just a simple fix point function. Actually, none of the answers posted there are about writing a fix point function, not a combinator. A combinator must be fully implemented in closures any not using any direct recursion.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 3416, "user_id": 2484972, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ea1c4b2c5aa3c7da2f2740bc1a643ee0?s=128&d=identicon&r=PG", "display_name": "Tatsuyuki Ishi", "link": "https://stackoverflow.com/users/2484972/tatsuyuki-ishi"}, "edited": false, "score": 0, "creation_date": 1497314235, "post_id": 44510445, "comment_id": 76014282, "body": "It seems it simply doesn&#39;t live long enough. You probably need a struct that stores the String somewhere else (instead of just taking a slice)."}, {"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "reply_to_user": {"reputation": 3416, "user_id": 2484972, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ea1c4b2c5aa3c7da2f2740bc1a643ee0?s=128&d=identicon&r=PG", "display_name": "Tatsuyuki Ishi", "link": "https://stackoverflow.com/users/2484972/tatsuyuki-ishi"}, "edited": false, "score": 0, "creation_date": 1497314374, "post_id": 44510445, "comment_id": 76014304, "body": "I would be happy to stop using <code>Box</code> if that makes the problem easier to solve."}], "answers": [{"tags": [], "owner": {"reputation": 655, "user_id": 4064661, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b64710b9285fc7793b9b782252073c29?s=128&d=identicon&r=PG", "display_name": "breeden", "link": "https://stackoverflow.com/users/4064661/breeden"}, "is_accepted": false, "score": 2, "last_activity_date": 1497316616, "last_edit_date": 1497316616, "creation_date": 1497316104, "answer_id": 44510870, "question_id": 44510445, "link": "https://stackoverflow.com/questions/44510445/borrowed-value-not-living-long-enough-bufreader-lines-to-iterator-of-string/44510870#44510870", "title": "Borrowed value not living long enough (BufReader lines() to iterator of String)", "body": "<p>One issue is that <code>.split_whitespace()</code> takes a reference, and doesn't own its content.  So when you try to construct a <code>SplitWhitespace</code> object  with an owned owned object (this happens when you call <code>.map(|s| tokens_from_str(&amp;s))</code>), the string <code>s</code> is dropped while <code>SplitWhitespace</code> is still trying to reference it.  I wrote a quick fix to this by creating a struct that takes ownership of the <code>String</code> and yields a <code>SplitWhitespace</code> on demand.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\nuse std::iter::IntoIterator;\nuse std::str::SplitWhitespace;\n\npub struct SplitWhitespaceOwned(String);\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a SplitWhitespaceOwned {\n    type Item = &amp;'a str;\n    type IntoIter = SplitWhitespace&lt;'a&gt;;\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.0.split_whitespace()\n    }\n}\n\n// Returns an iterator of an iterator. The use case is a very large file where\n// each line is very long. The outer iterator goes over the file's lines.\n// The inner iterator returns the words of each line.\npub fn tokens_from_path&lt;P&gt;(path_arg: P) -&gt; Box&lt;Iterator&lt;Item = SplitWhitespaceOwned&gt;&gt;\n    where P: AsRef&lt;Path&gt;\n{\n    let reader = reader_from_path(path_arg);\n    let iter = reader\n        .lines()\n        .filter_map(|result| result.ok())\n        .map(|s| SplitWhitespaceOwned(s));\n    Box::new(iter)\n}\n\nfn reader_from_path&lt;P&gt;(path_arg: P) -&gt; BufReader&lt;File&gt;\n    where P: AsRef&lt;Path&gt;\n{\n    let path = path_arg.as_ref();\n    let file = File::open(path).unwrap();\n    BufReader::new(file)\n}\n\nfn main() {\n    let t = tokens_from_path(\"test.txt\");\n\n    for line in t {\n        for word in &amp;line {\n            println!(\"{}\", word);\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "edited": false, "score": 0, "creation_date": 1497389076, "post_id": 44514297, "comment_id": 76055261, "body": "Thanks for this comment; I appreciate the spirit of it. That said, given the format of stack overflow, this content, as currently written, doesn&#39;t squarely answer the original question. (Sorry to be a stickler, but I think the SO format is important to structure the content.)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "edited": false, "score": 0, "creation_date": 1497428317, "post_id": 44514297, "comment_id": 76069123, "body": "@DavidJ.: I added a comment that I am challenging the frame of the question to make it more obvious that it&#39;s slightly different. I think it&#39;s important to consider alternatives in the design; and one alternative is to avoid intermediate owning structures (in this case, by having a single owning structure with intermediates only using slices)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1497428214, "last_edit_date": 1497428214, "creation_date": 1497336840, "answer_id": 44514297, "question_id": 44510445, "link": "https://stackoverflow.com/questions/44510445/borrowed-value-not-living-long-enough-bufreader-lines-to-iterator-of-string/44514297#44514297", "title": "Borrowed value not living long enough (BufReader lines() to iterator of String)", "body": "<p><strong>Disclaimer: Frame Challenge</strong></p>\n\n<p>When dealing with huge files, the simplest solution is to use <a href=\"https://stackoverflow.com/questions/28516996/how-to-create-and-write-to-memory-mapped-files\">Memory Mapped Files</a>.</p>\n\n<p>That is, you tell the OS that you want the whole file to be accessible in memory, and it's up to it to deal with paging parts of the file in and out of memory.</p>\n\n<p>Once this is down, then your whole file is accessible as a <code>&amp;[u8]</code> or <code>&amp;str</code> (at your convenience), and you can trivially access slices of it.</p>\n\n<p>It may not always be the fastest solution; it certainly is the easiest.</p>\n"}, {"tags": [], "owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "is_accepted": false, "score": 0, "last_activity_date": 1497497629, "creation_date": 1497497629, "answer_id": 44558074, "question_id": 44510445, "link": "https://stackoverflow.com/questions/44510445/borrowed-value-not-living-long-enough-bufreader-lines-to-iterator-of-string/44558074#44558074", "title": "Borrowed value not living long enough (BufReader lines() to iterator of String)", "body": "<p>The problem here is that you do use <code>to_string()</code> to turn each item into an owned value, this is done lazily. Since it's lazy, the value before to_string is used (a <code>&amp;str</code>) still exists in the returned iterator's state, and thus is invalid (since the source String is dropped as soon as your <code>map</code> closure returns).</p>\n\n<h2>Naive solution</h2>\n\n<p>The simplest solution here is to remove the lazy evaluation for that part of the iterator, and simply allocate all tokens as soon as the line is allocated. This will not be as fast, and will involve an additional allocation, but has minimal changes from your current function, and keeps the same signature:</p>\n\n<pre><code>// Returns an iterator of an iterator. The use case is a very large file where\n// each line is very long. The outer iterator goes over the file's lines.\n// The inner iterator returns the words of each line.\npub fn tokens_from_path&lt;P&gt;(path_arg: P) -&gt; BoxIter&lt;BoxIter&lt;String&gt;&gt;\nwhere\n    P: AsRef&lt;Path&gt;\n{\n    let reader = reader_from_path(path_arg);\n    let iter = reader.lines()\n        .filter_map(|result| result.ok())\n        .map(|s| {\n            let collected = tokens_from_str(&amp;s).collect::&lt;Vec&lt;_&gt;&gt;();\n\n            Box::new(collected.into_iter()) as Box&lt;Iterator&lt;Item=String&gt;&gt;\n        });\n\n    Box::new(iter)\n}\n</code></pre>\n\n<p>This solution will be fine for any small workload, and it will only allocate about twice as much memory for the line at the same time. There's a performance penalty, but unless you have 10mb+ lines, it probably won't matter.</p>\n\n<p>If you do choose this solution, I'd recommend changing the function signature of <code>tokens_from_path</code> to directly return a <code>BoxIter&lt;String&gt;</code>:</p>\n\n<pre><code>pub fn tokens_from_path&lt;P&gt;(path_arg: P) -&gt; BoxIter&lt;String&gt;\nwhere\n    P: AsRef&lt;Path&gt;\n{\n    let reader = reader_from_path(path_arg);\n    let iter = reader.lines()\n        .filter_map(|result| result.ok())\n        .flat_map(|s| {\n            let collected = tokens_from_str(&amp;s).collect::&lt;Vec&lt;_&gt;&gt;();\n\n            Box::new(collected.into_iter()) as Box&lt;Iterator&lt;Item=String&gt;&gt;\n        });\n\n    Box::new(iter)\n}\n</code></pre>\n\n<h2>Alternative: decouple <code>tokens_from_path</code> and <code>tokens_from_str</code></h2>\n\n<p>The original code doesn't work because you are trying to return borrows to a String which you don't return.</p>\n\n<p>We can fix that by returning the String instead - just hidden behind an opaque API. This is pretty similar to <a href=\"https://stackoverflow.com/questions/44510445/borrowed-value-not-living-long-enough-bufreader-lines-to-iterator-of-string/44510870#44510870\">breeden's solution</a>, but slightly different in execution.</p>\n\n<pre><code>use std::fs::{File};\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\n\ntype BoxIter&lt;T&gt; = Box&lt;Iterator&lt;Item=T&gt;&gt;;\n\n/// Structure representing in our code a line, but with an opaque API surface.\npub struct TokenIntermediate(String);\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a TokenIntermediate {\n    type Item = String;\n    type IntoIter = Box&lt;Iterator&lt;Item=String&gt; + 'a&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        // delegate to tokens_from_str\n        tokens_from_str(&amp;self.0)\n    }\n}\n\nfn tokens_from_str&lt;'a&gt;(text: &amp;'a str) -&gt; Box&lt;Iterator&lt;Item=String&gt; + 'a&gt; {\n    Box::new(text.lines().flat_map(|s|\n        s.split_whitespace().map(|s| s.to_string())\n    ))\n}\n\n// Returns an iterator of an iterator. The use case is a very large file where\n// each line is very long. The outer iterator goes over the file's lines.\n// The inner iterator returns the words of each line.\npub fn token_parts_from_path&lt;P&gt;(path_arg: P) -&gt; BoxIter&lt;TokenIntermediate&gt;\nwhere\n    P: AsRef&lt;Path&gt;\n{\n    let reader = reader_from_path(path_arg);\n    let iter = reader.lines()\n        .filter_map(|result| result.ok())\n        .map(|s| TokenIntermediate(s));\n\n    Box::new(iter)\n}\n\nfn reader_from_path&lt;P&gt;(path_arg: P) -&gt; BufReader&lt;File&gt;\nwhere P: AsRef&lt;Path&gt; {\n    let path = path_arg.as_ref();\n    let file = File::open(path).unwrap();\n    BufReader::new(file)\n}\n</code></pre>\n\n<p>As you notice, there's no difference to <code>tokens_from_str</code>, and <code>tokens_from_path</code> just returns this opaque <code>TokenIntermediate</code> struct. This will be just as usable as your original solution, all it does is push the ownership of your intermediate <code>String</code> values onto the caller, so they can iterate the tokens in them.</p>\n"}], "owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 1, "answer_count": 3, "score": 3, "last_activity_date": 1497497629, "creation_date": 1497312332, "question_id": 44510445, "link": "https://stackoverflow.com/questions/44510445/borrowed-value-not-living-long-enough-bufreader-lines-to-iterator-of-string", "title": "Borrowed value not living long enough (BufReader lines() to iterator of String)", "body": "<p>With this sample code:</p>\n\n<pre><code>use std::fs::{File};\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\n\ntype BoxIter&lt;T&gt; = Box&lt;Iterator&lt;Item=T&gt;&gt;;\n\nfn tokens_from_str&lt;'a&gt;(text: &amp;'a str) \n-&gt; Box&lt;Iterator&lt;Item=String&gt; + 'a&gt; {\n    Box::new(text.lines().flat_map(|s|\n        s.split_whitespace().map(|s| s.to_string())\n    ))\n}\n\n// Returns an iterator of an iterator. The use case is a very large file where\n// each line is very long. The outer iterator goes over the file's lines.\n// The inner iterator returns the words of each line.\npub fn tokens_from_path&lt;P&gt;(path_arg: P) \n-&gt; BoxIter&lt;BoxIter&lt;String&gt;&gt;\nwhere P: AsRef&lt;Path&gt; {\n    let reader = reader_from_path(path_arg);\n    let iter = reader.lines()\n        .filter_map(|result| result.ok())\n        .map(|s| tokens_from_str(&amp;s));\n    Box::new(iter)\n}\n\nfn reader_from_path&lt;P&gt;(path_arg: P) -&gt; BufReader&lt;File&gt;\nwhere P: AsRef&lt;Path&gt; {\n    let path = path_arg.as_ref();\n    let file = File::open(path).unwrap();\n    BufReader::new(file)\n}\n</code></pre>\n\n<p>I get this compiler error message:</p>\n\n<pre><code>rustc 1.18.0 (03fc9d622 2017-06-06)\nerror: `s` does not live long enough\n  --&gt; &lt;anon&gt;:23:35\n   |\n23 |         .map(|s| tokens_from_str(&amp;s));\n   |                                   ^- borrowed value only lives until here\n   |                                   |\n   |                                   does not live long enough\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>My questions are:</p>\n\n<ul>\n<li><p>How can this be fixed (without changing the function signatures, if possible?)</p></li>\n<li><p>Any suggestions on better function arguments and return values?</p></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497311341, "post_id": 44510079, "comment_id": 76013584, "body": "That is a duplicate of <a href=\"https://stackoverflow.com/q/35009015/1233251\">stackoverflow.com/q/35009015/1233251</a>, except that the answer is outdated. I think I should make an updated answer there instead of replicating information here."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497312196, "post_id": 44510079, "comment_id": 76013811, "body": "Please see my answer <a href=\"https://stackoverflow.com/a/44510388/1233251\">here</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 8151500, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c5f98978476e4776298e566e02278dd1?s=128&d=identicon&r=PG&f=1", "display_name": "pj5634", "link": "https://stackoverflow.com/users/8151500/pj5634"}, "is_accepted": false, "score": 0, "last_activity_date": 1497442769, "last_edit_date": 1497442769, "creation_date": 1497327567, "answer_id": 44512322, "question_id": 44510079, "link": "https://stackoverflow.com/questions/44510079/how-do-i-ensure-memory-accesses-to-a-memory-mapped-peripheral-are-volatile/44512322#44512322", "title": "How do I ensure memory accesses to a memory-mapped peripheral are volatile?", "body": "<p>The best I know how to do is to use something akin to the volatile_cell library from Zinc. The structure for the memory-mapped peripheral registers has <code>VolatileCell&lt;u32&gt;</code>-typed registers rather than plain <code>u32</code>. <code>VolatileCell</code> wraps a value, has the same size, and provides accessors which use <code>core::ptr::read_volatile</code> and <code>core::ptr::write_volatile</code>. Stripped down to its essentials, <code>VolatileCell</code> looks like this:</p>\n\n<pre><code>#[repr(C)]\npub struct VolatileCell&lt;T&gt; {\n    value: T,\n}\n\nimpl&lt;T&gt; VolatileCell&lt;T&gt; {\n\n    /// Get register value.\n    #[inline]\n    pub fn get(&amp;self) -&gt; T {\n        unsafe {\n            read_volatile(&amp;self.value)\n        }\n    }\n\n    /// Set register value.\n    #[inline]\n    pub fn set(&amp;self, value: T) {\n        unsafe {\n            write_volatile(&amp;self.value as *const T as *mut T, value)\n        }\n    }\n}\n</code></pre>\n\n<p>And then the peripheral register structure is written using <code>VolatileCell&lt;u32&gt;</code> fields:</p>\n\n<pre><code>#[repr(C)]\nstruct Periph {\n    sr: VolatileCell&lt;u32&gt;, /* Status  */\n    cr: VolatileCell&lt;u32&gt;, /* Control */\n    dr: VolatileCell&lt;u32&gt;, /* Data    */\n}\n\nconst PERIPH1: *mut Periph = 0x10001200 as *mut Periph;\nconst PERIPH2: *mut Periph = 0x10001400 as *mut Periph;\n\nfn useperiph(p: &amp;mut Periph) -&gt; i32 {\n    p.cr.set(CR_CONSTANT);\n    if p.cr.get() != CR_CONSTANT {\n        /* Peripheral was not enabled */\n        return -1;\n    }\n\n    /* Loop a few micro seconds until ready */\n    while p.sr.get() != SR_CONSTANT {}\n\n    p.dr.set(DATA1);\n    p.dr.set(DATA2);\n    p.dr.set(DATA3);\n    0\n}\n</code></pre>\n\n<p>The resulting code has the correct semantics, and is only slightly more verbose than using <code>u32</code> directly. Being explicit is arguably an upside.</p>\n"}], "owner": {"reputation": 1, "user_id": 8151500, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c5f98978476e4776298e566e02278dd1?s=128&d=identicon&r=PG&f=1", "display_name": "pj5634", "link": "https://stackoverflow.com/users/8151500/pj5634"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 117, "favorite_count": 0, "closed_date": 1497336063, "answer_count": 1, "score": 0, "last_activity_date": 1497442769, "creation_date": 1497309728, "last_edit_date": 1497357534, "question_id": 44510079, "link": "https://stackoverflow.com/questions/44510079/how-do-i-ensure-memory-accesses-to-a-memory-mapped-peripheral-are-volatile", "closed_reason": "Duplicate", "title": "How do I ensure memory accesses to a memory-mapped peripheral are volatile?", "body": "<p>In embedded programming, a memory-mapped peripheral can be accessed through a structure placed at the correct address. How do I ensure memory accesses to the peripheral are indeed performed on the bus in Rust? In C, this would be done by making the variable or fields <code>volatile</code>.</p>\n\n<p>Consider this example:</p>\n\n<pre><code>#[repr(C)]\nstruct Periph {\n    sr: u32, /* Status  */\n    cr: u32, /* Control */\n    dr: u32, /* Data    */\n}\n\nconst PERIPH1: *mut Periph = 0x10001200 as *mut Periph;\nconst PERIPH2: *mut Periph = 0x10001400 as *mut Periph;\n\nfn useperiph(p: &amp;mut Periph) -&gt; i32 {\n    p.cr = CR_CONSTANT;\n    if p.cr != CR_CONSTANT {\n        /* Peripheral was not enabled */\n        return -1;\n    }\n\n    /* Loop a few micro seconds until ready */\n    while p.sr != SR_CONSTANT {}\n\n    /* Write values to hardware FIFO */\n    p.dr = DATA1;\n    p.dr = DATA2;\n    p.dr = DATA3;\n    0\n}\n</code></pre>\n\n<p>I need to ensure that the compiler won't remove the check on the control register, will leave all loads of the status register, and won't collapse the  three stores to the data register. How do I do that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497296104, "post_id": 44507359, "comment_id": 76008076, "body": "Welcome to Stack Overflow! Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and <b>the shortest code necessary to reproduce it in the question itself</b>. Otherwise, your question is likely to be closed as <a href=\"https://stackoverflow.com/help/on-topic\"><i>off-topic</i></a>."}, {"owner": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497300598, "post_id": 44507359, "comment_id": 76010199, "body": "My expectation is that par_iter() &quot;behaves&quot; the same as &quot;iter()&quot; or an advise to achieve similar behavior."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 5, "creation_date": 1497303524, "post_id": 44507359, "comment_id": 76011438, "body": "@SergeRobyns Please read <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a> and <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "edited": false, "score": 0, "creation_date": 1497447035, "post_id": 44523647, "comment_id": 76083057, "body": "It&#39;s getting better. AMove has copy and clone for sure:     #[derive(Debug, Copy, Clone)]     struct AMove {         column: usize,         board: Board,         score: i32,         cumulative_score: i32,         cumulative_moves: i32,     }  Nevertheless I tried to use your version of par_iter and I&#39;m now getting a different kind of error.  The doc isn&#39;t helping much with my situation.  The error is hinting that I need to &quot;fold&quot; the results of fold, as much as the doc states the same, however the doc is using a sum function as an example and I  don&#39;t need it."}, {"owner": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "edited": false, "score": 0, "creation_date": 1497447673, "post_id": 44523647, "comment_id": 76083598, "body": "the_move = moves.par_iter().fold(|| the_move, accumlator); expected enum <code>std::option::Option</code>, found struct <code>rayon::iter::Fold</code>"}, {"owner": {"reputation": 411, "user_id": 530413, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e162a4d4206cc9e289dd87b817686c?s=128&d=identicon&r=PG", "display_name": "cristicbz", "link": "https://stackoverflow.com/users/530413/cristicbz"}, "reply_to_user": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "edited": false, "score": 0, "creation_date": 1497479490, "post_id": 44523647, "comment_id": 76101911, "body": "Did you try using reduce instead? Fold will give you another iterator of results, that you can then merge manually somehow (eg with reduce). If the accumulator is associative and returns AMove, then you should definitely use reduce rather than fold."}, {"owner": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "edited": false, "score": 0, "creation_date": 1497643285, "post_id": 44523647, "comment_id": 76182474, "body": "Based on all your inputs and an example in the Rayon demo, I&#39;m now using par_iter(...).fold(| | ..).redeuce(| | ...) and it works."}], "tags": [], "owner": {"reputation": 411, "user_id": 530413, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e162a4d4206cc9e289dd87b817686c?s=128&d=identicon&r=PG", "display_name": "cristicbz", "link": "https://stackoverflow.com/users/530413/cristicbz"}, "is_accepted": false, "score": 3, "last_activity_date": 1497362393, "last_edit_date": 1497362393, "creation_date": 1497362150, "answer_id": 44523647, "question_id": 44507359, "link": "https://stackoverflow.com/questions/44507359/failed-to-transform-iter-fold-into-rayons-par-iter-fold/44523647#44523647", "title": "Failed to transform iter().fold(....) into Rayon&#39;s par_iter().fold(....)", "body": "<p>Rayon's <code>fold</code> wants a function which produces an identity element, rather than a single base element. In your case, if <code>AMove</code> is <code>Copy + Send + Sync</code>, simply doing <code>moves.par_iter().fold(|| the_move, accumlator)</code> should be good enough.</p>\n\n<p>If <code>AMove</code> is not <code>Copy</code>, use <code>|| the_move.clone()</code>.</p>\n\n<p>Rayon may want to produce multiple identity elements to do different chunks in parallel and only merge the results at the end, that's why it needs be able to produce as many identity elements as it needs.</p>\n\n<p>Check <code>fold</code>'s <a href=\"https://docs.rs/rayon/0.7.1/rayon/iter/trait.ParallelIterator.html#method.fold\" rel=\"nofollow noreferrer\">signature</a>. Furthermore, if your accumulator returns the same type as the identity element, you probably want to use <code>reduce</code> instead (see linked docs for differences).</p>\n\n<p>A different problem is that you can't use recursive closures the way you're trying to (Rust just can't do that). Use a named function for your accumulator instead. </p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1497876498, "creation_date": 1497876498, "answer_id": 44631040, "question_id": 44507359, "link": "https://stackoverflow.com/questions/44507359/failed-to-transform-iter-fold-into-rayons-par-iter-fold/44631040#44631040", "title": "Failed to transform iter().fold(....) into Rayon&#39;s par_iter().fold(....)", "body": "<p>The solution lies in using <code>reduce</code> on the resulting <code>fold</code>.  Thanks for hinting me.  I finally found an example in the Rayon demo that paved the way to the solution for my case.  Here is the the way for future references.</p>\n\n<pre><code>moves.par_iter()\n     .fold(|| None, accumlator)\n     .reduce(|| None, |previous: Option&lt;AMove&gt;, a_move: Option&lt;AMove&gt;| {\n        if let Some(a_move) = a_move {\n            Some(select_move(&amp;previous, &amp;a_move, player))\n        } else {\n            previous\n        }\n    })\n</code></pre>\n\n<p>The most puzzling error was the initial one that came because I was using <code>fold(a,b)</code> instead of <code>fold(|| a,b)</code>, which complained about <code>Fn</code> and <code>FnOnce</code> and left me clueless.</p>\n"}], "owner": {"reputation": 11, "user_id": 7871985, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ddyDrPGNPqw/AAAAAAAAAAI/AAAAAAAACGY/dPDx5nwb_eg/photo.jpg?sz=128", "display_name": "Serge Robyns", "link": "https://stackoverflow.com/users/7871985/serge-robyns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1143, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1497876498, "creation_date": 1497295868, "last_edit_date": 1497876446, "question_id": 44507359, "link": "https://stackoverflow.com/questions/44507359/failed-to-transform-iter-fold-into-rayons-par-iter-fold", "title": "Failed to transform iter().fold(....) into Rayon&#39;s par_iter().fold(....)", "body": "<p>I'm trying to use <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a> to initiate a series of top level threads to call a simulation function recursively.  The code works when using channel send &amp; receive so it is multi-threading compatible, but it fails to compile with <code>par_iter()</code>.</p>\n\n<pre><code>fn simulate(initial_board: &amp;Board, player: Player, level: u32, start: bool) -&gt; Option&lt;AMove&gt; {\n...\n\n    #[inline(always)]\n    fn evaluate_move(previous: Option&lt;AMove&gt;, new_move: &amp;AMove, new_score: i32, player: Player) -&gt; AMove {\n    ...\n    }\n\n... \n\nlet accumlator = |previous: Option&lt;AMove&gt;, a_move: &amp;Option&lt;AMove&gt;| if let Some(AMove { board: ref a_board, .. }) = *a_move {\n        ...\n    } else {\n        previous\n    };\n\n    if start &amp;&amp; !winning {\n        the_move = moves.par_iter().fold(the_move, accumlator);\n    } else {\n        the_move = moves.iter().fold(the_move, accumlator);\n    }\n\n    the_move\n}\n</code></pre>\n\n<p>I get a compiler error on the line with par_iter() and I'm lost on how to fix these.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::option::Option&lt;AMove&gt;: std::ops::Fn&lt;()&gt;` is not satisfied\n   --&gt; src/main.rs:271:37    \n    |\n271 |         the_move = moves.par_iter().fold(the_move, accumlator);\n    |                                     ^^^^ the trait `std::ops::Fn&lt;()&gt;` is not implemented for `std::option::Option&lt;AMove&gt;`\n\nerror[E0277]: the trait bound `std::option::Option&lt;AMove&gt;: std::ops::FnOnce&lt;()&gt;` is not satisfied\n   --&gt; src/main.rs:271:37\n    |\n271 |         the_move = moves.par_iter().fold(the_move, accumlator);\n    |                                     ^^^^ the trait `std::ops::FnOnce&lt;()&gt;` is not implemented for `std::option::Option&lt;AMove&gt;`\n\nerror[E0308]: mismatched types\n   --&gt; src/main.rs:271:20\n    |\n271 |         the_move = moves.par_iter().fold(the_move, accumlator);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        expected enum `std::option::Option`, found struct `rayon::iter::Fold`\n    |\n    = note: expected type `std::option::Option&lt;_&gt;`\n               found type `rayon::iter::Fold&lt;rayon::slice::Iter&lt;'_, std::option::Option&lt;AMove&gt;&gt;, std::option::Option&lt;_&gt;, [closure@src/main.rs:224:22: 240:6 winning:_, level:_, player:_]&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497256877, "post_id": 44494888, "comment_id": 75983183, "body": "Note: you may want to get better acquainted with Rust naming conventions, methods should be <code>snake_case</code> not <code>PascalCase</code>."}, {"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497256932, "post_id": 44494888, "comment_id": 75983226, "body": "@MatthieuM. Thanks, old habits"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 5, "creation_date": 1497256979, "post_id": 44494888, "comment_id": 75983257, "body": "No worries, the compiler will remind you over and over until you comply :)"}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 7, "last_activity_date": 1497257178, "last_edit_date": 1497257178, "creation_date": 1497256790, "answer_id": 44494925, "question_id": 44494888, "link": "https://stackoverflow.com/questions/44494888/move-ownership-of-a-member-from-one-struct-to-another/44494925#44494925", "title": "Move ownership of a member from one struct to another?", "body": "<p>Yes. Pass ownership of <code>MyVectorBuilder</code> into <code>MakeMyVector</code></p>\n\n<pre><code>fn make_my_vector(self) -&gt; MyVector {\n    MyVector { storage: self.storage }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1497256837, "creation_date": 1497256837, "answer_id": 44494940, "question_id": 44494888, "link": "https://stackoverflow.com/questions/44494888/move-ownership-of-a-member-from-one-struct-to-another/44494940#44494940", "title": "Move ownership of a member from one struct to another?", "body": "<blockquote>\n  <p>Is there a way to tell the compiler that <code>MyVectorBuilder</code> will not be used followning a call to <code>BuildMyVector()</code> so it will let me move the storage to <code>MyVector</code> ?</p>\n</blockquote>\n\n<p>Yes, taking <code>MyVectorBuilder</code> by value:</p>\n\n<pre><code>fn build_my_vector(self) -&gt; MyVector {\n    MyVector { storage: self.storage }\n}\n</code></pre>\n\n<p>In general, I recommend that the <code>build</code> step of a builder takes its argument by value for precisely this reason.</p>\n\n<p>If building twice is necessary, the builder can implement <code>Clone</code>.</p>\n"}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1756, "favorite_count": 1, "accepted_answer_id": 44494925, "answer_count": 2, "score": 7, "last_activity_date": 1497270710, "creation_date": 1497256640, "last_edit_date": 1497270710, "question_id": 44494888, "link": "https://stackoverflow.com/questions/44494888/move-ownership-of-a-member-from-one-struct-to-another", "title": "Move ownership of a member from one struct to another?", "body": "<p>I have 2 structs:</p>\n\n<pre><code>struct MyVector {\n    storage: Vec&lt;u32&gt;,\n}\n\nstruct MyVectorBuilder {\n    storage: Vec&lt;u32&gt;,\n}\n\nimpl MyVectorBuilder {\n    fn new() -&gt; MyVectorBuilder {\n        MyVectorBuilder { storage: Vec::new() }\n    }\n\n    fn build_my_vector(&amp;mut self) -&gt; MyVector {\n        // Doesn't compile: ^^^^ cannot move out of borrowed content\n        MyVector { storage: self.storage }\n    }\n}\n</code></pre>\n\n<p>Is there a way to tell the compiler that <code>MyVectorBuilder</code> will not be used following a call to <code>build_my_vector()</code> so it will let me move the <code>storage</code> to <code>MyVector</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1497228453, "post_id": 44483876, "comment_id": 75974165, "body": "<code>ToOwned</code> is in the <a href=\"https://doc.rust-lang.org/stable/std/prelude/v1/index.html\" rel=\"nofollow noreferrer\">prelude</a>, so yes, you <i>are</i> importing it!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1497249687, "post_id": 44483876, "comment_id": 75979215, "body": "@FrancisGagn&#233;: Good point. Otherwise it wouldn&#39;t cause a clash."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 9, "last_activity_date": 1497249742, "last_edit_date": 1497249742, "creation_date": 1497184187, "answer_id": 44483877, "question_id": 44483876, "link": "https://stackoverflow.com/questions/44483876/update-to-rust-1-18-broke-compilation-e0034-multiple-applicable-items-in-scope/44483877#44483877", "title": "Update to Rust 1.18 broke compilation: E0034 multiple applicable items in scope for &quot;clone_into&quot;", "body": "<p>This is an unfortunate effect of how method resolution works in Rust. Unlike other languages which feature overloading, in Rust the exact function to be called must be resolved unambiguously with no regard for its arguments.</p>\n\n<p>In this specific case, Rust 1.18 brings a new nightly method called <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html#method.clone_into\" rel=\"nofollow noreferrer\"><code>clone_into</code></a> on the <code>ToOwned</code> trait, and the <code>ToOwned</code> trait is implemented unconditionally for all types implementing <code>Clone</code> and imported automatically (via the <a href=\"https://doc.rust-lang.org/stable/std/prelude/v1/index.html\" rel=\"nofollow noreferrer\">prelude</a>).</p>\n\n<p>The fact that this method cannot be called on stable has no bearing; the method is first considered for resolution, and an error will be emitted if it is actually used.</p>\n\n<p>Note that even though irking, there are benefits to this method of resolution: it is often unclear to a human being which overload is selected when several appear to be available, or why the expected overload is NOT being selected. By erring on the side of explicitness, Rust makes it a no-brainer.</p>\n\n<p>Unfortunately, in this case this results in <code>Simple::clone_into()</code> becoming ambiguous.</p>\n\n<p>There is no way to opt out of the <code>ToOwned</code> implementation (not without giving up <code>Clone</code> and <code>Copy</code>), so instead one must switch to an unambiguous call to <code>clone_into</code> using <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation\" rel=\"nofollow noreferrer\">Fully Qualified Syntax (FQS)</a>:</p>\n\n<pre><code>fn main() {\n    let arena = Arena;\n    let _ = CloneInto::clone_into(&amp;Simple { a: &amp;1 }, &amp;arena);\n}\n</code></pre>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 462, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1497249742, "creation_date": 1497184187, "question_id": 44483876, "link": "https://stackoverflow.com/questions/44483876/update-to-rust-1-18-broke-compilation-e0034-multiple-applicable-items-in-scope", "title": "Update to Rust 1.18 broke compilation: E0034 multiple applicable items in scope for &quot;clone_into&quot;", "body": "<p>I have this simple snippet of code, which uses an arena for memory allocation and a trait <code>CloneInto</code> whose purpose is to clone a structure from unknown origins into an <code>Arena</code>, adjusting the lifetimes as it goes:</p>\n\n<pre><code>struct Arena;\n\nimpl Arena {\n    fn insert&lt;'a, T: 'a&gt;(&amp;'a self, _: T) -&gt; &amp;'a mut T { unimplemented!() }\n}\n\ntrait CloneInto&lt;'a&gt; {\n    type Output: 'a;\n    fn clone_into(&amp;self, arena: &amp;'a Arena) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>It can be used as is:</p>\n\n<pre><code>#[derive(Clone, Copy, Debug, PartialEq, PartialOrd, Eq, Ord, Hash)]\nstruct Simple&lt;'a&gt; { a: &amp;'a usize }\n\nimpl&lt;'a, 'target&gt; CloneInto&lt;'target&gt; for Simple&lt;'a&gt; {\n    type Output = Simple&lt;'target&gt;;\n\n    fn clone_into(&amp;self, arena: &amp;'target Arena) -&gt; Simple&lt;'target&gt; {\n        Simple { a: arena.insert(*self.a) }\n    }\n}\n\nfn main() {\n    let arena = Arena;\n    let _ = Simple { a: &amp;1 }.clone_into(&amp;arena);\n}\n</code></pre>\n\n<p>Or could, until the update to Rust 1.18. Now the <a href=\"https://play.rust-lang.org/?gist=f9b23b1026041626fa0af1b93c65cade&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">compiler emits this error</a>:</p>\n\n<blockquote>\n<pre><code>error[E0034]: multiple applicable items in scope\n  --&gt; &lt;anon&gt;:25:30\n   |\n25 |     let _ = Simple { a: &amp;1 }.clone_into(&amp;arena);\n   |                              ^^^^^^^^^^ multiple `clone_into` found\n   |\nnote: candidate #1 is defined in an impl of the trait `CloneInto` for the type `Simple&lt;'_&gt;`\n  --&gt; &lt;anon&gt;:18:5\n   |\n18 | /     fn clone_into(&amp;self, arena: &amp;'target Arena) -&gt; Simple&lt;'target&gt; {\n19 | |         Simple { a: arena.insert(*self.a) }\n20 | |     }\n   | |_____^\n   = note: candidate #2 is defined in an impl of the trait `std::borrow::ToOwned` for the type `_`\n</code></pre>\n</blockquote>\n\n<p>even though I do not even import <code>std</code> or <code>ToOwned</code>!</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 13306, "user_id": 162698, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/HnjBG.png?s=128&g=1", "display_name": "Rob", "link": "https://stackoverflow.com/users/162698/rob"}, "edited": false, "score": 8, "creation_date": 1497183708, "post_id": 44483749, "comment_id": 75961578, "body": "Can&#39;t you type out what&#39;s in your barely readable image?"}, {"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 7, "creation_date": 1497183756, "post_id": 44483749, "comment_id": 75961593, "body": "<code>cargo</code> is not a compiler, it&#39;s a package manager. It runs <code>rustc</code> and does some extra work (e.g. resolves dependencies), so it can&#39;t be faster than bare <code>rustc</code>."}, {"owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "reply_to_user": {"reputation": 13306, "user_id": 162698, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/HnjBG.png?s=128&g=1", "display_name": "Rob", "link": "https://stackoverflow.com/users/162698/rob"}, "edited": false, "score": 0, "creation_date": 1497183884, "post_id": 44483749, "comment_id": 75961619, "body": "@Rob I added the time taken for both. Let me know if you need anything else."}, {"owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1497183888, "post_id": 44483749, "comment_id": 75961620, "body": "@Pavel Strakhov Thanks. This is what I was looking for"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1497251949, "post_id": 44483749, "comment_id": 75980369, "body": "That&#39;s like asking &quot;why sould I use <code>make</code> while <code>gcc</code> is faster&quot;..."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1497190150, "last_edit_date": 1497190150, "creation_date": 1497187989, "answer_id": 44484426, "question_id": 44483749, "link": "https://stackoverflow.com/questions/44483749/why-should-i-use-cargo-if-cargo-build-is-slower-than-running-rustc-directly/44484426#44484426", "title": "Why should I use Cargo if &quot;cargo build&quot; is slower than running rustc directly?", "body": "<p>As <a href=\"https://stackoverflow.com/users/344347/pavel-strakhov\">Pavel Strakhov said</a></p>\n\n<blockquote>\n  <p>Cargo is not a compiler, it's a package manager. It runs <code>rustc</code> and does some extra work (e.g. resolves dependencies), so it can't be faster than bare <code>rustc</code>.</p>\n</blockquote>\n\n<p>You can see this for yourself by running <code>cargo build --verbose</code>, which outputs the <code>rustc</code> command that cargo runs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --verbose\n   Compiling hw v0.1.0 (file:///private/tmp/hw)\n     Running `rustc --crate-name hw src/main.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=3c693c67d55ff970 -C extra-filename=-3c693c67d55ff970 --out-dir /private/tmp/hw/target/debug/deps -L dependency=/private/tmp/hw/target/debug/deps`\n    Finished dev [unoptimized + debuginfo] target(s) in 0.30 secs\n</code></pre>\n\n<blockquote>\n  <p>Why should I still use cargo</p>\n</blockquote>\n\n<p>The output above shows one reason: Look at all those arguments passed to <code>rustc</code>. Do you know what each of them does? Do you <em>want</em> to know? Cargo abstracts some of the details away, allowing you to concentrate on the code.</p>\n\n<p>Cargo also does <strong>so much more than just invoking the compiler</strong>. The biggest benefit to most people is that it <a href=\"http://doc.crates.io/specifying-dependencies.html\" rel=\"noreferrer\">manages your dependencies based on versions</a> and allows <a href=\"http://doc.crates.io/crates-io.html\" rel=\"noreferrer\">publishing your own crates as well</a>. It also allows for <a href=\"http://doc.crates.io/build-script.html\" rel=\"noreferrer\">build scripts</a> which run before your main compilation. It has easy ways of <a href=\"http://doc.crates.io/guide.html#tests\" rel=\"noreferrer\">running your tests</a> and examples.  </p>\n\n<p>More immediately useful, Cargo performs a check to see <em>if you should rebuild at all</em>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time rustc src/main.rs\n0:00.21\n$ time rustc src/main.rs\n0:00.22\n\n$ time cargo build\n0:00.41\n$ time cargo build\n0:00.09                   # Much better!\n</code></pre>\n"}], "owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2277, "favorite_count": 1, "accepted_answer_id": 44484426, "answer_count": 1, "score": 0, "last_activity_date": 1497190150, "creation_date": 1497183344, "last_edit_date": 1497187539, "question_id": 44483749, "link": "https://stackoverflow.com/questions/44483749/why-should-i-use-cargo-if-cargo-build-is-slower-than-running-rustc-directly", "title": "Why should I use Cargo if &quot;cargo build&quot; is slower than running rustc directly?", "body": "<p>I created a simple hello world program:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world\");\n}\n</code></pre>\n\n<p>When compiling the code using <code>rustc</code> vs <code>cargo build</code>, the cargo command appears slower. It takes <em>1.6s</em> for <code>cargo build</code> vs <em>1s</em> for <code>rustc</code>. See the timestamps on the right in the screenshot.</p>\n\n<p><a href=\"https://i.stack.imgur.com/9J3Tk.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/9J3Tk.png\" alt=\"\"></a></p>\n\n<p>Why is this? Why should I still use cargo? </p>\n"}, {"tags": ["rust", "bson"], "comments": [{"owner": {"reputation": 129250, "user_id": 2313887, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/259593de18972d36e25f230c2be19d9f?s=128&d=identicon&r=PG", "display_name": "Neil Lunn", "link": "https://stackoverflow.com/users/2313887/neil-lunn"}, "edited": false, "score": 0, "creation_date": 1497178964, "post_id": 44483039, "comment_id": 75960291, "body": "Java often encounters a similar problem. BSON Objects are expecting the &quot;hash key&quot; to be a &quot;string&quot;, and that is basically how it&#39;s going to be stored. You would do will to stick to that type in your design, or at least cast first before conversion to BSON."}, {"owner": {"reputation": 187, "user_id": 6742624, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/5FTD2.jpg?s=128&g=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/6742624/yjyjeff"}, "reply_to_user": {"reputation": 129250, "user_id": 2313887, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/259593de18972d36e25f230c2be19d9f?s=128&d=identicon&r=PG", "display_name": "Neil Lunn", "link": "https://stackoverflow.com/users/2313887/neil-lunn"}, "edited": false, "score": 0, "creation_date": 1497179699, "post_id": 44483039, "comment_id": 75960514, "body": "@NeilLunn Thank you very much!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1497279081, "last_edit_date": 1497279081, "creation_date": 1497189422, "answer_id": 44484665, "question_id": 44483039, "link": "https://stackoverflow.com/questions/44483039/invalidmapkeytype-when-encoding-a-hashmap-to-bson/44484665#44484665", "title": "InvalidMapKeyType when encoding a HashMap to bson", "body": "<p>The <a href=\"https://github.com/zonyitoo/bson-rs/blob/v0.8.0/src/encoder/serde.rs#L369-L375\" rel=\"nofollow noreferrer\">BSON library disallows all keys that are not strings</a>. The <a href=\"http://bsonspec.org/spec.html\" rel=\"nofollow noreferrer\">BSON spec</a> states that a document is a sequence of elements, each element must be preceded by a name, and a name can only be a string.</p>\n\n<p>Changing your <code>HashMap</code> to use a string as the key should solve the problem.</p>\n\n<hr>\n\n<p>Your question doesn't make any sense to me. You state that you have a <code>HashMap&lt;u64, usize&gt;</code> but your error snippet states that it's because of a <code>FloatingPoint</code>!</p>\n\n<p>This is why you should always create an <a href=\"/help/mcve\">MCVE</a> and then provide it when asking a question. I created this sample which does exactly as you stated and I get a different error:</p>\n\n<pre><code>extern crate bson; // 0.8.0\n\nuse std::collections::HashMap;\n\nfn main() {\n    let mut thing = HashMap::new();\n    thing.insert(0_u64, 1_usize);\n\n    match bson::to_bson(&amp;thing) {\n        Ok(e) =&gt; println!(\"{:?}\", e),\n        Err(e) =&gt; println!(\"Got an error: {:?}, {}\", e, e),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Got an error: UnsupportedUnsignedType, BSON does not support unsigned type\n</code></pre>\n\n<p>If I change the <code>HashMap</code> to signed numbers, then I get the same class of error:</p>\n\n<pre><code>thing.insert(0_i64, 1_isize);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Got an error: InvalidMapKeyType(I64(0)), Invalid map key type: I64(0)\n</code></pre>\n\n<p>You can't even make a <code>HashMap</code> using a <code>f64</code> as the key in Rust because it doesn't implement <code>Hash</code> or <code>Eq</code>, so I have no idea how you got that specific error.</p>\n"}], "owner": {"reputation": 187, "user_id": 6742624, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/5FTD2.jpg?s=128&g=1", "display_name": "YjyJeff", "link": "https://stackoverflow.com/users/6742624/yjyjeff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 1, "accepted_answer_id": 44484665, "answer_count": 1, "score": -2, "last_activity_date": 1497279081, "creation_date": 1497178679, "last_edit_date": 1497189445, "question_id": 44483039, "link": "https://stackoverflow.com/questions/44483039/invalidmapkeytype-when-encoding-a-hashmap-to-bson", "title": "InvalidMapKeyType when encoding a HashMap to bson", "body": "<p>I want to encode a <code>HashMap&lt;u64, usize&gt;</code> using <code>bson::to_bson()</code> in order to store it in MongoDB. </p>\n\n<p>When I ran the code, it panicked and told me that <code>InvalidMapKeyType(FloatingPoint(....))</code>. Can't I use this method to encode HashMap in such a type?</p>\n"}, {"tags": ["arrays", "rust"], "answers": [{"comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497176114, "post_id": 44482649, "comment_id": 75959570, "body": "I assume <code>^</code> meant <code>pow</code>."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1497176166, "post_id": 44482649, "comment_id": 75959582, "body": "Ah yes, I missed that; I&#39;ll include this."}, {"owner": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "edited": false, "score": 0, "creation_date": 1497181784, "post_id": 44482649, "comment_id": 75961061, "body": "Thank you all for the help. Rust is still very new to me, a bit hard to transition from java backgrounds."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "edited": false, "score": 0, "creation_date": 1497190904, "post_id": 44482649, "comment_id": 75963700, "body": "@VikingPingvin probably worth noting that an array is unlikely to buy you much here; you may want to move to a vector. <a href=\"https://play.integer32.com/?gist=b85b1121aab7b423ed0dbf866fad5f0a&amp;version=stable\" rel=\"nofollow noreferrer\">Then you can use nice methods like <code>map</code> and <code>collect</code></a>."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1497189831, "last_edit_date": 1497189831, "creation_date": 1497176071, "answer_id": 44482649, "question_id": 44482473, "link": "https://stackoverflow.com/questions/44482473/assigning-values-to-an-array-in-rust-results-in-error-expected-f64-found-usiz/44482649#44482649", "title": "Assigning values to an array in Rust results in error: &#39;expected f64, found usize&#39;", "body": "<p>The compiler thinks you are assigning a <code>usize</code> to <code>notes[x]</code> because <code>x</code> is inferred as a <code>usize</code> as it is used for indexing <code>notes</code> and it is a part of the right-hand side expression. If it didn't contain <code>x</code>, the expression's return type would be inferred as an <code>i32</code> because it contains <code>a</code> which doesn't have an explicit type and the default integral type is <code>i32</code>.</p>\n\n<p>To make the right-hand side expression return <code>f64</code>, you need to indicate that its components are <code>f64</code> and perform a few casts; you will also need to change <code>^</code> to <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.powf\" rel=\"nofollow noreferrer\"><code>powf</code></a> (assuming you want to perform a power):</p>\n\n<pre><code>let a = 440f64;\n\nnotes[x] = (a / 32.0) * 2f64.powf((x as f64 - 9.0) / 12.0);\n</code></pre>\n\n<p>This is not enough, though:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `notes`\n --&gt; &lt;anon&gt;:5:9\n  |\n5 |         notes[x] = (a / 32.0) * 2f64.powf((x as f64 - 9.0) / 12.0);\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of possibly uninitialized `notes`\n</code></pre>\n\n<p>In order to solve this issue, you need to initialize the <code>notes</code> array, e.g. with zeros:</p>\n\n<pre><code>let mut notes: [f64;127] = [0f64;127];\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1693, "user_id": 1031979, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GnZfS.jpg?s=128&g=1", "display_name": "Zernike", "link": "https://stackoverflow.com/users/1031979/zernike"}, "is_accepted": false, "score": 3, "last_activity_date": 1497177039, "last_edit_date": 1497177039, "creation_date": 1497176094, "answer_id": 44482651, "question_id": 44482473, "link": "https://stackoverflow.com/questions/44482473/assigning-values-to-an-array-in-rust-results-in-error-expected-f64-found-usiz/44482651#44482651", "title": "Assigning values to an array in Rust results in error: &#39;expected f64, found usize&#39;", "body": "<p>I suppose you don't want integer division. <code>440/32</code> takes on <code>13</code> instead of <code>13.75</code> and the same problem in <code>(x - 9) / 12</code>. So use strictly float types.</p>\n\n<pre><code>let mut notes:[f64;127] = [0.0; 127];\nlet a = 440.0;\nfor x in 0..127{\n    notes[x] = (a / 32.0) * ((x as f64 - 9.0) /12.0).exp2();\n}\n</code></pre>\n"}], "owner": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 464, "favorite_count": 0, "accepted_answer_id": 44482649, "answer_count": 2, "score": 0, "last_activity_date": 1497189831, "creation_date": 1497174720, "last_edit_date": 1497189741, "question_id": 44482473, "link": "https://stackoverflow.com/questions/44482473/assigning-values-to-an-array-in-rust-results-in-error-expected-f64-found-usiz", "title": "Assigning values to an array in Rust results in error: &#39;expected f64, found usize&#39;", "body": "<p>I want to have an array of 127 <code>f64</code> values which are calculated in the <code>notes[x]</code> line:.</p>\n\n<pre><code>let mut notes: [f64; 127];\nlet a = 440;\nfor x in 0..127 {\n    notes[x] = (a / 32) * (2 ^ ((x - 9) / 12));\n}\n</code></pre>\n\n<p>This is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:5:20\n  |\n5 |         notes[x] = (a / 32) * (2 ^ ((x - 9) / 12));\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found usize\n</code></pre>\n"}, {"tags": ["rust", "gtk"], "answers": [{"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 6, "last_activity_date": 1497175742, "last_edit_date": 1497175742, "creation_date": 1497164918, "answer_id": 44481260, "question_id": 44480108, "link": "https://stackoverflow.com/questions/44480108/rust-gtk-example-doesnt-compile-because-optionstr-fromoptionstring-is/44481260#44481260", "title": "Rust GTK+ example doesn&#39;t compile because Option&lt;&amp;str&gt;: From&lt;Option&lt;&amp;String&gt;&gt; is not satisfied", "body": "<p>It seems that you're working with an old copy of <code>gtk-rs/examples</code>. In the <a href=\"https://github.com/gtk-rs/examples/blob/bf3a47f47c6fb946854718054b1d41186e6bb0fc/src/bin/notebook.rs\" rel=\"noreferrer\">current master</a>, the loop in <code>notebook.rs</code> looks like this:</p>\n\n<pre><code>let mut notebook = Notebook::new();\n\nfor i in 1..4 {\n    let title = format!(\"sheet {}\", i);\n    let label = gtk::Label::new(&amp;*title);\n    notebook.create_tab(&amp;title, label.upcast());\n}\n</code></pre>\n\n<p>This code compiles - the difference is that it uses <code>&amp;*title</code> to convert a <code>String</code> into something convertible to <code>Option&lt;&amp;str&gt;</code>.</p>\n\n<p>In <a href=\"https://github.com/gtk-rs/gtk/pull/447\" rel=\"noreferrer\">PR#447</a>, <code>gtk-rs</code> switched from using <code>Option&lt;&amp;str&gt;</code> to <code>Into&lt;Option&lt;&amp;str&gt;&gt;</code> in parameters of functions that accept an optional string, including <code>gtk::Label::new</code>. This made the API more ergonomic, because a constant string argument can be written as <code>\"string\"</code> instead of <code>Some(\"string\")</code>. However, the change is not 100% backward-compatible - the <code>Into&lt;Option&lt;...&gt;&gt;</code> pattern doesn't support passing <code>Some(&amp;string)</code> with <code>string</code> being an owned <code>String</code> - one must write <code>&amp;*string</code> or the more explicit <code>string.as_str()</code> instead.</p>\n"}], "owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1497190086, "creation_date": 1497151624, "last_edit_date": 1497190086, "question_id": 44480108, "link": "https://stackoverflow.com/questions/44480108/rust-gtk-example-doesnt-compile-because-optionstr-fromoptionstring-is", "title": "Rust GTK+ example doesn&#39;t compile because Option&lt;&amp;str&gt;: From&lt;Option&lt;&amp;String&gt;&gt; is not satisfied", "body": "<p>In the <a href=\"https://github.com/gtk-rs/examples\" rel=\"nofollow noreferrer\">Rust GTK examples</a>, there's one called <a href=\"https://github.com/gtk-rs/examples/blob/master/src/bin/notebook.rs\" rel=\"nofollow noreferrer\">notebook</a>. It doesn't compile:</p>\n\n<pre><code>for i in 1..4 {\n    let title = format!(\"sheet {}\", i);\n    let label = gtk::Label::new(Some(&amp;title));\n    //let label = gtk::Label::new(Some(\"test1111\")); # works well\n    notebook.create_tab(&amp;title, label.upcast());\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait bound `std::option::Option&lt;&amp;str&gt;: std::convert::From&lt;std::option::Option&lt;&amp;std::string::String&gt;&gt;` is not satisfied\n</code></pre>\n\n<p>What is it about and how to fix it?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 1144, "user_id": 1710042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f48e128c86e61fe70349b79d56aa8e9?s=128&d=identicon&r=PG", "display_name": "Gabriel", "link": "https://stackoverflow.com/users/1710042/gabriel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497056519, "post_id": 44468386, "comment_id": 75933535, "body": "I think I&#39;ll just drop the padding and grab the CRC separately using byteorder."}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 2, "creation_date": 1497126927, "post_id": 44468386, "comment_id": 75950810, "body": "If you do want to use a fixed-sized array, <a href=\"https://github.com/fizyk20/generic-array/\" rel=\"nofollow noreferrer\">github.com/fizyk20/generic-array</a> might be useful for this. It has a <code>serde</code> feature which allows serde deserialization. It&#39;s not exactly a fixed-sized array, it&#39;s implemented slightly differently, but the memory representation is exactly the same and it should allow for all the same uses."}], "answers": [{"comments": [{"owner": {"reputation": 1144, "user_id": 1710042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f48e128c86e61fe70349b79d56aa8e9?s=128&d=identicon&r=PG", "display_name": "Gabriel", "link": "https://stackoverflow.com/users/1710042/gabriel"}, "edited": false, "score": 0, "creation_date": 1497135483, "post_id": 44470833, "comment_id": 75952655, "body": "Thanks! Since this is just padding, an almost-empty implementation is fine."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 7, "last_activity_date": 1497080329, "creation_date": 1497080329, "answer_id": 44470833, "question_id": 44468386, "link": "https://stackoverflow.com/questions/44468386/how-do-i-map-a-c-struct-with-padding-over-32-bytes-using-serde-and-bincode/44470833#44470833", "title": "How do I map a C struct with padding over 32 bytes using serde and bincode?", "body": "<p><code>serde_derive</code> supports the <a href=\"https://serde.rs/field-attrs.html\" rel=\"noreferrer\">field attributes</a> <code>#[serde(serialize_with=\"func\")]</code>, <code>#[serde(deserialize_with=\"func\")]</code> and <code>#[serde(with=\"module\")]</code>, which allows one to provide a custom serialization/deserialization routine:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct Superblock {\n    magic: [u8; 16],\n    #[serde(with=\"array_492\")]   // &lt;--\n    reserved: [u8; 492],\n    crc: u32,\n}\n\nmod array_492 {\n    use serde::*;\n\n    pub fn serialize&lt;S, T&gt;(array: &amp;[T; 492], ser: S) -&gt; Result&lt;S::Ok, S::Error&gt; \n        where S: Serializer, T: Serialize\n    {\n        unimplemented!() // fill in yourself.\n    }\n\n    pub fn deserialize&lt;'de, D, T&gt;(de: D) -&gt; Result&lt;[T; 492], D::Error&gt; { \n        where D: Deserializer&lt;'de&gt;, T: Deserialize&lt;'de&gt;\n    {\n        unimplemented!() // fill in yourself.\n    }\n}\n</code></pre>\n\n<p>For an actual implementation, see this gist: <a href=\"https://gist.github.com/kennytm/21403667b5a17172cfcd11f9df9365e2\" rel=\"noreferrer\">https://gist.github.com/kennytm/21403667b5a17172cfcd11f9df9365e2</a>. Note that this is <em>not</em> optimized for deserializing the whole byte array at once. </p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1497094382, "creation_date": 1497094382, "answer_id": 44472845, "question_id": 44468386, "link": "https://stackoverflow.com/questions/44468386/how-do-i-map-a-c-struct-with-padding-over-32-bytes-using-serde-and-bincode/44472845#44472845", "title": "How do I map a C struct with padding over 32 bytes using serde and bincode?", "body": "<p>As a workaround, you could construct a different object of the right size and ignore that instead. For example:</p>\n\n<pre><code>reserved: ([u64; 32], [u64; 29], u32) // 492 bytes\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1144, "user_id": 1710042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f48e128c86e61fe70349b79d56aa8e9?s=128&d=identicon&r=PG", "display_name": "Gabriel", "link": "https://stackoverflow.com/users/1710042/gabriel"}, "edited": false, "score": 0, "creation_date": 1497147594, "post_id": 44479725, "comment_id": 75954389, "body": "Thanks! With the length as a generic parameter, this might be a worthy addition to bincode."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1144, "user_id": 1710042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f48e128c86e61fe70349b79d56aa8e9?s=128&d=identicon&r=PG", "display_name": "Gabriel", "link": "https://stackoverflow.com/users/1710042/gabriel"}, "edited": false, "score": 0, "creation_date": 1497147711, "post_id": 44479725, "comment_id": 75954406, "body": "@Gabriel sadly, type-level numerics don&#39;t exist (yet), so you&#39;d have to use something like <a href=\"https://crates.io/crates/typenum\" rel=\"nofollow noreferrer\">typenum</a> which adds a bit of inelegance. However, when they do land, I think it&#39;s something that would perfectly fit with bincode!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1497147492, "last_edit_date": 1497147492, "creation_date": 1497146456, "answer_id": 44479725, "question_id": 44468386, "link": "https://stackoverflow.com/questions/44468386/how-do-i-map-a-c-struct-with-padding-over-32-bytes-using-serde-and-bincode/44479725#44479725", "title": "How do I map a C struct with padding over 32 bytes using serde and bincode?", "body": "<p>I'd recommend <a href=\"https://serde.rs/impl-serialize.html\" rel=\"nofollow noreferrer\">implementing <code>Serialize</code></a> and <a href=\"https://serde.rs/impl-deserialize.html\" rel=\"nofollow noreferrer\">implementing <code>Deserialize</code></a> for a custom type. </p>\n\n<p>The big thing to note is that you don't care about the data at all. This means there's <em>no reason to take up memory</em>! We can define a type <code>Reserved</code> that will serialize to a bunch of bytes and will deserialize from bytes, but doesn't actually require any space in our in-memory struct.</p>\n\n<p>Then, it's just a matter of filling in the trait implementation:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate bincode;\n\nuse std::fmt;\nuse serde::ser::SerializeTuple;\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\nstruct Superblock {\n    magic: [u8; 16],\n    reserved: Reserved,\n    crc: u32,\n}\n\n#[derive(Debug, PartialEq)]\nstruct Reserved;\nconst RESERVED_LENGTH: usize = 492;\n\nimpl serde::Serialize for Reserved {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: serde::Serializer\n    {\n        let mut tuple = serializer.serialize_tuple(RESERVED_LENGTH)?;\n        for _ in 0..RESERVED_LENGTH {\n            tuple.serialize_element(&amp;0xA0_u8)?; // Just to see it easily in the output\n        }\n        tuple.end()\n    }\n}\n\nimpl&lt;'de&gt; serde::Deserialize&lt;'de&gt; for Reserved {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n        where D: serde::Deserializer&lt;'de&gt;\n    {\n        struct Visitor;\n        impl&lt;'de&gt; serde::de::Visitor&lt;'de&gt; for Visitor {\n            type Value = Reserved;\n\n            fn expecting(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                write!(f, \"{} bytes\", RESERVED_LENGTH)\n            }\n\n            fn visit_seq&lt;A&gt;(self, mut tuple: A) -&gt; Result&lt;Self::Value, A::Error&gt;\n                where A: serde::de::SeqAccess&lt;'de&gt;,\n            {\n                for _ in 0..RESERVED_LENGTH {\n                    tuple.next_element::&lt;u8&gt;()?;\n                }\n                Ok(Reserved)\n            }\n        }\n\n        deserializer.deserialize_tuple(RESERVED_LENGTH, Visitor)\n    }\n}\n\nfn main() {\n    let block = Superblock {\n        magic: [\n            0x00, 0x01, 0x02, 0x03,\n            0x04, 0x05, 0x06, 0x07,\n            0x08, 0x09, 0x0a, 0x0b,\n            0x0c, 0x0d, 0x0e, 0x0f,\n        ],\n        reserved: Reserved,\n        crc: 0xffffffff,\n    };\n\n    let ser = bincode::serialize(&amp;block, bincode::Infinite).expect(\"Couldn't serialize\");\n    println!(\"length: {}\", ser.len());\n    println!(\"{:?}\", ser);\n\n    let block2: Superblock = bincode::deserialize(&amp;ser).expect(\"Couldn't deserialize\");\n    assert_eq!(block, block2);\n    println!(\"{:?}\", block2);\n\n    println!(\"Takes: {} bytes\", std::mem::size_of::&lt;Superblock&gt;());\n    // prints \"Takes: 20 bytes\"\n}\n</code></pre>\n"}], "owner": {"reputation": 1144, "user_id": 1710042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f48e128c86e61fe70349b79d56aa8e9?s=128&d=identicon&r=PG", "display_name": "Gabriel", "link": "https://stackoverflow.com/users/1710042/gabriel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1091, "favorite_count": 0, "accepted_answer_id": 44479725, "answer_count": 3, "score": 4, "last_activity_date": 1497147492, "creation_date": 1497055105, "last_edit_date": 1497146601, "question_id": 44468386, "link": "https://stackoverflow.com/questions/44468386/how-do-i-map-a-c-struct-with-padding-over-32-bytes-using-serde-and-bincode", "title": "How do I map a C struct with padding over 32 bytes using serde and bincode?", "body": "<p>I'm mapping a binary structure using serde and bincode.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate bincode;\n\n#[derive(Serialize, Deserialize)]\nstruct Superblock {\n    magic: [u8; 16],\n    //reserved: [u8; 492],\n    crc: u32,\n}\n</code></pre>\n\n<p>Things work as expected, but I can't map the reserved field.  Apparently fixed size arrays are only defined for sizes up to 32 bytes.</p>\n\n<p>How do I register my custom-sized array so that the padding gets deserialised?</p>\n\n<p>Is serde+bincode the right approach?\nI need control over endianness (which bincode provides) and I like the declarative style.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1497094360, "post_id": 44467945, "comment_id": 75941158, "body": "Just in case, there&#39;s <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.last\" rel=\"nofollow noreferrer\">method <code>last</code></a> for slice"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1497051967, "creation_date": 1497051967, "answer_id": 44468053, "question_id": 44467945, "link": "https://stackoverflow.com/questions/44467945/how-do-i-convert-a-t-to-just-t/44468053#44468053", "title": "How do I convert a `&amp;T` to just `T`?", "body": "<p>In your first example, you are returning a <code>&amp;T</code> and taking a reference to something, so the value and the types match:</p>\n\n<pre><code>fn last&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; &amp;T {\n//                                ^^\n    &amp;slice[slice.len()-1]\n//  ^\n}\n</code></pre>\n\n<p>But, then you said you weren't going to return a reference anymore, <em>but didn't change the implementation</em>.</p>\n\n<pre><code>fn last&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; T {\n//                                ^\n    &amp;slice[slice.len()-1]\n//  ^\n}\n</code></pre>\n\n<p><code>T</code>, <code>&amp;T</code> and <code>&amp;mut T</code> are all different types from each other! This means it's the same as this \"small adjustment\":</p>\n\n<pre><code>fn foo() -&gt; i32  { 42 } // Before\nfn foo() -&gt; bool { 42 } // After\n</code></pre>\n\n<p>Let's drop the <code>&amp;</code> from the body:</p>\n\n<pre><code>fn last&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; T {\n    slice[slice.len()-1]\n}\n</code></pre>\n\n<p>Oops...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of indexed content\n --&gt; src/main.rs:4:9\n  |\n4 |         slice[slice.len()-1]\n  |         ^^^^^^^^^^^^^^^^^^^^ cannot move out of indexed content\n</code></pre>\n\n<p>This is well explained in <a href=\"https://stackoverflow.com/q/27904864/155423\">What does &quot;cannot move out of indexed content&quot; mean?</a>.</p>\n\n<hr>\n\n<p>The answer to your question is: there's no one right way. There are three broad possibilities:</p>\n\n<ol>\n<li><p>The type implements <code>Copy</code> and the compiler automatically dereferences it for you:</p>\n\n<pre><code>fn last_copy&lt;T: Copy&gt;(slice: &amp;[T]) -&gt; T {\n    slice[slice.len()-1]\n}\n</code></pre></li>\n<li><p>The type implements <code>Clone</code>, so you can explicitly call <code>Clone</code> to duplicate it:</p>\n\n<pre><code>fn last_clone&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; T {\n    slice[slice.len()-1].clone()\n}\n</code></pre>\n\n<p>There might also be other methods on your type that do something similar.</p></li>\n<li><p>You <strong>don't</strong>. Sometimes, if you have a reference, you can't get a corresponding value. In those cases, you need to re-evaluate your design.</p></li>\n</ol>\n"}], "owner": {"reputation": 336, "user_id": 6411264, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/b6da9faea5a6ec9f25c4cca74a18ccf6?s=128&d=identicon&r=PG&f=1", "display_name": "UberStuper", "link": "https://stackoverflow.com/users/6411264/uberstuper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 0, "accepted_answer_id": 44468053, "answer_count": 1, "score": 6, "last_activity_date": 1497051967, "creation_date": 1497050977, "last_edit_date": 1497051362, "question_id": 44467945, "link": "https://stackoverflow.com/questions/44467945/how-do-i-convert-a-t-to-just-t", "title": "How do I convert a `&amp;T` to just `T`?", "body": "<p>I want to write a function that takes in an array with any type in it and returns the last element of the array, so I've tried: </p>\n\n<pre><code>fn main() {\n    let v = [\"a\", \"b\"];\n    println!(\"{}\", last(&amp;v));\n}\n\nfn last&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; &amp;T {\n    &amp;slice[slice.len()-1]\n}\n</code></pre>\n\n<p>and that seems to work, but when I apply a small adjustment: </p>\n\n<pre><code>fn main() {\n    let v = [\"a\", \"b\"];\n    println!(\"{}\", last(&amp;v));\n}\n\nfn last&lt;T: Clone&gt;(slice: &amp;[T]) -&gt; T {\n    &amp;slice[slice.len()-1]\n}\n</code></pre>\n\n<p>Then I'm met with: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; &lt;anon&gt;:9:5\n  |\n9 |     &amp;slice[n-1]\n  |     ^^^^^^^^^^^ expected type parameter, found &amp;T\n  |\n = note: expected type `T`\n            found type `&amp;T`\n</code></pre>\n\n<p>How do I convert the <code>&amp;T</code> to just <code>T</code>?</p>\n"}, {"tags": ["parsing", "rust", "nom"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497124812, "post_id": 44466461, "comment_id": 75950250, "body": "I&#39;m struggling to see the problem. Parsing with <code>expression()</code> seems to produce the same result as <code>identifier()</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1497124936, "post_id": 44466461, "comment_id": 75950284, "body": "A problem with your question is that it contains a lot more code than is probably required to demonstrate the issue. It would be good to strip out a lot of it, to help a potential answerer to narrow down on the issue quickly. Also, it would be easier to see what is going on if you wrote tests with failing assertions, rather than a reader having to compare the log statements."}, {"owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497140212, "post_id": 44466461, "comment_id": 75953432, "body": "Thanks for the suggestions, Peter. I made the changes. Basically, I find that I can parse identifiers but can"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497177915, "post_id": 44466461, "comment_id": 75960002, "body": "BTW You don&#39;t need the <code>as &amp;[u8]</code> (or <code>as Bytes</code> as you changed it). The syntax <code>b&quot;&quot;</code> already means a byte slice."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497190657, "post_id": 44466461, "comment_id": 75963629, "body": "None of the <code>if_expr</code> tests pass, and they are not composed in another parser. Your question is still unclear."}, {"owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497214309, "post_id": 44466461, "comment_id": 75971404, "body": "My reply was truncated. Thanks for the suggestions, Peter. I made the changes. Basically, I find that I can parse identifiers separately but can not identify them in the condition and the expression in the if statement. I expected the expression parser nested inside to pick it up"}, {"owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1497232533, "post_id": 44466461, "comment_id": 75974887, "body": "Changed the tests again. I commented on tests that are supposed to fail but won&#39;t throw errors when tests are run. You can see that <code>expr_parser</code> parser can detect identifiers but can&#39;t seem to do it from within the <code>if_token</code> parser. I&#39;m not sure how that can be the case."}], "owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 779, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1497232322, "creation_date": 1497041271, "last_edit_date": 1497232322, "question_id": 44466461, "link": "https://stackoverflow.com/questions/44466461/parsing-alphanumeric-identifiers-with-underscores-and-calling-from-top-level-par", "title": "Parsing alphanumeric identifiers with underscores and calling from top level parser", "body": "<p>Trying to do something similar to <a href=\"https://stackoverflow.com/questions/42183708/parsing-camel-case-strings-with-nom/42184133#42184133\" title=\"Similar question\">this question</a> except allow underscores from the second character onwards. Not just camel case.</p>\n\n<p>I can test the parser in isolation successfully <em>but</em> when composed in a higher level parser, I get errors</p>\n\n<p>Take the following example:</p>\n\n<pre><code>#![allow(dead_code)]\n#[macro_use]\n\nextern crate nom;\n\nuse nom::*;\n\ntype Bytes&lt;'a&gt; = &amp;'a [u8];\n\n#[derive(Clone,PartialEq,Debug)]\npub enum Statement {\n  IF,\n  ELSE,\n  ASSIGN((String)),\n  IDENTIFIER(String),\n  EXPRESSION,\n}\n\nfn lowerchar(input: Bytes) -&gt; IResult&lt;Bytes, char&gt;{\n  if input.is_empty() {\n    IResult::Incomplete(Needed::Size(1))\n  } else if (input[0] as char)&gt;='a' &amp;&amp; 'z'&gt;=(input[0] as char) {\n    IResult::Done(&amp;input[1..], input[0] as char)\n  } else {\n    IResult::Error(error_code!(ErrorKind::Custom(1)))\n  }\n}\n\nnamed!(identifier&lt;Bytes,Statement&gt;, map_res!(\n    recognize!(do_parse!(\n        lowerchar &gt;&gt;\n        //alt_complete! is not having the effect it's supposed to so the alternatives need to be ordered from shortest to longest\n        many0!(alt!(\n            complete!(is_a!(\"_\"))\n            | complete!(take_while!(nom::is_alphanumeric))\n            )) &gt;&gt; ()\n        )),\n        |id: Bytes| {\n          //println!(\"{:?}\",std::str::from_utf8(id).unwrap().to_string());\n          Result::Ok::&lt;Statement, &amp;str&gt;(\n            Statement::IDENTIFIER(std::str::from_utf8(id).unwrap().to_string())\n            )\n        }\n        ));\n\nnamed!(expression&lt;Bytes,Statement&gt;, alt_complete!(\n    identifier //=&gt; { |e: Statement| e }\n    //| assign_expr //=&gt; { |e: Statement| e }\n    | if_expr //=&gt; { |e: Statement| e }\n    ));\n\nnamed!(if_expr&lt;Bytes,Statement&gt;, do_parse!(\n    if_statement: preceded!(\n      tag!(\"if\"),\n      delimited!(tag!(\"(\"),expression,tag!(\")\"))\n      ) &gt;&gt;\n    //if_statement: delimited!(tag!(\"(\"),tag!(\"hello\"),tag!(\")\")) &gt;&gt;\n    if_expr: expression &gt;&gt;\n    //else_statement: opt_res!(tag!(\"else\")) &gt;&gt;\n    (Statement::IF)\n    ));\n\n#[cfg(test)]\nmod tests {\n  use super::*;\n  use IResult::*;\n  //use IResult::Done;\n\n  #[test]\n  fn ident_token() {\n    assert_eq!(identifier(b\"iden___ifiers\"), Done::&lt;Bytes, Statement&gt;(b\"\" , Statement::IDENTIFIER(\"iden___ifiers\".to_string())));\n    assert_eq!(identifier(b\"iden_iFIErs\"), Done::&lt;Bytes, Statement&gt;(b\"\" , Statement::IDENTIFIER(\"iden_iFIErs\".to_string())));\n    assert_eq!(identifier(b\"Iden_iFIErs\"), Error(ErrorKind::Custom(1))); // Supposed to fail since not valid\n    assert_eq!(identifier(b\"_den_iFIErs\"), Error(ErrorKind::Custom(1))); // Supposed to fail since not valid\n  }\n\n  #[test]\n  fn if_token() {\n    assert_eq!(if_expr(b\"if(a)a\"), Error(ErrorKind::Alt)); // Should have passed\n    assert_eq!(if_expr(b\"if(hello)asdas\"), Error(ErrorKind::Alt)); // Should have passed\n  }\n\n  #[test]\n  fn expr_parser() {\n    assert_eq!(expression(b\"iden___ifiers\"), Done::&lt;Bytes, Statement&gt;(b\"\" , Statement::IDENTIFIER(\"iden___ifiers\".to_string())));\n    assert_eq!(expression(b\"if(hello)asdas\"), Error(ErrorKind::Alt)); // Should have been able to recognise an IF statement via expression parser\n  }\n}\n</code></pre>\n"}, {"tags": ["reference", "rust", "mutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497012184, "post_id": 44456911, "comment_id": 75912507, "body": "<i>But as you see compiler not allow code</i> \u2014 you need to include the complete compiler error. It is not acceptable to simply state that an error occurs."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1497010343, "post_id": 44457142, "comment_id": 75911206, "body": "&quot;Just make foo a mutable reference&quot; I cann&#39;t, if I get <code>&amp;Foo</code> as input how can I construct <code>&amp;mut Foo</code> from it? See <code>func</code> as example."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 1, "creation_date": 1497021065, "post_id": 44457142, "comment_id": 75919002, "body": "You probably need to include more code in order to explain your problem, and to show that it is different from the duplicate (if it is)."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1497009662, "last_edit_date": 1497009662, "creation_date": 1497009275, "answer_id": 44457142, "question_id": 44456911, "link": "https://stackoverflow.com/questions/44456911/any-way-to-avoid-duplicate-code-for-mut-not-mut-reference-inside-struct/44457142#44457142", "title": "Any way to avoid duplicate code for mut not mut reference inside struct?", "body": "<p>Just make <code>foo</code> a mutable reference. Then it can be borrowed either mutably or immutably.</p>\n\n<pre><code>struct FooWrapper&lt;'a&gt; {\n    foo: &amp;'a mut Foo,\n}\n</code></pre>\n\n<p>A <code>&amp;mut T</code> reference can always be coerced to a <code>&amp;T</code>.</p>\n\n<p>If you wanted to provide minimal functionality for an immutable reference and some additional methods if you able to get a mutable reference, you could maybe split it out with type parameter:</p>\n\n<pre><code>trait Foo {\n    fn readonly(&amp;self) -&gt; i32;\n    fn modify(&amp;mut self, val: i32);\n}\n\nstruct FooWrapper&lt;T&gt; {\n    foo: T,\n}\n\nimpl &lt;'a&gt; FooWrapper&lt;&amp;'a Foo&gt; {\n    fn readonly(&amp;self) -&gt; i32 {\n        self.foo.readonly()\n    }\n}\n\nimpl &lt;'a&gt; FooWrapper&lt;&amp;'a mut Foo&gt; {\n    fn modify(&amp;mut self, val: i32) {\n        self.foo.modify(val); //\n    }\n}\n</code></pre>\n\n<p>Now you can supply the type parameter to be either <code>&amp;mut Foo</code> or just <code>&amp;Foo</code>, depending on what you have.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 402, "favorite_count": 0, "closed_date": 1497012052, "answer_count": 1, "score": 0, "last_activity_date": 1549459352, "creation_date": 1497008580, "last_edit_date": 1549459352, "question_id": 44456911, "link": "https://stackoverflow.com/questions/44456911/any-way-to-avoid-duplicate-code-for-mut-not-mut-reference-inside-struct", "closed_reason": "Duplicate", "title": "Any way to avoid duplicate code for mut not mut reference inside struct?", "body": "<p>Here what I want to achieve:</p>\n\n<pre><code>trait Foo {\n    fn readonly(&amp;self) -&gt; i32;\n    fn modify(&amp;mut self, val: i32);\n}\n\nstruct FooWrapper&lt;'a&gt; {\n    foo: &amp;'a Foo,\n}\n\nimpl&lt;'a&gt; FooWrapper&lt;'a&gt; {\n    fn readonly(&amp;self) -&gt; i32 {\n        self.foo.readonly()\n    }\n\n    fn modify(&amp;mut self, val: i32) {\n        self.foo.modify(val);//!!!\n    }\n}\n</code></pre>\n\n<p>As input I got <code>&amp;Foo</code> and <code>&amp;mut Foo</code>, like:\n<code>fn func(a: &amp;Foo, b: &amp;mut Foo)</code>.</p>\n\n<p>I want then wrap them inside <code>FooWraper</code>, and use it's methods\nto work with <code>Foo</code>.</p>\n\n<p>But  as you see compiler not allow code marked with <code>//!!!</code>.</p>\n\n<p>Any way to fix this without code duplication like:</p>\n\n<pre><code>struct FooWrapper&lt;'a&gt; {\n    foo: &amp;'a Foo,\n}\nstruct FooWrapperMut&lt;'a&gt; {\n    foo: &amp;'a mut Foo,\n}\nimpl&lt;'a&gt; FooWrapper&lt;'a&gt;..\nimpl&lt;'a&gt; FooWrapperMut&lt;'a&gt;..\n</code></pre>\n\n<p>?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1497001451, "post_id": 44453684, "comment_id": 75905262, "body": "But <code>iter_mut</code> works, without runtime checks, if I can jump to specific key via <code>IterMut</code>, then it would be possible to use <code>HashMap</code> without runtime check via <code>RefCell</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 1, "creation_date": 1497007681, "post_id": 44453684, "comment_id": 75909406, "body": "@user1244932: <code>IterMut</code> guarantees that it only ever yields a single reference once, as per its semantics: you can never go back to an already yielded element via <code>IterMut</code>, and the elements so obtained borrow the original map (which thus cannot yield another element either)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1535079420, "last_edit_date": 1535079420, "creation_date": 1496999029, "answer_id": 44453684, "question_id": 44453398, "link": "https://stackoverflow.com/questions/44453398/how-can-i-borrow-from-a-hashmap-to-read-and-write-at-the-same-time/44453684#44453684", "title": "How can I borrow from a HashMap to read and write at the same time?", "body": "<p><strong>TL;DR: You will need to change the type of <code>HashMap</code></strong></p>\n\n<hr>\n\n<p>When using a method, the compiler does <em>not</em> inspect the interior of a method, or perform any runtime simulation: it only bases its ownership/borrow-checking analysis on the signature of the method.</p>\n\n<p>In your case, this means that:</p>\n\n<ul>\n<li>using <code>get</code> will borrow the entire <code>HashMap</code> for as long as the reference lives,</li>\n<li>using <code>get_mut</code> will mutably borrow the entire <code>HashMap</code> for as long as the reference lives.</li>\n</ul>\n\n<p>And therefore, it is not possible with a <code>HashMap&lt;K, V&gt;</code> to obtain both a <code>&amp;V</code> and <code>&amp;mut V</code> at the same time.</p>\n\n<hr>\n\n<p>The work-around, therefore, is to avoid the need for a <code>&amp;mut V</code> entirely.</p>\n\n<p>This can be accomplished by using <code>Cell</code> or <code>RefCell</code>:</p>\n\n<ul>\n<li>Turn your <code>HashMap</code> into <code>HashMap&lt;K, RefCell&lt;V&gt;&gt;</code>,</li>\n<li>Use <code>get</code> in both cases,</li>\n<li>Use <code>borrow()</code> to get a reference and <code>borrow_mut()</code> to get a mutable reference.</li>\n</ul>\n\n\n\n<pre><code>use std::{cell::RefCell, collections::HashMap};\n\nfn main() {\n    let mut map = HashMap::new();\n\n    map.insert(\"1\", RefCell::new(1));\n    map.insert(\"2\", RefCell::new(2));\n\n    {\n        let a = map.get(\"1\").unwrap();\n        println!(\"a: {}\", a.borrow());\n\n        let b = map.get(\"2\").unwrap();\n        println!(\"b: {}\", b.borrow());\n        *b.borrow_mut() = 5;\n    }\n\n    println!(\"Results: {:?}\", map);\n}\n</code></pre>\n\n<p>This will add a runtime check each time you call <code>borrow()</code> or <code>borrow_mut()</code>, and will panic if you ever attempt to use them incorrectly (if the two keys are equal, unlike your expectations).</p>\n\n<hr>\n\n<p>As for using fields: this works because the compiler can reason about borrowing status on a per-field basis.</p>\n"}, {"tags": [], "owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "is_accepted": false, "score": 2, "last_activity_date": 1576539828, "last_edit_date": 1576539828, "creation_date": 1576539351, "answer_id": 59365701, "question_id": 44453398, "link": "https://stackoverflow.com/questions/44453398/how-can-i-borrow-from-a-hashmap-to-read-and-write-at-the-same-time/59365701#59365701", "title": "How can I borrow from a HashMap to read and write at the same time?", "body": "<p>Something appears to have changed since the question was asked. In Rust 1.38.0 (possibly earlier), the following compiles and works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn f(a: &amp;i32, b: &amp;mut i32) {}\n\nfn main() {\n    let mut map = HashMap::new();\n\n    map.insert(\"1\", 1);\n    map.insert(\"2\", 2);\n\n    let a: &amp;i32 = map.get(\"1\").unwrap();\n    println!(\"a: {}\", a);\n\n    let b: &amp;mut i32 = map.get_mut(\"2\").unwrap();\n    println!(\"b: {}\", b);\n    *b = 5;\n\n    println!(\"Results: {:?}\", map)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4ad4c635c33d6c3dc652cb4b68aeb563\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>There is no need for <code>RefCell</code>, nor is there even a need for the inner scope.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1742, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1576539828, "creation_date": 1496998270, "last_edit_date": 1535079272, "question_id": 44453398, "link": "https://stackoverflow.com/questions/44453398/how-can-i-borrow-from-a-hashmap-to-read-and-write-at-the-same-time", "title": "How can I borrow from a HashMap to read and write at the same time?", "body": "<p>I have a function <code>f</code> that accepts two references, one <code>mut</code> and one not <code>mut</code>. I have values for <code>f</code> inside a <code>HashMap</code>:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn f(a: &amp;i32, b: &amp;mut i32) {}\n\nfn main() {\n    let mut map = HashMap::new();\n\n    map.insert(\"1\", 1);\n    map.insert(\"2\", 2);\n\n    {\n        let a: &amp;i32 = map.get(\"1\").unwrap();\n        println!(\"a: {}\", a);\n\n        let b: &amp;mut i32 = map.get_mut(\"2\").unwrap();\n        println!(\"b: {}\", b);\n        *b = 5;\n    }\n    println!(\"Results: {:?}\", map)\n}\n</code></pre>\n\n<p>This doesn't work because <code>HashMap::get</code> and <code>HashMap::get_mut</code> attempt to  mutably borrow and immutably borrow at the same time:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `map` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:15:27\n   |\n12 |         let a: &amp;i32 = map.get(\"1\").unwrap();\n   |                       --- immutable borrow occurs here\n...\n15 |         let b: &amp;mut i32 = map.get_mut(\"2\").unwrap();\n   |                           ^^^ mutable borrow occurs here\n...\n18 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>In my real code I'm using a large, complex structure instead of a <code>i32</code> so it is not a good idea to clone it.</p>\n\n<p>In fact, I'm borrowing two different things mutably/immutably, like:</p>\n\n<pre><code>struct HashMap {\n    a: i32,\n    b: i32,\n}\nlet mut map = HashMap { a: 1, b: 2 };\nlet a = &amp;map.a;\nlet b = &amp;mut map.b;\n</code></pre>\n\n<p>Is there any way to explain to the compiler that this is actually safe code?</p>\n\n<p>I see how it possible to solve in the concrete case with <code>iter_mut</code>:</p>\n\n<pre><code>{\n    let mut a: &amp;i32 = unsafe { mem::uninitialized() };\n    let mut b: &amp;mut i32 = unsafe { mem::uninitialized() };\n    for (k, mut v) in &amp;mut map {\n        match *k {\n            \"1\" =&gt; {\n                a = v;\n            }\n            \"2\" =&gt; {\n                b = v;\n            }\n            _ =&gt; {}\n        }\n    }\n    f(a, b);\n}\n</code></pre>\n\n<p>But this is slow in comparison with <code>HashMap::get/get_mut</code></p>\n"}, {"tags": ["rust", "iron"], "owner": {"reputation": 13357, "user_id": 471436, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/ac8bf979af0a8c220805fb61477d7c98?s=128&d=identicon&r=PG", "display_name": "Lanbo", "link": "https://stackoverflow.com/users/471436/lanbo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "closed_date": 1497013160, "answer_count": 0, "score": 2, "last_activity_date": 1497013476, "creation_date": 1496993818, "last_edit_date": 1497013476, "question_id": 44451984, "link": "https://stackoverflow.com/questions/44451984/compiler-complaint-about-deserialize-not-derived", "closed_reason": "Duplicate", "title": "Compiler complaint about `Deserialize` not derived", "body": "<p>I have been trying to get <code>bodyparser</code> and <code>iron</code> to work. This is my structure so far:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate iron;\nextern crate serde;\nextern crate bodyparser;\n\n#[derive(Serialize, Deserialize, Clone, Debug)]\nstruct UserLogin {\n    email: String,\n    password: String,\n}\n\nfn login(req: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    let user : UserLogin = match req.get::&lt;bodyparser::Struct&lt;UserLogin&gt;&gt;() {\n        Ok(Some(body)) =&gt; body,\n        _ =&gt; return internal_error(\"Malformed body\")\n    };\n    // Omitted for brevity\n}\n</code></pre>\n\n<p>But the compiler gives me an error here:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `routes::UserLogin: serde::de::Deserialize` is not satisfied\n   --&gt; src/routes/mod.rs:130:38\n    |\n130 |     let user : UserLogin = match req.get::&lt;bodyparser::Struct&lt;UserLogin&gt;&gt;() {\n    |                                      ^^^ the trait `serde::de::Deserialize` is not implemented for `routes::UserLogin`\n    |\n    = note: required because of the requirements on the impl of `iron::typemap::Key` for `bodyparser::Struct&lt;routes::UserLogin&gt;`\n</code></pre>\n\n<p>But I used <code>#[derive(Deserialize)]</code> up there on the <code>struct</code>, so I don't know what's wrong here. Full source can be found <a href=\"https://github.com/scan/beancounter-api/tree/iron\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>My <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nbodyparser = \"0.5\"\nbson = \"0.8\"\niron = \"0.5\"\njwt = \"0.4\"\nmongodb = \"0.3\"\nrouter = \"0.5\"\nrust-crypto = \"0.2\"\nserde = \"1.0\"\nserde_derive = \"1.0\"\nserde_json = \"1.0\"\ntime = \"0.1\"\n</code></pre>\n"}, {"tags": ["macros", "rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "edited": false, "score": 0, "creation_date": 1496986895, "post_id": 44449910, "comment_id": 75897071, "body": "Thank you! I tried working with <code>one_of!</code> for quite some time, but since I&#39;m new to Rust I wasn&#39;t aware of <code>.as_ref()</code> or how to interpret the errors relating to slices. Doing it like that gets rid of my macros and makes all these parsers look a lot cleaner."}, {"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "reply_to_user": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "edited": false, "score": 0, "creation_date": 1496986953, "post_id": 44449910, "comment_id": 75897099, "body": "Arrays and slice syntax can be a bit tricky. You are welcome =)"}], "tags": [], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "is_accepted": true, "score": 3, "last_activity_date": 1496986157, "creation_date": 1496986157, "answer_id": 44449910, "question_id": 44449354, "link": "https://stackoverflow.com/questions/44449354/match-one-of-several-bytes-in-nom/44449910#44449910", "title": "Match one of several bytes in nom", "body": "<p>We can use <a href=\"http://rust.unhandledexpression.com/nom/macro.one_of.html\" rel=\"nofollow noreferrer\"><code>one_of!(..)</code></a> like <a href=\"https://play.integer32.com/?gist=406c02cf7cabed0f7a9fa6fa8ff12e25&amp;version=stable\" rel=\"nofollow noreferrer\">so</a>:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\nuse nom::*;\n\n// Your type might look a different, I infered what I could:\n#[derive(Debug)]\nenum Instruction {\n    AbsoluteLong(u8, u32)\n}\n\nnamed!(absolute_long&lt;Instruction&gt;, do_parse!(\n       op: one_of!([0x0F, 0x22, 0x2F, 0x4F, 0x5C, 0x6F, 0x8F, 0xAF, 0xCF, 0xEF].as_ref())\n    &gt;&gt; param: le_u24\n    &gt;&gt; (Instruction::AbsoluteLong(op as u8, param))\n));\n\nfn main() {\n    println!(\"{:?}\", absolute_long(&amp;[0x0F, 0x01, 0x01, 0x01, 0x01]));\n}\n</code></pre>\n\n<p><code>one_of!</code> must be given a slice to work with. We can get one by casting an array to it with <a href=\"https://doc.rust-lang.org/nightly/std/convert/trait.AsRef.html#tymethod.as_ref\" rel=\"nofollow noreferrer\"><code>.as_ref()</code></a>.</p>\n"}], "owner": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 1, "accepted_answer_id": 44449910, "answer_count": 1, "score": 2, "last_activity_date": 1496986157, "creation_date": 1496982711, "question_id": 44449354, "link": "https://stackoverflow.com/questions/44449354/match-one-of-several-bytes-in-nom", "title": "Match one of several bytes in nom", "body": "<p>I am using <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a> to parse some binary 65c816 assembly data. Part of my parser structure splits opcodes into their separate forms and then grabs their parameters if they have any. An example parser currently looks like this: </p>\n\n<pre><code>named!(absolute_long&lt;Instruction&gt;, \n    do_parse!(op: bits!(alt!(\n        opcode!(0x0F) | opcode!(0x22) | opcode!(0x2F) | opcode!(0x4F) | \n        opcode!(0x5C) | opcode!(0x6F) | opcode!(0x8F) | opcode!(0xAF) | \n        opcode!(0xCF) | opcode!(0xEF)))\n&gt;&gt; param: le_u24\n&gt;&gt; (Instruction::AbsoluteLong(op, param))));\n</code></pre>\n\n<p>Where <code>opcode!</code> is a macro I made that does the following:</p>\n\n<pre><code>macro_rules! opcode(\n    ($i:expr, $op:expr) =&gt; (\n        tag_bits!($i, u8, 8, $op);\n    );\n    ($i:expr, $f:expr) =&gt; (\n        opcode!($i, call!($f));\n    );\n);\n</code></pre>\n\n<p>I would instead like to have code like the following but am unable to figure out how I'd make a macro or function to do it:</p>\n\n<pre><code>named!(absolute_long&lt;Instruction&gt;, \n    do_parse!(op: opcodes!(\n        0x0F, 0x22, 0x2F, 0x4F, 0x5C, 0x6F, 0x8F, 0xAF, \n        0xCF, 0xEF)\n    &gt;&gt; param: le_u24\n    &gt;&gt; (Instruction::AbsoluteLong(op, parm)));\n</code></pre>\n\n<p>The closest I got was making this macro, but it almost immediately runs into recursion limits and it seems really sub-optimal in general:</p>\n\n<pre><code>macro_rules! opcodes(\n    ($i:expr, $op:expr) =&gt; {\n        opcode!($i, $op)\n    };\n\n    ($i:expr, $op:expr, $($more:expr), *) =&gt; (\n        bits!($i, alt!(opcode!($op) | opcodes!($($more),*)))\n    );\n);\n</code></pre>\n\n<p>Is there any way I can implement something like this or am I better off just using <code>tag_bits</code>? I feel like I should be able to use <code>one_of</code>, but I am unable to get it to work with bytes.</p>\n"}, {"tags": ["recursion", "macros", "rust", "constants", "compile-time-constant"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496977689, "post_id": 44448488, "comment_id": 75894531, "body": "Is there anything preventing you from utilizing a build script?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496977706, "post_id": 44448488, "comment_id": 75894539, "body": "See also <a href=\"https://stackoverflow.com/q/33751796/155423\">Is there a way to count with macros?</a>"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1497006777, "post_id": 44448488, "comment_id": 75908794, "body": "You could perhaps manually compute it but write a test that asserts the dynamic computation?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497008000, "post_id": 44448488, "comment_id": 75909649, "body": "The recursion here is unconditional, since you <i>always</i> call <code>factorial</code>. Multiplying <code>n</code> and <code>1</code> in <code>factorial(n - 1)</code> leads to a stackoverflow of the compiler =&gt; <a href=\"https://play.rust-lang.org/?gist=a5225a8d24f6857c75f85e843f1f3c11&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 170, "user_id": 4521422, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CUR0r.jpg?s=128&g=1", "display_name": "2012rcampion", "link": "https://stackoverflow.com/users/4521422/2012rcampion"}, "edited": false, "score": 0, "creation_date": 1497281769, "post_id": 44448488, "comment_id": 76000362, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/33751796/is-there-a-way-to-count-with-macros\">Is there a way to count with macros?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1554236574, "last_edit_date": 1554236574, "creation_date": 1497012088, "answer_id": 44458138, "question_id": 44448488, "link": "https://stackoverflow.com/questions/44448488/is-it-possible-to-have-a-recursive-function-computed-at-compile-time-in-rust/44458138#44458138", "title": "Is it possible to have a recursive function computed at compile-time in Rust?", "body": "<p>This is currently explored under the feature <code>const_fn</code>, but for now you cannot call a function, even const, from another const function.</p>\n\n<p>You can however break out the big guns: metaprogramming (procedural macro) to compute the value at compile-time. I found <a href=\"https://docs.rs/const_fn\" rel=\"nofollow noreferrer\">this crate</a> for example (but did not test it, though).</p>\n\n<p><a href=\"https://rosettacode.org/wiki/Compile-time_calculation#Rust\" rel=\"nofollow noreferrer\">This Rosetta Code page on compile time calculation</a> shows that the compiler can do <em>some</em> compile-time optimization, but nothing is guaranteed, and this is only a particular case.</p>\n"}, {"tags": [], "owner": {"reputation": 146, "user_id": 1248465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26a1b292373f49f982a3058fac4a6c8f?s=128&d=identicon&r=PG", "display_name": "user1248465", "link": "https://stackoverflow.com/users/1248465/user1248465"}, "is_accepted": true, "score": 2, "last_activity_date": 1603133566, "last_edit_date": 1603133566, "creation_date": 1603098646, "answer_id": 64424328, "question_id": 44448488, "link": "https://stackoverflow.com/questions/44448488/is-it-possible-to-have-a-recursive-function-computed-at-compile-time-in-rust/64424328#64424328", "title": "Is it possible to have a recursive function computed at compile-time in Rust?", "body": "<p>Since your original question, Rust has been updated and now supports conditionals in <code>const fn</code>, so the first two solutions work. See the <a href=\"https://doc.rust-lang.org/reference/items/functions.html#const-functions\" rel=\"nofollow noreferrer\">Const functions section in the Rust Reference</a>\nwhich states that you can have &quot;Calls to other safe const functions (whether by function call or method call)&quot; in const functions.</p>\n<p>For your particular factorial example, you have (at least) a couple options. Here is a factorial function that I have successfully compiled:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>const fn factorial(n: u64) -&gt; u64 {\n    match n {\n        0u64 | 1u64 =&gt; 1,\n        2u64..=20u64 =&gt; factorial(n - 1u64) * n,\n        _ =&gt; 0,\n    }\n}\n</code></pre>\n<p>Note, n! where n &gt; 20 will overflow a <code>u64</code>, so I decided to return 0 in that case. Also, since <code>usize</code> could be a 32-bit value, I explicitly use the 64-bit <code>u64</code> in this case. Handling the <code>u64</code> overflow case also prevents the stack overflow. This could return an <code>Option&lt;u64&gt;</code> instead:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>const fn factorial(n: u64) -&gt; Option&lt;u64&gt; {\n    match n {\n        0u64 | 1u64 =&gt; Some(1),\n        2u64..=20u64 =&gt; match factorial(n - 1u64) {\n            Some(x) =&gt; Some(n * x),\n            None =&gt; None,\n        },\n        _ =&gt; None,\n    }\n}\n</code></pre>\n<p>In my case, returning an <code>Option&lt;u64&gt;</code> limited how I could use the function, so I found it more useful to just return a <code>u64</code> with 0 as the analogue to <code>None</code>.</p>\n"}], "owner": {"reputation": 170, "user_id": 4521422, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CUR0r.jpg?s=128&g=1", "display_name": "2012rcampion", "link": "https://stackoverflow.com/users/4521422/2012rcampion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 850, "favorite_count": 0, "accepted_answer_id": 64424328, "answer_count": 2, "score": 7, "last_activity_date": 1603133668, "creation_date": 1496976307, "last_edit_date": 1603133668, "question_id": 44448488, "link": "https://stackoverflow.com/questions/44448488/is-it-possible-to-have-a-recursive-function-computed-at-compile-time-in-rust", "title": "Is it possible to have a recursive function computed at compile-time in Rust?", "body": "<p>I want to compute the factorial of a <code>const</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>const N: usize = 4;\nconst N_PERMUTATIONS = factorial(N);\n</code></pre>\n<p>The solutions I've thought of that don't work in Rust 1.18 are:</p>\n<ul>\n<li><p><code>const fn</code> \u2014 conditional statements are not allowed (or at least not implemented) in <code>const fn</code>, so neither of these will compile:</p>\n<pre><code>const fn factorial(n: usize) -&gt; usize {\n    match n {\n        0 =&gt; 1,\n        _ =&gt; n * factorial(n-1)\n    }\n}\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>const fn factorial(n: usize) -&gt; usize {\n    if n == 0 {\n        1\n    } else {\n        n * factorial(n-1)\n    }\n}\n</code></pre>\n</li>\n<li><p>macros \u2014 evaluation of expressions is performed after all macro expansion.  This macro will never reach the base case, since after four iterations the argument is <code>4-1-1-1-1</code>, which is not matched by <code>0</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules!factorial {\n    (0) =&gt; (1);\n    ($n:expr) =&gt; ($n * factorial($n-1));\n}\n</code></pre>\n</li>\n</ul>\n<p>I also tried the following, which would work if <code>*</code> had short-circuit evaluation, but as-is has unconditional recursion which yields a stack overflow:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>const fn factorial(n: usize) -&gt; usize {\n    ((n == 0) as usize) + ((n != 0) as usize) * n * factorial(n-1)\n}\n</code></pre>\n<p>As Matthieu M. pointed out, we can avoid integer underflow (but not stack overflow) by using <code>factorial(n - ((n != 0) as usize))</code>.</p>\n<p>For now I've resorted to manually computing the factorial.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 1, "creation_date": 1496962602, "post_id": 44445976, "comment_id": 75890992, "body": "If it is <code>Deref</code>, should <code>&lt;Vec&lt;i32&gt; as Deref&gt;::get(self, index)</code> also do the trick?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 1, "creation_date": 1496962785, "post_id": 44445976, "comment_id": 75891037, "body": "@user1244932 an interesting question, but it doesn&#39;t appear so. The whole point of this syntax is to be unambiguous, so <code>&lt;T as Deref&gt;</code> would mean &quot;only the methods on the <code>Deref</code> trait&quot;, but <code>get</code> isn&#39;t such a method."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 23, "last_activity_date": 1560195463, "last_edit_date": 1560195463, "creation_date": 1496957837, "answer_id": 44445976, "question_id": 44445730, "link": "https://stackoverflow.com/questions/44445730/how-to-call-a-method-when-a-trait-and-struct-use-the-same-method-name/44445976#44445976", "title": "How to call a method when a trait and struct use the same method name?", "body": "<p>To specify which method to call, whether inherent or provided from a trait, you want to use the <a href=\"https://doc.rust-lang.org/stable/book/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"noreferrer\"><em>fully qualified syntax</em></a>:</p>\n\n<pre><code>Type::function(maybe_self, needed_arguments, more_arguments)\nTrait::function(maybe_self, needed_arguments, more_arguments)\n</code></pre>\n\n<p>Your case doesn't work because <code>Vec</code> <em>doesn't have a method called <code>get</code></em>! <code>get</code> is provided from the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#deref-methods\" rel=\"noreferrer\"><code>Deref</code> implementation to <code>[T]</code></a>.</p>\n\n<p>The easiest fix is to call <code>as_slice</code> directly:</p>\n\n<pre><code>self.as_slice().get(index).map(|v| v as &amp;Any)\n</code></pre>\n\n<p>You could also use the fully qualified syntax which requires the angle brackets in this case (<code>&lt;...&gt;</code>) to avoid ambiguity with declaring an array literal:</p>\n\n<pre><code>&lt;[i32]&gt;::get(self, index).map(|v| v as &amp;Any)\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>universal call syntax </p>\n</blockquote>\n\n<p>Note that while Rust originally used the term universal function call syntax (UFCS), the usage of this term conflicted with the existing understood programming term, so the use of it is not suggested. The replacement term is fully qualified syntax.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7680, "favorite_count": 5, "accepted_answer_id": 44445976, "answer_count": 1, "score": 19, "last_activity_date": 1560195463, "creation_date": 1496956734, "last_edit_date": 1546992409, "question_id": 44445730, "link": "https://stackoverflow.com/questions/44445730/how-to-call-a-method-when-a-trait-and-struct-use-the-same-method-name", "title": "How to call a method when a trait and struct use the same method name?", "body": "<p>This program dies because of infinite recursion:</p>\n\n<pre><code>use std::any::Any;\n\ntrait Foo {\n    fn get(&amp;self, index: usize) -&gt; Option&lt;&amp;Any&gt;;\n}\n\nimpl Foo for Vec&lt;i32&gt; {\n    fn get(&amp;self, index: usize) -&gt; Option&lt;&amp;Any&gt; {\n        Vec::get(self, index).map(|v| v as &amp;Any)\n    }\n}\n\nfn main() {\n    let v: Vec&lt;i32&gt; = vec![1, 2, 4];\n    println!(\"Results: {:?}\", v.get(0))\n}\n</code></pre>\n\n<p>The compiler itself warns about this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: function cannot return without recurring\n  --&gt; src/main.rs:8:5\n   |\n8  |       fn get(&amp;self, index: usize) -&gt; Option&lt;&amp;Any&gt; {\n   |  _____^ starting here...\n9  | |         Vec::get(self, index).map(|v| v as &amp;Any)\n10 | |     }\n   | |_____^ ...ending here\n   |\n   = note: #[warn(unconditional_recursion)] on by default\nnote: recursive call site\n  --&gt; src/main.rs:9:9\n   |\n9  |         Vec::get(self, index).map(|v| v as &amp;Any)\n   |         ^^^^^^^^^^^^^^^^^^^^^\n   = help: a `loop` may express intention better if this is on purpose\n</code></pre>\n\n<p>Why does universal call syntax not work in this case? The compiler does not understand that I want to call <code>Vec::get</code> not <code>Foo::get</code>.</p>\n\n<p>How can I fix this, if I do not want to change function names?</p>\n"}, {"tags": ["parsing", "rust", "nom"], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 6115505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6747e1232906dcc31f55ea58c13d19f9?s=128&d=identicon&r=PG&f=1", "display_name": "readysetmark", "link": "https://stackoverflow.com/users/6115505/readysetmark"}, "is_accepted": false, "score": 1, "last_activity_date": 1497042141, "last_edit_date": 1497042141, "creation_date": 1497041307, "answer_id": 44466466, "question_id": 44444254, "link": "https://stackoverflow.com/questions/44444254/how-to-match-any-of-a-vector-of-strings-with-nom/44466466#44466466", "title": "How to match any of a Vector of strings with nom?", "body": "<p>I'm not really familiar with nom, and still learning Rust, but I have used parser combinators in the past.</p>\n\n<p>Caveats aside, it looks like the <code>named!</code> macro generates a function that only takes one parameter, the string to parse.</p>\n\n<p>To satisfy nom's expectations, I think I'd look at writing <code>alternative_wrapper</code> as a function that returns a function instead. The test would end up looking like this:</p>\n\n<pre><code>#[test]\nfn test_date() {\n    let months = vec!(\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n        ).iter().map(|s| s.to_string()).collect();\n    let parser = generate_alternative_parser(months);\n    named!(alternative, call!(parser));\n    println!(\"{:?}\", alternative(\"May\".as_bytes()));\n}\n</code></pre>\n\n<p>It looks like you'd need to construct an <code>alt!</code> expression from <code>tag!</code>s, but it's not immediately obvious to me from the docs how you'd do that.</p>\n\n<p>Where does your list of options ultimately come from?</p>\n\n<p>Depending on exactly what you are trying to accomplish, there might be some other ways to accomplish what you're trying to do as well. For example, you might be able to parse any word and then validate it against one of your options afterwards.</p>\n"}, {"tags": [], "owner": {"reputation": 19616, "user_id": 44563, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/0ef1a594b87584a77f5281824969c8f0?s=128&d=identicon&r=PG", "display_name": "Zoomulator", "link": "https://stackoverflow.com/users/44563/zoomulator"}, "is_accepted": false, "score": 3, "last_activity_date": 1504338943, "creation_date": 1504338943, "answer_id": 46011682, "question_id": 44444254, "link": "https://stackoverflow.com/questions/44444254/how-to-match-any-of-a-vector-of-strings-with-nom/46011682#46011682", "title": "How to match any of a Vector of strings with nom?", "body": "<p>Starting with the errors, the first error is due to <code>named!</code> only taking a single argument, namely the input string. <code>named!</code> will declare a function for you, in this case with the signature <code>fn(&amp;[u8]) -&gt; IResult&lt;&amp;[u8],&amp;[u8]&gt;</code>. There's no magic regarding any other arguments, so trying to pass your <code>months</code> vector as a second argument will not work. There's a variant of <code>named!</code> called <code>named_args!</code> that can be used to declare functions with more arguments than just the input that should sort that out.</p>\n\n<p>The second error is similar but reversed. You're calling the <code>alternative_wrapper</code> with only the input and no vector via <code>call!</code>. The <code>call!</code> macro can actually pass arguments, but you must do it explicitly, i.e <code>call!(myparser, monts)</code>. </p>\n\n<p>With the reasons to the errors sorted out, you're asking about how to create a parser. Well, actually, <code>alternative_wrapper</code> is <em>already</em> a nom parser by signature, but since you didn't declare it via a nom macro, none of the magic input passing happens, which is why <code>tag!</code> doesn't work in the function body when you've tried.</p>\n\n<p>In order to use other combinators in a function that you have declared yourself, you have to pass the input manually to the outermost macro. In this case it's only <code>tag!</code>, but if you were to use, say, <code>do_parse!</code> and then multiple macros within that, you'd only need to pass the input to <code>do_parse!</code>. I'll provide a working version with a few additional tweaks here:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse std::str;\nuse nom::IResult;\n\nfn alternative&lt;'a&gt;(input: &amp;'a [u8], alternatives: &amp;Vec&lt;String&gt;) -&gt; IResult&lt;&amp;'a [u8], &amp;'a [u8]&gt; {\n    for alternative in alternatives {\n        match tag!(input, alternative.as_bytes()) {\n            done@IResult::Done(..) =&gt; return done,\n            _ =&gt; () // continue\n        }\n    }\n    IResult::Error(nom::ErrorKind::Tag) // nothing found.\n}\n\nfn main() {\n    let months: Vec&lt;String&gt; = vec![\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\", \"November\", \"December\"\n    ].into_iter().map(String::from).collect();\n\n    fn print_res(r: IResult&lt;&amp;[u8],&amp;[u8]&gt;) {\n        println!(\"{:?}\", r);\n        println!(\"{:?}\\n\", str::from_utf8(r.unwrap().1).unwrap());\n    }\n    print_res(alternative(b\"May\", &amp;months));\n    print_res(alternative(b\"August\", &amp;months));\n    print_res(alternative(b\"NoGood\", &amp;months));\n}\n</code></pre>\n\n<p>You can check it out in the <a href=\"https://play.rust-lang.org/?gist=c98b3af5b6d2a96b42b37c32d904afaf&amp;version=stable\" rel=\"nofollow noreferrer\">rust playground</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 637, "user_id": 3539967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d996c9281d76cb2028ce201ba9aa2c4?s=128&d=identicon&r=PG&f=1", "display_name": "Russell Cohen", "link": "https://stackoverflow.com/users/3539967/russell-cohen"}, "is_accepted": false, "score": 0, "last_activity_date": 1548000239, "last_edit_date": 1548000239, "creation_date": 1547970588, "answer_id": 54274523, "question_id": 44444254, "link": "https://stackoverflow.com/questions/44444254/how-to-match-any-of-a-vector-of-strings-with-nom/54274523#54274523", "title": "How to match any of a Vector of strings with nom?", "body": "<p>With Nom 4, here is a fully generic input that works no matter what your parser operates on:</p>\n\n<pre><code>/// Dynamic version of `alt` that takes a slice of strings\nfn alternative&lt;T&gt;(input: T, alternatives: &amp;[&amp;'static str]) -&gt; IResult&lt;T, T&gt;\nwhere\n    T: InputTake,\n    T: Compare&lt;&amp;'static str&gt;,\n    T: InputLength,\n    T: AtEof,\n    T: Clone,\n{\n    let mut last_err = None;\n    for alternative in alternatives {\n        let inp = input.clone();\n        match tag!(inp, &amp;**alternative) {\n            done @ Ok(..) =&gt; return done,\n            err @ Err(..) =&gt; last_err = Some(err), // continue\n        }\n    }\n    last_err.unwrap()\n}\n\n/// Usage\nnamed!(test&lt;Span, Span&gt;,\n    call!(alternative, &amp;[\"a\", \"b\", \"c\"])\n);\n</code></pre>\n"}], "owner": {"reputation": 1047, "user_id": 1146183, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d5152bd68f7c09d1c3172874b3ce2150?s=128&d=identicon&r=PG", "display_name": "Marcus Buffett", "link": "https://stackoverflow.com/users/1146183/marcus-buffett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 927, "favorite_count": 1, "answer_count": 3, "score": 1, "last_activity_date": 1548000239, "creation_date": 1496950721, "last_edit_date": 1496952304, "question_id": 44444254, "link": "https://stackoverflow.com/questions/44444254/how-to-match-any-of-a-vector-of-strings-with-nom", "title": "How to match any of a Vector of strings with nom?", "body": "<p>I'm trying to create a parser with nom that will parse some text that could be one of many options. Nom has <code>alt!</code> for when the values are known at compile-time, but my values won't be.</p>\n\n<p>This has been my attempt to create my own parser that can take a <code>Vec&lt;String&gt;</code> to match against, and I'm running into a couple issues.</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse nom::IResult;\n\nfn alternative_wrapper&lt;'a&gt;(input: &amp;'a [u8], alternatives: Vec&lt;String&gt;) -&gt; IResult&lt;&amp;'a [u8], &amp;'a [u8]&gt; {\n    for alternative in alternatives {\n        // tag!(\"alternative\");\n        println!(\"{}\", alternative);\n    }\n    return IResult::Done(input, \"test\".as_bytes());\n}\n\n#[test]\nfn test_date() {\n    let input = \"May\";\n    named!(alternative, call!(alternative_wrapper));\n    let months = vec!(\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n        ).iter().map(|s| s.to_string()).collect();\n    println!(\"{:?}\", alternative(\"May\".as_bytes(), months));\n}\n</code></pre>\n\n<p>I'm aware that my <code>alternative_wrapper</code> function doesn't actually do anything useful, but that's not the problem. This is what Rust complains about for this snippet:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0061]: this function takes 1 parameter but 2 parameters were supplied\n  --&gt; src/parser.rs:32:34\n   |\n17 |     named!(alternative, call!(alternative_wrapper));\n   |     ------------------------------------------------ defined here\n...\n32 |     println!(\"{:?}\", alternative(\"May\".as_bytes(), months));\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 parameter\n   |\n   = note: this error originates in a macro outside of the current crate\n\nerror[E0061]: this function takes 2 parameters but 1 parameter was supplied\n  --&gt; src/parser.rs:17:5\n   |\n6  | / fn alternative_wrapper&lt;'a&gt;(input: &amp;'a [u8], alternatives: Vec&lt;String&gt;) -&gt; IResult&lt;&amp;'a [u8], &amp;'a\n[u8]&gt; {\n7  | |     for alternative in alternatives {\n8  | |         // tag!(\"alternative\");\n9  | |         println!(\"{}\", alternative);\n10 | |     }\n11 | |     return IResult::Done(input, \"test\".as_bytes());\n12 | | }\n   | |_- defined here\n...\n17 |       named!(alternative, call!(alternative_wrapper));\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters\n   |\n   = note: this error originates in a macro outside of the current crate\n</code></pre>\n\n<p>How I can create a parser out of my function? And how I can use existing parsers such as <code>tag!</code> from within <code>alternative_wrapper</code>?</p>\n"}, {"tags": ["rust", "emscripten", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "edited": false, "score": 1, "creation_date": 1496982345, "post_id": 44449135, "comment_id": 75895615, "body": "nice approach. Didn&#39;t thought you can do that. Thanks!"}, {"owner": {"reputation": 6045, "user_id": 3983557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/01A0D.jpg?s=128&g=1", "display_name": "JF Bastien", "link": "https://stackoverflow.com/users/3983557/jf-bastien"}, "reply_to_user": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "edited": false, "score": 0, "creation_date": 1496982954, "post_id": 44449135, "comment_id": 75895784, "body": "As the bug I filed says, it&#39;s a bit lacking still! If anyone finds extra things missing in the JavaScript API please do file bugs documenting usecase and, if you&#39;re feeling creative, suggesting an API to fix what you&#39;re trying to do. As people start using WebAssembly it&#39;s expected that they&#39;ll find things we overlooked or punted to later."}], "tags": [], "owner": {"reputation": 6045, "user_id": 3983557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/01A0D.jpg?s=128&g=1", "display_name": "JF Bastien", "link": "https://stackoverflow.com/users/3983557/jf-bastien"}, "is_accepted": true, "score": 3, "last_activity_date": 1496981112, "creation_date": 1496981112, "answer_id": 44449135, "question_id": 44444050, "link": "https://stackoverflow.com/questions/44444050/obtaining-javascript-import-object-entries-from-a-webassembly-wasm-module/44449135#44449135", "title": "Obtaining JavaScript import object entries from a WebAssembly .wasm module", "body": "<p>You can use a tool such as <a href=\"https://github.com/WebAssembly/wabt\" rel=\"nofollow noreferrer\">wabt</a>'s <code>wasm2wast</code> to translate a <code>.wasm</code> file to the equivalent <code>.wast</code>. That would do what you ask for.</p>\n\n<p>However, you don't necessarily need to do this! The JavaScript API gives you <em>most</em> of what you want:</p>\n\n<pre><code>let arrayBuffer = ...; // Somehow get your .wasm file into an ArrayBuffer. XHR, from a string, or what have you.\nlet module = WebAssembly.Module(arrayBuffer); // This is the synchronous API! Only use it for testing / offline things.\n\nlet importObject = {};\nfor (let imp of WebAssembly.Module.imports(module)) {\n    if (typeof importObject[imp.module] === \"undefined\")\n        importObject[imp.module] = {};\n    switch (imp.kind) {\n    case \"function\": importObject[imp.module][imp.name] = () =&gt; {}; break;\n    case \"table\": importObject[imp.module][imp.name] = new WebAssembly.Table({ initial: ???, maximum: ???, element: \"anyfunc\" }); break;\n    case \"memory\": importObject[imp.module][imp.name] = new WebAssembly.Memory({ initial: ??? }); break;\n    case \"global\": importObject[imp.module][imp.name] = 0; break;\n    }\n}\n</code></pre>\n\n<p>Note that Table and Memory initial / maximum are currently guesses! I'm proposing that we <a href=\"https://github.com/WebAssembly/design/issues/1046\" rel=\"nofollow noreferrer\">add the missing information to the JS API</a>. I think at the next WebAssembly meeting may be a good time to discuss such an addition.</p>\n"}], "owner": {"reputation": 2001, "user_id": 2707195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/RlRWZ.jpg?s=128&g=1", "display_name": "Andrei CACIO", "link": "https://stackoverflow.com/users/2707195/andrei-cacio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 876, "favorite_count": 0, "accepted_answer_id": 44449135, "answer_count": 1, "score": 3, "last_activity_date": 1496983086, "creation_date": 1496950018, "last_edit_date": 1496983086, "question_id": 44444050, "link": "https://stackoverflow.com/questions/44444050/obtaining-javascript-import-object-entries-from-a-webassembly-wasm-module", "title": "Obtaining JavaScript import object entries from a WebAssembly .wasm module", "body": "<p>I want to understand what a Rust program actually exports when it is compiled to a wasm file so I can provide a valid <code>importObject</code> to the instantiate function:</p>\n\n<pre><code>WebAssembly.instantiate(bufferSource, importObject);\n</code></pre>\n\n<p>As far as I understand, the only way to do this is by exporting an s-syntax like file of the compiled code.  I can't find how to do this in their docs or through web searches.</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "comments": [{"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1496947043, "post_id": 44442861, "comment_id": 75884079, "body": "<code>let is_div = |&amp;n, p| { n % p == zero};</code> should work. Where is <code>BigInt</code> from?"}, {"owner": {"reputation": 2154, "user_id": 2312075, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g2VYN.jpg?s=128&g=1", "display_name": "saarrrr", "link": "https://stackoverflow.com/users/2312075/saarrrr"}, "reply_to_user": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1496947188, "post_id": 44442861, "comment_id": 75884152, "body": "@Centril num crate"}, {"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "reply_to_user": {"reputation": 2154, "user_id": 2312075, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g2VYN.jpg?s=128&g=1", "display_name": "saarrrr", "link": "https://stackoverflow.com/users/2312075/saarrrr"}, "edited": false, "score": 0, "creation_date": 1496947258, "post_id": 44442861, "comment_id": 75884193, "body": "@saarrrr I tried with <code>num</code>, didn&#39;t work - perhaps it was an outdated version tho."}], "answers": [{"comments": [{"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1496947294, "post_id": 44443246, "comment_id": 75884214, "body": "Can&#39;t accept until I understand. I&#39;m passing <code>&amp;to_factor</code> to it -- so it shouldn&#39;t be able to take it forever! Is it taking the <i>borrow</i> forever? Is this a closure thing? Because it works for functions."}, {"owner": {"reputation": 2154, "user_id": 2312075, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g2VYN.jpg?s=128&g=1", "display_name": "saarrrr", "link": "https://stackoverflow.com/users/2312075/saarrrr"}, "reply_to_user": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1496947728, "post_id": 44443246, "comment_id": 75884444, "body": "@RichardRast See edit, hopefully that clears it up for you.  Your function/closure signatures are not the same, that&#39;s why it worked in your function and not your closure."}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1496948266, "post_id": 44443246, "comment_id": 75884732, "body": "Still confused. If the signature of the closure was <code>BigInt</code>, why was it legal to call it on <code>&amp;BigInt</code>? The compiler seems to have no issue with the call itself, only that I modified <code>to_factor</code> afterward."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1496954788, "post_id": 44443246, "comment_id": 75888112, "body": "<i>change the closure signature to borrow <code>to_factor</code></i> \u2014 that change does not really cause a borrow, it only dereferences the passed-in parameter; <code>&amp;foo</code> is a pattern, not a type. <i>Can&#39;t use crates on the playground</i> \u2014 <a href=\"https://play.integer32.com/\" rel=\"nofollow noreferrer\">play.integer32.com</a>"}], "tags": [], "owner": {"reputation": 2154, "user_id": 2312075, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g2VYN.jpg?s=128&g=1", "display_name": "saarrrr", "link": "https://stackoverflow.com/users/2312075/saarrrr"}, "is_accepted": false, "score": 0, "last_activity_date": 1496954672, "last_edit_date": 1496954672, "creation_date": 1496947036, "answer_id": 44443246, "question_id": 44442861, "link": "https://stackoverflow.com/questions/44442861/why-does-a-closure-introduce-a-borrow-when-the-same-code-inlined-does-not/44443246#44443246", "title": "Why does a closure introduce a borrow when the same code inlined does not?", "body": "<p>As you've written it, the <code>is_div</code> closure does not borrow <code>to_factor</code>, it takes it forever.  If you change the closure signature to borrow <code>to_factor</code> it works.</p>\n\n<pre><code>let is_div = |&amp;n, p| { n % p == zero};\n</code></pre>\n\n<p>Can't use crates on the playground but this illustrates it.</p>\n\n<pre><code>fn main() {\n    let mut to_factor = \"654684234\".parse::&lt;i32&gt;().unwrap();\n\n    let prime = 2;\n\n    let zero = 0;\n\n    let is_div = |&amp;n, p| n % p == zero;\n\n    loop {\n        if is_div(&amp;to_factor, &amp;prime) {\n            to_factor = &amp;to_factor / &amp;prime;\n        } else {\n            break;\n        }\n    }\n\n    println!(\"{}\", to_factor);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1496952683, "post_id": 44444595, "comment_id": 75887034, "body": "Very helpful -- thanks. I&#39;m still a bit confused about why it was comfortable taking a borrow as an argument when it seems to think it wants the thing itself. In the future I&#39;ll use one of these workarounds."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1496954091, "post_id": 44444595, "comment_id": 75887757, "body": "@RichardRast you&#39;ll note that I was cautious to not say what the misbehaving code <i>is</i> doing; that&#39;s because I don&#39;t know for sure! I have some suspicions, but baseless speculation doesn&#39;t help anyone ;-)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1496952145, "creation_date": 1496952145, "answer_id": 44444595, "question_id": 44442861, "link": "https://stackoverflow.com/questions/44442861/why-does-a-closure-introduce-a-borrow-when-the-same-code-inlined-does-not/44444595#44444595", "title": "Why does a closure introduce a borrow when the same code inlined does not?", "body": "<p>You are running into a implementation limitation of the Rust type system, specifically with regards to type inference of closure arguments. Namely, the inferred types are subtly different when you declare a closure that isn't immediately used compared to a closure that is immediately used. </p>\n\n<p>This closure works because type inference can immediately connect the parameters to the arguments:</p>\n\n<pre><code>loop {\n    if (|n, p| n % p == zero)(&amp;to_factor, &amp;prime) {\n        to_factor = &amp;to_factor / &amp;prime;\n    } else {\n        break;\n    }\n}\n</code></pre>\n\n<p>This also works, as we define the types of the arguments immediately:</p>\n\n<pre><code>let is_div = |n: &amp;BigInt, p: &amp;BigInt| n % p == zero;\n\nloop {\n    if is_div(&amp;to_factor, &amp;prime) {\n        to_factor = &amp;to_factor / &amp;prime;\n    } else {\n        break;\n    }\n}\n</code></pre>\n\n<p>This is also the reason that your function version worked.</p>\n\n<p>There are a multitude of issues about this on the issue tracker (it's a very hard thing to search for!), but <a href=\"https://github.com/rust-lang/rust/issues/12679\" rel=\"nofollow noreferrer\">12679</a> is an older one.</p>\n\n<p>This is a reason you often see closures defined inline.</p>\n"}], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 44444595, "answer_count": 2, "score": 2, "last_activity_date": 1496954672, "creation_date": 1496945660, "last_edit_date": 1496950513, "question_id": 44442861, "link": "https://stackoverflow.com/questions/44442861/why-does-a-closure-introduce-a-borrow-when-the-same-code-inlined-does-not", "title": "Why does a closure introduce a borrow when the same code inlined does not?", "body": "<p>This code works:</p>\n\n<pre><code>extern crate num;\n\nuse num::{BigInt, FromPrimitive, Zero};\n\nfn sample() {\n    let mut to_factor = \"600851475143\".parse::&lt;BigInt&gt;().unwrap();\n\n    let mut prime = BigInt::from_i32(2).unwrap();\n\n    let zero = BigInt::zero();\n\n    //let is_div = |n, p| { n % p == zero};\n\n    loop {\n        if &amp;to_factor % &amp;prime == zero {\n            to_factor = &amp;to_factor / &amp;prime;\n        } else {\n            break;\n        }\n    }\n\n    println!(\"{}\", to_factor);\n}\n</code></pre>\n\n<p>but if I try to replace the condition in the loop with a closure, it doesn't compile anymore:</p>\n\n<pre><code>fn sample() {\n    let mut to_factor = \"600851475143\".parse::&lt;BigInt&gt;().unwrap();\n\n    let mut prime = BigInt::from_i32(2).unwrap();\n\n    let zero = BigInt::zero();\n\n    let is_div = |n, p| { n % p == zero};\n\n    loop {\n        if is_div(&amp;to_factor, &amp;prime) {\n            to_factor = &amp;to_factor / &amp;prime;\n        } else {\n            break;\n        }\n    }\n\n    println!(\"{}\", to_factor);\n}\n</code></pre>\n\n<p>The error is as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `to_factor` because it is borrowed\n  --&gt; src/main.rs:16:13\n   |\n15 |         if is_div(&amp;to_factor, &amp;prime) {\n   |                    --------- borrow of `to_factor` occurs here\n16 |             to_factor = &amp;to_factor / &amp;prime;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `to_factor` occurs here\n</code></pre>\n\n<p>It seems fine to me -- the borrow should be \"over\" by the time we alter <code>to_factor</code>, certainly?</p>\n\n<p>To increase the confusion, if I replace <code>is_div</code> with an actual function:</p>\n\n<pre><code>fn is_div(n: &amp;BigInt, p: &amp;BigInt) -&gt; bool {\n    return to_factor % p == BigInt::zero()\n}\n</code></pre>\n\n<p>it works fine. </p>\n\n<p>I am a beginner in Rust, but not to programming generally. I'm pretty sure this has to do with ownership, but it might also have to do with how closures are implemented?</p>\n\n<p>These examples are a MWE from the actual code I was trying to write. They're not really meaningful at this point but they demonstrate the same compile error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1496951304, "post_id": 44442403, "comment_id": 75886332, "body": "Just a heads up: You shouldn&#39;t need to manually execute <code>cargo build</code> before <code>cargo run</code>. <code>cargo run</code> will take care of building automatically if it needs to, passing the relevant flags you give it along."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1496945381, "last_edit_date": 1496945381, "creation_date": 1496944110, "answer_id": 44442462, "question_id": 44442403, "link": "https://stackoverflow.com/questions/44442403/cargo-run-ignores-the-features-specified-to-cargo-build/44442462#44442462", "title": "Cargo run ignores the features specified to cargo build", "body": "<p>You need to pass the features when calling <code>cargo run</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo run --bin gtktest --features gtk_3_10\n</code></pre>\n\n<p>You could also run the executable directly after building it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --bin gtktest --features gtk_3_10\n$ ./target/debug/gtktest\n</code></pre>\n\n<p>You can tell that your command isn't doing what you expect because the output says that your code is being recompiled:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling gtk-rs-examples v0.0.1 (file:///home/me123/rust/gtk_examples)\n</code></pre>\n"}], "owner": {"reputation": 97, "user_id": 8084227, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/400447e5c3436202823b1c4a5860adbb?s=128&d=identicon&r=PG&f=1", "display_name": "Ko32mo", "link": "https://stackoverflow.com/users/8084227/ko32mo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 319, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1496945381, "creation_date": 1496943894, "last_edit_date": 1496944173, "question_id": 44442403, "link": "https://stackoverflow.com/questions/44442403/cargo-run-ignores-the-features-specified-to-cargo-build", "title": "Cargo run ignores the features specified to cargo build", "body": "<p>I've compiled the <a href=\"https://github.com/gtk-rs/examples\" rel=\"nofollow noreferrer\">Rust GTK examples</a> this way:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --features gtk_3_10\n</code></pre>\n\n<p>When I try to run the example, an error occurs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   $ cargo run --bin gtktest   \n    Compiling gtk-rs-examples v0.0.1 (file:///home/me123/rust/gtk_examples)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.39 secs\n     Running `target/debug/gtktest`\nThis example only work with GTK 3.10 and later\nDid you forget to build with `--features gtk_3_10`?\n</code></pre>\n\n<p>How to fix that?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "is_accepted": false, "score": 4, "last_activity_date": 1496934668, "last_edit_date": 1496934668, "creation_date": 1496933934, "answer_id": 44439216, "question_id": 44438841, "link": "https://stackoverflow.com/questions/44438841/how-do-i-return-the-success-value-of-chaining-multiple-results-if-no-errors-occu/44439216#44439216", "title": "How do I return the success value of chaining multiple Results if no errors occur or another value if any error happens?", "body": "<p>Since you don't care about which error was the cause of the failure, you can fix this in a simple way by mapping both error types to <code>()</code>, or <code>Result&lt;T, _&gt; =&gt; Option&lt;T&gt;</code>, since <code>Result&lt;T, ()&gt;</code> is isomorphic to <code>Option&lt;T&gt;</code>.</p>\n\n<p>This is done with the function <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.ok\" rel=\"nofollow noreferrer\"><code>.ok()</code></a> seen <a href=\"https://play.integer32.com/?gist=1b8b0e9a0ecbd9adddc2ba529f5ae8f9&amp;version=stable\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>extern crate time;\n\nuse time::{strptime, Tm};\nuse std::str;\n\npub fn buf_to_tm(buffer: &amp;[u8]) -&gt; Tm {\n    str::from_utf8(buffer).ok()\n        .and_then(|val| strptime(val, \"%d %b %y%H:%M:%S\").ok())\n        .unwrap_or_else(time::now)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23, "user_id": 4245898, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-OsHJ9k-H_FM/AAAAAAAAAAI/AAAAAAAADL8/pCTgz_vhUlY/photo.jpg?sz=128", "display_name": "Michel Boaventura", "link": "https://stackoverflow.com/users/4245898/michel-boaventura"}, "edited": false, "score": 1, "creation_date": 1497026003, "post_id": 44439274, "comment_id": 75922000, "body": "Thank you for taking the time, I&#39;ve used the ok() method and everything looks nicer!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1496934600, "last_edit_date": 1496934600, "creation_date": 1496934051, "answer_id": 44439274, "question_id": 44438841, "link": "https://stackoverflow.com/questions/44438841/how-do-i-return-the-success-value-of-chaining-multiple-results-if-no-errors-occu/44439274#44439274", "title": "How do I return the success value of chaining multiple Results if no errors occur or another value if any error happens?", "body": "<p>You cannot just implicitly \"ignore\" the error type; that's just not how statically types languages work.</p>\n\n<p>The straightforward change you can make is to explicitly change each potential failure to the same type using <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.map_err\" rel=\"nofollow noreferrer\"><code>Result::map_err</code></a>. Since you don't care about the type, you can use <code>()</code>: </p>\n\n<pre><code>fn buf_to_tm(buffer: &amp;[u8]) -&gt; Tm {\n    str::from_utf8(buffer)\n        .map_err(|_| ())\n        .and_then(|val| strptime(val, \"%d %b %y%H:%M:%S\").map_err(|_| ()))\n        .unwrap_or_else(|_| time::now())\n}\n</code></pre>\n\n<p>Even better, you can convert to an <code>Option</code> using <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.ok\" rel=\"nofollow noreferrer\"><code>Result::ok</code></a> instead:</p>\n\n<pre><code>fn buf_to_tm(buffer: &amp;[u8]) -&gt; Tm {\n    str::from_utf8(buffer).ok()\n        .and_then(|val| strptime(val, \"%d %b %y%H:%M:%S\").ok())\n        .unwrap_or_else(time::now)\n}\n</code></pre>\n\n<p>As an additional note, you probably should use <code>unwrap_or_else</code> as I've done above. This only gets the current time in failure case; <code>unwrap_or</code> will always execute its argument. This could save some work and makes sure that the time is as \"up-to-date\" as it can be.</p>\n\n<hr>\n\n<p>The \"enterprise\" solution would be to define a custom error type. This allows you to use <code>?</code> (the try operator):</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\nextern crate time;\n\nuse time::{strptime, Tm};\nuse std::str;\n\nquick_error! {\n    #[derive(Debug)]\n    enum Error {\n        Utf8(err: str::Utf8Error) {\n            from()\n        }\n        Time(err: time::ParseError) {\n            from()\n        }\n    }\n}\n\nfn buf_to_tm_inner(buffer: &amp;[u8]) -&gt; Result&lt;Tm, Error&gt; {\n    let s = str::from_utf8(buffer)?;\n    let t = strptime(s, \"%d %b %y%H:%M:%S\")?;\n    Ok(t)\n}\n\nfn buf_to_tm(buffer: &amp;[u8]) -&gt; Tm {\n    buf_to_tm_inner(buffer)\n        .unwrap_or_else(|_| time::now())\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 4245898, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-OsHJ9k-H_FM/AAAAAAAAAAI/AAAAAAAADL8/pCTgz_vhUlY/photo.jpg?sz=128", "display_name": "Michel Boaventura", "link": "https://stackoverflow.com/users/4245898/michel-boaventura"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 315, "favorite_count": 0, "accepted_answer_id": 44439274, "answer_count": 2, "score": 2, "last_activity_date": 1496934668, "creation_date": 1496933051, "last_edit_date": 1496933641, "question_id": 44438841, "link": "https://stackoverflow.com/questions/44438841/how-do-i-return-the-success-value-of-chaining-multiple-results-if-no-errors-occu", "title": "How do I return the success value of chaining multiple Results if no errors occur or another value if any error happens?", "body": "<p>I'm trying to play with chaining multiple <code>Result</code>s. I want to write a function which receives a <code>&amp;[u8]</code> and returns a <code>Tm</code>. If any of the steps give a error, I just want to return <code>time::now()</code>.</p>\n\n<p>I wrote:</p>\n\n<pre><code>extern crate time;\n\nuse time::{strptime, Tm};\nuse std::str;\n\npub fn buf_to_tm(buffer: &amp;[u8]) -&gt; Tm {\n    str::from_utf8(buffer)\n        .and_then(|val| strptime(val, \"%d %b %y%H:%M:%S\"))\n        .unwrap_or(time::now())\n}\n</code></pre>\n\n<p>But I'm getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:8:25\n  |\n8 |         .and_then(|val| strptime(val, \"%d %b %y%H:%M:%S\"))\n  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::str::Utf8Error`, found enum `time::ParseError`\n  |\n  = note: expected type `std::result::Result&lt;_, std::str::Utf8Error&gt;`\n             found type `std::result::Result&lt;time::Tm, time::ParseError&gt;`\n  = help: here are some functions which might fulfill your needs:\n          - .unwrap()\n          - .unwrap_err()\n</code></pre>\n\n<p>How do I tell Rust I don't really care what type of error this code gives, I just want to return the parsed <code>Tm</code> if no errors occur or <code>time::now()</code> if any error happens.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1496932072, "last_edit_date": 1496932072, "creation_date": 1496931703, "answer_id": 44438345, "question_id": 44438059, "link": "https://stackoverflow.com/questions/44438059/how-to-convert-from-stdiobytes-to-u8/44438345#44438345", "title": "How to convert from std::io::Bytes to &amp;[u8]", "body": "<p>You cannot. Checking <a href=\"https://doc.rust-lang.org/std/io/struct.Bytes.html\" rel=\"noreferrer\">the docs for <code>io::Bytes</code></a>, there are no appropriate methods. That's because <code>io::Bytes</code> is an iterator that returns things byte-by-byte so there may not even <em>be</em> a single underlying slice of data.</p>\n\n<p>It you only had <code>io::Bytes</code>, you would need to <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>collect</code></a> the iterator into a <code>Vec</code>:</p>\n\n<pre><code>let data: Result&lt;Vec&lt;_&gt;, _&gt; = resp.bytes().collect();\nlet data = data.expect(\"Unable to read data\");\nf.write_all(&amp;data).expect(\"Unable to write data\");\n</code></pre>\n\n<p>However, in most cases you have access to the type that implements <code>Read</code>, so you could instead use <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_to_end\" rel=\"noreferrer\"><code>Read::read_to_end</code></a>:</p>\n\n<pre><code>let mut data = Vec::new();\nresp.read_to_end(&amp;mut data).expect(\"Unable to read data\");\nf.write_all(&amp;data).expect(\"Unable to write data\");\n</code></pre>\n\n<p>In this specific case, you can use <a href=\"https://doc.rust-lang.org/std/io/fn.copy.html\" rel=\"noreferrer\"><code>io::copy</code></a> to directly copy from the <code>Request</code> to the file because <code>Request</code> implements <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"noreferrer\"><code>io::Read</code></a> and <code>File</code> implements <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\" rel=\"noreferrer\"><code>io::Write</code></a>:</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::io;\nuse std::fs::File;\n\nfn main() {\n    let mut resp = reqwest::get(\"https://www.rust-lang.org\").unwrap();\n    assert!(resp.status().is_success());\n\n    // Write contents to disk.\n    let mut f = File::create(\"download_file\").expect(\"Unable to create file\");\n    io::copy(&amp;mut resp, &amp;mut f).expect(\"Unable to copy data\");\n}\n</code></pre>\n"}], "owner": {"reputation": 3908, "user_id": 1398841, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/s8gQQ.png?s=128&g=1", "display_name": "phoenix", "link": "https://stackoverflow.com/users/1398841/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2750, "favorite_count": 0, "accepted_answer_id": 44438345, "answer_count": 1, "score": 5, "last_activity_date": 1496932072, "creation_date": 1496930953, "last_edit_date": 1496931371, "question_id": 44438059, "link": "https://stackoverflow.com/questions/44438059/how-to-convert-from-stdiobytes-to-u8", "title": "How to convert from std::io::Bytes to &amp;[u8]", "body": "<p>I am trying to write the contents of an HTTP Response to a file.</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::io::Write;\nuse std::fs::File;\n\nfn main() {\n    let mut resp = reqwest::get(\"https://www.rust-lang.org\").unwrap();\n    assert!(resp.status().is_success());\n\n    // Write contents to disk.\n    let mut f = File::create(\"download_file\").expect(\"Unable to create file\");\n    f.write_all(resp.bytes());\n}\n</code></pre>\n\n<p>But I get the following compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:17\n   |\n12 |     f.write_all(resp.bytes());\n   |                 ^^^^^^^^^^^^ expected &amp;[u8], found struct `std::io::Bytes`\n   |\n   = note: expected type `&amp;[u8]`\n              found type `std::io::Bytes&lt;reqwest::Response&gt;`\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1496928885, "post_id": 44437123, "comment_id": 75871808, "body": "<i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and <b>the shortest code necessary to reproduce it in the question itself</b>.</i> \u2014 your error message points to code that you haven&#39;t shown, therefore we are less likely to know what the problem is and thus we are forced to guess, which wastes your time and ours."}], "answers": [{"comments": [{"owner": {"reputation": 3119, "user_id": 105085, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/J8irh.png?s=128&g=1", "display_name": "palako", "link": "https://stackoverflow.com/users/105085/palako"}, "edited": false, "score": 0, "creation_date": 1608691361, "post_id": 44437441, "comment_id": 115657345, "body": "This answer is great, and cargo tree helped me find my problem. I went to read the cited RFC 1977 but I can&#39;t see how that solves the problem. In my case I was lucky that the dependency change was minor, so I was able to clone the github repository of the conflicting project and update the dependency in my own fork. This is clearly not a solution that will satisfy most cases. Since this answer is from 2017, I wonder what the current state of affairs is regarding this issue."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3119, "user_id": 105085, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/J8irh.png?s=128&g=1", "display_name": "palako", "link": "https://stackoverflow.com/users/105085/palako"}, "edited": false, "score": 0, "creation_date": 1608692197, "post_id": 44437441, "comment_id": 115657482, "body": "@palako The answer was <a href=\"https://stackoverflow.com/posts/44437441/revisions\">last edited 17 days ago</a>; I keep an eye on popular topics."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3119, "user_id": 105085, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/J8irh.png?s=128&g=1", "display_name": "palako", "link": "https://stackoverflow.com/users/105085/palako"}, "edited": false, "score": 0, "creation_date": 1608692352, "post_id": 44437441, "comment_id": 115657499, "body": "@palako public/private dependencies will help because Cargo will know that it is able to pick arbitrary versions inside of a private cluster of crates, but can ensure that a <i>single unified version</i> is used for a public dependency."}, {"owner": {"reputation": 3119, "user_id": 105085, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/J8irh.png?s=128&g=1", "display_name": "palako", "link": "https://stackoverflow.com/users/105085/palako"}, "edited": false, "score": 0, "creation_date": 1608692808, "post_id": 44437441, "comment_id": 115657559, "body": "Thanks Shepmaster. But public/private would be something that depends on the crates writers, no? If I am using two libraries in my code that in turn are using different versions of the same dependency, and this problem is present, I don&#39;t see how I could go around it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3119, "user_id": 105085, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/J8irh.png?s=128&g=1", "display_name": "palako", "link": "https://stackoverflow.com/users/105085/palako"}, "edited": false, "score": 0, "creation_date": 1608693076, "post_id": 44437441, "comment_id": 115657596, "body": "@palako yes, it will probably require crate authors to make use of it. However, it could be implemented as defaulting to public, in which case versions would need to be unified across all dependencies. It could also allow the end user to define the public/private boundaries for crates that don\u2019t define it. For your example, it all depends on how those crates use the dependency"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 34, "last_activity_date": 1607135886, "last_edit_date": 1607135886, "creation_date": 1496929478, "answer_id": 44437441, "question_id": 44437123, "link": "https://stackoverflow.com/questions/44437123/why-is-a-trait-not-implemented-for-a-type-that-clearly-has-it-implemented/44437441#44437441", "title": "Why is a trait not implemented for a type that clearly has it implemented?", "body": "<p>The general problem is that the code has multiple versions of the crate, each providing a different version of the traits. The fact that Rust allows this is a <strong>good thing</strong>, <a href=\"https://github.com/rust-lang/rust/issues/22750\" rel=\"noreferrer\">but the error messages around it are confusing</a>.</p>\n<p>Your crate implements <code>Serialize</code> from version A but the library is using version B <strong>in a public interface</strong>. These traits are not compatible, so when you pass your type implementing <code>Serialize@A</code> to the function requiring <code>Serialize@B</code>, the compiler stops you.</p>\n<p>While your example is about different traits, it's also possible for this to occur for types which have been re-exported from a crate.</p>\n<p><code>cargo tree</code>, available starting in <a href=\"https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md#cargo-144-2020-06-04\" rel=\"noreferrer\">Rust 1.44</a> is highly useful to verify this is your problem. It shows all of your dependencies and their versions. It even has a <code>-d</code> flag to show duplicate dependencies! That mode isn't shown here, but is highly useful.</p>\n<p>The general solution is to manually restrict your version of Serde in your Cargo.toml to match the rest of the dependencies:</p>\n<pre><code>serde = &quot;0.9&quot;\nserde_derive = &quot;0.9&quot;\nserde_json = &quot;0.9&quot;\n</code></pre>\n<p>This may not always be possible, in which case you may need to hound the crate owners to upgrade their dependencies.</p>\n<hr />\n<h2>Worked examples</h2>\n<h3>Rocket</h3>\n<pre><code>[dependencies]\nchrono = &quot;0.3.0&quot;\nrocket = &quot;0.2.8&quot;\nrocket_codegen = &quot;0.2.8&quot;\nserde = &quot;1.0.8&quot;\nserde_derive = &quot;1.0.8&quot;\nserde_json = &quot;1.0.2&quot;\nmysql = &quot;11.1.2&quot;\ndiesel = { version = &quot;0.13.0&quot;, features = [&quot;mysql&quot;,&quot;chrono&quot;] }\ndiesel_codegen = { version = &quot;0.13.0&quot;, features = [&quot;mysql&quot;] }\ndotenv = &quot;0.10.0&quot;\n\n[dependencies.rocket_contrib]\nversion = &quot;*&quot;\ndefault-features = false\nfeatures = [&quot;handlebars_templates&quot;]\n</code></pre>\n<p>rocket_contrib 0.2.8 depends on Serde 0.9, but you have pulled in Serde 1.0. This abridged snippet from <code>cargo tree</code> shows the problem:</p>\n<pre class=\"lang-none prettyprint-override\"><code>reproduction v0.1.0 (file:///private/tmp/reproduction)\n\u251c\u2500\u2500 rocket_contrib v0.2.8\n\u2502   \u251c\u2500\u2500 handlebars v0.25.3\n\u2502   \u2502   \u2514\u2500\u2500 serde_json v0.9.10\n\u2502   \u2502       \u2514\u2500\u2500 serde v0.9.15\n\u2502   \u251c\u2500\u2500 serde v0.9.15 (*)\n\u2502   \u2514\u2500\u2500 serde_json v0.9.10 (*)\n\u251c\u2500\u2500 serde v1.0.8 (*)\n\u251c\u2500\u2500 serde_derive v1.0.8\n\u2502   \u251c\u2500\u2500 serde_derive_internals v0.15.1\n\u2514\u2500\u2500 serde_json v1.0.2 (*)\n</code></pre>\n<p>The <a href=\"https://github.com/SergioBenitez/Rocket/issues/307\" rel=\"noreferrer\">upcoming version 0.3</a> of Rocket should allow using Serde 1.0.</p>\n<h3>Iron / Bson / MongoDB</h3>\n<pre><code>[dependencies]\nbodyparser = &quot;0.5&quot;\nbson = &quot;0.8&quot;\niron = &quot;0.5&quot;\njwt = &quot;0.4&quot;\nmongodb = &quot;0.3&quot;\nrouter = &quot;0.5&quot;\nrust-crypto = &quot;0.2&quot;\nserde = &quot;1.0&quot;\nserde_derive = &quot;1.0&quot;\nserde_json = &quot;1.0&quot;\ntime = &quot;0.1&quot;\n</code></pre>\n<p>bodyparser 0.5 depends on Serde 0.8, MongoDB has pulled in 0.9, but the crate and BSON have pulled in Serde 1.0. This abridged snippet from <code>cargo tree</code> shows the problem:</p>\n<pre class=\"lang-none prettyprint-override\"><code>reproduction v0.1.0 (file:///private/tmp/reproduction)\n\u251c\u2500\u2500 bodyparser v0.5.0\n\u2502   \u251c\u2500\u2500 serde v0.8.23\n\u2502   \u2514\u2500\u2500 serde_json v0.8.6\n\u2502       \u2514\u2500\u2500 serde v0.8.23 (*)\n\u251c\u2500\u2500 bson v0.8.0\n\u2502   \u251c\u2500\u2500 serde v1.0.8\n\u2502   \u251c\u2500\u2500 serde_json v1.0.2\n\u2502   \u2502   \u2514\u2500\u2500 serde v1.0.8 (*)\n\u251c\u2500\u2500 mongodb v0.3.0\n\u2502   \u251c\u2500\u2500 textnonce v0.6.0\n\u2502   \u2502   \u251c\u2500\u2500 serde v0.9.15\n\u2502   \u2502   \u2514\u2500\u2500 serde_derive v0.9.15\n\u251c\u2500\u2500 serde v1.0.8 (*)\n\u251c\u2500\u2500 serde_derive v1.0.8\n\u251c\u2500\u2500 serde_json v1.0.2 (*)\n</code></pre>\n<p><a href=\"https://github.com/iron/body-parser/commits/0.7.0\" rel=\"noreferrer\">Bodyparser 0.7.0</a> should support Serde 1.0. The <a href=\"https://github.com/mikedilger/textnonce/issues/7\" rel=\"noreferrer\">state of textnonce</a> is less clear, but that dependency might be a <strong>private</strong> one, so it might not matter in this case.</p>\n<h3>Diesel / Chrono</h3>\n<pre><code>chrono = &quot;0.4.0&quot;\ndiesel = { version = &quot;0.13.0&quot;, features = [ &quot;chrono&quot;, &quot;sqlite&quot; ] }\ndiesel_codegen = { version = &quot;0.13.0&quot;, features = [ &quot;sqlite&quot; ] }\ndotenv = &quot;0.9.0&quot;\n</code></pre>\n<p>The current version of Chrono is 0.4.0, but Diesel only knows how to serialize Chrono 0.3.0.</p>\n<pre class=\"lang-none prettyprint-override\"><code>reproduction v0.1.0 (file:///private/tmp/reproduction)\n\u251c\u2500\u2500 chrono v0.4.0\n\u251c\u2500\u2500 diesel v0.13.0\n\u2502   \u251c\u2500\u2500 chrono v0.3.0\n</code></pre>\n<h3>blowfish / block-cipher-trait</h3>\n<pre><code>[dependencies]\nblowfish = &quot;0.2.1&quot;\nblock-cipher-trait = &quot;0.3.0&quot;\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>reproduction v0.1.0 (file:///private/tmp/reproduction)\n\u251c\u2500\u2500 block-cipher-trait v0.3.0\n\u2502\u2500\u2500 blowfish v0.2.1\n    \u251c\u2500\u2500 block-cipher-trait v0.2.0\n</code></pre>\n<h3>conrod / piston2d-graphics</h3>\n<pre><code>[dependencies]\npiston_window = &quot;0.74.0&quot;\nconrod = { version = &quot;0.56.0&quot;, features = [&quot;piston&quot;] }\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>repro v0.1.0 (file:///private/tmp/repro)\n\u251c\u2500\u2500 conrod v0.56.0\n\u2502   \u251c\u2500\u2500 piston2d-graphics v0.23.0\n\u2514\u2500\u2500 piston_window v0.74.0\n    \u251c\u2500\u2500 piston2d-graphics v0.24.0 (*)\n</code></pre>\n<h3>actix / futures</h3>\n<pre><code>[dependencies]\nactix-web = &quot;0.6.10&quot;\nfutures = &quot;0.2.1&quot;\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>repro v0.1.0 (file:///private/tmp/repro)\n\u251c\u2500\u2500 actix-web v0.6.12\n\u2502   \u251c\u2500\u2500 actix v0.5.8\n\u2502   \u2502   \u251c\u2500\u2500 futures v0.1.21\n\u2514\u2500\u2500 futures v0.2.1\n</code></pre>\n<h1>A bright future?</h1>\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/1977\" rel=\"noreferrer\">RFC 1977</a> proposes to introduce the notion of <em>public</em> and <em>private</em> dependencies to Cargo. If you use a crate that in turn publicly exposes another crate's types, Cargo would ensure that you use a single unified version for the crate with the common types.</p>\n"}], "owner": {"reputation": 1919, "user_id": 2018961, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9f5dbdf7e2694730fd8f0ca1ce8e94af?s=128&d=identicon&r=PG&f=1", "display_name": "haheute", "link": "https://stackoverflow.com/users/2018961/haheute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6118, "favorite_count": 3, "accepted_answer_id": 44437441, "answer_count": 1, "score": 23, "last_activity_date": 1607135886, "creation_date": 1496928631, "last_edit_date": 1499112284, "question_id": 44437123, "link": "https://stackoverflow.com/questions/44437123/why-is-a-trait-not-implemented-for-a-type-that-clearly-has-it-implemented", "title": "Why is a trait not implemented for a type that clearly has it implemented?", "body": "<p>I'm trying to use <a href=\"http://diesel.rs/\" rel=\"noreferrer\">Diesel</a> to query a MySQL database and display the results with a Handlebars template with <a href=\"https://rocket.rs/\" rel=\"noreferrer\">Rocket</a>.</p>\n\n<p>I have this in <strong>models.rs</strong></p>\n\n<pre><code>#[derive(Queryable, Serialize)]\npub struct Post {\n    pub id: i32,\n    pub title: String,\n    pub text: String,\n    pub published: bool,\n}\n</code></pre>\n\n<p><code>cargo run</code> outputs this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  --&gt; src/main.rs:69:5\n   |\n69 |     Template::render(\"index\", &amp;results)\n   |     ^^^^^^^^^^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `tasty::models::Post`\n   |\n   = note: required because of the requirements on the impl of `serde::ser::Serialize` for `std::vec::Vec&lt;tasty::models::Post&gt;`\n   = note: required by `rocket_contrib::Template::render`\n</code></pre>\n\n<p>In my Cargo.toml, I have this:</p>\n\n<pre><code>[dependencies]\nchrono = \"0.3.0\"\nrocket = \"0.2.8\"\nrocket_codegen = \"0.2.8\"\nserde = \"1.0.8\"\nserde_derive = \"1.0.8\"\nserde_json = \"1.0.2\"\nmysql = \"11.1.2\"\ndiesel = { version = \"0.13.0\", features = [\"mysql\",\"chrono\"] }\ndiesel_codegen = { version = \"0.13.0\", features = [\"mysql\"] }\ndotenv = \"0.10.0\"\n\n[dependencies.rocket_contrib]\nversion = \"*\"\ndefault-features = false\nfeatures = [\"handlebars_templates\"]\n</code></pre>\n\n<p>I have read that Diesel does not support <code>Serialize</code> at the moment, but I am not sure.</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1496927261, "post_id": 44436515, "comment_id": 75870498, "body": "&quot;My knowledge of C is very minimal and I wonder if there is any difference.&quot;, why C should care about that ? This is about rust. This is obviously describe the same thing. A <code>char</code> in C."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1496930158, "last_edit_date": 1496930158, "creation_date": 1496927354, "answer_id": 44436679, "question_id": 44436515, "link": "https://stackoverflow.com/questions/44436515/should-i-use-libcc-char-or-stdosrawc-char/44436679#44436679", "title": "Should I use libc::c_char or std::os::raw::c_char?", "body": "<p>I can't answer which is more idiomatic, but I can say that they are the same on 64-bit Linux (the default platform for most online hosted documentation):</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/os/raw/type.c_char.html\" rel=\"noreferrer\"><code>std::os::raw::c_char</code></a>:</p>\n\n<pre><code>type c_char = i8;\n</code></pre>\n\n<p><a href=\"https://docs.rs/libc/0.2.23/libc/type.c_char.html\" rel=\"noreferrer\"><code>libc::c_char</code></a>:</p>\n\n<pre><code>type c_char = i8;\n</code></pre>\n\n<p>Looking more broadly across different platforms is a bit more complicated. The standard library <a href=\"https://github.com/rust-lang/rust/blob/1.17.0/src/libstd/os/raw.rs#L17-L34\" rel=\"noreferrer\">tightly groups all the definitions for <code>c_char</code></a>, but <a href=\"https://github.com/rust-lang/libc/search?utf8=%E2%9C%93&amp;q=pub+type+c_char&amp;type=\" rel=\"noreferrer\">libc groups them by platform</a>. Considering how fundamental this type is, I'd expect them to be the same on all platforms.</p>\n\n<p>Practically speaking, neither of these definitions are likely to ever change, so there's probably not any stability difference.</p>\n\n<p>My opinion would be to use the one from the standard library version until I needed to use something specific from <code>libc</code>, in which case I'd probably switch all the types to the libc variants, just to be consistent. </p>\n"}, {"tags": [], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "is_accepted": false, "score": 7, "last_activity_date": 1496928021, "creation_date": 1496928021, "answer_id": 44436919, "question_id": 44436515, "link": "https://stackoverflow.com/questions/44436515/should-i-use-libcc-char-or-stdosrawc-char/44436919#44436919", "title": "Should I use libc::c_char or std::os::raw::c_char?", "body": "<p>In addition to @Shepmaster's answer, I'd like to highlight the fact that <code>libc</code> does not depend on <code>std</code>.</p>\n\n<p>Therefore, if you can't use <code>std</code>, you'll have to use <code>libc</code>.\nThis situation can be seen <a href=\"https://github.com/rust-lang/libc/blob/f9ae8e6db5aa57e958aefa6819dc784893c68b0e/README.md#usage\" rel=\"noreferrer\">here</a>.</p>\n\n<blockquote>\n  <p>Currently libc by default links to the standard library, but if you would instead like to use libc in a <code>#![no_std]</code> situation or crate you can request this via:</p>\n</blockquote>\n\n<pre><code>[dependencies]\nlibc = { version = \"0.2\", default-features = false }\n</code></pre>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1258, "favorite_count": 0, "accepted_answer_id": 44436679, "answer_count": 2, "score": 9, "last_activity_date": 1496930158, "creation_date": 1496926895, "last_edit_date": 1496927004, "question_id": 44436515, "link": "https://stackoverflow.com/questions/44436515/should-i-use-libcc-char-or-stdosrawc-char", "title": "Should I use libc::c_char or std::os::raw::c_char?", "body": "<p>I am writing a FFI wrapper for Rust. I have seen usages of both <code>libc::c_char</code> and <code>std::os::raw::c_char</code>. My knowledge of C is very minimal and I wonder if there is any difference. What should I use if I would like to expose a string to Python via cffi?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496921224, "post_id": 44433912, "comment_id": 75865904, "body": "You may wish to add the compiler&#39;s error message obtained from the last code snippet. At that point, the issue looks fairly similar to   <a href=\"https://stackoverflow.com/questions/24574741/iterator-returning-items-by-reference-lifetime-issue\" title=\"iterator returning items by reference lifetime issue\">stackoverflow.com/questions/24574741/&hellip;</a>"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496921642, "post_id": 44433912, "comment_id": 75866209, "body": "@E_net4 though I have some errors implementing this, I search for the answer on my question in general, not really in solving one particular error, however, this would be interesting too."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1496922324, "post_id": 44433912, "comment_id": 75866675, "body": "@VictorPolevoy: In short, yes what you want to do is impossible at the moment. You want HRBT: Higher-Ranked Bounded Types, ie the ability to declare <code>type Item&lt;&#39;a&gt;;</code> and then <code>poll&lt;&#39;a&gt;(&amp;&#39;a mut self) -&gt; Item&lt;&#39;a&gt;;</code> in the trait definition. However springing up a new lifetime like you did doesn&#39;t work. A possible work-around, depending on the usage, would be to implement <code>Stream</code> for <code>&amp;&#39;a mut Connection</code> or <code>&amp;&#39;a Connection</code>, but this may completely change how to use the type... (who owns it now?)."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1496928155, "post_id": 44433912, "comment_id": 75871225, "body": "@MatthieuM. do you mean to do so as in my last attempt (I have updated the question)?"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 392, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1496928550, "creation_date": 1496919684, "last_edit_date": 1496928550, "question_id": 44433912, "link": "https://stackoverflow.com/questions/44433912/how-to-use-a-stream-object-inside-the-closure-of-for-each-future", "title": "How to use a `Stream` object inside the closure of `for_each` future?", "body": "<p>I have a structure which receives some websocket events. Here is a method to receive an event from the structure:</p>\n\n<pre><code>struct Connection;\nimpl Connection {\n    pub fn recv_event(&amp;mut self) -&gt; Result&lt;Event&gt; {\n        // ...\n    }\n}\n</code></pre>\n\n<p>I have implemented <code>Stream</code> for it:</p>\n\n<pre><code>#[cfg(feature = \"stream\")]\nimpl Stream for Connection {\n    type Item = Event;\n    type Error = ::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        match self.recv_event() {\n            Ok(event) =&gt; Ok(Async::Ready(Some(event))),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n</code></pre>\n\n<p>It looks that it works okay, but later I decided to return a reference to <code>Self</code> also for being able to modify the object's state in this code:</p>\n\n<pre><code>connection.by_ref().for_each(|c, e| {\n    println!(\"Event: {:?}\", e);\n    self.handle_events(c, e.clone());\n    self.handle_messages(e);\n    Ok(())\n}).wait();\n</code></pre>\n\n<p>I need to return a reference to the <code>connection</code> object from the <code>fn poll</code>:</p>\n\n<pre><code>#[cfg(feature = \"stream\")]\nimpl Stream for Connection {\n    type Item = (&amp;mut Self, Event);\n    type Error = ::Error;\n\n    fn poll&lt;'a&gt;(&amp;'a mut self) -&gt; Poll&lt;Option&lt;(&amp;'a mut Self, Event)&gt;, Self::Error&gt; {\n        match self.recv_event() {\n            Ok(event) =&gt; Ok(Async::Ready(Some(self, event))),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n</code></pre>\n\n<p>Unfortunately, this does not work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n   --&gt; src/connection.rs:410:18\n    |\n410 |     type Item = (&amp;mut Self, Event);\n    |                  ^ expected lifetime parameter\n</code></pre>\n\n<p>Yes, I forgot to add a lifetime here, in the type. Oops. How can I do that? I tried that and some other ways but nothing worked:</p>\n\n<pre><code>#[cfg(feature = \"stream\")]\nimpl&lt;'a&gt; Stream for Connection {\n    type Item = (&amp;'a mut Self, Event);\n    type Error = ::Error;\n\n    fn poll&lt;'a&gt;(&amp;'a mut self) -&gt; Poll&lt;Option&lt;(&amp;'a mut Self, Event)&gt;, Self::Error&gt; {\n        match self.recv_event() {\n            Ok(event) =&gt; Ok(Async::Ready(Some(self, event))),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n</code></pre>\n\n<p>Which gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates\n   --&gt; src/connection.rs:409:6\n    |\n409 | impl&lt;'a&gt; Stream for Connection {\n    |      ^^ unconstrained lifetime parameter\n</code></pre>\n\n<p>Then I tried:</p>\n\n<pre><code>pub struct ConnectionStream&lt;'a&gt;(&amp;'a mut Connection);\n#[cfg(feature = \"stream\")]\nimpl&lt;'a&gt; Stream for ConnectionStream&lt;'a&gt; {\n    type Item = (&amp;'a mut Connection, Event);\n    type Error = ::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        let res = self.0.recv_event();\n        match res {\n            Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n</code></pre>\n\n<p>But still no luck:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for automatic coercion due to conflicting requirements\n   --&gt; src/connection.rs:417:42\n    |\n417 |             Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n    |                                          ^^^^^^^^^^^^^^^^^^^^^\n    |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 414:64...\n   --&gt; src/connection.rs:414:65\n    |\n414 |       fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n    |  _________________________________________________________________^ starting here...\n415 | |         let res = self.0.recv_event();\n416 | |         match res {\n417 | |             Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n418 | |             Err(e) =&gt; Err(e),\n419 | |         }\n420 | |     }\n    | |_____^ ...ending here\nnote: ...so that reference does not outlive borrowed content\n   --&gt; src/connection.rs:417:48\n    |\n417 |             Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n    |                                                ^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the body at 414:64...\n   --&gt; src/connection.rs:414:65\n    |\n414 |       fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n    |  _________________________________________________________________^ starting here...\n415 | |         let res = self.0.recv_event();\n416 | |         match res {\n417 | |             Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n418 | |             Err(e) =&gt; Err(e),\n419 | |         }\n420 | |     }\n    | |_____^ ...ending here\nnote: ...so that types are compatible (expected futures::Stream, found futures::Stream)\n   --&gt; src/connection.rs:414:65\n    |\n414 |       fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n    |  _________________________________________________________________^ starting here...\n415 | |         let res = self.0.recv_event();\n416 | |         match res {\n417 | |             Ok(event) =&gt; Ok(Async::Ready(Some((self.0, event)))),\n418 | |             Err(e) =&gt; Err(e),\n419 | |         }\n420 | |     }\n    | |_____^ ...ending here\n</code></pre>\n\n<p>I gave up and I think it is impossible. Am I correct?</p>\n"}, {"tags": ["arrays", "rust", "heap", "stack-overflow"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496917184, "post_id": 44432937, "comment_id": 75863291, "body": "It is still applicable, since the array still has to live in the stack before it goes to the heap. The solution in the accepted answer should also work."}, {"owner": {"reputation": 483, "user_id": 4280035, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e442215473aa322da127ee74c79c7477?s=128&d=identicon&r=PG&f=1", "display_name": "hellcatv", "link": "https://stackoverflow.com/users/4280035/hellcatv"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496917352, "post_id": 44432937, "comment_id": 75863394, "body": "the solution in the accepted answer does not give a fixed size array [_;bound] instead it gives a slice type inside a vector... that will not allow the compiler to put bounds checks in as literals."}, {"owner": {"reputation": 483, "user_id": 4280035, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e442215473aa322da127ee74c79c7477?s=128&d=identicon&r=PG&f=1", "display_name": "hellcatv", "link": "https://stackoverflow.com/users/4280035/hellcatv"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1496917456, "post_id": 44432937, "comment_id": 75863463, "body": "Is there any way to make a writable fixed-size array that&#39;s larger than the stack size? I was hoping the heap could help here, but if it always has to go to the stack first, then that&#39;s unfortunate."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1496917770, "post_id": 44432937, "comment_id": 75863691, "body": "Please see the <a href=\"https://github.com/rust-lang/rust/issues/27779\" rel=\"nofollow noreferrer\">tracker issue on placement new</a>. Issue <a href=\"https://github.com/rust-lang/rust/issues/40862\" rel=\"nofollow noreferrer\">#40862</a> also redirects to it. The answer is no, you still can&#39;t do that."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1496917907, "post_id": 44432937, "comment_id": 75863771, "body": "@hellcatv, you can spawn a thread with larger stack size: <a href=\"https://stackoverflow.com/a/29980945/2731452\">stackoverflow.com/a/29980945/2731452</a>"}], "owner": {"reputation": 483, "user_id": 4280035, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e442215473aa322da127ee74c79c7477?s=128&d=identicon&r=PG&f=1", "display_name": "hellcatv", "link": "https://stackoverflow.com/users/4280035/hellcatv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1496918767, "answer_count": 0, "score": 0, "last_activity_date": 1496918740, "creation_date": 1496916979, "last_edit_date": 1496918740, "question_id": 44432937, "link": "https://stackoverflow.com/questions/44432937/how-can-i-make-a-large-fixed-size-array-on-the-heap-without-a-segfault", "closed_reason": "Duplicate", "title": "How can I make a large fixed-size array on the heap without a segfault?", "body": "<p>I want a 4 or 16 megabyte fixed-size array on the stack, so that any bounds checks are against a constant</p>\n\n<p>This code compiles but segfaults</p>\n\n<pre><code>extern crate core;\n\npub struct RingBuffer(Box&lt;[u8;4194304]&gt;);\n\nimpl core::default::Default for RingBuffer {\n    fn default() -&gt; Self {\n        static DEFAULT_VALUE: [u8;4194304] = [0u8;4194304];\n        RingBuffer(Box::&lt;[u8;4194304]&gt;::new(DEFAULT_VALUE))\n    }\n}\n\n\n\nfn main() {\n    let mut x = RingBuffer::default();\n    x.0[1] = 1;\n    x.0[4194302] = 2;        \n    println!(\"Zeros; {:} {:} {:} {:}\",x.0[0], x.0[1], x.0[4194302], x.0[4194303]);\n}\n</code></pre>\n\n<p>In a related question for the rust 1.0 beta, there was discussion about experimental features that might enable this functionality but the answer was vague\n<a href=\"https://stackoverflow.com/questions/30242770/how-to-allocate-arrays-on-the-heap-in-rust-1-0-beta\">How to allocate arrays on the heap in Rust 1.0 (beta)?</a>\nand it is unclear if those features have come to pass.</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1496893773, "creation_date": 1496893773, "answer_id": 44426293, "question_id": 44426175, "link": "https://stackoverflow.com/questions/44426175/macro-error-while-trying-to-implement-a-trait-inside-a-macro-expansion/44426293#44426293", "title": "Macro error while trying to implement a trait inside a macro expansion", "body": "<p>The problem isn't that a <code>fn</code> isn't an item, it's that the body of an <code>impl</code> <em>does not</em> contain items.  It contains \"impl items\".  What it's complaining about is you trying to put a square-shaped block into a round hole, not that the block is the wrong colour.</p>\n\n<p>Yes, those are two different things.  No, you <em>can't</em> capture \"impl items\" in a macro.  No, you can't turn an item into an impl item.  Because macros capture AST nodes, not the tokens.  Well, methods can have a <code>self</code> argument and regular function's don't.  I don't know, presumably it seemed like a good idea at the time.</p>\n\n<p>Putting the hypothetical back-and-forth aside, the solution in this case is to not bother trying to match anything in <em>particular</em> and just match <em>anything</em>.</p>\n\n<pre><code>macro_rules! multi_impl\n{\n    (for $base:ty :\n        $($t:ty {\n            $($body:tt)*\n        }),+) =&gt;\n    {\n        $(\n            impl $t for $base\n            {\n                $($body)*\n            }\n        )+\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 347, "user_id": 1460985, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42536eacaf7708afda1c0e1bc7eeb6c2?s=128&d=identicon&r=PG", "display_name": "YourGamerMom", "link": "https://stackoverflow.com/users/1460985/yourgamermom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 44426293, "answer_count": 1, "score": 0, "last_activity_date": 1496924090, "creation_date": 1496892769, "last_edit_date": 1496924090, "question_id": 44426175, "link": "https://stackoverflow.com/questions/44426175/macro-error-while-trying-to-implement-a-trait-inside-a-macro-expansion", "title": "Macro error while trying to implement a trait inside a macro expansion", "body": "<p><code>fn a() {}</code> seems to satisfy a parsing rule that expected a <code>fn</code>, then some other stuff. <code>item</code>s should be able to be function definitions, right? So they should work, right?</p>\n\n<pre><code>macro_rules! multi_impl {\n    (for $base:ty :\n        $($t:ty {\n            $($i:item);*\n        }),+) =&gt;\n    {\n        $(\n            impl $t for $base\n            {\n                $( $i )*\n            }\n        )+\n    }\n}\n\ntrait A {\n    fn a();\n}\n\ntrait B {\n    fn b();\n}\n\nstruct S;\n\nmulti_impl! {\n    for S:\n    A {\n        fn a() {}\n    }, B {\n        fn b() {}\n    }\n}\n\nfn main() {\n    S::a();\n    S::b();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=cffb1e95ba5720a03196e0cd9493db28&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The error in question:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `const`, `default`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `fn a() { }`\n  --&gt; &lt;anon&gt;:11:20\n   |\n11 |                 $( $i )*\n   |                    ^^\n</code></pre>\n\n<p>Making it <code>$( fn $i)*</code> only changes the error to complain about expecting an identifier after the <code>fn</code>, which makes sense, but the initial error does not (at least to me).</p>\n\n<p>Is there a difference to the parser about code that is in the source vs code that's placed into the source by a macro?</p>\n"}]