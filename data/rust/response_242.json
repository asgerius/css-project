[{"tags": ["rust"], "comments": [{"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1567012765, "post_id": 57696992, "comment_id": 101838745, "body": "Why the downvote?"}], "answers": [{"comments": [{"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 1, "creation_date": 1567011762, "post_id": 57697020, "comment_id": 101838306, "body": "Ok, that answers the idiomatic bit. I&#39;m still curious what is going on though. Are you able to provide some insights into that? The complaint seems to be around good coding standards rather than strictly being erroneous."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1567011936, "post_id": 57697020, "comment_id": 101838378, "body": "@HenryGomersall what do you mean? As you already pointed out: <i>which compiles and runs fine</i>. There&#39;s nothing <b>technically</b> wrong about the code. That&#39;s why it&#39;s a warning and not an error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1567012042, "post_id": 57697020, "comment_id": 101838428, "body": "@HenryGomersall <i>What is going on here?</i> \u2014 someone created a module with the same name as a const (but you know that). <i>Should I be able to find out about this in the docs?</i> Find out about what, creating modules / creating constants / idiomatic naming? <i>When is such a pattern valid?</i> \u2014 what &quot;pattern&quot;? what do you mean by &quot;valid&quot;? <i>I can see that this might be useful, but is there some really compelling use case?</i> \u2014 presumably whatever case where you see it being useful..."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1567012092, "post_id": 57697020, "comment_id": 101838447, "body": "well, normally whilst programming one can&#39;t attach the same label to multiple constructs in the same namespace, and I understand Rust to be against overloading in principle, so I don&#39;t understand what <code>BAR</code> is. Is it a module, or is it a <code>const</code>?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1567018483, "post_id": 57697020, "comment_id": 101840956, "body": "There&#39;s no overloading going on, constants and type names exist in different namespaces therefore they refer to distinct things."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 2, "creation_date": 1567018547, "post_id": 57697020, "comment_id": 101840978, "body": "@WesleyWiser you might want to @-mention, otherwise I think I&#39;m the only one who gets notified."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1567085451, "post_id": 57697020, "comment_id": 101864783, "body": "The <a href=\"https://stackoverflow.com/a/43359214/709852\">answer in your link</a> gives the important insight as to why this way of thinking is necessary - specifically that types are generally callable in order to instantiate them. The Rust model for this is that the different ways of interacting with the label are present in different namespaces."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1567013393, "last_edit_date": 1567013393, "creation_date": 1567011519, "answer_id": 57697020, "question_id": 57696992, "link": "https://stackoverflow.com/questions/57696992/how-can-a-rust-module-have-the-same-name-as-a-const-in-the-same-namespace/57697020#57697020", "title": "How can a Rust module have the same name as a const in the same namespace?", "body": "<p>No, it's not idiomatic, and the compiler already tells you this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: module `BAR` should have a snake case name\n --&gt; src/main.rs:4:13\n  |\n4 |     pub mod BAR {\n  |             ^^^ help: convert the identifier to snake case: `bar`\n  |\n  = note: #[warn(non_snake_case)] on by default\n</code></pre>\n\n<p>The warning has been silenced in the code you have presented, for whatever reason.</p>\n\n<blockquote>\n  <p>normally whilst programming one can't attach the same label to multiple constructs in the same namespace</p>\n</blockquote>\n\n<p>That's correct. Modules and constants are in <a href=\"https://rust-lang.github.io/rustc-guide/name-resolution.html#namespaces\" rel=\"nofollow noreferrer\">different namespaces</a>. There are three namespaces:</p>\n\n<ul>\n<li>types </li>\n<li>values</li>\n<li>macros</li>\n</ul>\n\n<pre><code>fn main() {\n    macro_rules! BAR { () =&gt; {} }\n    mod BAR {}\n    let BAR = 1;\n}\n</code></pre>\n\n<p>Modules are in the type namespace.</p>\n\n<blockquote>\n  <p>I don't understand what <code>BAR</code> is. Is it a module, or is it a const?</p>\n</blockquote>\n\n<p>There's one of each.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43358940/155423\">Why does a module with a submodule and a function with conflicting names work?</a></li>\n</ul>\n\n<hr>\n\n<p>I'd probably write this:</p>\n\n<pre><code>pub mod foo {\n    use std::fmt;\n\n    pub const BAR: Bar = Bar(53);\n\n    pub struct Bar(u32);\n\n    impl Bar {\n        pub fn eep(&amp;self) {\n            println!(\"This is attached to Bar\");\n        }\n    }\n\n    impl fmt::Display for Bar {\n        fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n            self.0.fmt(f)\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!, {}\", foo::BAR);\n    foo::BAR.eep();\n}\n</code></pre>\n"}], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 1, "accepted_answer_id": 57697020, "answer_count": 1, "score": 1, "last_activity_date": 1567013393, "creation_date": 1567011352, "last_edit_date": 1567012674, "question_id": 57696992, "link": "https://stackoverflow.com/questions/57696992/how-can-a-rust-module-have-the-same-name-as-a-const-in-the-same-namespace", "title": "How can a Rust module have the same name as a const in the same namespace?", "body": "<p>I came across some code in a piece of published code that had something like the following structure (which compiles and runs fine):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod foo {\n    pub const BAR: u32 = 53;\n\n    #[allow(non_snake_case)]\n    pub mod BAR {\n        pub fn eep() {\n            println!(\"This is attached to BAR\");\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!, {}\", foo::BAR);\n    foo::BAR::eep();\n}\n</code></pre>\n\n<p>This seems strange and interesting to me. The strange bit being <code>BAR</code> being defined as both a <code>const</code> and a <code>mod</code>.</p>\n\n<p>Is this idiomatic Rust?</p>\n\n<p>What is going on here? Should I be able to find out about this in the docs? When is such a pattern valid?</p>\n\n<p>I can see that this might be useful, but is there some really compelling use case?</p>\n"}, {"tags": ["rust", "gtk"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1567006867, "post_id": 57695875, "comment_id": 101836122, "body": "Can you expand on what you don&#39;t understand? You seemingly have the string (<code>text</code>) and you return a boolean; what more are you missing?"}, {"owner": {"reputation": 131, "user_id": 1934514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4983de2f80dd835d7e2eab6b98afdc66?s=128&d=identicon&r=PG", "display_name": "Patrick", "link": "https://stackoverflow.com/users/1934514/patrick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1567013245, "post_id": 57695875, "comment_id": 101838958, "body": "The ``text: &amp;str` variable contains the text I am matching against. The <code>ti: &amp;gtk::TreeIter</code> variable is the item inside the <code>gtk::ListStore::new(&amp;col_types)</code>. So I need to take the value from the TreeIter and check if the match is as I want it to be. Hence, my question is how to get the item from the TreeIter with which to compare <code>text</code> against. (I have added this to the original question)"}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1567073947, "creation_date": 1567073947, "answer_id": 57708037, "question_id": 57695875, "link": "https://stackoverflow.com/questions/57695875/how-to-write-a-custom-match-function-for-gtk-entry-completion/57708037#57708037", "title": "How to write a custom match function for GTK entry completion?", "body": "<h2>Documentation</h2>\n\n<ul>\n<li><a href=\"https://gtk-rs.org/docs/gtk/trait.EntryCompletionExt.html#tymethod.get_text_column\" rel=\"nofollow noreferrer\"><code>EntryCompletionExt::get_text_column</code></a></li>\n<li><a href=\"https://gtk-rs.org/docs/gtk/trait.EntryCompletionExt.html#tymethod.get_model\" rel=\"nofollow noreferrer\"><code>EntryCompletionExt::get_model</code></a></li>\n<li><a href=\"https://gtk-rs.org/docs/gtk/trait.TreeModelExt.html#tymethod.get_value\" rel=\"nofollow noreferrer\"><code>TreeModelExt::get_value</code></a></li>\n<li><a href=\"https://gtk-rs.org/docs/glib/value/index.html\" rel=\"nofollow noreferrer\"><code>glib::value</code></a></li>\n</ul>\n\n<h2>An example</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn custom_entry_completion(store: &amp;gtk::EntryCompletion, text: &amp;str, ti: &amp;gtk::TreeIter) -&gt; bool {\n    let tree_model = store.get_model().unwrap();\n    let text_column = store.get_text_column();\n\n    let ti_text_value = tree_model.get_value(ti, text_column);\n\n    if ti_text_value.is::&lt;String&gt;() {\n        let value = ti_text_value.get::&lt;String&gt;().unwrap();\n        println!(\"{:?} // {:?}\", text, value);\n    } else {\n        println!(\"{:?} // not a string\", text);\n    }\n\n    true\n}\n</code></pre>\n\n<p>Console output when used with the <a href=\"https://github.com/gtk-rs/examples/blob/master/src/bin/entry_completion.rs\" rel=\"nofollow noreferrer\">entry_completion.rs</a> example:</p>\n\n<pre><code>\"adfs\" // \"France\"\n\"adfs\" // \"Italy\"\n\"adfs\" // \"Italy\"\n\"adfs\" // \"Sweden\"\n\"adfs\" // \"Sweden\"\n\"adfs\" // \"Switzerland\"\n\"adfs\" // \"Switzerland\"\n\"adfssdf\" // \"France\"\n\"adfssdf\" // \"Italy\"\n\"adfssdf\" // \"Sweden\"\n\"adfssdf\" // \"Switzerland\"\n</code></pre>\n"}], "owner": {"reputation": 131, "user_id": 1934514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4983de2f80dd835d7e2eab6b98afdc66?s=128&d=identicon&r=PG", "display_name": "Patrick", "link": "https://stackoverflow.com/users/1934514/patrick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 57708037, "answer_count": 1, "score": 0, "last_activity_date": 1567073947, "creation_date": 1567006519, "last_edit_date": 1567013277, "question_id": 57695875, "link": "https://stackoverflow.com/questions/57695875/how-to-write-a-custom-match-function-for-gtk-entry-completion", "title": "How to write a custom match function for GTK entry completion?", "body": "<p>I would like to implement a fuzzy search for the GTK <a href=\"https://gtk-rs.org/docs/gtk/struct.EntryCompletion.html\" rel=\"nofollow noreferrer\"><code>EntryCompletion</code></a> functionality via <a href=\"https://gtk-rs.org/docs/gtk/trait.EntryCompletionExt.html#tymethod.set_match_func\" rel=\"nofollow noreferrer\"><code>set_match_func</code></a>. There is very limited documentation.</p>\n\n<p>Note that the code works with the default <code>EntryCompletion</code>.</p>\n\n<p>The function should look something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn custom_entry_completion(store: &amp;gtk::EntryCompletion, text: &amp;str, ti: &amp;gtk::TreeIter) -&gt; bool {\n    println!(\"{} // {:?}\", text, ti);\n    true\n}\n</code></pre>\n\n<p>I want to embed it in something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let completion_countries = gtk::EntryCompletion::new();\ncompletion_countries.set_match_func(custom_entry_completion);\n</code></pre>\n\n<p>I would like a fuzzy match, but I think I will manage that part myself. Most helpful would be an example where the match is case insensitive or matching the last part of the string (or something). I am looking for a good example (preferably without unsafe) and/or good documentation.</p>\n\n<p>So I need to take the value from the TreeIter and check if the match is as I want it to be. Hence, my question is how to get the item from the TreeIter with which to compare <code>text</code> against.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1567002307, "post_id": 57694567, "comment_id": 101833400, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57694567/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1567002312, "post_id": 57694567, "comment_id": 101833406, "body": "Please paste the exact and entire error that you&#39;re getting \u2014 that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1567003215, "post_id": 57694567, "comment_id": 101833960, "body": "I know exactly why my code is not working. Rust does not allow me to change my vector, while there exists references to it. My question is how I can remove these references transparent for the compiler"}], "answers": [{"comments": [{"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1567005656, "post_id": 57695423, "comment_id": 101835384, "body": "This solves my particular problem. But more general, I could need two values <code>x</code> and <code>f_hat</code> which require expensive precomputing. How would a struct or structs look like to represent this. When I change <code>x</code> I don&#39;t want to loose the precomputation from <code>f_hat</code> and the over way around."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 1, "creation_date": 1567005876, "post_id": 57695423, "comment_id": 101835516, "body": "@Unlikus follow the same pattern. Have a struct for <code>x</code> and whatever values are calculated from it, a struct for <code>f_hat</code> and whatever values are calculated from it, then a third struct that combines the two and calculates whatever values from both."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1567005718, "last_edit_date": 1567005718, "creation_date": 1567004965, "answer_id": 57695423, "question_id": 57694567, "link": "https://stackoverflow.com/questions/57694567/how-can-i-tell-the-compiler-to-release-a-borrow-in-a-struct-without-dropping-the/57695423#57695423", "title": "How can I tell the compiler to release a borrow in a struct without dropping the entire struct?", "body": "<h1>Explanation</h1>\n\n<blockquote>\n  <p>How can I tell the compiler to release a borrow </p>\n</blockquote>\n\n<p>You cannot, period. This isn't something you \"tell\" the compiler, the compiler knows all. You can only completely stop using the reference.</p>\n\n<blockquote>\n  <p>without dropping the entire struct</p>\n</blockquote>\n\n<p><em>Dropping</em> doesn't clear the borrow, only the borrow no longer being used does, which may happen from the drop.</p>\n\n<blockquote>\n<pre><code>f_hat[0] = 3; // Change f_hat to a new value\nplan.execute(); //New computation\n</code></pre>\n</blockquote>\n\n<p>This is <strong>exactly</strong> one of the types of code that Rust tries to prevent. It is not obvious at all that <code>plan.execute()</code> should return a different value because some apparently unrelated value has changed. </p>\n\n<h1>Solutions</h1>\n\n<h2>Encode it in the type system</h2>\n\n<p>I'd structure my types to reflect how they need to be used, creating throwaway values that can execute only once everything has been combined together. This means that the structure that borrows <code>f_mut</code> is dropped as soon as it's done; note how this removes the <code>Option</code> completely:</p>\n\n<pre><code>fn main() {\n    let mut f_hat = 42;\n\n    let plan = Plan::default();\n    plan.set_f_hat(&amp;f_hat).execute();\n\n    f_hat = 3;\n    plan.set_f_hat(&amp;f_hat).execute();\n}\n\n#[derive(Debug, Default)]\nstruct Plan&lt;'a&gt; {\n    x: Option&lt;&amp;'a i32&gt;,\n}\n\nimpl&lt;'a&gt; Plan&lt;'a&gt; {\n    fn set_f_hat(&amp;self, f_hat: &amp;'a i32) -&gt; PlanPlus&lt;'a&gt; {\n        PlanPlus { x: self.x, f_hat }\n    }\n}\n\n#[derive(Debug)]\nstruct PlanPlus&lt;'a&gt; {\n    x: Option&lt;&amp;'a i32&gt;,\n    f_hat: &amp;'a i32,\n}\n\nimpl&lt;'a&gt; PlanPlus&lt;'a&gt; {\n    fn execute(&amp;self) {}\n}\n</code></pre>\n\n<h2>Use interior mutability and reference counting</h2>\n\n<pre><code>use std::{cell::Cell, rc::Rc};\n\n#[derive(Debug, Default)]\nstruct Plan&lt;'a&gt; {\n    x: Option&lt;&amp;'a i32&gt;,\n    f_hat: Option&lt;Rc&lt;Cell&lt;i32&gt;&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Plan&lt;'a&gt; {\n    fn set_f_hat(&amp;mut self, f_hat: Rc&lt;Cell&lt;i32&gt;&gt;) {\n        self.f_hat = Some(f_hat);\n    }\n    fn execute(&amp;self) {}\n}\n\nfn main() {\n    let f_hat = Rc::new(Cell::new(42));\n\n    let mut plan = Plan::default();\n    plan.set_f_hat(f_hat.clone());\n    plan.execute();\n\n    f_hat.set(3);\n    plan.execute();\n}\n</code></pre>\n\n<h2>Recognize that the member is mutable</h2>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Plan&lt;'a&gt; {\n    x: Option&lt;&amp;'a i32&gt;,\n    f_hat: Option&lt;&amp;'a mut i32&gt;,\n}\n\nimpl&lt;'a&gt; Plan&lt;'a&gt; {\n    fn f_hat(&amp;mut self) -&gt; &amp;mut Option&lt;&amp;'a mut i32&gt; {\n        &amp;mut self.f_hat\n    }\n\n    fn execute(&amp;self) {}\n}\n\nfn main() {\n    let mut f_hat = 42;\n\n    let mut plan = Plan::default();\n    *plan.f_hat() = Some(&amp;mut f_hat);\n    plan.execute();\n    **plan.f_hat().as_mut().unwrap() = 3;\n    plan.execute();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35765440/155423\">What are the options to end a mutable borrow in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42075409/155423\">Drop a immutable borrow to make a mutable borrow</a></li>\n<li><a href=\"https://stackoverflow.com/q/43428894/155423\">Moved variable still borrowing after calling `drop`?</a></li>\n</ul>\n"}], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 57695423, "answer_count": 1, "score": -1, "last_activity_date": 1567005718, "creation_date": 1567002001, "last_edit_date": 1567003414, "question_id": 57694567, "link": "https://stackoverflow.com/questions/57694567/how-can-i-tell-the-compiler-to-release-a-borrow-in-a-struct-without-dropping-the", "title": "How can I tell the compiler to release a borrow in a struct without dropping the entire struct?", "body": "<p>I have the following struct which represents a plan for a numeric computation:</p>\n\n<pre><code>pub struct NfftPlan&lt;'a&gt; {\n    x: Option&lt;&amp;'a [f64]&gt;,\n    f_hat: Option&lt;&amp;'a [Complex64]&gt;,\n    // ...\n}\n</code></pre>\n\n<p>It has a <code>set_f_hat</code> method:</p>\n\n<pre><code>pub fn set_f_hat(&amp;mut self, f_hat: &amp;'a [Complex64]) {\n    self.f_hat = Some(f_hat);\n}\n</code></pre>\n\n<p>and an <code>execute</code> method:</p>\n\n<pre><code>pub fn execute(&amp;self) -&gt; Vec&lt;Complex64&gt;\n</code></pre>\n\n<p>which uses <code>f_hat</code> immutably.</p>\n\n<p>I want to use this in the following way:</p>\n\n<pre><code>let mut f_hat = vec![1,2,3,4];\nlet plan = NfftPlan::new()\nplan.set_f_hat(&amp;f_hat);\nplan.execute();\nf_hat[0] = 3; // Change f_hat to a new value\nplan.execute(); //New computation\n</code></pre>\n\n<p>This fails because I cant mutate <code>f_hat</code> while <code>plan</code> still exists.\nIs there a way for <code>plan</code> to release the borrow to <code>f_hat</code> which would allow me to mutate the <code>f_hat</code> vector?\nSomething like this:</p>\n\n<pre><code>releasedata(&amp;self) {\n    self.f_hat = None\n} //Now the compiler forgets that plan would hold an borrow to f_hat\n</code></pre>\n\n<p>I know that Rust does not allow me to change the vector while a borrow to it exists, in this case via the <code>f_hat</code> reference in the <code>NfftPlan</code> struct.\nI would like a way to tell the compiler to drop the reference to the vector in the <code>NfftPlan</code> struct without dropping the entire struct.</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567000185, "post_id": 57693892, "comment_id": 101832056, "body": "There&#39;s always the simple solution of using a good old <code>for</code> loop  and <code>push</code> and <code>push_str</code>... It looks cleaner to me than abusing <code>iter</code> and <code>flat_map</code>"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567000332, "post_id": 57693892, "comment_id": 101832156, "body": "That is a good point! Still, I&#39;ll leave the question open because I feel like you <i>should</i> be able to do this somehow."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1567000363, "post_id": 57693892, "comment_id": 101832179, "body": "why not just <code>[c].iter()</code> ?"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567001052, "post_id": 57693892, "comment_id": 101832601, "body": "@Stargateur: Read the question"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1567001070, "post_id": 57693892, "comment_id": 101832614, "body": "@Stargateur who would own <code>c</code>? <code>iter()</code> just uses references, the other ones are fine because they are constants."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1567001144, "post_id": 57693892, "comment_id": 101832663, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57693892/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1567001486, "post_id": 57693892, "comment_id": 101832872, "body": "Re abusing <code>flat_map</code> - check the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.escape_default\" rel=\"nofollow noreferrer\">str::escape_default</a> source for example -&gt; <code>FlatMap</code>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1567001902, "post_id": 57693892, "comment_id": 101833130, "body": "@zrzka You&#39;re right."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567003666, "post_id": 57693892, "comment_id": 101834211, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b727eda5c09c1eda329f873cd625a281\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1567003779, "post_id": 57693892, "comment_id": 101834280, "body": "Some copy must be involved since the function is <code>fn(&amp;str) -&gt; String</code>"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1567003949, "answer_count": 0, "score": 2, "last_activity_date": 1566999775, "creation_date": 1566999775, "question_id": 57693892, "link": "https://stackoverflow.com/questions/57693892/replace-values-in-a-string-using-flat-map", "closed_reason": "Duplicate", "title": "Replace values in a string using flat_map", "body": "<p>I'm trying to write a simple function to escape HTML text (yes I know there are crates). Something like this:</p>\n\n<pre><code>fn escape(s: &amp;str) -&gt; String {\n    s.chars().flat_map(|c| {\n        match c {\n            '&lt;' =&gt; ['&amp;', 'l', 't'].iter(),\n            '&gt;' =&gt; ['&amp;', 'g', 't'].iter(),\n            '\"' =&gt; ['&amp;', 'q', 'u', 'o', 't'].iter(),\n            '\\'' =&gt; ['&amp;', 'a', 'p', 'o', 's'].iter(),\n            '&amp;' =&gt; ['&amp;', 'a', 'm', 'p'].iter(),\n            c =&gt; std::iter::once(c),\n        }\n    }).collect()\n}\n</code></pre>\n\n<p>But it doesn't work, because the return types are different for the different arms:</p>\n\n<pre><code>expected struct `std::slice::Iter`, found struct `std::iter::Once`\n</code></pre>\n\n<p>I've tried many many things, but everything I try has some small problem:</p>\n\n<ul>\n<li>You can't do <code>\"&amp;lt\".chars()</code> and <code>c.chars()</code> because <code>char</code> doesn't implement <code>chars()</code>.</li>\n<li>You can't do <code>[c].iter()</code> because <code>c</code> is on the stack and <code>iter()</code> only keeps a reference to it - I couldn't work out how to move stuff into the iterator (I guess you probably can't).</li>\n</ul>\n\n<p>Is there some sensible solution (that doesn't involve <code>.to_string()</code>).</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1566999388, "post_id": 57693561, "comment_id": 101831555, "body": "There seems to be a pending pull request for that: <a href=\"https://github.com/SergioBenitez/Rocket/pull/887\" rel=\"nofollow noreferrer\">#887</a>."}, {"owner": {"reputation": 5659, "user_id": 573255, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/41a9c3304eed6c695c3dfe70b4e4399c?s=128&d=identicon&r=PG", "display_name": "Jasmijn", "link": "https://stackoverflow.com/users/573255/jasmijn"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1567000196, "post_id": 57693561, "comment_id": 101832063, "body": "Thanks! I missed that in my searches. It looks like I will have to implement this behaviour myself for now, sadly."}], "owner": {"reputation": 5659, "user_id": 573255, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/41a9c3304eed6c695c3dfe70b4e4399c?s=128&d=identicon&r=PG", "display_name": "Jasmijn", "link": "https://stackoverflow.com/users/573255/jasmijn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1566998746, "creation_date": 1566998746, "question_id": 57693561, "link": "https://stackoverflow.com/questions/57693561/supporting-range-requests-using-rocket", "title": "Supporting range requests using Rocket", "body": "<p>I know Rocket has support for <a href=\"https://api.rocket.rs/v0.4/rocket/http/hyper/header/struct.AcceptRanges.html\" rel=\"nofollow noreferrer\">the <code>Accept-Ranges</code> header</a>, but how would I implement a <code>Responder</code> that properly handles <a href=\"https://api.rocket.rs/v0.4/rocket/http/hyper/header/enum.Range.html\" rel=\"nofollow noreferrer\">a <code>Range</code> header</a>?</p>\n\n<p>I found <a href=\"https://gitlab.com/dannypsnl/Rocket-rs/blob/0d3684b55989d6e6b24e00618546da77f917a0a6/lib/src/response/responder.rs#L235\" rel=\"nofollow noreferrer\">a version that had some preliminary support</a> for having the <code>Responder</code> implementation for <code>File</code> handle a <code>Range</code> header, but it seems to <a href=\"https://github.com/SergioBenitez/Rocket/blob/master/core/lib/src/response/responder.rs#L243-L251\" rel=\"nofollow noreferrer\">no longer be present</a>.</p>\n"}, {"tags": ["rust", "lifetime", "serde"], "comments": [{"owner": {"reputation": 325, "user_id": 10798938, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UuAJn.jpg?s=128&g=1", "display_name": "Davichete", "link": "https://stackoverflow.com/users/10798938/davichete"}, "edited": false, "score": 0, "creation_date": 1566996773, "post_id": 57692768, "comment_id": 101829914, "body": "I think it&#39;s because of the <code>serde::Deserialize</code> and <code>serde::Serialize</code>, deleting those fix the problem. No idea how to keep those Traits without errors"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566996913, "post_id": 57692768, "comment_id": 101830004, "body": "Why don&#39;t you use 2 different lifetimes?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566996934, "post_id": 57692768, "comment_id": 101830019, "body": "Of course it&#39;s related to <code>serde::Deserialize</code>, that&#39;s why I added the &quot;serde&quot; tag to the question. But deleting them isn&#39;t really a fix."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1566997128, "post_id": 57692768, "comment_id": 101830116, "body": "Simpler reproduction: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0a3bb11afd9b8c85e5c8b2228b1420fa\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1566997181, "post_id": 57692768, "comment_id": 101830143, "body": "Different lifetimes do not work as well, of course I have already tried :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566997250, "post_id": 57692768, "comment_id": 101830189, "body": "@VictorPolevoy I know, that&#39;s unrelated to your question, but that doesn&#39;t make a lot of sense to have a single lifetime for 2 unrelated data."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1566997546, "post_id": 57692768, "comment_id": 101830378, "body": "This seems to work : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cbff07ed91a01bd07cf66dc706edd83d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 325, "user_id": 10798938, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UuAJn.jpg?s=128&g=1", "display_name": "Davichete", "link": "https://stackoverflow.com/users/10798938/davichete"}, "edited": false, "score": 0, "creation_date": 1566997573, "post_id": 57692768, "comment_id": 101830401, "body": "@VictorPolevoy Consider using String instead of &amp;str, avoid using lifetimes specifiers and solves the error"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 325, "user_id": 10798938, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UuAJn.jpg?s=128&g=1", "display_name": "Davichete", "link": "https://stackoverflow.com/users/10798938/davichete"}, "edited": false, "score": 1, "creation_date": 1566998571, "post_id": 57692768, "comment_id": 101831014, "body": "@Davichete the main question here is using exactly <code>&amp;str</code> instead of <code>String</code> :) objects"}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566998591, "post_id": 57692768, "comment_id": 101831029, "body": "@DenysS&#233;guret yes, it works with <code>serde borrow</code> indeed! :)"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 2, "creation_date": 1566999358, "post_id": 57692768, "comment_id": 101831541, "body": "@VictorPolevoy just be aware that it won&#39;t work if the string contains escaped characters -&gt; deserializer must unescape them -&gt; it must be owned (<code>String</code>). <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=33fbb7a766642e30c0b577d9164c36fa\" rel=\"nofollow noreferrer\">Playground</a>."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 11, "last_activity_date": 1566998716, "creation_date": 1566998716, "answer_id": 57693547, "question_id": 57692768, "link": "https://stackoverflow.com/questions/57692768/how-to-derive-serdedeserialize-for-a-struct-with-members-with-lifetimes/57693547#57693547", "title": "How to derive serde::Deserialize for a struct with members with lifetimes", "body": "<p>serde's lifetimes are complex enough to allow you to deserialize without copying data more than necessary. It's described in <a href=\"https://serde.rs/lifetimes.html\" rel=\"noreferrer\">https://serde.rs/lifetimes.html</a></p>\n\n<p>Apart for <code>&amp;str</code> and <code>&amp;[u8]</code>, serde doesn't accept implicit borrowing.</p>\n\n<p>For other struct parameters, if you want to borrow from the deserializer, you have to be explicit, which is done using a special <code>#[serde(borrow)]</code> attribute:</p>\n\n<pre><code>#[derive(Default, Debug, serde::Deserialize, serde::Serialize)]\nstruct A&lt;'a&gt; {\n\n    #[serde(borrow)]\n    b: B&lt;'a&gt;,\n\n    #[serde(borrow)]\n    c: C&lt;'a&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 683, "favorite_count": 1, "closed_date": 1566999221, "accepted_answer_id": 57693547, "answer_count": 1, "score": 7, "last_activity_date": 1566999354, "creation_date": 1566996332, "last_edit_date": 1566999354, "question_id": 57692768, "link": "https://stackoverflow.com/questions/57692768/how-to-derive-serdedeserialize-for-a-struct-with-members-with-lifetimes", "closed_reason": "Duplicate", "title": "How to derive serde::Deserialize for a struct with members with lifetimes", "body": "<p>How can I derive <code>Deserialize</code> for a struct with objects with different or equal lifetimes inside?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d9d0ca988ddab455bfdfd26eee124593\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>#[derive(Default, Debug, serde::Deserialize, serde::Serialize)]\nstruct B&lt;'a&gt; {\n    b: &amp;'a str,\n}\n\n#[derive(Default, Debug, serde::Deserialize, serde::Serialize)]\nstruct C&lt;'a&gt; {\n    c: &amp;'a str,\n}\n\n#[derive(Default, Debug, serde::Deserialize, serde::Serialize)]\nstruct A&lt;'a&gt; {\n    b: B&lt;'a&gt;,\n    c: C&lt;'a&gt;,\n}\n\nfn main() {\n}\n</code></pre>\n\n<p>Rustc says this is impossible:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'de` due to conflicting requirements\n  --&gt; src/main.rs:13:5\n   |\n13 |     b: B&lt;'a&gt;,\n   |     ^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'de as defined on the impl at 11:26...\n  --&gt; src/main.rs:11:26\n   |\n11 | #[derive(Default, Debug, serde::Deserialize, serde::Serialize)]\n   |                          ^^^^^^^^^^^^^^^^^^\n   = note: ...so that the types are compatible:\n           expected _IMPL_SERIALIZE_FOR_B::_serde::de::SeqAccess&lt;'_&gt;\n              found _IMPL_SERIALIZE_FOR_B::_serde::de::SeqAccess&lt;'de&gt;\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 12:10...\n  --&gt; src/main.rs:12:10\n   |\n12 | struct A&lt;'a&gt; {\n   |          ^^\n   = note: ...so that the types are compatible:\n           expected _IMPL_SERIALIZE_FOR_B::_serde::Deserialize&lt;'_&gt;\n              found _IMPL_SERIALIZE_FOR_B::_serde::Deserialize&lt;'_&gt;\n\n</code></pre>\n\n<p>I don't understand what causes this problem and how I can fix it.\nThere is <a href=\"https://stackoverflow.com/questions/47239301/cannot-infer-an-appropriate-lifetime-due-to-conflicting-requirements-in-a-recurs\">a similar question</a> but its answer does not cover this case.</p>\n"}, {"tags": ["curl", "rust", "bitcoin", "json-rpc"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566993749, "post_id": 57691926, "comment_id": 101828126, "body": "Where exactly is there an outputting code ?"}, {"owner": {"reputation": 111, "user_id": 2007813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2af608da49ceb5471e189c7bae6504c?s=128&d=identicon&r=PG", "display_name": "curious", "link": "https://stackoverflow.com/users/2007813/curious"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566993877, "post_id": 57691926, "comment_id": 101828208, "body": "In the last line, I even tried with: <code>let p = transfer.perform().unwrap(); println!(&quot;{:?}&quot;, p)</code>, but still no output is there."}], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 2007813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2af608da49ceb5471e189c7bae6504c?s=128&d=identicon&r=PG", "display_name": "curious", "link": "https://stackoverflow.com/users/2007813/curious"}, "edited": false, "score": 0, "creation_date": 1567000759, "post_id": 57693192, "comment_id": 101832402, "body": "Thanks for pointing it out. I modified my code according to your example. Now output is there but with response code 401 which I suspects is bcoz of improper implementation of Auth method. Can you please help me with proper syntax to use username and password authentication? Thanking you in advance."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 111, "user_id": 2007813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2af608da49ceb5471e189c7bae6504c?s=128&d=identicon&r=PG", "display_name": "curious", "link": "https://stackoverflow.com/users/2007813/curious"}, "edited": false, "score": 1, "creation_date": 1567001933, "post_id": 57693192, "comment_id": 101833155, "body": "Did you even read the documentation? <a href=\"https://docs.rs/curl/0.5.0/curl/easy/struct.Easy.html\" rel=\"nofollow noreferrer\">Easy</a> &amp; <code>username</code>, <code>password</code> &amp; <code>http_auth</code>."}, {"owner": {"reputation": 111, "user_id": 2007813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2af608da49ceb5471e189c7bae6504c?s=128&d=identicon&r=PG", "display_name": "curious", "link": "https://stackoverflow.com/users/2007813/curious"}, "edited": false, "score": 0, "creation_date": 1567013118, "post_id": 57693192, "comment_id": 101838904, "body": "Thank you for refering the link. New to rust, I was only looking into the examples given at   <a href=\"https://github.com/alexcrichton/curl-rust\" rel=\"nofollow noreferrer\">curl-rust</a>. Code is working now using easy.username(&quot;some_user&quot;).unwrap(); easy.password(&quot;some_password&quot;).unwrap(); easy.http_auth(auth.basic(true)); Thank you once again. \ud83d\udc4d"}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 4, "last_activity_date": 1566997670, "creation_date": 1566997670, "answer_id": 57693192, "question_id": 57691926, "link": "https://stackoverflow.com/questions/57691926/bitcoin-curl-json-rpc-using-rust/57693192#57693192", "title": "Bitcoin cURL/JSON-RPC using Rust", "body": "<p>You're missing <a href=\"https://docs.rs/curl/0.4.6/curl/easy/struct.Easy.html#method.write_function\" rel=\"nofollow noreferrer\"><code>write_function</code></a> call. An example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::Read;\n\nuse curl::easy::Easy;\n\nfn main() {\n    let mut body = r#\"{\"jsonrpc\":\"2.0\",\"method\":\"guru.test\",\"params\":[\"Guru\"],\"id\":123}\"#.as_bytes();\n\n    let mut easy = Easy::new();\n    easy.url(\"https://gurujsonrpc.appspot.com/guru\").unwrap();\n    easy.post(true).unwrap();\n    easy.post_field_size(body.len() as u64).unwrap();\n\n    let mut data = Vec::new();\n    {\n        // Create transfer in separate scope ...\n        let mut transfer = easy.transfer();\n\n        // Request body\n        transfer.read_function(|buf| {\n            Ok(body.read(buf).unwrap_or(0))\n        }).unwrap();\n\n        // Response body\n        transfer.write_function(|new_data| {\n            data.extend_from_slice(new_data);\n            Ok(new_data.len())\n        }).unwrap();\n\n        transfer.perform().unwrap();\n        // .. to force drop it here, so we can use easy.response_code()\n    }\n\n    println!(\"{}\", easy.response_code().unwrap());\n    println!(\"Received {} bytes\", data.len());\n    if !data.is_empty() {\n        println!(\"Bytes: {:?}\", data);\n        println!(\"As string: {}\", String::from_utf8_lossy(&amp;data));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 2007813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2af608da49ceb5471e189c7bae6504c?s=128&d=identicon&r=PG", "display_name": "curious", "link": "https://stackoverflow.com/users/2007813/curious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 1, "accepted_answer_id": 57693192, "answer_count": 1, "score": 0, "last_activity_date": 1566997670, "creation_date": 1566993581, "last_edit_date": 1566993684, "question_id": 57691926, "link": "https://stackoverflow.com/questions/57691926/bitcoin-curl-json-rpc-using-rust", "title": "Bitcoin cURL/JSON-RPC using Rust", "body": "<p>I'm writing a code in RUST to query data from bitcoin-core using JSON-RPC. I'm using this <a href=\"https://github.com/alexcrichton/curl-rust\" rel=\"nofollow noreferrer\">curl-rust</a>, but no output is being shown on running <code>cargo run</code>.</p>\n\n<pre><code>extern crate curl;\n\nuse std::io::Read;\nuse curl::easy::{Easy, List};\n\nfn main() {\n    let mut data = r#\"{\"jsonrpc\":\"1.0\",\"id\":\"curltext\",\"method\":\"getrawtransaction\",\"params\":[\"f8ae07a1292136def6d79d5aef15aacfa1aefa2db153037b878b06f00e2cd051\", 2]}\"#.as_bytes();\n\n    let mut easy = Easy::new();\n    easy.url(\"http://192.168.X.X:8332\").unwrap();\n    easy.post(true).unwrap();\n    easy.post_field_size(data.len() as u64).unwrap();\n\n    let mut list = List::new();\n    list.append(\"Authorization: Basic some_user:some_password\").unwrap();\n    easy.http_headers(list).unwrap();\n\n    let mut transfer = easy.transfer();\n    transfer.read_function(|buf| {\n        Ok(data.read(buf).unwrap_or(0))\n    }).unwrap();\n    transfer.perform().unwrap();\n}\n</code></pre>\n\n<p>I would expect the code to give some output, why this isn't the case?</p>\n"}, {"tags": ["rust", "amethyst"], "answers": [{"tags": [], "owner": {"reputation": 89, "user_id": 6684915, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MaDqT.png?s=128&g=1", "display_name": "skypitcher", "link": "https://stackoverflow.com/users/6684915/skypitcher"}, "is_accepted": true, "score": 1, "last_activity_date": 1567130754, "last_edit_date": 1567130754, "creation_date": 1566995594, "answer_id": 57692540, "question_id": 57691913, "link": "https://stackoverflow.com/questions/57691913/how-to-load-a-texture-from-memory-in-amethyst-engine/57692540#57692540", "title": "How to load a texture from memory in amethyst engine?", "body": "<p>There is a solution mentioned slightly in the <a href=\"https://book.amethyst.rs/stable/appendices/b_migration_notes/rendy_migration.html\" rel=\"nofollow noreferrer\">offical tutorial</a></p>\n\n<pre><code>//To load a texture in memory, you can't use [0.; 4].into() as the TextureData anymore. \n// Use:\nuse amethyst::{\n    assets::{AssetStorage, Handle, Loader, Prefab, PrefabLoader},\n    ecs::World,\n    renderer::{\n        loaders::load_from_srgba,\n        palette::Srgba,\n        types::TextureData,\n        Texture,\n    },\n};\n\nlet loader = world.read_resource::&lt;Loader&gt;();\nlet texture_assets = world.read_resource::&lt;AssetStorage&lt;Texture&gt;&gt;();\nlet texture_builder = load_from_srgba(Srgba::new(0., 0., 0., 0.));\nlet texture_handle: Handle&lt;Texture&gt; =\nloader.load_from_data(TextureData::from(texture_builder), (), &amp;texture_assets);\n</code></pre>\n\n<p>Another way is introduced in the <a href=\"https://docs.amethyst.rs/stable/amethyst_rendy/formats/texture/struct.ImageFormat.html\" rel=\"nofollow noreferrer\">Doc of ImageFormat</a>.</p>\n\n<pre><code>let loader = res.fetch_mut::&lt;Loader&gt;();\nlet texture_storage = res.fetch_mut::&lt;AssetStorage&lt;Texture&gt;&gt;();\n\nlet texture_builder = TextureBuilder::new()\n    .with_data_width(handle.width)\n    .with_data_height(handle.height)\n    .with_kind(image::Kind::D2(handle.width, handle.height, 1, 1))\n    .with_view_kind(image::ViewKind::D2)\n    .with_sampler_info(SamplerInfo {\n        min_filter: Filter::Linear,\n        mag_filter: Filter::Linear,\n        mip_filter: Filter::Linear,\n        wrap_mode: (WrapMode::Clamp, WrapMode::Clamp, WrapMode::Clamp),\n        lod_bias: 0.0.into(),\n        lod_range: std::ops::Range {\n            start: 0.0.into(),\n            end: 1000.0.into(),\n        },\n        comparison: None,\n        border: PackedColor(0),\n        anisotropic: Anisotropic::Off,\n    })\n    .with_raw_data(handle.pixels, Format::Rgba8Unorm);\n\nlet tex: Handle&lt;Texture&gt; = loader.load_from_data(TextureData(texture_builder), (), &amp;texture_storage);\n</code></pre>\n\n<blockquote>\n  <p>For the version above 0.12, you have to warp the <code>Handle&lt;Texture&gt;</code> into a <code>SpriteRender</code> to display it.</p>\n</blockquote>\n"}], "owner": {"reputation": 89, "user_id": 6684915, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MaDqT.png?s=128&g=1", "display_name": "skypitcher", "link": "https://stackoverflow.com/users/6684915/skypitcher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 0, "accepted_answer_id": 57692540, "answer_count": 1, "score": 1, "last_activity_date": 1567130754, "creation_date": 1566993540, "question_id": 57691913, "link": "https://stackoverflow.com/questions/57691913/how-to-load-a-texture-from-memory-in-amethyst-engine", "title": "How to load a texture from memory in amethyst engine?", "body": "<p>I have read the offical docs but can't find any way to load a texture from memory directly. It currently do have the APIs to load textures from files but what I want exactly is to load a texture from a <code>&amp;[u8]</code> which respresents an RGBA formatted image with fixed size.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1566993115, "post_id": 57691759, "comment_id": 101827762, "body": "Did you add the <code>use</code> ?"}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566993218, "post_id": 57691759, "comment_id": 101827824, "body": "8 | use CONFIG_CRD;   |     ^^^^^^^^^^ no <code>CONFIG_CRD</code> external crate  can not use <code>use</code>"}, {"owner": {"reputation": 482, "user_id": 4760674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tMvVK.jpg?s=128&g=1", "display_name": "Major", "link": "https://stackoverflow.com/users/4760674/major"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566993291, "post_id": 57691759, "comment_id": 101827863, "body": "What @DenysS&#233;guret said, did you write <code>use pkg_name::CONFIG_CRD</code> in <code>src&#47;abc.rs</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1567001647, "post_id": 57692470, "comment_id": 101832972, "body": "I write <code>use crate::CONFIG_CRD;</code> in <code>abc.rs</code> but it tell  no <code>CONFIG_CRD</code> in the root.  While I write <code>pub(crate) const CONFIG_CRD: &amp;str = &quot;operationalconfigurations&quot;;</code>  just like you said.  my version is: ``` rustc 1.36.0 (a53f9df32 2019-07-03) ```"}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1567001891, "post_id": 57692470, "comment_id": 101833122, "body": "I found that I must write this const before <code>mod abc;</code> why?"}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1567002531, "post_id": 57692470, "comment_id": 101833554, "body": "I find it&#39;ll be more complicated if I  define <code>pub(crate) const CONFIG_VERSION: &amp;str = &quot;v1alpha1&quot;;</code> and <code>mod abc;</code> in another file <code>src&#47;lib.rs</code>.  Then I can use const in <code>src&#47;abc.rs</code>, while I can&#39;t use it in <code>main.rs</code> now."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1567003159, "post_id": 57692470, "comment_id": 101833932, "body": "Then drop the <code>(crate)</code> and use just <code>pub</code>. See <a href=\"https://doc.rust-lang.org/rust-by-example/mod/visibility.html\" rel=\"nofollow noreferrer\">Visibility</a>."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1566995392, "creation_date": 1566995392, "answer_id": 57692470, "question_id": 57691759, "link": "https://stackoverflow.com/questions/57691759/why-my-const-variable-cant-be-found-in-different-mod/57692470#57692470", "title": "Why my const variable can&#39;t be found in different mod", "body": "<p>I assume that we're talking about Rust 2018 edition. I'd recommend to read the <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"nofollow noreferrer\">Path clarity</a> section, especially this part:</p>\n\n<blockquote>\n  <p>The prefix <code>::</code> previously referred to either the crate root or an external crate; it now unambiguously refers to an external crate. For instance, <code>::foo::bar</code> always refers to the name <code>bar</code> inside the external crate <code>foo</code>.</p>\n</blockquote>\n\n<p>Use can't use <code>::CONFIG_VERSION</code>, <code>::main::CONFIG_VERSION</code>, etc. Couple of options:</p>\n\n<ul>\n<li>Use <code>crate::CONFIG_VERSION</code> directly</li>\n<li>Import it <code>use crate::CONFIG_VERSION</code> and use just <code>CONFIG_VERSION</code></li>\n</ul>\n\n<p><code>abc.rs</code> content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub(crate) fn foo() {\n    println!(\"{}\", crate::CONFIG_VERSION);\n}\n</code></pre>\n\n<p>Another <code>abc.rs</code> variant:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::CONFIG_VERSION;\n\npub(crate) fn foo() {\n    println!(\"{}\", CONFIG_VERSION);\n}\n</code></pre>\n\n<p><code>main.rs</code> content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub(crate) const CONFIG_VERSION: &amp;str = \"v1alpha1\";\n\nmod abc;\n\nfn main() {\n    abc::foo()\n}\n</code></pre>\n"}], "owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 1, "accepted_answer_id": 57692470, "answer_count": 1, "score": 1, "last_activity_date": 1566995392, "creation_date": 1566993029, "last_edit_date": 1566993154, "question_id": 57691759, "link": "https://stackoverflow.com/questions/57691759/why-my-const-variable-cant-be-found-in-different-mod", "title": "Why my const variable can&#39;t be found in different mod", "body": "<p>I define a const variable in main.rs and want to use it in different file.</p>\n\n<p>in <code>src/main.rs</code>, I define such const, no matter and pub or not, it didn\u2019t use:</p>\n\n<pre><code>const CONFIG_GROUP: &amp;str = \"core.hydra.io\";\npub const CONFIG_VERSION: &amp;str = \"v1alpha1\";\npub const COMPONENT_CRD: &amp;str = \"componentschematics\";\n\nfn main() {\n...\n}\n</code></pre>\n\n<p>and in another file <code>src/abc.rs</code>, I want use this const.</p>\n\n<p>It doesn't work, whether use <code>::</code> or not.</p>\n\n<pre><code>println!(\"{}\", COMPONENT_CRD); \nlet component_resource = RawApi::customResource(COMPONENT_CRD)\n    .within(top_ns.as_str())\n    .group(::CONFIG_GROUP)\n    .version(::CONFIG_VERSION);\n</code></pre>\n\n<p>It reports :</p>\n\n<pre><code>    |\n208 |         println!(\"{}\", COMPONENT_CRD);\n    |                        ^^^^^^^^^^^^^ not found in this scope\nerror[E0425]: cannot find value `CONFIG_CRD` in this scope\n   --&gt; src/abc.rs:209:54\n    |\n209 |         let config_resource = RawApi::customResource(CONFIG_CRD)\n    |                                                      ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `CONFIG_VERSION` in the crate root\n   --&gt; src/abc.rs:210:24\n    |\n210 |             .version(::CONFIG_VERSION)\n    |                        ^^^^^^^^^^^^^^ not found in the crate root\n\nerror[E0425]: cannot find value `CONFIG_GROUP` in the crate root\n   --&gt; src/abc.rs:211:22\n    |\n211 |             .group(::CONFIG_GROUP)\n    |                      ^^^^^^^^^^^^ not found in the crate root\n</code></pre>\n"}, {"tags": ["rust", "glob"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566991902, "post_id": 57690855, "comment_id": 101827071, "body": "Why this <code>display()</code> in <code>read_to_string(entry.unwrap().display())</code> ? Bad copy-paste ?"}, {"owner": {"reputation": 73, "user_id": 3895289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2f2ff2b46a4922848b36cc9194634e8?s=128&d=identicon&r=PG&f=1", "display_name": "lars.a", "link": "https://stackoverflow.com/users/3895289/lars-a"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566992280, "post_id": 57690855, "comment_id": 101827268, "body": "It was only my last try. read_to_string(entry) doesnt work also: <code>rust 12 |         let file_content = fs::read_to_string(entry).expect(&quot;Something went wrong reading the file&quot;);    |                            ^^^^^^^^^^^^^^^^^^ the trait `std::convert::AsRef&lt;std::path::Path&gt;` is not implemented for `std::result::Result&lt;std::path::PathBuf, glob::GlobError&gt;` </code>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1566992361, "post_id": 57690855, "comment_id": 101827322, "body": "Just remove the <code>display()</code>: <code>fs::read_to_string(entry.unwrap())</code>"}], "answers": [{"comments": [{"owner": {"reputation": 73, "user_id": 3895289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2f2ff2b46a4922848b36cc9194634e8?s=128&d=identicon&r=PG&f=1", "display_name": "lars.a", "link": "https://stackoverflow.com/users/3895289/lars-a"}, "edited": false, "score": 0, "creation_date": 1566992769, "post_id": 57691585, "comment_id": 101827564, "body": "Thank you. Now I understand this in the docs: <code>if let Ok(path) = entry {         println!(&quot;{:?}&quot;, path.display())     } </code>  Yes, a clean program. I just tried a little bit on how to do that and then shortened it as an example for here. First of all I wanted it to work at all."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 2, "last_activity_date": 1566993435, "last_edit_date": 1566993435, "creation_date": 1566992456, "answer_id": 57691585, "question_id": 57690855, "link": "https://stackoverflow.com/questions/57690855/get-filepath-from-glob-entry-for-use-in-fsread-to-string/57691585#57691585", "title": "Get filepath from glob-entry for use in fs::read_to_string", "body": "<p>You don't need a string as <a href=\"https://doc.rust-lang.org/std/fs/fn.read_to_string.html\" rel=\"nofollow noreferrer\"><code>std::fs::read_to_string</code></a> takes a <code>AsRef&lt;Path&gt;</code> as argument.</p>\n\n<p>You should simply use the entry's <code>OK</code> value, which is a <code>Path</code>:</p>\n\n<pre><code>let file_content = fs::read_to_string(entry.unwrap()).expect(\"...\");\n</code></pre>\n\n<p>Note that a clean program would usually handle errors:</p>\n\n<pre><code>for entry in glob(source_files_glob).expect(\"Failed to read glob pattern\") {\n    match entry {\n        OK(path) =&gt; {\n            println!(\"{}\", path.display());\n            let file_content = fs::read_to_string(path).expect(\"...\");\n            println!(\"Content: {}\", file_content);\n        }\n        Err(e) =&gt; {\n            // handle error\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 3895289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2f2ff2b46a4922848b36cc9194634e8?s=128&d=identicon&r=PG&f=1", "display_name": "lars.a", "link": "https://stackoverflow.com/users/3895289/lars-a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "accepted_answer_id": 57691585, "answer_count": 1, "score": 1, "last_activity_date": 1566993599, "creation_date": 1566989867, "last_edit_date": 1566993599, "question_id": 57690855, "link": "https://stackoverflow.com/questions/57690855/get-filepath-from-glob-entry-for-use-in-fsread-to-string", "title": "Get filepath from glob-entry for use in fs::read_to_string", "body": "<p>I read a directory with glob. I can print the filepath but im unable to  get the path as a string to use it in <code>fs::read_to_string()</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate glob;\n\nuse glob::glob;\nuse std::fs;\n\nfn main() {\n    let source_files_glob = \"/my/sample/path/*.ext\";\n\n    for entry in glob(source_files_glob).expect(\"Failed to read glob pattern\") {\n        println!(\"{}\", entry.unwrap().display());\n\n        let file_content = fs::read_to_string(entry.unwrap().display()).expect(\"Something went wrong reading the file\");\n\n        println!(\"Content: {}\", file_content);\n    }\n}\n\n</code></pre>\n\n<p>I got this error:</p>\n\n<pre><code>  --&gt; src/main.rs:12:28\n   |\n12 |         let file_content = fs::read_to_string(entry.unwrap().display()).expect(\"Something went wrong reading the file\");\n   |                            ^^^^^^^^^^^^^^^^^^ the trait `std::convert::AsRef&lt;std::path::Path&gt;` is not implemented for `std::path::Display&lt;'_&gt;`\n   |\n\n</code></pre>\n\n<p>How can I get the full filepath from entry to use it in \"fs::read_to_string\" ?</p>\n"}, {"tags": ["python", "rust", "python-cffi"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 11661537, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-MBz8X9GFYVE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3recvk6uuTyBQ35aJViWXzmV80cdnw/mo/photo.jpg?sz=128", "display_name": "ProjitB", "link": "https://stackoverflow.com/users/11661537/projitb"}, "edited": false, "score": 0, "creation_date": 1566990217, "post_id": 57690691, "comment_id": 101826199, "body": "to clarify, my exact issue is when I do a pickle.dumps(json_data), and then try to pass that as a parameter to my rust interface from the python side, I am not able to deserialize it on the rust side."}, {"owner": {"reputation": 1413, "user_id": 8375783, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PtdZN.jpg?s=128&g=1", "display_name": "Trapli", "link": "https://stackoverflow.com/users/8375783/trapli"}, "reply_to_user": {"reputation": 11, "user_id": 11661537, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-MBz8X9GFYVE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3recvk6uuTyBQ35aJViWXzmV80cdnw/mo/photo.jpg?sz=128", "display_name": "ProjitB", "link": "https://stackoverflow.com/users/11661537/projitb"}, "edited": false, "score": 0, "creation_date": 1566990474, "post_id": 57690691, "comment_id": 101826337, "body": "JSON with single quotes are invalid, so json parse should fail (on the rust side). You are not pickling a json but a pyhton dict."}, {"owner": {"reputation": 11, "user_id": 11661537, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-MBz8X9GFYVE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3recvk6uuTyBQ35aJViWXzmV80cdnw/mo/photo.jpg?sz=128", "display_name": "ProjitB", "link": "https://stackoverflow.com/users/11661537/projitb"}, "edited": false, "score": 0, "creation_date": 1567276896, "post_id": 57690691, "comment_id": 101920482, "body": "If I write it to a file, and read it from the rust side, it works perfectly. However I am facing issues with the same process when I try to send it as a string instead of using the temporary file."}], "tags": [], "owner": {"reputation": 1413, "user_id": 8375783, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PtdZN.jpg?s=128&g=1", "display_name": "Trapli", "link": "https://stackoverflow.com/users/8375783/trapli"}, "is_accepted": false, "score": 0, "last_activity_date": 1566989927, "last_edit_date": 1566989927, "creation_date": 1566989312, "answer_id": 57690691, "question_id": 57690545, "link": "https://stackoverflow.com/questions/57690545/passing-json-data-from-python-to-rust-via-pickle-or-other/57690691#57690691", "title": "Passing json data from python to rust via pickle (or other)", "body": "<p>It is always a good idea to serialize to json.</p>\n\n<pre><code>print({'url': 'https://postman-echo.com/post', 'data': {\"hello\": \"world\"}})\n\n</code></pre>\n\n<p>is <code>{'url': 'https://postman-echo.com/post', 'data': {'hello': 'world'}}</code></p>\n\n<pre><code>import json\n\nprint(json.dumps({'url': 'https://postman-echo.com/post', 'data': {\"hello\": \"world\"}}))\n\n</code></pre>\n\n<p>is <code>{\"url\": \"https://postman-echo.com/post\", \"data\": {\"hello\": \"world\"}}</code></p>\n\n<p>Quotes matter, notice <code>'</code> and <code>\"</code> difference.</p>\n"}], "owner": {"reputation": 11, "user_id": 11661537, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-MBz8X9GFYVE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3recvk6uuTyBQ35aJViWXzmV80cdnw/mo/photo.jpg?sz=128", "display_name": "ProjitB", "link": "https://stackoverflow.com/users/11661537/projitb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 304, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566989927, "creation_date": 1566988846, "question_id": 57690545, "link": "https://stackoverflow.com/questions/57690545/passing-json-data-from-python-to-rust-via-pickle-or-other", "title": "Passing json data from python to rust via pickle (or other)", "body": "<p>I'm trying to create a generic interface to be able to use rust libraries from python(<a href=\"https://github.com/ProjitB/Rust-Libraries-to-Python\" rel=\"nofollow noreferrer\">https://github.com/ProjitB/Rust-Libraries-to-Python</a>). Right now while I have a working version, I am creating a temporary file in the process of passing data, which I want to avoid. Any ideas on how to do this?</p>\n\n<p>So what I do is that I write an interface function in rust, which invoked the rust library functions I want to use from python. To pass arguments from python, I am writing it to a tempfile via pickle, and the read the args on the rust side through serde_pickle. </p>\n\n<p>What I'm stuck at is that while I am able to pass strings from python to rust(ex, the filename itself is being passed right now as a string), when I am not able to do so with pickle serialized data. Perhaps it is to due to null bytes?</p>\n\n<pre class=\"lang-py prettyprint-override\"><code># Rust Function Interface Definitions\nffi = FFI()\nffi.cdef(\"\"\"\n   typedef struct {int length; const char* response;} RetStruct;\n   RetStruct rust_post(const char*);\n\n\"\"\") \nLIB = ffi.dlopen(\"target/release/librequest_export.dylib\")\n\ndef function_call(function, data):\n    inp_file = tempfile.NamedTemporaryFile()\n    with open(inp_file.name, 'wb') as handle:\n        pickle.dump(data, handle, protocol=pickle.HIGHEST_PROTOCOL)\n    val = function(to_string(inp_file.name))\n    obj = pickle.loads(read_pickle_bytes(val.response, val.length))\n    return obj['response']\n\ndef test_function_call():\n    data = {'url': 'https://postman-echo.com/post', 'data': {\"hello\": \"world\"}}\n    output = eval(function_call(LIB.rust_post, data))\n    print(type(output))\n    print(output)\n    print(output[\"args\"])\n\ntest_function_call()\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use reqwest;\nuse url::Url;\nuse std::os::raw::c_char;\nuse std::ffi::CStr;\nuse serde_json as json;\nuse serde_pickle as pickle;\nuse std::collections::BTreeMap;\nuse std::fs;\nuse std::fs::File;\nuse std::io::{Read};\nuse std::mem;\n\n#[repr(C)]\npub struct RetStruct {\n    length: i64,\n    response: *mut u8\n}\n\npub extern \"C\" fn rust_post(input_temp_file: *const c_char) -&gt; RetStruct{\n    // File to read and write to\n    let input_filename = unsafe { CStr::from_ptr(input_temp_file).to_str().expect(\"Not a valid UTF-8 string\") };\n\n    //Processing\n    let reader: Box&lt;Read&gt; = Box::new(File::open(input_filename).unwrap());\n    let decoded: json::Value = pickle::from_reader(reader).unwrap();\n    let mut map = BTreeMap::new();\n\n    //To Implement\n    let data = &amp;decoded[\"data\"];\n    let url = Url::parse(&amp;decoded[\"url\"].as_str().expect(\"Not a valid UTF-8 string\")).unwrap();\n    let client = reqwest::Client::new();\n    let mut resp = client.post(url)\n        .json(&amp;data)\n        .send().unwrap();\n    map.insert(\"response\".to_string(), resp.text().unwrap());\n\n    //Processing\n    let mut serialized = serde_pickle::to_vec(&amp;map, true).unwrap();\n    let x = serialized.len();\n    let p = serialized.as_mut_ptr();\n    mem::forget(serialized);\n    RetStruct{\n    length: x as i64,\n    response: p\n    }\n}\n\n</code></pre>\n\n<p>The code shows how I'm currently passing data between python and rust. If I try to send the serialized pickle data in the manner that I send the filename, I am not able to recover all of it.</p>\n"}, {"tags": ["vector", "rust", "traits"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1566988428, "post_id": 57690285, "comment_id": 101825230, "body": "Hi there! I think your question is answered by <a href=\"https://stackoverflow.com/a/30353928/2408867\">&quot;How to clone a struct storing a boxed trait object?&quot;</a>. In short: if you have <code>Clone</code> as supertrait, your trait becomes non object-safe, meaning it cannot be made into an object. Please let us know if the linked answer sufficiently answers your question!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1566988610, "post_id": 57690285, "comment_id": 101825327, "body": "The error message is really not optimal, though. It should point to the <code>Clone</code> supertrait bound. But you probably want to read a bit about &quot;object safety&quot;. For example <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">here</a> or <a href=\"https://stackoverflow.com/a/44097369/2408867\">here</a>."}, {"owner": {"reputation": 562, "user_id": 1956082, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1b168f4c853d4fd944a0c5976a628cd8?s=128&d=identicon&r=PG", "display_name": "allevo", "link": "https://stackoverflow.com/users/1956082/allevo"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567002781, "post_id": 57690285, "comment_id": 101833709, "body": "So, it&#39;s not possible to implement Clone trait for a struct with <code>Vec&lt;Box&lt;dyn MyTrait&gt;&gt;</code> where MyTrait implements Clone?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567008886, "post_id": 57690285, "comment_id": 101837173, "body": "It is possible, as the linked answer shows. It&#39;s just not possible to call <code>clone()</code> on a trait object (due to object safety). Therefore you have to build your own <code>clone</code> method that returns a boxed trait object."}], "owner": {"reputation": 562, "user_id": 1956082, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1b168f4c853d4fd944a0c5976a628cd8?s=128&d=identicon&r=PG", "display_name": "allevo", "link": "https://stackoverflow.com/users/1956082/allevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "closed_date": 1566991613, "answer_count": 0, "score": 1, "last_activity_date": 1566988601, "creation_date": 1566987985, "last_edit_date": 1566988601, "question_id": 57690285, "link": "https://stackoverflow.com/questions/57690285/the-trait-cannot-be-made-into-an-object-in-vec", "closed_reason": "Duplicate", "title": "the trait cannot be made into an object in Vec", "body": "<p>I have the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Handler&lt;T: Clone&gt;: Clone {\n    fn invoke(&amp;self) -&gt; Result&lt;(), std::io::Error&gt;;\n}\n\n#[derive(Clone)]\npub struct App&lt;T: Clone&gt; {\n    handlers: Vec&lt;Box&lt;dyn Handler&lt;T&gt;&gt;&gt;,\n}\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    #[derive(Clone)]\n    struct MyHandler&lt;T: Clone&gt; { tt: T }\n\n    impl&lt;T: Clone&gt; Handler&lt;T&gt; for MyHandler&lt;T&gt; {\n        fn invoke(&amp;self) -&gt; Result&lt;(), std::io::Error&gt; { () }\n    }\n\n    let app = App { handlers: vec![ MyHandler{ tt: 0 }, MyHandler{ tt: 5 } ] };\n</code></pre>\n\n<p>That generates a compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `Handler` cannot be made into an object\n --&gt; src/main.rs:8:5\n  |\n8 |     handlers: Vec&lt;Box&lt;dyn Handler&lt;T&gt;&gt;&gt;,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Handler` cannot be made into an object\n  |\n  = note: the trait cannot require that `Self : Sized`\n</code></pre>\n\n<p>Even if I'm not trying to convert the trait into a concrete object.\nI don't understand: the box struct should allow me to store an unknown sized type.</p>\n\n<p>The aim is to store a <code>Vec</code> of <code>Handler</code> implementors in order to have <code>invoke</code> method for all object.</p>\n"}, {"tags": ["rust", "closures", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "is_accepted": false, "score": 2, "last_activity_date": 1567010466, "last_edit_date": 1567010466, "creation_date": 1566983597, "answer_id": 57688893, "question_id": 57686549, "link": "https://stackoverflow.com/questions/57686549/cannot-borrow-as-mutable-in-a-loop-when-calling-a-closure-that-borrows-as-immuta/57688893#57688893", "title": "Cannot borrow as mutable in a loop when calling a closure that borrows as immutable?", "body": "<p>It's not exactly sure what you're trying to accomplish, but one way to solve this, without changing your code too drastically, would be to use <code>std::cell::RefCell</code> (described <a href=\"https://doc.rust-lang.org/beta/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><strong>in the std</strong></a> and <a href=\"https://doc.rust-lang.org/book/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\"><strong>in the book</strong></a>):</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn test(){\n    let numbers = RefCell::new(vec![2]);\n    let f = || {\n        for _ in numbers.borrow().iter(){\n        }\n        false\n    };\n\n    while false {\n        let res = f();\n        if res {\n            numbers.borrow_mut().push(10);\n        }\n    }\n}\n</code></pre>\n\n<p>Here's a little bit tweaked demo, which actually does something:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    test();\n}\n\nfn test() {\n    let numbers = RefCell::new(vec![0]);\n    let f = || {\n        for n in numbers.borrow().iter() {\n            println!(\"In closure: {}\", n);\n        }\n        println!();\n        true\n    };\n\n    let mut i = 1;\n    while i &lt;= 3 {\n        let res = f();\n        if res {\n            numbers.borrow_mut().push(i);\n        }\n        i += 1;\n    }\n    println!(\"End of test(): {:?}\", numbers.borrow());\n}\n</code></pre>\n\n<blockquote>\n  <p>Output:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>In closure: 0\n\nIn closure: 0\nIn closure: 1\n\nIn closure: 0\nIn closure: 1\nIn closure: 2\n\nEnd of test(): [0, 1, 2, 3]\n</code></pre>\n</blockquote>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=adf28cc367ef5dfc7d9825aef9ad3a15\" rel=\"nofollow noreferrer\"><strong>Rust Playground demo</strong></a></p>\n"}, {"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566989152, "post_id": 57690260, "comment_id": 101825647, "body": "Why capturing borrowed content from outside is not working same as with passed argument ?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566989588, "post_id": 57690260, "comment_id": 101825869, "body": "@&#214;merErden That&#39;s a good question. So the normal implementation of closures is an anonymous struct that contains all captured variables in it (and if captured by reference, those are references). So we basically have a struct containing an immutable reference to <code>numbers</code>. I&#39;m not sure if environment could be automatically passed to the closure each time it is called. Not sure if that would be sound in all situations. Might be worth a proper SO question."}, {"owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "edited": false, "score": 0, "creation_date": 1566990961, "post_id": 57690260, "comment_id": 101826559, "body": "Very nice answer! +1 from me"}, {"owner": {"reputation": 83262, "user_id": 772649, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/03ad01df45fef92e267641197ad00e36?s=128&d=identicon&r=PG", "display_name": "HYRY", "link": "https://stackoverflow.com/users/772649/hyry"}, "edited": false, "score": 0, "creation_date": 1566991296, "post_id": 57690260, "comment_id": 101826727, "body": "Thank you, So the reason is that closures capture the variables when it is created, not when it&#39;s called."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1566987921, "creation_date": 1566987921, "answer_id": 57690260, "question_id": 57686549, "link": "https://stackoverflow.com/questions/57686549/cannot-borrow-as-mutable-in-a-loop-when-calling-a-closure-that-borrows-as-immuta/57690260#57690260", "title": "Cannot borrow as mutable in a loop when calling a closure that borrows as immutable?", "body": "<p>We can simplify your example even more by replacing the closure by a simple immutable reference</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut numbers = vec![2];\nlet r = &amp;numbers;\n\nwhile false {\n    println!(\"{:?}\", r);\n    numbers.push(10);\n}\n</code></pre>\n\n<p>Here we get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `numbers` as mutable because it is also borrowed as immutable\n --&gt; src/lib.rs:7:5\n  |\n3 | let r = &amp;numbers;\n  |         -------- immutable borrow occurs here\n...\n6 |     println!(\"{:?}\", r); // use reference\n  |                      - immutable borrow later used here\n7 |     numbers.push(10);\n  |     ^^^^^^^^^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>And like in your example, replacing the <code>while</code> with <code>if</code> makes the error go away. Why?</p>\n\n<p>You probably know about the important Rust rule: <strong>Aliasing nand mutability</strong>. It states that, at any given time, a value can either be borrowed immutably arbitrarily many times <em>or</em> mutably exactly once. </p>\n\n<p>The statement <code>numbers.push(10)</code> borrows <code>numbers</code> mutably temporarily (just for the statement). But we also have <code>r</code> which is an immutable reference. In order for <code>numbers.push(10)</code> to work, the compiler has to make sure that no other borrow exists at that time. But there exists the reference <code>r</code>! This reference cannot exist at the same time as <code>numbers.push(10)</code> exists.</p>\n\n<p>Let's see for the <code>if</code> case first:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut numbers = vec![2];\nlet r = &amp;numbers;            // &lt;------+      (creation of r)   \n                             //        |\nif false {                   //        |\n    println!(\"{:?}\", r);     // &lt;------+      (last use of r)\n    numbers.push(10);\n}\n</code></pre>\n\n<p>While the lexical scope means the variable <code>r</code> is only dropped at the end of the function, due to non-lexical lifetimes, the compiler can see that the last use of <code>r</code> is in the <code>println</code> line. Then the compiler can mark <code>r</code> as \"dead\" after this line. And this in turn means, that there is no other borrow in the line <code>numbers.push(10)</code> and everything works out fine.</p>\n\n<p>And for the loop case? Let's imagine the loop iterating three times:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut numbers = vec![2];\nlet r = &amp;numbers;            // &lt;------+      (creation of r)   \n                             //        |\n// First iteration           //        |\nprintln!(\"{:?}\", r);         //        |\nnumbers.push(10);            //        |  &lt;== oh oh!\n                             //        |\n// Second iteration          //        |\nprintln!(\"{:?}\", r);         //        |\nnumbers.push(10);            //        |\n                             //        |\n// Third iteration           //        |\nprintln!(\"{:?}\", r);         // &lt;------+     (last use of r)\nnumbers.push(10);\n</code></pre>\n\n<p>As can be seen here, the time in which <code>r</code> is active overlaps <code>numbers.push(10)</code> (except the last one). And as a result, the compiler will produce an error because this code violates the central Rust rule.</p>\n\n<p>And the explanation is the same for your closure case: the closure borrows <code>numbers</code> immutably and <code>f();</code> uses that closure. In the loop case, the compiler is not able to shrink the \"alive time\" of the closure enough to make sure it doesn't overlap the mutable borrow for <code>push</code>.</p>\n\n<hr>\n\n<p>How to fix?</p>\n\n<p>Well, you could pass <code>numbers</code> into the closure each time:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut numbers = vec![2];\nlet f = |numbers: &amp;[i32]| {\n    for _ in numbers.iter(){\n    }\n    false\n};\n\nwhile false {\n    let res = f(&amp;numbers);\n    if res {\n        numbers.push(10);\n    }\n}\n</code></pre>\n\n<p>This works because now, <code>numbers</code> is borrowed immutably also just temporarily for the <code>f(&amp;numbers);</code> statement. </p>\n\n<p>You can also use a <code>RefCell</code> as the other answer suggested, but that should be a last resort.</p>\n"}], "owner": {"reputation": 83262, "user_id": 772649, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/03ad01df45fef92e267641197ad00e36?s=128&d=identicon&r=PG", "display_name": "HYRY", "link": "https://stackoverflow.com/users/772649/hyry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 535, "favorite_count": 0, "accepted_answer_id": 57690260, "answer_count": 2, "score": 3, "last_activity_date": 1567010466, "creation_date": 1566975263, "last_edit_date": 1566992227, "question_id": 57686549, "link": "https://stackoverflow.com/questions/57686549/cannot-borrow-as-mutable-in-a-loop-when-calling-a-closure-that-borrows-as-immuta", "title": "Cannot borrow as mutable in a loop when calling a closure that borrows as immutable?", "body": "<p>Here is the code:</p>\n\n<pre><code>fn test(){\n    let mut numbers = vec![2];\n    let f = || {\n        for _ in numbers.iter(){\n        }\n        false\n    };\n\n    while false {\n        let res = f();\n        if res {\n            numbers.push(10);\n        }\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n15 |     let f = || {\n   |             -- immutable borrow occurs here\n16 |         for _ in numbers.iter(){\n   |                  ------- first borrow occurs due to use of `numbers` in closure\n...\n22 |         let res = f();\n   |                   - immutable borrow later used here\n23 |         if res {\n24 |             numbers.push(10);\n   |             ^^^^^^^^^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>But if I change the <code>while</code> keyword to <code>if</code>, it can be compiled. How to fix this? I want to call the anonymous function in a loop.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 6, "creation_date": 1566979494, "post_id": 57685567, "comment_id": 101820267, "body": "@SvenMarnach empty strings don&#39;t allocate, however <code>&quot;&quot;.to_string()</code> is probably not the best way to create one. I&#39;d go with <code>std::mem::replace(&amp;mut data[2], String::new())</code>, which is probably as good as its gets. If the vector allowed to moved out its elements, it would have to keep track of which one are still live to deallocate them and that could end-up being worse for performance."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566992103, "post_id": 57685567, "comment_id": 101827170, "body": "@mcarton You are right, my bad."}, {"owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1566995254, "post_id": 57685567, "comment_id": 101828999, "body": "As someone who is in the process of learning Rust, why would this be preferable over <code>data.remove(index)</code> is it that the indexes will shift as we remove data?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1567001514, "post_id": 57685567, "comment_id": 101832892, "body": "@evading it&#39;s not <i>just</i> that the indexes will shift (which is annoying) but also that each <code>remove</code> call has to move all the subsequent data in the vector. It&#39;s a performance issue (albeit most likely a tiny one)."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 5, "last_activity_date": 1567001779, "last_edit_date": 1567001779, "creation_date": 1566999647, "answer_id": 57693847, "question_id": 57685567, "link": "https://stackoverflow.com/questions/57685567/how-to-move-values-out-of-a-vector-when-the-vector-is-immediately-discarded/57693847#57693847", "title": "How to move values out of a vector when the vector is immediately discarded?", "body": "<p>I've been in this situation, and the cleanest solution I've found was to create an extension:</p>\n\n<pre><code>trait Extract: Default {\n    /// Replace self with default and returns the initial value.\n    fn extract(&amp;mut self) -&gt; Self;\n}\n\nimpl&lt;T: Default&gt; Extract for T {\n    fn extract(&amp;mut self) -&gt; Self {\n        std::mem::replace(self, T::default())\n    }\n}\n</code></pre>\n\n<p>And in your solution, you can replace the <code>std::mem::replace</code> with it:</p>\n\n<pre><code>const JSON: &amp;str = r#\"[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\"#;\n\nstruct A {\n    third: String,\n    first: String,\n    fifth: String,\n}\n\nfn main() {\n    let mut data: Vec&lt;String&gt; = serde_json::from_str(JSON).unwrap();\n    let _a = A {\n        third: data[2].extract(),\n        first: data[0].extract(),\n        fifth: data[4].extract(),\n    };\n}\n</code></pre>\n\n<p>That's basically the same code, but it is much more readable.</p>\n\n<hr>\n\n<p>If you like funny things, you can even write a macro:</p>\n\n<pre><code>macro_rules! vec_destruc {\n    { $v:expr =&gt; $( $n:ident : $i:expr; )+ } =&gt; {\n        let ( $( $n ),+ ) = {\n            let mut v = $v;\n            (\n                $( std::mem::replace(&amp;mut v[$i], Default::default()) ),+\n            )\n        };\n    }\n}\n\nconst JSON: &amp;str = r#\"[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\"#;\n\n#[derive(Debug)]\nstruct A {\n    third: String,\n    first: String,\n    fifth: String,\n}\n\nfn main() {\n    let data: Vec&lt;String&gt; = serde_json::from_str(JSON).unwrap();\n\n    vec_destruc! { data =&gt;\n        first: 0;\n        third: 2;\n        fifth: 4;\n    };\n    let a = A { first, third, fifth };\n\n    println!(\"{:?}\", a);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1567006816, "post_id": 57694504, "comment_id": 101836091, "body": "I like your solution, because with <code>Option::ok_or</code>, one can do a proper error handling."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1567006930, "post_id": 57694504, "comment_id": 101836158, "body": "@FrenchBoiethios certainly. I used <code>expect</code> because the original code also panicked if there weren&#39;t enough values."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1567047153, "post_id": 57694504, "comment_id": 101848201, "body": "This does not work for me because in reality I am receiving a json file with an array of thousands of strings and I have to extract select pieces for further processing. It is not feasible to order the elements nor is it feasible to have a thousand-tuple."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1567007158, "last_edit_date": 1567007158, "creation_date": 1567001810, "answer_id": 57694504, "question_id": 57685567, "link": "https://stackoverflow.com/questions/57685567/how-to-move-values-out-of-a-vector-when-the-vector-is-immediately-discarded/57694504#57694504", "title": "How to move values out of a vector when the vector is immediately discarded?", "body": "<p>In small cases like this (also seen in na\u00efve command line argument processing), I transfer ownership of the vector into an iterator and pop all the values off, keeping those I'm interested in:</p>\n\n<pre><code>fn main() {\n    let data: Vec&lt;String&gt; = serde_json::from_str(json).unwrap();\n    let mut data = data.into_iter().fuse();\n\n    let first = data.next().expect(\"Needed five elements, missing the first\");\n    let _ = data.next();\n    let third = data.next().expect(\"Needed five elements, missing the third\");\n    let _ = data.next();\n    let fifth = data.next().expect(\"Needed five elements, missing the fifth\");\n\n    let a = A {\n        third,\n        first,\n        fifth,\n    };\n}\n</code></pre>\n\n<p>I'd challenge the requirement to have a vector, however. Using a tuple is simpler and avoids much of the error handling needed, if you have exactly 5 elements:</p>\n\n<pre><code>fn main() {\n    let data: (String, String, String, String, String) = serde_json::from_str(json).unwrap();\n\n    let a = A {\n        third: data.2,\n        first: data.0,\n        fifth: data.4,\n    };\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/57529456/155423\">How can I ignore extra tuple items when deserializing with Serde? (&quot;trailing characters&quot; error)</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1567047204, "post_id": 57698577, "comment_id": 101848208, "body": "I like this! Thanks."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 1, "last_activity_date": 1567018709, "creation_date": 1567018709, "answer_id": 57698577, "question_id": 57685567, "link": "https://stackoverflow.com/questions/57685567/how-to-move-values-out-of-a-vector-when-the-vector-is-immediately-discarded/57698577#57698577", "title": "How to move values out of a vector when the vector is immediately discarded?", "body": "<p>Another option is to use a vector of <code>Option&lt;String&gt;</code>. This allows us to move the values out, while keeping track of what values have been moved, so they are not dropped with the vector.</p>\n\n<pre><code>let mut data: Vec&lt;Option&lt;String&gt;&gt; = serde_json::from_str(json).unwrap();\nlet a = A {\n    third: data[2].take().unwrap(),\n    first: data[0].take().unwrap(),\n    fifth: data[4].take().unwrap(),\n};\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 623, "favorite_count": 1, "accepted_answer_id": 57698577, "answer_count": 3, "score": 6, "last_activity_date": 1567018709, "creation_date": 1566970007, "last_edit_date": 1567001397, "question_id": 57685567, "link": "https://stackoverflow.com/questions/57685567/how-to-move-values-out-of-a-vector-when-the-vector-is-immediately-discarded", "title": "How to move values out of a vector when the vector is immediately discarded?", "body": "<p>I am receiving data in the form of a string vector, and need to populate a struct using a subset of the values, like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=353d1cf6df7a01ebe4be8148422d186a\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const json: &amp;str = r#\"[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\"#;\n\nstruct A {\n    third: String,\n    first: String,\n    fifth: String,\n}\n\nfn main() {\n    let data: Vec&lt;String&gt; = serde_json::from_str(json).unwrap();\n    let a = A {\n        third: data[2],\n        first: data[0],\n        fifth: data[4],\n    };\n}\n</code></pre>\n\n<p>This doesn't work because I'm moving values out of the vector. The compiler believes that this leaves <code>data</code> in an uninitialized state that can cause problems, but because I never use <code>data</code> again, it shouldn't matter. </p>\n\n<p>The conventional solution is <code>swap_remove</code>, but it is problematic because the elements are not accessed in reverse order (assuming the structure is populated top to bottom). </p>\n\n<p>I solve this now by doing a <code>mem::replace</code> and having <code>data</code> as <code>mut</code>, which clutters this otherwise clean code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut data: Vec&lt;String&gt; = serde_json::from_str(json).unwrap();\n    let a = A {\n        third: std::mem::replace(&amp;mut data[2], \"\".to_string()),\n        first: std::mem::replace(&amp;mut data[0], \"\".to_string()),\n        fifth: std::mem::replace(&amp;mut data[4], \"\".to_string())\n    };\n}\n</code></pre>\n\n<p>Is there an alternative to this solution that doesn't require me to have all these <code>replace</code> calls and <code>data</code> unnecessarily <code>mut</code>?</p>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 10595, "user_id": 325320, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/23bc4a16f6a4bac91accd76c8078cd35?s=128&d=identicon&r=PG", "display_name": "Mr.Wang from Next Door", "link": "https://stackoverflow.com/users/325320/mr-wang-from-next-door"}, "is_accepted": true, "score": 0, "last_activity_date": 1567037651, "creation_date": 1567037651, "answer_id": 57701438, "question_id": 57683515, "link": "https://stackoverflow.com/questions/57683515/how-to-execute-an-async-function-in-actix-web/57701438#57701438", "title": "How to execute an async function in actix-web?", "body": "<pre><code>let future01 = future03.unit_error().boxed_local().compat();\n</code></pre>\n\n<p><code>boxed_local()</code> wraps the future in a Box, pinning it.\nSimilar to <code>boxed()</code>, but without the Send requirement.</p>\n"}], "owner": {"reputation": 10595, "user_id": 325320, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/23bc4a16f6a4bac91accd76c8078cd35?s=128&d=identicon&r=PG", "display_name": "Mr.Wang from Next Door", "link": "https://stackoverflow.com/users/325320/mr-wang-from-next-door"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1393, "favorite_count": 1, "accepted_answer_id": 57701438, "answer_count": 1, "score": 4, "last_activity_date": 1567037651, "creation_date": 1566950832, "question_id": 57683515, "link": "https://stackoverflow.com/questions/57683515/how-to-execute-an-async-function-in-actix-web", "title": "How to execute an async function in actix-web?", "body": "<p>There is an <code>async</code> <code>connect()</code> function as below.</p>\n\n<pre><code>use actix_web::client::Client;\nuse futures::compat::Future01CompatExt;\nuse futures::future::{FutureExt, TryFutureExt};\n\npub async fn connect() {\n    let request = Client::default().get(\"https://www.google.com\").send();\n\n    // compat() converts a v0.1 futures::future::Future&lt;Item = T, Error = E&gt;\n    // into a std::future::Future&lt;Output = Result&lt;T, E&gt;&gt;.\n    let result = request.compat().await;\n\n    if let Err(e) = result {\n        println!(\"{:?}\", e);\n        return;\n    }\n    if let Ok(response) = result {\n        println!(\"{:?}\", response);\n        return;\n    }\n}\n</code></pre>\n\n<p>First I tried to execute <code>connect()</code> by <code>futures::executor::ThreadPool::run</code>. It would panic because <code>actix_web::client::Client</code> must be used in actix framework context.</p>\n\n<p><strong>How to execute connect() in actix context?</strong></p>\n\n<p>I tried code below as well. it does not compile.</p>\n\n<pre><code>let future03 = async {\n    connect().await;\n};\nlet future01 = future03.unit_error().boxed().compat();\nactix::Arbiter::spawn(future01);\n</code></pre>\n\n<p>It ends with an compiliation error.</p>\n\n<pre><code>error[E0277]: `(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:29:42\n   |\n29 |     let future01 = future03.unit_error().boxed().compat();\n   |                                          ^^^^^ `(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;`\n   = note: required because it appears within the type `futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;, futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;&gt;`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `{impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `{impl core::future::future::Future, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`\n\nerror[E0277]: `std::rc::Rc&lt;std::cell::RefCell&lt;actix_http::h1::payload::Inner&gt;&gt;` cannot be sent between threads safely\n  --&gt; src/main.rs:29:42\n   |\n29 |     let future01 = future03.unit_error().boxed().compat();\n   |                                          ^^^^^ `std::rc::Rc&lt;std::cell::RefCell&lt;actix_http::h1::payload::Inner&gt;&gt;` cannot be sent between threads safely\n   |\n   = help: within `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`, the trait `std::marker::Send` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;actix_http::h1::payload::Inner&gt;&gt;`\n   = note: required because it appears within the type `actix_http::h1::payload::Payload`\n   = note: required because it appears within the type `actix_http::payload::Payload&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;`\n   = note: required because it appears within the type `awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;`\n   = note: required because it appears within the type `std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `std::option::Option&lt;std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;&gt;`\n   = note: required because it appears within the type `futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;, futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;&gt;`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `{impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `{impl core::future::future::Future, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`\n\nerror[E0277]: `(dyn actix_http::error::ResponseError + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:29:42\n   |\n29 |     let future01 = future03.unit_error().boxed().compat();\n   |                                          ^^^^^ `(dyn actix_http::error::ResponseError + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn actix_http::error::ResponseError + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;(dyn actix_http::error::ResponseError + 'static)&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;(dyn actix_http::error::ResponseError + 'static)&gt;`\n   = note: required because it appears within the type `actix_http::error::Error`\n   = note: required because it appears within the type `actix_http::client::error::SendRequestError`\n   = note: required because it appears within the type `std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `std::option::Option&lt;std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;&gt;`\n   = note: required because it appears within the type `futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;, futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;&gt;`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `{impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `{impl core::future::future::Future, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`\n\nerror[E0277]: `(dyn futures::stream::Stream&lt;Error = actix_http::error::PayloadError, Item = bytes::bytes::Bytes&gt; + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:29:42\n   |\n29 |     let future01 = future03.unit_error().boxed().compat();\n   |                                          ^^^^^ `(dyn futures::stream::Stream&lt;Error = actix_http::error::PayloadError, Item = bytes::bytes::Bytes&gt; + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn futures::stream::Stream&lt;Error = actix_http::error::PayloadError, Item = bytes::bytes::Bytes&gt; + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;(dyn futures::stream::Stream&lt;Error = actix_http::error::PayloadError, Item = bytes::bytes::Bytes&gt; + 'static)&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;(dyn futures::stream::Stream&lt;Error = actix_http::error::PayloadError, Item = bytes::bytes::Bytes&gt; + 'static)&gt;`\n   = note: required because it appears within the type `actix_http::payload::Payload`\n   = note: required because it appears within the type `actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;`\n   = note: required because it appears within the type `actix_http::payload::Payload&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;`\n   = note: required because it appears within the type `awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;`\n   = note: required because it appears within the type `std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `std::option::Option&lt;std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;&gt;`\n   = note: required because it appears within the type `futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;, futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;&gt;`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `{impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `{impl core::future::future::Future, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`\n\nerror[E0277]: `(dyn std::any::Any + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:29:42\n   |\n29 |     let future01 = future03.unit_error().boxed().compat();\n   |                                          ^^^^^ `(dyn std::any::Any + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn std::any::Any + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;(dyn std::any::Any + 'static)&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;(dyn std::any::Any + 'static)&gt;`\n   = note: required because it appears within the type `(std::any::TypeId, std::boxed::Box&lt;(dyn std::any::Any + 'static)&gt;)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `hashbrown::raw::RawTable&lt;(std::any::TypeId, std::boxed::Box&lt;(dyn std::any::Any + 'static)&gt;)&gt;`\n   = note: required because it appears within the type `hashbrown::map::HashMap&lt;std::any::TypeId, std::boxed::Box&lt;(dyn std::any::Any + 'static)&gt;&gt;`\n   = note: required because it appears within the type `actix_http::extensions::Extensions`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::cell::RefCell&lt;actix_http::extensions::Extensions&gt;`\n   = note: required because it appears within the type `actix_http::message::ResponseHead`\n   = note: required because it appears within the type `awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;`\n   = note: required because it appears within the type `std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `std::option::Option&lt;std::result::Result&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;&gt;`\n   = note: required because it appears within the type `futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;`\n   = note: required because it appears within the type `futures::future::either::Either&lt;futures::future::result_::FutureResult&lt;awc::response::ClientResponse&lt;actix_http::encoding::decoder::Decoder&lt;actix_http::payload::Payload&gt;&gt;, actix_http::client::error::SendRequestError&gt;, futures::future::either::Either&lt;futures::future::map_err::MapErr&lt;tokio_timer::timeout::Timeout&lt;futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;, [closure@DefId(150:272 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[3])]&gt;, futures::future::map::Map&lt;std::boxed::Box&lt;(dyn futures::future::Future&lt;Item = awc::response::ClientResponse, Error = actix_http::client::error::SendRequestError&gt; + 'static)&gt;, [closure@DefId(150:269 ~ awc[6b54]::request[0]::{{impl}}[0]::send_body[0]::{{closure}}[1]) 0:bool]&gt;&gt;&gt;`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `impl futures::future::Future`\n   = note: required because it appears within the type `{impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:5:24: 20:2 {impl futures::future::Future, futures_util::compat::compat01as03::Compat01As03&lt;impl futures::future::Future&gt;, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `{impl core::future::future::Future, ()}`\n   = note: required because it appears within the type `[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:26:26: 28:6 {impl core::future::future::Future, ()}]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n   = note: required because it appears within the type `futures_util::future::unit_error::UnitError&lt;impl core::future::future::Future&gt;`\n\nerror: aborting due to 5 previous errors\n</code></pre>\n\n<p>I am still learning Rust. Please can anyone help? appreciated.</p>\n\n<p>Rust version : 1.39 nightly</p>\n\n<pre><code>[dependencies]\nactix = \"0.8.3\"\nactix-web = \"1.0.5\"\n\n# https://rust-lang-nursery.github.io/futures-rs/blog/2019/04/18/compatibility-layer.html\n# Rust\u2019s futures ecosystem is currently split in two: \n# On the one hand we have the vibrant ecosystem built around futures@0.1 with its many libraries working on stable Rust \n# and on the other hand there\u2019s std::future ecosystem with support for the ergonomic and powerful async/await language feature. \n# To bridge the gap between these two worlds we have introduced a compatibility layer as part of the futures@0.3 extension to std::future. \n[dependencies.futures-preview]\nversion = \"0.3.0-alpha.18\"\ndefault-features = false\nfeatures = [\"compat\", \"async-await\", \"nightly\"]\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 1, "creation_date": 1566942697, "post_id": 57682632, "comment_id": 101811758, "body": "Alright! So if I get it right, when I develope &quot;regular&quot; multithreaded applications normally I never have to implement the Sync trait myself and instead just use std and appropriate crates."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 0, "creation_date": 1566942782, "post_id": 57682632, "comment_id": 101811781, "body": "@phip1611 No. If you are developing primitives that require extensive parts of their functionality to be <code>unsafe</code> to guarantee something (as is the case of <code>AtomicCell</code> for <code>crossbeam</code>, which is a great example of this), you will sometimes have the possibility to do so. It comes with the caveat of <i>having to prove</i> and <b>be certain</b> that your entity is actually <code>Send</code> (or <code>Sync</code>)."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1566942857, "post_id": 57682632, "comment_id": 101811801, "body": "The <code>unsafe impl</code> really gives off the idea well - these implementations of marker traits are left purely for cases where the compiler (and/or borrow checker) cannot infer that your types are <code>Send</code> or <code>Sync</code> even though you know they are."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 3, "creation_date": 1566942893, "post_id": 57682632, "comment_id": 101811814, "body": "@S&#233;bastienRenauld I think the key point in the comment was &quot;application&quot;. Most &quot;applications&quot; won&#39;t need to manually implement something like that. If you&#39;re building concurrency primitives that&#39;s different obviously."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 5, "last_activity_date": 1566942390, "creation_date": 1566942390, "answer_id": 57682632, "question_id": 57682580, "link": "https://stackoverflow.com/questions/57682580/are-there-valid-implementations-of-the-sync-trait-apart-from-the-rust-standard-l/57682632#57682632", "title": "Are there valid implementations of the Sync trait apart from the Rust standard library?", "body": "<p>Yes, <a href=\"https://github.com/crossbeam-rs/crossbeam\" rel=\"noreferrer\"><code>crossbeam</code></a>, a crate which provides \"tools for concurrent programming in Rust\", for example has an <a href=\"https://github.com/crossbeam-rs/crossbeam/blob/7e2e2a67e8231c93a2dcaf95a15406babae31ccf/crossbeam-utils/src/atomic/atomic_cell.rs#L38\" rel=\"noreferrer\"><code>unsafe impl Sync for AtomicCell</code></a>.</p>\n"}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 57682632, "answer_count": 1, "score": 2, "last_activity_date": 1567022839, "creation_date": 1566942019, "last_edit_date": 1567022839, "question_id": 57682580, "link": "https://stackoverflow.com/questions/57682580/are-there-valid-implementations-of-the-sync-trait-apart-from-the-rust-standard-l", "title": "Are there valid implementations of the Sync trait apart from the Rust standard library?", "body": "<p><code>Sync</code> and <code>Send</code> are part of the language. <code>Arc</code> and <code>Mutex</code> are part of the standard library and both implement <code>Send</code> and <code>Sync</code>. Are there structures  apart from the standard library (<code>std::sync</code>) (e.g in some crates) that do something like <code>unsafe impl Sync for SomeStruct {}</code> for valid reasons? In my humble understanding no developer will ever need implementations of <code>Sync</code> except the ones developing the standard library.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 2, "creation_date": 1566940759, "post_id": 57682358, "comment_id": 101811199, "body": "Rust has a pretty good <a href=\"https://doc.rust-lang.org/1.5.0/book/choosing-your-guarantees.html\" rel=\"nofollow noreferrer\">primer</a> on this, allowing you to choose exactly what your guarantees are and what overhead will be incurred as a result."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 2, "creation_date": 1566940978, "post_id": 57682358, "comment_id": 101811281, "body": "For example, in certain scenarios, you may want to use <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> rather than <code>Arc&lt;Mutex&lt;T&gt;&gt;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1566959922, "creation_date": 1566959922, "answer_id": 57684369, "question_id": 57682358, "link": "https://stackoverflow.com/questions/57682358/in-which-cases-is-arcmutext-not-the-best-way-for-sharing-data-across-threads/57684369#57684369", "title": "In which cases is Arc&lt;Mutex&lt;T&gt;&gt; not the best way for sharing data across threads in Rust?", "body": "<h2>Sharing across threads</h2>\n\n<p>Besides, <code>Arc&lt;T&gt;</code>, we can share objects across threads using scoped threads, e.g. by using <a href=\"https://docs.rs/crossbeam/0.7.2/crossbeam/fn.scope.html\" rel=\"noreferrer\"><code>crossbeam::scope</code></a> and <a href=\"https://docs.rs/crossbeam/0.7.2/crossbeam/thread/struct.Scope.html#method.spawn\" rel=\"noreferrer\"><code>Scope::spawn</code></a>. Scoped threads allow us to send borrowed pointers (<code>&amp;'a T</code>) to threads spawned in a scope. The scope guarantees that the thread will terminate before the referent is dropped. Borrowed pointers have no runtime overhead compared to <code>Arc&lt;T&gt;</code> (<code>Arc&lt;T&gt;</code> takes a bit more memory and needs to maintain a reference counter using atomic instructions).</p>\n\n<h2>Mutating across threads</h2>\n\n<p><code>Mutex&lt;T&gt;</code> is the most basic general-purpose wrapper for ensuring at most one thread may mutate a value at any given time. <code>Mutex&lt;T&gt;</code> has one drawback: if there are many threads that only want to <em>read</em> the value in the mutex, they can't do so concurrently, even though it would be safe. <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.RwLock.html\" rel=\"noreferrer\"><code>RwLock&lt;T&gt;</code></a> solves this by allowing multiple concurrent readers (while still ensuring a writer has exclusive access).</p>\n\n<p>Atomic types such as <a href=\"https://doc.rust-lang.org/stable/std/sync/atomic/struct.AtomicUsize.html\" rel=\"noreferrer\"><code>AtomicUsize</code></a> also allow mutation across threads, but only for small values (8, 16, 32 or 64 bits \u00ad\u2013 some processors support atomic operations on 128-bit values, but that's not exposed in the standard library yet; see <a href=\"https://docs.rs/atomic/0.4.5/atomic/struct.Atomic.html\" rel=\"noreferrer\"><code>atomic::Atomic</code></a> for that). For example, instead of <code>Arc&lt;Mutex&lt;usize&gt;&gt;</code>, you could use <code>Arc&lt;AtomicUsize&gt;</code>. Atomic types do not require locking, but they are manipulated through atomic machine instructions. The set of atomic instructions is a bit different from the set of non-atomic instructions, so switching from a non-atomic type to an atomic type might not always be a \"drop-in replacement\".</p>\n"}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 488, "favorite_count": 1, "accepted_answer_id": 57684369, "answer_count": 1, "score": 5, "last_activity_date": 1567022919, "creation_date": 1566940528, "last_edit_date": 1567022919, "question_id": 57682358, "link": "https://stackoverflow.com/questions/57682358/in-which-cases-is-arcmutext-not-the-best-way-for-sharing-data-across-threads", "title": "In which cases is Arc&lt;Mutex&lt;T&gt;&gt; not the best way for sharing data across threads in Rust?", "body": "<p>From what I've learned, I should always choose <code>Arc&lt;T&gt;</code> for shared read access across threads and <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> for shared write access across threads. Are there cases where I don't want to use <code>Arc&lt;T&gt;</code>/<code>Arc&lt;Mutex&lt;T&gt;&gt;</code> and instead do something completely different? E.g. do something like this:</p>\n\n<pre><code>unsafe impl Sync for MyStruct {}\nunsafe impl Send for MyStruct {}\n\nlet shared_data_for_writing = Arc::from(MyStruct::new());\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 0, "creation_date": 1566940855, "post_id": 57682282, "comment_id": 101811241, "body": "I guess you could try that yourself and see if the assembly differs?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 3, "creation_date": 1566941357, "post_id": 57682282, "comment_id": 101811391, "body": "&quot;Will the compiler implement some Mutex-like magic?&quot; No. <code>Send</code> and <code>Sync</code> are &quot;marker traits&quot;. By implementing these types, you promise the compiler that your types fulfil the contract for those traits. You have to <code>unsafe impl</code> these traits because the compiler can&#39;t check you&#39;re doing it correctly."}, {"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 0, "creation_date": 1566941525, "post_id": 57682282, "comment_id": 101811443, "body": "Thanks a lot. My understanding of Sync and Send traits got a lot better."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566976064, "post_id": 57682282, "comment_id": 101818689, "body": "Note that in cases where the compiler can check that you&#39;re doing it correctly, then you don&#39;t need to because &quot;<a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><i>This trait is automatically implemented when the compiler determines it&#39;s appropriate.</i></a>&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 0, "creation_date": 1566993101, "post_id": 57684191, "comment_id": 101827750, "body": "<i>&quot;<code>Sync</code> is a language item, but <code>Send</code> isn&#39;t&quot;</i> I don&#39;t understand this. Can you further explain this please? <i>The Rust Programming Language</i>-book says: <i>&quot;two concurrency concepts are embedded in the language: <code>Sync</code> and <code>Send</code>&quot;</i> As far as I understand &quot;the language&quot; and the <code>core</code>-Birary are the same thing? <a href=\"https://doc.rust-lang.org/book/ch16-04-extensible-concurrency-sync-and-send.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 1, "creation_date": 1567122463, "post_id": 57684191, "comment_id": 101879414, "body": "The <code>core</code> library is distributed with Rust and is an underlying building block of the <code>std</code> library. Almost every Rust program or library will use <code>core</code> (either directly or through <code>std</code>), so it might as well be considered part of the language; Rust wouldn&#39;t be the same without <code>Send</code> and <code>Sync</code>. Perhaps the person who wrote this part of the book didn&#39;t realize that <code>Send</code> and <code>Sync</code> aren&#39;t so deeply integrated into the compiler anymore, or it was written back when they were."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1566958002, "creation_date": 1566958002, "answer_id": 57684191, "question_id": 57682282, "link": "https://stackoverflow.com/questions/57682282/does-implementing-the-sync-trait-change-the-compiler-output/57684191#57684191", "title": "Does implementing the Sync trait change the compiler output?", "body": "<p>The compiler uses a mechanism named \"language items\" to reference items (types, traits, etc.) that are defined in a library (usually <code>core</code>) but are used by the compiler, whether that be in code generated by the compiler, for validating the code or for producing specialized error messages.</p>\n\n<p><code>Send</code> and <code>Sync</code> are defined in the <code>core</code> library. <code>Sync</code> is a language item, but <code>Send</code> isn't. The only reference to <code>Sync</code> I could find in the compiler is where it checks that the type of a <code>static</code> variable implements <code>Sync</code>. (<code>Send</code> and <code>Sync</code> used to be more special to the compiler. Before auto traits were added to the language, they were implemented as \"auto traits\" explicitly.)</p>\n\n<p>Other than that, the compiler doesn't care about what <code>Send</code> and <code>Sync</code> mean. It's the libraries (specifically, types/functions that are generic over <code>Send</code>/<code>Sync</code> types) that give the traits their meaning.</p>\n\n<p>Neither trait influences what code is emitted by the compiler regarding a particular type. Making a type \"thread-safe\" is not something that can be done automatically. Consider a struct with many fields: even if the fields are all atomic types, a partially updated struct might not be in a valid state. The compiler doesn't know about the invariants of a particular type; only the programmer knows them. Therefore, it's the programmer's responsibility to make the type thread-safe.</p>\n"}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 57684191, "answer_count": 1, "score": 2, "last_activity_date": 1567022955, "creation_date": 1566940024, "last_edit_date": 1567022955, "question_id": 57682282, "link": "https://stackoverflow.com/questions/57682282/does-implementing-the-sync-trait-change-the-compiler-output", "title": "Does implementing the Sync trait change the compiler output?", "body": "<p>If I mark my struct as <code>Sync</code> will the compiler output differ? Will the compiler implement some <code>Mutex</code>-like magic?</p>\n\n<pre><code>struct MyStruct {\n    data: RefCell&lt;u32&gt;,\n}\nunsafe impl Sync for MyStruct {}\nunsafe impl Send for MyStruct {}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 2, "last_activity_date": 1567045991, "creation_date": 1567045991, "answer_id": 57702219, "question_id": 57682255, "link": "https://stackoverflow.com/questions/57682255/using-different-lifetimes-in-struct-implementations/57702219#57702219", "title": "Using different lifetimes in struct implementations", "body": "<p>These two methods end up being exactly the same, but it's worth learning why. Along the way, we'll learn about lifetime coercion</p>\n\n<p>One lifetime can be coerced into another lifetime if that second lifetime is shorter than (or rather, is contained by) the first. This is usually notated <code>'a: 'b</code>, to mean that the lifetime <code>'a</code> entirely encloses the lifetime <code>'b</code>. The usual terminology is that <code>'a</code> outlives <code>'b</code>. The reasoning for this coercion is that you can always make a lifetime shorter if you need to. If a reference is valid during some lifetime, then it's also valid during any shorter lifetime contained in the longer lifetime.</p>\n\n<p>So with that in mind, what sort of arguments can <code>new1</code> and <code>new2</code> take? We have a fixed lifetime <code>'a</code> since the whole implementation is generic in that lifetime. However, <code>new1</code> can not only take <code>&amp;'a u8</code>, but any <code>&amp;'b u8</code> if <code>'b</code> can be coerced to <code>'a</code>. That is, <code>'b: 'a</code> and <code>'b</code> is longer than <code>'a</code>.</p>\n\n<p><code>new2</code> is slightly different, but it ends up having the same effect. The method is generic in the lifetime <code>'b</code> and can take any <code>&amp;'c u8</code> if <code>'c: 'b</code>. <code>new2</code> is still technically generic in <code>'a</code>, but since it doesn't use <code>'a</code> at all, it can be ignored. That said, ignoring a generic parameter is confusing (why have the parameter at all?), so it would probably be best to use <code>new1</code> instead.</p>\n\n<p>Another reason to prefer <code>new1</code> over <code>new2</code> is that it fits better with <code>Self</code>. If we try to change the outputs to <code>Self</code></p>\n\n<pre><code>impl&lt;'a&gt; Name&lt;'a&gt; {\n    fn new1(arg: &amp;'a u8) -&gt; Self {\n        Name { arg }\n    }\n    fn new2&lt;'b&gt;(arg: &amp;'b u8) -&gt; Self {\n        Name { arg }\n    }\n}\n</code></pre>\n\n<p>the compiler complains. Why? Now the outputs have to be <code>Name&lt;'a&gt;</code> and in <code>new2</code>, we're returning <code>Name&lt;'b&gt;</code>. This isn't coercible to <code>Name&lt;'a&gt;</code> unless <code>'b: 'a</code>, so we have to add that as a bound on <code>'b</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Name&lt;'a&gt; {\n    fn new1(arg: &amp;'a u8) -&gt; Self {\n        Name { arg }\n    }\n    fn new2&lt;'b: 'a&gt;(arg: &amp;'b u8) -&gt; Self {\n        Name { arg }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1ffec9ffff9fd375acb94bb4078040d6\" rel=\"nofollow noreferrer\">(playground link)</a></p>\n\n<p>In this case, it's pretty clear that <code>new1</code> is superior since it doesn't even need that second lifetime, but still allows exactly the same inputs.</p>\n"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1567045991, "creation_date": 1566939881, "last_edit_date": 1566979380, "question_id": 57682255, "link": "https://stackoverflow.com/questions/57682255/using-different-lifetimes-in-struct-implementations", "title": "Using different lifetimes in struct implementations", "body": "<p>I am trying to get a better understanding of Rust lifetimes.</p>\n\n<pre><code>struct Name&lt;'a&gt; {\n    arg: &amp;'a u8,\n}\nimpl&lt;'a&gt; Name&lt;'a&gt; {\n    fn new1(arg: &amp;'a u8) -&gt; Name&lt;'a&gt; {\n        Name { arg }\n    }\n    fn new2&lt;'b&gt;(arg: &amp;'b u8) -&gt; Name&lt;'b&gt; {\n        Name { arg }\n    }\n}\n</code></pre>\n\n<p>Is there any difference between functions <code>new1</code> and <code>new2</code>? I am assuming it would matter if <code>arg</code> was <code>&amp;self</code>? Is there any case where <code>new2</code> implementation preferred or the other way?</p>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 1, "creation_date": 1566935368, "post_id": 57681018, "comment_id": 101809310, "body": "Please include the imports so we know exactly where each function is coming from. <code>nom</code> has multiple functions named <code>take_while</code>, and I can&#39;t find <code>is_alphanumeric</code> in the doc."}, {"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "reply_to_user": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1566967820, "post_id": 57681018, "comment_id": 101816006, "body": "I&#39;ve added the imports now."}], "answers": [{"comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1566936106, "post_id": 57681461, "comment_id": 101809592, "body": "Don&#39;t cast a <code>char</code> to an <code>u8</code>, it will overflow if it&#39;s a codepoint greater than 255. eg: <code>println!(&quot;{}&quot;, &#39;\u1361&#39; as u8 as char);</code> prints <code>a</code>"}, {"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 1, "creation_date": 1566972955, "post_id": 57681461, "comment_id": 101817441, "body": "I tried <code>take_while(char::is_alphanumeric)</code> which gives the same result as your closure suggestion. Thanks a lot!"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1566973102, "last_edit_date": 1566973102, "creation_date": 1566935907, "answer_id": 57681461, "question_id": 57681018, "link": "https://stackoverflow.com/questions/57681018/catch-string-between-tags-with-nom-delimited/57681461#57681461", "title": "Catch string between tags with nom delimited", "body": "<p>The <code>is_alphanumeric</code> from <code>nom</code> expects a parameter of type <code>u8</code>, but you give it a <code>char</code>. Use <code>is_alphanumeric</code> from <code>std</code> instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn root&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;str, E&gt; {\n    delimited(\n        tag_no_case(\"START;\"),\n        take_while(char::is_alphanumeric),\n        tag_no_case(\"END;\"),\n    )(i)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 0, "last_activity_date": 1566936376, "last_edit_date": 1566936376, "creation_date": 1566935907, "answer_id": 57681462, "question_id": 57681018, "link": "https://stackoverflow.com/questions/57681018/catch-string-between-tags-with-nom-delimited/57681462#57681462", "title": "Catch string between tags with nom delimited", "body": "<p>I don't have all the info needed (exact type of <code>take_while</code> and <code>is_alphanumeric</code>), so I'll try to approximate one.</p>\n\n<hr>\n\n<p>As you want <code>take_while(F)(i)</code> to returns <code>&amp;str</code> (ie. almost <code>&amp;[char]</code>), then <code>take_while(F)</code> must have type <code>impl Fn(&amp;[char]) -&gt; IResult&lt;&amp;[char], &amp;[char], Error&gt;</code>.</p>\n\n<p>However, <code>take_while</code> takes an argument of type <code>Fn(&lt;Input as InputTakeAtPosition&gt;::Item) -&gt; bool</code>, and returns <code>impl Fn(Input) -&gt; IResult&lt;Input, Input, Error&gt;</code>.</p>\n\n<p>So, this means <code>F</code> the argument to <code>take_while</code> must have type <code>Fn(&amp;[char]) -&gt; IResult&lt;&amp;[char], &amp;[char], Error&gt;</code></p>\n\n<p>Does your <code>is_alphanumeric</code> have this type, or is it <code>Fn(&amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8], Error&gt;</code>?</p>\n\n<hr>\n\n<p>Or it could be the opposite, you may have a <code>take_while</code> that works on <code>&amp;[u8]</code>, which doesn't work with your function that takes and returns <code>&amp;str</code> (which, again, is mostly a <code>&amp;[char]</code>, and absolutely not a <code>&amp;[u8]</code>)</p>\n"}], "owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 316, "favorite_count": 0, "accepted_answer_id": 57681461, "answer_count": 2, "score": 1, "last_activity_date": 1566973102, "creation_date": 1566933672, "last_edit_date": 1566967790, "question_id": 57681018, "link": "https://stackoverflow.com/questions/57681018/catch-string-between-tags-with-nom-delimited", "title": "Catch string between tags with nom delimited", "body": "<p>I'm trying to learn to use nom (5.0.1) and want to get the string between two tags:</p>\n\n<pre><code>use nom::{\n    bytes::complete::{tag_no_case, take_while},\n    character::{is_alphanumeric},\n    error::{ParseError},\n    sequence::{delimited},\n    IResult,\n};\n\nfn root&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;str, E&gt; {\n    delimited(\n        tag_no_case(\"START;\"),\n        take_while(is_alphanumeric),\n        tag_no_case(\"END;\"),\n    )(i)\n}\n</code></pre>\n\n<p>But this gives me the error</p>\n\n<pre><code>error[E0271]: type mismatch resolving `&lt;&amp;str as nom::InputTakeAtPosition&gt;::Item == u8`\n   --&gt; src/main.rs:128:9\n    |\n128 |         take_while(is_alphanumeric),\n    |         ^^^^^^^^^^^ expected char, found u8\n</code></pre>\n\n<p>What have I done wrong here? I'm fairly new to Rust and a total beginner with nom so I'm expecting it to be something really obvious in the end :)</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566928529, "post_id": 57679710, "comment_id": 101806662, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57679710/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566928611, "post_id": 57679710, "comment_id": 101806685, "body": "Concretely, there&#39;s an undefined type / trait <code>Serialize</code>; we don&#39;t know what version of the crate you are using (there&#39;s no released 0.3 version yet), and it&#39;s <b>vitally important</b> to include the version of nightly Rust compilers. There&#39;s also unneeded code in the example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566928784, "post_id": 57679710, "comment_id": 101806757, "body": "This feels effectively like a duplicate of <a href=\"https://stackoverflow.com/q/32981382/155423\">Thread references require static lifetime?</a>; <a href=\"https://stackoverflow.com/q/28654978/155423\">Lifetime troubles sharing references between threads</a>; <a href=\"https://stackoverflow.com/q/30562443/155423\">How do I use static lifetimes with threads?</a>; <a href=\"https://stackoverflow.com/q/52437174/155423\">How can I send non-static data to a thread in Rust and is it needed in this example?</a>, etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566929098, "post_id": 57679710, "comment_id": 101806878, "body": "Your error message refers to code that isn&#39;t present in your question: <code>channel.clone()</code>. Please ensure that the code you provide generates the error you are asking about."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566929477, "post_id": 57679710, "comment_id": 101807035, "body": "An example of <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=482b87581267ca66b4778281e0c54cc4\" rel=\"nofollow noreferrer\">one possible reduction</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1566938155, "creation_date": 1566938155, "answer_id": 57681913, "question_id": 57679710, "link": "https://stackoverflow.com/questions/57679710/what-missing-functionality-and-traits-do-i-need-spawn-ok-with-a-clonable-object/57681913#57681913", "title": "What missing functionality and traits do I need Spawn_ok with a clonable object?", "body": "<p>After playing around with it and specifically reading <a href=\"https://stackoverflow.com/q/52437174/155423\"> How can I send non-static data to a thread in Rust and is it needed in this example?</a>, I realised that you can keep the interface the same and shield it from users if you 1) move the value into the async future and 2) wrap the values in an Arc and using the values from behind the reference counted wrapper</p>\n\n<pre><code>fn push&lt;T: 'static&gt;(&amp;mut self, channel: usize, msg: T)\nwhere\n    T: Send + Sync + Clone + Serialize,\n{\n    let threadpool = ThreadPool::new().unwrap();\n    let future = async move {\n        let msg = Arc::from(msg);\n        let channel = Arc::from(channel);\n        move || to_packets(*channel, msg).iter().for_each(|_| {});\n    };\n    threadpool.spawn_ok(future);\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 109, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566938250, "creation_date": 1566927346, "last_edit_date": 1566938250, "question_id": 57679710, "link": "https://stackoverflow.com/questions/57679710/what-missing-functionality-and-traits-do-i-need-spawn-ok-with-a-clonable-object", "title": "What missing functionality and traits do I need Spawn_ok with a clonable object?", "body": "<p>I'm experimenting with futures 0.3 for the first time, and getting trait or lifetime issues.</p>\n\n<pre><code>use futures::executor::ThreadPool;\nuse futures::future::*;\nuse futures::StreamExt;\n\nconst BUFSIZE: usize = 140;\n\n#[derive(Clone)]\nstruct Packet {\n    channel: usize,\n    seq: usize,\n    total: usize,\n    buffer: [u8; BUFSIZE],\n}\n\nfn to_packets&lt;T&gt;(channel: usize, msg: T) -&gt; Vec&lt;Packet&gt; {\n    // Trivial implemmentation\n    vec![Packet {\n        channel: 0,\n        seq: 0,\n        total: 0,\n        buffer: [0u8; BUFSIZE],\n    }]\n}\n\npub struct SMConnection;\n\nimpl SMConnection {\n    fn push&lt;T: 'static&gt;(&amp;mut self, channel: &amp;'static usize, msg: T)\n    where\n        T: Send + Sync + Clone + Serialize,\n    {\n        let threadpool = ThreadPool::new().unwrap();\n\n        let future = async {\n            move || {\n                to_packets(*channel, msg)\n                    .iter()\n                    .for_each(|_packet| { /* do something */ })\n            };\n        };\n        threadpool.spawn_ok(future);\n    }\n}\n</code></pre>\n\n<p>This errors with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `channel` does not live long enough\n  --&gt; src\\network.rs:82:27\n   |\n81 |            let future = async {\n   |   ______________________-_____-\n   |  |______________________|\n   | ||\n82 | ||             let channel = channel.clone();\n   | ||                           ^^^^^^^ borrowed value does not live long enough\n83 | ||             move || to_packets(channel, msg).iter().for_each(|_| {  });\n84 | ||         };\n   | ||         -\n   | ||_________|\n   | |__________value captured here by generator\n   |            argument requires that `channel` is borrowed for `'static`\n85 |            threadpool.spawn_ok(future);\n86 |        }\n   |        - `channel` dropped here while still borrowed\n</code></pre>\n\n<p>I'm passing <code>channel</code> and <code>msg</code> by value so I would not expect there to be a lifetime issue. Following the compiler advice to give <code>'static</code> bounds to the arguments still leaves me stuck.</p>\n\n<p>I've tried combinations of <code>clone</code> and <code>Arc</code></p>\n\n<p>What have I missed here?</p>\n\n<p><strong>EDIT</strong> For reference: Cargo.toml</p>\n\n<pre><code>[dependencies]\nserde=\"^1\"\nserde_derive=\"^1\"\nbincode = \"1.1.4\"\nromio = \"0.3.0-alpha.9\"\nfutures-preview = { version = \"=0.3.0-alpha.18\", features = [\"async-await\", \"nightly\"] }\n</code></pre>\n\n<p>Compiler: <strong>rustc 1.39.0-nightly (9b91b9c10 2019-08-26)</strong></p>\n"}, {"tags": ["vector", "rust", "iterator"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566928003, "post_id": 57679497, "comment_id": 101806424, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/48841367/155423\">How do I perform iterator computations over iterators of Results without collecting to a temporary vector?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57679497/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566928034, "post_id": 57679497, "comment_id": 101806442, "body": "The duplicate applied to your case: <code>itertools::process_results(sources.iter().copied().map(f), |i| i.flatten().collect())</code>"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 106, "favorite_count": 0, "closed_date": 1579698308, "answer_count": 0, "score": 1, "last_activity_date": 1566927243, "creation_date": 1566926232, "last_edit_date": 1566927243, "question_id": 57679497, "link": "https://stackoverflow.com/questions/57679497/how-to-have-an-iterator-that-returns-resultvecvecu32-instead-return-a-flat", "closed_reason": "Duplicate", "title": "How to have an iterator that returns Result&lt;Vec&lt;Vec&lt;u32&gt;&gt;&gt; instead return a flattened Result&lt;Vec&lt;u32&gt;&gt;?", "body": "<p>I am trying to collect data into <code>Result&lt;Vec_&gt;&gt;</code> from data that has nested vectors. Consider the following <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=39f375612db84e9e99cf71d36e735f44\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Result&lt;T&gt; = std::result::Result&lt;T, String&gt;;\n\nfn f(x: u32) -&gt; Result&lt;Vec&lt;u32&gt;&gt; {\n    Ok(vec![x, x, x])\n}\n\nfn main() {\n    let sources = [1, 2, 3];\n    let out1: Vec&lt;Result&lt;Vec&lt;u32&gt;&gt;&gt; = sources.iter().map(|x| f(*x)).collect();\n    let out2: Result&lt;Vec&lt;Vec&lt;u32&gt;&gt;&gt; = sources.iter().map(|x| f(*x)).collect();\n    // let out3: Result&lt;Vec&lt;u32&gt;&gt; = sources.iter().map(|x| f(*x)).collect();\n}\n</code></pre>\n\n<p>Both <code>out1</code> and <code>out2</code> compile correctly, but what I would really like to get is a variation of <code>out2</code> where the two nested vectors are flattened into one. If I try to use <code>out3</code>, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;u32&gt;` cannot be built from an iterator over elements of type `std::vec::Vec&lt;u32&gt;`\n  --&gt; src/main.rs:11:64\n   |\n11 |     let out3: Result&lt;Vec&lt;u32&gt;&gt; = sources.iter().map(|x| f(*x)).collect();\n   |                                                                ^^^^^^^ a collection of type `std::vec::Vec&lt;u32&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::vec::Vec&lt;u32&gt;&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::vec::Vec&lt;u32&gt;&gt;` is not implemented for `std::vec::Vec&lt;u32&gt;`\n   = note: required because of the requirements on the impl of `std::iter::FromIterator&lt;std::result::Result&lt;std::vec::Vec&lt;u32&gt;, std::string::String&gt;&gt;` for `std::result::Result&lt;std::vec::Vec&lt;u32&gt;, std::string::String&gt;`\n</code></pre>\n\n<p>How do I get to the flattened <code>Result&lt;Vec&lt;_&gt;&gt;</code> without building intermediate structures?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566919428, "post_id": 57677864, "comment_id": 101802647, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/51118023/155423\">What does \u201cborrowed data cannot be stored outside of its closure\u201d mean?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57677864/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1566919850, "post_id": 57677864, "comment_id": 101802885, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51118023/what-does-borrowed-data-cannot-be-stored-outside-of-its-closure-mean\">What does &quot;borrowed data cannot be stored outside of its closure&quot; mean?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566923585, "post_id": 57677864, "comment_id": 101804613, "body": "Why do you have <code>(&amp;&#39;a mut self)</code> instead of <code>(&amp;mut self)</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566923641, "post_id": 57677864, "comment_id": 101804653, "body": "Duplicate may need to be combined with <a href=\"https://stackoverflow.com/q/45833618/155423\">What is the difference between &#39;&amp;self&#39; and &#39;&amp;&#39;a self&#39;?</a>."}, {"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566938486, "post_id": 57677864, "comment_id": 101810486, "body": "@Shepmaster by having <code>(&amp;&#39;a mut self)</code> i was trying to say that the <code>self</code> would only live for <code>World&lt;&#39;a&gt;</code> lifetime. As the example you shared itseems that can constrain the lifetime if the struct is Contravariant. Should we always prefer a new lifetime <code>b</code> for all methods? What would be an example where only the same lifetime <code>a</code> make sense in method defenition?"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 269, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1566927926, "creation_date": 1566919174, "last_edit_date": 1566923486, "question_id": 57677864, "link": "https://stackoverflow.com/questions/57677864/borrowed-data-cannot-be-stored-outside-of-its-closure", "title": "borrowed data cannot be stored outside of its closure", "body": "<p>I have a <code>World</code> struct which contains a vector storing closures which capture references to the <code>canvas</code> attribute from <code>World</code>. I feel I have made all the lifetime notations that has to be given. but it throws an error which I am unable to understand.</p>\n\n<p>I have shortened the example I have been working on:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse wasm_bindgen::prelude::*;\nuse wasm_bindgen::JsCast;\nstruct Canvas {}\nstruct World&lt;'a&gt; {\n    animations: Vec&lt;AnimateClosure&lt;'a&gt;&gt;,\n    canvas: Canvas,\n}\nimpl&lt;'a&gt; World&lt;'a&gt; {\n    fn new(arg: &amp;str) -&gt; World {\n        World {\n            canvas: Canvas {},\n            animations: vec![],\n        }\n    }\n    fn check_collision(&amp;'a mut self) {\n        self.animation_cycle();\n    }\n    fn animation_cycle(&amp;'a mut self) {\n        let canvas = &amp;self.canvas;\n        let width = 10.0;\n        let height = 10.0;\n        let closure = move |x: f64| {\n            let new = canvas;\n        };\n        let animation = AnimateClosure::new(10, Box::new(closure) as Box&lt;dyn Fn(f64)&gt;);\n        self.animations.push(animation);\n    }\n}\npub struct AnimateClosure&lt;'a&gt; {\n    closure: Box&lt;dyn Fn(f64) + 'a&gt;,\n}\nimpl&lt;'a&gt; AnimateClosure&lt;'a&gt; {\n    pub fn new(duartion: u32, closure: Box&lt;dyn Fn(f64) + 'a&gt;) -&gt; AnimateClosure&lt;'a&gt; {\n        AnimateClosure { closure }\n    }\n}\n\npub fn main() {\n    let mut world = World::new(\"game-of-drops\");\n    let closure_cell = Rc::new(RefCell::new(None));\n    let closure_cell_clone = Rc::clone(&amp;closure_cell);\n    *closure_cell.borrow_mut() = Some(Closure::wrap(Box::new(move |x: f64| {\n        world.check_collision();\n        world.animation_cycle();\n    }) as Box&lt;dyn FnMut(_)&gt;));\n}\n</code></pre>\n\n<p>I feel the problem might be from the <code>canvas</code> field stored in <code>animate_closure</code>, but I do not understand how to solve the problem with more lifetime annotations.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed data cannot be stored outside of its closure\n  --&gt; src/load.rs:45:9\n   |\n41 |     let mut world = World::new(\"game-of-drops\");\n   |         --------- ...so that variable is valid at time of its declaration\n...\n44 |     *closure_cell.borrow_mut() = Some(Closure::wrap(Box::new(move |x: f64| {\n   |                                                              ------------- borrowed data cannot outlive this closure\n45 |         world.check_collision();\n   |         ^^^^^ --------------- cannot infer an appropriate lifetime...\n   |         |\n   |         cannot be stored outside of its closure\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>wasm-bindgen = \"0.2.48\"\n\n[dependencies.web-sys]\nversion = \"0.3.25\"\nfeatures = ['console', 'CanvasRenderingContext2d']\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>This is not a duplicate of the <a href=\"https://stackoverflow.com/questions/51118023/what-does-borrowed-data-cannot-be-stored-outside-of-its-closure-mean\">question</a>. I am not passing any reference to the closure to cause any conflicts here. Only reference comes from the attribute of <code>world</code> <code>canvas</code>. </p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566917839, "post_id": 57677280, "comment_id": 101801768, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>; <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57677280/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566920628, "post_id": 57677280, "comment_id": 101803311, "body": "@trentcl I realised I might have to do it that way. The reason for the closures is that the parent scope has many more variables, and I would prefer to be able to just close over the ones I use inside the closure bodies rather than define a new struct that contains the set of closed over variables."}, {"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566922215, "post_id": 57677280, "comment_id": 101804015, "body": "@Shepmaster thanks will investigate the links. I think although the underlying principles are the same, this question specifically asks about the semantics of closure syntax."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566922330, "post_id": 57677280, "comment_id": 101804071, "body": "I mean, you certainly can do it that way. But you have to move the variables into the closures -- SOFe&#39;s answer shows how with data that needs to be shared between them. If you have a lot of variables it seems like this solution would be far more unwieldy than just wrapping them in a struct."}], "answers": [{"comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 2, "creation_date": 1566919348, "post_id": 57677438, "comment_id": 101802607, "body": "A trait object without lifetime gets <code>&#39;static</code> as rule. So <code>Closure</code> type is equivalent to <code>pub type Closure = Box&lt;dyn Fn() + &#39;static&gt;;</code>. Another reason must using <code>move</code> closure here to own the captured variables."}], "tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": false, "score": 2, "last_activity_date": 1566917763, "creation_date": 1566917763, "answer_id": 57677438, "question_id": 57677280, "link": "https://stackoverflow.com/questions/57677280/two-closures-that-use-references-to-parent-scope/57677438#57677438", "title": "Two closures that use references to parent scope", "body": "<p>It depends on your scenario. How long would the returned closures live?</p>\n\n<p>If it lives as long as the <code>Env</code> value, what about moving <code>s</code> into the <code>Env</code> value and accessing <code>s</code> from the <code>Env</code> value?</p>\n\n<p>If you don't know (or don't want to spend the trouble to figure out) the lifetime for the closures, a convenient (although slightly less efficient) way is to use <code>Rc</code>, then <code>move</code> a clone of the Rc from the results:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2d59cdb573f2e974746a745557619dea\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>use std::rc::Rc;\n\npub struct S {\n    x: bool,\n}\n\npub type Closure = Box&lt;dyn Fn()&gt;;\n\n#[allow(unused)]\npub struct Env {\n    fn_a: Closure,\n    fn_b: Closure,\n}\n\nfn get_env() -&gt; Env {\n    let s = Rc::new(S { x: true });\n\n    let cloned = Rc::clone(&amp;s);\n    let fn_a = move || {\n        s.x;\n    };\n    let fn_b = move || {\n        cloned.x;\n    };\n\n    Env {\n        fn_a: Box::new(fn_a),\n        fn_b: Box::new(fn_b),\n    }\n}\n\nfn main() {\n    let _env = get_env();\n}\n</code></pre>\n"}], "owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566917763, "creation_date": 1566917323, "last_edit_date": 1566917743, "question_id": 57677280, "link": "https://stackoverflow.com/questions/57677280/two-closures-that-use-references-to-parent-scope", "title": "Two closures that use references to parent scope", "body": "<p>Im trying to create a struct that stores 2 closures, each with read references to an parent scope variable where they were created.</p>\n\n<p>After I have closed over the references in the parent scope, how do I make sure they live for the same amount of time as the closures?</p>\n\n<p>For example:</p>\n\n<pre><code>struct S {\n    x: bool,\n}\n\ntype Closure = Box&lt;dyn Fn()&gt;;\n\nstruct Env {\n    fn_a: Closure,\n    fn_b: Closure,\n}\n\nfn get_env() -&gt; Env {\n    let s = S { x: true };\n\n    let fn_a = || {\n        &amp;s.x;\n    };\n    let fn_b = || {\n        &amp;s.x;\n    };\n\n    Env {\n        fn_a: Box::new(fn_a),\n        fn_b: Box::new(fn_b),\n    }\n}\n\nfn main() {\n    let env = get_env();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=058ba52c44110c0cd760aaef470a182c\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `s` does not live long enough\n  --&gt; src/main.rs:16:10\n   |\n15 |     let fn_a = || {\n   |                -- value captured here\n16 |         &amp;s.x;\n   |          ^ borrowed value does not live long enough\n...\n23 |         fn_a: Box::new(fn_a),\n   |               -------------- cast requires that `s` is borrowed for `'static`\n...\n26 | }\n   | - `s` dropped here while still borrowed```\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566916163, "post_id": 57676819, "comment_id": 101800791, "body": "See also <a href=\"https://stackoverflow.com/q/32935808/155423\">Generate sequential IDs for each instance of a struct</a>"}, {"owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566916991, "post_id": 57676819, "comment_id": 101801256, "body": "@Shepmaster Thank you for the references, I didn\u2019t find them so far."}], "owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 18, "favorite_count": 0, "closed_date": 1566916012, "answer_count": 0, "score": 0, "last_activity_date": 1566915906, "creation_date": 1566915823, "last_edit_date": 1566915906, "question_id": 57676819, "link": "https://stackoverflow.com/questions/57676819/usage-of-a-mutable-global-variable-in-a-rust-module", "closed_reason": "Duplicate", "title": "Usage of a mutable global variable in a Rust module", "body": "<p>I have the module <code>string_queue</code>:</p>\n\n<pre><code>use crossbeam_utils::thread;\nuse std::sync::{Arc, Mutex};\n\npub struct MyText {\n    my_text: Arc&lt;Mutex&lt;Vec&lt;String&gt;&gt;&gt;,\n}\n\npub trait MyTextOptions {\n    fn new() -&gt; MyText;\n    fn add(&amp;self, t: &amp;str);\n    fn get(&amp;self) -&gt; String;\n}\n\nimpl MyTextOptions for MyText {\n    fn new() -&gt; MyText {\n        unimplemented!();\n    }\n\n    fn add(&amp;self, text: &amp;str) {\n        unimplemented!();\n    }\n\n    fn get(&amp;self) -&gt; String {\n        unimplemented!();\n    }\n}\n</code></pre>\n\n<p>Is there a way to declare a mutable variable in that module that corresponds to the defined <code>my_text</code> type in <code>pub struct MyText</code>, lives for the whole application execution time and can be used as an input variable in the defined <code>impl MyTextOptions for MyText</code> functions?</p>\n\n<p>Basically, I'm looking for something similar to the usage of <code>self.__l = []</code> in this Python code, without using RustPython or similar Python + Rust hybrids.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class MyClass:\n    def __init__(self):\n        self.__l = []\n\n    def add(self, t):\n        self.__l += [t]\n\n    def get(self):\n        t = self.__l[0]\n        self.__l = self.__l[1:]\n        return t\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 8, "creation_date": 1566893422, "post_id": 57670145, "comment_id": 101788033, "body": "Closing a <code>JoinHandle</code> moves it out, to prevent closing it twice. Nothing would prevent a user from calling <code>stop_thread</code> twice. You either need to make <code>stop_thread(self)</code> or to store eg. a <code>Option&lt;JoinHandle&gt;</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 5, "creation_date": 1566894507, "post_id": 57670145, "comment_id": 101788536, "body": "<code>Option&lt;JoinHandle&lt;()&gt;&gt;</code> is the way to go. Use it like: <code>join_handle.take().map(JoinHandle::join)</code>"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1566895836, "post_id": 57670145, "comment_id": 101789227, "body": "@mcarton why didn&#39;t you post that as an answer? That comment contains exactly everything that needs to be in an answer."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566895926, "post_id": 57670145, "comment_id": 101789276, "body": "@SOFe That&#39;s a duplicate."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 2, "creation_date": 1566896047, "post_id": 57670145, "comment_id": 101789350, "body": "@SOFe I&#39;m pretty since has already been asked, but didn&#39;t have time to search for a duplicate or make a proper answer."}, {"owner": {"reputation": 139, "user_id": 5409630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0S3L4.png?s=128&g=1", "display_name": "lucifer", "link": "https://stackoverflow.com/users/5409630/lucifer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566898899, "post_id": 57670145, "comment_id": 101790931, "body": "@French Boithios Thank you, I needed exactly that. It works and <code>take</code> leaves the join_handle empty. So, that&#39;s a bonus."}, {"owner": {"reputation": 139, "user_id": 5409630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0S3L4.png?s=128&g=1", "display_name": "lucifer", "link": "https://stackoverflow.com/users/5409630/lucifer"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566899067, "post_id": 57670145, "comment_id": 101791018, "body": "@mcarton I could simply check the a flag before calling <code>my_thread.join</code>. What does <code>stop_thread(self)</code> achieve?  Sorry, I am new to rust and all these ownership errors feel way too many restrictions. Shouldn&#39;t this have been a warning instead?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1566899719, "post_id": 57670145, "comment_id": 101791379, "body": "&quot;Shouldn&#39;t this have been a warning instead?&quot; No. One of Rust&#39;s strong point is that it tries to do as much as possible at compile time. In this case it&#39;s easy to prevent this kind of error at compile time using Rust&#39;s type system. In your case I would either <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d8f11ea2fbffd11c9d8892f0ae5cd7db\" rel=\"nofollow noreferrer\">use Option</a> or <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=14d21d96bf1fce52a3beb50bb5cc2dda\" rel=\"nofollow noreferrer\">consume <code>self</code></a> depending on the intended use-case."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1566906787, "post_id": 57670145, "comment_id": 101795186, "body": "<i>&quot;I could simply check a flag&quot;</i>, yes but you didn&#39;t, did you? <code>Option</code> is the way that Rust uses to make sure that you do check the flag when needed."}, {"owner": {"reputation": 139, "user_id": 5409630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0S3L4.png?s=128&g=1", "display_name": "lucifer", "link": "https://stackoverflow.com/users/5409630/lucifer"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566958023, "post_id": 57670145, "comment_id": 101814306, "body": "@jmb it is a test code. I would never put it in production. Checking a simple flag is not that difficult. Rust has more spoonfeeding than I would like. Anyway, using Option solved this issue.  And to people marking this as a duplicate, really? I could never have figured out the solution by reading any of the linked issues."}], "owner": {"reputation": 139, "user_id": 5409630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0S3L4.png?s=128&g=1", "display_name": "lucifer", "link": "https://stackoverflow.com/users/5409630/lucifer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1704, "favorite_count": 0, "closed_date": 1566909650, "answer_count": 0, "score": 3, "last_activity_date": 1566895915, "creation_date": 1566892827, "last_edit_date": 1566895915, "question_id": 57670145, "link": "https://stackoverflow.com/questions/57670145/how-to-store-joinhandle-of-a-thread-to-close-it-later", "closed_reason": "Duplicate", "title": "How to store JoinHandle of a thread to close it later", "body": "<p>I am trying to run a thread in background and then change an AtomicBool to ask the thread to stop. To ensure the thread stopped properly, I want to call <code>join</code> method of the JoinHandle.</p>\n\n<p>Instead of calling join, if I just wait (<code>thread::sleep_ms</code>) for sometime after setting the AtomicBool, the thread properly closes. But to ensure this I want to use join.\nOr is there any better method to ensure the thread closed properly?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::Arc;\nuse std::sync::Mutex;\nuse std::sync::atomic::{AtomicBool, Ordering};\nuse std::thread;\nuse std::thread::JoinHandle;\n\nstruct MyInner { s: String }\n\nstruct My {\n    inner: Arc&lt;Mutex&lt;MyInner&gt;&gt;,\n    close_thread: Arc&lt;AtomicBool&gt;,\n    my_thread: JoinHandle&lt;()&gt;\n}\n\nimpl MyInner {\n    fn new(s: String) -&gt; MyInner {\n        MyInner {\n            s: s\n        }\n    }\n}\n\nimpl My {\n    fn new(s: String) -&gt; My {\n        My {\n            inner: Arc::new(Mutex::new(MyInner::new(s))),\n            close_thread: Arc::new(AtomicBool::new(false)),\n            my_thread: thread::spawn(move || {})\n        }\n    }\n\n    fn stop_thread(&amp;self) {\n        self.close_thread.swap(true, Ordering::Relaxed);\n        // ERROR!\n        self.my_thread.join().expect(\"Couldn't join my_thread on the main thread\");\n    }\n\n    fn start(&amp;mut self) {\n        let local_self = self.inner.clone();\n        let close_thread = self.close_thread.clone();\n        self.my_thread  = thread::spawn(move || {\n            loop {\n                if close_thread.load(Ordering::Relaxed) {\n                    println!(\"Closing thread!\");\n                    return;\n                }\n                let gaurd = local_self.lock().unwrap();\n                println!(\"Local self has value: {}\", (*gaurd).s);\n                std::mem::drop(gaurd);\n                thread::sleep_ms(1000);\n            }\n        });\n    }\n}\n\nfn main() {\n    let mut m = My::new(\"blo\".to_owned());\n    m.start();\n    thread::sleep_ms(2000);\n    m.stop_thread();\n    println!(\"Complete!\");\n}\n\n</code></pre>\n\n<p>For the above code, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of `self.my_thread` which is behind a shared reference\n  --&gt; src/main.rs:35:9\n   |\n35 |         self.my_thread.join().expect(\"Couldn't join my_thread on the main thread\");\n   |         ^^^^^^^^^^^^^^ move occurs because `self.my_thread` has type `std::thread::JoinHandle&lt;()&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I also tried using <code>Arc</code> on the JoinHandle but even after <code>Arc::clone</code> I get the same error.</p>\n"}, {"tags": ["generics", "rust", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1566883788, "post_id": 57668019, "comment_id": 101784298, "body": "Don&#39;t you want <code>pub fn new(t: f32, obj: &amp;&#39;a T) -&gt; Intersection&lt;&#39;a, T&gt; {</code> (ie <code>T</code> instead of  <code>Object</code>) ?"}, {"owner": {"reputation": 33, "user_id": 9276882, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc0119fab95c1fd09778b45c390a4f61?s=128&d=identicon&r=PG&f=1", "display_name": "SATHWIK MATSA", "link": "https://stackoverflow.com/users/9276882/sathwik-matsa"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1566931499, "post_id": 57668019, "comment_id": 101807778, "body": "@DenysS&#233;guret That solved everything! Thank you."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1566888124, "creation_date": 1566888124, "answer_id": 57668954, "question_id": 57668019, "link": "https://stackoverflow.com/questions/57668019/trait-cannot-be-made-into-an-object/57668954#57668954", "title": "trait cannot be made into an object", "body": "<p>I'm pretty sure that <code>Intersection</code> shouldn't be generic, but should instead contain a <code>&amp;Object</code>:</p>\n\n<pre><code>pub struct Intersection&lt;'a&gt;{\n    pub t: f32,\n    pub obj: &amp;'a Object,\n}\n</code></pre>\n\n<p>If you really need the actual object type in <code>Intersection</code>, then <code>Object::intersection</code> should not be generic, but should return an <code>Intersection&lt;Self&gt;</code>:</p>\n\n<pre><code>pub trait Object&lt;'a&gt; {\n    fn intersection(&amp;self, ray: &amp;Ray) -&gt; Intersections&lt;'a, Self&gt;;\n}\n</code></pre>\n\n<p>The second part of the error concerns <code>get_uid</code>. It can't be part of the trait if you want to access the trait through references because only functions that take a <code>self</code> parameter can be used in this situation.</p>\n\n<p>Note also that <code>get_uid</code> doesn't do what you think: if two threads call it simultaneously, there is a chance that both will get the same result. What you want is:</p>\n\n<pre><code>fn get_object_uid() -&gt; usize { // &lt;- Renamed because it needs to be outside the trait\n    unsafe {\n        ID.fetch_add (1, Ordering::SeqCst) + 1\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 9276882, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc0119fab95c1fd09778b45c390a4f61?s=128&d=identicon&r=PG&f=1", "display_name": "SATHWIK MATSA", "link": "https://stackoverflow.com/users/9276882/sathwik-matsa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1690, "favorite_count": 1, "accepted_answer_id": 57668954, "answer_count": 1, "score": 0, "last_activity_date": 1566888124, "creation_date": 1566882745, "question_id": 57668019, "link": "https://stackoverflow.com/questions/57668019/trait-cannot-be-made-into-an-object", "title": "trait cannot be made into an object", "body": "<p>I'm working on a ray tracer and want to model all hitable objects to provide a common interface.</p>\n\n<p>I implemented a trait named Object which all hitable objects implement. I created a struct called Intersection which contains an f32 value and a reference to struct that implements Object trait.</p>\n\n<p>The code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::atomic::{AtomicUsize, Ordering};\nuse super::ray::Ray;\nuse std::ops::{Index};\n\nstatic mut ID : AtomicUsize = AtomicUsize::new(0);\n\npub trait Object {\n    fn intersection&lt;'a, T: Object&gt;(&amp;self, ray: &amp;Ray) -&gt; Intersections&lt;'a, T&gt;;\n    fn get_uid() -&gt; usize {\n        unsafe {\n            ID.fetch_add(1, Ordering::SeqCst);\n            ID.load(Ordering::SeqCst)\n        }\n    }\n}\n\npub struct Intersection&lt;'a, T: Object&gt;{\n    pub t: f32,\n    pub obj: &amp;'a T,\n}\n\nimpl&lt;'a, T: Object&gt; Intersection&lt;'a, T&gt; {\n    pub fn new(t: f32, obj: &amp;'a Object) -&gt; Intersection&lt;'a, T&gt; {\n        Self {t, obj}\n    }\n}\n\npub struct Intersections&lt;'a, T: Object&gt; {\n    pub hits: Vec&lt;Intersection&lt;'a, T&gt;&gt;,\n}\n\nimpl&lt;'a, T: Object&gt; Intersections&lt;'a, T&gt; {\n    pub fn new() -&gt; Self {\n        Self {\n            hits: Vec::new(),\n        }\n    }\n    pub fn push(&amp;self, hit: Intersection&lt;'a, T&gt;) {\n        self.hits.push(hit);\n    }\n    pub fn len(&amp;self) -&gt; usize {\n        self.hits.len()\n    }\n}\n</code></pre>\n\n<p>The error message is as follows:</p>\n\n<pre><code>error[E0038]: the trait `object::Object` cannot be made into an object\n  --&gt; src/object.rs:23:5\n   |\n23 |     pub fn new(t: f32, obj: &amp;'a Object) -&gt; Intersection&lt;'a, T&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `object::Object` cannot be made into an object\n   |\n   = note: method `intersection` has generic type parameters\n   = note: method `get_uid` has no receiver\n</code></pre>\n\n<p>Since I'm storing a reference in the Intersection, I supposed it doesn't have to deal with the actual size of the struct.</p>\n"}, {"tags": ["rust", "hashmap", "iterator", "clone"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1566853478, "post_id": 57664818, "comment_id": 101778540, "body": "Concretely, it&#39;s unclear what&#39;s wrong with <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.keys\" rel=\"nofollow noreferrer\"><code>HashMap::keys</code></a>, perhaps combined with <a href=\"https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.cloned\" rel=\"nofollow noreferrer\"><code>Iterator::cloned</code></a>."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566854299, "post_id": 57664818, "comment_id": 101778767, "body": "Combining HashMap::keys with Iterator::cloned looks like what I need. Didn&#39;t know about the latter. You may post this as the answer. I am just a frustrated C# programmer who loves LINQ and just can&#39;t figure out Rust iterators."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566854689, "post_id": 57664818, "comment_id": 101778900, "body": "As for trying to create an MRE, my problem is that when I find individual solutions to problems that I find on stack overflow, I have troubles composing them together without language impossibilities intruding. For example, getting separate solutions to PartialEquals and Clone to work together for a Trait object took me two months of research and trials! Very frustrating. (This coming from an MIT educated programmer who has worked in 28 other languages over a career of thirty years as a software engineer!)"}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566856755, "post_id": 57664818, "comment_id": 101779573, "body": "I reduced the code example. I tried your suggestion, but do not know how to call it correctly and specify the return type correctly."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566858503, "post_id": 57664818, "comment_id": 101779978, "body": "Change your return type to: <code>iter::Cloned&lt;Keys&lt;&amp;&#39;static str, ShyValue&gt;&gt;</code>."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566858770, "post_id": 57664818, "comment_id": 101780044, "body": "If you would like to define an object method or free function (it won&#39;t work in a trait), you can also use <code>impl Iterator&lt;Item=&amp;&#39;a str&gt;</code> for any Rustc &gt;= 1.27, where <code>&#39;a</code> is the lifetime of the HashMap."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566920722, "post_id": 57664818, "comment_id": 101803351, "body": "Please do not edit your question to ask new questions (<a href=\"https://meta.stackoverflow.com/q/290746/155423\">\u201cFollow on\u201d question vs edit to original - when to use which?</a>). Feel free to ask the answerer for clarifications in a comment on the answer, or ask a new question (with an appropriately created <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> for <i>that</i> question)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566920829, "post_id": 57664818, "comment_id": 101803406, "body": "Also, please take the time to learn from the edits we do to your question. See how the error message in your first question contains the information about which lines are causing the error? That&#39;s because I directly copied the error message from the compiler. Please always paste the exact and entire error that you&#39;re getting. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1566922118, "post_id": 57664818, "comment_id": 101803980, "body": "Thanks for your input. I read your link concerning follow on questions, which makes the policy clearer."}], "answers": [{"comments": [{"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1566920579, "post_id": 57665730, "comment_id": 101803290, "body": "thank you for your suggestion. I am trying to return a Boxed trait following your lead, but get a syntax error."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "reply_to_user": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1566924306, "post_id": 57665730, "comment_id": 101804934, "body": "@PaulChernoch, Updated per your suggestions."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1566926169, "post_id": 57665730, "comment_id": 101805671, "body": "Thanks! I can never figure out where to put those pesky lifetimes. I new I needed to correlate it with the HashMap&#39;s lifetime, but botched it."}], "tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 3, "last_activity_date": 1566924575, "last_edit_date": 1566924575, "creation_date": 1566859263, "answer_id": 57665730, "question_id": 57664818, "link": "https://stackoverflow.com/questions/57664818/how-may-i-return-an-iterator-over-the-keys-of-a-hashmap-that-clones-the-keys/57665730#57665730", "title": "How may I return an iterator over the keys of a HashMap that clones the keys?", "body": "<p>The issue is that you're manually specifying a type that doesn't match the return type. <code>iter::Cloned&lt;Keys&lt;_, _&gt;&gt;</code> is not the same as <code>Keys&lt;_, _&gt;</code>. A simple fix is to change your return type to <code>iter::Cloned&lt;Keys&lt;&amp;'static str, ShyValue&gt;&gt;</code>.</p>\n\n<pre><code>pub trait ShyAssociation {\n    fn keys(&amp;self) -&gt; iter::Cloned&lt;Keys&lt;&amp;'static str, ShyValue&gt;&gt;;\n}\n\nimpl ShyAssociation for HashMap&lt;&amp;'static str, ShyValue&gt; {\n    fn keys(&amp;self) -&gt; iter::Cloned&lt;Keys&lt;&amp;'static str, ShyValue&gt;&gt; {\n        self.keys().cloned()\n    }\n}\n</code></pre>\n\n<p>If would like to return a type that implements a trait (which will not work in the above example, since this is only valid for non-trait functions and methods), you may also do:</p>\n\n<pre><code>pub fn keys&lt;'a&gt;(hash_map: &amp;'a HashMap&lt;&amp;'static str, ShyValue&gt;) -&gt; impl Iterator&lt;Item = &amp;'a str&gt; {\n    hash_map.keys().cloned()\n}\n</code></pre>\n\n<p>If you would like to use <code>Box&lt;dyn Iterator&gt;</code> so you may use it in a trait method, you may do:</p>\n\n<pre><code>pub trait ShyAssociation {\n    fn keys&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;(dyn Iterator&lt;Item = &amp;'static str&gt; + 'a)&gt;;\n}\n\nimpl ShyAssociation for HashMap&lt;&amp;'static str, ShyValue&gt; {\n    fn keys&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;(dyn Iterator&lt;Item = &amp;'static str&gt; + 'a)&gt; {\n        Box::new(self.keys().cloned())\n    }\n}\n</code></pre>\n\n<p>The <code>'a</code> lifetime is necessary in order to limit the lifetime of the iterator to that of the <code>HashMap</code>.</p>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "accepted_answer_id": 57665730, "answer_count": 1, "score": 0, "last_activity_date": 1566924575, "creation_date": 1566852863, "last_edit_date": 1566920524, "question_id": 57664818, "link": "https://stackoverflow.com/questions/57664818/how-may-i-return-an-iterator-over-the-keys-of-a-hashmap-that-clones-the-keys", "title": "How may I return an iterator over the keys of a HashMap that clones the keys?", "body": "<p>I am defining a trait called <code>ShyAssociation</code> that returns a lazy iterator of the keys of an associative structure. The iterator should either borrow the keys as immutable or clone them. The keys are always <code>&amp;'static str.</code> All I need is an iterator that returns <code>&amp;'static str</code>.</p>\n\n<p>Here is the trait with my attempt at the method for the <code>keys</code> iterator:</p>\n\n<pre><code>use std::collections::{hash_map::Keys, HashMap};\n\n#[derive(Clone, PartialEq, Debug)]\npub enum ShyValue {\n    Boolean(bool),\n    Integer(i64),\n    Rational(f64),\n    String(String),\n    Error(String),\n}\n\npub trait ShyAssociation {\n    fn keys(&amp;self) -&gt; Keys&lt;&amp;'static str, ShyValue&gt;;\n}\n\nimpl ShyAssociation for HashMap&lt;&amp;'static str, ShyValue&gt; {\n    fn keys(&amp;self) -&gt; Keys&lt;&amp;'static str, ShyValue&gt; {\n        self.keys().cloned()\n    }\n}\n</code></pre>\n\n<p>It won't compile. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:18:9\n   |\n18 |         self.keys().cloned()\n   |         ^^^^^^^^^^^^^^^^^^^^ expected struct `std::collections::hash_map::Keys`, found struct `std::iter::Cloned`\n   |\n   = note: expected type `std::collections::hash_map::Keys&lt;'_, &amp;'static str, _&gt;`\n              found type `std::iter::Cloned&lt;std::collections::hash_map::Keys&lt;'_, &amp;str, _&gt;&gt;`\n</code></pre>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I am attempting a variation on Alexander Huszagh's answer, but have a syntax error:</p>\n\n<pre><code>use std::collections::{hash_map::Keys, HashMap};\n\n#[derive(Clone, PartialEq, Debug)]\npub enum ShyValue {\n    Boolean(bool),\n    Integer(i64),\n    Rational(f64),\n    String(String),\n    Error(String),\n}\n\npub trait ShyAssociation&lt;'a&gt; {\n    fn keys(&amp;self) -&gt; Box&lt;Iterator&lt;Item=&amp;'static str&gt; + 'a&gt;;\n}\n\nimpl&lt;'a&gt; ShyAssociation&lt;'a&gt; for HashMap&lt;&amp;'static str, ShyValue&gt; {\n    fn keys(&amp;self) -&gt; Box&lt;Iterator&lt;Item=&amp;'static str&gt; + 'a&gt; {\n        Box::new&lt;(Iterator&lt;Item=&amp;'static str&gt; + 'a)&gt;(self.keys().cloned())\n    }\n}\n</code></pre>\n\n<p>The error message is on the \"str\" in the Iterator Item definition for keys:</p>\n\n<pre><code>expected `:`, found `str`\n\nexpected `:`rustc\nshy_association.rs(59, 42): expected `:`\n</code></pre>\n"}, {"tags": ["rust", "elf", "got"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1566850666, "post_id": 57664235, "comment_id": 101777647, "body": "I don&#39;t know, but the first thing that comes to mind is that a lot of Rust&#39;s formatting machinery uses dynamic dispatch instead of static dispatch (for measured benefits). There&#39;s also the fact that you are using stdout, which is a global variable with a lock around it. I think the next step would be to rule out those two avenues."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566866045, "post_id": 57664235, "comment_id": 101781321, "body": "are you sure you striped it correctly ? also, I&#39;m not an expert but manipulate binary is not recommended. Every compiler has its own way to work."}, {"owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566879736, "post_id": 57664235, "comment_id": 101783456, "body": "@Stargateur If you mean <code>objcopy -R.got hello hello_no_got</code>, I am not an expert here (I just borrowed this command from the answer I gave a link to), but, as I mentioned after, <code>.got</code> section turns out to be an essential part of the binary. I know that manipulating the binary is not your usual way to go; for some reason (don&#39;t ask why) I want to embed a Rust binary in a Rust binary and run the inner binary from the outer one. So the first thing I did was to compile the inner binary with musl, which produces a fully static binary, but I was surprised to find GOT in it."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1566942909, "post_id": 57664235, "comment_id": 101811818, "body": "Actually the GOT is used for any <i>Position Independed Code</i>, not only dynamic libraries. I&#39;m guessing that the Rust stdlib is compiled to PIC to be able to use it in shared libraries. So you get a GOT even if you don&#39;t technically need one."}], "answers": [{"tags": [], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "is_accepted": true, "score": 3, "last_activity_date": 1567204743, "last_edit_date": 1567204743, "creation_date": 1567204091, "answer_id": 57733804, "question_id": 57664235, "link": "https://stackoverflow.com/questions/57664235/why-does-a-fully-static-rust-elf-binary-have-a-global-offset-table-got-section/57733804#57733804", "title": "Why does a fully static Rust ELF binary have a Global Offset Table (GOT) section?", "body": "<p><strong>TL;DR summary</strong>: the GOT is really a rudimentary build artifact, which I was able to get rid of via simple machine code manipulations.</p>\n\n<h1>Breakdown</h1>\n\n<p>If we look at</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ objdump -dj .text hello\n</code></pre>\n\n<p>and search for <code>GLOBAL</code>, we see only four distinct types of references to the GOT (constants differ):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40037c:       ff 15 26 7a 23 00       call   QWORD PTR [rip+0x237a26]        # 637da8 &lt;_GLOBAL_OFFSET_TABLE_+0x250&gt;\n  425903:       ff 25 5f 26 21 00       jmp    QWORD PTR [rip+0x21265f]        # 637f68 &lt;_GLOBAL_OFFSET_TABLE_+0x410&gt;\n  41d8b5:       48 3b 1d b4 a5 21 00    cmp    rbx,QWORD PTR [rip+0x21a5b4]    # 637e70 &lt;_GLOBAL_OFFSET_TABLE_+0x318&gt;\n  40b259:       48 83 3d 7f cb 22 00    cmp    QWORD PTR [rip+0x22cb7f],0x0    # 637de0 &lt;_GLOBAL_OFFSET_TABLE_+0x288&gt;\n  40b260:       00\n</code></pre>\n\n<p>All of these are reading instructions, which means that the GOT is not modified at runtime. This in turn means that we can statically resolve the addresses that the GOT refers to! Let's consider the reference types one by one:</p>\n\n<ol>\n<li><code>call QWORD PTR [rip+0x2126be]</code> simply says \"go to address <code>[rip+0x2126be]</code>, take 8 bytes from there, interpret them as a function address and call the function\". We can simply replace this instruction with a direct call:</li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40037c:       e8 cf 3f 00 00          call   404350 &lt;_ZN3std2io5stdio6_print17h522bda9f206d7fddE&gt;\n  400381:       90                      nop\n</code></pre>\n\n<p>Notice the <code>nop</code> at the end: we need to replace all the 6 bytes of the machine code that constitute the first instruction, but the instruction we replace it with is only 5 bytes, so we need to pad it. Fundamentally, as we are patching a compiled binary, we can replace an instruction with a another one only if it is not longer.</p>\n\n<ol start=\"2\">\n<li><code>jmp QWORD PTR [rip+0x21265f]</code> is the same as the previous one, but instead of calling an address it jumps to it. This turns into:</li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>  425903:       e9 b8 f7 ff ff          jmp    4250c0 &lt;_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17hc384e51187942069E&gt;\n  425908:       90                      nop\n</code></pre>\n\n<ol start=\"3\">\n<li><code>cmp rbx,QWORD PTR [rip+0x21a5b4]</code> - this takes 8 bytes from <code>[rip+0x21a5b4]</code> and compares them to the contents of <code>rbx</code> register. This one is tricky, since <code>cmp</code> can not compare register contents to an 64-bit immediate value. We could use another register for that, but we don't know which of the registers are used around this instruction. A careful solution would be something like</li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>push rax\nmov rax,0x0000006363c0\ncmp rbx,rax\npop rax\n</code></pre>\n\n<p>But that would be way beyond our limit of 7 bytes. The real solution stems from an observation that the GOT contains only addresses; our address space is (roughly) contained in range [0x400000; 0x650000], which can be seen in the program headers:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ readelf -l hello\n...\nProgram Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000\n                 0x0000000000035b50 0x0000000000035b50  R E    0x200000\n  LOAD           0x0000000000036380 0x0000000000636380 0x0000000000636380\n                 0x0000000000001dd0 0x0000000000003918  RW     0x200000\n...\n</code></pre>\n\n<p>It follows that we can (mostly) get away with only comparing 4 bytes of a GOT entry instead of 8. So the substitution is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  41d8b5:       81 fb c0 63 63 00       cmp    ebx,0x6363c0\n  41d8bb:       90                      nop\n</code></pre>\n\n<ol start=\"4\">\n<li>The last one consists of two lines of <code>objdump</code> output, since 8 bytes do not fit in one line:</li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40b259:       48 83 3d 7f cb 22 00    cmp    QWORD PTR [rip+0x22cb7f],0x0    # 637de0 &lt;_GLOBAL_OFFSET_TABLE_+0x288&gt;\n  40b260:       00\n</code></pre>\n\n<p>It just compares 8 bytes of the GOT to a constant (in this case, 0x0). In fact, we can do the comparison statically; if the operands compare equal, we replace the comparison with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40b259:       48 39 c0                cmp    rax,rax\n  40b25c:       90                      nop\n  40b25d:       90                      nop\n  40b25e:       90                      nop\n  40b25f:       90                      nop\n  40b260:       90                      nop\n</code></pre>\n\n<p>Obviously, a register is always equal to itself. A lot of padding needed here!</p>\n\n<p>If the left operand is greater than the right one, we replace the comparison with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40b259:       48 83 fc 00             cmp    rsp,0x0 \n  40b25d:       90                      nop\n  40b25e:       90                      nop\n  40b25f:       90                      nop\n  40b260:       90                      nop\n</code></pre>\n\n<p>In practice, <code>rsp</code> is always greater than zero.</p>\n\n<p>If the left operand is smaller than the right one, things get a bit more complicated, but since we have a whole lot of bytes (8!) we can manage:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  40b259:  50                      push   rax\n  40b25a:  31 c0                   xor    eax,eax\n  40b25c:  83 f8 01                cmp    eax,0x1\n  40b25f:  58                      pop    rax\n  40b260:  90                      nop\n</code></pre>\n\n<p>Notice that the second and the third instructions use <code>eax</code> instead of <code>rax</code>, since <code>cmp</code> and <code>xor</code> involving <code>eax</code> take one less byte than with <code>rax</code>.</p>\n\n<h1>Testing</h1>\n\n<p>I have written a Python script to do all these substitutions automatically (it's a bit hacky and relies on parsing of <code>objdump</code> output though):</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>#!/usr/bin/env python3\n\nimport re\nimport sys\nimport argparse\nimport subprocess\n\ndef read_u64(binary):\n    return sum(binary[i] * 256 ** i for i in range(8))\n\ndef distance_u32(start, end):\n    assert abs(end - start) &lt; 2 ** 31\n    diff = end - start\n    if diff &lt; 0:\n        return 2 ** 32 + diff\n    else:\n        return diff\n\ndef to_u32(x):\n    assert 0 &lt;= x &lt; 2 ** 32\n    return bytes((x // (256 ** i)) % 256 for i in range(4))\n\nclass GotInstruction:\n    def __init__(self, lines, symbol_address, symbol_offset):\n        self.address = int(lines[0].split(\":\")[0].strip(), 16)\n        self.offset = symbol_offset + (self.address - symbol_address)\n        self.got_offset = int(lines[0].split(\"(File Offset: \")[1].strip().strip(\")\"), 16)\n        self.got_offset = self.got_offset % 0x200000  # No idea why the offset is actually wrong\n        self.bytes = []\n        for line in lines:\n            self.bytes += [int(x, 16) for x in line.split(\"\\t\")[1].split()]\n\nclass TextDump:\n    symbol_regex = re.compile(r\"^([0-9,a-f]{16}) &lt;(.*)&gt; \\(File Offset: 0x([0-9,a-f]*)\\):\")\n\n    def __init__(self, binary_path):\n        self.got_instructions = []\n        objdump_output = subprocess.check_output([\"objdump\", \"-Fdj\", \".text\", \"-M\", \"intel\",\n                                                  binary_path])\n        lines = objdump_output.decode(\"utf-8\").split(\"\\n\")\n        current_symbol_address = 0\n        current_symbol_offset = 0\n        for line_group in self.group_lines(lines):\n            match = self.symbol_regex.match(line_group[0])\n            if match is not None:\n                current_symbol_address = int(match.group(1), 16)\n                current_symbol_offset = int(match.group(3), 16)\n            elif \"_GLOBAL_OFFSET_TABLE_\" in line_group[0]:\n                instruction = GotInstruction(line_group, current_symbol_address,\n                                             current_symbol_offset)\n                self.got_instructions.append(instruction)\n\n    @staticmethod\n    def group_lines(lines):\n        if not lines:\n            return\n        line_group = [lines[0]]\n        for line in lines[1:]:\n            if line.count(\"\\t\") == 1:  # this line continues the previous one\n                line_group.append(line)\n            else:\n                yield line_group\n                line_group = [line]\n        yield line_group\n\n    def __iter__(self):\n        return iter(self.got_instructions)\n\ndef read_binary_file(path):\n    try:\n        with open(path, \"rb\") as f:\n            return f.read()\n    except (IOError, OSError) as exc:\n        print(f\"Failed to open {path}: {exc.strerror}\")\n        sys.exit(1)\n\ndef write_binary_file(path, content):\n    try:\n        with open(path, \"wb\") as f:\n            f.write(content)\n    except (IOError, OSError) as exc:\n        print(f\"Failed to open {path}: {exc.strerror}\")\n        sys.exit(1)\n\ndef patch_got_reference(instruction, binary_content):\n    got_data = read_u64(binary_content[instruction.got_offset:])\n    code = instruction.bytes\n    if code[0] == 0xff:\n        assert len(code) == 6\n        relative_address = distance_u32(instruction.address, got_data)\n        if code[1] == 0x15:  # call QWORD PTR [rip+...]\n            patch = b\"\\xe8\" + to_u32(relative_address - 5) + b\"\\x90\"\n        elif code[1] == 0x25:  # jmp QWORD PTR [rip+...]\n            patch = b\"\\xe9\" + to_u32(relative_address - 5) + b\"\\x90\"\n        else:\n            raise ValueError(f\"unknown machine code: {code}\")\n    elif code[:3] == [0x48, 0x83, 0x3d]:  # cmp QWORD PTR [rip+...],&lt;BYTE&gt;\n        assert len(code) == 8\n        if got_data == code[7]:\n            patch = b\"\\x48\\x39\\xc0\" + b\"\\x90\" * 5  # cmp rax,rax\n        elif got_data &gt; code[7]:\n            patch = b\"\\x48\\x83\\xfc\\x00\" + b\"\\x90\" * 3  # cmp rsp,0x0\n        else:\n            patch = b\"\\x50\\x31\\xc0\\x83\\xf8\\x01\\x90\"  # push rax\n                                                     # xor eax,eax\n                                                     # cmp eax,0x1\n                                                     # pop rax\n    elif code[:3] == [0x48, 0x3b, 0x1d]:  # cmp rbx,QWORD PTR [rip+...]\n        assert len(code) == 7\n        patch = b\"\\x81\\xfb\" + to_u32(got_data) + b\"\\x90\"  # cmp ebx,&lt;DWORD&gt;\n    else:\n        raise ValueError(f\"unknown machine code: {code}\")\n    return dict(offset=instruction.offset, data=patch)\n\ndef make_got_patches(binary_path, binary_content):\n    patches = []\n    text_dump = TextDump(binary_path)\n    for instruction in text_dump.got_instructions:\n        patches.append(patch_got_reference(instruction, binary_content))\n    return patches\n\ndef apply_patches(binary_content, patches):\n    for patch in patches:\n        offset = patch[\"offset\"]\n        data = patch[\"data\"]\n        binary_content = binary_content[:offset] + data + binary_content[offset + len(data):]\n    return binary_content\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"binary_path\", help=\"Path to ELF binary\")\n    parser.add_argument(\"-o\", \"--output\", help=\"Output file path\", required=True)\n    args = parser.parse_args()\n\n    binary_content = read_binary_file(args.binary_path)\n    patches = make_got_patches(args.binary_path, binary_content)\n    patched_content = apply_patches(binary_content, patches)\n    write_binary_file(args.output, patched_content)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>\n\n<p>Now we can get rid of the GOT for real:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --release --target x86_64-unknown-linux-musl\n$ ./resolve_got.py target/x86_64-unknown-linux-musl/release/hello -o hello_no_got\n$ objcopy -R.got hello_no_got\n$ readelf -e hello_no_got | grep .got\n$ ./hello_no_got\nHello, world!\n</code></pre>\n\n<p>I have also tested it on my ~3k LOC app, and it seems to work alright.</p>\n\n<p>P.S. I am not an expert in assembly, so some of the above might be inaccurate.</p>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 613, "favorite_count": 0, "accepted_answer_id": 57733804, "answer_count": 1, "score": 11, "last_activity_date": 1567204743, "creation_date": 1566849572, "last_edit_date": 1566911627, "question_id": 57664235, "link": "https://stackoverflow.com/questions/57664235/why-does-a-fully-static-rust-elf-binary-have-a-global-offset-table-got-section", "title": "Why does a fully static Rust ELF binary have a Global Offset Table (GOT) section?", "body": "<p>This code, when compiled for the <code>x86_64-unknown-linux-musl</code> target, produces a <code>.got</code> section:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --release --target x86_64-unknown-linux-musl\n$ readelf -S hello\nThere are 30 section headers, starting at offset 0x26dc08:\n\nSection Headers:\n[Nr] Name              Type             Address           Offset\n   Size              EntSize          Flags  Link  Info  Align\n...\n[12] .got              PROGBITS         0000000000637b58  00037b58\n   00000000000004a8  0000000000000008  WA       0     0     8\n...\n</code></pre>\n\n<p>According to <a href=\"https://stackoverflow.com/a/34863068/3193180\">this answer</a> for analogous C code, the <code>.got</code> section is an artifact that can be safely removed. However, it segfaults for me: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ objcopy -R.got hello hello_no_got\n$ ./hello_no_got\n[1]    3131 segmentation fault (core dumped)  ./hello_no_got\n</code></pre>\n\n<p>Looking at the disassembly, I see that the GOT basically holds static function addresses:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ objdump -d hello -M intel\n...\n0000000000400340 &lt;_ZN5hello4main17h5d434a6e08b2e3b8E&gt;:\n...\n  40037c:       ff 15 26 7a 23 00       call   QWORD PTR [rip+0x237a26]        # 637da8 &lt;_GLOBAL_OFFSET_TABLE_+0x250&gt;\n...\n\n$ objdump -s -j .got hello | grep 637da8\n637da8 50434000 00000000 b0854000 00000000  PC@.......@.....\n\n$ objdump -d hello -M intel | grep 404350\n0000000000404350 &lt;_ZN3std2io5stdio6_print17h522bda9f206d7fddE&gt;:\n  404350:       41 57                   push   r15\n</code></pre>\n\n<p>The number <code>404350</code> comes from <code>50434000 00000000</code>, which is a little-endian <code>0x00000000000404350</code> (this was not obvious; I had to run the binary under GDB to figure this out!)</p>\n\n<p>This is perplexing, since Wikipedia <a href=\"https://en.wikipedia.org/wiki/Global_Offset_Table\" rel=\"noreferrer\">says</a> that</p>\n\n<blockquote>\n  <p>[GOT] is used by executed programs to find during runtime addresses of global variables, unknown in compile time. The global offset table is updated in process bootstrap by the dynamic linker.</p>\n</blockquote>\n\n<ol>\n<li>Why is the GOT present? From the disassembly, it looks like the compiler knows all the needed addresses. As far as I know, there is no bootstrap done by the dynamic linker: there is neither <code>INTERP</code> nor <code>DYNAMIC</code> program headers present in my binary;</li>\n<li>Why does the GOT store function pointers? Wikipedia says the GOT is only for global variables, and function pointers should be contained in the PLT.</li>\n</ol>\n"}, {"tags": ["multithreading", "asynchronous", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566846652, "post_id": 57663574, "comment_id": 101776035, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57663574/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566846744, "post_id": 57663574, "comment_id": 101776074, "body": "<i>preclude an executor like Tokio from running processes in parallel</i> \u2014 it already does."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566847308, "post_id": 57663574, "comment_id": 101776293, "body": "Note that async/await isn&#39;t unique to Rust, and exists in many other programming languages. Even beyond that specific syntax, the concepts of futures and promises exist in even more languages. See things like <a href=\"https://stackoverflow.com/q/15148852/155423\">Async/Await vs Threads</a>; <a href=\"https://stackoverflow.com/q/37419572/155423\">If async-await doesn&#39;t create any additional threads, then how does it make applications responsive?</a>. Learning about promises / futures will be way more beneficial."}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566848266, "post_id": 57663574, "comment_id": 101776693, "body": "@Shepmaster Alright, so if I understand you correctly, <code>ThreadPool</code> (or <code>futures-cpupool</code>) is an executor that can execute processes in parallel using threads.  These executors benefit from the new async/await syntax.  Whether this is better or worse than <code>std::thread</code> depends on the application.  Does that sound about right?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 3, "creation_date": 1566848558, "post_id": 57663574, "comment_id": 101776812, "body": "As I understand it, async/await is most beneficial to IO-bound tasks since now it can handle more block operations with less OS threads. As for CPU-bound tasks, I&#39;d say it&#39;ll have far less impact."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566848769, "post_id": 57663574, "comment_id": 101776906, "body": "To be clear, <code>async</code> / <code>await</code> is (mostly) <b>syntax sugar</b> (see more details in <a href=\"https://stackoverflow.com/q/52835725/155423\">What is the purpose of async/await in Rust?</a>). The underlying concepts of futures (and the closely related promises in other languages) are more important."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566848948, "post_id": 57663574, "comment_id": 101776976, "body": "Yes, futures will see the <b>most</b> benefit in IO-bound tasks like network interaction, but it&#39;s not limited to that. See <a href=\"http://www.jonathanturner.org/2019/08/introducing-nushell.html\" rel=\"nofollow noreferrer\">nushell</a> as an example of using futures. My personal belief is that futures can also help with creating composible <i>interruptible</i> computations, but I don&#39;t have anything to back that up with."}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 358, "favorite_count": 0, "closed_date": 1573222005, "answer_count": 0, "score": 2, "last_activity_date": 1573222015, "creation_date": 1566846453, "last_edit_date": 1566846728, "question_id": 57663574, "link": "https://stackoverflow.com/questions/57663574/what-are-the-implications-of-async-await-on-computationally-heavy-code-that-woul", "closed_reason": "Duplicate", "title": "What are the implications of async/await on computationally-heavy code that would typically use Rust threads?", "body": "<p>I work on computationally-heavy code like PDE solvers that can generally be well parallelized using something like pthreads.  The routines in <code>std::thread</code> appear to work well for this purpose.  That said, there's a lot of press about the upcoming <a href=\"https://areweasyncyet.rs/\" rel=\"nofollow noreferrer\">async/await stabilization</a> and I'm not sure whether this has implications for code that should execute in parallel on separate cores.</p>\n\n<p>I'm aware that <a href=\"https://stackoverflow.com/questions/1050222/what-is-the-difference-between-concurrency-and-parallelism\">concurrency is not the same as parallelization</a>, but that doesn't seem to preclude an executor like Tokio from running processes in parallel.  I'm curious whether async/await, Tokio, or the like has benefits for computation heavy processes or whether it's really best used for things like I/O.</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566844580, "post_id": 57663035, "comment_id": 101775261, "body": "Your <code>&amp;</code> in <code>println!</code> are unneeded (<a href=\"https://stackoverflow.com/q/30450399/155423\">Does println! borrow or own the variable?</a>) and the explicit <code>return</code>s in your helpers are non-idiomatic, and <code>.chain(Some(0))</code> is sufficient."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1566865622, "creation_date": 1566865622, "answer_id": 57666314, "question_id": 57663035, "link": "https://stackoverflow.com/questions/57663035/how-to-create-a-subscription-for-events-in-windows-using-rust-and-the-winapi-cra/57666314#57666314", "title": "How to create a subscription for events in Windows using Rust and the winapi crate?", "body": "<p>The documentation for <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winevt/nf-winevt-evtsubscribe\" rel=\"nofollow noreferrer\"><code>EvtSubscribe</code></a> states:</p>\n\n<blockquote>\n  <p><code>SignalEvent</code></p>\n  \n  <p>[...] This parameter must be <code>NULL</code> if the <code>Callback</code> parameter is not\n  <code>NULL</code>.</p>\n  \n  <p><code>Callback</code></p>\n  \n  <p>[...] This parameter must be <code>NULL</code> if the <code>SignalEvent</code> parameter is\n  not <code>NULL</code>.</p>\n</blockquote>\n\n<p>The unstated implication here is that <strong>exactly one</strong> of these parameters must be provided. Passing both is explicitly disallowed, but passing neither would not make sense, as otherwise there would be no way for your code to receive the event.</p>\n\n<p>Passing one of these values should cause the code to start working.</p>\n\n<p>Editorially, this is a good example of where a Rust enum would have been a better way to model the API. This would clearly show that the two options are mutually exclusive and one is required:</p>\n\n<pre><code>enum Subscriber {\n    EventObject(HANDLE),\n    Callback(EVT_SUBSCRIBE_CALLBACK),\n}\n</code></pre>\n\n<hr>\n\n<p>Incidentally, your implementation of <code>to_wchar</code> is incorrect and likely leads to memory unsafety. <code>to_vec</code> allocates memory, you take a pointer to it, then that memory is deallocated, creating a dangling pointer. The bad pointer is read by the C code inside of the <code>unsafe</code> block \u2014 part of the reason <code>unsafe</code> is needed.</p>\n\n<p>You either need to use <code>mem::forget</code>, as shown in <a href=\"https://stackoverflow.com/q/39224904/155423\">How to expose a Rust `Vec&lt;T&gt;` to FFI?</a> (and then you need to prevent leaking the memory somehow), or you need to take a reference to the data instead of taking the raw pointer.</p>\n"}], "owner": {"reputation": 135, "user_id": 6624054, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209038135182012/picture?type=large", "display_name": "Tomislav Nekic", "link": "https://stackoverflow.com/users/6624054/tomislav-nekic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 57666314, "answer_count": 1, "score": 0, "last_activity_date": 1566865622, "creation_date": 1566843940, "last_edit_date": 1566844234, "question_id": 57663035, "link": "https://stackoverflow.com/questions/57663035/how-to-create-a-subscription-for-events-in-windows-using-rust-and-the-winapi-cra", "title": "How to create a subscription for events in Windows using Rust and the winapi crate?", "body": "<p>I'm trying to subscribe to Windows events using <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winevt/nf-winevt-evtsubscribe\" rel=\"nofollow noreferrer\"><code>EvtSubscribe</code></a> from <a href=\"https://docs.rs/winapi/0.3.7/winapi/um/winevt/fn.EvtSubscribe.html\" rel=\"nofollow noreferrer\">the winapi crate</a>, but I'm getting <code>ERROR_INVALID_PARAMETER</code>.</p>\n\n<p>I can not find an example in Rust, but did find a <a href=\"https://docs.microsoft.com/en-us/windows/win32/wes/subscribing-to-events\" rel=\"nofollow noreferrer\">C++ example</a>.</p>\n\n<p>My code that produces <code>ERROR_INVALID_PARAMETER</code>:</p>\n\n<pre><code>fn main() {\n    unsafe {\n        let mut callback: winapi::um::winevt::EVT_SUBSCRIBE_CALLBACK = None;\n        let mut session = std::ptr::null_mut();\n        let mut signal_event = std::ptr::null_mut();\n\n        let mut bookmark = std::ptr::null_mut();\n        let mut context = std::ptr::null_mut();\n        let channel_path = \"Security\";\n        let channel_path: winnt::LPWSTR = to_wchar(channel_path);\n        let query = \"Event/System[EventID=4624]\";\n        let query: winnt::LPWSTR = to_wchar(query);\n\n        let event_handle = winevt::EvtSubscribe(\n            session,\n            signal_event,\n            channel_path,\n            query,\n            bookmark,\n            context,\n            callback,\n            winevt::EvtSubscribeStartAtOldestRecord,\n        );\n\n        //println!(\"{:?}\", &amp;event_handle);\n        println!(\"{:?}\", &amp;winapi::um::errhandlingapi::GetLastError());\n    } //unsafe end\n}\n\nfn to_vec(str: &amp;str) -&gt; Vec&lt;u16&gt; {\n    return OsStr::new(str)\n        .encode_wide()\n        .chain(Some(0).into_iter())\n        .collect();\n}\n\nfn to_wchar(str: &amp;str) -&gt; *mut u16 {\n    return to_vec(str).as_mut_ptr();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1566833661, "post_id": 57660881, "comment_id": 101770970, "body": "Why do your <code>DBAdapter</code> <code>read </code>method` take a <code>self</code> instead of a <code>&amp;mut self</code> ? This involves moving the db adapter, and is probably useless."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1566833831, "post_id": 57660881, "comment_id": 101771066, "body": "Please try to to build a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Too many aspects are missing and might make us guess wrong about what you really try to do. It&#39;s also possible dynamic polymorphism isn&#39;t really the best solution here."}, {"owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1566834296, "post_id": 57660881, "comment_id": 101771263, "body": "Thanks, I appreciate any advice to reduce this example. In fact, I tried to do the minimal example but I don&#39;t know how to remove more not necessary code. About the solution, sorry but I would be against, I am asking how to apply dynamic polymorphism not if it is the best solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1566834613, "post_id": 57660881, "comment_id": 101771417, "body": "Since you were asking about how to produce a MRE, here&#39;s my copy-paste comment: It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57660881/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 6, "last_activity_date": 1566837045, "last_edit_date": 1566837045, "creation_date": 1566833784, "answer_id": 57660954, "question_id": 57660881, "link": "https://stackoverflow.com/questions/57660881/trying-to-apply-polymorphism-with-box-has-the-error-cannot-move-a-value/57660954#57660954", "title": "Trying to apply polymorphism with Box&lt;_&gt; has the error &quot;cannot move a value ... the size cannot be statically determined&quot;", "body": "<p>Your <code>read</code> method takes the (unsized) value instead of taking a reference (whose size is always the same).</p>\n\n<p>You can solve the problem by changing the contract of <code>DBAdapter</code></p>\n\n<p>from</p>\n\n<pre><code>fn read(self) -&gt; Vec&lt;Post&gt; {\n</code></pre>\n\n<p>to </p>\n\n<pre><code>fn read(&amp;self) -&gt; Vec&lt;Post&gt; {\n//      ^--- added the ampersand\n</code></pre>\n\n<p>(depending on your implementation you might need <code>&amp;mut</code>)</p>\n"}], "owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 716, "favorite_count": 0, "accepted_answer_id": 57660954, "answer_count": 1, "score": 2, "last_activity_date": 1566837045, "creation_date": 1566833469, "last_edit_date": 1566834487, "question_id": 57660881, "link": "https://stackoverflow.com/questions/57660881/trying-to-apply-polymorphism-with-box-has-the-error-cannot-move-a-value", "title": "Trying to apply polymorphism with Box&lt;_&gt; has the error &quot;cannot move a value ... the size cannot be statically determined&quot;", "body": "<p>I am applying the polymorphism <a href=\"https://stackoverflow.com/questions/28219519/are-polymorphic-variables-allowed\">solution</a> in Rust to my problem. I would like to use this solution with <code>Box&lt;_&gt;</code> as it seems the most straight and simple, but it doesn't work.</p>\n\n<pre><code>#[derive(Clone, Copy)]\npub struct NewPost;\n\n#[derive(Clone, Copy)]\npub struct Post;\n\n#[derive(Clone, Copy)]\npub struct PgConnection;\n\n#[derive(Clone, Copy)]\npub struct DBPost;\n\npub trait DBAdapter {\n    fn create(self, post: NewPost) -&gt; Post;\n    fn read(self) -&gt; Vec&lt;Post&gt;;\n}\n\nimpl DBPost {\n    // DATABASE classes\n    pub fn establish_connection(self) -&gt; PgConnection {\n        unimplemented!()\n    }\n}\n\nimpl DBAdapter for DBPost {\n    fn create(self, _post: NewPost) -&gt; Post {\n        unimplemented!()\n    }\n\n    fn read(self) -&gt; Vec&lt;Post&gt; {\n        unimplemented!()\n    }\n}\n\nstruct GetPostsCase {\n    db: Box&lt;dyn DBAdapter&gt;,\n}\n\nimpl GetPostsCase {\n    pub fn new(db: Box&lt;dyn DBAdapter&gt;) -&gt; GetPostsCase {\n        GetPostsCase { db: db }\n    }\n\n    pub fn run(&amp;self) -&gt; Vec&lt;Post&gt; {\n        let result = self.db.read();\n        result\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type dyn DBAdapter: the size of dyn DBAdapter cannot be statically determined\n  --&gt; src/lib.rs:45:22\n   |\n45 |         let result = self.db.read();\n   |                      ^^^^^^^\n\nerror[E0507]: cannot move out of `*self.db` which is behind a shared reference\n  --&gt; src/lib.rs:45:22\n   |\n45 |         let result = self.db.read();\n   |                      ^^^^^^^ move occurs because `*self.db` has type `dyn DBAdapter`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust", "cross-compiling", "ffi", "musl"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1567006575, "post_id": 57695825, "comment_id": 101835958, "body": "<i>I usually don&#39;t bother with cross compilation</i> \u2014 the true answer. Even easier, just use a CI provider that supports Windows / Linux / macOS and build there, uploading the binaries somewhere."}, {"owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "edited": false, "score": 0, "creation_date": 1567098015, "post_id": 57695825, "comment_id": 101871525, "body": "This was very, VERY helpful and even if in the end (maybe) I won&#39;t use cross compilation by your recommendation, your examples helped me to learn a lot."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1567098747, "post_id": 57695825, "comment_id": 101871867, "body": "There was a typo, check the last edit (.so -&gt; .a in case of static). Also check this <a href=\"https://github.com/alexcrichton/rust-ffi-examples\" rel=\"nofollow noreferrer\">repo</a>, examples of Rust &amp; FFI."}, {"owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "edited": false, "score": 1, "creation_date": 1567104790, "post_id": 57695825, "comment_id": 101874263, "body": "@zrzka I was able to successfully compile <code>cdylib</code> library and use it with dynamic linking from Ruby and PHP - which was my actual goal. As for the crate type, I assumed this was the right choice based on: <a href=\"https://doc.rust-lang.org/reference/linkage.html#linkage\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/linkage.html#linkage</a>"}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 4, "last_activity_date": 1567098581, "last_edit_date": 1567098581, "creation_date": 1567006334, "answer_id": 57695825, "question_id": 57655697, "link": "https://stackoverflow.com/questions/57655697/cross-compile-and-link-a-dynamic-library-cdylib-on-macos-for-linux-with-cargo/57695825#57695825", "title": "Cross-compile and link a dynamic library (cdylib) on macOS for Linux with cargo and rust", "body": "<h2>Questions</h2>\n\n<blockquote>\n  <p>I have a Rust library that exposes few functions for <code>FFI</code>. Therefore I must set crate-type to <code>cdylib</code>.</p>\n</blockquote>\n\n<p>From where did you get this information? You can create either dynamic library (<code>.so</code>) or a static library (<code>.a</code>). Alex has a repository with lot of examples: <a href=\"https://github.com/alexcrichton/rust-ffi-examples\" rel=\"nofollow noreferrer\">rust-ffi-examples</a>.</p>\n\n<p><a href=\"https://www.musl-libc.org\" rel=\"nofollow noreferrer\">musl</a> is used in situations where you do want to create a binary, which is statically linked and has no dependencies at all (<code>staticlib</code>). Everything's inside binary. You throw it at the Linux box and it will work.</p>\n\n<p>Dynamic linking is used in situations where you know that all the dependencies will be met, you want smaller binaries, etc. (<code>cdylib</code>). But, you have to be sure that the dependencies are really there otherwise it won't work.</p>\n\n<h2>Cross compilation</h2>\n\n<p>I usually don't bother with cross compilation, because it can be very tricky if you need to dynamically link against other Linux libraries. For these cases, I've got:</p>\n\n<ul>\n<li>Linux installed in the VMware Fusion,</li>\n<li>Docker for Mac installed with Linux image inside.</li>\n</ul>\n\n<p>There're many ways how to achieve what you want. See @Shepmaster comment: use CI and upload build artifacts somewhere.</p>\n\n<p>Do you really need cross compilation? Isn't there any other way how to achieve your goal? Avoid it when possible.</p>\n\n<h2>Dymamic library</h2>\n\n<h3>Toolchain</h3>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ brew tap SergioBenitez/osxct\n$ brew install x86_64-unknown-linux-gnu\n$ rustup target add x86_64-unknown-linux-gnu\n</code></pre>\n\n<p>Add following lines to the <code>~/.cargo/config</code>:</p>\n\n<pre><code>[target.x86_64-unknown-linux-gnu]\nlinker = \"x86_64-unknown-linux-gnu-gcc\"\n</code></pre>\n\n<h3>Sample Rust library</h3>\n\n<p><code>Cargo.toml</code> content:</p>\n\n<pre><code>[package]\nname = \"sample\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p><code>src/lib.rs</code> content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern fn hello() {\n    println!(\"Rust here\");\n}\n</code></pre>\n\n<h3>Compile &amp; check</h3>\n\n<p>Compile with:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo build --release --target x86_64-unknown-linux-gnu\n</code></pre>\n\n<p>Check the output:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ file target/x86_64-unknown-linux-gnu/release/libsample.so \ntarget/x86_64-unknown-linux-gnu/release/libsample.so: ELF 64-bit LSB pie executable x86-64, version 1 (SYSV), dynamically linked, with debug_info, not stripped\n</code></pre>\n\n<p>Check library symbols:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>x86_64-unknown-linux-gnu-nm -D target/x86_64-unknown-linux-gnu/release/libsample.so | grep hello\n0000000000003900 T hello\n</code></pre>\n\n<h3>Test on the Linux box</h3>\n\n<p>Copy <code>target/x86_64-unknown-linux-gnu/release/libsample.so</code> to your Linux box.</p>\n\n<p><strong>Manual loading</strong></p>\n\n<p><code>sample.c</code> content:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;dlfcn.h&gt;\n\nint main(int argc, char**argv) {\n    void *lib;\n    void (*hello)(void);\n    char *error;\n\n    lib = dlopen(\"./libsample.so\", RTLD_NOW);\n    if (!lib) {\n        fprintf(stderr, \"%s\\n\", dlerror());\n        exit(-1);\n    }\n    dlerror();\n\n    *(void **)(&amp;hello) = dlsym(lib, \"hello\");\n\n    if ((error = dlerror()) != NULL) {\n        fprintf(stderr, \"%s\\n\", error);\n        dlclose(lib);\n        exit(-1);\n    }\n\n    (*hello)();\n\n    dlclose(lib);\n    exit(0);\n}\n</code></pre>\n\n<p>Compile with <code>gcc -rdynamic -o sample sample.c -ldl</code> and run it:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ ./sample\nRust here\n</code></pre>\n\n<p>Check that it's dynamically linked:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ ldd ./sample\n    linux-vdso.so.1 (0x00007ffe609eb000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fc7bdd69000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fc7bd978000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007fc7be16f000)\n</code></pre>\n\n<p><strong>Dynamic linking</strong></p>\n\n<p><code>sample.c</code> content:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern void hello(void);\n\nint main(int argc, char **argv) {\n    hello();\n}\n</code></pre>\n\n<p>Compile with <code>gcc sample.c -o sample -lsample -L.</code> and run it:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ LD_LIBRARY_PATH=. ./sample\nRust here\n</code></pre>\n\n<p>Check that it's dynamically linked:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ LD_LIBRARY_PATH=. ldd ./sample\n    linux-vdso.so.1 (0x00007ffc6fef6000)\n    libsample.so =&gt; ./libsample.so (0x00007f8601ba3000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f86017b2000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f86015ae000)\n    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f86013a6000)\n    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f8601187000)\n    libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f8600f6f000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f8601fd5000)\n</code></pre>\n\n<h2>Static library</h2>\n\n<h3>Toolchain</h3>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ rustup target add x86_64-unknown-linux-musl\n$ brew install filosottile/musl-cross/musl-cross\n</code></pre>\n\n<p>Add following lines to the <code>~/.cargo/config</code>:</p>\n\n<pre><code>[target.x86_64-unknown-linux-musl]\nlinker = \"x86_64-linux-musl-gcc\"\n</code></pre>\n\n<h3>Sample Rust library</h3>\n\n<p><code>Cargo.toml</code> content:</p>\n\n<pre><code>[package]\nname = \"sample\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"staticlib\"]\n</code></pre>\n\n<p><code>src/lib.rs</code> content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = \"staticlib\"]\n\n#[no_mangle]\npub extern fn hello() {\n    println!(\"Rust here\");\n}\n</code></pre>\n\n<h3>Compile</h3>\n\n<p>Compile with:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo build --release --target x86_64-unknown-linux-musl\n</code></pre>\n\n<h3>Test on the Linux box</h3>\n\n<p>Copy <code>target/x86_64-unknown-linux-musl/release/libsample.a</code> to your Linux box.</p>\n\n<p><code>sample.c</code> content:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern void hello(void);\n\nint main(int argc, char **argv) {\n    hello();\n}\n</code></pre>\n\n<p>Compile with <code>gcc sample.c libsample.a -o sample</code> and run it:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ ./sample\nRust here\n</code></pre>\n\n<p>Check that it's statically linked:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ ldd ./sample\n    statically linked\n</code></pre>\n"}], "owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1169, "favorite_count": 0, "accepted_answer_id": 57695825, "answer_count": 1, "score": 1, "last_activity_date": 1567107642, "creation_date": 1566813614, "last_edit_date": 1567107642, "question_id": 57655697, "link": "https://stackoverflow.com/questions/57655697/cross-compile-and-link-a-dynamic-library-cdylib-on-macos-for-linux-with-cargo", "title": "Cross-compile and link a dynamic library (cdylib) on macOS for Linux with cargo and rust", "body": "<p>I have a Rust library that exposes few functions for <code>FFI</code>. I assume I have to set <code>crate-type</code> to <code>cdylib</code> - as I want to call these functions from Ruby and PHP (f.i. via <code>ffi</code> ruby gem).\nBut I have trouble crosscompiling it from OSX to Linux. I tried to follow some <a href=\"https://aws.amazon.com/blogs/opensource/rust-runtime-for-aws-lambda/\" rel=\"nofollow noreferrer\">tutorials</a> that use <code>musl libc</code> - this is for static lib but I haven't found anything else.</p>\n\n<p>So the linker is defined this way:</p>\n\n<pre><code># .cargo/config\n[target.x86_64-unknown-linux-musl]\nlinker = \"x86_64-linux-musl-gcc\"\n</code></pre>\n\n<p>And I tried to compile it with:</p>\n\n<pre><code>cargo build --release --target x86_64-unknown-linux-musl\n</code></pre>\n\n<p>But there's immediate error:</p>\n\n<pre><code>error: cannot produce cdylib for `my-crate-name` as the target `x86_64-unknown-linux-musl` does not support these crate types\n</code></pre>\n\n<p>My question is: what target/linker pair could be used for crosscompiling <code>cdylib</code>? Why musl doesn't support theses crate types? Is it even possible at all?</p>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1566814075, "last_edit_date": 1566814075, "creation_date": 1566813516, "answer_id": 57655664, "question_id": 57655286, "link": "https://stackoverflow.com/questions/57655286/why-is-the-compiler-letting-me-borrow-another-borrow-in-a-box/57655664#57655664", "title": "Why is the compiler letting me borrow another borrow in a box?", "body": "<p>This is a case of <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#more-on-deref-coercion\" rel=\"nofollow noreferrer\"><em>deref coercion</em></a>, but one that is obfuscated by a few other unnecessary parts of the code. The following improvements should be made here:</p>\n\n<ol>\n<li>The <code>mut</code> modifier on variable <code>x</code> is not needed because it is never modified.</li>\n<li>The borrow of <code>y</code> in <code>Box::new(&amp;mut y)</code> does not have to be mutable because the variable holds an immutable reference. </li>\n<li>The <code>println!</code> implementation also knows to print values behind references, so the explicit <code>*</code> is not needed. </li>\n</ol>\n\n<p>Then, we get the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() { \n    let x = 456; \n    { \n        let mut y = Box::new(&amp;x); \n        y = Box::new(&amp;y); \n        println!(\"GOT {}\", y);\n    } \n}\n</code></pre>\n\n<p><code>y</code> is a variable of type <code>Box&lt;&amp;i32&gt;</code> which is initially bound to a box created in the outer scope. The subsequent assignment to a new box works because the <code>&amp;y</code>, of type <code>&amp;Box&lt;&amp;i32&gt;</code>, is coerced to <code>&amp;&amp;i32</code>, which can then be put in the box by automatically dereferencing the first borrow. This coercion is required because the variable <code>x</code> can only be assigned values of the same <code>Box&lt;&amp;i32&gt;</code> type.</p>\n\n<p>The lifetime of the reference inside both boxes also ended up being the same, because they refer to the same value in <code>x</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/53341819/what-is-the-relation-between-auto-dereferencing-and-deref-coercion\">What is the relation between auto-dereferencing and deref coercion?</a></li>\n</ul>\n"}], "owner": {"reputation": 203, "user_id": 764576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/626b627122ac22614a6d64e5efd79fb8?s=128&d=identicon&r=PG", "display_name": "redjamjar", "link": "https://stackoverflow.com/users/764576/redjamjar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566814075, "creation_date": 1566812064, "last_edit_date": 1566813765, "question_id": 57655286, "link": "https://stackoverflow.com/questions/57655286/why-is-the-compiler-letting-me-borrow-another-borrow-in-a-box", "title": "Why is the compiler letting me borrow another borrow in a box?", "body": "<p>I'm wondering if someone can help me understand why this program behaves as it does:</p>\n\n<pre><code>fn main() { \n    let mut x = 456; \n    { \n        let mut y = Box::new(&amp;x); \n        y = Box::new(&amp;mut y); \n        println!(\"GOT {}\",*y);\n    } \n}\n</code></pre>\n\n<p>This program compiles under rust 1.35.0 (both 2015 and 2018 editions), and prints</p>\n\n<pre><code>GOT 456\n</code></pre>\n\n<p>But, I'm confused what's going on here.  I'm guessing that this is an example of an <em>auto-dereference</em>.  So, in reality, it looks like this:</p>\n\n<pre><code>fn main() { \n    let mut x = 456; \n    { \n        let mut y = Box::new(&amp;x); \n        y = Box::new(&amp;mut *y); \n        println!(\"GOT {}\",*y);\n    } \n}\n</code></pre>\n\n<p>Is that it?</p>\n"}, {"tags": ["exception", "rust", "iterator"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1566797171, "post_id": 57652151, "comment_id": 101754472, "body": "Did you read this? <a href=\"https://doc.rust-lang.org/rust-by-example/error/iter_result.html#fail-the-entire-operation-with-collect\" rel=\"nofollow noreferrer\">doc.rust-lang.org/rust-by-example/error/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566835545, "post_id": 57652151, "comment_id": 101771758, "body": "a vec of vec of vec is the worst thing to do, also call the 3 stars programmers in C. you should use ndarray"}], "answers": [{"comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566825513, "post_id": 57652228, "comment_id": 101766843, "body": "By the way, after I passed this to <code>rustfmt</code>, it looks even more spaghetti than using three for loops."}], "tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 2, "last_activity_date": 1566839745, "last_edit_date": 1566839745, "creation_date": 1566797445, "answer_id": 57652228, "question_id": 57652151, "link": "https://stackoverflow.com/questions/57652151/how-to-raise-error-deep-in-an-iteration-chain-without-turning-the-whole-thing-in/57652228#57652228", "title": "How to raise error deep in an iteration chain without turning the whole thing into nested for loops?", "body": "<p><code>Result&lt;FromIterator&lt;Item = T&gt;, E&gt;</code> implements <code>FromIterator&lt;Result&lt;T, E&gt;&gt;</code>. You can collect an iterator of <code>Result</code>s into a <code>Result</code> of a collection and use <code>?</code> on the <code>Result</code>.</p>\n\n<p>Moreover, since it is <code>FromIterator</code>, you can recursively collect the result, directly collecting an iterator of <code>Result</code>s into a <code>Result</code> of <code>Vec</code>.</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), &amp;'static str&gt; {\n    let input = vec![vec![vec![vec![1.0, 2.0]]]];\n    let output: Vec&lt;Vec&lt;Vec&lt;(f64, f64)&gt;&gt;&gt; = input\n        .iter()\n        .map(|r1| {\n            r1.iter()\n                .map(|r2| {\n                    r2.iter()\n                        .map(|r3| {\n                            if r3.len() &gt;= 2 {\n                                Ok((r3[0], r3[1]))\n                            } else {\n                                Err(\"Bad\")\n                            }\n                        })\n                        .collect::&lt;Result&lt;Vec&lt;_&gt;, &amp;str&gt;&gt;()\n                })\n                .collect::&lt;Result&lt;Vec&lt;_&gt;, &amp;str&gt;&gt;()\n        })\n        .collect::&lt;Result&lt;Vec&lt;_&gt;, &amp;str&gt;&gt;()?;\n\n    Ok(())\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=396044c9339799267f6ae5c86cbc9efa\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "closed_date": 1566839499, "accepted_answer_id": 57652228, "answer_count": 1, "score": 0, "last_activity_date": 1566839745, "creation_date": 1566796902, "question_id": 57652151, "link": "https://stackoverflow.com/questions/57652151/how-to-raise-error-deep-in-an-iteration-chain-without-turning-the-whole-thing-in", "closed_reason": "Duplicate", "title": "How to raise error deep in an iteration chain without turning the whole thing into nested for loops?", "body": "<p>I have a nested <code>Vec</code> structure where I need to convert the deepest <code>Vec</code> into a tuple. Consider the following example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let input = vec![vec![vec![vec![1.0, 2.0]]]];\n    let output: Vec&lt;Vec&lt;Vec&lt;(f64, f64)&gt;&gt;&gt; = input\n        .iter()\n        .map(|r1| {\n            r1.iter()\n                .map(|r2| r2.iter().map(|r3| (r3[0], r3[1])).collect())\n                .collect()\n        })\n        .collect();\n}\n</code></pre>\n\n<p>I make the assumption that there are at least two values in the deepest vector, but if there aren't, then this code will fail. I'd like to have <code>main</code> return an error to indicate this, but because the indexing is in the iterator chain, I cannot simply use <code>?</code> or return an error.</p>\n\n<p>I'd like to <em>not</em> turn this whole thing into for loops. Assuming this, what are my options and what is idiomatic?</p>\n"}, {"tags": ["rust", "hashmap"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566780402, "post_id": 57649372, "comment_id": 101751919, "body": "Yes but this look strange, and what case do you have two exact same size and key map ? why not create contact directly without create the two past map ?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566785168, "post_id": 57649372, "comment_id": 101752520, "body": "Well, I take that such invariance is just the premise of OP."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1566780015, "last_edit_date": 1566780015, "creation_date": 1566763931, "answer_id": 57649372, "question_id": 57649201, "link": "https://stackoverflow.com/questions/57649201/how-can-i-create-a-hashmap-with-values-moved-from-two-other-hashmaps/57649372#57649372", "title": "How can I create a HashMap with values moved from two other HashMaps?", "body": "<p>The <code>zip</code> is your friend here. But the \"business logic\" here dictates that it only works for a sorted map. So you if can use <code>BTreeMap</code> instead of <code>HashMap</code>, the following would work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut phones: BTreeMap&lt;&amp;str, String&gt; = BTreeMap::new();\n    ...\n\n    let mut addresses: BTreeMap&lt;&amp;str, String&gt; = BTreeMap::new();\n    ...\n\n    let contacts: BTreeMap&lt;&amp;str, Contact&gt; = phones\n        .into_iter()\n        .zip(addresses.into_iter())\n        .map(|((name, phone), (_, addr))| {\n            (\n                name,\n                Contact {\n                    phone: phone,\n                    address: addr,\n                },\n            )\n        })\n        .collect();\n\n    println!(\"{:#?}\", contacts);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1566849711, "post_id": 57650844, "comment_id": 101777282, "body": "I like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ebab664c760d05b98ddd075895c1acab\" rel=\"nofollow noreferrer\">the <code>flat_map</code> version</a>, myself."}, {"owner": {"reputation": 3388, "user_id": 1292791, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/D2eE2.jpg?s=128&g=1", "display_name": "prehistoricpenguin", "link": "https://stackoverflow.com/users/1292791/prehistoricpenguin"}, "edited": false, "score": 0, "creation_date": 1618109452, "post_id": 57650844, "comment_id": 118501199, "body": "What if some keys belong to <code>phones</code> but does not exist in <code>addresses</code>, I come across with a crash here. But I don&#39;t know to avoid that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3388, "user_id": 1292791, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/D2eE2.jpg?s=128&g=1", "display_name": "prehistoricpenguin", "link": "https://stackoverflow.com/users/1292791/prehistoricpenguin"}, "edited": false, "score": 1, "creation_date": 1618136070, "post_id": 57650844, "comment_id": 118505579, "body": "@prehistoricpenguin What do you want to do with those keys though? Try Shepmaster&#39;s version with <code>flat_map</code>, which will simply skip them."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1566821042, "last_edit_date": 1566821042, "creation_date": 1566781964, "answer_id": 57650844, "question_id": 57649201, "link": "https://stackoverflow.com/questions/57649201/how-can-i-create-a-hashmap-with-values-moved-from-two-other-hashmaps/57650844#57650844", "title": "How can I create a HashMap with values moved from two other HashMaps?", "body": "<p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"noreferrer\"><code>HashMap::get</code></a> returns an <code>Option&lt;&amp;V&gt;</code>, that is, a reference to the value inside the map. You cannot move out of a reference with <code>*</code> unless <code>V</code> implements <code>Copy</code>. You need a different method that moves the value out of the map, which is <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.remove\" rel=\"noreferrer\"><code>HashMap::remove</code></a> (note that it returns <code>Option&lt;V&gt;</code>).</p>\n\n<p>If you try to rewrite the same algorithm using <code>remove</code>, you'll get a different error:</p>\n\n<pre><code>    let contacts: HashMap&lt;&amp;str, Contact&gt; = phones.keys().fold(HashMap::new(), |mut acc, value| {\n        acc.entry(value).or_insert(Contact {\n            phone: phones.remove(value).unwrap(),\n            address: addresses.remove(value).unwrap(),\n        });\n        acc\n    });\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `phones` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:22:79\n   |\n22 |     let contacts: HashMap&lt;&amp;str, Contact&gt; = phones.keys().fold(HashMap::new(), |mut acc, value| {\n   |                                            ------        ----                 ^^^^^^^^^^^^^^^^ mutable borrow occurs here\n   |                                            |             |\n   |                                            |             immutable borrow later used by call\n   |                                            immutable borrow occurs here\n23 |         acc.entry(value).or_insert(Contact {\n24 |             phone: phones.remove(value).unwrap(),\n   |                    ------ second borrow occurs due to use of `phones` in closure\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\n</code></pre>\n\n<p>This error is telling you that you can't mutate a data structure while iterating over it, because mutating the data structure may invalidate the iterator. <a href=\"https://stackoverflow.com/q/47737084/3650362\">Sometimes you can solve this with interior mutability</a>, but in this case you don't need to do anything like that. Just call <code>phones.into_iter()</code> to move the phone numbers out of the map while you iterate. Then it's easy to use a <code>map</code> to create <code>(&amp;str, Contact)</code> tuples and, finally, <code>collect</code> it all back into a <code>HashMap</code>.</p>\n\n<pre><code>    let contacts: HashMap&lt;_, _&gt; = phones\n        .into_iter()\n        .map(|(key, phone)| {\n            (\n                key,\n                Contact {\n                    phone,\n                    address: addresses.remove(key).unwrap(),\n                },\n            )\n        })\n        .collect();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e732f8970fc8b386c0236c572b3a38b\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1326, "favorite_count": 1, "accepted_answer_id": 57650844, "answer_count": 2, "score": 6, "last_activity_date": 1566849514, "creation_date": 1566762352, "last_edit_date": 1566849514, "question_id": 57649201, "link": "https://stackoverflow.com/questions/57649201/how-can-i-create-a-hashmap-with-values-moved-from-two-other-hashmaps", "title": "How can I create a HashMap with values moved from two other HashMaps?", "body": "<p>I have two <code>HashMap&lt;&amp;str, String&gt;</code> with the same keys and I wish to create one <code>HashMap</code> with same keys where the values are combined. I do not want to keep references to the first two <code>HashMap</code>s, but want to move the <code>String</code>s to the new <code>HashMap</code>.</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Contact {\n    phone: String,\n    address: String,\n}\n\nfn main() {\n    let mut phones: HashMap&lt;&amp;str, String&gt; = HashMap::new();\n    phones.insert(\"Daniel\", \"798-1364\".into());\n    phones.insert(\"Ashley\", \"645-7689\".into());\n    phones.insert(\"Katie\", \"435-8291\".into());\n    phones.insert(\"Robert\", \"956-1745\".into());\n\n    let mut addresses: HashMap&lt;&amp;str, String&gt; = HashMap::new();\n    addresses.insert(\"Daniel\", \"12 A Street\".into());\n    addresses.insert(\"Ashley\", \"12 B Street\".into());\n    addresses.insert(\"Katie\", \"12 C Street\".into());\n    addresses.insert(\"Robert\", \"12 D Street\".into());\n\n    let contacts: HashMap&lt;&amp;str, Contact&gt; = phones.keys().fold(HashMap::new(), |mut acc, value| {\n        acc.entry(value).or_insert(Contact {\n            phone: *phones.get(value).unwrap(),\n            address: *addresses.get(value).unwrap(),\n        });\n        acc\n    });\n\n    println!(\"{:?}\", contacts);\n}\n</code></pre>\n\n<p>But I have an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of a shared reference\n  --&gt; src/main.rs:24:20\n   |\n24 |             phone: *phones.get(value).unwrap(),\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ move occurs because value has type `std::string::String`, which does not implement the `Copy` trait\n\nerror[E0507]: cannot move out of a shared reference\n  --&gt; src/main.rs:25:22\n   |\n25 |             address: *addresses.get(value).unwrap(),\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ move occurs because value has type `std::string::String`, which does not implement the `Copy` trait\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00d0a797dce8db8e9ab688af386a8be0\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "reply_to_user": {"reputation": 2528, "user_id": 4658169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b351ed2ce7ddde5ab5ac9bd96200a62d?s=128&d=identicon&r=PG&f=1", "display_name": "CuriouslyRecurringThoughts", "link": "https://stackoverflow.com/users/4658169/curiouslyrecurringthoughts"}, "edited": false, "score": 0, "creation_date": 1566763686, "post_id": 57649032, "comment_id": 101749176, "body": "@CuriouslyRecurringThoughts Thanks it works now. I didn&#39;t know that I have to use <code>.join().unwrap()</code> at the if my spawn function."}], "answers": [{"tags": [], "owner": {"reputation": 2528, "user_id": 4658169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b351ed2ce7ddde5ab5ac9bd96200a62d?s=128&d=identicon&r=PG&f=1", "display_name": "CuriouslyRecurringThoughts", "link": "https://stackoverflow.com/users/4658169/curiouslyrecurringthoughts"}, "is_accepted": true, "score": 1, "last_activity_date": 1593029304, "last_edit_date": 1593029304, "creation_date": 1566765323, "answer_id": 57649530, "question_id": 57649032, "link": "https://stackoverflow.com/questions/57649032/returning-a-value-from-a-function-that-spawns-threads/57649530#57649530", "title": "Returning a value from a function that spawns threads", "body": "<p>The first problem is the following line:</p>\n<pre><code>text_feed.pop().unwrap()\n</code></pre>\n<p>You want an expression in order to return something, so you should remove the <code>;</code>.</p>\n<p>Once you do so, you hit the second problem: the return value  of <code>thread::scope</code> will be of type <code>crossbeam_utils::thread::ScopedJoinHandle</code> but you want a <code>String</code>. The <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/struct.ScopedJoinHandle.html\" rel=\"nofollow noreferrer\">docs</a> states that it has a <code>join()</code>.</p>\n<p>Putting it all together we get:</p>\n<pre><code>use crossbeam_utils::thread; // 0.7.2\nuse std::sync::{Arc, Mutex};\n\npub struct MyText {\n    my_text: Mutex&lt;Vec&lt;String&gt;&gt;,\n}\n\npub trait MyTextOptions {\n    fn get(&amp;self) -&gt; String;\n}\n\nimpl MyTextOptions for MyText {\n    fn get(&amp;self) -&gt; String {\n        let int_text = Arc::new(self);\n        thread::scope(|scope| {\n            scope\n                .spawn(|_| {\n                    let mut text_feed = int_text.my_text.lock().unwrap();\n                    text_feed.pop().unwrap()\n                })\n                .join()\n                .unwrap()\n        })\n        .unwrap()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1431, "favorite_count": 0, "accepted_answer_id": 57649530, "answer_count": 1, "score": 0, "last_activity_date": 1593029304, "creation_date": 1566760827, "last_edit_date": 1593029205, "question_id": 57649032, "link": "https://stackoverflow.com/questions/57649032/returning-a-value-from-a-function-that-spawns-threads", "title": "Returning a value from a function that spawns threads", "body": "<p>I'm trying to return a <code>String</code> using <code>pop()</code> in a thread:</p>\n<pre><code>use crossbeam_utils::thread; // 0.7.2\nuse std::sync::{Arc, Mutex};\n\npub struct MyText {\n    my_text: Mutex&lt;Vec&lt;String&gt;&gt;,\n}\n\npub trait MyTextOptions {\n    fn get(&amp;self) -&gt; String;\n}\n\nimpl MyTextOptions for MyText {\n    fn get(&amp;self) -&gt; String {\n        let mut int_text = Arc::new(self);\n        thread::scope(|scope| {\n            scope.spawn(|_| {\n                let mut text_feed = int_text.my_text.lock().unwrap();\n                text_feed.pop().unwrap()\n            });\n        })\n        .unwrap()\n    }\n}\n</code></pre>\n<p>When I try to run it I get:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:15:9\n   |\n13 |       fn get(&amp;self) -&gt; String {\n   |                        ------ expected `std::string::String` because of return type\n14 |           let mut int_text = Arc::new(self);\n15 | /         thread::scope(|scope| {\n16 | |             scope.spawn(|_| {\n17 | |                 let mut text_feed = int_text.my_text.lock().unwrap();\n18 | |                 text_feed.pop().unwrap()\n19 | |             });\n20 | |         })\n21 | |         .unwrap()\n   | |_________________^ expected struct `std::string::String`, found `()`\n</code></pre>\n<p>I don't understand why it is not returning the popped <code>String</code> value in <code>text_feed.pop().unwrap()</code>.</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566755402, "post_id": 57647990, "comment_id": 101747381, "body": "How do you expect to use it? You can&#39;t pass a rust struct to an exported function anyway."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566760930, "post_id": 57647990, "comment_id": 101748597, "body": "Well that&#39;s a whole different story, and the plan is to serialize structs to linear memory and work from there... But in the reduced examples as you can see the in the signature I pass two u32 (should be i32 I think) and return one u32. If I get that working I&#39;ll take it from there."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566810379, "post_id": 57647990, "comment_id": 101759530, "body": "Are you using <code>wasm-bindgen</code> or raw <code>wasm</code> bindings?"}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1566923528, "post_id": 57647990, "comment_id": 101804587, "body": "No wasm-bindgen in this project (no JS involved) just what you see above for the rust-wasm side, then loading the wasm module and executing it via wasmi (which works fine if the function is exported)."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566933537, "post_id": 57647990, "comment_id": 101808613, "body": "But how do you intend to call a method of a struct from wasm? As far as I know, wasm interfaces are just like C ones, that is plain namespaceless functions."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1566988020, "post_id": 57647990, "comment_id": 101825007, "body": "Yes, but a .rs file with a &#39;pub extern &quot;C&quot; fn XXX&#39; could make XXX an exported function, no? Or it could call it StructName_XXX, or some such scheme."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567008028, "post_id": 57647990, "comment_id": 101836745, "body": "What I usually do is to write a free function <code>pub extern &quot;C&quot; fn StructName_xxx(s: &amp;StructName) { s.xxx() }</code> that forwards to the non-extern member function. I&#39;ve never seen an extern member function and I doubt that it can be done. In fact I&#39;m surprised that you do not get a compiler error."}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 412, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1566752219, "creation_date": 1566752219, "question_id": 57647990, "link": "https://stackoverflow.com/questions/57647990/how-to-get-rust-struct-associated-function-struct-method-or-trait-method-to-be", "title": "How to get rust struct associated function, struct method or trait method to be exported function in wasm32", "body": "<p>I am trying to create a series of functions (that are implementations of a trait).\nEach one will get compiled to a wasm module. Later each module is loaded and the same function called (by name) on each of them.</p>\n\n<p>I'd like a function in wasm that is a trait method, \nas I also compile and call the function via trait objects when\nall is compiled to rust also.</p>\n\n<p>I couldn't get it working with a trait method, so I simplified\ndown to just an associated function (or method, same problem) on a struct.</p>\n\n<p>It seems that when I implement a function on a struct, the function is\nnot compiled to wasm and/or not exported.</p>\n\n<p>Anyone know how to achieve what I describe above?</p>\n\n<p><code>Cargo.toml</code> is:</p>\n\n<pre><code>[package]\nname = \"add_function\"\nversion = \"0.0.1\"\n\n[lib]\nname = \"add_function\"\ncrate-type = [\"cdylib\"]\npath = \"src/add_function.rs\"\n</code></pre>\n\n<p>and I compile to wasm32-unknown-unknown (via a .cargo/config file)</p>\n\n<h1>Standalone Function</h1>\n\n<h2>add_function.rs</h2>\n\n<pre><code>pub struct Add;\n\n#[no_mangle]\npub extern \"C\" fn run_wasm(a: u32, b: u32) -&gt; u32 {\n // removed for brevity\n}\n\nimpl Add { // this can be removed - just to make more similar to second example below\n}\n</code></pre>\n\n<h2>Output from wasm-objdump</h2>\n\n<pre><code>...\nExport[5]:\n - memory[0] -&gt; \"memory\"\n - global[1] -&gt; \"__heap_base\"\n - global[2] -&gt; \"__data_end\"\n - global[3] -&gt; \"__rustc_debug_gdb_scripts_section__\"\n - func[40] &lt;run_wasm&gt; -&gt; \"run_wasm\"\n...\n</code></pre>\n\n<h1>Function in impl (Associated Function)</h1>\n\n<h2>add_function.rs</h2>\n\n<pre><code>pub struct Add;\n\nimpl Add {\n    #[no_mangle]\n    pub extern \"C\" fn run_wasm(a: u32, b: u32) -&gt; u32 {\n        // removed for brevity\n        // adding \"&amp;self\" to make a method does not change anything\n    }\n}\n</code></pre>\n\n<h2>Output from wasm-obj-dump</h2>\n\n<pre><code>Export[4]:\n - memory[0] -&gt; \"memory\"\n - global[1] -&gt; \"__heap_base\"\n - global[2] -&gt; \"__data_end\"\n - global[3] -&gt; \"__rustc_debug_gdb_scripts_section__\"\n</code></pre>\n"}, {"tags": ["string", "rust", "floating-point", "type-conversion"], "comments": [{"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1566749711, "post_id": 57647601, "comment_id": 101746144, "body": "what are the rules regarding commas on 1,000s?"}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 2, "creation_date": 1566749890, "post_id": 57647601, "comment_id": 101746175, "body": "cos if you&#39;re only expecting a <i>single</i> comma or full stop, you could just find and replace commas to full stops, using <a href=\"https://stackoverflow.com/a/34606128/5986907\">stackoverflow.com/a/34606128/5986907</a>, then parse to float"}, {"owner": {"reputation": 73, "user_id": 1330723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c5ad01abe88eb918f56b78f2b3e4747e?s=128&d=identicon&r=PG", "display_name": "Luckystrik3", "link": "https://stackoverflow.com/users/1330723/luckystrik3"}, "reply_to_user": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1566751504, "post_id": 57647601, "comment_id": 101746524, "body": "thousands separators are dots here, but I will just remove those in advance and then use the replace. It&#39;d still be nice to have it use the actual local conventions"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566755823, "post_id": 57647601, "comment_id": 101747493, "body": "So how do you expect to disambiguate 30.123 and 30,123?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1566766179, "post_id": 57647601, "comment_id": 101749746, "body": "@SOFe he most likely doesn&#39;t care because his locale doesn&#39;t use <code>.</code> as a decimal separator."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1566766208, "post_id": 57647601, "comment_id": 101749754, "body": "@Luckystrik3 the standard library isn&#39;t locale-aware by design. You should pick a localization crate."}, {"owner": {"reputation": 112912, "user_id": 2410359, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/pIl9T.png?s=128&g=1", "display_name": "chux - Reinstate Monica", "link": "https://stackoverflow.com/users/2410359/chux-reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1566767787, "post_id": 57647601, "comment_id": 101750072, "body": "Copy the string and replace <code>,</code> with <code>.</code>.  Proceed as usual."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566811593, "post_id": 57647601, "comment_id": 101760153, "body": "Thae are third party crates for that, such as <a href=\"https://crates.io/crates/num-format\" rel=\"nofollow noreferrer\">num-format</a>."}], "answers": [{"tags": [], "owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "is_accepted": true, "score": 1, "last_activity_date": 1566812573, "creation_date": 1566812573, "answer_id": 57655420, "question_id": 57647601, "link": "https://stackoverflow.com/questions/57647601/how-to-get-strings-parsed-to-floats-with-comma-as-decimal-separator/57655420#57655420", "title": "How to get strings parsed to floats with comma as decimal separator", "body": "<p>Maybe you could just replace the comma with a dot before you pass it to parse.</p>\n\n<pre><code>fn main() {\n    let input = \"30,6\";\n    let val: f32 = input.trim().replace(',', \".\").parse().unwrap();\n\n    dbg!(val);\n}\n</code></pre>\n\n<p>Works fine for me.</p>\n"}], "owner": {"reputation": 73, "user_id": 1330723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c5ad01abe88eb918f56b78f2b3e4747e?s=128&d=identicon&r=PG", "display_name": "Luckystrik3", "link": "https://stackoverflow.com/users/1330723/luckystrik3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 0, "accepted_answer_id": 57655420, "answer_count": 1, "score": 1, "last_activity_date": 1566812573, "creation_date": 1566749082, "question_id": 57647601, "link": "https://stackoverflow.com/questions/57647601/how-to-get-strings-parsed-to-floats-with-comma-as-decimal-separator", "title": "How to get strings parsed to floats with comma as decimal separator", "body": "<p>I am trying to parse a string with the parse() function that is essentially a user input to a f32. There can be floating numbers entered with a comma as a decimal separator - how can I get that parsed as a f32?</p>\n\n<p>So far parsing strings to floats works fine as long as the input is in the format \"30\" or \"30.1\" - as soon as the input is \"30,1\", I get a panic at Result::unwrap().\nIs there a way to get parse to accept \",\" as a decimal separator?</p>\n\n<p>This is my currently used code:</p>\n\n<pre><code>input.trim().parse().unwrap();\n</code></pre>\n\n<p>I expect parse taking \"30\" and \"30,1\" - Best if it would adhere to local decimal conventions</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "edited": false, "score": 0, "creation_date": 1566845398, "post_id": 57648549, "comment_id": 101775540, "body": "Perfect! Thank you. This link was helpful in learning more about this: <a href=\"https://www.worthe-it.co.za/programming/2018/11/18/compile-time-feature-flags-in-rust.html\" rel=\"nofollow noreferrer\">worthe-it.co.za/programming/2018/11/18/&hellip;</a> (and <a href=\"https://web.archive.org/web/20190327193933/https://www.worthe-it.co.za/programming/2018/11/18/compile-time-feature-flags-in-rust.html\" rel=\"nofollow noreferrer\">here&#39;s a mirror</a> since I think it was offline for a bit just now)"}], "tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 3, "last_activity_date": 1566756674, "creation_date": 1566756674, "answer_id": 57648549, "question_id": 57647311, "link": "https://stackoverflow.com/questions/57647311/borrow-of-possibly-uninitialized-variable-error-in-obviously-unreachable-blo/57648549#57648549", "title": "&quot;borrow of possibly uninitialized variable&quot; error in &quot;obviously&quot; unreachable block", "body": "<p>The compiler does not expand constant expressions in the phase for validating lifetime and ownership, so it is not \"obvious\" to the compiler.</p>\n\n<p>If you really don't want to run that block, you might want to use <code>#[cfg]</code> (or the cfg-if crate if you like if syntax).</p>\n\n<pre><code>fn main() {\n    let a: Vec&lt;u32&gt;;\n    #[cfg(a-mode)] {\n        a = vec![1,2,3];\n    }\n    #[cfg(a-mode)] {\n        println!(\"a: {:?}\", a); // error: borrow of possibly uninitialized variable\n    }\n}\n</code></pre>\n\n<p>This way, it will compile both usages without branching at all if a-mode cfg is set, and will not compile either of them otherwise.</p>\n\n<p>The compiler is aware that constant expression conditions never change, but that is handled at a later phase of the compilation for optimizations like removing branching.</p>\n"}], "owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 335, "favorite_count": 0, "accepted_answer_id": 57648549, "answer_count": 1, "score": 0, "last_activity_date": 1566756674, "creation_date": 1566746653, "last_edit_date": 1566755173, "question_id": 57647311, "link": "https://stackoverflow.com/questions/57647311/borrow-of-possibly-uninitialized-variable-error-in-obviously-unreachable-blo", "title": "&quot;borrow of possibly uninitialized variable&quot; error in &quot;obviously&quot; unreachable block", "body": "<p>In the following code example the compiler can work out that the <code>if</code> blocks aren't reachable, and yet it still gives me an error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const A_MODE: bool = false; // I manually edit this to switch \"modes\"\nfn main() {\n    let a: Vec&lt;u32&gt;;\n    if A_MODE {\n        a = vec![1,2,3];\n    }\n    if A_MODE {\n        println!(\"a: {:?}\", a); // error: borrow of possibly uninitialized variable\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6e0cb66de812d85523c8f8ecf16554a\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>I thought that maybe the compiler was really trying to tell me that I need to initialize <code>a</code> at some point, but this compiles fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a: Vec&lt;u32&gt;;\n    println!(\"Finished.\");\n}\n</code></pre>\n\n<p>Is the error just because the Rust compiler isn't smart enough yet, or does this behaviour have some purpose? Is there any simple workaround which results in a similar code structure?</p>\n\n<p>I know that I could restructure the code to make it work, but for my purposes the above structure is the most straight-forward and intuitive. My current work-around is to comment and uncomment code blocks, which isn't fun. Thanks!</p>\n"}, {"tags": ["rust", "find"], "answers": [{"tags": [], "owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "is_accepted": true, "score": 2, "last_activity_date": 1566821982, "creation_date": 1566821982, "answer_id": 57657815, "question_id": 57647279, "link": "https://stackoverflow.com/questions/57647279/list-all-folders-named-test-in-rust-using-fd-find-crate/57657815#57657815", "title": "List all folders named `test` in Rust using `fd-find` crate?", "body": "<p>By the look of it fd-find is not shipped as a library so I guess your best bet would be something like <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\">std::process::Command</a>.</p>\n"}], "owner": {"reputation": 3571, "user_id": 6141587, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/GAMZ3.jpg?s=128&g=1", "display_name": "deadcoder0904", "link": "https://stackoverflow.com/users/6141587/deadcoder0904"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 44, "favorite_count": 0, "accepted_answer_id": 57657815, "answer_count": 1, "score": 1, "last_activity_date": 1566821982, "creation_date": 1566746446, "question_id": 57647279, "link": "https://stackoverflow.com/questions/57647279/list-all-folders-named-test-in-rust-using-fd-find-crate", "title": "List all folders named `test` in Rust using `fd-find` crate?", "body": "<p>I want to list all folders named <code>test</code> when I run my Rust application as a binary.</p>\n\n<p>I want to use <code>fd-find</code> \u2192 <a href=\"https://crates.io/crates/fd-find\" rel=\"nofollow noreferrer\">https://crates.io/crates/fd-find</a></p>\n\n<p>The basic documentation shows how to call it in the terminal but doesn't tell how to call it from a rust file called <code>main.rs</code>.</p>\n\n<p>I am new to Rust so don't know much. Any help appreciated :)</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 6, "last_activity_date": 1566752101, "creation_date": 1566752101, "answer_id": 57647971, "question_id": 57647276, "link": "https://stackoverflow.com/questions/57647276/what-does-where-for-mean-in-rust/57647971#57647971", "title": "What does &quot;where for&quot; mean in Rust?", "body": "<p>This is so-called <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"noreferrer\">higher-ranked trait bounds</a>:</p>\n\n<blockquote>\n  <p>for&lt;'a> can be read as \"for all choices of 'a\"</p>\n</blockquote>\n\n<p>And it is defined by <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0387-higher-ranked-trait-bounds.md\" rel=\"noreferrer\">Rust RFC 0387</a>.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 541, "favorite_count": 0, "accepted_answer_id": 57647971, "answer_count": 1, "score": 7, "last_activity_date": 1566752101, "creation_date": 1566746431, "question_id": 57647276, "link": "https://stackoverflow.com/questions/57647276/what-does-where-for-mean-in-rust", "title": "What does &quot;where for&quot; mean in Rust?", "body": "<p>This SO <a href=\"https://stackoverflow.com/a/54853421/11140945\">answer</a> uses a <code>where</code> syntax I'm unfamiliar with:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn readfile&lt;'a, T: ?Sized&gt;(filename: &amp;str) -&gt; Result&lt;Box&lt;Outer&lt;'a, T&gt;&gt;, Box&lt;std::error::Error&gt;&gt;\nwhere\n    for&lt;'de&gt; T: Deserialize&lt;'de&gt; + 'a\n{\n   ...\n</code></pre>\n\n<p>What does the <code>for</code> mean?</p>\n\n<p>Where is this documented?</p>\n"}, {"tags": ["rust", "api-design", "ownership"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1566741397, "post_id": 57646475, "comment_id": 101744220, "body": "The usual way is to return a <code>&amp;str</code>, but it doesn&#39;t really matter much. The situation is different when <i>accepting</i> immutable string references rather than returning them. In that case, you should generally <a href=\"https://stackoverflow.com/q/40006219\">prefer <code>&amp;str</code> over <code>&amp;String</code></a>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1566767054, "post_id": 57646475, "comment_id": 101749928, "body": "@SvenMarnach oh but it does matter! Returning <code>&amp;String</code> over <code>&amp;str</code> has no advantage for most use cases (unless you really care about being able to access the string&#39;s capacity), but returning <code>&amp;str</code> now would allow him to change the implementation internally in the future to use something other than <code>String</code>  without changing a public interface."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566803332, "post_id": 57646475, "comment_id": 101756463, "body": "@mcarton True, there are a few reasons to use<code>&amp;str</code> as the return type. Other reasons are that <code>&amp;str</code> is more convenient for matching against string literals, and that it sometimes interacts better with type inference for generics. But overall that&#39;s all corner cases in practice."}, {"owner": {"reputation": 2964, "user_id": 7134134, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fzCCW.jpg?s=128&g=1", "display_name": "snnsnn", "link": "https://stackoverflow.com/users/7134134/snnsnn"}, "edited": false, "score": 0, "creation_date": 1568228140, "post_id": 57646475, "comment_id": 102211750, "body": "You can not return reference to String because this will be a dangling pointer: fn bar(&amp;self) -&gt; &amp;String"}], "owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1566740048, "creation_date": 1566740048, "question_id": 57646475, "link": "https://stackoverflow.com/questions/57646475/returning-string-vs-str-from-immutable-accessor-in-rust", "title": "Returning &amp;String vs &amp;str from immutable accessor in Rust", "body": "<p>I am designing a simple struct which groups multiple pieces of owned data together. Once the data is inside the struct, I don't want to expose it to mutation. One of the fields of this struct is a String, I am unsure how I want to expose it through its getter function.</p>\n\n<p>The two ways that jump to mind of doing this are as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    bar: String,\n}\n\nimpl Foo {\n    // Option 1\n    fn bar(&amp;self) -&gt; &amp;String { ... }\n    // Option 2\n    fn bar(&amp;self) -&gt; &amp;str { ... }\n}\n</code></pre>\n\n<p>I am not sure what the cleanest way to design this would be in Rust. Which is better in a general case? What do the two options conceptually represent to a user of the API?</p>\n"}, {"tags": ["rust", "unix-socket"], "answers": [{"comments": [{"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1566748660, "post_id": 57646894, "comment_id": 101745902, "body": "can i not just read <code>1024</code> bytes, even if I do not write them? Seems to work with the python snippet. Why won&#39;t here?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1566749606, "post_id": 57646894, "comment_id": 101746120, "body": "You can and I edit the answer to reflect that. Just that the semantic of <code>read_to_string</code> is to &quot;Read all bytes until EOF in this source, appending them to buf.&quot;. So it&#39;ll hang if you don&#39;t close the stream."}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "edited": false, "score": 0, "creation_date": 1566750763, "post_id": 57646894, "comment_id": 101746348, "body": "thanks for your help, I finally decided to use <code>take</code>: <a href=\"https://stackoverflow.com/a/57647802/1695172\">stackoverflow.com/a/57647802/1695172</a>"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1566749619, "last_edit_date": 1566749619, "creation_date": 1566743155, "answer_id": 57646894, "question_id": 57646423, "link": "https://stackoverflow.com/questions/57646423/unixstream-write-read-full-string/57646894#57646894", "title": "UnixStream write/read full string", "body": "<p>The semantic of <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_string\" rel=\"nofollow noreferrer\"><code>read_to_string</code></a> is:</p>\n\n<blockquote>\n  <p>Read all bytes until EOF in this source, appending them to buf.</p>\n  \n  <p>If successful, this function returns the number of bytes which were read and appended to buf.</p>\n</blockquote>\n\n<p>So it will hang if you don't close the stream. You want to use <code>read</code> instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let (mut s1, mut s2) = UnixStream::pair().unwrap();\n    s1.write_all(b\"hello world\").unwrap();\n    let mut buf = [0; 1024];\n    let count = s2.read(&amp;mut buf).unwrap();\n    let response = String::from_utf8(buf[..count].to_vec()).unwrap();\n    assert_eq!(\"hello world\".to_string(), response);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 0, "last_activity_date": 1566750714, "creation_date": 1566750714, "answer_id": 57647802, "question_id": 57646423, "link": "https://stackoverflow.com/questions/57646423/unixstream-write-read-full-string/57647802#57647802", "title": "UnixStream write/read full string", "body": "<p>@edwardw explanation make me realize that I should know the size of the message or close the connection. But I found another way of doing it that fitted better to what I needed, took quite interesting information from this <a href=\"https://stackoverflow.com/a/30553312/1695172\">other answer</a>:</p>\n\n<pre><code>    let (mut s1, mut s2) = UnixStream::pair().unwrap();\n    s1.write_all(b\"hello world\").unwrap();\n    let mut buff = [0; 1024];\n    let mut h = s2.take(1024);\n    h.read(&amp;mut buff);\n    let mut response = String::from_utf8(buff.to_vec()).unwrap();\n    let res = response.trim_end_matches(char::from(0));\n    assert_eq!(\"hello world\".to_string(), res);\n</code></pre>\n\n<p>It may be worst for some cases, but for now it will do. Just making the stream to read up to <code>1024</code> bytes and then just trimming what I did not need from the string.</p>\n"}], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 483, "favorite_count": 0, "accepted_answer_id": 57647802, "answer_count": 2, "score": 0, "last_activity_date": 1566750714, "creation_date": 1566739669, "question_id": 57646423, "link": "https://stackoverflow.com/questions/57646423/unixstream-write-read-full-string", "title": "UnixStream write/read full string", "body": "<p>I have this small example version of a problem that I have:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[test]\nfn streams() {\n    use std::io::prelude::*;\n    use std::net::Shutdown;\n    use std::os::unix::net::UnixStream;\n    use std::time::Duration;\n\n    let (mut s1, mut s2) = UnixStream::pair().unwrap();\n    s1.write_all(b\"hello world\").unwrap();\n    // Problem is that if not calling shutdown message never arrives\n    s1.shutdown(Shutdown::Write).unwrap();\n    let mut response = String::new();\n    s2.read_to_string(&amp;mut response).unwrap();\n    assert_eq!(\"hello world\".to_string(), response);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=94fd65e3e20ec2af6e8613e6a79620f5\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>I need to close the connection, otherwise, the message never arrives.\nI think the issue is that <code>write_all</code> does not write EOF, so when using <code>read_to_string</code> hangs.</p>\n\n<p>In python for example I would simply use:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>socket.sendall(message.encode())\ndata = socket.recv(1024)\n</code></pre>\n\n<p>to send and get a reply.</p>\n\n<p>How could I achieve the same with rust?</p>\n\n<p>Thank you in advance.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1566799195, "post_id": 57646294, "comment_id": 101755053, "body": "Is the file known on compile-time, or only at runtime? The former is handled by <a href=\"https://doc.rust-lang.org/std/macro.include.html\" rel=\"nofollow noreferrer\"><code>include</code></a> and similar macros; the latter looks like a work for <a href=\"https://docs.rs/once_cell/0.2.7/once_cell/\" rel=\"nofollow noreferrer\"><code>once_cell</code></a>."}, {"owner": {"reputation": 4051, "user_id": 934618, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/80dea12099e7740491c75f34de76d594?s=128&d=identicon&r=PG", "display_name": "Dmitry Fedorkov", "link": "https://stackoverflow.com/users/934618/dmitry-fedorkov"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1567503659, "post_id": 57646294, "comment_id": 101973139, "body": "@Cerberus, syncronized access in <code>once_cell::sync::*</code> is an unneeded overhead for my read-only data. And the non-syncronous <code>once_cell::unsync::*</code> cannot be used as a shared global variable."}], "answers": [{"tags": [], "owner": {"reputation": 111, "user_id": 7600021, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nDsGG.png?s=128&g=1", "display_name": "Robin Lindner", "link": "https://stackoverflow.com/users/7600021/robin-lindner"}, "is_accepted": false, "score": -1, "last_activity_date": 1583864048, "creation_date": 1583864048, "answer_id": 60623627, "question_id": 57646294, "link": "https://stackoverflow.com/questions/57646294/initialize-a-global-variable-with-input-in-rust/60623627#60623627", "title": "Initialize a global variable with input in Rust", "body": "<p>You could define a mutable static variable.</p>\n\n<p>For ex.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mut static VAR: bool = false;\n\nfn main() {\n    let input = \"...\";\n    if input == \"lorem\" {\n        VAR = true;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4051, "user_id": 934618, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/80dea12099e7740491c75f34de76d594?s=128&d=identicon&r=PG", "display_name": "Dmitry Fedorkov", "link": "https://stackoverflow.com/users/934618/dmitry-fedorkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 277, "favorite_count": 1, "closed_date": 1583868287, "answer_count": 1, "score": 2, "last_activity_date": 1583864048, "creation_date": 1566738512, "last_edit_date": 1567534525, "question_id": 57646294, "link": "https://stackoverflow.com/questions/57646294/initialize-a-global-variable-with-input-in-rust", "closed_reason": "Duplicate", "title": "Initialize a global variable with input in Rust", "body": "<p>I need to initialize a vector with a file contents and then access it (read only) from multiple threads.</p>\n\n<p>Now I define it as a local variable and pass a reference to every function (see <a href=\"https://github.com/dsdante/knapsack/blob/master/rust/src/main.rs#L13\" rel=\"nofollow noreferrer\">my repo</a>), but I use it in a lightweight recursive function, so I would like to avoid passing excess parameters.</p>\n\n<p>Thread-local statics won't do - I parallelize my calculations.</p>\n\n<p><a href=\"https://rust-lang-nursery.github.io/lazy-static.rs/lazy_static/index.html\" rel=\"nofollow noreferrer\">lazy_static</a> cannot use input for initialization, as far as I understand.</p>\n"}, {"tags": ["rust", "actix-web", "reqwest"], "answers": [{"comments": [{"owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "edited": false, "score": 1, "creation_date": 1570742221, "post_id": 57664237, "comment_id": 103020216, "body": "I don&#39;t think this example works anymore. I&#39;m getting an error about <code>AsyncFactory</code> not being implemented for the handler function. I was also confused about <code>Body::from</code>, which wasn&#39;t part of the original <code>use</code> statements. It looks like it&#39;s <code>actix_web::body::Body::from</code>."}], "tags": [], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "is_accepted": false, "score": 0, "last_activity_date": 1566889445, "last_edit_date": 1566889445, "creation_date": 1566849577, "answer_id": 57664237, "question_id": 57645819, "link": "https://stackoverflow.com/questions/57645819/calling-async-reqwest-from-with-actix-web/57664237#57664237", "title": "Calling async reqwest from with actix-web", "body": "<p>To make the future block until it is resolved you have to call <code>wait</code> on it, but that's not ideal. </p>\n\n<p>You can make your validator function return a future and in the route call <code>to_async</code> instead of <code>to</code>. The framework will poll and send the response when the future is resolved.</p>\n\n<p>Also you should consider using the http client that comes with actix web and reduce one dependency from your application.</p>\n\n<pre><code>fn main() {\n    HttpServer::new(|| {\n        App::new()\n            .route(\"/validate\", web::post().to_async(validator))\n    })\n    .bind(\"127.0.0.1:8000\")\n    .expect(\"Can not bind to port 8000\")\n    .run()\n    .unwrap();\n}\n\nfn validator(form: web::Form&lt;FormData&gt;) -&gt; impl Future&lt;Item=String, Error=String&gt; {\n    let url = \"https://jsonplaceholder.typicode.com/posts\";\n    lazy_static! {\n        static ref HTTP_CLIENT: HttpClient = HttpClient::new();\n    }\n    HTTP_CLIENT.post(url)\n        .json(\n            &amp;json!({\n                \"title\": form.title.clone(),\n            })\n        )\n        .send()\n        .and_then(|mut resp| resp.json())\n        .map(|json: Response| {\n            println!(\"{:?}\", json);\n            HttpResponse::Ok().body(Body::from(json.title))\n        })\n        .map_err(|error| format!(\"Error: {:?}\", error))\n}\n\n</code></pre>\n"}], "owner": {"reputation": 3170, "user_id": 1147744, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/a6c38861306eec31c194bc433c808aba?s=128&d=identicon&r=PG", "display_name": "Letharion", "link": "https://stackoverflow.com/users/1147744/letharion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1423, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566889445, "creation_date": 1566734404, "question_id": 57645819, "link": "https://stackoverflow.com/questions/57645819/calling-async-reqwest-from-with-actix-web", "title": "Calling async reqwest from with actix-web", "body": "<p>In my <code>actix-web</code>-server, I'm trying to use <code>reqwest</code> to call an external server, and then return the response back to the user.</p>\n\n<pre><code>use actix_web::{web, App, HttpResponse, HttpServer, Responder};\nuse serde::{Deserialize, Serialize};\nuse futures::Future;\nuse lazy_static::lazy_static;\nuse reqwest::r#async::Client as HttpClient;\n#[macro_use] extern crate serde_json;\n\n#[derive(Debug, Deserialize)]\nstruct FormData {\n    title: String,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Response {\n    title: String,\n}\n\nfn main() {\n    HttpServer::new(|| {\n        App::new()\n            .route(\"/validate\", web::post().to(validator))\n    })\n    .bind(\"127.0.0.1:8000\")\n    .expect(\"Can not bind to port 8000\")\n    .run()\n    .unwrap();\n}\n\nfn validator(form: web::Form&lt;FormData&gt;) -&gt; impl Responder {\n    let _resp = validate(form.title.clone());\n    HttpResponse::Ok()\n}\n\npub fn validate(title: String) -&gt; impl Future&lt;Item=String, Error=String&gt; {\n    let url = \"https://jsonplaceholder.typicode.com/posts\";\n    lazy_static! {\n        static ref HTTP_CLIENT: HttpClient = HttpClient::new();\n    }\n    HTTP_CLIENT.post(url)\n        .json(\n            &amp;json!({\n                \"title\": title,\n            })\n        )\n        .send()\n        .and_then(|mut resp| resp.json())\n        .map(|json: Response| {\n            println!(\"{:?}\", json);\n            json.title\n        })\n        .map_err(|error| format!(\"Error: {:?}\", error))\n}\n</code></pre>\n\n<p>This has two issues:</p>\n\n<ol>\n<li><code>println!(\"{:?}\", json);</code> never appears to run, or at least I never see any output.</li>\n<li>I get <code>_resp</code> back, which is  a <code>Future</code>, and I don't understand how I can wait for that to resolve so I can pass a string back to the <code>Responder</code></li>\n</ol>\n\n<p>For reference:</p>\n\n<pre><code>$ curl -data \"title=x\" \"https://jsonplaceholder.typicode.com/posts\"\n{\n  \"title\": \"x\",\n  \"id\": 101\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566808838, "post_id": 57645496, "comment_id": 101758764, "body": "I don&#39;t have knowledge about debugging part but i have added <b>see also</b> section into my answer for your previous question because of this issue, in documentation they explicitly state relation between blocking annotated future with the combined futures. Please <a href=\"https://stackoverflow.com/a/56562541/1601571\">check this</a>"}, {"owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566809169, "post_id": 57645496, "comment_id": 101758899, "body": "@&#214;merErden  So <code>stdin.read(...).fuse()</code> blocks the thread? I don&#39;t understand -- that type (<code>Stdin</code>) is exported by Tokio so I&#39;d expect it to just work with other Tokio/futures functions. It sucks that Tokio has so many footguns..."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566811458, "post_id": 57645496, "comment_id": 101760087, "body": "\u0130t actually works but the problem in here stdin future never ends, so the combined future never gets polled, using other solutions instead of tokio stdin might be more flexible or implementing your own, you can check the link above in the comment, you may find some useful links"}], "owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 580, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1566731684, "creation_date": 1566731684, "question_id": 57645496, "link": "https://stackoverflow.com/questions/57645496/debugging-a-tokio-application-blocked-on-something-when-it-should-return", "title": "Debugging a Tokio application blocked on something when it should return", "body": "<p>I have a Tokio application that should return when an error happens. This is\nimplemented using one-shot channels shared between two tasks. When any of the\ntasks detect an error it signals the channel, which is received by the other\ntask. </p>\n\n<p>However even after the error-detecting task signals the channel the other task\ndoes not return -- the <code>select!</code> block simply doesn't realize that the channel\nis signalled. Full code:</p>\n\n<pre><code>#![recursion_limit = \"256\"]\n\nextern crate futures;\nextern crate tokio;\nextern crate tokio_net;\nextern crate tokio_sync;\n\nuse std::io::Write;\nuse std::net::SocketAddr;\nuse tokio::io::{AsyncReadExt, AsyncWriteExt};\nuse tokio::net::tcp::split::{TcpStreamReadHalf, TcpStreamWriteHalf};\nuse tokio::net::TcpStream;\nuse tokio_sync::oneshot;\n\nuse futures::select;\n\nuse futures::future::FutureExt;\n\n#[derive(Debug)]\nenum AppErr {\n    CantConnect(std::io::Error),\n}\n\nfn main() {\n    let executor = tokio::runtime::Runtime::new().unwrap();\n\n    executor.spawn(async {\n        match client_task().await {\n            Ok(()) =&gt; {}\n            Err(err) =&gt; {\n                println!(\"Error: {:?}\", err);\n            }\n        }\n    });\n\n    executor.shutdown_on_idle();\n}\n\nasync fn client_task() -&gt; Result&lt;(), AppErr&gt; {\n    let addr: SocketAddr = \"127.0.0.1:8080\".parse().unwrap();\n    print!(\"Connecting... \");\n    let _ = std::io::stdout().flush();\n    let sock = TcpStream::connect(&amp;addr)\n        .await\n        .map_err(AppErr::CantConnect)?;\n    println!(\"Connected.\");\n\n    let (read, write) = sock.split();\n\n    let (abort_in_task_snd, abort_in_task_rcv) = oneshot::channel();\n    let (abort_out_task_snd, abort_out_task_rcv) = oneshot::channel();\n\n    tokio::spawn(handle_incoming(read, abort_in_task_rcv, abort_out_task_snd));\n    tokio::spawn(handle_outgoing(\n        write,\n        abort_out_task_rcv,\n        abort_in_task_snd,\n    ));\n\n    Ok(())\n}\n\nasync fn handle_incoming(\n    mut conn: TcpStreamReadHalf,\n    abort_in: oneshot::Receiver&lt;()&gt;,\n    abort_out: oneshot::Sender&lt;()&gt;,\n) {\n    let mut read_buf: [u8; 1024] = [0; 1024];\n    let mut abort_in_fused = abort_in.fuse();\n\n    loop {\n        select! {\n            abort_ret = abort_in_fused =&gt; {\n                // TODO match abort_ret {..}\n                println!(\"abort signalled, handle_incoming returning\");\n                return;\n            },\n            bytes = conn.read(&amp;mut read_buf).fuse() =&gt; {\n                match bytes {\n                    Err(io_err) =&gt; {\n                        println!(\"IO error when reading input stream: {:?}\", io_err);\n                        println!(\"Aborting\");\n                        abort_out.send(()).unwrap();\n                        return;\n                    }\n                    Ok(bytes) =&gt; {\n                        if bytes == 0 {\n                            println!(\"Connection closed from the other end. Aborting.\");\n                            abort_out.send(()).unwrap();\n                            return;\n                        }\n                        println!(\"Read {} bytes: {:?}\", bytes, &amp;read_buf[0..bytes]);\n                    }\n                }\n            }\n        }\n    }\n}\n\nasync fn handle_outgoing(\n    mut conn: TcpStreamWriteHalf,\n    abort_in: oneshot::Receiver&lt;()&gt;,\n    abort_out: oneshot::Sender&lt;()&gt;,\n) {\n    let mut stdin = tokio::io::stdin();\n    let mut read_buf: [u8; 1024] = [0; 1024];\n    let mut abort_in_fused = abort_in.fuse();\n\n    loop {\n        select! {\n            abort_ret = abort_in_fused =&gt; {\n                println!(\"Abort signalled, handle_outgoing returning\");\n                return;\n            }\n            input = stdin.read(&amp;mut read_buf).fuse() =&gt; {\n                match input {\n                    Err(io_err) =&gt; {\n                        println!(\"IO error when reading stdin: {:?}\", io_err);\n                        println!(\"Aborting\");\n                        abort_out.send(()).unwrap();\n                        return;\n                    }\n                    Ok(bytes) =&gt; {\n                        if bytes == 0 {\n                            println!(\"stdin closed, aborting\");\n                            abort_out.send(()).unwrap();\n                            return;\n                        }\n                        println!(\"handle_outgoing read {} bytes\", bytes);\n                        match conn.write_all(&amp;read_buf[0..bytes]).await {\n                            Ok(()) =&gt; {\n                            },\n                            Err(io_err) =&gt; {\n                                println!(\"Error when sending: {:?}\", io_err);\n                                println!(\"Aborting\");\n                                abort_out.send(()).unwrap();\n                                return;\n                            }\n                        }\n                    }\n                }\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Dependencies:</p>\n\n<pre><code>futures-preview = { version = \"0.3.0-alpha.18\",  features = [\"async-await\", \"nightly\"] }\ntokio = \"0.2.0-alpha.2\"\ntokio-net = \"0.2.0-alpha.2\"\ntokio-sync = \"0.2.0-alpha.2\"\n</code></pre>\n\n<p>So when the connection is closed on the other side, or there's an error, I\nsignal the channel:</p>\n\n<pre><code>println!(\"Connection closed from the other end. Aborting.\");\nabort_out.send(()).unwrap();\nreturn;\n</code></pre>\n\n<p>But for some reason the other task never notices:</p>\n\n<pre><code>select! {\n    // Never runs:\n    abort_ret = abort_in_fused =&gt; {\n        // TODO match abort_ret {..}\n        println!(\"abort signalled, handle_incoming returning\");\n        return;\n    },\n    ...\n}\n</code></pre>\n\n<p>This can be seen in two ways:</p>\n\n<p>The print in <code>abort_ret</code> case never runs.</p>\n\n<p>After the connection is closed on the other end the process prints <code>Connection\nclosed from the other end. Aborting.</code> but it doesn't return. When I attach\ngdb I see this backtrace:</p>\n\n<pre><code>...\n#14 0x000055f10391ab7e in tokio_executor::enter::Enter::block_on (self=0x7ffc167ba5a0, f=...) at /home/omer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.2.0-alpha.2/src/enter.rs:121\n#15 0x000055f103863a28 in tokio::runtime::threadpool::Runtime::shutdown_on_idle (self=...) at /home/omer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.0-alpha.2/src/runtime/threadpool/mod.rs:219\n#16 0x000055f10384c01b in chat0_client::main () at src/chat0_client.rs:36\n</code></pre>\n\n<p>So it's blocked in Tokio event loop.</p>\n\n<p>In addition to a direct answer, I'm interested in pointers on how to debug this.</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1566721093, "post_id": 57644339, "comment_id": 101739829, "body": "Basically, you&#39;re borrowing <code>self</code> for the duration of that function. The thread can outlive that function."}], "answers": [{"comments": [{"owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "edited": false, "score": 0, "creation_date": 1566750150, "post_id": 57644930, "comment_id": 101746228, "body": "Thanks, but when I implement it like this I get: <code>30 | impl MyTextOptions for MyText {    |      ^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `&lt;&#39;_&gt;</code>. By the way I&#39;m still using the ```        let int_text = Arc::new(self.clone()); ```"}, {"owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "edited": false, "score": 0, "creation_date": 1566764257, "post_id": 57644930, "comment_id": 101749315, "body": "I don&#39;t get the above error with this solution anymore."}, {"owner": {"reputation": 2504, "user_id": 1831512, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/fzxrM.png?s=128&g=1", "display_name": "stackunderflow", "link": "https://stackoverflow.com/users/1831512/stackunderflow"}, "edited": false, "score": 0, "creation_date": 1615382105, "post_id": 57644930, "comment_id": 117672474, "body": "<code>The fact that you join the thread in the same function is not understood by the compiler...</code> Why...?"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1566726292, "creation_date": 1566726292, "answer_id": 57644930, "question_id": 57644339, "link": "https://stackoverflow.com/questions/57644339/the-lifetime-of-self-parameter-in-rust-when-using-threads/57644930#57644930", "title": "The lifetime of self parameter in Rust when using threads", "body": "<p>A thread spawned via <code>thread::spawn</code> can in theory outlive its parent thread. If the child thread could reference data from the parent thread, these reference would dangle (be invalid) when the parent thread stops. This is expressed as a <code>'static</code> bound on the closure given to <code>thread::spawn</code>. The fact that you <code>join</code> the thread in the same function is not understood by the compiler, so the restriction still holds.</p>\n\n<p>You already tried to use an <code>Arc</code> (presumably to get around this problem), but you are creating an <code>Arc</code> of <code>self</code> which is a reference already. So you are just putting a reference into an <code>Arc</code>. That value does not satisfy the <code>'static</code> bound, that's why you are getting an error.</p>\n\n<p>There are multiple ways to solve this problem, many depend on the overall architecture of your project. One of the easiest ways is to use <code>scoped</code> from <code>crossbeam</code> (or specifically, <code>crossbeam_utils</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crossbeam_utils::thread;\n\nimpl MyTextOptions for MyText {\n    fn add(&amp;self, text: String) {\n        thread::scope(|s| {\n            s.spawn(|_| {\n                let mut text_feed = self.my_text.lock().unwrap();\n                text_feed.push(text)\n            });\n        }).unwrap();\n    }\n}\n</code></pre>\n\n<p>This is a fancy helper function that actually lets you borrow values from the parent scope by ensuring the child thread ends before the parent thread does. </p>\n\n<p>Another solution would be to put the <code>MyText</code> value into an <code>Arc</code> (notably: by value, not by reference). Then you can clone this <code>Arc</code> a bunch of times and send it to a new thread. But this means you cannot use methods that take <code>&amp;self</code> as receiver, but you have to solve it in another way.</p>\n"}], "owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1162, "favorite_count": 0, "closed_date": 1566909348, "accepted_answer_id": 57644930, "answer_count": 1, "score": 2, "last_activity_date": 1566726292, "creation_date": 1566720811, "last_edit_date": 1566725425, "question_id": 57644339, "link": "https://stackoverflow.com/questions/57644339/the-lifetime-of-self-parameter-in-rust-when-using-threads", "closed_reason": "Duplicate", "title": "The lifetime of self parameter in Rust when using threads", "body": "<p>I'm in the process of learning Rust and I have this code:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread::spawn;\n\npub struct MyText {\n    my_text: Mutex&lt;Vec&lt;String&gt;&gt;,\n}\n\npub trait MyTextOptions {\n    fn add(&amp;self, t: String);\n}\n\nimpl MyTextOptions for MyText {\n    fn add(&amp;self, text: String) {\n        let int_text = Arc::new(self);\n        let put_into_my_text = spawn(move || {\n            let mut text_feed = int_text.my_text.lock().unwrap();\n            text_feed.push(text)\n        });\n        put_into_my_text.join();\n    }\n}\n</code></pre>\n\n<p>When I try to run it I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src\\buffer.rs:37:33\n   |\n37 |         let int_text = Arc::new(self);\n   |                                 ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 36:5...\n  --&gt; src\\buffer.rs:36:5\n   |\n36 | /     fn add(&amp;self, text: String) {\n37 | |         let int_text = Arc::new(self);\n38 | |         let put_into_my_text = spawn(move || {\n39 | |             let mut text_feed = int_text.my_text.lock().unwrap();\n...  |\n42 | |         put_into_my_text.join();\n43 | |     }\n   | |_____^\n   = note: ...so that the expression is assignable:\n           expected &amp;buffer::MyText\n              found &amp;buffer::MyText\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src\\buffer.rs:38:38: 41:10 int_text:std::sync::Arc&lt;&amp;buffer::MyText&gt;, text:std::string::String]` will meet its required lifetime bounds\n  --&gt; src\\buffer.rs:38:32\n   |\n38 |         let put_into_my_text = spawn(move || {\n   |\n</code></pre>\n\n<p>I seem to fail to understand the lifetime of variables in rust when using threads. No matter what I do with this function I'm still getting this type of error.</p>\n"}, {"tags": ["rust", "singly-linked-list", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "edited": false, "score": 0, "creation_date": 1566731056, "post_id": 57645069, "comment_id": 101742014, "body": "I\u2019m not sure I understand your explanation. What do you mean by \u201c<code>break</code> could happen\u201d? And your solution is not like my recursive one which only unwraps <code>node_ref</code> once in each iteration. Can you avoid unwrapping <code>node_ref</code> twice in each iteration?"}, {"owner": {"reputation": 2430, "user_id": 2546626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24bee02c79f348081ac9e14edc982a0d?s=128&d=identicon&r=PG", "display_name": "Youka", "link": "https://stackoverflow.com/users/2546626/youka"}, "reply_to_user": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "edited": false, "score": 0, "creation_date": 1566734777, "post_id": 57645069, "comment_id": 101742772, "body": "The compiler behaves a bit stupid by considering your mutable borrow and both possibilities by your if condition. <code>next_ref</code> can be assigned for upper scope <b>and</b> loop break to keep using it (<i>unwinding</i>). Iirc rust 1.34 brought this pettiness. You cannot skip the second <code>.unwrap().next</code> because both are based on different mutability. @EFanZh"}, {"owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "edited": false, "score": 0, "creation_date": 1566794822, "post_id": 57645069, "comment_id": 101753972, "body": "I found that <code>as_ref</code> is not necessary, <code>as_mut</code> can also work in your code. I think I should report an issue on this lifetime error behavior."}], "tags": [], "owner": {"reputation": 2430, "user_id": 2546626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24bee02c79f348081ac9e14edc982a0d?s=128&d=identicon&r=PG", "display_name": "Youka", "link": "https://stackoverflow.com/users/2546626/youka"}, "is_accepted": true, "score": 0, "last_activity_date": 1566734157, "last_edit_date": 1566734157, "creation_date": 1566727440, "answer_id": 57645069, "question_id": 57643908, "link": "https://stackoverflow.com/questions/57643908/why-can-t-i-convert-this-tail-recursive-function-into-an-iterative-one-in-rust/57645069#57645069", "title": "Why can\u2019t I convert this tail recursive function into an iterative one in Rust?", "body": "<p>Your problem is the critical path of mutable references.</p>\n\n<p>As the error message already mentions you mutably borrow the <strong>node_ref</strong> value and assign to <strong>node_ref</strong> variable, so it wanders into the function scope - same as your <code>None</code> assignment - because <code>break</code> could happen. You can check a next value without mutability and borrow as mutable in the inner scope of your condition, this way it works:</p>\n\n<pre><code>fn remove_last_node_iterative&lt;T&gt;(mut node_ref: &amp;mut Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) {\n    while node_ref.as_ref().unwrap().next.is_some() {\n        node_ref = &amp;mut node_ref.as_mut().unwrap().next;\n    }\n    *node_ref = None;\n}\n</code></pre>\n"}], "owner": {"reputation": 2027, "user_id": 722720, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/7c5d12bf3c52daa8c9169da94ec021b8?s=128&d=identicon&r=PG", "display_name": "EFanZh", "link": "https://stackoverflow.com/users/722720/efanzh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 57645069, "answer_count": 1, "score": 1, "last_activity_date": 1566743707, "creation_date": 1566716348, "last_edit_date": 1566743707, "question_id": 57643908, "link": "https://stackoverflow.com/questions/57643908/why-can-t-i-convert-this-tail-recursive-function-into-an-iterative-one-in-rust", "title": "Why can\u2019t I convert this tail recursive function into an iterative one in Rust?", "body": "<p>I\u2019m writing a function that removes the last node from a singly linked list:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(PartialEq, Eq, Debug)]\nstruct Node&lt;T&gt; {\n    value: T,\n    next: Option&lt;Box&lt;Self&gt;&gt;,\n}\n</code></pre>\n\n<p>Here is my recursive version:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn remove_last_node_recursive&lt;T&gt;(node_ref: &amp;mut Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) {\n    let next_ref = &amp;mut node_ref.as_mut().unwrap().next;\n\n    if next_ref.is_some() {\n        remove_last_node_recursive(next_ref);\n    } else {\n        *node_ref = None;\n    }\n}\n</code></pre>\n\n<p>The recursive version works fine, but I want to write an iterative version like the following one:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn remove_last_node_iterative&lt;T&gt;(mut node_ref: &amp;mut Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) {\n    loop {\n        let next_ref = &amp;mut node_ref.as_mut().unwrap().next;\n\n        if next_ref.is_some() {\n            node_ref = next_ref;\n        } else {\n            break;\n        }\n    }\n\n    *node_ref = None; // This line causes lifetime error.\n}\n</code></pre>\n\n<p>I think my recursive version is tail recursive, so I should be able to convert it into an iterative one, but like the comment says, the commented code does not compile due to lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `*node_ref` because it is borrowed\n  --&gt; src/main.rs:28:5\n   |\n17 | fn remove_last_node_iterative&lt;T&gt;(mut node_ref: &amp;mut Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) {\n   |                                                - let's call the lifetime of this reference `'1`\n18 |     loop {\n19 |         let next_ref = &amp;mut node_ref.as_mut().unwrap().next;\n   |                             -----------------\n   |                             |\n   |                             borrow of `*node_ref` occurs here\n   |                             argument requires that `*node_ref` is borrowed for `'1`\n...\n28 |     *node_ref = None; // This line causes lifetime error.\n   |     ^^^^^^^^^ assignment to borrowed `*node_ref` occurs here\n</code></pre>\n\n<p>You can test the code in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=27ed0dba175ce323cae8f9fe372dc5ed\" rel=\"nofollow noreferrer\">the rust playground</a>.</p>\n\n<p>What did I do wrong, and what is the correct way to do it?</p>\n"}, {"tags": ["multithreading", "concurrency", "rust"], "comments": [{"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566704824, "post_id": 57643084, "comment_id": 101737497, "body": "<a href=\"https://docs.rs/crossbeam/0.3.0/crossbeam/struct.Scope.html\" rel=\"nofollow noreferrer\">Crossbeam</a> has a concept of scoped threads, which allow you to use non-static lifetimes."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 1, "creation_date": 1566705274, "post_id": 57643084, "comment_id": 101737548, "body": "Scoped threads got removed like 2 years ago from Rust, so there is no way in Rust std to use non-static lifetimes: <a href=\"https://www.reddit.com/r/rust/comments/57c5uq/what_happened_to_threadscoped/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/57c5uq/what_happened_to_threadsco&zwnj;&#8203;ped</a>"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566706276, "post_id": 57643084, "comment_id": 101737638, "body": "What about if the operate_in_chunks method panics before calling join()? That would cause the reference to be dropped too early."}, {"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "edited": false, "score": 1, "creation_date": 1566706299, "post_id": 57643084, "comment_id": 101737643, "body": "Wow, that thread and ones linked from it really paint this as an epic (and ongoing) saga. I think that&#39;s the closest possible thing to an answer, if you want to post it as such."}], "answers": [{"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 2, "last_activity_date": 1566903765, "last_edit_date": 1566903765, "creation_date": 1566706468, "answer_id": 57643191, "question_id": 57643084, "link": "https://stackoverflow.com/questions/57643084/can-you-specify-a-non-static-lifetime-for-threads/57643191#57643191", "title": "Can you specify a non-static lifetime for threads?", "body": "<p>Rust actually used to allow scoped threads, which allow non-static lifetimes for any data passed. However, the API was found to be unsound and they were removed around two years <a href=\"https://www.reddit.com/r/rust/comments/57c5uq/what_happened_to_threadscoped/\" rel=\"nofollow noreferrer\">ago</a>. Fortunately, <a href=\"https://docs.rs/crossbeam/0.3.0/crossbeam/struct.Scope.html\" rel=\"nofollow noreferrer\">crossbeam</a>, a crate, implements scoped threads with a different API allowing you to use this functionality safely. A sample from crossbeam's documentation is here:</p>\n\n<pre><code>let array = [1, 2, 3];\n\ncrossbeam::scope(|scope| {\n    for i in &amp;array {\n        scope.spawn(move || {\n            println!(\"element: {}\", i);\n        });\n    }\n});\n</code></pre>\n"}], "owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 571, "favorite_count": 0, "closed_date": 1566909384, "accepted_answer_id": 57643191, "answer_count": 1, "score": 2, "last_activity_date": 1566911459, "creation_date": 1566704707, "last_edit_date": 1566911459, "question_id": 57643084, "link": "https://stackoverflow.com/questions/57643084/can-you-specify-a-non-static-lifetime-for-threads", "closed_reason": "Duplicate", "title": "Can you specify a non-static lifetime for threads?", "body": "<p>Here's a toy example of my problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\n\nfn operate_in_chunks(vec: &amp;mut Vec&lt;f32&gt;) {\n    let chunk_size = 10;\n    let mutex_vec: Arc&lt;Mutex&lt;&amp;mut Vec&lt;f32&gt;&gt;&gt; = Arc::new(Mutex::new(vec));\n\n    let handles = Vec::new();\n\n    for chunk in 0..vec.len() / chunk_size {\n        handles.push(std::thread::spawn(move || {\n            operate(mutex_vec, chunk);\n        }));\n    }\n\n    for i in 0..handles.len() {\n        handles[i].join().unwrap();\n    }\n}\n\nfn operate(mutex_vec: Arc&lt;Mutex&lt;&amp;mut Vec&lt;f32&gt;&gt;&gt;, chunk: usize) {}\n</code></pre>\n\n<p>I'd like to do some work on the passed-in struct, split among a number of threads, and then join them all back together before returning.</p>\n\n<p>The error I get says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `vec`\n  --&gt; src/lib.rs:10:22\n   |\n3  | fn operate_in_chunks(vec: &amp;mut Vec&lt;f32&gt;) {\n   |                           ------------- help: add explicit lifetime `'static` to the type of `vec`: `&amp;'static mut std::vec::Vec&lt;f32&gt;`\n...\n10 |         handles.push(std::thread::spawn(move || {\n   |                      ^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n\n</code></pre>\n\n<p>I understand what it's complaining about: if the threads may have a <code>'static</code> lifetime, and they reference <code>vec</code>, <code>vec</code> must have a <code>'static</code> lifetime. However, my use-case should in theory be possible: I want to guarantee that the threads <em>don't</em> have a <code>'static</code> lifetime, as they're all joined before the function returns, in which case I shouldn't need a '<code>static' lifetime on</code>vec`.</p>\n\n<p>Does Rust have a way of articulating this - unifying the lifetime of the threads with the lifetime of <code>vec</code> - or are all threads always <code>'static</code> no matter what?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1566735722, "last_edit_date": 1566735722, "creation_date": 1566707175, "answer_id": 57643239, "question_id": 57641821, "link": "https://stackoverflow.com/questions/57641821/rayon-fold-into-a-hashmap/57643239#57643239", "title": "Rayon fold into a HashMap", "body": "<p>Per <a href=\"https://docs.rs/rayon/1.1.0/rayon/iter/trait.ParallelIterator.html#method.fold\" rel=\"nofollow noreferrer\">parallel fold documentation</a>:</p>\n\n<blockquote>\n  <p>The <strong>parallel fold</strong> works similarly except that it first breaks up your list into sublists, and hence instead of yielding up a single sum at the end, it yields up multiple sums. The number of results is nondeterministic, as is the point where the breaks occur.</p>\n</blockquote>\n\n<p>So you want to <code>reduce</code> the result of <code>fold</code> into one value as final result, not <code>collect</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result = my_array\n    .par_iter()\n    .filter_map(|value| value.as_ref().ok())\n    .fold(\n        || HashMap::new(),\n        |mut acc, value| {\n            acc.entry(value.b.clone()).or_insert(vec![]).push(value);\n            acc\n        },\n    )\n    .reduce(\n        || HashMap::new(),\n        |m1, m2| {\n            m2.iter().fold(m1, |mut acc, (k, vs)| {\n                acc.entry(k.clone()).or_insert(vec![]).extend(vs);\n                acc\n            })\n        },\n    );\n</code></pre>\n\n<p><a href=\"https://docs.rs/rayon/1.1.0/rayon/iter/trait.ParallelIterator.html#fold-versus-reduce\" rel=\"nofollow noreferrer\">OTOH</a>:</p>\n\n<blockquote>\n  <p>reduce() requires that the identity function has the same type as the things you are iterating over, and it fully reduces the list of items into a single item</p>\n</blockquote>\n\n<p>So you can <code>reduce</code> into final result in one go:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result = my_array\n    .par_iter()\n    .filter_map(|value| value.as_ref().ok())\n    .map(|s| {\n        let mut m = HashMap::new();\n        m.insert(s.b.clone(), vec![s]);\n        m\n    })\n    .reduce(\n        || HashMap::new(),\n        |m1, m2| {\n            m2.iter().fold(m1, |mut acc, (k, vs)| {\n                acc.entry(k.clone()).or_insert(vec![]).extend(vs);\n                acc\n            })\n        },\n    );\n</code></pre>\n\n<p>The choice of <a href=\"https://docs.rs/rayon/1.1.0/rayon/iter/trait.ParallelIterator.html#fold-vs-mapreduce\" rel=\"nofollow noreferrer\"><code>fold</code> or <code>map/reduce</code></a> is up to you.</p>\n"}], "owner": {"reputation": 6209, "user_id": 1935318, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/ftlsb.jpg?s=128&g=1", "display_name": "amaurym", "link": "https://stackoverflow.com/users/1935318/amaurym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 771, "favorite_count": 0, "accepted_answer_id": 57643239, "answer_count": 1, "score": 0, "last_activity_date": 1566735722, "creation_date": 1566683991, "question_id": 57641821, "link": "https://stackoverflow.com/questions/57641821/rayon-fold-into-a-hashmap", "title": "Rayon fold into a HashMap", "body": "<p>I have a <code>Vec&lt;Result&lt;MyStruct, ()&gt;&gt;</code>, and I want to put them into buckets inside a HashMap, where keys are <code>MyStruct.b</code> field and values are a Vec containing all the MyStructs with that <code>MyStruct.b</code> field (see playground link below, might be clearer). I'm using fold, and it works with a normal <code>.fold</code></p>\n\n<pre><code>let my_array = vec![Ok(m1), Ok(m2), Ok(m3), Err(())];\n\nlet result: HashMap&lt;String, Vec&lt;&amp;MyStruct&gt;&gt; = my_array\n    .iter()\n    .filter_map(|value| value.as_ref().ok())\n    .fold(HashMap::new(), |mut acc, value| {\n        acc.entry(value.b.clone()).or_insert(vec![]).push(&amp;value);\n        acc\n    });\n</code></pre>\n\n<p>However, I can't achieve the same with rayon</p>\n\n<pre><code>let my_array = vec![Ok(m1), Ok(m2), Ok(m3), Err(())];\n\nlet result = my_array\n    .par_iter()\n    .filter_map(|value| value.as_ref().ok())\n    .fold(\n        ||HashMap::new(),\n        |mut acc, value| {\n            acc.entry(value.b.clone()).or_insert(vec![]).push(&amp;value);\n            acc\n        }\n    )\n    .collect::&lt;HashMap&lt;String, Vec&lt;&amp;MyStruct&gt;&gt;&gt;();\n</code></pre>\n\n<p>The error I get is</p>\n\n<pre><code>   Compiling playground v0.0.1 (/playground)\nerror[E0277]: the trait bound `std::collections::HashMap&lt;std::string::String, std::vec::Vec&lt;&amp;MyStruct&gt;&gt;: rayon::iter::FromParallelIterator&lt;std::collections::HashMap&lt;std::string::String, std::vec::Vec&lt;&amp;&amp;MyStruct&gt;&gt;&gt;` is not satisfied\n  --&gt; src/main.rs:39:10\n   |\n39 |         .collect::&lt;HashMap&lt;String, Vec&lt;&amp;MyStruct&gt;&gt;&gt;();\n   |          ^^^^^^^ the trait `rayon::iter::FromParallelIterator&lt;std::collections::HashMap&lt;std::string::String, std::vec::Vec&lt;&amp;&amp;MyStruct&gt;&gt;&gt;` is not implemented for `std::collections::HashMap&lt;std::string::String, std::vec::Vec&lt;&amp;MyStruct&gt;&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::collections::HashMap&lt;K, V, S&gt; as rayon::iter::FromParallelIterator&lt;(K, V)&gt;&gt;\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=62b0946371c576508c511ef7371028c4\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "slice"], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 5, "last_activity_date": 1566736790, "last_edit_date": 1566736790, "creation_date": 1566685169, "answer_id": 57641909, "question_id": 57641712, "link": "https://stackoverflow.com/questions/57641712/is-there-an-efficient-function-in-rust-that-finds-the-index-of-the-first-occurre/57641909#57641909", "title": "Is there an efficient function in Rust that finds the index of the first occurrence of a value in a sorted vector?", "body": "<p><code>binary_search</code> assumes that the elements are sorted in less-to-greater order. Yours is reversed, so you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.binary_search_by\" rel=\"nofollow noreferrer\"><code>binary_search_by</code></a>:</p>\n\n<pre><code>let x = 1; //value to look for\nlet data = [3,2,1,1,1,0];\nlet idx = data.binary_search_by(|probe| probe.cmp(x).reverse());\n</code></pre>\n\n<p>Now, as you say, you do not get the first one. That is expected, for the binary search algorithm will select an arbitrary value equal to the one searched. From the docs:</p>\n\n<blockquote>\n  <p>If there are multiple matches, then any one of the matches could be returned.</p>\n</blockquote>\n\n<p>That is easily solvable with a loop:</p>\n\n<pre><code>let mut idx = data.binary_search_by(|probe| probe.cmp(&amp;x).reverse());\nif let Ok(ref mut i) = idx {\n   while x &gt; 0 {\n       if data[*i - 1] != x {\n           break;\n       }\n       *i -= 1;\n   }\n}\n</code></pre>\n\n<p>But if you expect many duplicates that may negate the advantages of the binary search.</p>\n\n<p>If that is a problem for you, you can try to be smarter. For example, you can take advantage of this comment in the docs of <code>binary_search</code>:</p>\n\n<blockquote>\n  <p>If the value is not found then <code>Result::Err</code> is returned, containing the index where a matching element could be inserted while maintaining sorted order.</p>\n</blockquote>\n\n<p>So to get the index of the first value with a <code>1</code> you look for an imaginary value just between <code>2</code> and <code>1</code> (remember that your array is reversed), something like <code>1.5</code>. That can be done hacking a bit the comparison function:</p>\n\n<pre><code>let mut idx = data.binary_search_by(|probe| {\n    //the 1s in the slice are greater than the 1 in x\n    probe.cmp(&amp;x).reverse().then(std::cmp::Greater)\n});\n</code></pre>\n\n<p>There is a handy function <a href=\"https://doc.rust-lang.org/std/cmp/enum.Ordering.html#method.then\" rel=\"nofollow noreferrer\"><code>Ordering::then()</code></a> that does exactly what we need (the Rust stdlib is amazingly complete).</p>\n\n<p>Or you can use a simpler direct comparison:</p>\n\n<pre><code>let idx = data.binary_search_by(|probe| {\n    use std::cmp::Ordering::*;\n    if *probe &gt; x { Less } else { Greater }\n});\n</code></pre>\n\n<p>The only detail left is that this function will always return <code>Err(i)</code>, being <code>i</code> either the position of the first <code>1</code> or the position where the <code>1</code> would be if there are none. An extra comparison is necessary so solve this ambiguity:</p>\n\n<pre><code>if let Err(i) = idx {\n    //beware! i may be 1 past the end of the slice\n    if data.get(i) == Some(&amp;x) {\n        idx = Ok(i);\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9773683"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 1, "accepted_answer_id": 57641909, "answer_count": 1, "score": 2, "last_activity_date": 1566920383, "creation_date": 1566682661, "last_edit_date": 1566920383, "question_id": 57641712, "link": "https://stackoverflow.com/questions/57641712/is-there-an-efficient-function-in-rust-that-finds-the-index-of-the-first-occurre", "title": "Is there an efficient function in Rust that finds the index of the first occurrence of a value in a sorted vector?", "body": "<p>In <code>[3, 2, 1, 1, 1, 0]</code>, if the value we are searching for is 1, then the function should return 2.</p>\n\n<p>I found <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.binary_search_by\" rel=\"nofollow noreferrer\">binary search</a>, but it seems to return the last occurrence.</p>\n\n<p>I do not want a function that iterates over the entire vector and matches one by one.</p>\n"}, {"tags": ["compiler-errors", "rust", "warnings", "dangerous-request"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1566680204, "post_id": 57641402, "comment_id": 101734632, "body": "Allow, this kind of code would make any rust compiler not compliant, you ask the exact contrary that rust do. That doesn&#39;t make sense."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566681445, "post_id": 57641402, "comment_id": 101734880, "body": "&quot;Type checking&quot; isn&#39;t really the kind of thing you can turn off; it&#39;s fundamental to how the compiler understands your code. Code that doesn&#39;t type check isn&#39;t merely <i>unsafe</i>, it&#39;s <i>nonsensical</i>. Some warnings can be turned off, mostly those considered &quot;lints&quot;, but most of them are part of the type system -- there&#39;s simply no reason for them to have an off-switch."}], "answers": [{"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 3, "last_activity_date": 1566681842, "last_edit_date": 1566681842, "creation_date": 1566680027, "answer_id": 57641467, "question_id": 57641402, "link": "https://stackoverflow.com/questions/57641402/deviant-rust-how-can-i-disable-all-the-warnings-and-checks-possible/57641467#57641467", "title": "Deviant Rust: how can I disable all the warnings and checks possible?", "body": "<p>You should be to silence warnings, and any unused arguments, etc. with <code>#![allow(warnings, unused)]</code>. However, I don't believe you can disable type checks or other compile errors: doing so would be pretty antithetical to a compiler's purpose. You would likely need to generate a syntax tree and then remove any errors by deleting lines from the source until the code compiles (or based on error suggestions), similar to how <a href=\"https://github.com/ajalt/fuckitpy\" rel=\"nofollow noreferrer\">fuckitpy</a> works.</p>\n\n<p>For example, to silence all warnings, etc.:</p>\n\n<pre><code>#![allow(warnings, unused)]\n\nunsafe fn iHaTeReAdAbLeCoDe(arg: u8, unused_arg: u32) -&gt; u8 {\n    let x: i32;\n    arg\n}\n\npub fn main() {\n    print!(\"{:?}\", unsafe {\n\n                iHaTeReAdAbLeCoDe(5, 0)\n    });\n}\n</code></pre>\n\n<p>Please don't do this.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 980, "favorite_count": 0, "accepted_answer_id": 57641467, "answer_count": 1, "score": 2, "last_activity_date": 1566681842, "creation_date": 1566679468, "question_id": 57641402, "link": "https://stackoverflow.com/questions/57641402/deviant-rust-how-can-i-disable-all-the-warnings-and-checks-possible", "title": "Deviant Rust: how can I disable all the warnings and checks possible?", "body": "<p>Let's assume I wanted to write horrific and evil <em>code</em> that compiled with <code>rustc</code>. How many compiler-checks, type-checks, and warnings can I disable without recompiling Rust? And how would I go about doing it?</p>\n\n<p>I'm looking for the Perl equivalent of <code>no warnings; no strict;</code></p>\n\n<hr>\n\n<p>Obviously I know this isn't good advice. I want to understand the configuration options of <code>rustc</code> the fun way.</p>\n"}, {"tags": ["rust", "tuples", "iteration"], "comments": [{"owner": {"reputation": 27334, "user_id": 7758804, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UBA7j.jpg?s=128&g=1", "display_name": "Trenton McKinney", "link": "https://stackoverflow.com/users/7758804/trenton-mckinney"}, "edited": false, "score": 0, "creation_date": 1566673808, "post_id": 57640774, "comment_id": 101733407, "body": "<a href=\"https://users.rust-lang.org/t/tuples-in-for-loops/18321\" rel=\"nofollow noreferrer\">Tuples in for loops</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 8, "creation_date": 1566674522, "post_id": 57640774, "comment_id": 101733529, "body": "&quot;[L]ike in python and any other programming language&quot; \u2013 I don&#39;t think there is a single statically typed programming language that lets you iterate a heterogeneous tuple type. Python is dynamically typed."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 7, "last_activity_date": 1566674849, "last_edit_date": 1566674849, "creation_date": 1566674179, "answer_id": 57640888, "question_id": 57640774, "link": "https://stackoverflow.com/questions/57640774/is-it-possible-to-iterate-over-a-tuple/57640888#57640888", "title": "Is it possible to iterate over a tuple?", "body": "<p>The type of each element of a tuple can be different, so you can't iterate over them.  Tuples are not even guaranteed to store their data in the same order as the type definition, so they wouldn't be good candidates for efficient iteration, even if you were to implement <code>Iterator</code> for them yourself.</p>\n\n<p>However, an array is exactly equivalent to a tuple, with all elements of the same type:</p>\n\n<pre><code>let tup = [1, 2, 3];\nfor i in tup.iter() {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/29148544/how-to-iterate-or-map-over-tuples\">How to iterate or map over tuples?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/13442544/why-does-the-2-tuple-functor-instance-only-apply-the-function-to-the-second-elem\">Why does the 2-tuple Functor instance only apply the function to the second element?</a></li>\n</ul>\n"}], "owner": {"reputation": 101, "user_id": 11945764, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-FyEZos0V98Y/AAAAAAAAAAI/AAAAAAAAABc/DdhL87uvv7E/photo.jpg?sz=128", "display_name": "Ahmed Saeed", "link": "https://stackoverflow.com/users/11945764/ahmed-saeed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4038, "favorite_count": 0, "answer_count": 1, "score": 10, "last_activity_date": 1566749086, "creation_date": 1566673222, "last_edit_date": 1566749086, "question_id": 57640774, "link": "https://stackoverflow.com/questions/57640774/is-it-possible-to-iterate-over-a-tuple", "title": "Is it possible to iterate over a tuple?", "body": "<p>I want to iterate over a tuple using a loop, like in Python. Is it possible in Rust?</p>\n\n<pre><code>let tup1 = (1, 2, 3);\nfor i in tup1.iter() {\n    println!(\"{}\", i);\n}          \n</code></pre>\n"}, {"tags": ["module", "rust", "traits"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1566665566, "post_id": 57639568, "comment_id": 101731539, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48071513/how-to-use-one-module-from-another-module-in-a-rust-cargo-project\">How to use one module from another module in a Rust cargo project?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 7072, "user_id": 1816262, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IcKpN.png?s=128&g=1", "display_name": "OMGtechy", "link": "https://stackoverflow.com/users/1816262/omgtechy"}, "edited": false, "score": 0, "creation_date": 1566666511, "post_id": 57639893, "comment_id": 101731728, "body": "Thank you very much, this had been driving me mad for hours!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1566665625, "creation_date": 1566665625, "answer_id": 57639893, "question_id": 57639568, "link": "https://stackoverflow.com/questions/57639568/errore0277-the-trait-bound-my-structmystruct-my-traitmytrait-is-not-sa/57639893#57639893", "title": "error[E0277]: the trait bound `my_struct::MyStruct: my_trait::MyTrait` is not satisfied", "body": "<p>You have declared the module <code>my_trait</code> twice, so there are actually two different traits called <code>MyTrait</code>: <code>crate::my_trait</code> and <code>crate::my_struct::my_trait</code>.</p>\n\n<p>You don't need to declare the module in the <code>my_struct</code> module. Instead, use the module that is declared in the crate root, with:</p>\n\n<pre><code>use crate::my_trait::MyTrait;\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>use super::my_trait::MyTrait;\n</code></pre>\n"}], "owner": {"reputation": 7072, "user_id": 1816262, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IcKpN.png?s=128&g=1", "display_name": "OMGtechy", "link": "https://stackoverflow.com/users/1816262/omgtechy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 57639893, "answer_count": 1, "score": 0, "last_activity_date": 1566668191, "creation_date": 1566663056, "last_edit_date": 1566668191, "question_id": 57639568, "link": "https://stackoverflow.com/questions/57639568/errore0277-the-trait-bound-my-structmystruct-my-traitmytrait-is-not-sa", "title": "error[E0277]: the trait bound `my_struct::MyStruct: my_trait::MyTrait` is not satisfied", "body": "<p>I am writing projects in Rust to help me learn it, but am having trouble implementing a trait and then using a function required by that trait when a type implementing it is passed to a function.</p>\n\n<p>To try and narrow down the problem, I've created an <a href=\"https://stackoverflow.com/help/mcve\">MVCE</a>. Here is the error message and code:</p>\n\n<p><strong>error message</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `my_struct::MyStruct: my_trait::MyTrait` is not satisfied\n  --&gt; src\\main.rs:12:5\n   |\n12 |     invoke_print_i32(&amp;MyStruct { });\n   |     ^^^^^^^^^^^^^^^^ the trait `my_trait::MyTrait` is not implemented for `my_struct::MyStruct`\n   |\nnote: required by `invoke_print_i32`\n  --&gt; src\\main.rs:7:1\n   |\n7  | fn invoke_print_i32&lt;T: MyTrait&gt;(instance: &amp;T) {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><strong>my_trait.rs</strong></p>\n\n<pre><code>pub trait MyTrait {\n    fn print_i32(&amp;self, n: i32);\n}\n</code></pre>\n\n<p><strong>my_struct.rs</strong></p>\n\n<pre><code>#[path = \"my_trait.rs\"]\nmod my_trait;\nuse my_trait::MyTrait;\n\npub struct MyStruct { }\n\nimpl MyTrait for MyStruct {\n    fn print_i32(&amp;self, n: i32) {\n        println!(\"n: {}\", n);\n    }  \n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>mod my_trait;\nuse my_trait::MyTrait;\n\nmod my_struct;\nuse my_struct::MyStruct;\n\nfn invoke_print_i32&lt;T: MyTrait&gt;(instance: &amp;T) {\n    instance.print_i32(42);\n}\n\nfn main() {\n    invoke_print_i32(&amp;MyStruct { });\n}\n</code></pre>\n\n<p>My attempts at researching the problem mostly found people trying to implement fairly standard Rust traits, for example:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35458562/1816262\">How can I implement Rust&#39;s Copy trait?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39210311/1816262\">The trait bound is not satisfied in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/37779313/1816262\">The trait bound is not satisfied</a></li>\n</ul>\n\n<p>I also read somewhere that I needed to reimplement the trait for variables such as <code>&amp;MyStruct</code>, but my attempts to do so didn't resolve the issue.</p>\n\n<p><strong>extra info</strong></p>\n\n<ul>\n<li><code>rustc -V</code> outputs <code>rustc 1.36.0 (a53f9df32 2019-07-03)</code></li>\n<li><code>cargo -V</code> outputs <code>cargo 1.36.0 (c4fcfb725 2019-05-15)</code></li>\n<li>Platform/OS is Windows 10 Pro (x86_64)</li>\n</ul>\n\n<p><strong>question</strong></p>\n\n<p>What am I doing wrong; how can I correctly implement the trait?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1566662007, "post_id": 57639194, "comment_id": 101730801, "body": "Seems to be a crate version incompatibility issue. The compiling error only happens to me under image-0.22.1 + imageproc-0.18.0. With a small modification, it compiles under image-0.21.0 + imageproc-0.18.0"}, {"owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1566662221, "post_id": 57639194, "comment_id": 101730849, "body": "@edwardw what modifications you did?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1566662319, "post_id": 57639194, "comment_id": 101730872, "body": "Change <code>white</code> to be type <code>Rgba</code> instead of <code>Rgb</code> as <code>draw_hollow_rect_mut</code> dictates."}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 288, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1566659569, "creation_date": 1566659569, "question_id": 57639194, "link": "https://stackoverflow.com/questions/57639194/how-can-i-draw-a-rectangle-in-image-using-rust-language", "title": "How can I draw a rectangle in image using rust language", "body": "<p>I'm trying to open an image, converting it into gray, and drawing a rectangle, then save it under another name, so, I'm using <a href=\"https://github.com/image-rs/image\" rel=\"nofollow noreferrer\">image</a> and <a href=\"https://github.com/image-rs/imageproc\" rel=\"nofollow noreferrer\">imageproc</a>, and wrote the below code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use image::{GenericImageView, FilterType, Rgb};\nuse imageproc::drawing::draw_hollow_rect_mut;\nuse imageproc::rect::Rect;\n\nfn main() {\n    let img = image::open(\"self.jpg\").unwrap();\n\n    let mut gray = img.grayscale();\n    let white = Rgb([255u8, 255u8, 255u8]);\n\n    draw_hollow_rect_mut(&amp;mut gray, Rect::at(60, 10).of_size(20, 20), white);\n\n    gray.save(\"gray.png\").unwrap();\n}\n</code></pre>\n\n<p>But I got the below error:</p>\n\n<pre><code>error[E0277]: the trait bound `image::dynimage::DynamicImage: image::image::GenericImage` is not satisfied\n  --&gt; src/main.rs:34:5\n   |\n34 |     draw_hollow_rect_mut(&amp;mut gray, Rect::at(60, 10).of_size(20, 20), white);\n   |     ^^^^^^^^^^^^^^^^^^^^ the trait `image::image::GenericImage` is not implemented for `image::dynimage::DynamicImage`\n\n   = note: required by `imageproc::drawing::rect::draw_hollow_rect_mut`\n</code></pre>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1566740884, "post_id": 57639162, "comment_id": 101744084, "body": "well... like that xd"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566660037, "post_id": 57639197, "comment_id": 101730395, "body": "That&#39;s... not even legal C++? It&#39;s not clear to me what argument you&#39;re making besides &quot;don&#39;t do that&quot;, which is not an answer to the question."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1566665272, "post_id": 57639197, "comment_id": 101731464, "body": "This neither fits the expression of the problem nor   semantically make sense. Even after pretending it is valid C++, it would say that you have both TypeA and TypeB data valid. This represents a huge class of bugs in software. Please unlearn this and do not perpetuate this."}], "tags": [], "owner": {"reputation": 933, "user_id": 804894, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2258542a0618e279d6eae1d7b4364abe?s=128&d=identicon&r=PG", "display_name": "tricknology", "link": "https://stackoverflow.com/users/804894/tricknology"}, "is_accepted": false, "score": -3, "last_activity_date": 1566659573, "creation_date": 1566659573, "answer_id": 57639197, "question_id": 57639162, "link": "https://stackoverflow.com/questions/57639162/how-to-conditionally-deserialize-json-to-two-different-variants-of-an-enum/57639197#57639197", "title": "How to conditionally deserialize JSON to two different variants of an enum?", "body": "<p>This may be a person opinion but I would generally try to avoid serialization / deserialization on enums.  </p>\n\n<p>Would this not be close to the same thing in C++?</p>\n\n<pre><code>struct DataValue final{\n  TypeA(Vec&lt;u32&gt;) final,\n  TypeB(Vec&lt;Vec&lt;u32&gt;&gt;) final\n}\n\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 2, "last_activity_date": 1566673706, "creation_date": 1566673706, "answer_id": 57640822, "question_id": 57639162, "link": "https://stackoverflow.com/questions/57639162/how-to-conditionally-deserialize-json-to-two-different-variants-of-an-enum/57640822#57640822", "title": "How to conditionally deserialize JSON to two different variants of an enum?", "body": "<p>Fortunately <code>serde</code> has build-in support for <a href=\"https://serde.rs/enum-representations.html#internally-tagged\" rel=\"nofollow noreferrer\">enum type</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# serde = { version = \"1.0.99\", features = [\"derive\"] }\n//# serde_json = \"1.0.40\"\n\nuse serde::Deserialize;\n\n#[derive(Deserialize, Debug)]\n#[serde(tag = \"type\")]\nenum Data {\n    A { value: Vec&lt;u32&gt; },\n    B { value: Vec&lt;Vec&lt;u32&gt;&gt; },\n}\n\nfn main() {\n    let a: Data = serde_json::from_str(r#\"{\"type\": \"A\", \"value\": [ 1, 2, 3, 4, 5 ]}\"#).unwrap();\n    let b: Data =\n        serde_json::from_str(r#\"{\"type\": \"B\", \"value\": [[1, 2, 3, 4, 5], [6, 7, 8 ]]}\"#).unwrap();\n\n    println!(\"{:?}\", a);\n    println!(\"{:?}\", b);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1566674172, "last_edit_date": 1566674172, "creation_date": 1566673744, "answer_id": 57640825, "question_id": 57639162, "link": "https://stackoverflow.com/questions/57639162/how-to-conditionally-deserialize-json-to-two-different-variants-of-an-enum/57640825#57640825", "title": "How to conditionally deserialize JSON to two different variants of an enum?", "body": "<p>You can deserialize your JSON data directly to an instance of <code>DataValue</code> if you give Serde enough information to know how to do this:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\n#[serde(tag = \"type\", content = \"value\")]\nenum DataValue {\n    #[serde(rename = \"A\")]\n    TypeA(Vec&lt;u32&gt;),\n    #[serde(rename = \"B\")]\n    TypeB(Vec&lt;Vec&lt;u32&gt;&gt;),\n}\n\nlet data_a = r#\"\n    {\n        \"type\": \"A\",\n        \"value\": [1, 2, 3, 4, 5]\n    }\"#;\nlet a: DataValue = serde_json::from_str(data_a)?;\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d8a5d4058ea519523a9beb41a335262\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>If you name your enum variants <code>A</code> and <code>B</code>, you can omit the <code>#[serde(rename = \"\u2026\")]</code> attributes.</p>\n\n<p>This way of serializing enums is called \"adjacent tagging\". You can learn about the various options of tagging enums in the <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\">Serde documentation on enum serialization</a>.</p>\n\n<p>Your <code>Data</code> struct contains a redundant additional tag <code>data_type</code>. This information is already encoded in the enum, so I don't think you need this. If you need this information as a string, you can add a method to the enum:</p>\n\n<pre><code>impl DataValue {\n    fn variant_name(&amp;self) -&gt; &amp;'static str {\n        match self {\n            DataValue::TypeA(_) =&gt; \"A\",\n            DataValue::TypeB(_) =&gt; \"B\",\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 655, "favorite_count": 0, "accepted_answer_id": 57640825, "answer_count": 3, "score": 2, "last_activity_date": 1566674172, "creation_date": 1566659266, "last_edit_date": 1566659595, "question_id": 57639162, "link": "https://stackoverflow.com/questions/57639162/how-to-conditionally-deserialize-json-to-two-different-variants-of-an-enum", "title": "How to conditionally deserialize JSON to two different variants of an enum?", "body": "<p>Let's say I have JSON data like the following:</p>\n\n<pre><code>{\n  \"type\": \"A\",\n  \"value\": [ 1, 2, 3, 4, 5 ]\n}\n</code></pre>\n\n<pre><code>{\n  \"type\": \"B\",\n  \"value\": [ [ 1, 2, 3, 4, 5 ], [ 6, 7, 8 ] ]\n}\n</code></pre>\n\n<p><code>type</code> determines the type of <code>value</code>, which in the first example is <code>Vec&lt;u32&gt;</code> and in the second is <code>Vec&lt;Vec&lt;u32&gt;&gt;</code>.</p>\n\n<p>If I represent the above data as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum DataValue {\n  TypeA(Vec&lt;u32&gt;),\n  TypeB(Vec&lt;Vec&lt;u32&gt;&gt;)\n}\n\nstruct Data {\n  data_type: String,\n  value: DataValue\n}\n</code></pre>\n\n<p>How do I implement serde deserialization to properly decode these values?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1566654095, "post_id": 57638096, "comment_id": 101729021, "body": "Do not forget about <code>unsafe</code>. Such issues are what it is usually used for."}, {"owner": {"reputation": 2154, "user_id": 3763264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43c767b10ee2ee9aa75680bf7377779?s=128&d=identicon&r=PG&f=1", "display_name": "Finomnis", "link": "https://stackoverflow.com/users/3763264/finomnis"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 1, "creation_date": 1566656019, "post_id": 57638096, "comment_id": 101729500, "body": "I kind of disagree ... I&#39;d rather use safe rust as much as possible. IMO unsafe rust is for communication with external libraries and for performance optimization on cache level."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1566663368, "post_id": 57638096, "comment_id": 101731097, "body": "I don&#39;t know why you want to avoid using indices. <code>arr[i] = arr[i-2] + arr[i-1]</code> seems more clear to me than <code>*elem = arr[i-2] + arr[i-1]</code> even before you get into the <code>iter_mut().skip(2).enumerate()</code> bit. You&#39;re accessing multiple elements at once -- that&#39;s fundamentally a violation of the <code>Iterator</code> contract, which only gives you one thing at once."}], "answers": [{"comments": [{"owner": {"reputation": 2154, "user_id": 3763264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43c767b10ee2ee9aa75680bf7377779?s=128&d=identicon&r=PG&f=1", "display_name": "Finomnis", "link": "https://stackoverflow.com/users/3763264/finomnis"}, "edited": false, "score": 0, "creation_date": 1566655892, "post_id": 57638643, "comment_id": 101729465, "body": "While this might work in 1D, i don&#39;t see an easy way of transferring it to 2D, as my real use-case will be :/ I am a big fan of functional programming, though, I wish this would work as a solution"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 2154, "user_id": 3763264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43c767b10ee2ee9aa75680bf7377779?s=128&d=identicon&r=PG&f=1", "display_name": "Finomnis", "link": "https://stackoverflow.com/users/3763264/finomnis"}, "edited": false, "score": 1, "creation_date": 1566656613, "post_id": 57638643, "comment_id": 101729638, "body": "With the power of functional holy trinity: map, filter and fold, you can do anything to a collection. Take your time and you&#39;ll get there."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1566655653, "last_edit_date": 1566655653, "creation_date": 1566655245, "answer_id": 57638643, "question_id": 57638096, "link": "https://stackoverflow.com/questions/57638096/accessing-an-array-while-iterating-over-it-mutably/57638643#57638643", "title": "Accessing an array while iterating over it mutably", "body": "<p>A more 'functional' way to implement your simplified use-case could be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut arr = vec![0; 10];\n\n    arr[0] = 1;\n    arr[1] = 1;\n\n    let arr: Vec&lt;i32&gt; = arr\n        .iter()\n        .skip(2)\n        .scan((arr[0], arr[1]), |pair, _| {\n            let (a, b) = *pair;\n            let c = a + b;\n            *pair = (b, c);\n\n            Some(c)\n        })\n        .collect();\n\n    println!(\"{:?}\", arr);\n}\n</code></pre>\n\n<p>But this is not necessarily more rusty or easier to read than iterating with index. That said, if you are willing to go down the FP rabbit hole, it can be very rewarding.</p>\n"}], "owner": {"reputation": 2154, "user_id": 3763264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43c767b10ee2ee9aa75680bf7377779?s=128&d=identicon&r=PG&f=1", "display_name": "Finomnis", "link": "https://stackoverflow.com/users/3763264/finomnis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566655653, "creation_date": 1566650879, "last_edit_date": 1592644375, "question_id": 57638096, "link": "https://stackoverflow.com/questions/57638096/accessing-an-array-while-iterating-over-it-mutably", "title": "Accessing an array while iterating over it mutably", "body": "<p><em>Disclaimer</em>: I am fairly new to Rust.</p>\n<h1>Simplified Use-Case</h1>\n<p>From the best practices I read about Rust so far, I understood that iterating with <code>for elem in array {}</code> is preferred over to <code>for i in 0..array.len(){}</code>.</p>\n<p>Is there any way to iterate over an array mutably, while simultaneously accessing specific elements from it by index?</p>\n<p>My usecase is quite complex, so I wrote a simple fibonacci calculator to demonstrate the problem:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut arr = vec![0;10];\n    \narr[0] = 1;\narr[1] = 1;\n    \nfor (i, elem) in arr.iter_mut().skip(2).enumerate() {\n    *elem = arr[i-2] + arr[i-1];\n}\n   \nprintln!(&quot;{:?}&quot;, arr);\n</code></pre>\n<blockquote>\n<p>error[E0502]: cannot borrow <code>arr</code> as immutable because it is also borrowed as mutable</p>\n</blockquote>\n<p>Of course this makes sense, but is there a way around that? I mean, from a programmers perspective, it is obvious that this code is safe, because we borrow immutable from an array that we already have in the current context as mutable, just not directly, but through an iterator.</p>\n<p>Of course, if I implement it by iterating over the indices, it works:</p>\n<pre><code>let mut arr = vec![0;10];\n    \narr[0] = 1;\narr[1] = 1;\n    \nfor i in 2..arr.len(){\n    arr[i] = arr[i-2] + arr[i-1];\n}\n    \nprintln!(&quot;{:?}&quot;, arr);\n</code></pre>\n<blockquote>\n<p>[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</p>\n</blockquote>\n<p>So, my question, is there another way to solve this problem, or do I have to use the second version?</p>\n<hr />\n<h1>Real use-case</h1>\n<p>This code is to demonstrate my use-case and does not do anything on its own.</p>\n<pre><code>let mut labels = vec![vec![0; width]; height];\n\nfor (y, row) in labels.iter_mut().enumerate() {\n    for (x, label) in row.iter_mut().enumerate() {\n        let label_left = {\n            if x &gt; 0 &amp;&amp; some_condition() {\n                Some(labels[y][x - 1]) // &lt;== Fails\n            } else {\n                None\n            }\n        };\n\n        let label_top = {\n            if y &gt; 0 &amp;&amp; some_condition() {\n                Some(labels[y - 1][x]) // &lt;== Fails\n            } else {\n                None\n            }\n        };\n\n        *label = some_function(label_left, label_right);\n    }\n}\n</code></pre>\n<p>Rewriting this with a 2D-index based iteration feels a lot like I'm trying to force C programming style into Rust, so I can't believe it's the intended way.</p>\n"}, {"tags": ["for-loop", "rust", "move", "borrow-checker", "ownership"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1566645496, "post_id": 57637354, "comment_id": 101727227, "body": "You can&#39;t do this. Pushing a new item into a vector could cause it to reallocate. If you are only ever adding items to the end of the vector, then you can solve this by looping over vector indices instead of elements, so that the vector isn&#39;t borrowed by the loop."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566651319, "post_id": 57637602, "comment_id": 101728387, "body": "&quot;In your case, you could easily end up having an infinite loop if you add elements while iterating.&quot; That&#39;s not the reason why it&#39;s forbidden though. 1) Infinite loop are perfectly safe. 2) If he were to <i>remove</i> elements, that couldn&#39;t cause an infinite loop, and it&#39;s still forbidden. The reason is it might cause elements to relocate, and you&#39;d end-up with dangling references."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566652159, "post_id": 57637602, "comment_id": 101728567, "body": "@mcarton I just mentioned two easy to understand examples, but never claimed this is the underlying reason for how Rust works. Also, this dangling-references problem depends on how the iterator is implemented. It could be implemented in a completely safe manner, that would never result in memory unsafety. The actual reason why this is not allowed is because <i>Rust says so</i>."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 11, "last_activity_date": 1566646722, "creation_date": 1566646722, "answer_id": 57637602, "question_id": 57637354, "link": "https://stackoverflow.com/questions/57637354/how-to-run-for-loop-on-elements-of-a-vector-and-change-the-vector-inside-the-for/57637602#57637602", "title": "How to run for loop on elements of a vector and change the vector inside the for loop and outside the for loop in rust?", "body": "<p>There are two problems with your code. Luckily, both of them can be solved by changing one thing. The problems are:</p>\n\n<ul>\n<li>Writing <code>for _ in vec1</code> moves the value <code>vec1</code> into the loop. This is a move like every other move, meaning that the value is not accessible after the loop! If you need a refresher on ownership and moving, please read <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html\" rel=\"noreferrer\">the related chapter in the Rust book</a>. You can iterating over references to a vector's elements via <code>for _ in &amp;vec1</code>.</li>\n<li>You are trying to mutate the vector you are iterating over. Regardless of whether you iterate over the vector by value (as you do) or by reference, you cannot change the vector while iterating over it. And there are many good reasons for that! In your case, you could easily end up having an infinite loop if you add elements while iterating. </li>\n</ul>\n\n<p>To solve both problems at the same time, you can iterate over indices to the vector instead of the vectors elements (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=899fc0804d23e85f0992de42fa9cf0eb\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut vec1 = vec![4, 5];\nvec1.push(6);\nfor i in 0..vec1.len() {\n    if vec1[i] % 2 == 0 {\n        vec1.push(7);\n    }\n}\nvec1.push(8);\nprintln!(\"vec1={:?}\", vec1);\n</code></pre>\n\n<p>This way, the vector is not moved nor borrowed by the <code>for</code> loop and we are free to mutate it during and after the loop. This particular solution iterates over the indices of the original vector, meaning that elements added in the loop are not iterated over by the loop. This is a good protection to avoid accidental infinite loops. Please note, however, that you can still shoot yourself in the foot by, for example, removing elements from the vector during iteration. In general, independent of programming language, mutating collections while iterating over them is dangerous and should only be done with care.</p>\n"}], "owner": {"reputation": 63, "user_id": 11967174, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-M934cESZdMo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7_Uy6NxIj2yrby725hFAOQ_NmA/photo.jpg?sz=128", "display_name": "Pandharinath Daspute", "link": "https://stackoverflow.com/users/11967174/pandharinath-daspute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3152, "favorite_count": 1, "accepted_answer_id": 57637602, "answer_count": 1, "score": 3, "last_activity_date": 1566646722, "creation_date": 1566644638, "last_edit_date": 1566645366, "question_id": 57637354, "link": "https://stackoverflow.com/questions/57637354/how-to-run-for-loop-on-elements-of-a-vector-and-change-the-vector-inside-the-for", "title": "How to run for loop on elements of a vector and change the vector inside the for loop and outside the for loop in rust?", "body": "<p>I am new to <strong>Rust</strong>. I need to create a vector before a for loop. Run for loop on it. Change the vector inside the for loop. Then Change the vector after the for loop.  </p>\n\n<p>I tried the following code and tried to use immutable borrow but both did not work. </p>\n\n<pre><code>fn main() {\n    let mut vec1 = vec![4, 5];\n    vec1.push(6);\n    for i in vec1 {\n        if i % 2 == 0 {\n            vec1.push(7);\n        }\n    }\n    vec1.push(8);\n    println!(\"vec1={:?}\", vec1);\n}\n</code></pre>\n\n<p>I expect to compile and change the vector inside and after the for loop. But it shows this error message: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `vec1`\n --&gt; src/main.rs:6:13\n  |\n2 |     let mut vec1 = vec![4, 5];\n  |         -------- move occurs because `vec1` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n3 |     vec1.push(6);\n4 |     for i in vec1 {\n  |              ----\n  |              |\n  |              value moved here\n  |              help: consider borrowing to avoid moving into the for loop: `&amp;vec1`\n5 |         if i % 2 == 0 {\n6 |             vec1.push(7);\n  |             ^^^^ value borrowed here after move\n</code></pre>\n\n<p>Can you explain why move occurs? Can you make it compile?</p>\n"}, {"tags": ["go", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1566642947, "post_id": 57636708, "comment_id": 101726740, "body": "Given that TCP is stream oriented while UDP is message oriented, I wonder what the Go interface looks like and how it even makes sense to handle these the same way."}, {"owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566642985, "post_id": 57636708, "comment_id": 101726750, "body": "@mcarton <a href=\"https://golang.org/pkg/net/#Conn\" rel=\"nofollow noreferrer\">golang.org/pkg/net/#Conn</a>"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 2, "creation_date": 1566649506, "post_id": 57636708, "comment_id": 101728035, "body": "Nobody uses UDP that way. TCP and UDP have distinct requirements, and it makes no sense to expect to send the same stream of data without knowing the underlying protocol. For example, UDP has packet loss and TCP does not. It would be unreliable to send UDP data directly like a stream."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1566675679, "post_id": 57636708, "comment_id": 101733732, "body": "The first sentence of the linked documentation: &quot;<code>Conn</code> is a generic stream-oriented network connection.&quot; Yet, <code>UDPConn</code> indeed implements this interface, which is surprising. I wouldn&#39;t go as far as @SOFe and claim that <i>nobody</i> uses UDP for streaming data \u2013 in fact it&#39;s rather common for real-time applications \u2013 but it is very unusual to classify UDP as a stream-oriented rather than a message-oriented protocol."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566676002, "post_id": 57636708, "comment_id": 101733800, "body": "(To clarify, I actually fully agree with what @SOFe said \u2013 even if you stream data via UDP, you need to know that you are using UDP.)"}, {"owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1566695919, "post_id": 57636708, "comment_id": 101736694, "body": "@SvenMarnach That makes sense. For context, the Go library I mentioned implements a STUN client on top of <code>Conn</code>, and the STUN RFC specifies retry mechanism."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566705951, "post_id": 57636708, "comment_id": 101737606, "body": "@ZizhengTai But then retry mechanism.on TCP is a waste of bandwidth."}, {"owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566706143, "post_id": 57636708, "comment_id": 101737627, "body": "@SOFe Well the protocol specifies different retry mechanisms for TCP and UDP. But you&#39;re right that I need to handle TCP and UDP quite differently anyway."}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 150, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1566642653, "creation_date": 1566639032, "last_edit_date": 1566642653, "question_id": 57636708, "link": "https://stackoverflow.com/questions/57636708/rust-abstraction-over-different-types-of-network-connections", "title": "Rust abstraction over different types of network connections", "body": "<p>I was recently working with a Go project and a Rust project, and noticed that in Go's standard library there is a <code>net.Conn</code> interface that represents \"a generic stream-oriented network connection,\" such as a UDP connection, a TCP connection, or a TLS-over-TCP connection.</p>\n\n<p>I'm wondering if there is something similar to this in Rust. I'm interested in the async ecosystem, so I looked at <code>tokio::net::{TcpStream, UdpSocket}</code> and <code>async_std::net::{TcpStream, UdpSocket}</code>, but they don't seem to implement some common trait.</p>\n\n<p>If I want to abstract over at least the aforementioned three types of network connections, is there some abstraction like a trait in the stdlib or elsewhere that I can use?</p>\n"}, {"tags": ["asynchronous", "rust", "move", "spawn", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "is_accepted": false, "score": 0, "last_activity_date": 1566757757, "creation_date": 1566757757, "answer_id": 57648678, "question_id": 57636240, "link": "https://stackoverflow.com/questions/57636240/how-to-borrow-avoid-a-move-of-a-socket-in-tokiospawnasync/57648678#57648678", "title": "How to borrow/avoid a move of a socket in tokio::spawn(async", "body": "<p>Well, I solved the problem in a different way. Tokio's UdpSocket can be split into a receiving and a sending part. I run both of them in separate task and then use multiple tokio::mpsc::channel to communicate between the two task and the main task.</p>\n"}], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 541, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566757757, "creation_date": 1566634486, "question_id": 57636240, "link": "https://stackoverflow.com/questions/57636240/how-to-borrow-avoid-a-move-of-a-socket-in-tokiospawnasync", "title": "How to borrow/avoid a move of a socket in tokio::spawn(async", "body": "<p>I am trying to write an udp client in rust which establishes a socket connection to a remote server, should listen for incoming messages(and then process the data), while also be able to send messages and then disconnects after a given time. I would like to use the new async/await syntax in tokio and spawn a task that takes care of reading incoming/processing the incoming messages, while keeping the socket in the main task to send messages in parallel, especially at the end the protocol to close the connection.\nHow can I avoid moving the socket into the spawned task? Is there a way to borrow it in that task maybe trough a reference. I looked through answers to similar questions but could not understand it as they apply to the version of tokio without the new syntax and as I am an absolute beginner in rust.</p>\n\n<p>I can move the socket into the spawned function, but then it is of course no longer available to the code outside, which needs to send messages in parallel.</p>\n\n<pre><code>#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let remote_addr: SocketAddr = \"...:xxxx\".parse()?;\n\n        let local_addr = SocketAddr::new(IpAddr::V4(Ipv4Addr::new(0,0,0,0)), 0);\n        let mut socket = UdpSocket::bind(&amp;local_addr)?;\n                socket.connect(&amp;remote_addr)?;\n// do some protocol work with the socket to establish a connection\n    tokio::spawn(async move {\n      let mut buf = [0; 1024];\n\n      loop {\n        let l = match socket.recv(&amp;mut buf).await {\n            // socket closed\n            Ok(l) if l == 0 =&gt; {\n              println!(\"socket closed\");\n              return;\n            },\n            Ok(l) =&gt; l,\n            Err(e) =&gt; {\n                println!(\"failed to read from socket; err = {:?}\", e);\n                return;\n            }\n        };\n        let data = buf[..l].to_vec();\n        println!(\"Received {} bytes:\\n{:#x?}\", l, data);\n      }\n    });\n\n// here I would like to use the socket again to send messages and to do the disconnect protocol, i.e.\nlet len = socket.recv(.....\n</code></pre>\n\n<p>When I use the socket afterwards, I get the error that the variable moved due to use in generator and gets dropped at the end of the spawn task (which it should not). Later use of socket says value borrowed after move, which is clear, but how can I avoid it?\nI would appreciate if somebody could help me with this beginner question,  especially in the context of the new async/await syntax of tokio. Thanks!</p>\n"}, {"tags": ["rust", "binary-search"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 5, "creation_date": 1566595576, "post_id": 57633089, "comment_id": 101719612, "body": "<code>binary_search</code> requires the array to be sorted. <code>[&#39;_res&#39;, &#39;b&#39;, &#39;a&#39;]</code> is not sorted."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 3, "creation_date": 1566611550, "post_id": 57633089, "comment_id": 101722091, "body": "Some things to note about being idiomatic are to take in <code>&amp;str</code> instead of <code>&amp;String</code> and <code>&amp;[String]</code> instead of <code>&amp;Vec&lt;String&gt;</code>. Also, using <code>std::process::exit</code> is very unidiomatic rust, try using a <code>Result</code> instead."}, {"owner": {"reputation": 3, "user_id": 11969331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01827ede6f5dc21b62f10d25e652f8a8?s=128&d=identicon&r=PG&f=1", "display_name": "aunetx", "link": "https://stackoverflow.com/users/11969331/aunetx"}, "edited": false, "score": 0, "creation_date": 1566636610, "post_id": 57633089, "comment_id": 101725538, "body": "Thanks a lot ! But if my <code>&amp;String</code> is not known at compile time, is it possible to convert it to <code>&amp;str</code> ? If so, I don&#39;t understand well the difference between them. And for <code>std::process::exit</code>, I had already planed to change my code to use <code>Result</code> in case of error, but as it is very recursive this require lots of change..."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 3, "creation_date": 1566692010, "post_id": 57633089, "comment_id": 101736321, "body": "A <code>str</code> is the data in a string, its size is not known at compile time due to the nature of the data. A <code>String</code> is essentially a manageable <code>str</code> where you can grow it and mutate the contents. Anywhere you want a <code>&amp;str</code> you can pass a <code>&amp;String</code> or you can do <code>&amp;*my_string</code>. Using a result in a recursive function is easy; <code>fn my_fn() -&gt; Result&lt;...&gt; { my_fn()?; Ok(...) }</code>. The <code>?</code> operator tries to unwrap an option or result, if it can&#39;t then it returns early with an <code>Err</code> or a <code>None</code>."}], "answers": [{"comments": [{"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 6, "creation_date": 1566597665, "post_id": 57633379, "comment_id": 101720116, "body": "It really doesn&#39;t make sense to sort the data (<code>O(nlogn)</code> performance) to use a binary search (<code>O(logn)</code> performance) to avoid using a standard search (<code>O(n)</code> performance), unless you&#39;re searching numerous times."}, {"owner": {"reputation": 3, "user_id": 11969331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01827ede6f5dc21b62f10d25e652f8a8?s=128&d=identicon&r=PG&f=1", "display_name": "aunetx", "link": "https://stackoverflow.com/users/11969331/aunetx"}, "reply_to_user": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566636447, "post_id": 57633379, "comment_id": 101725507, "body": "Okayyy, now I understand ! Thank you, but if, as said @AlexanderHuszagh, it doesn&#39;t make sense to use binary_search(), how can I do a standard search ? Rust doc is not expensive in explainations..."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "reply_to_user": {"reputation": 3, "user_id": 11969331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01827ede6f5dc21b62f10d25e652f8a8?s=128&d=identicon&r=PG&f=1", "display_name": "aunetx", "link": "https://stackoverflow.com/users/11969331/aunetx"}, "edited": false, "score": 1, "creation_date": 1566652812, "post_id": 57633379, "comment_id": 101728698, "body": "@aunetx, you can use the Iterator <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\">find</a> or <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.position\" rel=\"nofollow noreferrer\">position</a> methods, both which use a linear search to find an element by a custom predicate. In this case, you want a simple equality predicate."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 1, "creation_date": 1566666303, "post_id": 57633379, "comment_id": 101731678, "body": "@David, I would recommend updating your answer to include both algorithms: one for repeated searches within the same list (sort then use a binary search, although you may want to use a set in that case), or a simple linear search using <code>find()</code> or <code>position</code>."}], "tags": [], "owner": {"reputation": 46, "user_id": 11963700, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RU5Tnp8fMxQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd-Icp7Ik8ojfHxXDB5zacgG-ricA/photo.jpg?sz=128", "display_name": "David Thureson", "link": "https://stackoverflow.com/users/11963700/david-thureson"}, "is_accepted": false, "score": 1, "last_activity_date": 1566597412, "last_edit_date": 1566597412, "creation_date": 1566596942, "answer_id": 57633379, "question_id": 57633089, "link": "https://stackoverflow.com/questions/57633089/searching-a-string-into-vecstring-in-rust/57633379#57633379", "title": "Searching a String into Vec&lt;String&gt; in rust", "body": "<p>As mcarton said, the vector needs to be sorted before you can do a binary search. Here's an example:</p>\n\n<pre><code>let mut v = vec![String::from(\"_res\"), String::from(\"b\"), String::from(\"a\")];\nprintln!(\"{:?}\", &amp;v);\n\nv.sort_unstable();\nprintln!(\"{:?}\", &amp;v);\n</code></pre>\n\n<p>I tried this with your code and it found \"a\" in the second position. Without the call to <code>sort_unstable()</code> it failed to find \"a\".</p>\n"}, {"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 2, "last_activity_date": 1566673999, "last_edit_date": 1566673999, "creation_date": 1566667627, "answer_id": 57640141, "question_id": 57633089, "link": "https://stackoverflow.com/questions/57633089/searching-a-string-into-vecstring-in-rust/57640141#57640141", "title": "Searching a String into Vec&lt;String&gt; in rust", "body": "<p>First, a few issues: data must be sorted before using a binary search. A binary search is a fast search algorithm (<code>O(log n)</code>, or scales as the log of the size of the container), much faster than a linear search (<code>O(n)</code>, or scales linear to the size of the container). However, any speed improvements from a binary search are dwarfed by the overhead of sorting the container (<code>O(n log n)</code>).</p>\n\n<h1>Single Search</h1>\n\n<p>Therefore, the best approach depends on how often you search your container. If you are only going to check it a few times, you should use a linear search, as follows:</p>\n\n<pre><code>fn get_name_index(name: &amp;String, array: &amp;Vec&lt;String&gt;) -&gt; Option&lt;usize&gt; {\n    array.iter().position(|&amp;&amp;x| x == name)\n}\n</code></pre>\n\n<h1>Repeated Searches</h1>\n\n<p>If you are going to repeatedly call <code>get_name_index</code>, you should use a binary search (or possibly even better, below):</p>\n\n<pre><code>// Sort the array before using\narray.sort_unstable();\n\n// Repeatedly call this function\nfn get_name_index(name: &amp;String, array: &amp;Vec&lt;String&gt;) -&gt; Option&lt;usize&gt; {\n    match array.binary_search(name) {\n        Ok(index) =&gt; Some(index),\n        Err(_)    =&gt; None,\n    }\n}\n</code></pre>\n\n<p>However, this may be suboptimal for some cases. A few considerations: a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\">HashSet</a> may be faster for certain sets of data (<code>O(1)</code> complexity at its best). However, this is slightly misleading, since all the characters of the name must be processed on each compare for a <code>HashSet</code>, while generally only a few characters must be compared to determine whether to jump left or right for a binary search. For data that is highly uniform and mostly differs with a few characters at the end, a <code>HashSet</code> might be better, otherwise, I'd generally recommend using <code>binary_search</code> on the vector.</p>\n"}], "owner": {"reputation": 3, "user_id": 11969331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01827ede6f5dc21b62f10d25e652f8a8?s=128&d=identicon&r=PG&f=1", "display_name": "aunetx", "link": "https://stackoverflow.com/users/11969331/aunetx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 969, "favorite_count": 0, "accepted_answer_id": 57640141, "answer_count": 2, "score": -2, "last_activity_date": 1566673999, "creation_date": 1566594806, "last_edit_date": 1566641372, "question_id": 57633089, "link": "https://stackoverflow.com/questions/57633089/searching-a-string-into-vecstring-in-rust", "title": "Searching a String into Vec&lt;String&gt; in rust", "body": "<p>I'm writing a program that interprets a language.</p>\n\n<p>I need to search for a string (not known at compile time) in a <code>Vec</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_name_index(name: &amp;String, array: &amp;Vec&lt;String&gt;) -&gt; usize {\n    match array.binary_search(name) {\n        Ok(index) =&gt; index,\n        Err(_) =&gt; {\n            eprintln!(\"Error : variable {:?} not found in name array\", name);\n            std::process::exit(1)\n        }\n    }\n}\n</code></pre>\n\n<p>This happens multiple times during execution, but at the moment, the <code>array.binary_search()</code> function does not return the right answer.</p>\n\n<p>I searched for the error, but my array is what it should be (printing each element, or examining with gdb: the same), and the error is still there.</p>\n\n<p>Is there any other way to search for a <code>String</code> in a <code>Vec&lt;String&gt;</code>? Or is there an error in my code?</p>\n\n<p>Thanks</p>\n"}, {"tags": ["http", "rust"], "comments": [{"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566572542, "post_id": 57628633, "comment_id": 101711135, "body": "You&#39;re assuming the contents are valid UTF8, which is not a good assumption for a binary file (MP3). Try printing <code>contents</code>, you should have nothing."}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "edited": false, "score": 0, "creation_date": 1566573531, "post_id": 57628633, "comment_id": 101711634, "body": "Apparently it handles internal null characters fine, but likely continuation bytes without starting bytes or the inverse should corrupt it. Do not assume binary data is UTF8."}], "answers": [{"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 5, "last_activity_date": 1566593189, "last_edit_date": 1566593189, "creation_date": 1566573487, "answer_id": 57629051, "question_id": 57628633, "link": "https://stackoverflow.com/questions/57628633/how-to-properly-format-in-rust-an-http-response-with-a-media-file/57629051#57629051", "title": "How to properly format in Rust an HTTP response with a media file", "body": "<p>Your issue is you're assuming a UTF-8 encoding for binary data, which is a bad assumption. Bytes are not strings, and binary data is not UTF-8. For example, an MP3 will have internal null character values, which are invalid in UTF-8. Likewise, certain byte patterns are invalid (specifically, invalid start/continuation byte patterns) and will be removed by Rust attempting to represent the MP3 data as a UTF-8 string.</p>\n\n<p>Say, for example:</p>\n\n<pre><code>const MP3: &amp;[u8] = b\"ID3\\x03\\x00\\x00\\x00\\x00\\x00fTCON\\x00\\x00\\x00\\n\\x00\\x00\\x00CinematicTALB\\x00\\x00\\x00\\x16\\x00\\x00\\x00YouTube A\";\n</code></pre>\n\n<p>If we attempt to convert this to to UTF-8, we should get an error. If we use <code>from_utf8_Lossy</code>, it will convert any invalid UTF-8 data to <code>U+FFFD</code>, as per the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8_lossy\" rel=\"nofollow noreferrer\">documentation</a>.</p>\n\n<blockquote>\n  <p>Strings are made of bytes (u8), and a slice of bytes (&amp;[u8]) is made of bytes, so this function converts between the two. Not all byte slices are valid strings, however: strings are required to be valid UTF-8. During this conversion, from_utf8_lossy() will replace any invalid UTF-8 sequences with U+FFFD REPLACEMENT CHARACTER, which looks like this: \ufffd</p>\n</blockquote>\n\n<p>What you want to do is format the HTML header as UTF-8, convert it to raw bytes, and then append the raw MP3 data after. The following code will do that for you:</p>\n\n<pre><code>let contents = &amp;MP3[..];\nlet response = format!(\"HTTP/1.0 200 OK\\r\\nContent-Type: audio/mpeg\\r\\nContent-Length: {}\\r\\n\\r\\n\",\n    contents.len(),\n);\nwriter.write_all(response.as_bytes()).unwrap();\nwriter.write_all(contents).unwrap();\nwriter.flush().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 8751557, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62ae7ec998fd91af21cbb8a37e8392a8?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/8751557/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 57629051, "answer_count": 1, "score": 2, "last_activity_date": 1566593189, "creation_date": 1566571880, "question_id": 57628633, "link": "https://stackoverflow.com/questions/57628633/how-to-properly-format-in-rust-an-http-response-with-a-media-file", "title": "How to properly format in Rust an HTTP response with a media file", "body": "<p>I'm following the example of the Multithreaded web server from the Rust book (<a href=\"https://doc.rust-lang.org/book/ch20-00-final-project-a-web-server.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch20-00-final-project-a-web-server.html</a>).</p>\n\n<p>Sending text files (html) works perfectly. Buy trying to send binary(mp3) files gives an error on the browser.</p>\n\n<p>To send MP3 files I'm trying the following piece of code.\nI believe that the problem is in the conversion to String of the contents.\nI've tried changing the header, trying another kind of Content-Type buy nothing seems to work.</p>\n\n<pre><code>let sent_bytes = contents.len();\nlet contents = &amp;String::from_utf8_lossy(&amp;contents[..]);\nlet response = format!(\"HTTP/1.0 200 OK\\r\\nContent-Type: audio/mpeg\\r\\nContent-Length: {}\\r\\n\\r\\n{}\",\n            sent_bytes,\n            contents\n        );\nwriter.write_all(response.as_bytes()).unwrap();\neprintln!(\"sent {}bytes\\n\", sent_bytes);\nwriter.flush().unwrap();\n</code></pre>\n\n<p>The result is that the browser cannot reproduce the file. In fact, if I manage to download the sent file it's corrupted.</p>\n\n<p>How am I supposed to encode the file to send it to the browser?</p>\n"}, {"tags": ["amazon-s3", "rust", "rusoto"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 0, "last_activity_date": 1566824415, "last_edit_date": 1566824415, "creation_date": 1566822163, "answer_id": 57657857, "question_id": 57628337, "link": "https://stackoverflow.com/questions/57628337/how-to-use-select-object-content-via-rusoto-rust/57657857#57657857", "title": "How to use select_object_content via rusoto / rust?", "body": "<p>Unfortunately s3 select still doesn't work on the latest <code>rusoto_s3-0.40.0</code>. The <a href=\"https://github.com/rusoto/rusoto/issues/1092\" rel=\"nofollow noreferrer\">issue</a> you linked has all the answer. The problems are twofold.</p>\n\n<p>First, right now the s3 select request <code>rusoto</code> sends out has a bogus query string. It should be <code>/ObjectName?select&amp;select-type=2</code>, but <code>rusoto</code> encodes it to be <code>/bjectName?select%26select-type=2</code>. That's the error you saw.</p>\n\n<p>To verify, run your project like so:</p>\n\n<pre><code>$ RUST_LOG=rusoto,hyper=debug cargo run\n</code></pre>\n\n<p>You will see logs from <code>rusoto</code> and <code>hyper</code>. Sure enough it emits an incorrect URI. One can even dig into <a href=\"https://github.com/rusoto/rusoto/blob/master/rusoto/services/s3/src/generated.rs#L23770\" rel=\"nofollow noreferrer\">the code responsible</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut params = Params::new();\nparams.put(\"select&amp;select-type\", \"2\");\nrequest.set_params(params);\n</code></pre>\n\n<p>It is supposed to be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut params = Params::new();\nparams.put(\"select-type\", \"2\");\nparams.put(\"select\", \"\");\nrequest.set_params(params);\n</code></pre>\n\n<p>Although the fix seems trivial, remember these are glue code generated from AWS botocore service manifests, not manually coded. To incorporate the fix is not that straightforward.</p>\n\n<p>Second, the bigger problem. The AWS s3 select response uses a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html#RESTObjectSELECTContent-responses\" rel=\"nofollow noreferrer\">customized binary format</a>. <code>rusoto</code> simply doesn't have a deserializer for that yet.</p>\n"}], "owner": {"reputation": 14335, "user_id": 110963, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/096c2c331fa0c946d103e9038930f80e?s=128&d=identicon&r=PG", "display_name": "Achim", "link": "https://stackoverflow.com/users/110963/achim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 57657857, "answer_count": 1, "score": 1, "last_activity_date": 1566824415, "creation_date": 1566570744, "question_id": 57628337, "link": "https://stackoverflow.com/questions/57628337/how-to-use-select-object-content-via-rusoto-rust", "title": "How to use select_object_content via rusoto / rust?", "body": "<p>The following code tries to select some data from a file stored on S3:</p>\n\n<pre><code>  let client = S3Client::new(Region::default());\n  let source = ... object providing bucket and key ...;\n\n  let r = SelectObjectContentRequest {\n      bucket: source.bucket,\n      key: source.key,\n      expression: \"select id from S3Object[*].id\".to_string(),\n      expression_type: \"SQL\".to_string(),\n      input_serialization: InputSerialization {\n          json: Some(JSONInput { type_: Some(\"LINES\".to_string()) }),\n          ..Default::default()\n      },\n      output_serialization: OutputSerialization {\n          json: Some(JSONOutput { record_delimiter: Some(\"\\n\".to_string()) }),\n          ..Default::default()\n      },\n      ..Default::default()\n  };\n</code></pre>\n\n<p>It causes the following error:</p>\n\n<blockquote>\n  <p>The specified method is not allowed against this\n  resource.POST</p>\n</blockquote>\n\n<p>The example is a 1:1 port of a working Python/boto3 example, so I'm quite sure it should work. I found this <a href=\"https://github.com/rusoto/rusoto/issues/1092\" rel=\"nofollow noreferrer\">issue</a>, which is a few month old and the status is not clear to me. How do I get this working with Rust?</p>\n"}, {"tags": ["for-loop", "if-statement", "rust", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 11967174, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-M934cESZdMo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7_Uy6NxIj2yrby725hFAOQ_NmA/photo.jpg?sz=128", "display_name": "Pandharinath Daspute", "link": "https://stackoverflow.com/users/11967174/pandharinath-daspute"}, "edited": false, "score": 0, "creation_date": 1566584592, "post_id": 57625613, "comment_id": 101716303, "body": "Thanks, it worked. Around 6 times faster than MATLAB after release. But say in case we need to create a vector inside an if block and use it outside the scope of the if. How do you do that?   In another approach to find primes I needed to create a vector and use it before for loop, use it inside the for loop, and use it again outside the for loop. let mut vec1=vec![4,5];  vec1.push(6);  for i in 1..4 {vec1.push(6);}  vec1.push(7);"}, {"owner": {"reputation": 63, "user_id": 11967174, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-M934cESZdMo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7_Uy6NxIj2yrby725hFAOQ_NmA/photo.jpg?sz=128", "display_name": "Pandharinath Daspute", "link": "https://stackoverflow.com/users/11967174/pandharinath-daspute"}, "edited": false, "score": 0, "creation_date": 1566585877, "post_id": 57625613, "comment_id": 101716676, "body": "If there is some condition inside for loop that limits the vector from expanding infinitely.  How do we make the above code compile?"}, {"owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "reply_to_user": {"reputation": 63, "user_id": 11967174, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-M934cESZdMo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7_Uy6NxIj2yrby725hFAOQ_NmA/photo.jpg?sz=128", "display_name": "Pandharinath Daspute", "link": "https://stackoverflow.com/users/11967174/pandharinath-daspute"}, "edited": false, "score": 0, "creation_date": 1566586717, "post_id": 57625613, "comment_id": 101716939, "body": "@Pandharinath It&#39;s not really clear what you mean, I would advice you to make a new question about that."}], "tags": [], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "is_accepted": true, "score": 3, "last_activity_date": 1566560736, "last_edit_date": 1566560736, "creation_date": 1566560375, "answer_id": 57625613, "question_id": 57625501, "link": "https://stackoverflow.com/questions/57625501/a-vector-is-created-inside-an-if-block-in-rust-how-to-use-it-after-the-scope-of/57625613#57625613", "title": "A vector is created inside an if block in Rust. How to use it after the scope of if ends?", "body": "<p>There's no reason to have the complicated <code>if initialize==1</code> checking. Just move the initialization of the vector outside the while loop, so it gets done only once:</p>\n\n<pre><code>fn main() {\n    let mut whilechecker = 2;\n\n    let mut vec1 = vec![2];\n    while whilechecker &gt; 0 {\n        whilechecker = whilechecker - 1;\n        for i in &amp;vec1 {\n            if *i == 2 {\n                break;\n            }\n        } //for\n\n        vec1.push(5);\n    } //while\n} //main\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1566561488, "post_id": 57625683, "comment_id": 101705226, "body": "You probably meant to change <code>let mut vec1 = ...</code> to just <code>vec1 = ...</code> inside the <code>if</code>; otherwise you just shadow the outer variable (rustc gives two warnings, about <code>vec1</code> being unnecessarily <code>mut</code> and about it being unused)."}], "tags": [], "owner": {"reputation": 472, "user_id": 11847611, "user_type": "registered", "profile_image": "https://graph.facebook.com/2399816810113390/picture?type=large", "display_name": "Faheem Uz Zaman", "link": "https://stackoverflow.com/users/11847611/faheem-uz-zaman"}, "is_accepted": false, "score": -2, "last_activity_date": 1566561396, "last_edit_date": 1566561396, "creation_date": 1566560626, "answer_id": 57625683, "question_id": 57625501, "link": "https://stackoverflow.com/questions/57625501/a-vector-is-created-inside-an-if-block-in-rust-how-to-use-it-after-the-scope-of/57625683#57625683", "title": "A vector is created inside an if block in Rust. How to use it after the scope of if ends?", "body": "<p>I don't get the thing which you actually want. But here is an example which may help you to define the global scope variable.</p>\n\n<pre><code>fn main() {\n    let mut initiate = 1;\n    let mut whilechecker = 2;\n    let mut vec1 = Vec::new();\n\n    while whilechecker &gt; 0 {\n        if initiate == 1 {\n            let mut vec1 = vec![2];\n        }\n\n        for i in &amp;vec1 {\n            if *i == 2 {\n                break;\n            }\n        }\n\n        initiate = 2;\n        vec1.push(5);\n        whilechecker = whilechecker - 1;\n    }\n    println!(\"{:?}\", vec1);\n}\n</code></pre>\n\n<p>The output of the given code is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[5, 5]\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 11967174, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-M934cESZdMo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7_Uy6NxIj2yrby725hFAOQ_NmA/photo.jpg?sz=128", "display_name": "Pandharinath Daspute", "link": "https://stackoverflow.com/users/11967174/pandharinath-daspute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 57625613, "answer_count": 2, "score": 2, "last_activity_date": 1566647103, "creation_date": 1566559920, "last_edit_date": 1566647103, "question_id": 57625501, "link": "https://stackoverflow.com/questions/57625501/a-vector-is-created-inside-an-if-block-in-rust-how-to-use-it-after-the-scope-of", "title": "A vector is created inside an if block in Rust. How to use it after the scope of if ends?", "body": "<p>I am learning Rust. I am trying to calculate a list of prime numbers up to some number. For that I need to create a vector (<code>vec1</code>) inside an <code>if</code> block and use it outside the scope of the <code>if</code>.  </p>\n\n<p>I tried a code with the same logic in MATLAB and it works. </p>\n\n<p>A simplified version of the actual code looks like this:</p>\n\n<pre><code>fn main() {\n    let mut initiate = 1;\n    let mut whilechecker = 2;\n\n    while whilechecker &gt; 0 {\n        whilechecker = whilechecker - 1;\n\n        if initiate == 1 {\n            let mut vec1 = vec![2];\n        }\n\n        for i in &amp;vec1 {\n            if *i == 2 {\n                break;\n            }\n        } //for\n\n        initiate = 2;\n        vec1.push(5);\n    } //while\n} //main\n</code></pre>\n\n<p>It is supposed to put a list of prime numbers in <code>vec1</code>. But since it is simplified code it should compile and giving a vector (vec1) will suffice.\nBut the compiler says: </p>\n\n<blockquote>\n  <p>cannot find value <code>vec1</code> in this scope</p>\n</blockquote>\n\n<p>at <code>for i in  &amp;vec1{</code> and at <code>vec1.push(5);</code>.</p>\n\n<p>Can you make it compile?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1566558178, "post_id": 57624970, "comment_id": 101703525, "body": "Hi there! I think your question is answered by <a href=\"https://stackoverflow.com/a/32300133/2408867\">this answer</a>. I didn&#39;t dupe-close your question immediately though, because maybe you can work around this limitation. When does your vector of <code>f32</code> change? Have you considered what will happen if it reallocates?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1566562131, "post_id": 57624970, "comment_id": 101705546, "body": "How would you have done this in C++? You can&#39;t put references in structs, and standard C++ doesn&#39;t have <code>restrict</code>/<code>&amp;mut</code>, so <code>Child</code> doesn&#39;t translate at all. Would you have used raw pointers? That&#39;s the <code>unsafe</code> solution in Rust. Or would you have used indices? You can do that in Rust without <code>unsafe</code>. How would you have handled reallocation of the underlying <code>std::vector</code>? Whatever your solution for this is in C++, I can virtually guarantee you could do the same thing in Rust. But if you&#39;re reaching for Rust-specific tools like lifetimes and <code>&amp;mut</code>, you won&#39;t be able to replicate it."}], "answers": [{"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": false, "score": 0, "last_activity_date": 1566562378, "creation_date": 1566562378, "answer_id": 57626128, "question_id": 57624970, "link": "https://stackoverflow.com/questions/57624970/how-to-create-a-pool-of-contigous-memory-across-multiple-structs-in-rust/57626128#57626128", "title": "How to create a pool of contigous memory across multiple structs in Rust?", "body": "<p>Yes, it's currently impossible (or quite hard) in Rust to contain references into sibling data, for example, as you have here, a <code>Vec</code> and slices into that <code>Vec</code> as fields in the same <code>struct</code>. Depending on the architecture of your program, you might solve this by storing the original <code>Vec</code> at some higher-level of your code (for example, it could live on the stack in <code>main()</code> if you're not writing a library) and the slice references at some lower level in a way that the compiler can clearly infer it won't go out of scope before the <code>Vec</code> (doing it in <code>main()</code> after the <code>Vec</code> has been instantiated could work, for example).</p>\n"}, {"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 0, "last_activity_date": 1566568970, "last_edit_date": 1566568970, "creation_date": 1566567349, "answer_id": 57627504, "question_id": 57624970, "link": "https://stackoverflow.com/questions/57624970/how-to-create-a-pool-of-contigous-memory-across-multiple-structs-in-rust/57627504#57627504", "title": "How to create a pool of contigous memory across multiple structs in Rust?", "body": "<p>This is the perfect use case for an arena allocator. There are quite a few. The following demonstration uses <a href=\"https://github.com/fitzgen/bumpalo\" rel=\"nofollow noreferrer\">bumpalo</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# bumpalo = \"2.6.0\"\n\nuse bumpalo::Bump;\nuse std::mem::size_of;\n\nstruct Child1(u32, u32);\n\nstruct Child2(f32, f32, f32);\n\nfn main() {\n    let arena = Bump::new();\n    let c1 = arena.alloc(Child1(1, 2));\n    let c2 = arena.alloc(Child2(1.0, 2.0, 3.0));\n    let c3 = arena.alloc(Child1(10, 11));    \n\n    // let's verify that they are indeed continuous in memory\n    let ptr1 = c1 as *mut _ as usize;\n    let ptr2 = c2 as *mut _ as usize;\n    let ptr3 = c3 as *mut _ as usize;\n    assert_eq!(ptr1 + size_of::&lt;Child1&gt;(), ptr2);\n    assert_eq!(ptr1 + size_of::&lt;Child1&gt;() + size_of::&lt;Child2&gt;(), ptr3);\n}\n</code></pre>\n\n<p>There are caveats, too. The main concern is of course the <a href=\"https://doc.rust-lang.org/reference/type-layout.html\" rel=\"nofollow noreferrer\">alignment</a>; there may be some padding between two consecutive allocations. It is up to you to make sure that doesn't gonna happen if it is a deal breaker.</p>\n\n<p>The other is allocator specific. The bumpalo arena allocator used here, for example, doesn't <code>drop</code> object when itself gets deallocated.</p>\n\n<p>Other than that, I do believe a higher level abstraction like this will benefit your project. Otherwise, it'll just be pointer manipulating c/c++ disguised as rust.</p>\n"}], "owner": {"reputation": 21, "user_id": 11967158, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-v16WW9VYbDY/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcRFlMNENmO0PyoP7AlqkhJVNRvKg/photo.jpg?sz=128", "display_name": "Benjamin Armstrong", "link": "https://stackoverflow.com/users/11967158/benjamin-armstrong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 226, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1566568970, "creation_date": 1566557978, "question_id": 57624970, "link": "https://stackoverflow.com/questions/57624970/how-to-create-a-pool-of-contigous-memory-across-multiple-structs-in-rust", "title": "How to create a pool of contigous memory across multiple structs in Rust?", "body": "<p>I'm trying to create a set of structs in Rust that use a contiguous block of memory. E.g:</p>\n\n<pre><code>&lt;------------ Memory Pool --------------&gt;\n[  Child  |  Child  |  Child  |  Child  ]\n</code></pre>\n\n<p>These structs:</p>\n\n<ul>\n<li><p>may each contain slices of the pool of different sizes </p></li>\n<li><p>should allow access to their slice of the pool without any blocking operations once initialized (I intend to access them on an audio thread).  </p></li>\n</ul>\n\n<p>I'm very new to Rust but I'm well versed in C++ so the main hurdle thus far has been working with the ownership semantics - I'm guessing there's a trivial way to achieve this (without using unsafe) but the solution isn't clear to me. I've written a small (broken) example of what I'm trying to do: </p>\n\n<pre><code>pub struct Child&lt;'a&gt; {\n    pub slice: &amp;'a mut [f32],\n}\n\nimpl Child&lt;'_&gt; {\n    pub fn new&lt;'a&gt;(s: &amp;mut [f32]) -&gt; Child {\n        Child {\n            slice: s,\n        }\n    }\n}\n\npub struct Parent&lt;'a&gt; {\n    memory_pool: Vec&lt;f32&gt;,\n    children: Vec&lt;Child&lt;'a&gt;&gt;,\n}\n\nimpl Parent&lt;'_&gt; {\n    pub fn new&lt;'a&gt;() -&gt; Parent&lt;'a&gt; {\n        const SIZE: usize = 100;\n        let p = vec![0f32; SIZE];\n        let mut p = Parent {\n            memory_pool: p,\n            children: Vec::new(),\n        };\n        // Two children using different parts of the memory pool:\n        let (lower_pool, upper_pool) = p.memory_pool.split_at_mut(SIZE / 2);\n        p.children = vec!{ Child::new(lower_pool), Child::new(upper_pool) };\n        return p; // ERROR - p.memory_pool is borrowed 2 lines earlier\n    }\n}\n</code></pre>\n\n<p>I would prefer a solution that doesn't involve unsafe but I'm not entirely opposed to using it. Any suggestions would be very much appreciated, as would any corrections on how I'm (mis?)using Rust in my example.</p>\n"}, {"tags": ["rust", "travis-ci"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1566548341, "post_id": 57621915, "comment_id": 101698574, "body": "This is probably not the right place for this. There is <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc\" rel=\"nofollow noreferrer\">cargo-bisect-rustc</a> which especially does what you ask for. If you <a href=\"https://github.com/rust-lang/rust/issues/new\" rel=\"nofollow noreferrer\">open an Issue</a> people will help you with it. (edit:) After looking at the CI log, it looks like it is <a href=\"https://github.com/rust-lang/rust/issues/63161\" rel=\"nofollow noreferrer\">Issue #63161</a>, but not 100% sure."}, {"owner": {"reputation": 13, "user_id": 11966336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2371bf758233b32aed92b13bfc0eb7e?s=128&d=identicon&r=PG&f=1", "display_name": "CreepySkeleton", "link": "https://stackoverflow.com/users/11966336/creepyskeleton"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1566549595, "post_id": 57621915, "comment_id": 101699138, "body": "@hellow thanks, it&#39;s good to know. The bug seems pretty much the same"}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1566549013, "creation_date": 1566549013, "answer_id": 57622456, "question_id": 57621915, "link": "https://stackoverflow.com/questions/57621915/is-there-a-way-to-download-compilation-artifacts-from-a-travis-ci-build/57622456#57622456", "title": "Is there a way to download compilation artifacts from a travis-ci build?", "body": "<p>You can download rust artifacts from the <a href=\"https://s3-us-west-1.amazonaws.com/rust-lang-ci2\" rel=\"nofollow noreferrer\">ci server</a> (<code>https://s3-us-west-1.amazonaws.com/rust-lang-ci2</code>), but only for 167 days<sup><a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/be941d7d3e15f0ee795c3394fde663b23d5820fc/src/main.rs#L55\" rel=\"nofollow noreferrer\">2</a></sup>.</p>\n\n<p>An example for a build artifact would be</p>\n\n<blockquote>\n  <p><code>https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rustc-builds-alt/003382e4150984cb476047b3925edf8d75df2d59/rust-nightly-x86_64-unknown-linux-gnu.tar.gz</code></p>\n</blockquote>\n\n<p>There is the <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/\" rel=\"nofollow noreferrer\">cargo-bisect-rustc</a> tool which can help you with bisecting a problem.</p>\n\n<hr>\n\n<p>As a note: your problem is most likely an incremental compiler bug already covered in <a href=\"https://github.com/rust-lang/rust/issues/63161\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/63161</a></p>\n"}], "owner": {"reputation": 13, "user_id": 11966336, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2371bf758233b32aed92b13bfc0eb7e?s=128&d=identicon&r=PG&f=1", "display_name": "CreepySkeleton", "link": "https://stackoverflow.com/users/11966336/creepyskeleton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 57622456, "answer_count": 1, "score": 0, "last_activity_date": 1566549105, "creation_date": 1566546623, "last_edit_date": 1566549105, "question_id": 57621915, "link": "https://stackoverflow.com/questions/57621915/is-there-a-way-to-download-compilation-artifacts-from-a-travis-ci-build", "title": "Is there a way to download compilation artifacts from a travis-ci build?", "body": "<p>I'm working on an open source project and I made a pull request. This project has travis-ci set up to check all incoming pull requests, so it did and it failed. <a href=\"https://travis-ci.org/TeXitoi/structopt/builds/575667984?utm_source=github_status&amp;utm_medium=notification\" rel=\"nofollow noreferrer\">The error it failed with</a> is fairly cryptic and tells me about a bug in the <code>rustc</code> compiler, no wonder it filled me with curiosity and wish to investigate. </p>\n\n<p>This CI account belongs to the project's author (not me) so I tried to <a href=\"https://travis-ci.org/CreepySkeleton/structopt/builds/575687606\" rel=\"nofollow noreferrer\">reproduce the build on my own account</a>. The very same commit <em>passed</em>. Not to mention the same passing situation on my local laptop.</p>\n\n<p>The only thing I can think about is some kind of caching of build artifacts travis does. </p>\n\n<p>So here we are: I have a link to the failing build and I'd like to download the build artifacts produced so I could dig into It or at least report this bug to the <code>rustc</code> team. </p>\n\n<p>Is there any way to do it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "edited": false, "score": 0, "creation_date": 1566539357, "post_id": 57620041, "comment_id": 101695094, "body": "Variable <code>x_mut</code> has to exit scope (older Rust) or stop being used (newer non-lexical lifetimes Rust) in order for the mutable borrow of <code>point</code> to be finished.  As long as one mutable borrow is active, a second one (point for variable <code>y_mut</code>) cannot be established.  The method signatures say <code>&amp;mut self</code>, but in context of <code>main</code>, that self refers to <code>point</code>."}], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 11963700, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RU5Tnp8fMxQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd-Icp7Ik8ojfHxXDB5zacgG-ricA/photo.jpg?sz=128", "display_name": "David Thureson", "link": "https://stackoverflow.com/users/11963700/david-thureson"}, "is_accepted": false, "score": 2, "last_activity_date": 1566539305, "last_edit_date": 1566539305, "creation_date": 1566537363, "answer_id": 57620222, "question_id": 57620041, "link": "https://stackoverflow.com/questions/57620041/how-does-lifetime-rule-stops-multiple-mutable-borrow/57620222#57620222", "title": "How does lifetime rule stops multiple mutable borrow?", "body": "<p>I think your intuition is correct in that the lifetime elision rules don't really explain this. Part of the problem is that the example contains some red herrings. For instance you could comment out:</p>\n\n<pre><code>*y_mut *= 2.0;\n</code></pre>\n\n<p>and still get the error. Also you don't need to actually use <code>x_mut</code> as mutable to get the error. This simpler version illustrates the same problem:</p>\n\n<pre><code>fn main() {\n    let mut point = Point { x: 1.0, y: 2.0 };\n    let x_mut = point.x_mut();\n    let y_mut = point.y_mut();\n\n    println!(\"x_mut = {}\", x_mut);\n}\n</code></pre>\n\n<p>If you comment out the <code>y_mut</code> line or even if you move that line after the call to <code>println!()</code> it works fine. So it's just like you said at the start, you can't have multiple mutable references to <code>point</code> at the same time.</p>\n\n<p>Note that I'm referring only to your post and not the discussion you linked to which I haven't read.</p>\n"}, {"comments": [{"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566543098, "post_id": 57620591, "comment_id": 101696328, "body": "Two mutable reference to disjoint fields can coexist. Thats what he is trying to achieve in this. But what i dont understand is how the lifetime of  <code>self</code> related to this as he suggests and the mock solution to this problem."}, {"owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566574201, "post_id": 57620591, "comment_id": 101711946, "body": "The code you asked about tells the borrow checker that you want to make a mutable borrow of <code>point</code> so that the mutable borrowed return value of <code>.x_mut()</code> can live for as long as the code in <code>main</code> needs it.  Thus, the invocation of <code>point.x_mut()</code> establishes a borrow of <code>point</code> that the compiler takes to live as long as the return result lives.  Since the borrowed return result lives for a time, the mutable borrow of <code>point</code> is taken to live that long as well.  Thus, a second mutable borrow of point for the call to <code>point.y_mut()</code> is not possible within the window of the first such borrow."}, {"owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566575672, "post_id": 57620591, "comment_id": 101712698, "body": "As far as overlapping borrows of disjoint fields, it is possible and a good question: it easy to do directly, but it is the encapsulation into methods that makes it tricky; suggest you (search for that and/or) ask it directly in a separate question.  For example, see <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=f8fc6f2b4c1e02b0cf884264a2f8d060\" rel=\"nofollow noreferrer\">here</a> where we borrow both x and y mutably but in a single method, which uses only one mutable borrow of <code>point</code>."}], "tags": [], "owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "is_accepted": false, "score": 3, "last_activity_date": 1566539892, "creation_date": 1566539892, "answer_id": 57620591, "question_id": 57620041, "link": "https://stackoverflow.com/questions/57620041/how-does-lifetime-rule-stops-multiple-mutable-borrow/57620591#57620591", "title": "How does lifetime rule stops multiple mutable borrow?", "body": "<p>Variable <code>x_mut</code> has to exit scope (older Rust) or stop being used (newer non-lexical lifetimes Rust) in order for the mutable borrow of <code>point</code> to be finished.  As long as one mutable borrow is active, a second one (point for variable <code>y_mut</code>) cannot be established.  The method signatures say <code>&amp;mut self</code>, but in context of <code>main</code>, that self refers to <code>point</code>.</p>\n\n<pre><code>         |\n +-&gt;  18 |     let x_mut = point.x_mut();\n |       |                 ----- first mutable borrow occurs here\n |    19 |     let y_mut = point.y_mut();\n |       |                 ^^^^^ second mutable borrow occurs here\n |    20 | \n +-&gt;  21 |     *x_mut *= 2.0;\n         |     ------------- first borrow later used here\n</code></pre>\n\n<p>The extent of the first borrow is from 18 thru 21, and, you cannot have another mutable borrow of <code>point</code> within that range.&nbsp; So 19 is flagged as an error.&nbsp; line 19's code can happily occur after line 21, so the following is legal:</p>\n\n<pre><code>fn main() {\n    let mut point = Point { x: 1.0, y: 2.0 };\n\n    let x_mut = point.x_mut();\n    *x_mut *= 2.0;\n\n    let y_mut = point.y_mut();\n    *y_mut *= 2.0;\n} \n</code></pre>\n"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1593029639, "creation_date": 1566535640, "last_edit_date": 1593029639, "question_id": 57620041, "link": "https://stackoverflow.com/questions/57620041/how-does-lifetime-rule-stops-multiple-mutable-borrow", "title": "How does lifetime rule stops multiple mutable borrow?", "body": "<p>I have been reading this <a href=\"https://github.com/rust-lang/rfcs/issues/1215\" rel=\"nofollow noreferrer\">issue</a> which shows a trivial example of how multiple mutable borrows can throw this error <code>&quot;cannot borrow point as mutable more than once at a time&quot;</code>:</p>\n<pre><code>struct Point {\n    x: f64,\n    y: f64\n}\n\nimpl Point {\n    pub fn x_mut(&amp;mut self) -&gt; &amp;mut f64 {\n        &amp;mut self.x\n    }\n\n    pub fn y_mut(&amp;mut self) -&gt; &amp;mut f64 {\n        &amp;mut self.y\n    }\n}\n\nfn main() {\n    let mut point = Point { x: 1.0, y: 2.0 };\n    let x_mut = point.x_mut();\n    let y_mut = point.y_mut();\n\n    *x_mut *= 2.0;\n    *y_mut *= 2.0;\n} \n</code></pre>\n<p>But then came the part which confused me.</p>\n<blockquote>\n<p>The lifetime elision rules make it pretty clear why this happens:\n<code>x_mut()</code> returns a mutable borrow that has to live at least as long as\nthe mutable borrow of <code>self</code></p>\n</blockquote>\n<p>How does the fact that the mutable borrow should exist as long <code>self</code> explain this error?</p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"comments": [{"owner": {"reputation": 46, "user_id": 11963700, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RU5Tnp8fMxQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd-Icp7Ik8ojfHxXDB5zacgG-ricA/photo.jpg?sz=128", "display_name": "David Thureson", "link": "https://stackoverflow.com/users/11963700/david-thureson"}, "edited": false, "score": 0, "creation_date": 1566539739, "post_id": 57619560, "comment_id": 101695212, "body": "&#214;mer Erden, thanks. I&#39;ve fixed the indentation in my other posts based on your example."}], "tags": [], "owner": {"reputation": 46, "user_id": 11963700, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RU5Tnp8fMxQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd-Icp7Ik8ojfHxXDB5zacgG-ricA/photo.jpg?sz=128", "display_name": "David Thureson", "link": "https://stackoverflow.com/users/11963700/david-thureson"}, "is_accepted": true, "score": 0, "last_activity_date": 1566538548, "last_edit_date": 1566538548, "creation_date": 1566531099, "answer_id": 57619560, "question_id": 57619443, "link": "https://stackoverflow.com/questions/57619443/how-to-create-response-from-stringrust-rocket/57619560#57619560", "title": "How to create Response from String?(Rust-Rocket)", "body": "<p><code>body</code> is a local variable and <code>body.as_str()</code> is a reference to that local variable. The reference doesn't live long enough to be included as part of the Result returned from the function.</p>\n\n<p>Since you don't need <code>body</code>for anything after using it in <code>Cursor::new()</code>, could you pass it directly rather than as a reference:</p>\n\n<pre><code>.sized_body(Cursor::new(body))\n</code></pre>\n\n<hr>\n\n<p>ETA: I found this example:</p>\n\n<pre><code>Response::build()\n    .sized_body(Cursor::new(format!(\"{}:{}\", self.name, self.age)))\n</code></pre>\n\n<p>(from <a href=\"https://api.rocket.rs/v0.4/rocket/response/trait.Responder.html\" rel=\"nofollow noreferrer\">https://api.rocket.rs/v0.4/rocket/response/trait.Responder.html</a>)</p>\n\n<p>They're calling <code>Cursor::new()</code> with a String rather than a reference, so <code>Cursor::new(body)</code> should work.</p>\n\n<p>Come to think of it, though, since you're passing <code>self</code> directly into the function rather than as a reference, maybe you could skip creating <code>body</code> entirely and just say:</p>\n\n<pre><code>.sized_body(Cursor::new(self.body))\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "accepted_answer_id": 57619560, "answer_count": 1, "score": 0, "last_activity_date": 1566538548, "creation_date": 1566530023, "last_edit_date": 1566538395, "question_id": 57619443, "link": "https://stackoverflow.com/questions/57619443/how-to-create-response-from-stringrust-rocket", "title": "How to create Response from String?(Rust-Rocket)", "body": "<p>I tried to implement the Responder trait for \"MyConfig\" struct.\nBut I don't know how to create Response (including the body whose type is String) which can be return from function.</p>\n\n<p>I tried this code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct MyConfig {\n    body: String,\n}\n\nimpl&lt;'r&gt; Responder&lt;'r&gt; for MyConfig {\n    fn respond_to(self, _req: &amp;Request) -&gt; response::Result&lt;'r&gt; {\n        let body: String = self.body.clone();\n        Response::build()\n            .status(Status::Ok)\n            // .raw_header(\"Access-Control-Allow-Origin\", \"*\")\n            .sized_body(Cursor::new(body.as_str()))\n            .ok()\n    }\n}\n</code></pre>\n\n<p>This can't compile, and shows this error.</p>\n\n<pre><code>error[E0515]: cannot return value referencing local variable `body`\n  --&gt; src/main.rs:53:9\n   |\n53 | /         Response::build()\n54 | |             .status(Status::Ok)\n55 | |             // .raw_header(\"Access-Control-Allow-Origin\", \"*\")\n56 | |             .sized_body(Cursor::new(body.as_str()))\n   | |                                     ---- `body` is borrowed here\n57 | |             .ok()\n   | |_________________^ returns a value referencing data owned by the current function\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 1, "creation_date": 1566522566, "post_id": 57618600, "comment_id": 101691962, "body": "Seems like that is still an open issue: see <a href=\"https://github.com/rust-lang/rfcs/issues/1748\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/1748</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1566523548, "post_id": 57618714, "comment_id": 101692128, "body": "Yeah, I could definitely perform conditional compilation, I was just interested if it was <i>guaranteed</i> (not even just current behavior) that <code>usize</code> would be able to store at least 2^32 values."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 10, "last_activity_date": 1566523184, "creation_date": 1566523184, "answer_id": 57618714, "question_id": 57618600, "link": "https://stackoverflow.com/questions/57618600/are-the-usize-isize-types-in-rust-guaranteed-to-always-be-either-32-or-64-bits/57618714#57618714", "title": "Are the usize/isize types in Rust guaranteed to always be either 32 or 64 bits?", "body": "<p>This is what <a href=\"https://doc.rust-lang.org/reference/type-layout.html#primitive-data-layout\" rel=\"noreferrer\">The Rust Reference</a> has to say about <code>usize</code>:</p>\n\n<blockquote>\n  <p><code>usize</code> and <code>isize</code> have a size big enough to contain every address on the target platform. For example, on a 32 bit target, this is 4 bytes and on a 64 bit target, this is 8 bytes.</p>\n</blockquote>\n\n<p>Note that the phrasing doesn't exclude sizes other than 4 bytes or 8 bytes. Indeed, Rust already <a href=\"https://forge.rust-lang.org/platform-support.html\" rel=\"noreferrer\">supports a platform</a> with 16-bit <code>usize</code>: <code>msp430-none-elf</code> (the MSP430 is a 16-bit microcontroller).</p>\n\n<p>If you want to perform conditional compilation based on the size of pointers, you can use the <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#target_pointer_width\" rel=\"noreferrer\"><code>target_pointer_width</code></a> configuration option. Here's a sample usage from the <a href=\"https://github.com/rust-lang/rust/blob/760226733e940cb375f791e894fbb554555eeb01/src/libcore/num/mod.rs#L4602-L4625\" rel=\"noreferrer\"><code>core</code></a> library:</p>\n\n<pre><code>#[cfg(target_pointer_width = \"16\")]\n#[lang = \"usize\"]\nimpl usize {\n    uint_impl! { usize, u16, 16, 65535, \"\", \"\", 4, \"0xa003\", \"0x3a\", \"0x1234\", \"0x3412\", \"0x2c48\",\n        \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n        usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n}\n#[cfg(target_pointer_width = \"32\")]\n#[lang = \"usize\"]\nimpl usize {\n    uint_impl! { usize, u32, 32, 4294967295, \"\", \"\", 8, \"0x10000b3\", \"0xb301\", \"0x12345678\",\n        \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\", \"[0x12, 0x34, 0x56, 0x78]\",\n        usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n}\n\n#[cfg(target_pointer_width = \"64\")]\n#[lang = \"usize\"]\nimpl usize {\n    uint_impl! { usize, u64, 64, 18446744073709551615, \"\", \"\", 12, \"0xaa00000000006e1\", \"0x6e10aa\",\n        \"0x1234567890123456\", \"0x5634129078563412\", \"0x6a2c48091e6a2c48\",\n        \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n         \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n        usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1566629553, "post_id": 57632324, "comment_id": 101724233, "body": "Tbh. I don&#39;t think an 8 bit address bus would make much sense anyway."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1566631705, "post_id": 57632324, "comment_id": 101724589, "body": "Sure, as far as I can tell there&#39;s nothing prohibiting usize from being equivalent to a u128 at some point in the future, though."}], "tags": [], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "is_accepted": true, "score": 5, "last_activity_date": 1567615482, "last_edit_date": 1567615482, "creation_date": 1566590213, "answer_id": 57632324, "question_id": 57618600, "link": "https://stackoverflow.com/questions/57618600/are-the-usize-isize-types-in-rust-guaranteed-to-always-be-either-32-or-64-bits/57632324#57632324", "title": "Are the usize/isize types in Rust guaranteed to always be either 32 or 64 bits?", "body": "<p>It appears the answer is currently <strong>no</strong>, based on <a href=\"https://github.com/rust-lang/rfcs/issues/1748\" rel=\"nofollow noreferrer\">rust-lang/rust#1748</a>. The issue regards assumptions about the size of <code>usize</code>, and is currently open (and implicitly unresolved). All platforms with tier 1 support are currently 32 or 64 bit [<a href=\"https://forge.rust-lang.org/platform-support.html\" rel=\"nofollow noreferrer\">ref</a>].</p>\n\n<p>However, <a href=\"https://github.com/rust-lang/rust/pull/49305\" rel=\"nofollow noreferrer\">rust-lang/rust#49305</a> assumes pointers to be at least 16 bits. That is <em>not</em> based on any Rust RFC or specification, as it is mentioned that</p>\n\n<blockquote>\n  <p>[the conversion's] infallibility is supported by the C99 standard which (indirectly) requires pointers to be at least 16 bits.</p>\n</blockquote>\n\n<p>As this pull request was merged in 2018, it seems this is the current (though unofficial) policy is that <code>usize</code> and <code>isize</code> can be assumed to be at least 16 bits, which would mean <code>std::mem::size_of::&lt;usize&gt;()</code> is <em>not guaranteed</em> to return 4 or 8. On the contrary, it seems like it can already return 2, though that seems to be the lower bound.</p>\n"}], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1940, "favorite_count": 0, "accepted_answer_id": 57632324, "answer_count": 2, "score": 5, "last_activity_date": 1567615482, "creation_date": 1566521883, "last_edit_date": 1566584420, "question_id": 57618600, "link": "https://stackoverflow.com/questions/57618600/are-the-usize-isize-types-in-rust-guaranteed-to-always-be-either-32-or-64-bits", "title": "Are the usize/isize types in Rust guaranteed to always be either 32 or 64 bits?", "body": "<p>If I compile a program targeting a 16 bit architecture, will <code>std::mem::size_of::&lt;usize&gt;()</code> return 2, or is it guaranteed (via a specification, RFC, or otherwise) to always return 4 or 8?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1566504383, "post_id": 57616229, "comment_id": 101687706, "body": "Your array is on the stack. You must use a vector or box it, otherwise, you&#39;re having a lifetime issue."}, {"owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566506669, "post_id": 57616229, "comment_id": 101688499, "body": "@FrenchBoiethios thanks for the comment. I updated the question. Any hint how could I fix this?"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1617709182, "last_edit_date": 1617709182, "creation_date": 1566507524, "answer_id": 57616981, "question_id": 57616229, "link": "https://stackoverflow.com/questions/57616229/returning-array-from-rust-to-ffi/57616981#57616981", "title": "Returning array from Rust to FFI", "body": "<p>Your array is on the stack, so there is a lifetime issue when you returns it as a pointer (returned pointer to a local variable). You must allocate it in the heap:</p>\n<pre><code>#[no_mangle]\npub extern &quot;C&quot; fn ffi_test() -&gt; *mut u16 {\n    let mut test = vec![1, 2, 3, 4];\n    let ptr = test.as_mut_ptr();\n    \n    std::mem::forget(test); // so that it is not destructed at the end of the scope\n    \n    ptr\n}\n</code></pre>\n<p>or</p>\n<pre><code>#[no_mangle]\npub extern &quot;C&quot; fn ffi_test() -&gt; *mut u16 {\n    let test = Box::new([1u16, 2, 3, 4]);  // type must be explicit here...\n\n    Box::into_raw(test) as *mut _          // ... because this cast can convert\n                                           // *mut [i32; 4] to *mut u16\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2534, "user_id": 840630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5ff9443615e11fd568becd581ac9eac?s=128&d=identicon&r=PG", "display_name": "Sisso", "link": "https://stackoverflow.com/users/840630/sisso"}, "is_accepted": false, "score": 1, "last_activity_date": 1568450285, "creation_date": 1568450285, "answer_id": 57933846, "question_id": 57616229, "link": "https://stackoverflow.com/questions/57616229/returning-array-from-rust-to-ffi/57933846#57933846", "title": "Returning array from Rust to FFI", "body": "<p>I am trying to learn Rust ffi, those implementations are a frankenstein creation from different sources in internet. So take it with a grain of salt. </p>\n\n<p>Currently I am with two approaches:</p>\n\n<p>a) Remove the array from rust GC and return the point. User need to promise to call free later.</p>\n\n<pre><code>#[repr(C)]\npub struct V2 {\n    pub x: i32,\n    pub y: i32,\n}\n\n#[repr(C)]\nstruct Buffer {\n    len: i32,\n    data: *mut V2,\n}\n\n#[no_mangle]\nextern \"C\" fn generate_data() -&gt; Buffer {\n    let mut buf = vec![V2 { x: 1, y: 0 }, V2 { x: 2, y: 0}].into_boxed_slice();\n    let data = buf.as_mut_ptr();\n    let len = buf.len() as i32;\n    std::mem::forget(buf);\n    Buffer { len, data }\n}\n\n#[no_mangle]\nextern \"C\" fn free_buf(buf: Buffer) {\n    let s = unsafe { std::slice::from_raw_parts_mut(buf.data, buf.len as usize) };\n    let s = s.as_mut_ptr();\n    unsafe {\n        Box::from_raw(s);\n    }\n}\n</code></pre>\n\n<p>b) Send the array through FFI callback function. User need to promise to not keep references, but dont need to call free.</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn context_get_byte_responses(callback: extern \"stdcall\" fn (*mut u8, i32)) -&gt; bool {\n    let bytes: Vec&lt;u8&gt; = vec![];\n    callback(bytes.as_mut_ptr(), bytes.len() as i32);\n    true\n}\n</code></pre>\n"}], "owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1469, "favorite_count": 1, "accepted_answer_id": 57616981, "answer_count": 2, "score": 3, "last_activity_date": 1617709182, "creation_date": 1566503451, "last_edit_date": 1566506603, "question_id": 57616229, "link": "https://stackoverflow.com/questions/57616229/returning-array-from-rust-to-ffi", "title": "Returning array from Rust to FFI", "body": "<p>I need to write a function that returns array of u16 integers in Rust. This function then should be used by FFI.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\nuse libc::{uint16_t};\n\n#[no_mangle]\npub extern fn ffi_test() -&gt;  *const uint16_t {\n    let test: [u16;4] = [1,2,3,4];\n\n    test.as_ptr()\n}\n</code></pre>\n\n<p>Rust code compiles without errors. I used Ruby to test the ffi call:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code># coding: utf-8\nrequire 'ffi'\n\nmodule MyMod\n  extend FFI::Library\n  ffi_lib 'my_ffi_test_lib'\n  attach_function :ffi_test, [], :pointer\nend\n\na_ptr = MyMod.ffi_test\nsize = 4\nresult_array = a_ptr.read_array_of_uint16(size)\np result_array\n</code></pre>\n\n<p>But the results are totally wrong (expected: <code>[1, 2, 3, 4]</code>):</p>\n\n<pre><code>$ ruby ffi_test.rb\n[57871, 25191, 32767, 0]\n</code></pre>\n\n<p>As if I am reading totally diffirent memory addr. I assume maybe that I should not use <code>#as_ptr()</code> on Rust array?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>As per recommendation of @FrenchBoiethios I tried to box the array:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\nuse libc::{uint16_t};\n\n#[no_mangle]\npub extern fn ffi_test() -&gt;  *mut uint16_t {\n    let test: [u16;4] = [1,2,3,4];\n\n    let b = Box::new(test);\n    Box::into_raw(b)\n}\n</code></pre>\n\n<p>This gives compile error:</p>\n\n<pre><code>note: expected type `std::boxed::Box&lt;u16&gt;`\n         found type `std::boxed::Box&lt;[u16; 4]&gt;`\n</code></pre>\n"}, {"tags": ["visual-studio", "cmake", "rust", "clion"], "comments": [{"owner": {"reputation": 16953, "user_id": 2799037, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/2uPVa.png?s=128&g=1", "display_name": "usr1234567", "link": "https://stackoverflow.com/users/2799037/usr1234567"}, "edited": false, "score": 0, "creation_date": 1566552505, "post_id": 57615711, "comment_id": 101700699, "body": "What version of CMake are you using?"}, {"owner": {"reputation": 1192, "user_id": 664509, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/8dba6ba9791388d4c527a6f7b78a2724?s=128&d=identicon&r=PG&f=1", "display_name": "SomethingsGottaGive", "link": "https://stackoverflow.com/users/664509/somethingsgottagive"}, "reply_to_user": {"reputation": 16953, "user_id": 2799037, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/2uPVa.png?s=128&g=1", "display_name": "usr1234567", "link": "https://stackoverflow.com/users/2799037/usr1234567"}, "edited": false, "score": 0, "creation_date": 1566553497, "post_id": 57615711, "comment_id": 101701181, "body": "Cmake version is 3.15.2."}, {"owner": {"reputation": 16953, "user_id": 2799037, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/2uPVa.png?s=128&g=1", "display_name": "usr1234567", "link": "https://stackoverflow.com/users/2799037/usr1234567"}, "edited": false, "score": 0, "creation_date": 1566558443, "post_id": 57615711, "comment_id": 101703665, "body": "Ok, it could be the case, that your CMake is too old and does not yet know about the recent version of Visual Studio. But this shout not be the case for you."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1566548207, "creation_date": 1566548207, "answer_id": 57622259, "question_id": 57615711, "link": "https://stackoverflow.com/questions/57615711/couldnt-determine-visual-studio-generator/57622259#57622259", "title": "couldn&#39;t determine visual studio generator", "body": "<p>When you install Visual Studio, the command-line tools are <em>not</em> available from a generic command prompt. Visual Studio should have installed an entry in your start menu to start a properly configured console.</p>\n\n<p>Or if you haven't started your console from this special entry, Visual Studio should also have installed a script called <code>vcvars.bat</code> somewhere in its install folder. You need to run that script before you can access the command-line tools.</p>\n"}], "owner": {"reputation": 1192, "user_id": 664509, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/8dba6ba9791388d4c527a6f7b78a2724?s=128&d=identicon&r=PG&f=1", "display_name": "SomethingsGottaGive", "link": "https://stackoverflow.com/users/664509/somethingsgottagive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566589782, "creation_date": 1566500854, "last_edit_date": 1566589782, "question_id": 57615711, "link": "https://stackoverflow.com/questions/57615711/couldnt-determine-visual-studio-generator", "title": "couldn&#39;t determine visual studio generator", "body": "<p>I am trying to compile rust's <a href=\"https://github.com/maps4print/azul\" rel=\"nofollow noreferrer\">azul</a> gui framework sample code on windows 10 and it's running into the following error:</p>\n\n<pre><code>    error: failed to run custom build command for `harfbuzz-sys v0.3.0 (https://github.com/maps4print/azul-dependencies?rev=bf2933b9aac43a7003278862772250398e4fa457#bf2933b9)`\n\nCaused by:\n  process didn't exit successfully: `F:\\Code\\rust\\azul_demo\\target\\debug\\build\\harfbuzz-sys-4d7deefbb1bf663c\\build-script-build` (exit code: 101)\n--- stdout\ncargo:rerun-if-env-changed=HARFBUZZ_SYS_NO_PKG_CONFIG\n\n--- stderr\nthread 'main' panicked at '\n\ncouldn't determine visual studio generator\nif VisualStudio is installed, however, consider running the appropriate vcvars script before building this crate\n', C:\\Users\\Andrew\\.cargo\\git\\checkouts\\azul-dependencies-70bb1f94316762f9\\bf2933b\\cmake-0.1.35\\src\\lib.rs:687:25\nstack backtrace:\n   0: backtrace::backtrace::trace_unsynchronized\n             at C:\\Users\\VssAdministrator\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.29\\src\\backtrace\\mod.rs:66\n...\n</code></pre>\n\n<p>I installed cmake and visual studio 2019. Also note that I am using clion ide. Cmake version is <code>3.15.2</code>.</p>\n\n<p>It says I should run the <code>appropriate vcvars script before building this crate</code>, what does it mean exactly?</p>\n\n<p>EDIT ----\nFound <code>vcvars.bat</code> in the visual studio installation folder and ran it. It's still getting the same error. \nEDIT2 ----\nIt looks like an incompatibility between the latest version of visualstudio(19) and cmake. Reverting to 2015 is suppose to resolve the issue. \n<a href=\"https://github.com/maps4print/azul/issues/203\" rel=\"nofollow noreferrer\">https://github.com/maps4print/azul/issues/203</a></p>\n"}, {"tags": ["rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 4, "last_activity_date": 1566515377, "last_edit_date": 1566515377, "creation_date": 1566499856, "answer_id": 57615497, "question_id": 57614924, "link": "https://stackoverflow.com/questions/57614924/how-to-move-non-copy-data-between-enum-items/57615497#57615497", "title": "How to move non-Copy data between enum items", "body": "<p>You cannot do that directly because Rust ensures that <code>*self</code> must be valid every single time. Which is good, because what would happen if your program panics somewhere and it has to call <code>drop()</code> and your <code>*self</code> is inconsistent?</p>\n\n<p>Fortunately your object has a handy <code>Idle</code> status that can be used as an intermediate value. The final trick is in <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>std::mem::replace()</code></a>:</p>\n\n<pre><code>impl MyStateMachine {\n    fn to_state2(&amp;mut self, charlie: usize) -&gt; Result&lt;(), String&gt; {\n        use MyStateMachine::*;\n\n        // take ownership of the old status, installing the dummy Idle\n        let old = std::mem::replace(self, Idle);\n\n        match old {\n            State1 { alpha, bravo } =&gt; {\n                //assign the final status\n                *self = State2 {\n                    alpha: alpha, \n                     // no clone!\n                    bravo: bravo,\n                    charlie,\n                };\n                Ok(())\n            }\n            _ =&gt; { \n                // restore old status before returning error\n                std::mem::replace(self, old);\n                Err(\"Must be in State1\".into())\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>If you didn't have the <code>Idle</code> there are other workarounds. For example, you could move out the <code>bravo</code> from <code>self</code> replacing it with a dummy value, if there is such a value for its type and then build the new state easily. Maybe something like this:</p>\n\n<pre><code>impl MyStateMachine {\n    fn to_state2(&amp;mut self, charlie: usize) -&gt; Result&lt;(), String&gt; {\n        use MyStateMachine::*;\n\n        *self = match self {\n            State1 { alpha, bravo } =&gt; {\n                //steal the value replacing it with a dummy\n                //remember that String::new() does not allocate memory\n                let bravo = std::mem::replace(bravo, String::new());\n                State2 {\n                    alpha: *alpha, \n                     // no clone!\n                    bravo,\n                    charlie,\n                }\n            }\n            _ =&gt;  return Err(\"Must be in State1\".into())\n        };\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>If the type of your <code>brave</code> does not have a suitable dummy value, you could also replace its type with an <code>Option&lt;_&gt;</code> and use <code>Option::take()</code> instead of <code>mem::replace()</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1566935245, "post_id": 57631126, "comment_id": 101809263, "body": "This is almost exactly the second version of the second option in my answer, isn&#39;t it? I edited it quite a few times..."}, {"owner": {"reputation": 2330, "user_id": 939467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5c2ca1b3b94f649a13dfdee859a4db07?s=128&d=identicon&r=PG", "display_name": "Evan", "link": "https://stackoverflow.com/users/939467/evan"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567193188, "post_id": 57631126, "comment_id": 101904534, "body": "Yeah. I guess I was looking at an earlier version of your answer. And then you and I came to the same conclusion :-)"}], "tags": [], "owner": {"reputation": 2330, "user_id": 939467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5c2ca1b3b94f649a13dfdee859a4db07?s=128&d=identicon&r=PG", "display_name": "Evan", "link": "https://stackoverflow.com/users/939467/evan"}, "is_accepted": false, "score": 0, "last_activity_date": 1566583545, "creation_date": 1566583545, "answer_id": 57631126, "question_id": 57614924, "link": "https://stackoverflow.com/questions/57614924/how-to-move-non-copy-data-between-enum-items/57631126#57631126", "title": "How to move non-Copy data between enum items", "body": "<p>I ended up using a variation on <a href=\"https://stackoverflow.com/a/57615497/939467\">rodrigo's answer</a>. I was reluctant to use <code>mem::replace()</code> before the <code>match</code> statement, because that advances the state before validating that it's OK to change state. So, instead, I used <code>mem::replace()</code> just on the non-Copy types.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl MyStateMachine {\n    fn to_state2(&amp;mut self, charlie: usize) -&gt; Result&lt;(), String&gt; {\n        use MyStateMachine::*;\n\n        match self {\n            State1 { alpha, bravo: old_bravo } =&gt; {\n                // Use mem::replace on non-Copy types\n                let bravo = std::mem::replace(old_bravo, Default::default());\n                *self = State2 {\n                    // Copy types can use a simple dereference\n                    alpha: *alpha, \n                    bravo, \n                    charlie,\n                };\n                Ok(())\n            }\n            _ =&gt; return Err(\"Must be in State1\".into())\n        }\n    }\n\n}\n</code></pre>\n"}], "owner": {"reputation": 2330, "user_id": 939467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5c2ca1b3b94f649a13dfdee859a4db07?s=128&d=identicon&r=PG", "display_name": "Evan", "link": "https://stackoverflow.com/users/939467/evan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 57615497, "answer_count": 2, "score": 1, "last_activity_date": 1566583545, "creation_date": 1566497273, "question_id": 57614924, "link": "https://stackoverflow.com/questions/57614924/how-to-move-non-copy-data-between-enum-items", "title": "How to move non-Copy data between enum items", "body": "<p>I have a Rust enum that represents a state machine. I need to move some data between states (where the data doesn't implement <code>Copy</code>). What's a good approach to use?</p>\n\n<p>Basically, I'd like to eliminate the call to <code>bravo.clone()</code> in this code. It's disappointing to have to clone that data, when the original is going to be dropped. What I'd rather be doing is something along the lines of <code>bravo: *bravo</code> \u2014 moving the old value of <code>bravo</code> out of <code>State1</code> and into <code>State2</code>. But I can't do that directly, because that would briefly invalidate the value of <code>self.state</code> while constructing <code>State2</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum MyStateMachine {\n    Idle,\n    State1 {\n        alpha: usize,\n        bravo: String,\n    },\n    // State2 is a superset of State1\n    State2 {\n        alpha: usize,\n        bravo: String,\n        charlie: usize,\n    },\n}\n\nimpl MyStateMachine {\n    fn to_state2(&amp;mut self, charlie: usize) -&gt; Result&lt;(), String&gt; {\n        use MyStateMachine::*;\n\n        match self {\n            State1 { alpha, bravo } =&gt; {\n                *self = State2 {\n                    // Copy type moves between states OK\n                    alpha: *alpha, \n                     // Non-copy types require a call to .clone()\n                    bravo: bravo.clone(),\n                    charlie,\n                };\n                Ok(())\n            }\n            _ =&gt; Err(\"Must be in State1\".into())\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "serde", "rust-chrono"], "answers": [{"comments": [{"owner": {"reputation": 193, "user_id": 9749376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e402783fbf6732bd9c376095fb6cfd22?s=128&d=identicon&r=PG&f=1", "display_name": "Emre", "link": "https://stackoverflow.com/users/9749376/emre"}, "edited": false, "score": 0, "creation_date": 1566501958, "post_id": 57615301, "comment_id": 101686746, "body": "Thanks. So the problem with my implementation was not matching the expected function signature exactly? (<code>fn from_timestamp&lt;&#39;de, D&gt;(d: D) -&gt; Result&lt;NaiveDateTime, D::Error&gt; where D: de::Deserializer&lt;&#39;de&gt;,</code>)"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 193, "user_id": 9749376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e402783fbf6732bd9c376095fb6cfd22?s=128&d=identicon&r=PG&f=1", "display_name": "Emre", "link": "https://stackoverflow.com/users/9749376/emre"}, "edited": false, "score": 1, "creation_date": 1566503624, "post_id": 57615301, "comment_id": 101687412, "body": "That&#39;s part of the problem, yes. But it is just the glue. You may notice that the real meat is in the implementation of a visitor trait. This is how the customized serializer / deserializer works in serde."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 8, "last_activity_date": 1566498905, "creation_date": 1566498905, "answer_id": 57615301, "question_id": 57614558, "link": "https://stackoverflow.com/questions/57614558/how-to-use-a-custom-serde-deserializer-for-chrono-timestamps/57615301#57615301", "title": "How to use a custom serde deserializer for chrono timestamps?", "body": "<p>This is rather involved, but the following works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::NaiveDateTime;\nuse serde::de;\nuse serde::Deserialize;\nuse std::fmt;\n\nstruct NaiveDateTimeVisitor;\n\nimpl&lt;'de&gt; de::Visitor&lt;'de&gt; for NaiveDateTimeVisitor {\n    type Value = NaiveDateTime;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(formatter, \"a string represents chrono::NaiveDateTime\")\n    }\n\n    fn visit_str&lt;E&gt;(self, s: &amp;str) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        match NaiveDateTime::parse_from_str(s, \"%Y-%m-%dT%H:%M:%S.%f\") {\n            Ok(t) =&gt; Ok(t),\n            Err(_) =&gt; Err(de::Error::invalid_value(de::Unexpected::Str(s), &amp;self)),\n        }\n    }\n}\n\nfn from_timestamp&lt;'de, D&gt;(d: D) -&gt; Result&lt;NaiveDateTime, D::Error&gt;\nwhere\n    D: de::Deserializer&lt;'de&gt;,\n{\n    d.deserialize_str(NaiveDateTimeVisitor)\n}\n\n#[derive(Deserialize, Debug)]\nstruct MyJson {\n    name: String,\n    #[serde(deserialize_with = \"from_timestamp\")]\n    timestamp: NaiveDateTime,\n}\n\nfn main() {\n    let result: MyJson =\n        serde_json::from_str(r#\"{\"name\": \"asdf\", \"timestamp\": \"2019-08-15T17:41:18.106108\"}\"#)\n            .unwrap();\n    println!(\"{:?}\", result);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": false, "score": 4, "last_activity_date": 1566552305, "creation_date": 1566552305, "answer_id": 57623355, "question_id": 57614558, "link": "https://stackoverflow.com/questions/57614558/how-to-use-a-custom-serde-deserializer-for-chrono-timestamps/57623355#57623355", "title": "How to use a custom serde deserializer for chrono timestamps?", "body": "<p>While @edwardw's answer is technically correct it IMHO contains too much boilerplate.</p>\n\n<p><a href=\"https://docs.rs/chrono/0.4.7/chrono/naive/struct.NaiveDateTime.html\" rel=\"nofollow noreferrer\"><code>NaiveDataTime</code></a> implements <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"nofollow noreferrer\"><code>FromStr</code></a> which means you can write a reusable generic deserializer function.</p>\n\n<p>A convoluted example - did add the <code>age</code> field (<code>u8</code>) represented as string in the JSON. Just to demonstrate that you can use it for anything that implements <code>FromStr</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Display;\nuse std::str::FromStr;\n\nuse chrono::NaiveDateTime;\nuse serde::{de, Deserialize, Deserializer};\n\n#[derive(Deserialize, Debug)]\nstruct MyJson {\n    name: String,\n    #[serde(deserialize_with = \"deserialize_from_str\")]\n    timestamp: NaiveDateTime,\n    #[serde(deserialize_with = \"deserialize_from_str\")]\n    age: u8,\n}\n\n// You can use this deserializer for any type that implements FromStr\n// and the FromStr::Err implements Display\nfn deserialize_from_str&lt;'de, S, D&gt;(deserializer: D) -&gt; Result&lt;S, D::Error&gt;\nwhere\n    S: FromStr,      // Required for S::from_str...\n    S::Err: Display, // Required for .map_err(de::Error::custom)\n    D: Deserializer&lt;'de&gt;,\n{\n    let s: String = Deserialize::deserialize(deserializer)?;\n    S::from_str(&amp;s).map_err(de::Error::custom)\n}\n\nfn main() {\n    let result: MyJson = serde_json::from_str(\n        r#\"{\"name\": \"asdf\", \"timestamp\": \"2019-08-15T17:41:18.106108\", \"age\": \"11\"}\"#,\n    )\n    .unwrap();\n    println!(\"{:?}\", result);\n}\n</code></pre>\n\n<p>It's even easier if you want to specify format (use <code>NaiveDateTime::parse_from_str</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::NaiveDateTime;\nuse serde::{de, Deserialize, Deserializer};\n\n#[derive(Deserialize, Debug)]\nstruct MyJson {\n    name: String,\n    #[serde(deserialize_with = \"naive_date_time_from_str\")]\n    timestamp: NaiveDateTime,\n}\n\nfn naive_date_time_from_str&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;NaiveDateTime, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    let s: String = Deserialize::deserialize(deserializer)?;\n    NaiveDateTime::parse_from_str(&amp;s, \"%Y-%m-%dT%H:%M:%S.%f\").map_err(de::Error::custom)\n}\n\nfn main() {\n    let result: MyJson =\n        serde_json::from_str(r#\"{\"name\": \"asdf\", \"timestamp\": \"2019-08-15T17:41:18.106108\"}\"#)\n            .unwrap();\n    println!(\"{:?}\", result);\n}\n</code></pre>\n\n<p><a href=\"https://serde.rs/field-attrs.html#deserialize_with\" rel=\"nofollow noreferrer\"><code>#[serde(deserialize_with = \"path\")]</code></a> documentation:</p>\n\n<blockquote>\n  <p>Deserialize this field using a function that is different from its implementation of <code>Deserialize</code>. The given function must be callable as <code>fn&lt;'de, D&gt;(D) -&gt; Result&lt;T, D::Error&gt; where D: Deserializer&lt;'de&gt;</code>, although it may also be generic over <code>T</code>. Fields used with <code>deserialize_with</code> are not required to implement <code>Deserialize</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 193, "user_id": 9749376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e402783fbf6732bd9c376095fb6cfd22?s=128&d=identicon&r=PG&f=1", "display_name": "Emre", "link": "https://stackoverflow.com/users/9749376/emre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2853, "favorite_count": 1, "accepted_answer_id": 57615301, "answer_count": 2, "score": 6, "last_activity_date": 1595263769, "creation_date": 1566495666, "last_edit_date": 1595263769, "question_id": 57614558, "link": "https://stackoverflow.com/questions/57614558/how-to-use-a-custom-serde-deserializer-for-chrono-timestamps", "title": "How to use a custom serde deserializer for chrono timestamps?", "body": "<p>I'm trying to parse JSON into a struct which has a <code>chrono::DateTime</code> field. The JSON has the timestamps saved in a custom format that I wrote a deserializer for.</p>\n<p>How do I connect the two and get it working using <code>#[serde(deserialize_with)]</code>?</p>\n<p>I'm using <code>NaiveDateTime</code> for simpler code</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\nextern crate serde_json;\nuse serde::Deserialize;\nextern crate chrono;\nuse chrono::NaiveDateTime;\n\nfn from_timestamp(time: &amp;String) -&gt; NaiveDateTime {\n    NaiveDateTime::parse_from_str(time, &quot;%Y-%m-%dT%H:%M:%S.%f&quot;).unwrap()\n}\n\n#[derive(Deserialize, Debug)]\nstruct MyJson {\n    name: String,\n    #[serde(deserialize_with = &quot;from_timestamp&quot;)]\n    timestamp: NaiveDateTime,\n}\n\nfn main() {\n    let result: MyJson =\n        serde_json::from_str(r#&quot;{&quot;name&quot;: &quot;asdf&quot;, &quot;timestamp&quot;: &quot;2019-08-15T17:41:18.106108&quot;}&quot;#)\n            .unwrap();\n    println!(&quot;{:?}&quot;, result);\n}\n</code></pre>\n<p>I'm getting three different compile errors:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:10\n   |\n11 | #[derive(Deserialize, Debug)]\n   |          ^^^^^^^^^^^ expected reference, found type parameter\n   |\n   = note: expected type `&amp;std::string::String`\n              found type `__D`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:11:10\n   |\n11 | #[derive(Deserialize, Debug)]\n   |          ^^^^^^^^^^-\n   |          |         |\n   |          |         this match expression has type `chrono::NaiveDateTime`\n   |          expected struct `chrono::NaiveDateTime`, found enum `std::result::Result`\n   |          in this macro invocation\n   |\n   = note: expected type `chrono::NaiveDateTime`\n              found type `std::result::Result&lt;_, _&gt;`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:11:10\n   |\n11 | #[derive(Deserialize, Debug)]\n   |          ^^^^^^^^^^-\n   |          |         |\n   |          |         this match expression has type `chrono::NaiveDateTime`\n   |          expected struct `chrono::NaiveDateTime`, found enum `std::result::Result`\n   |          in this macro invocation\n   |\n   = note: expected type `chrono::NaiveDateTime`\n              found type `std::result::Result&lt;_, _&gt;`\n</code></pre>\n<p>I'm pretty sure the <code>from_timestamp</code> function is returning a <code>DateTime</code> struct and not a <code>Result</code>, so I don't know what &quot;expected struct <code>chrono::NaiveDateTime</code>, found enum <code>std::result::Result</code>&quot; may mean.</p>\n"}, {"tags": ["rust", "interior-mutability"], "answers": [{"comments": [{"owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "edited": false, "score": 0, "creation_date": 1566491655, "post_id": 57613646, "comment_id": 101682465, "body": "Alright! <code>Ref&lt;.&gt;</code> can effectively be dereferenced (I guess thanks to the implementation of <code>Deref</code> trait). Thanks!"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 4, "last_activity_date": 1566491428, "creation_date": 1566491428, "answer_id": 57613646, "question_id": 57613470, "link": "https://stackoverflow.com/questions/57613470/comparing-value-enclosed-in-refcellt/57613646#57613646", "title": "Comparing value enclosed in RefCell&lt;T&gt;", "body": "<p>You want to de-reference the <code>borrow</code>ed value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>assert_eq!(*os.log_str.borrow(), \"&lt;expected value&gt;\");\n</code></pre>\n"}], "owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 57613646, "answer_count": 1, "score": 3, "last_activity_date": 1566491428, "creation_date": 1566490664, "question_id": 57613470, "link": "https://stackoverflow.com/questions/57613470/comparing-value-enclosed-in-refcellt", "title": "Comparing value enclosed in RefCell&lt;T&gt;", "body": "<p>I have a structure with a field defined as follows:</p>\n\n<pre><code>log_str: RefCell&lt;String&gt;\n</code></pre>\n\n<p>I performed various calls to <code>borrow_mut()</code> to call <code>push_str(.)</code> on the field. At the end, I'm assessing its value using:</p>\n\n<pre><code>assert_eq!(os.log_str.borrow(), \"&lt;expected value&gt;\");\n</code></pre>\n\n<p>Nonetheless, the line of the assert raises a compile-time error with the message:</p>\n\n<blockquote>\n  <p>error[E0369]: binary operation <code>==</code> cannot be applied to type <code>std::cell::Ref&lt;'_, std::string::String&gt;</code></p>\n</blockquote>\n\n<p>I understand why the error is happening, since the compiler even hints:</p>\n\n<blockquote>\n  <p>an implementation of <code>std::cmp::PartialEq</code> might be missing for <code>std::cell::Ref&lt;'_, std::string::String&gt;</code></p>\n</blockquote>\n\n<p>My question is: how should I compare the value enclosed in a <code>RefCell&lt;T&gt;</code> (typically in this case, comparing the enclosed string with an expected value).</p>\n\n<p>Thanks !</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1566487911, "post_id": 57612576, "comment_id": 101680634, "body": "Try this: <a href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow noreferrer\">install rust</a>"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1566552107, "creation_date": 1566552107, "answer_id": 57623303, "question_id": 57612576, "link": "https://stackoverflow.com/questions/57612576/after-creating-cargo-i-am-facing-some-problems-on-running-this-cargo/57623303#57623303", "title": "After creating cargo I am facing some problems on running this cargo", "body": "<p>As the error suggests, you have to install a 32-bit version of Rust (you probably have the recommended 64-bit version already). In a terminal (cmd.exe), run:</p>\n\n<pre><code>rustup target add i686-pc-windows-msvc\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11947246, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-1K-ZRWVARfU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfkvWhvyMkBUe_gWJ1YLaL9G5qltw/photo.jpg?sz=128", "display_name": "Usama Amjad", "link": "https://stackoverflow.com/users/11947246/usama-amjad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 59, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1566552107, "creation_date": 1566487196, "question_id": 57612576, "link": "https://stackoverflow.com/questions/57612576/after-creating-cargo-i-am-facing-some-problems-on-running-this-cargo", "title": "After creating cargo I am facing some problems on running this cargo", "body": "<p>I am facing this problem on running the Cargo using command (Cargo run) in VS code terminal. My PC is 32 bit.</p>\n\n<p>I also tried to run and compile the main.rs file separately using this commands but the same error arises on compiling.</p>\n\n<pre><code>error: process didn't exit successfully: `rustc -vV` (exit code: 1) --- stderr\nerror: 'rustc.exe' is not installed for the toolchain 'stable-i686-pc-windows-msvc'\nTo install, run `rustup component add rustc --toolchain stable-i686-pc-windows-msvc`\n</code></pre>\n\n<p>I just need to compile and run this file and get the desire output.</p>\n"}, {"tags": ["python-3.x", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1566486478, "post_id": 57612276, "comment_id": 101679910, "body": "Try <code>figure.save(&quot;.&#47;test.png&quot;, Some (&quot;&#47;path&#47;to&#47;python&quot;))</code>"}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": false, "score": 0, "last_activity_date": 1566554127, "creation_date": 1566554127, "answer_id": 57623869, "question_id": 57612276, "link": "https://stackoverflow.com/questions/57612276/use-matplotrust-with-python3-interpreter-in-pyenv/57623869#57623869", "title": "Use matplotrust with python3 interpreter in pyenv", "body": "<blockquote>\n  <p>@Jmb's comment fixed the user's issue. Writing an answer just to show how to proceed in situations like this one.</p>\n</blockquote>\n\n<p><code>matplotlib</code> Rust crate documentation isn't really good (none). In this case, you have to check <a href=\"https://docs.rs/matplotrust/0.1.7/src/matplotrust/lib.rs.html#119-136\" rel=\"nofollow noreferrer\">source code</a> of the <a href=\"https://docs.rs/matplotrust/0.1.7/matplotrust/struct.Figure.html#method.save\" rel=\"nofollow noreferrer\"><code>Figure.save()</code></a> method:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn save(&amp;mut self, output: &amp;str, path: Option&lt;&amp;str&gt;) -&gt; (String, String, String) {\n    self.script += &amp;format!(\"plt.savefig('{}')\\n\", output);\n    // create a temporary file\n    let mut tmpfile: NamedTempFile = tempfile::NamedTempFile::new().unwrap();\n    tmpfile.write_all(self.script.as_bytes());\n\n    let python_path = match path {\n        Some(s) =&gt; s,\n        None =&gt; \"/usr/local/bin/python3\"\n    };\n\n    fs::metadata(python_path).expect(\"python binary not found at /usr/local/bin/python3\");\n    let mut echo_hello = Command::new(python_path);\n    echo_hello.arg(tmpfile.path());\n    echo_hello.output().expect(\"failed to execute process\");\n\n    return (self.script.to_string(), output.to_string(), tmpfile.path().to_str().unwrap().to_string());\n}\n</code></pre>\n\n<p>The important part is this one:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let python_path = match path {\n    Some(s) =&gt; s,\n    None =&gt; \"/usr/local/bin/python3\"\n};\n</code></pre>\n\n<p>You called <code>figure.save(\"./test.png\", None)</code> -> <code>/usr/local/bin/python3</code>. As @Jmb pointed out, you can specify the Python 3 interpreter path via <code>figure.save(\"./test.png\", Some(\"/path/to/python3\"))</code> to make it working.</p>\n"}], "owner": {"reputation": 176, "user_id": 11152289, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Y. P", "link": "https://stackoverflow.com/users/11152289/y-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566554127, "creation_date": 1566486186, "question_id": 57612276, "link": "https://stackoverflow.com/questions/57612276/use-matplotrust-with-python3-interpreter-in-pyenv", "title": "Use matplotrust with python3 interpreter in pyenv", "body": "<h2>My Environment</h2>\n\n<ul>\n<li>Ubuntu 18.04</li>\n<li>Python 3.7.3 (<code>~/.pyenv/shims/python</code>)</li>\n<li>Rust (cargo 1.36.0)</li>\n</ul>\n\n<h2>Problem</h2>\n\n<p>I am a beginner of the Rust language and try to make plot with <code>matplotrust</code> crate. I wrote the code like following,</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate matplotrust;\n\nuse matplotrust::{line_plot, Figure};\n\nfn main() {\n    // load values in text file\n    let result = std::fs::read_to_string(\"test.txt\");\n    let content = match result {\n        Ok(content) =&gt; content,\n        Err(error) =&gt; {\n            panic!(\"Could not read file: {}\", error);\n        }\n    };\n    let lines_array: Vec&lt;&amp;str&gt; = content.trim().split(\"\\n\").collect();\n\n    // insert values in vectors x and y\n    let mut x: Vec&lt;f32&gt; = Vec::new();\n    let mut y: Vec&lt;f32&gt; = Vec::new();\n    for line in lines_array {\n        let pair: Vec&lt;&amp;str&gt; = line.trim().split(\" \").collect();\n        x.push(pair[0].parse().unwrap());\n        y.push(pair[1].parse().unwrap());\n    }\n\n    // plot y against x\n    let lp = line_plot::&lt;f32, f32&gt;(x, y, None);\n    let mut figure = Figure::new();\n    figure.add_plot(lp.clone());\n    figure.add_plot(lp.clone());\n\n    print!(\"{:?}\", figure.save(\"./test.png\", None));\n }\n\n</code></pre>\n\n<p>I could build this code, but in the runtime, an error occurs.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>thread 'main' panicked at 'python binary not found at /usr/local/bin/python3: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', src/libcore/result.rs:999:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>It says python path is wrong. But in my case I use pyenv and does not install python3 in this directory.</p>\n\n<p>How to solve this problem?</p>\n\n<h2>What I tried</h2>\n\n<p>I tried to install python3 in <code>/usr/local/bin</code> with <code>apt install</code> but shell says python3 has already been install with pyenv...</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1566487433, "post_id": 57612600, "comment_id": 101680376, "body": "There&#39;s no need for this. Struct fields are evaluated in the order you write them. See <a href=\"https://internals.rust-lang.org/t/rust-expression-order-of-evaluation/2605/30\" rel=\"nofollow noreferrer\">Niko&#39;s</a> answer."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566487585, "post_id": 57612600, "comment_id": 101680458, "body": "If you have this <code>struct A { a: u8, b: u8 }</code> structure and you write <code>A { a: a(), b: b() }</code> then the order is <code>a()</code> and then <code>b()</code>. If you write <code>A { b: b(), a: a() }</code> then the order is <code>b()</code> and then <code>a()</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566487845, "post_id": 57612600, "comment_id": 101680601, "body": "@zrzka I have updated about the struct initialization, but I can add the Niko&#39;s answer, if you don&#39;t have concern about me stealing your comment :P"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1566488011, "post_id": 57612600, "comment_id": 101680685, "body": "Stealing here? :) Community effort, I don&#39;t own anything, feel free :)"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1566488345, "last_edit_date": 1566488345, "creation_date": 1566487294, "answer_id": 57612600, "question_id": 57612141, "link": "https://stackoverflow.com/questions/57612141/what-is-the-order-of-function-arguments-evaluation-and-structs-initialization-in/57612600#57612600", "title": "What is the order of function arguments evaluation and structs initialization in Rust?", "body": "<h1>Officially</h1>\n\n<p>The order of evaluation is left unspecified in the reference <a href=\"https://github.com/rust-lang-nursery/reference/issues/248\" rel=\"noreferrer\">for now</a>:</p>\n\n<p><a href=\"https://doc.rust-lang.org/reference/statements-and-expressions.html?highlight=order,evaluation#statements-and-expressions\" rel=\"noreferrer\">Statements and expressions</a>:</p>\n\n<blockquote>\n  <p>[...] rules for evaluation of expressions involve specifying both the value produced by the expression and the order in which its sub-expressions are themselves evaluated.</p>\n</blockquote>\n\n<p>Let's see about those sub-expressions:</p>\n\n<ul>\n<li><p>In the <a href=\"https://doc.rust-lang.org/reference/expressions/call-expr.html\" rel=\"noreferrer\">further page about call expressions</a>, nothing is specified about the precedence in a function call.</p></li>\n<li><p>However, about the <a href=\"https://doc.rust-lang.org/reference/expressions/struct-expr.html#field-struct-expression\" rel=\"noreferrer\">struct initialization</a>, the reference seems to say that the order of evaluation follows the order of declaration:</p>\n\n<blockquote>\n  <p>A struct expression with fields enclosed in curly braces allows you to specify the value for each individual field <strong>in any order</strong> [stressed by me].</p>\n</blockquote>\n\n<p>If the reference precises that it works \"in any order\", I guess that's because the order matters.</p></li>\n</ul>\n\n<h1>Informally</h1>\n\n<ul>\n<li>Niko Matsakis has written that <a href=\"https://internals.rust-lang.org/t/rust-expression-order-of-evaluation/2605/33\" rel=\"noreferrer\">the evaluation order is left-to-right</a>.</li>\n<li>Steve Klabnik <a href=\"https://www.reddit.com/r/rust/comments/4grfi3/argument_evaluation_order/d2k2kik\" rel=\"noreferrer\">has written the same thing</a>.</li>\n</ul>\n\n<hr>\n\n<p>To answer to your concrete concern, the obvious solution is to make your operations into statements:</p>\n\n<pre><code>db_connection.transaction(|| {\n    let company = companies::register_company(...)?; // performs diesel insert\n    let user = users::register_user(...)?; // performs diesel insert\n\n    Ok(CompanyAndUser { company, user })\n});\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 968, "favorite_count": 0, "accepted_answer_id": 57612600, "answer_count": 1, "score": 13, "last_activity_date": 1566488345, "creation_date": 1566485729, "last_edit_date": 1566488161, "question_id": 57612141, "link": "https://stackoverflow.com/questions/57612141/what-is-the-order-of-function-arguments-evaluation-and-structs-initialization-in", "title": "What is the order of function arguments evaluation and structs initialization in Rust?", "body": "<p>Is the order of function argument evaluation defined in Rust? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f(a: u64, b: u64, c: u64) {}\nfn g() -&gt; u64 { 0 }\nfn h() -&gt; u64 { 1 }\nfn i() -&gt; u64 { 2 }\n\nfn main() {\n    f(g(), h(), i());\n}\n</code></pre>\n\n<p>Also, I am worried about the initialization order of structs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() {}\nfn g() {}\n\nA {\n    a: f(),\n    b: g(),\n}\n</code></pre>\n\n<p>Is the order guaranteed to be <code>a</code> and then <code>b</code>?</p>\n\n<p>For my particular use case, I am going to initialize a struct within a <code>diesel</code> transaction like that:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>db_connection.transaction(||\n    Ok(CompanyAndUser {\n        company: companies::register_company(...)?, // performs diesel insert\n        user: users::register_user(...)?, // performs diesel insert\n    })\n);\n</code></pre>\n\n<p>Obviously, I want these two diesel calls within a transaction to be ordered.\nI have not found any information about this, unfortunately. Also, I've found some more or less relevant info, but it was quite old.</p>\n"}, {"tags": ["json", "rust", "serde", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1566508953, "post_id": 57612345, "comment_id": 101689282, "body": "Aren\u2019t you still constructing multiple vectors in this case?"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1566548188, "post_id": 57612345, "comment_id": 101698503, "body": "@Listerone see updated answer (end of it). Every step result stored to a temporary variable, annotated with type and some comments. Should help to understand what&#39;s going on. If not, feel free to ask."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": false, "score": 0, "last_activity_date": 1566548043, "last_edit_date": 1566548043, "creation_date": 1566486411, "answer_id": 57612345, "question_id": 57611811, "link": "https://stackoverflow.com/questions/57611811/how-to-efficiently-extract-a-portion-of-json-as-a-vec-without-intermediate-struc/57612345#57612345", "title": "How to efficiently extract a portion of JSON as a Vec without intermediate structs?", "body": "<p>I'd probably use <a href=\"https://docs.serde.rs/serde_json/value/enum.Value.html#method.pointer\" rel=\"nofollow noreferrer\"><code>Value::pointer</code></a>. An example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::json;\n\nfn main() {\n    let value = json!({\n        \"deeply\": {\n            \"nested\": {\n                \"array\": [0, 1, 2, 3, 4, 5]\n            }\n        }\n    });\n\n    let numbers: Vec&lt;u64&gt; = value\n        .pointer(\"/deeply/nested/array\")\n        .unwrap()\n        .as_array()\n        .unwrap()\n        .iter()\n        .map(|x| x.as_u64().unwrap())\n        .collect();\n\n    println!(\"{:?}\", numbers);\n}\n</code></pre>\n\n<p><strong>NOTE</strong>: This example contains excessive use of <code>unwrap()</code> calls which\nis dangerous and can lead to panics. It's there to make the whole\nexample simpler.</p>\n\n<hr>\n\n<blockquote>\n  <p>Aren\u2019t you still constructing multiple vectors in this case?</p>\n</blockquote>\n\n<p>No. Let's expand this whole machinery.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{json, Value};\nuse std::iter::Map;\nuse std::slice::Iter;\n\nfn main() {\n    let value: Value = json!({\n        \"deeply\": {\n            \"nested\": {\n                \"array\": [0, 1, 2, 3, 4, 5]\n            }\n        }\n    });\n\n    // Option&lt;&amp;Value&gt; - Option &amp; reference\n    //\n    //    pub enum Option&lt;T&gt; {\n    //        None,\n    //        Some(T),\n    //    }\n    //\n    // T = &amp;Value - reference\n    let maybe_value_ref: Option&lt;&amp;Value&gt; = value.pointer(\"/deeply/nested/array\");\n\n    // &amp;Value - reference\n    let value_ref: &amp;Value = maybe_value_ref.unwrap();\n\n    // Option&lt;&amp;Vec&lt;Value&gt;&gt; - Option &amp; reference\n    //\n    //    pub enum Option&lt;T&gt; {\n    //        None,\n    //        Some(T),\n    //    }\n    //\n    // T = &amp;Vec&lt;Value&gt; - reference to Vec\n    let maybe_vec_ref: Option&lt;&amp;Vec&lt;Value&gt;&gt; = value_ref.as_array();\n\n    // &amp;Vec&lt;Value&gt; - reference\n    let vec_ref: &amp;Vec&lt;Value&gt; = maybe_vec_ref.unwrap();\n\n    // Iter&lt;Value&gt; allocation\n    //\n    //    pub struct Iter&lt;'a, T: 'a&gt; {\n    //        ptr: *const T,\n    //        end: *const T,\n    //        _marker: marker::PhantomData&lt;&amp;'a T&gt;,\n    //    }\n    //\n    // .next() returns Option&lt;&amp;Value&gt;\n    let vec_ref_iter: Iter&lt;Value&gt; = vec_ref.iter();\n\n    // Map&lt;..., ...&gt; allocation\n    //\n    //    pub struct Map&lt;I, F&gt; {\n    //        iter: I,\n    //        f: F,\n    //    }\n    //\n    // .next() returns Option&lt;u64&gt;\n    let vec_ref_iter_map: Map&lt;Iter&lt;Value&gt;, fn(&amp;Value) -&gt; u64&gt; =\n        vec_ref_iter.map(|x: &amp;Value| x.as_u64().unwrap());\n\n    // Nothing happens till this point. I mean, only Iter, Map, ... structures\n    // were allocated. But because they're lazy, we have to consume the last\n    // Map (vec_ref_iter_map) to fire the whole machinery.\n    //\n    // What's going on (simplified)?\n    //\n    // * Vec implements FromIterator\n    // * vec_ref_iter_map implements Iterator\n    // * FromIterator consumes vec_ref_iter_map.next() till None (= end)\n    // * vec_ref_iter_map.next() returns Option&lt;u64&gt;\n    //   * it internally gets vec_ref_iter.next() value\n    //   * if value is None then None is returned (= end)\n    //   * if value is Some(x) then it applies .map() closure (x.as_u64().unwrap())\n    //     and returns Some(closure result)\n    //\n    // The only allocated Vec here is the last one (numbers). No other Vectors\n    // were allocated.\n    let numbers: Vec&lt;u64&gt; = vec_ref_iter_map.collect();\n\n    println!(\"{:?}\", numbers);\n}\n</code></pre>\n\n<p>Documentation:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"nofollow noreferrer\"><code>std::slice::Iter</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>std::iter::Iterator</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>std::iter::Iterator.next()</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/struct.Map.html\" rel=\"nofollow noreferrer\"><code>std::iter::Map</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/struct.Map.html#impl-Iterator\" rel=\"nofollow noreferrer\"><code>std::iter::Map impl Iterator</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.FromIterator.html\" rel=\"nofollow noreferrer\"><code>std::iter::FromIterator</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\"><code>std::vec::Vec</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-FromIterator%3CT%3E\" rel=\"nofollow noreferrer\"><code>std::vec::Vec impl FromIterator</code></a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566571842, "post_id": 57627819, "comment_id": 101710762, "body": "Heh, nice one. I completely missed <i>I won&#39;t be using rest of the structure</i> in your question. Mark this as an answer and I&#39;ll delete mine."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566658905, "post_id": 57627819, "comment_id": 101730168, "body": "@zrzka Please leave your answer online. It&#39;s useful."}], "tags": [], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "is_accepted": true, "score": 1, "last_activity_date": 1566568511, "creation_date": 1566568511, "answer_id": 57627819, "question_id": 57611811, "link": "https://stackoverflow.com/questions/57611811/how-to-efficiently-extract-a-portion-of-json-as-a-vec-without-intermediate-struc/57627819#57627819", "title": "How to efficiently extract a portion of JSON as a Vec without intermediate structs?", "body": "<p>Oh, missed the totally obvious.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>... get f\nlet mut json = serde_json::from_reader::&lt;_, serde_json::Value&gt;(f)?;\nlet xs: Vec&lt;(f64, f64)&gt; = serde_json::from_value(json[\"subtree\"][0].take())?;\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 698, "favorite_count": 0, "accepted_answer_id": 57627819, "answer_count": 2, "score": 0, "last_activity_date": 1566568511, "creation_date": 1566484590, "last_edit_date": 1566485343, "question_id": 57611811, "link": "https://stackoverflow.com/questions/57611811/how-to-efficiently-extract-a-portion-of-json-as-a-vec-without-intermediate-struc", "title": "How to efficiently extract a portion of JSON as a Vec without intermediate structs?", "body": "<p>I have JSON content where, deeply nested, there is an array of numbers I want to extract. I'd like to not create the intermediate structs, so I tried the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>... get f\nlet json = serde_json::from_reader::&lt;_, serde_json::Value&gt;(f)?;\nlet xs: Vec&lt;(f64, f64)&gt; = serde_json::from_value(json[\"subtree\"][0])?;\n</code></pre>\n\n<p>This complains with</p>\n\n<pre><code>11 | serde_json::from_value(json[\"subtree\"][0])?;\n   |                        ^^^^^^^^^^^^^^^^^^^^^ move occurs because value has type `serde_json::value::Value`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>If I <code>clone</code>, it works fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let xs: Vec&lt;(f64, f64)&gt; = serde_json::from_value(json[\"subtree\"][0].clone())?;\n</code></pre>\n\n<p>But this seems unnecessary. I will not be using the rest of the structure. How do I achieve this without having to create the intermediate structs and without having to clone?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 1, "creation_date": 1566484170, "post_id": 57611372, "comment_id": 101678537, "body": "<code>csv::reader::Reader</code> has a type parameter specifying the underlying IO reader. Since <code>StdinLock</code> and <code>BufReader</code> are different types, so are <code>csv::reader::Reader&lt;StdinLock&gt;</code> and <code>csv::reader::Reader&lt;BufReader&gt;</code>. Instead, you&#39;ll need to use trait objects to allow polymorphism, and most likely you&#39;ll also need to box them to allow ownership, so you have <code>csv::reader::Reader&lt;Box&lt;dyn std::io::Reader&gt;&gt;</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1566484347, "post_id": 57611372, "comment_id": 101678648, "body": "On second thought, <a href=\"https://stackoverflow.com/q/26378842/1233251\">this</a> is a better candidate for duplicate target."}], "owner": {"reputation": 14335, "user_id": 110963, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/096c2c331fa0c946d103e9038930f80e?s=128&d=identicon&r=PG", "display_name": "Achim", "link": "https://stackoverflow.com/users/110963/achim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1566486841, "answer_count": 0, "score": 0, "last_activity_date": 1566484183, "creation_date": 1566483266, "last_edit_date": 1566484183, "question_id": 57611372, "link": "https://stackoverflow.com/questions/57611372/reading-from-stdin-or-file-getting-the-types-right", "closed_reason": "Duplicate", "title": "Reading from stdin or file (getting the types right)", "body": "<p>My Rust program should either read from stdin or from a file stored on S3. Currently I have something like this:</p>\n\n<pre><code>fn load_from_s3(url: &amp;String) -&gt; impl Read {\n    // ...  \n    BufReader::new(some_stream)\n}\n\n// ...\n\nlet reader = match cli.value_of(\"s3_url\") {\n      Some(url) =&gt; csv::Reader::from_reader(load_from_s3(&amp;url.to_string())),\n      None =&gt; {\n          let lock = io::stdin().lock();\n          csv::Reader::from_reader(lock)\n      }\n  };\n</code></pre>\n\n<p>The <code>Some</code> branch warns me about <code>this is found to be of type csv::reader::Reader&lt;impl std::io::Read&gt;</code>. The <code>None</code> branch gives me the error <code>expected opaque type, found struct std::io::StdinLock</code>. I'm rather new to Rust and cannot figure out, how to get the types right.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1566485935, "post_id": 57612047, "comment_id": 101679565, "body": "It&#39;s probably just me, but I really don&#39;t understand the first paragraph :/ I think I am mostly confused by the use of &quot;[this/your] dependency&quot;. By that you are referring to my crate, yes? And &quot;the consuming crate&quot; is the user of my crate, yes? Ah and the &quot;should&quot; in the last sentence is meant as &quot;to my knowledge it is&quot; and not &quot;it has to be&quot;, right?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1566486897, "post_id": 57612047, "comment_id": 101680141, "body": "That is indeed what I meant, @LukasKalbertodt. I rephrased things a bit nevertheless."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1566487101, "post_id": 57612047, "comment_id": 101680232, "body": "Thanks! :) So just to be super clear: adding <code>#![no_std]</code> to my crate will (most certainly) not have any disadvantages, so I should do it, yes?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1566488264, "post_id": 57612047, "comment_id": 101680807, "body": "@LukasKalbertodt The only one that comes to mind would be the chance of your crate one day requiring something from one layer upwards, requiring a breaking change and a semver major version bump."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 7, "last_activity_date": 1597055978, "last_edit_date": 1597055978, "creation_date": 1566485405, "answer_id": 57612047, "question_id": 57611219, "link": "https://stackoverflow.com/questions/57611219/when-adding-no-std-to-a-library-are-there-any-disadvantages-or-complicati/57612047#57612047", "title": "When adding `#![no_std]` to a library, are there any disadvantages or complications for the users of that library?", "body": "<blockquote>\n<p>For example, are they forced to also use <code>#![no_std]</code>?</p>\n</blockquote>\n<p>Not at all. The dependent crate (that is, the crate/project which will consume your crate) will know to find the <code>core</code> crate required by your dependency, and one will be free to use it as if <code>no_std</code> was ever involved. The main difference comes from what to expect from this dependency and how many other crates can use it. In other words, the set of crates compatible with your dependency should always be a superset if that dependency is prepared for <code>no_std</code>.</p>\n<p>The <a href=\"https://github.com/KodrAus/rust-no-std\" rel=\"nofollow noreferrer\">readme of KodrAus/rust-nostd</a>, an example of using and testing <code>no_std</code> in a library, also recommends using <code>no_std</code> whenever possible for maximum compatibility:</p>\n<blockquote>\n<p>The current design of Rust's standard library is split into a few layers, each building on the assumed platform capabilities of the one below. There's:</p>\n<ul>\n<li><code>std</code>: the full standard library assumes the presence of threads, a filesystem, and networking. [...]</li>\n<li><code>alloc</code>: the collections layer builds on the core by assuming runtime support for dynamic memory allocation.</li>\n<li><code>core</code>: the core layer makes no (well, not very many) assumptions about the &gt; underlying platform. Just about any target that can run Rust code is supported by core.</li>\n</ul>\n<p>So when you're designing your library you can make it maximally portable by <strong>targeting the lowest layer of the standard library that you can</strong>.</p>\n</blockquote>\n<p>The reason some crates put <code>no_std</code> behind a Cargo feature is because the crate may contain some opt-in functionalities which do require <code>std</code>, or at the very least <code>alloc</code>. By conditioning on Cargo features, environments without the standard library can still use the crate, whereas those with <code>std</code> or <code>alloc</code> can use an extended API of the crate. An example of &quot;lib.rs&quot; that shows this capability can be seen below.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![cfg_attr(not(feature = &quot;std&quot;), no_std)]\n\n#[cfg(feature = &quot;std&quot;)]\nextern crate core;\n\n#[cfg(feature = &quot;alloc&quot;)]\nextern crate alloc;\n\npub fn foo_into_slice(slice: &amp;mut [u8]) { unimplemented!() }\n\n/// Vec requires alloc\n#[cfg(feature = &quot;alloc&quot;)]\nuse alloc::vec::Vec;\n\n#[cfg(feature = &quot;alloc&quot;)]\npub fn foo_into_vec(vec: &amp;mut Vec&lt;u8&gt;) { unimplemented!() }\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 757, "favorite_count": 1, "accepted_answer_id": 57612047, "answer_count": 1, "score": 5, "last_activity_date": 1597055978, "creation_date": 1566482753, "question_id": 57611219, "link": "https://stackoverflow.com/questions/57611219/when-adding-no-std-to-a-library-are-there-any-disadvantages-or-complicati", "title": "When adding `#![no_std]` to a library, are there any disadvantages or complications for the users of that library?", "body": "<p>I wrote a Rust library. I heard about the <code>no_std</code> feature and noticed that my library does not use anything from <code>std</code> that isn't offered by <a href=\"https://doc.rust-lang.org/stable/core/index.html\" rel=\"noreferrer\"><code>core</code></a> and <a href=\"https://doc.rust-lang.org/stable/alloc/index.html\" rel=\"noreferrer\"><code>alloc</code></a>. So in theory I could just add the <code>#![no_std]</code> attribute and change a few imports.</p>\n\n<p>But I wonder how this influences the users of my library. Of course, my hope is that by using <code>#![no_std]</code>, users in <code>no_std</code> environments can use my crate as well. That's good, of course. But: <strong>do users of my library have any disadvantage from my library being <code>no_std</code>?</strong> For example, are they forced to also use <code>#![no_std]</code>? That would be bad. I wonder because most crates hide <code>no_std</code> compatibility behind a Cargo feature. And I actually couldn't find anything about this question online.</p>\n\n<p>If there are no disadvantages from using <code>#![no_std]</code>, then every crate who <em>can</em> work without <code>std</code> should add that attribute, right?</p>\n"}, {"tags": ["rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "edited": false, "score": 0, "creation_date": 1566486456, "post_id": 57612098, "comment_id": 101679895, "body": "Thank you. I&#39;ve tried and now I have TakeWhile1 error. I&#39;ll rewrite to functions to do something with the &quot;streaming nature&quot;."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "edited": false, "score": 1, "creation_date": 1566486756, "post_id": 57612098, "comment_id": 101680061, "body": "Update the answer to include full source code. It works for me."}, {"owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "edited": false, "score": 0, "creation_date": 1566490812, "post_id": 57612098, "comment_id": 101682082, "body": "Oh my bad, I left that <code>@</code> in the end, now it works, thank you!"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 0, "last_activity_date": 1566486703, "last_edit_date": 1566486703, "creation_date": 1566485612, "answer_id": 57612098, "question_id": 57608442, "link": "https://stackoverflow.com/questions/57608442/rust-nom-many-and-end-of-input/57612098#57612098", "title": "Rust Nom: many and end of input", "body": "<p>You want <code>many_till</code> combinator, not <code>many1</code>, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use nom::bytes::complete::take_while1;\nuse nom::character::is_alphabetic;\nuse nom::*;\n\nfn ident(c: char) -&gt; bool {\n    is_alphabetic(c as u8) || c == '_'\n}\n\nfn freetext(c: char) -&gt; bool {\n    c != '@'\n}\n\nfn parse_ident(s: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {\n    take_while1(ident)(s)\n}\n\nfn parse_freetext(s: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {\n    take_while1(freetext)(s)\n}\n\nnamed! {field_ident&lt;&amp;str, &amp;str&gt;,\n    do_parse!(\n        tag!(\"@\") &gt;&gt;\n        name: parse_ident &gt;&gt;\n        (name)\n    )\n}\n\nnamed! { field &lt;&amp;str, (&amp;str, &amp;str)&gt;,\n    do_parse!(\n        name: ws!(field_ident) &gt;&gt;\n        description: parse_freetext &gt;&gt;\n        (name, description)\n    )\n}\n\nnamed!(fields&lt;&amp;str, (Vec&lt;(&amp;str, &amp;str)&gt;, &amp;str)&gt;, many_till!(field, eof!()));\n\nfn main() {\n    println!(\"{:?}\", field(\"@pook Some free text\"));\n    println!(\n        \"{:?}\",\n        fields(\"@pook Some free text @another_pook And another text\")\n    );\n}\n</code></pre>\n\n<p>Rather counter-intuitive. It has to do with the streaming nature of <code>nom</code>, I guess.</p>\n"}], "owner": {"reputation": 538, "user_id": 4911677, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/be942bfa276c4d1607d43dbf0e1631a7?s=128&d=identicon&r=PG", "display_name": "fevgenym", "link": "https://stackoverflow.com/users/4911677/fevgenym"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 0, "accepted_answer_id": 57612098, "answer_count": 1, "score": 3, "last_activity_date": 1566486703, "creation_date": 1566473720, "question_id": 57608442, "link": "https://stackoverflow.com/questions/57608442/rust-nom-many-and-end-of-input", "title": "Rust Nom: many and end of input", "body": "<p>I'm trying to get familiar with Nom, currently version 5, where there is no <code>CompleteStr</code> and other things, so related questions aren't so helpful.</p>\n\n<p>How can I parse something like</p>\n\n<pre><code>\"@pook Some free text @another_pook And another text\"\n</code></pre>\n\n<p>into</p>\n\n<pre><code>vec![(\"pook\", \"Some free text\"), (\"another_pook\", \"And another text\")]\n</code></pre>\n\n<p>?</p>\n\n<p><code>@</code> prepended strings are called \"field identifiers\";\nnext substring is a description;\nboth are called \"field\"</p>\n\n<p>Here is how I parse one field successfully:</p>\n\n<pre><code>use nom::bytes::complete::take_while1;\nuse nom::*;\nuse nom::character::is_alphabetic;\n\nfn ident(c: char) -&gt; bool {\n    is_alphabetic(c as u8) || c == '_'\n}\n\nfn freetext(c: char) -&gt; bool {\n    c != '@'\n}\n\nfn parse_ident(s: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {\n    take_while1(ident)(s)\n}\n\nfn parse_freetext(s: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {\n    take_while1(freetext)(s)\n}\n\n\nnamed! {field_ident&lt;&amp;str, &amp;str&gt;,\n    do_parse!(\n        tag!(\"@\") &gt;&gt;\n        name: parse_ident &gt;&gt;\n        (name)\n    )\n}\n\nnamed! { field &lt;&amp;str, (&amp;str, &amp;str)&gt;,\n    do_parse!(\n        name: ws!(field_ident) &gt;&gt;\n        description: parse_freetext &gt;&gt;\n        (name, description)\n    )\n}\n</code></pre>\n\n<p>When I wrap it into <code>many1</code> and provide input as stated in the beginning I receive <code>Err(Incomplete(Size(1)))</code>, but it works if I put <code>@</code> in the end of the input. How can I mark it as completed on the end of input?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566473192, "post_id": 57608043, "comment_id": 101671938, "body": "not same, my code didn&#39;t report compile error"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566473290, "post_id": 57608043, "comment_id": 101671993, "body": "Your code has many many warnings though."}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566473394, "post_id": 57608043, "comment_id": 101672053, "body": "@macarton haha\uff0cyeah\uff0ci&#39;m new to rust, so come to find some help from you"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1566473617, "post_id": 57608043, "comment_id": 101672190, "body": "If you&#39;d like to see an error, just add this <code>#![deny(unreachable_patterns)]</code> line and your code won&#39;t compile."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1566477197, "post_id": 57608043, "comment_id": 101674149, "body": "Thanks for pointing that out, I have edited the other question so it has the warning message you get by default."}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1566472835, "last_edit_date": 1566472835, "creation_date": 1566472432, "answer_id": 57608094, "question_id": 57608043, "link": "https://stackoverflow.com/questions/57608043/why-match-didnt-match-exact-code-in-rust/57608094#57608094", "title": "why &quot;match&quot; didn&#39;t match exact code in Rust?", "body": "<p>This is a common pitfall. It's because <code>Add =&gt; ...</code> does not refer to <code>Phase::Add</code> but binds the value of <code>self</code> to the new variable <code>Add</code>. The name <code>Add</code> is just coincidental, yet the pattern <code>Phase::Add</code> and the (new) variable <code>Add</code> are completely different constructs. Since the variable <code>Add</code> has no pattern restrictions it always matches; the variables <code>Modify</code> and <code>Delete</code> remain unused.</p>\n\n<p>As you found out yourself, you need to use <code>Phase::Add</code>, not <code>Add</code>.</p>\n"}], "owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "closed_date": 1566473215, "accepted_answer_id": 57608094, "answer_count": 1, "score": 1, "last_activity_date": 1566472835, "creation_date": 1566472227, "question_id": 57608043, "link": "https://stackoverflow.com/questions/57608043/why-match-didnt-match-exact-code-in-rust", "closed_reason": "Duplicate", "title": "why &quot;match&quot; didn&#39;t match exact code in Rust?", "body": "<p>when I write a Display impl for enum, I write code without enum Type, no matter what value I give in the test, it always match the first one, why ?</p>\n\n<p>I find if I specify the type Phase::Add, then it could success, but why?</p>\n\n<p>this will fail the test:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Debug)]\npub enum Phase {\n    Add,\n    Modify,\n    Delete,\n}\n\nimpl fmt::Display for Phase {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Add =&gt; write!(f, \"Add\"),\n            Modify =&gt; write!(f, \"Modify\"),\n            Delete =&gt; write!(f, \"Delete\"),\n            _ =&gt; write!(f, \"Unknown\"),\n        }\n    }\n}\n\n#[test]\nfn test_lifecycle_phase() {\n    let mut phase = Phase::Modify;\n    assert_eq!(\"Modify\", phase.to_string());\n    phase = Phase::Delete;\n    assert_eq!(\"Delete\", phase.to_string());\n}\n\n</code></pre>\n\n<p>Only write like this can be ok, why?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Debug)]\npub enum Phase {\n    Add,\n    Modify,\n    Delete,\n}\n\nimpl fmt::Display for Phase {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Phase::Add =&gt; write!(f, \"Add\"),\n            Phase::Modify =&gt; write!(f, \"Modify\"),\n            Phase::Delete =&gt; write!(f, \"Delete\"),\n            _ =&gt; write!(f, \"Unknown\"),\n        }\n    }\n}\n\n#[test]\nfn test_lifecycle_phase() {\n    let mut phase = Phase::Modify;\n    assert_eq!(\"Modify\", phase.to_string());\n    phase = Phase::Delete;\n    assert_eq!(\"Delete\", phase.to_string());\n}\n\n</code></pre>\n"}, {"tags": ["rust", "conditional-compilation"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566471676, "post_id": 57607182, "comment_id": 101671105, "body": "There&#39;s no option for benchmarking. All available options are listed <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#set-configuration-options\" rel=\"nofollow noreferrer\">here</a>. You can find <a href=\"https://stackoverflow.com/a/37679386/581190\">similar questions &amp; answers</a> where you can learn how to cope with features."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1566472153, "post_id": 57607791, "comment_id": 101671380, "body": "Can you also explain how to not have both definitions of <code>X</code> in scope? The version for <code>not(test)</code> will be defined at the same time as <code>benchmarking</code>."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1566473185, "post_id": 57607791, "comment_id": 101671932, "body": "The version for <code>not(test)</code> will not be defined at the same time as <code>benchmarking</code>. Ideally you should not need to change the behavior of the code to benchmark. It should only <code>trace&#47;profile</code> the execution without changing the behavior."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1566482638, "post_id": 57607791, "comment_id": 101677588, "body": "I only suggested to add that because the comment in OP&#39;s says they expect a problem with that conflict. <code>#[cfg(benchmarking)]</code> <i>must</i> conflict with either <code>#[cfg(test)]</code>  or <code>#[cfg(not(test))]</code>."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1566471429, "creation_date": 1566471429, "answer_id": 57607791, "question_id": 57607182, "link": "https://stackoverflow.com/questions/57607182/equivalent-of-cfgtest-for-benchmarks/57607791#57607791", "title": "Equivalent of #[cfg(test)] for benchmarks?", "body": "<p>You need to add a feature(benchmarking) section to your <code>Cargo.toml</code> file. The specifics can be found in the Cargo <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">documentation</a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>[features]\nbenchmarking = []\n</code></pre>\n\n<p>After you add your feature, you need to write the specific benchmarking code for that feature in the code </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>.\n.\n#[cfg(feature = \"benchmarking\")]\n{\n    // count iterations check memory etc.\n}\n.\n.\n</code></pre>\n\n<p>Then if you want to get these codes are added into compilation you need to set this feature while building like following:</p>\n\n<pre><code>cargo build --features \"benchmarking\"\n</code></pre>\n\n<p>For the detailed info you can check the <a href=\"https://www.worthe-it.co.za/programming/2018/11/18/compile-time-feature-flags-in-rust.html\" rel=\"nofollow noreferrer\">reference</a></p>\n"}], "owner": {"reputation": 150, "user_id": 5837178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0b3e73cee6d9a693f13ae11f2bd8984c?s=128&d=identicon&r=PG&f=1", "display_name": "FliegendeWurst", "link": "https://stackoverflow.com/users/5837178/fliegendewurst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566482719, "creation_date": 1566469370, "last_edit_date": 1566482719, "question_id": 57607182, "link": "https://stackoverflow.com/questions/57607182/equivalent-of-cfgtest-for-benchmarks", "title": "Equivalent of #[cfg(test)] for benchmarks?", "body": "<p>More specifically, I would like to have different constants for normal builds, test builds and benchmark builds:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(not(test))]\nconst X: usize = 16;\n#[cfg(test)]\nconst X: usize = 10;\n#[cfg(benchmarking)] // &lt;-- this doesn't work, and would conflict with not(test)\nconst X: usize = 100;\n</code></pre>\n"}, {"tags": ["join", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566472951, "post_id": 57604805, "comment_id": 101671821, "body": "Return type is <code>std::result::Result&lt;std::vec::Vec&lt;U&gt;, diesel::result::Error&gt;</code> and the Rust compiler can&#39;t infer what the <code>U</code> is. This <a href=\"http://docs.diesel.rs/diesel/query_dsl/trait.QueryDsl.html#with-implicit-on-clause\" rel=\"nofollow noreferrer\">inner_join</a> example works without annotation. But because we have no idea what&#39;s inside your <code>schema.rs</code>, if you&#39;re using <code>infer_schema!</code> or not, it&#39;s hard to say. Check <a href=\"http://docs.diesel.rs/diesel/macro.allow_tables_to_appear_in_same_query.html\" rel=\"nofollow noreferrer\">the documentation</a> when the auto invocation of <code>joinable!</code> &amp; <code>allow_tables_to_appear_in_same_query!</code> is generated."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1566473042, "post_id": 57604805, "comment_id": 101671870, "body": "You should provide <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, not just couple of lines from your project. It&#39;s hard to help if we have to guess."}], "answers": [{"tags": [], "owner": {"reputation": 143, "user_id": 3894945, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5048e72d85083aa466364aad458d6c1e?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/3894945/daniel"}, "is_accepted": true, "score": 1, "last_activity_date": 1566590633, "creation_date": 1566590633, "answer_id": 57632395, "question_id": 57604805, "link": "https://stackoverflow.com/questions/57604805/diesel-join-cannot-infer-type/57632395#57632395", "title": "Diesel join cannot infer type", "body": "<p>I have solved this. Since the Queryable derive in the structs can not infer the type of the data resulting from the join you have to annotate the data types of the struct fields like so: </p>\n\n<pre><code>let data: Vec&lt;(String, String)&gt; = users::table.inner_join(notes::table)\n    .select((users::name, notes::title))\n    .load(&amp;connection)\n    .expect(\"error\");\n</code></pre>\n\n<p>Before I tryed something like</p>\n\n<pre><code>let data: Vec&lt;(User, Post)&gt; = posts::table.inner_join(users::table)\n.select((users::name, notes::title))\n.load(&amp;connection)\n.expect(\"error\");\n</code></pre>\n\n<p>The compiler threw an error for load that the trait Queryable is not implemented. </p>\n\n<p>Also see the documentation: <a href=\"https://github.com/diesel-rs/diesel/blob/master/guide_drafts/trait_derives.md\" rel=\"nofollow noreferrer\">https://github.com/diesel-rs/diesel/blob/master/guide_drafts/trait_derives.md</a></p>\n"}], "owner": {"reputation": 143, "user_id": 3894945, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5048e72d85083aa466364aad458d6c1e?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/3894945/daniel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1544, "favorite_count": 0, "accepted_answer_id": 57632395, "answer_count": 1, "score": 1, "last_activity_date": 1566590633, "creation_date": 1566461359, "last_edit_date": 1566499295, "question_id": 57604805, "link": "https://stackoverflow.com/questions/57604805/diesel-join-cannot-infer-type", "title": "Diesel join cannot infer type", "body": "<p>rust version 1.18.3\ndiesel version 1.0.0\npostgres 11\non debian 10</p>\n\n<p>I am trying to join two tables in Rust utilizing the Diesel ORM and postgres. The table are posts and users and I'd like to join the user name from users to the posts table.  </p>\n\n<p>I have implemented a foreign key in posts in the CREATE TABLE statement pointing to the id in users so diesel automatically derived the joinable! and the allow_tables_to_appear_in_same_query! macro in schema.rs. Yet when I try to join the tables in my code rust cannot infer the type and I can't figure how to annotate the type.</p>\n\n<p>this is my main.rs </p>\n\n<pre><code>extern crate cmsbackend;\nextern crate diesel;\n\nuse self::cmsbackend::*;\nuse self::models::*;\nuse self::diesel::prelude::*;\n\nfn main() {\n    use cmsbackend::schema::*;\n\n    let connection = establish_connection();\n\n    let results = users::table.inner_join(posts::table)\n        .select((users::name, posts::title))\n        .load(&amp;connection);\n}\n</code></pre>\n\n<p>I get this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed for `std::result::Result&lt;std::vec::Vec&lt;U&gt;, diesel::result::Error&gt;`\n  --&gt; src/bin/main.rs:20:10\n   |\n18 |     let results = users::table.inner_join(posts::table)\n   |         ------- consider giving `results` the explicit type `std::result::Result&lt;std::vec::Vec&lt;U&gt;, diesel::result::Error&gt;`, where the type parameter `U` is specified\n19 |         .select((users::name, posts::title))\n20 |         .load(&amp;connection);\n   |          ^^^^ cannot infer type for `U`\n</code></pre>\n\n<p>For more information about this error, try <code>rustc --explain E0282</code>.\nerror: Could not compile <code>cmsbackend</code>. <br></p>\n\n<p>Is it possible that I need to derive something else in my struct definitions: <br> </p>\n\n<pre><code>use diesel::pg::data_types::*;\n\n#[derive(Queryable)]\npub struct Post {\n    pub id: i32,\n    pub title: String,\n    pub body: Option&lt;String&gt;,\n    pub published: bool,\n    pub user_id: i32,\n    pub creation_date: PgTimestamp,\n    pub last_edit: PgTimestamp,\n    pub foto: Option&lt;String&gt;,\n}\n\n#[derive(Queryable)]\npub struct User {\n    pub id: i32,\n    pub name: String,\n    pub pw: String,\n}\n</code></pre>\n\n<p>How do I get this to compile?</p>\n\n<hr>\n\n<p><strong>Edit:</strong> <br>\nThanks for your comments. This is the content of my schema.rs</p>\n\n<pre><code>table! {\n    posts (id) {\n        id -&gt; Int4,\n        title -&gt; Varchar,\n        body -&gt; Nullable&lt;Text&gt;,\n        published -&gt; Bool,\n        user_id -&gt; Int4,\n        creation_date -&gt; Timestamp,\n        last_edit -&gt; Timestamp,\n        foto -&gt; Nullable&lt;Varchar&gt;,\n    }\n}\n\ntable! {\n    users (id) {\n        id -&gt; Int4,\n        name -&gt; Varchar,\n        pw -&gt; Varchar,\n    }\n}\n\njoinable!(posts -&gt; users (user_id));\n\nallow_tables_to_appear_in_same_query!(\n    posts,\n    users,\n);\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 6454, "user_id": 248065, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/95fb14ef95ad722e78e25f065c9d8ec6?s=128&d=identicon&r=PG", "display_name": "Thom Wiggers", "link": "https://stackoverflow.com/users/248065/thom-wiggers"}, "is_accepted": false, "score": 1, "last_activity_date": 1566458078, "creation_date": 1566458078, "answer_id": 57603897, "question_id": 57603518, "link": "https://stackoverflow.com/questions/57603518/using-generics-with-trait/57603897#57603897", "title": "Using generics with trait", "body": "<p>Your function signature for <code>get_pass</code> specifies that it will construct a <code>Pass&lt;E&gt;</code> type. That means it should work everywhere where <code>Pass&lt;E: Extractor + Sized&gt;</code> is valid.</p>\n\n<p>Imagine you have the following struct in addition to your code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct OtherBooksExtractor {}\nimpl Extractor for OtherBooksExtractor {\n    fn parse(&amp;self) -&gt; String {\n        \"foobar\".to_owned()\n    }\n}\n</code></pre>\n\n<p>Then you will expect that the following to work, based on just the types:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn bla() -&gt; Pass&lt;OtherBookExtractor&gt; {\n   GutenbergRobot.get_pass()\n}\nassert_eq!(bla.extractor.parse(), \"foobar\")\n</code></pre>\n\n<p>However, you are constructing something more specific than the generic <code>Pass&lt;E&gt;</code> in your <code>get_pass</code>: a <code>Pass&lt;BooksExtractor&gt;</code>! If that would allow, that means that the code I wrote would not work as I might have expected.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566459910, "post_id": 57603927, "comment_id": 101664976, "body": "Nice summary, very clear!"}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1566477891, "post_id": 57603927, "comment_id": 101674565, "body": "Just a small note: I would change the return type of get_pass in the impl to <code>-&gt; Pass&lt;Self::Extractor&gt;</code>. Makes copy-pasting easier."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1566459078, "last_edit_date": 1566459078, "creation_date": 1566458201, "answer_id": 57603927, "question_id": 57603518, "link": "https://stackoverflow.com/questions/57603518/using-generics-with-trait/57603927#57603927", "title": "Using generics with trait", "body": "<p>Your <code>Robot::get_pass</code> function should not be generic. Instead you should use an associated type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Robot: Sized {\n    type Extractor: Extractor;\n    fn get_pass(&amp;self) -&gt; Pass&lt;Self::Extractor&gt;;\n}\n\nimpl Robot for GutenbergRobot {\n    type Extractor = BooksExtractor;\n    fn get_pass(&amp;self) -&gt; Pass&lt;BooksExtractor&gt; {\n        Pass {\n            extractor: Some(BooksExtractor {}),\n            name: \"test\".to_owned(),\n            next_pass: None\n        }\n    }\n}\n</code></pre>\n\n<p>In short, you should use a generic when the <strong>caller</strong> can choose the type returned by the function, and an associated type when the <strong>implementer</strong> chooses the type.</p>\n\n<p>See also <a href=\"https://stackoverflow.com/q/32059370/5397009\">this question</a>.</p>\n"}], "owner": {"reputation": 57, "user_id": 5834616, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8W9_KfGRu4w/AAAAAAAAAAI/AAAAAAAAAGA/GdM6R8Pj9SM/photo.jpg?sz=128", "display_name": "JoeHigashi", "link": "https://stackoverflow.com/users/5834616/joehigashi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "closed_date": 1566530610, "accepted_answer_id": 57603927, "answer_count": 2, "score": 1, "last_activity_date": 1566459863, "creation_date": 1566456681, "last_edit_date": 1566459863, "question_id": 57603518, "link": "https://stackoverflow.com/questions/57603518/using-generics-with-trait", "closed_reason": "Duplicate", "title": "Using generics with trait", "body": "<p>I'm trying to implement a trait that contains a generic function. However, I cannot instantiate a struct inside the implemented function.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Extractor {\n    fn parse(&amp;self) -&gt; String;\n}\n\nstruct BooksExtractor {}\n\nimpl Extractor for BooksExtractor {\n    fn parse(&amp;self) -&gt; String {\n        \"test\".to_owned()\n    }\n}\n\nstruct Pass&lt;E: Extractor&gt; {\n    pub extractor: Option&lt;E&gt;,\n    pub name: String,\n    pub next_pass: Option&lt;Box&lt;Pass&lt;E&gt;&gt;&gt;,\n}\n\ntrait Robot: Sized {\n    fn get_pass&lt;E: Extractor&gt;(&amp;self) -&gt; Pass&lt;E&gt;;\n}\n\nstruct GutenbergRobot {}\n\nimpl Robot for GutenbergRobot {\n    fn get_pass&lt;E: Extractor + ?Sized&gt;(&amp;self) -&gt; Pass&lt;E&gt;\n        where E: Extractor + Sized {\n        Pass {\n            extractor: Some(BooksExtractor {}),\n            name: \"test\".to_owned(),\n            next_pass: None\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler complains about the parameter expected to be a type for the <code>extractor</code> field when trying to instantiate a <code>Pass</code> struct inside the implemented function:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:33:29\n   |\n33 |             extractor: Some(BooksExtractor {}),\n   |                             ^^^^^^^^^^^^^^^^^ expected type parameter, found struct `BooksExtractor`\n   |\n   = note: expected type `E`\n              found type `BooksExtractor`\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 4, "last_activity_date": 1566455727, "last_edit_date": 1566455727, "creation_date": 1566449841, "answer_id": 57602289, "question_id": 57600563, "link": "https://stackoverflow.com/questions/57600563/find-total-size-of-struct-at-runtime/57602289#57602289", "title": "Find total size of struct at runtime", "body": "<p><a href=\"https://github.com/servo/servo\" rel=\"nofollow noreferrer\">Servo</a> was using the <a href=\"https://crates.io/crates/heapsize\" rel=\"nofollow noreferrer\">heapsize</a> crate to measure the size of heap allocations during program.</p>\n\n<p>You can call the <a href=\"https://docs.rs/heapsize/0.4.2/heapsize/fn.heap_size_of.html\" rel=\"nofollow noreferrer\"><code>heap_size_of</code></a> function to measure the allocated heap size by jemalloc. </p>\n\n<p>Be aware that you can get different results with different allocators.</p>\n\n<hr>\n\n<p><em>Regarding Github: \"This crate is not maintained and is no longer used by Servo. At the time of writing, Servo uses internal malloc_size_of instead.\"</em></p>\n\n<p>You can either use <strong><em>heapsize</em></strong> crate or you can check the implementation details of <a href=\"https://github.com/servo/servo/tree/faf3a183f3755a9986ec4379abadf3523bd8b3c0/components/malloc_size_of\" rel=\"nofollow noreferrer\"><code>malloc_size_of</code></a> as well</p>\n"}], "owner": {"reputation": 21653, "user_id": 100335, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/e470fa78a9b8022d24b2780c5ffc33fe?s=128&d=identicon&r=PG", "display_name": "kpozin", "link": "https://stackoverflow.com/users/100335/kpozin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1566455727, "creation_date": 1566432751, "question_id": 57600563, "link": "https://stackoverflow.com/questions/57600563/find-total-size-of-struct-at-runtime", "title": "Find total size of struct at runtime", "body": "<p>Is there any way to calculate the total stack and heap size of a struct at runtime?</p>\n\n<p>As far as I can tell, <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>std::mem::{size_of, size_of_val}</code></a> only work for stack-allocated values, but a struct might contain heap-allocated buffers, too (e.g. <code>Vec</code>).</p>\n"}, {"tags": ["rust", "traits", "lifetime", "rust-rocket"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1566450406, "post_id": 57600524, "comment_id": 101661202, "body": "How did you define your trait? There seems no problem on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6b46e930c07bb81f45775e19db67584\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566454363, "post_id": 57600524, "comment_id": 101662401, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>: we can&#39;t tell what types you are using. In particular, what is <code>Response</code> and how is it defined?"}, {"owner": {"reputation": 2508, "user_id": 1304351, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/12c1217a2578591700612d472a2d8d42?s=128&d=identicon&r=PG", "display_name": "Nambi", "link": "https://stackoverflow.com/users/1304351/nambi"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566481441, "post_id": 57600524, "comment_id": 101676795, "body": "@Jmb Yep, the playground doesn&#39;t have any issues compiling. But, when I do <code>cargo build</code> it does have this error. <code>$rustc -V rustc 1.39.0-nightly (bea0372a1 2019-08-20)</code> <code>$cargo -V cargo 1.39.0-nightly (3f700ec43 2019-08-19)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 2, "last_activity_date": 1566470686, "creation_date": 1566470686, "answer_id": 57607578, "question_id": 57600524, "link": "https://stackoverflow.com/questions/57600524/rust-function-return-type-with-lifetime-value/57607578#57607578", "title": "Rust function return type with lifetime value", "body": "<p>The <code>Responder</code> trait is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Responder&lt;'r&gt; {\n    fn respond_to(self, request: &amp;Request) -&gt; response::Result&lt;'r&gt;;\n}\n</code></pre>\n\n<p>The <code>response::Result&lt;'r&gt;</code> is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub type Result&lt;'r&gt; = ::std::result::Result&lt;self::Response&lt;'r&gt;, ::http::Status&gt;;\n</code></pre>\n\n<p>Your method signature is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn respond_to(self, request: &amp;Request) -&gt; Result&lt;Response, Status&gt;;\n</code></pre>\n\n<p>As you can see, you just forgot to specify lifetime for the <code>Response</code>. The correct method signature is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'r&gt; Responder&lt;'r&gt; for Hero {\n    fn respond_to(self, request: &amp;Request) -&gt; Result&lt;Response&lt;'r&gt;, Status&gt; {\n        unimplemented!()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2508, "user_id": 1304351, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/12c1217a2578591700612d472a2d8d42?s=128&d=identicon&r=PG", "display_name": "Nambi", "link": "https://stackoverflow.com/users/1304351/nambi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 488, "favorite_count": 0, "accepted_answer_id": 57607578, "answer_count": 1, "score": 1, "last_activity_date": 1566470796, "creation_date": 1566432225, "last_edit_date": 1566470796, "question_id": 57600524, "link": "https://stackoverflow.com/questions/57600524/rust-function-return-type-with-lifetime-value", "title": "Rust function return type with lifetime value", "body": "<p>I'd like to implement the <code>Responder</code> trait for my <code>Hero</code> structure, but the following method signature (<code>respond_to</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rocket::{http::Status, response::Responder, Request, Response};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize)]\npub struct Hero {\n    pub id: Option&lt;i32&gt;,\n    pub name: String,\n    pub identity: String,\n    pub hometown: String,\n    pub age: i32,\n}\n\nimpl Hero {\n    pub fn new(\n        num: Option&lt;i32&gt;,\n        name: String,\n        identity: String,\n        hometown: String,\n        age: i32,\n    ) -&gt; Hero {\n        Hero {\n            id: num,\n            name,\n            identity,\n            hometown,\n            age,\n        }\n    }\n}\n\nimpl&lt;'r&gt; Responder&lt;'r&gt; for Hero {\n    fn respond_to(self, _request: &amp;Request) -&gt; Result&lt;Response, Status&gt; {\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>Throws a compilation error:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:32:55\n   |\n32 |     fn respond_to(self, _request: &amp;Request) -&gt; Result&lt;Response, Status&gt; {\n   |                                                       ^^^^^^^^ expected lifetime parameter\n   |\n   = help: this function's return type contains a borrowed value, but the signature does not say which one of `_request`'s 2 lifetimes it is borrowed from\n</code></pre>\n\n<p>Dependencies:</p>\n\n<pre><code>[dependencies]\nrocket = \"0.4.2\"\nserde = {version = \"1.0.99\", features=[\"derive\"]}\n</code></pre>\n\n<p>The documentation doesn't provide an example of how to provide lifetimes when a type is returned. How to specify lifetime when a type is returned?</p>\n"}]