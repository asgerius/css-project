[{"tags": ["postgresql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540412901, "post_id": 52977362, "comment_id": 92861351, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52977362/edit\">edit</a> your question to include it. For example, you haven&#39;t provided your <code>table!</code> macro calls (not complete) and we don&#39;t need to know anything about Rocket (not minimal). Try to produce something that reproduces your error in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well as <a href=\"https://stackoverflow.com/tags/rust-diesel/info\">Diesel-specific tips</a> to make small examples."}, {"owner": {"reputation": 353, "user_id": 822406, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/be7b9265dfef43193415f8bb24c8aee4?s=128&d=identicon&r=PG", "display_name": "Ramsundar Shandilya", "link": "https://stackoverflow.com/users/822406/ramsundar-shandilya"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540413212, "post_id": 52977362, "comment_id": 92861466, "body": "Apologize for not adhering to the MCVE. I have updated the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540413467, "post_id": 52977362, "comment_id": 92861585, "body": "Why is <code>Project</code> relevant? Where is it used? Again: <b>minimal</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540413503, "post_id": 52977362, "comment_id": 92861598, "body": "Why are <code>Serialize</code> and <code>Deserialize</code> provided? Are they required to reproduce the problem? <i>minimal</i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540413587, "post_id": 52977362, "comment_id": 92861643, "body": "What version of Diesel? Are you using any Cargo features for Diesel?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1540475758, "last_edit_date": 1540475758, "creation_date": 1540414448, "answer_id": 52977781, "question_id": 52977362, "link": "https://stackoverflow.com/questions/52977362/expected-struct-string-found-struct-schemamy-tablecolumnsmy-column-when/52977781#52977781", "title": "&quot;expected struct String, found struct schema::my_table::columns::my_column&quot; when trying to insert value with Diesel", "body": "<p>Here is a <a href=\"/help/mcve\">MCVE</a> of your problem:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nuse diesel::pg::PgConnection;\nuse diesel::prelude::*;\n\nmod schema {\n    table! {\n        projects (id) {\n            id -&gt; Int4,\n            title -&gt; Varchar,\n            program_id -&gt; Int4,\n            is_archived -&gt; Bool,\n        }\n    }\n\n    #[derive(Debug, Insertable)]\n    #[table_name = \"projects\"]\n    pub struct NewProject {\n        pub title: String,\n    }\n}\n\nuse schema::NewProject;\n\nfn insert(project: NewProject, program_id: i32, conn: &amp;PgConnection) -&gt; bool {\n    use schema::projects::dsl::*;\n    use schema::projects::dsl::{title as t};\n    use schema::projects::dsl::{program_id as prog_id};\n\n    let NewProject {\n        title\n    } = project;\n\n    diesel::insert_into(projects)\n        .values((t.eq(title), prog_id.eq(program_id)))\n        .execute(conn)\n        .is_ok()\n}\n\nfn main() {}\n</code></pre>\n\n<p>You have imported a type called <code>title</code> that conflicts with the destructuring, as the error message states:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:34:22\n   |\n34 |     let NewProject { title } = project;\n   |                      ^^^^^ expected struct `std::string::String`, found struct `schema::projects::columns::title`\n   |\n   = note: expected type `std::string::String`\n              found type `schema::projects::columns::title`\n</code></pre>\n\n<p>This can be reduced to a very small case:</p>\n\n<pre><code>struct foo;\nstruct Thing { foo: String }\n\nfn example(t: Thing) {\n    let Thing { foo } = t;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:5:17\n  |\n5 |     let Thing { foo } = t;\n  |                 ^^^ expected struct `std::string::String`, found struct `foo`\n  |\n  = note: expected type `std::string::String`\n             found type `foo`\n</code></pre>\n\n<p>Note that this struct is defined without curly braces, which makes it a <em>unit-like struct</em>. These are convenient, but they have the subtle nuance that they create both a <em>type</em> and a <em>value</em>:</p>\n\n<pre><code>struct foo;\n\nfn example() {\n    let foo: foo = foo;\n    //             ^-- the only value of the type `foo`\n    //       ^-------- the type `foo`\n    //  ^------------- newly-defined unrelated identifier\n}\n</code></pre>\n\n<p>When destructuring, the pattern is preferred as a <em>type</em>, not an identifier.</p>\n\n<p>Don't import that type and you won't have a conflict:</p>\n\n<pre><code>fn insert(project: NewProject, program_id: i32, conn: &amp;PgConnection) -&gt; bool {\n    use schema::projects::dsl;\n\n    let NewProject { title } = project;\n\n    diesel::insert_into(dsl::projects)\n        .values((dsl::title.eq(title), dsl::program_id.eq(program_id)))\n        .execute(conn)\n        .is_ok()\n}\n</code></pre>\n"}], "owner": {"reputation": 353, "user_id": 822406, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/be7b9265dfef43193415f8bb24c8aee4?s=128&d=identicon&r=PG", "display_name": "Ramsundar Shandilya", "link": "https://stackoverflow.com/users/822406/ramsundar-shandilya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 733, "favorite_count": 0, "accepted_answer_id": 52977781, "answer_count": 1, "score": 5, "last_activity_date": 1540475758, "creation_date": 1540412354, "last_edit_date": 1540414272, "question_id": 52977362, "link": "https://stackoverflow.com/questions/52977362/expected-struct-string-found-struct-schemamy-tablecolumnsmy-column-when", "title": "&quot;expected struct String, found struct schema::my_table::columns::my_column&quot; when trying to insert value with Diesel", "body": "<p>I am trying to execute an insert multiple columns using <a href=\"http://diesel.rs\" rel=\"noreferrer\">Diesel</a> with PostgreSQL.</p>\n\n<p>This is the insert function to add a new <code>Project</code> - </p>\n\n<pre><code>pub fn insert(project: NewProject, program_id: i32, conn: &amp;PgConnection) -&gt; bool {\n    use schema::projects::dsl::*;\n    use schema::projects::dsl::{title as t};\n    use schema::projects::dsl::{program_id as prog_id};\n\n    let NewProject {\n        title\n    } = project;\n\n    diesel::insert_into(projects)\n        .values((t.eq(title), prog_id.eq(program_id)))\n        .execute(conn)\n        .is_ok()\n}\n</code></pre>\n\n<p>And <code>Project</code> and <code>NewProject</code></p>\n\n<pre><code>#[derive(Queryable, Serialize, Debug, Clone)]\npub struct Project {\n    pub id: i32,\n    pub title: String,\n    pub program_id: i32,\n    pub is_archived: bool\n}\n\n#[derive(Serialize, Deserialize, Insertable)]\n#[table_name = \"projects\"]\npub struct NewProject {\n    pub title: String\n}\n</code></pre>\n\n<p>And the projects table looks like this - </p>\n\n<pre><code>CREATE TABLE projects (\n    id SERIAL PRIMARY KEY,\n    title VARCHAR NOT NULL,\n    program_id INTEGER NOT NULL REFERENCES programs (id),\n    is_archived BOOLEAN NOT NULL DEFAULT FALSE\n);\n</code></pre>\n\n<p>and the schema.rs - </p>\n\n<pre><code>table! {\nprojects (id) {\n    id -&gt; Int4,\n    title -&gt; Varchar,\n    program_id -&gt; Int4,\n    is_archived -&gt; Bool,\n}\n</code></pre>\n\n<p>When compiled I get an error saying - </p>\n\n<blockquote>\n  <p>title    |             ^^^^^ expected struct <code>std::string::String</code>,\n  found struct <code>schema::projects::columns::title</code></p>\n</blockquote>\n\n<p>and </p>\n\n<blockquote>\n  <p>.execute(conn)    |              ^^^^^^^ expected struct\n  <code>diesel::query_source::Never</code>, found struct\n  <code>diesel::query_source::Once</code></p>\n</blockquote>\n\n<p>I do not get a compile error when I do </p>\n\n<pre><code>.values(&amp;project)\n</code></pre>\n\n<p>in the insert function instead.</p>\n"}, {"tags": ["rust", "hyper", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 723, "user_id": 8870055, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f6d6d04397d9ac02cbb810026c86f0d1?s=128&d=identicon&r=PG&f=1", "display_name": "stuart", "link": "https://stackoverflow.com/users/8870055/stuart"}, "edited": false, "score": 1, "creation_date": 1581668394, "post_id": 52974082, "comment_id": 106521051, "body": "I&#39;ve provided a hyper 0.13 version as well"}], "tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 5, "last_activity_date": 1581668384, "last_edit_date": 1581668384, "creation_date": 1540399148, "answer_id": 52974082, "question_id": 52974081, "link": "https://stackoverflow.com/questions/52974081/shared-mutable-state-in-hyper/52974082#52974082", "title": "Shared mutable state in Hyper", "body": "<p>It turns out I was pretty close, and looking at a few other examples helped me realize the problem. Since there are two layers of closures at play here, I need to move the <code>counter</code> into the outer closure, clone it, and then move that clone into the inner closure and clone there again. To wit:</p>\n\n<pre><code>extern crate hyper; // 0.12.10\n\nuse hyper::rt::Future;\nuse hyper::service::service_fn_ok;\nuse hyper::{Body, Response, Server};\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let addr = \"0.0.0.0:3000\".parse().unwrap();\n    let counter = Arc::new(Mutex::new(0));\n    let server = Server::bind(&amp;addr)\n        .serve(move || {\n            let counter = counter.clone();\n            service_fn_ok(move |_req| use_counter(counter.clone()))\n        })\n        .map_err(|e| eprintln!(\"Error: {}\", e));\n    hyper::rt::run(server)\n}\n\nfn use_counter(counter: Arc&lt;Mutex&lt;u64&gt;&gt;) -&gt; Response&lt;Body&gt; {\n    let mut data = counter.lock().unwrap();\n    *data += 1;\n    Response::new(Body::from(format!(\"Counter: {}\\n\", data)))\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Update February 2020</strong> Here's a version using hyper 0.13:</p>\n\n<pre><code>use hyper::{Body, Response, Server, Request};\nuse std::sync::{Arc, Mutex};\nuse hyper::service::{make_service_fn, service_fn};\nuse std::convert::Infallible;\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let addr = \"0.0.0.0:3000\".parse()?;\n    let counter = Arc::new(Mutex::new(0));\n\n    let make_service = make_service_fn(move |_conn| {\n        let counter = counter.clone();\n        async move {\n            Ok::&lt;_, Infallible&gt;(service_fn(move |_req: Request&lt;Body&gt;| {\n                let counter = counter.clone();\n                async move {\n                    Ok::&lt;_, Infallible&gt;(use_counter(counter))\n                }\n            }))\n        }\n    });\n\n    Server::bind(&amp;addr).serve(make_service).await?;\n    Ok(())\n}\n\nfn use_counter(counter: Arc&lt;Mutex&lt;u64&gt;&gt;) -&gt; Response&lt;Body&gt; {\n    let mut data = counter.lock().unwrap();\n    *data += 1;\n    Response::new(Body::from(format!(\"Counter: {}\\n\", data)))\n}\n</code></pre>\n"}], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 1, "accepted_answer_id": 52974082, "answer_count": 1, "score": 2, "last_activity_date": 1581668384, "creation_date": 1540399148, "last_edit_date": 1540402415, "question_id": 52974081, "link": "https://stackoverflow.com/questions/52974081/shared-mutable-state-in-hyper", "title": "Shared mutable state in Hyper", "body": "<p>I'm trying to create a counter in a Hyper web server that counts the number of requests it has received. I'm using a <code>Arc&lt;Mutex&lt;u64&gt;&gt;</code> to hold onto count. However, I haven't been able to figure out the right combination of <code>move</code> and <code>.clone()</code> to satisfy the types of the closures. Here's some code that compiles, but resets the counter on each request:</p>\n\n<pre><code>extern crate hyper;\n\nuse hyper::rt::Future;\nuse hyper::service::service_fn_ok;\nuse hyper::{Body, Response, Server};\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let addr = \"0.0.0.0:3000\".parse().unwrap();\n    // FIXME want to create the counter here, not below\n    let server = Server::bind(&amp;addr)\n        .serve(|| {\n            service_fn_ok(|_req| {\n                let counter = Arc::new(Mutex::new(0));\n                use_counter(counter)\n            })\n        })\n        .map_err(|e| eprintln!(\"Error: {}\", e));\n    hyper::rt::run(server)\n}\n\nfn use_counter(counter: Arc&lt;Mutex&lt;u64&gt;&gt;) -&gt; Response&lt;Body&gt; {\n    let mut data = counter.lock().unwrap();\n    *data += 1;\n    Response::new(Body::from(format!(\"Counter: {}\\n\", data)))\n}\n</code></pre>\n"}, {"tags": ["rust", "lint"], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 1, "answer_count": 0, "score": 10, "last_activity_date": 1540397727, "creation_date": 1540397594, "last_edit_date": 1540397727, "question_id": 52973636, "link": "https://stackoverflow.com/questions/52973636/how-can-a-compiler-lint-pass-gain-access-to-conditional-compilation-attributes-l", "title": "How can a compiler lint pass gain access to conditional-compilation attributes like #[cfg(..)]?", "body": "<p>Rust has a very good lint interface, divided into <code>EarlyLintPass</code> and <code>LateLintPass</code> trait objects. Unfortunately, even the early passes don't see <code>#[cfg]</code> or <code>#[cfg_attr]</code> attributes, and thus cannot lint them. Is there a way to reliably get them while also following lint levels?</p>\n"}, {"tags": ["c", "rust", "llvm-codegen"], "comments": [{"owner": {"reputation": 147720, "user_id": 817643, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/3ec3655af26685ce29823b04cb6c78d5?s=128&d=identicon&r=PG", "display_name": "StoryTeller - Unslander Monica", "link": "https://stackoverflow.com/users/817643/storyteller-unslander-monica"}, "edited": false, "score": 2, "creation_date": 1540360717, "post_id": 52961867, "comment_id": 92830474, "body": "Besides <code>-O3</code> it&#39;s worth adding <code>-Wall -Wextra</code>"}], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "edited": false, "score": 0, "creation_date": 1540373211, "post_id": 52961908, "comment_id": 92837353, "body": "Sorry, forgot that part. Really appreciate your help. I have another question: if the compiler optimized away the loops, where do the programs get the numbers? Both programs are printing the same number, and I tried to reduce NUM_LOOP by one and the result is 9223372036854775811 from both programs. Considering the overflow, it makes sense. If the loops are optimized out, how can we get the numbers? I also tried NUM_LOOP=1000000000, which will not produce an overflow, and results from both programs are 499999999500000000 in almost no time. How can the programs do that?"}, {"owner": {"reputation": 2955, "user_id": 3819007, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6hvpZ.png?s=128&g=1", "display_name": "visibleman", "link": "https://stackoverflow.com/users/3819007/visibleman"}, "reply_to_user": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "edited": false, "score": 2, "creation_date": 1540375910, "post_id": 52961908, "comment_id": 92839040, "body": "Actually, I was planning to update my answer.  The loop can be expressed arithmetically in constant time. And compilers are smart enough to do this.  However I tested earlier, and the results are not clear cut on if this optimisation takes place, it depends on compiler version  and the value of the NUM_LOOP constant."}], "tags": [], "owner": {"reputation": 2955, "user_id": 3819007, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6hvpZ.png?s=128&g=1", "display_name": "visibleman", "link": "https://stackoverflow.com/users/3819007/visibleman"}, "is_accepted": false, "score": 7, "last_activity_date": 1540391844, "last_edit_date": 1540391844, "creation_date": 1540360664, "answer_id": 52961908, "question_id": 52961867, "link": "https://stackoverflow.com/questions/52961867/what-optimization-techniques-are-applied-to-rust-code-that-sums-up-a-simple-arit/52961908#52961908", "title": "What optimization techniques are applied to Rust code that sums up a simple arithmetic sequence?", "body": "<p>Since an <code>int</code> can never be as big as your <code>NUM_LOOP</code>, the program will loop eternally.</p>\n\n<pre><code>const uint64_t NUM_LOOP = 18446744073709551615u;\n\nfor (int i = 0; i &lt; NUM_LOOP; ++i) { // Change this to an uint64_t\n</code></pre>\n\n<p>If you fix the int bug, the compiler will optimize away these loops in both cases.</p>\n"}, {"tags": [], "owner": {"reputation": 855, "user_id": 3659239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3b6ed436c73d42ba39748209936b7e7?s=128&d=identicon&r=PG&f=1", "display_name": "Sandy", "link": "https://stackoverflow.com/users/3659239/sandy"}, "is_accepted": false, "score": 5, "last_activity_date": 1540360678, "creation_date": 1540360678, "answer_id": 52961910, "question_id": 52961867, "link": "https://stackoverflow.com/questions/52961867/what-optimization-techniques-are-applied-to-rust-code-that-sums-up-a-simple-arit/52961910#52961910", "title": "What optimization techniques are applied to Rust code that sums up a simple arithmetic sequence?", "body": "<p>Your code is stuck in an infinite loop.</p>\n\n<p>The comparison <code>i &lt; NUM_LOOP</code> will always return true since <code>int i</code> will wrap around before reaching <code>NUM_LOOP</code></p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 8, "last_activity_date": 1540389611, "last_edit_date": 1540389611, "creation_date": 1540384294, "answer_id": 52969060, "question_id": 52961867, "link": "https://stackoverflow.com/questions/52961867/what-optimization-techniques-are-applied-to-rust-code-that-sums-up-a-simple-arit/52969060#52969060", "title": "What optimization techniques are applied to Rust code that sums up a simple arithmetic sequence?", "body": "<p>Your Rust code (without the prints and timing) compiles down to (<a href=\"https://rust.godbolt.org/z/rHSIgC\" rel=\"noreferrer\">On Godbolt</a>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>movabs rax, -9223372036854775807\nret\n</code></pre>\n\n<p>LLVM just const-folds the whole function and calculates the final value for you.</p>\n\n<p>Let's make the upper limit dynamic (non constant) to avoid this aggressive constant folding:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn foo(num: u64) -&gt; u64 {\n    let mut sum = 0u64;\n    for i in 0..num {\n        sum += i;\n    }\n\n    sum\n}\n</code></pre>\n\n<p>This results in (<a href=\"https://rust.godbolt.org/z/FJ_IPH\" rel=\"noreferrer\">Godbolt</a>):</p>\n\n<pre><code>  test rdi, rdi            ; if num == 0\n  je .LBB0_1               ; jump to .LBB0_1\n  lea rax, [rdi - 1]       ; sum = num - 1\n  lea rcx, [rdi - 2]       ; rcx = num - 2\n  mul rcx                  ; sum = sum * rcx\n  shld rdx, rax, 63        ; rdx = sum / 2\n  lea rax, [rdx + rdi]     ; sum = rdx + num\n  add rax, -1              ; sum -= 1\n  ret\n.LBB0_1:\n  xor eax, eax             ; sum = 0\n  ret\n</code></pre>\n\n<p>As you can see that optimizer understood that you summed all numbers from 0 to <code>num</code> and replaced your loop with a constant formula: <code>((num - 1) * (num - 2)) / 2 + num - 1</code>. As for the example above: the optimizer probably first optimized the code into this constant formula and did constant folding then.</p>\n\n<h3>Additional notes</h3>\n\n<ul>\n<li>The two other answers already point out your bug in the C program. When fixed, <code>clang</code> <a href=\"https://godbolt.org/z/EGodoe\" rel=\"noreferrer\">generates exactly the same assembly</a> (unsurprisingly). However, GCC doesn't seem to know about this optimization and <a href=\"https://godbolt.org/z/1MlqBE\" rel=\"noreferrer\">generates pretty much the assembly you would expect (a loop)</a>.</li>\n<li>In Rust, an easier and more idiomatic way to write your code would be <code>(0..num).sum()</code>. Despite this using more layers of abstractions (namely, iterators), the compiler generates exactly the same code as above.</li>\n<li>To print a <code>Duration</code> in Rust, you can use the <code>{:?}</code> format specifier. <code>println!(\"{:.2?}\", d);</code> prints the duration in the most fitting unit with a precision of 2. That's a fine way to print the time for almost all kinds of benchmarks.</li>\n</ul>\n"}], "owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 379, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1564862559, "creation_date": 1540360395, "last_edit_date": 1564862559, "question_id": 52961867, "link": "https://stackoverflow.com/questions/52961867/what-optimization-techniques-are-applied-to-rust-code-that-sums-up-a-simple-arit", "title": "What optimization techniques are applied to Rust code that sums up a simple arithmetic sequence?", "body": "<p>The code is naive:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time;\n\nfn main() {\n    const NUM_LOOP: u64 = std::u64::MAX;\n    let mut sum = 0u64;\n    let now = time::Instant::now();\n    for i in 0..NUM_LOOP {\n        sum += i;\n    }\n    let d = now.elapsed();\n    println!(\"{}\", sum);\n    println!(\"loop: {}.{:09}s\", d.as_secs(), d.subsec_nanos());\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./test.rs.out\n9223372036854775809\nloop: 0.000000060s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000052s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000045s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000041s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000046s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000047s\n$ ./test.rs.out\n9223372036854775809\nloop: 0.000000045s\n</code></pre>\n\n<p>The program almost ends immediately. I also wrote an equivalent code in C using for loop, but it ran for a long time. I'm wondering what makes the Rust code so fast.</p>\n\n<p>The C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdint.h&gt;\n#include &lt;time.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\ndouble time_elapse(struct timespec start) {\n    struct timespec now;\n    clock_gettime(CLOCK_MONOTONIC, &amp;now);\n    return now.tv_sec - start.tv_sec +\n           (now.tv_nsec - start.tv_nsec) / 1000000000.;\n}\n\nint main() {\n    const uint64_t NUM_LOOP = 18446744073709551615u;\n    uint64_t sum = 0;\n    struct timespec now;\n    clock_gettime(CLOCK_MONOTONIC, &amp;now);\n\n    for (int i = 0; i &lt; NUM_LOOP; ++i) {\n        sum += i;\n    }\n\n    double t = time_elapse(now);\n    printf(\"value of sum is: %llu\\n\", sum);\n    printf(\"time elapse is: %lf sec\\n\", t);\n\n    return 0;\n}\n</code></pre>\n\n<p>The Rust code is compiled using <code>-O</code> and the C code is compiled using <code>-O3</code>. The C code is running so slow that it hasn't stopped yet.</p>\n\n<p>After fixing the bug found by visibleman and Sandeep, both programs were printing the same number in almost no time. I tried to reduce <code>NUM_LOOP</code> by one, results seemed reasonable considering an overflow. Moreover, with <code>NUM_LOOP = 1000000000</code>, both programs will not have overflow and produce correct answers in no time. What optimizations are used here? I know we can use simple equations like <code>(0 + NUM_LOOP - 1) * NUM_LOOP / 2</code> to compute the result, but I don't think such computations are done by the compilers with an overflow case...</p>\n"}, {"tags": ["enums", "rust", "nullable", "sentinel"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1540366955, "post_id": 52961070, "comment_id": 92833608, "body": "When you say &quot;performance penalty&quot;, you&#39;re meaning &quot;memory performance&quot;, right?"}, {"owner": {"reputation": 10246, "user_id": 762363, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cec6320f5a5a8253b3dbfbb8177e001?s=128&d=identicon&r=PG", "display_name": "Tarmil", "link": "https://stackoverflow.com/users/762363/tarmil"}, "edited": false, "score": 0, "creation_date": 1540372297, "post_id": 52961070, "comment_id": 92836741, "body": "You should be able to use <code>Option&lt;NonZeroU32&gt;</code>, I think it was designed specifically for this kind of situation: <a href=\"https://doc.rust-lang.org/core/num/struct.NonZeroU32.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/core/num/struct.NonZeroU32.html</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1540387056, "post_id": 52961070, "comment_id": 92846278, "body": "I don&#39;t believe this is a real duplicate. <code>NonZeroU32</code> does something different; adding a bijection (as Matthieu&#39;s answer suggests) will work, but adds a performance penalty."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540395450, "post_id": 52961070, "comment_id": 92852247, "body": "This question is not a duplicate.  Matthieu&#39;s answer is a good answer here, but wouldn&#39;t work on the other question.  It may be possible to merge the two question into a more general one, but as they currently stand they are different."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1540409920, "post_id": 52961070, "comment_id": 92859996, "body": "&quot;Reversing&quot; the logic and returning an <code>Option&lt;&gt;</code> instead of using an <code>Option&lt;&gt;</code> is an alternative for avoiding memory penality. Since this is marked as duplicated <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=77b1a9b0072e127b0837e1fe042419e7\" rel=\"nofollow noreferrer\">see here</a> for an example."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1540380244, "creation_date": 1540380244, "answer_id": 52967725, "question_id": 52961070, "link": "https://stackoverflow.com/questions/52961070/how-can-i-use-a-negative-integer-sentinel-value-without-incurring-a-memory-penal/52967725#52967725", "title": "How can I use a negative integer sentinel value without incurring a memory penalty?", "body": "<p>As mentioned by @Tarmil in comments, this is the exact usecase for <a href=\"https://doc.rust-lang.org/std/num/struct.NonZeroU32.html\" rel=\"nofollow noreferrer\"><code>NonZeroU32</code></a>.</p>\n\n<p><code>NonZeroU32</code> is known, by the compiler, never to be 0 and therefore <code>Option&lt;NonZeroU32&gt;</code> is 4 bytes, like a regular <code>u32</code>.</p>\n\n<p>When 0 is a valid value for you, it is best to wrap <code>Option&lt;NonZeroU32&gt;</code> within your own type which performs a bijection between your domain values and the <code>[1..2^32-1]</code> domain:</p>\n\n<ul>\n<li>when receiving a negative value, set field to <code>None</code>.</li>\n<li>when receiving a positive value, add 1 (and substract 1 when reading).</li>\n</ul>\n\n<p>Since your values are originally signed, there is no risk of overflow when adding 1, so there is no issue.</p>\n"}], "owner": {"reputation": 17673, "user_id": 139802, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/33c5692f72d9da5663651d034c4588b6?s=128&d=identicon&r=PG", "display_name": "Andrew Wagner", "link": "https://stackoverflow.com/users/139802/andrew-wagner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "closed_date": 1540386879, "answer_count": 1, "score": 2, "last_activity_date": 1540386767, "creation_date": 1540354834, "last_edit_date": 1540386767, "question_id": 52961070, "link": "https://stackoverflow.com/questions/52961070/how-can-i-use-a-negative-integer-sentinel-value-without-incurring-a-memory-penal", "closed_reason": "Duplicate", "title": "How can I use a negative integer sentinel value without incurring a memory penalty?", "body": "<p>I would like to port some C code to Rust that does something similar to nullable pointers but with positive integers. Missing data in some large data structures is represented with negative integer values in a signed integer. 31 bits are available for the main value, and what is essentially an empty enum variant is packed into the sign bit. </p>\n\n<p>Rust has the nullable pointer optimization to do something very similar with pointers. </p>\n\n<p>I could do a 1 to 1 port and keep using raw signed integers for this, but is there a better way that doesn't incur a performance penalty? Some sort of advanced enum repr hint?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8454, "user_id": 958529, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c3ec25db39c63bab1a11037649e326b8?s=128&d=identicon&r=PG", "display_name": "halfelf", "link": "https://stackoverflow.com/users/958529/halfelf"}, "edited": false, "score": 0, "creation_date": 1540357939, "post_id": 52960581, "comment_id": 92829601, "body": "<a href=\"https://github.com/hyperium/hyper\" rel=\"nofollow noreferrer\">github.com/hyperium/hyper</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1540397127, "post_id": 52960581, "comment_id": 92853365, "body": "Hi Laz, welcome to StackOverflow! Since no one of the downvoters commented, let me explain what are probably the reasons for the downvotes. Most importantly, your question sounds like you didn&#39;t even google or did anything else to find an answer yourself. People here on SO don&#39;t like that. Furthermore, some people might think you are asking for a library recommendation, because <i>they</i> know that there is no HTTP stuff in Rust&#39;s standard library. Personally, I disagree with at least the close votes. I still thought the question was worth answering. Anytime, have a nice time on SO!"}, {"owner": {"user_type": "does_not_exist", "display_name": "user10538608"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1540422308, "post_id": 52960581, "comment_id": 92864595, "body": "@LukasKalbertodt Understandable. My apologies."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 15, "last_activity_date": 1594122489, "last_edit_date": 1594122489, "creation_date": 1540362326, "answer_id": 52962233, "question_id": 52960581, "link": "https://stackoverflow.com/questions/52960581/how-can-i-download-a-websites-content-into-a-string/52962233#52962233", "title": "How can I download a website&#39;s content into a string?", "body": "<p>Rust has <strong>no HTTP functionality in the standard library</strong>, so you probably want to use another crate (library) to handle HTTP stuff for you. There are several different crates for this purpose.</p>\n<hr />\n<h3><a href=\"https://crates.io/crates/reqwest\" rel=\"noreferrer\"><code>reqwest</code></a>: &quot;higher level HTTP client library&quot;</h3>\n<pre class=\"lang-rust prettyprint-override\"><code>let body = reqwest::get(&quot;http://url.com&quot;)?.text()?;\n</code></pre>\n<h3><a href=\"https://crates.io/crates/ureq\" rel=\"noreferrer\"><code>ureq</code></a>: &quot;Minimal HTTP request library&quot;</h3>\n<pre class=\"lang-rust prettyprint-override\"><code>let body = ureq::get(&quot;http://url.com&quot;).call().into_string()?\n</code></pre>\n<h3><a href=\"https://crates.io/crates/isahc\" rel=\"noreferrer\"><code>isahc</code></a>: &quot;The practical HTTP client that is fun to use.&quot;</h3>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut response = isahc::get(&quot;https://example.org&quot;)?;\nlet body = response.text()?;\n</code></pre>\n<h3><a href=\"https://crates.io/crates/curl\" rel=\"noreferrer\"><code>curl</code></a>: &quot;Rust bindings to libcurl for making HTTP requests&quot;</h3>\n<pre><code>use curl::easy::Easy;\n\n// First write everything into a `Vec&lt;u8&gt;`\nlet mut data = Vec::new();\nlet mut handle = Easy::new();\nhandle.url(&quot;http://url.com&quot;).unwrap();\n{\n    let mut transfer = handle.transfer();\n    transfer.write_function(|new_data| {\n        data.extend_from_slice(new_data);\n        Ok(new_data.len())\n    }).unwrap();\n    transfer.perform().unwrap();\n}\n\n// Convert it to `String`\nlet body = String::from_utf8(data).expect(&quot;body is not valid UTF8!&quot;);\n</code></pre>\n<h3><a href=\"https://crates.io/crates/hyper\" rel=\"noreferrer\"><code>hyper</code></a>?</h3>\n<p>Hyper is a very popular HTTP library, but it's rather low-level. This makes it usually too hard/verbose to use for small scripts. However, if you want to write a HTTP server, Hyper sure is the way to go (that's why Hyper is used by most Rust Web Frameworks).</p>\n<h3>Many others!</h3>\n<p>I couldn't list all available libraries in this answer. So feel free to search crates.io for more crates that could help you.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10538608"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 711, "favorite_count": 1, "accepted_answer_id": 52962233, "answer_count": 1, "score": -3, "last_activity_date": 1594122489, "creation_date": 1540350859, "last_edit_date": 1540388276, "question_id": 52960581, "link": "https://stackoverflow.com/questions/52960581/how-can-i-download-a-websites-content-into-a-string", "title": "How can I download a website&#39;s content into a string?", "body": "<p>I would simply like to download a website and put its contents into a <code>String</code>.</p>\n\n<p>Similar to how this is done in C#:</p>\n\n<pre><code>WebClient c = new WebClient();\nstring ex = c.DownloadString(\"http://url.com\");\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1540421724, "post_id": 52959333, "comment_id": 92864432, "body": "Would it be acceptable if <code>fork()</code> consumes itself and returns two independent objects instead?"}, {"owner": {"reputation": 2731, "user_id": 1115659, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/e07a4201601ad4298203b843ab64b9e4?s=128&d=identicon&r=PG", "display_name": "aldanor", "link": "https://stackoverflow.com/users/1115659/aldanor"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1540467244, "post_id": 52959333, "comment_id": 92881622, "body": "@orlp Yep, definitely."}, {"owner": {"reputation": 2731, "user_id": 1115659, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/e07a4201601ad4298203b843ab64b9e4?s=128&d=identicon&r=PG", "display_name": "aldanor", "link": "https://stackoverflow.com/users/1115659/aldanor"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1540516508, "post_id": 52959333, "comment_id": 92904741, "body": "@orlp I think managed to solve it... it&#39;s a bit of pain though :) (see the answer)"}], "answers": [{"tags": [], "owner": {"reputation": 2731, "user_id": 1115659, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/e07a4201601ad4298203b843ab64b9e4?s=128&d=identicon&r=PG", "display_name": "aldanor", "link": "https://stackoverflow.com/users/1115659/aldanor"}, "is_accepted": true, "score": 0, "last_activity_date": 1540566318, "last_edit_date": 1540566318, "creation_date": 1540516475, "answer_id": 53000103, "question_id": 52959333, "link": "https://stackoverflow.com/questions/52959333/implementing-computational-graph-in-rust/53000103#53000103", "title": "Implementing computational graph in Rust", "body": "<p>It's possible. Basically, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=e277f8dbbf65cd9bd393f6e3fe141c26\" rel=\"nofollow noreferrer\">this works</a>:</p>\n\n<pre><code>let input = Input::&lt;i64&gt;::new();\n\nlet s1 = input.fork();\ns1.subscribe(|x| {\n    println!(\"s1: {}\", x)\n});\n\nlet s2 = input.fork();\ns2.map(|x| x * 3).subscribe(|x| {\n    println!(\"s2: {}\", x)\n});\n\nlet s3 = input.fork().map(|x| {\n    let s3 = (x as f64) + 100.5;\n    println!(\"s3: {}\", s3);\n    s3\n}).share();\n\ns3.fork().map(|x| x + 1.).subscribe(|x| println!(\"s4: {}\", x));\n\ns3.fork().map(|x| x + 2.).subscribe(|x| println!(\"s5: {}\", x));\n\ninput.feed(1);\nprintln!(\"---\");\ninput.feed(2);\n</code></pre>\n\n<p>and outputs</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>s1: 1\ns2: 3\ns3: 101.5\ns4: 102.5\ns5: 103.5\n---\ns1: 2\ns2: 6\ns3: 102.5\ns4: 103.5\ns5: 104.5\n</code></pre>\n\n<p>Implementation-wise: <code>Rc&lt;RefCell&lt;Vec&lt;Box&lt;Trait&gt;&gt;&gt;&gt;</code> and lots of lifetime markers...</p>\n"}], "owner": {"reputation": 2731, "user_id": 1115659, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/e07a4201601ad4298203b843ab64b9e4?s=128&d=identicon&r=PG", "display_name": "aldanor", "link": "https://stackoverflow.com/users/1115659/aldanor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 53000103, "answer_count": 1, "score": 0, "last_activity_date": 1540566318, "creation_date": 1540339265, "question_id": 52959333, "link": "https://stackoverflow.com/questions/52959333/implementing-computational-graph-in-rust", "title": "Implementing computational graph in Rust", "body": "<p>I'm trying to implement a ReactiveX-like (e.g. somewhat similar to RxJava/RxJS and friends) graph engine in Rust, but geared towards synchronous computation only, with focus on intermediate value caching. It's kind of like standard library iterators but backwards.</p>\n\n<p>I got to implement a toy prototype of Observable/Observer pattern: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=def4305e7de7e3f2825084604aadf287\" rel=\"nofollow noreferrer\">Playground</a> -- and although it's not quite what I want in the end it demonstrates the general spirit of things.</p>\n\n<p>Basically, I'd want code that looks like this (pseudocode):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut input = Input();\nlet mut x = input.map(|i| i * 2);\n// unavoidable multiple mut borrow?..\nlet mut y = x.fork().map(|x| x + 3) // [must_use]\ny.subscribe(|y| println!(\"y={}\", y)); // moved\nlet mut z = x.fork().map(|x| x - 4).do_more_stuff(); // [must_use]\nz.subscribe(|z| println!(\"z={}\", z)); // moved\n// some time later:\ninput.feed(42);\n</code></pre>\n\n<p>to be unrolled into roughly this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|i| {\n    let x = i * 2;\n    let y = x + 3;\n    println!(\"y={}\", y);\n    let z = do_more_stuff(x - 4);\n    println!(\"z={}\", z);\n}\n</code></pre>\n\n<p>The syntax is important here, I know how to do it \"backwards\" or modify it significantly so it kind of works, but I'd like to keep the \"top-down\" syntax if possible for readability sake, the 'forks' in particular.</p>\n\n<p>So you can think of it as a directed graph, with a single input at the top, and each node doing some computation and passing the result (possibly multiple times; or maybe not passing it) to the bottom levels, potentially \"forking\" so that the value can be passed to multiple lower-level nodes without recomputing. At the very bottom, there are \"subscribers/observers\" who can listen to values and do anything with them. Once created, this graph (i.e., the graph structure) is completely immutable.</p>\n\n<p>In implementations of many Rx frameworks, it's possible to do this without explicitly carrying the value around as a struct field, due to the fact that it will live in the parent closure.</p>\n\n<p>I've spent considerable amount of time thinking and prototyping in Rust, but can't seem to quite figure a nice solution out that would be fast and 'nice', i.e. ergonomic, as in the samples above. For instance, with the <code>fork()</code> (which splits the stream), the desired syntax kind of immediately implies multiple mutable borrows to the parent, even if the child later gets moved?</p>\n\n<p>The core ideas (that are implemented in the playground linked above) that I think would work are: the Observer concept - basically, a trait requiring implementor to implement an <code>on_next(&amp;mut self, value: T)</code>, so that any <code>FnMut(T) -&gt; ()</code> can automatically implement this. Then, a \"fork\" is something that contains a list of <code>Box&lt;Observer&gt;</code> so that it can call them. Perhaps a \"stream/observable\" that can accept an observer that would subscribe to it (in a mutable fashion?).</p>\n\n<p>Anyways, maybe I'm hitting my head against a well-known wall here or maybe there are better solutions to this (or perhaps this has already been implemented somewhere) -- any thoughts would be much appreciated.</p>\n"}, {"tags": ["typescript", "rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "anon"}, "edited": false, "score": 0, "creation_date": 1540331536, "post_id": 52958302, "comment_id": 92823979, "body": "I was afraid it was that easy. Thank you so much. I guess a follow-up question, since you know what you&#39;re doing. What if I wanted to destructure more than one property? I wouldn&#39;t just return a <code>String</code>, would I?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 86, "user_id": 3961582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7Da5g.png?s=128&g=1", "display_name": "Brittany", "link": "https://stackoverflow.com/users/3961582/brittany"}, "edited": false, "score": 0, "creation_date": 1540331777, "post_id": 52958302, "comment_id": 92824063, "body": "@BrittanyMazza You can take as many attributes from the <code>Person</code> record as you want, and map them to anything you like."}, {"owner": {"user_type": "does_not_exist", "display_name": "anon"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1540331911, "post_id": 52958302, "comment_id": 92824110, "body": "@Bergi That&#39;s what I&#39;m not understanding, and would be great to be able to visualize this. What would be the return type of the new <code>get_[props]</code> function? And what is the shape of the returned value? Let&#39;s suppose I wanted both <code>name</code> and <code>address</code> and had many more fields. Would I Just return <code>{ name, address }</code>?"}, {"owner": {"user_type": "does_not_exist", "display_name": "anon"}, "edited": false, "score": 0, "creation_date": 1540332367, "post_id": 52958302, "comment_id": 92824231, "body": "@Shepmaster I really appreciate your help and your clear answer. I was afraid that Rust didn&#39;t have one-off structs, but I may actually be able to return a different struct with only the fields I needed. Obvious, this is probably not the Rust way of doing things."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 86, "user_id": 3961582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7Da5g.png?s=128&g=1", "display_name": "Brittany", "link": "https://stackoverflow.com/users/3961582/brittany"}, "edited": false, "score": 1, "creation_date": 1540337277, "post_id": 52958302, "comment_id": 92825393, "body": "@BrittanyMazza note that you don&#39;t have to actually extract the values in many cases, you can just get a reference to them. You may also wish to proactively create structures and nest them inside of each other. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=17b42c4d635141a2f76206f82574c889\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 86, "user_id": 3961582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7Da5g.png?s=128&g=1", "display_name": "Brittany", "link": "https://stackoverflow.com/users/3961582/brittany"}, "edited": false, "score": 0, "creation_date": 1540368603, "post_id": 52958302, "comment_id": 92834550, "body": "@BrittanyMazza If you want multiple fields, why not just use the original structure?  As &quot;one-off structs&quot; you can use <a href=\"https://doc.rust-lang.org/book/2018-edition/ch03-02-data-types.html#the-tuple-type\" rel=\"nofollow noreferrer\">tuples</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1540332056, "last_edit_date": 1540332056, "creation_date": 1540331314, "answer_id": 52958302, "question_id": 52958210, "link": "https://stackoverflow.com/questions/52958210/what-is-the-rust-equivalent-of-typescripts-array-map-with-destructuring/52958302#52958302", "title": "What is the Rust equivalent of TypeScript&#39;s Array.map with destructuring?", "body": "<p>Rust also has destructuring via <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-00-patterns.html\" rel=\"noreferrer\">pattern matching</a>:</p>\n\n<pre><code>struct Person {\n    name: String,\n    address: String,\n}\n\nfn get_name(Person { name, .. }: Person) -&gt; String {\n    name\n}\n\nfn main() {\n    let people = vec![Person {\n        name: String::from(\"Sally\"),\n        address: String::from(\"1234 E Test St.\"),\n    }];\n\n    let names: Vec&lt;_&gt; = people.into_iter().map(get_name).collect();\n    println!(\"{:?}\", names);\n}\n</code></pre>\n\n<p>You won't usually see people do this type of destructuring in function signatures, however. It exposes more of the implementation in the automatically generated documentation. It's more common to see it immediately inside of a function:</p>\n\n<pre><code>fn get_name(person: Person) -&gt; String {\n    let Person { name, .. } = person;\n    name\n}\n</code></pre>\n\n<p>And people don't frequently use destructuring in <code>let</code> variables unless they are pulling out many values. In this case, it's shorter to just use the field directly:</p>\n\n<pre><code>fn get_name(person: Person) -&gt; String {\n    person.name\n}\n</code></pre>\n\n<p>This particular function isn't <em>super</em> useful, so I'd also usually see it as a closure:</p>\n\n<pre><code>.map(|p| p.name)\n</code></pre>\n\n<p>There's many things in your original TypeScript that don't translate directly to Rust:</p>\n\n<ol>\n<li>The concept of the <code>Partial</code> type.</li>\n<li>Rust vectors themselves do not implement <code>map</code> and friends \u2014 those operations belong to <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\">iterators</a>. These are <em>lazy</em>, which allows the Rust to be much more efficient than the corresponding JS.</li>\n<li>There are multiple string types.</li>\n</ol>\n\n<blockquote>\n  <p>What if I wanted to destructure more than one property?</p>\n</blockquote>\n\n<p>If you wanted an anonymous collection of fields, you'd usually use a <em>tuple</em>:</p>\n\n<pre><code>fn get_name_things(Person { name, .. }: Person) -&gt; (String, usize) {\n    (name, 42)\n}\n</code></pre>\n\n<p>There's no concept of one-off structs with named fields.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "anon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 577, "favorite_count": 0, "accepted_answer_id": 52958302, "answer_count": 1, "score": 1, "last_activity_date": 1540334978, "creation_date": 1540330802, "last_edit_date": 1540334978, "question_id": 52958210, "link": "https://stackoverflow.com/questions/52958210/what-is-the-rust-equivalent-of-typescripts-array-map-with-destructuring", "title": "What is the Rust equivalent of TypeScript&#39;s Array.map with destructuring?", "body": "<p>In TypeScript, you can map and destructure a partial set of data from an interface, using the following</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>interface Person {\n  name: string;\n  address: string;\n}\n\nfunction getName({ name }: Person): Partial&lt;Person&gt; {\n  return ({ name });\n}\n\nconst people: Person[] = [\n  {\n    name: \"Sally\",\n    address: \"1234 E Test St.\"\n  },\n  // ...\n];\n\nconst names = people.map(getName);\n// =&gt; [{ \"name\": \"Sally\" }, ...]\n</code></pre>\n\n<p>I've been reading the Rust docs and maybe I'm just not understanding, but I haven't found a 1:1 equivalent on how to do this TypeScript operation in Rust. Is it possible to perform this type of destructure in Rust? Perhaps using <code>map</code> or <code>filter_map</code>?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540323792, "post_id": 52956623, "comment_id": 92820967, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52956623/edit\">edit</a> your question to include it. Based on the <i>code you have provided</i>, the existing answers solve your problem. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540323996, "post_id": 52956623, "comment_id": 92821063, "body": "@Shepmaster Sorry, I forgot include the bit that moving <code>self</code> into the closure, as suggested by the compiler, is not an option. I would need it to use it later after calling <code>iter()</code>. Please let me know if something else is incomplete."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540324085, "post_id": 52956623, "comment_id": 92821096, "body": "As I already mentioned, please <b>provide code</b> that demonstrates the case where adding <code>move</code> to the closure will not work. We cannot magically create code that mimics your code that we have never seen."}, {"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540331285, "post_id": 52956623, "comment_id": 92823884, "body": "@Shepmaster I made some edits to the question. The <code>move</code> keyword is actually working in my case but I am not able to make sense why."}, {"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540331778, "post_id": 52956623, "comment_id": 92824064, "body": "Is it because I am just moving a reference, which gets copied instead of being moved?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540334705, "post_id": 52956623, "comment_id": 92824818, "body": "Please rework your question it&#39;s unclear what you asking. Remove unnecessary code, and ask clearly what is the problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540336845, "post_id": 52956623, "comment_id": 92825315, "body": "You have drastically changed your question, making existing answers irrelevant. It&#39;s no longer &quot;how do I do X&quot;, but instead now &quot;why does this code (which wasn&#39;t what was posted originally) compile&quot;. It&#39;s not fair to the people who took the time to answer your <i>original</i> question to change it so drastically. Please remove your new questions and ask a new question for what your new question is \u2014 <a href=\"https://meta.stackoverflow.com/q/266767/155423\">What is the the best way to ask follow up questions?</a> / <a href=\"https://meta.stackexchange.com/q/43478/281829\">Exit strategies for \u201cchameleon questions\u201d</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "edited": false, "score": 0, "creation_date": 1540323824, "post_id": 52956674, "comment_id": 92820982, "body": "Sorry, I almost assumed it was obvious... but I need <code>self</code> later. I have edited the question now."}, {"owner": {"reputation": 2446, "user_id": 1614219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/356de1228e4dc6a7665aee3c7f456390?s=128&d=identicon&r=PG", "display_name": "dureuill", "link": "https://stackoverflow.com/users/1614219/dureuill"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540324109, "post_id": 52956674, "comment_id": 92821111, "body": "@Shepmaster: OK, what would be the standard phrasing here? What I mean is that it gives additional contraints on the lifetime <code>&#39;a</code> of <code>&amp;&#39;a self</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1540324515, "post_id": 52956674, "comment_id": 92821287, "body": "It also doesn&#39;t give any extra constraints on <code>&#39;a</code>. As you state, it transfers ownership of <code>self</code> (of type <code>&amp;&#39;a Self</code>) to the closure, as opposed to having the closure take a reference to <code>self</code> (of type <code>&amp;&amp;&#39;a Self</code>). The latter does not live long enough as it goes out of scope at the end of the function."}, {"owner": {"reputation": 2446, "user_id": 1614219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/356de1228e4dc6a7665aee3c7f456390?s=128&d=identicon&r=PG", "display_name": "dureuill", "link": "https://stackoverflow.com/users/1614219/dureuill"}, "edited": false, "score": 0, "creation_date": 1540325091, "post_id": 52956674, "comment_id": 92821572, "body": "OK, this clarifies things. For some reason I was thinking that closures were doing copies of captured variables for <code>Copy</code> types, so the reason why the example in the question was requiring <code>move</code> was actually becoming unclear to me. Apparently I&#39;m not the only one: <a href=\"https://github.com/rust-lang/rust/issues/36569\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/36569</a>"}], "tags": [], "owner": {"reputation": 2446, "user_id": 1614219, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/356de1228e4dc6a7665aee3c7f456390?s=128&d=identicon&r=PG", "display_name": "dureuill", "link": "https://stackoverflow.com/users/1614219/dureuill"}, "is_accepted": false, "score": 1, "last_activity_date": 1540324619, "last_edit_date": 1540324619, "creation_date": 1540323607, "answer_id": 52956674, "question_id": 52956623, "link": "https://stackoverflow.com/questions/52956623/what-should-i-do-to-make-lifetimes-in-an-iterator-work-when-the-compiler-suggest/52956674#52956674", "title": "What should I do to make lifetimes in an iterator work when the compiler suggests using the move keyword?", "body": "<p>It looks like the compiler is already telling you what to do:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>help: to force the closure to take ownership of `self` (and any other referenced variables), use the `move` keyword\n  |\n7 |         (0..10).map(move |i| self.x[i])\n  |                     ^^^^^^^^\n</code></pre>\n\n<p>The <code>move</code>\u00a0keyword gives ownership of any captured variable to the closure.</p>\n\n<p>Here, you are capturing the <code>self</code> reference by move, not the object itself. You cannot consume the object by calling the <code>iter</code> method, because it doesn't accept your object by move, but by reference. You can <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=149438909dc5e1ce8883784b61d8b31d\" rel=\"nofollow noreferrer\">still use your object after calling <code>iter()</code></a> on an instance.</p>\n"}], "owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1540331162, "creation_date": 1540323338, "last_edit_date": 1540331162, "question_id": 52956623, "link": "https://stackoverflow.com/questions/52956623/what-should-i-do-to-make-lifetimes-in-an-iterator-work-when-the-compiler-suggest", "title": "What should I do to make lifetimes in an iterator work when the compiler suggests using the move keyword?", "body": "<p>I have a snippet of code which fails to compile:</p>\n\n<pre><code>struct A {\n    x: [u32; 10],\n}\n\nimpl A {\n    fn iter&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = u32&gt; + 'a {\n        (0..10).map(|i| self.x[i])\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=64ad1231d94c6b261c8b680217a21beb\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `self`, which is owned by the current function\n --&gt; src/main.rs:7:21\n  |\n7 |         (0..10).map(|i| self.x[i])\n  |                     ^^^ ---- `self` is borrowed here\n  |                     |\n  |                     may outlive borrowed value `self`\nhelp: to force the closure to take ownership of `self` (and any other referenced variables), use the `move` keyword\n  |\n7 |         (0..10).map(move |i| self.x[i])\n  |                     ^^^^^^^^\n</code></pre>\n\n<p>What should I do to make this work? I need <code>self</code> later so I cannot move it as the compiler suggests.</p>\n\n<p><strong>Edit</strong>: I believed that <code>move</code> will create issues in using <code>self</code> later. For example, see the code:</p>\n\n<pre><code>struct A {\n    x: [u32; 3],\n}\n\nimpl A {\n    fn iter&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item=u32&gt; + 'a {\n        (0..3).filter(move |&amp;i| self.x[i] != 0).map(move |i| self.x[i])\n    }\n}\n\nfn main() {\n    let a = A { x : [0, 1, 2]};\n    for el in a.iter() {\n        println!(\"{}\", el);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=03769b0782088fed7e7df10dcc5458a7\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>Here <code>&amp;'a self</code> is being moved twice, so in effect, both the closures got ownership of <code>&amp;'a self</code>. The code actually compiles but I did not expect it as once moved, a variable should not be usable anymore. The book (<a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html#capturing-the-environment-with-closures\" rel=\"nofollow noreferrer\">relevant section</a>) also gives an example corroborating my understanding:</p>\n\n<pre><code>fn main() {\n    let x = vec![1, 2, 3];\n    let equal_to_x = move |z| z == x;\n    println!(\"can't use x here: {:?}\", x);\n    let y = vec![1, 2, 3];\n    assert!(equal_to_x(y));\n}\n</code></pre>\n\n<p>This code does not compile. Why is it that my iterator code works with <code>move</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 3, "creation_date": 1540316040, "post_id": 52954762, "comment_id": 92817285, "body": "The whole docs on <code>Option</code> is quite a read, but you might be particularly interested in <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"nofollow noreferrer\">unwrap_or method</a>."}, {"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1540316627, "post_id": 52954762, "comment_id": 92817584, "body": "This is defiantly interesting but I still have the same issue. which is the result of the function is still fixed to the scope of the function. hence I cannot return the borrow."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1540317038, "post_id": 52954762, "comment_id": 92817769, "body": "please include an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1540317500, "post_id": 52954762, "comment_id": 92818016, "body": "Applying the duplicate to your specific case: <code>fn get_val(&amp;self) -&gt; &amp;Val { self.my_val.as_ref().unwrap_or(&amp;self.default) }</code>."}, {"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1540317739, "post_id": 52954762, "comment_id": 92818121, "body": "Thanks everybody that helped!"}], "owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1540317413, "answer_count": 0, "score": 1, "last_activity_date": 1540317556, "creation_date": 1540315841, "last_edit_date": 1540317556, "question_id": 52954762, "link": "https://stackoverflow.com/questions/52954762/how-do-i-unwrap-an-option-when-its-available-or-return-a-default-reference-valu", "closed_reason": "Duplicate", "title": "How do I unwrap an Option when it&#39;s available or return a default reference value otherwise?", "body": "<p>I want to create a helper function that returns the value of an <code>Option</code> if available else it returns the default case. </p>\n\n<pre><code>fn get_val(&amp;self) -&gt; &amp;Val {\n    return if self.my_val.is_none() {\n        &amp;self.default\n    } else {\n        &amp;self.my_val.unwrap()\n    };\n}\n</code></pre>\n\n<p>I can't do this because the <code>unwrap</code> function's result is short lived. </p>\n"}, {"tags": ["rust", "capnproto"], "owner": {"reputation": 444, "user_id": 922138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb1819677eeb462cf324f7442e5a489a?s=128&d=identicon&r=PG", "display_name": "Grzegorz Nosek", "link": "https://stackoverflow.com/users/922138/grzegorz-nosek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 152, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1540298776, "creation_date": 1540292510, "last_edit_date": 1540298776, "question_id": 52947421, "link": "https://stackoverflow.com/questions/52947421/how-does-cap-n-proto-handle-sending-data-on-the-order-of-gigabytes", "title": "How does Cap\u2019n Proto handle sending data on the order of gigabytes?", "body": "<p>I'm trying to build a client/server app based on the Cap\u2019n Proto RPC in Rust. Looking at the <a href=\"https://github.com/capnproto/capnproto-rust/blob/1e39bc0abc2d703ee5017598bc965d1d4603690c/capnp-rpc/examples/calculator/client.rs\" rel=\"nofollow noreferrer\">calculator example code</a>, the RPC wants to shove everything into a single round-trip call. That's awesome, but how will that behave when the data to send is on the order of gigabytes? Will the library try to keep it all in memory or will it realize at some point that's too much?</p>\n\n<p>Note: I don't have any code to show yet, but my ideal client pseudocode would be:</p>\n\n<pre><code>job = new_job(...)                        // rpc call\nfor f in (millions...) {\n    file = job.new_file(f)                // rpc call\n    for data in f.chunks(thousands...) {\n        file.process_chunk(data)          // rpc call\n    }\n}\n</code></pre>\n\n<p>How would I structure my client code? Do I have to force a flush at some point (and from the look of it, read some dummy data from the server)?</p>\n\n<p>So far the server seems straightforward, just handling files and chunks as they come, but if there are any gotchas in there, I'm all ears as well.</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1540280986, "post_id": 52941650, "comment_id": 92795681, "body": "Note that if you want to return an owned client and not a reference, instead of your match, you could write <code>.ok().and_then(|clients| clients.into_iter().next())</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1540281042, "post_id": 52941650, "comment_id": 92795710, "body": "What did you put in your <code>table</code> macro? I guess that the issue is there."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540299127, "post_id": 52941650, "comment_id": 92806974, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52941650/edit\">edit</a> your question to include it. We cannot tell what the schema is, for example. Try to reproduce your error in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> and <a href=\"https://stackoverflow.com/tags/rust-diesel/info\">Diesel-specific tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "edited": false, "score": 0, "creation_date": 1541282367, "post_id": 52944560, "comment_id": 93164903, "body": "I got this error because I was re-using the same struct for inserting and selecting. This is a pattern where the <code>DEFAULT</code> fields (i.e. <code>id SERIAL</code>) are defined as <code>Option&lt;i64&gt;</code>, but the schema is generated based on the migrations and the field in the database is not optional. I have to modify the schema manually after each migration (which is fine I think)."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1540283948, "last_edit_date": 1540283948, "creation_date": 1540283538, "answer_id": 52944560, "question_id": 52941650, "link": "https://stackoverflow.com/questions/52941650/why-do-i-get-a-trait-not-implemented-for-an-optional-field-in-diesel-struct/52944560#52944560", "title": "Why do I get a trait not implemented for an optional field in Diesel struct", "body": "<p>Your error message says that you cannot query a <code>BigInt</code> (a 64 bits int) into an <code>Option&lt;i64&gt;</code>. That is because you forgot to say that <code>id</code> is nullable in your <a href=\"https://docs.diesel.rs/diesel/macro.table.html\" rel=\"noreferrer\">table declaration</a>. It must look like:</p>\n\n<pre><code>table! {\n    clients {\n        id -&gt; Nullable&lt;BigInt&gt;,\n        name -&gt; Text,\n        rank -&gt; Nullable&lt;BigInt&gt;,\n    }\n}\n</code></pre>\n\n<p>You can see the implementation of <code>Queryable</code> you are looking for <a href=\"http://docs.diesel.rs/diesel/deserialize/trait.Queryable.html#impl-Queryable%3CNullable%3CST%3E%2C%20DB%3E\" rel=\"noreferrer\">in the documentation</a>.</p>\n"}], "owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1159, "favorite_count": 0, "accepted_answer_id": 52944560, "answer_count": 1, "score": 2, "last_activity_date": 1540298970, "creation_date": 1540272023, "last_edit_date": 1540298970, "question_id": 52941650, "link": "https://stackoverflow.com/questions/52941650/why-do-i-get-a-trait-not-implemented-for-an-optional-field-in-diesel-struct", "title": "Why do I get a trait not implemented for an optional field in Diesel struct", "body": "<p>I have this struct:</p>\n\n<pre><code>#[table_name = \"clients\"]\n#[derive(Serialize, Deserialize, Queryable, Insertable, Identifiable, Associations)]\npub struct Client {\n    pub id: Option&lt;i64&gt;,\n    pub name: String,\n    pub rank: Option&lt;i64&gt;,\n}\n</code></pre>\n\n<p>and the following implementation:</p>\n\n<pre><code>impl Client {\n    pub fn get(name: String, connection: &amp;PgConnection) -&gt; Option&lt;Self&gt; {\n        match clients::table\n            .filter(clients::name.eq(&amp;name))\n            .limit(1)\n            .load::&lt;Client&gt;(connection)\n        {\n            Ok(clients) =&gt; Some(clients[0]),\n            Err(_) =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>which gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.load::&lt;Client&gt;(connection) {                                                                                   \n ^^^^ the trait `diesel::Queryable&lt;diesel::sql_types::BigInt, _&gt;` is not implemented for `std::option::Option&lt;i64&gt;`\n</code></pre>\n"}, {"tags": ["performance", "go", "rust", "llvm-codegen"], "comments": [{"owner": {"reputation": 32095, "user_id": 7426, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a562698800b535e47b68590f63c402a?s=128&d=identicon&r=PG", "display_name": "Adrian", "link": "https://stackoverflow.com/users/7426/adrian"}, "edited": false, "score": 6, "creation_date": 1540226122, "post_id": 52933875, "comment_id": 92777048, "body": "This kind of microbenchmark is unlikely to yield useful data."}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 3, "creation_date": 1540226217, "post_id": 52933875, "comment_id": 92777093, "body": "I have just compiled and ran both your benchmarks. I used <code>go build -o b1 bench.go</code> for the Go code and <code>rustc -O -o b2 bench.rs</code> for the Rust code. The go benchmark takes ~180ms the Rust benchmark takes ~3ms"}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 1, "creation_date": 1540226247, "post_id": 52933875, "comment_id": 92777110, "body": "At the same time, if I omit the -O flag for the rust compiler, the rust benchmark takes about 5 seconds to complete."}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 2, "creation_date": 1540226675, "post_id": 52933875, "comment_id": 92777331, "body": "Also, it seems like there is a huge difference between nightly and stable Rust compiler. Stable results in around 150ms results, still better than Go, but not by much. Nightly results in 2-4ms results, two orders of magnitude better than Go and stable Rust."}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 1, "creation_date": 1540226881, "post_id": 52933875, "comment_id": 92777437, "body": "It is entirely possible, that nightly Rust compiler figured out that the loop is deterministic just skipped the whole thing in favor of the end result :) But I am too lazy to dig around assembly to figure it out."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 4, "creation_date": 1540226881, "post_id": 52933875, "comment_id": 92777439, "body": "@MadWombat probably the optimizer learned some new tricks. Since <code>work</code> is never actually read from, none of the writes to it matter."}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 0, "creation_date": 1540226930, "post_id": 52933875, "comment_id": 92777462, "body": "I wonder if printing work at the end would change things"}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 0, "creation_date": 1540227075, "post_id": 52933875, "comment_id": 92777540, "body": "Well, predictably, after I added a print statement for work var to both benchmarks, the results became more comparable. Rust still wins. Rust takes about 150ms and Go is 180-190ms."}, {"owner": {"reputation": 11, "user_id": 10541337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d810ea7b8fecfdb2ab3a9871a95315e?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle", "link": "https://stackoverflow.com/users/10541337/kyle"}, "reply_to_user": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 0, "creation_date": 1540228107, "post_id": 52933875, "comment_id": 92778036, "body": "@MadWombat Interestingly, when I compiled with <code>rustc -O -o</code> I saw negligible difference between the two languages at ~170ms. It appears <code>--release</code> != fully optimised"}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 0, "creation_date": 1540228487, "post_id": 52933875, "comment_id": 92778232, "body": "So basically, all these experiments seem to tell us that the benchmarks are not very conclusive."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1540234448, "post_id": 52933875, "comment_id": 92781005, "body": "<code>i := 0; i &lt; 100000000; i++</code> and <code>1..100000000</code> are not the same range."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 10541337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d810ea7b8fecfdb2ab3a9871a95315e?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle", "link": "https://stackoverflow.com/users/10541337/kyle"}, "edited": false, "score": 0, "creation_date": 1540229129, "post_id": 52934180, "comment_id": 92778526, "body": "Appreciate the very clear and helpful answer. The original problem was implementing a bubble sort in both languages (purely for the educational value). The memory swap is where Go pulled ahead, so thats all I included in this question, perhaps at the detriment of context/clarity. With 100,000 elements, the difference in execution time was into the seconds."}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 11, "user_id": 10541337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d810ea7b8fecfdb2ab3a9871a95315e?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle", "link": "https://stackoverflow.com/users/10541337/kyle"}, "edited": false, "score": 3, "creation_date": 1540229368, "post_id": 52934180, "comment_id": 92778645, "body": "@Kyle if you have a more complete example of a bubble sort that&#39;s slower than expected, you should open another question"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540235722, "post_id": 52934180, "comment_id": 92781586, "body": "The most puzzling thing about the generated code is <code>add eax, -11</code>.  It&#39;s completely beyond me where <i>that</i> is coming from.  If it was some even number, I would assume that the optimizer had unrolled that number of iterations and figured out that an even number of swaps is a no-op. But with 11, I don&#39;t really have an idea."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540236727, "post_id": 52934180, "comment_id": 92782084, "body": "@SvenMarnach That confused me too! I guess you are pretty close already with partial loop unrolling and LLVM optimizing 11 iterations into one swap. But why start at 11 and not notice that like... 8 iterations compile down to nothing? Maybe we should ask a question on this StackOverflow everyone is talking about? ^_^"}, {"owner": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "edited": false, "score": 0, "creation_date": 1540388745, "post_id": 52934180, "comment_id": 92847478, "body": "Another possibility in this example, when you know that your Vec doesn&#39;t need to grow, is to use a fixed-size array. On 1m iterations, using criterion on my ancient machine: original at 5.0338ms, with macro 4.5929ms, using an array 3.0950ns"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 9, "last_activity_date": 1540227099, "creation_date": 1540227099, "answer_id": 52934180, "question_id": 52933875, "link": "https://stackoverflow.com/questions/52933875/why-is-swapping-elements-of-a-float64-in-go-faster-than-swapping-elements-of-a/52934180#52934180", "title": "Why is swapping elements of a []float64 in Go faster than swapping elements of a Vec&lt;f64&gt; in Rust?", "body": "<blockquote>\n  <p>Could the Rust program be written in an idiomatic way, to execute faster?</p>\n</blockquote>\n\n<p>Yes. To create a vector with a few elements, use the <code>vec![]</code> macro:</p>\n\n<pre><code>let mut work: Vec&lt;f64&gt; = vec![0.0, 1.0];    \n\nfor _x in 1..100000000 {\n    work.swap(0, 1); \n}\n</code></pre>\n\n<p>So is this code faster? Yes. Have a look at <a href=\"https://rust.godbolt.org/z/O3Uv-Z\" rel=\"noreferrer\">what assembly is generated</a>:</p>\n\n<pre><code>example::main:\n  mov eax, 99999999\n.LBB0_1:\n  add eax, -11\n  jne .LBB0_1\n  ret\n</code></pre>\n\n<p>On my PC, this runs about 30 times faster than your original code. </p>\n\n<p>Why does the assembly still contain this loop that is doing nothing? Why isn't the compiler able to see that two <code>push</code>es are the same as <code>vec![0.0, 1.0]</code>? Both very good questions and both probably point to a flaw in LLVM or the Rust compiler. </p>\n\n<p>However, sadly, there isn't much useful information to gain from your micro benchmark. Benchmarking is hard, like really hard. There are so many pitfalls that even professionals fall for. In your case, the benchmark is flawed in several ways. For a start, you never observe the contents of the vector later (it is never used). That's why a good compiler can remove all code that even touches the vector (as the Rust compiler did above). So that's not good. </p>\n\n<p>Apart from that, this does not resemble any real performance critical code. Even if the vector would be observed later, swapping an odd number of times equals a single swap. So unless you wanted to see if the optimizer could understand this swapping rule, sadly your benchmark isn't really useful.  </p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1540234277, "post_id": 52935309, "comment_id": 92780912, "body": "<i>the time you measured was dominated by the startup and initialization of the processes</i> \u2014 the code OP presented contains the time invocations. Are you stating that both Go and Rust code are running some other code besides the loop between <code>time.Now</code> / <code>time.Since</code> or <code>Instant::now</code> / <code>now.elapsed</code>?"}, {"owner": {"reputation": 42799, "user_id": 720999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/04ee78e90161fa1c4dce14d615315160?s=128&d=identicon&r=PG", "display_name": "kostix", "link": "https://stackoverflow.com/users/720999/kostix"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540287113, "post_id": 52935309, "comment_id": 92799378, "body": "@Shepmaster, yes, you&#39;re right. I stand corrected, thanks."}], "tags": [], "owner": {"reputation": 42799, "user_id": 720999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/04ee78e90161fa1c4dce14d615315160?s=128&d=identicon&r=PG", "display_name": "kostix", "link": "https://stackoverflow.com/users/720999/kostix"}, "is_accepted": false, "score": 2, "last_activity_date": 1540231749, "creation_date": 1540231749, "answer_id": 52935309, "question_id": 52933875, "link": "https://stackoverflow.com/questions/52933875/why-is-swapping-elements-of-a-float64-in-go-faster-than-swapping-elements-of-a/52935309#52935309", "title": "Why is swapping elements of a []float64 in Go faster than swapping elements of a Vec&lt;f64&gt; in Rust?", "body": "<p>(Not an answer) but to augment what Lukas wrote,\nhere's what Go 1.11 <a href=\"https://go.godbolt.org/z/b9rEEE\" rel=\"nofollow noreferrer\">generates</a>\nfor the loop itself:</p>\n\n<pre><code>    xorl    CX, CX\n    movsd   8(AX), X0\n    movsd   (AX), X1\n    movsd   X0, (AX)\n    movsd   X1, 8(AX)\n    incq    CX\n    cmpq    CX, $100000000\n    jlt     68\n</code></pre>\n\n<p>(Courtesy of <a href=\"https://godbolt.org\" rel=\"nofollow noreferrer\">https://godbolt.org</a>)</p>\n\n<p>In either case, note that most probably the time you measured was dominated by the startup and initialization of the processes, so you did not actually measured the speed of the execution of the loops. IOW your approach is not correct.</p>\n"}], "owner": {"reputation": 11, "user_id": 10541337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d810ea7b8fecfdb2ab3a9871a95315e?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle", "link": "https://stackoverflow.com/users/10541337/kyle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "accepted_answer_id": 52934180, "answer_count": 2, "score": -6, "last_activity_date": 1564857538, "creation_date": 1540225832, "last_edit_date": 1564857538, "question_id": 52933875, "link": "https://stackoverflow.com/questions/52933875/why-is-swapping-elements-of-a-float64-in-go-faster-than-swapping-elements-of-a", "title": "Why is swapping elements of a []float64 in Go faster than swapping elements of a Vec&lt;f64&gt; in Rust?", "body": "<p>I have two (equivalent?) programs, one in Go the other in Rust. The average execution time is:</p>\n\n<ul>\n<li>Go ~169ms  </li>\n<li>Rust ~201ms</li>\n</ul>\n\n<p><strong>Go</strong></p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    work := []float64{0.00, 1.00}\n    start := time.Now()\n\n    for i := 0; i &lt; 100000000; i++ {\n        work[0], work[1] = work[1], work[0]\n    }\n\n    elapsed := time.Since(start)\n    fmt.Println(\"Execution time: \", elapsed)\n}\n</code></pre>\n\n<p><strong>Rust</strong></p>\n\n<p>I compiled with <code>--release</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Instant;\n\nfn main() {\n    let mut work: Vec&lt;f64&gt; = Vec::new();\n    work.push(0.00);\n    work.push(1.00);\n\n    let now = Instant::now();\n\n    for _x in 1..100000000 {\n        work.swap(0, 1); \n    }\n\n    let elapsed = now.elapsed();\n    println!(\"Execution time: {:?}\", elapsed);\n}\n</code></pre>\n\n<p>Is Rust less performant than Go in this instance?  Could the Rust program be written in an idiomatic way, to execute faster?</p>\n"}, {"tags": ["vector", "rust", "annotations", "traits"], "answers": [{"comments": [{"owner": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "edited": false, "score": 0, "creation_date": 1540225431, "post_id": 52933552, "comment_id": 92776748, "body": "The first snippet gives an error: ```the trait <code>for&lt;&#39;a&gt; std::convert::From&lt;&amp;&#39;a _&gt;</code> is not implemented for `i32````"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "edited": false, "score": 0, "creation_date": 1540225562, "post_id": 52933552, "comment_id": 92776813, "body": "@mattgathu You are right. But note that the error is not originating from within <code>beta2</code>, but from the call site. The problem is that <code>x</code> is borrowed (i.e. it is of type <code>&amp;u8</code>), but <code>Into</code> expects an owned value (i.e. <code>u8</code>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540227324, "post_id": 52933552, "comment_id": 92777646, "body": "<i><code>&amp;U</code> (as opposed to <code>U</code>)</i> \u2014 You should explain to the OP why this difference is needed in this case."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540228295, "post_id": 52933552, "comment_id": 92778133, "body": "What&#39;s the point of going to this trouble if <code>beta2</code> consumes the vector anyway?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1540229419, "post_id": 52933552, "comment_id": 92778660, "body": "@SvenMarnach I assumed that the &quot;real&quot; code wants to iterate over it twice."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1540281744, "post_id": 52933552, "comment_id": 92796060, "body": "Instead of using <code>.iter()</code> it&#39;s more idiomatic to pass the vector as a slice: <code>fn beta2&lt;U, U2&gt;(s: &amp;[U])</code>."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 2, "last_activity_date": 1540227293, "last_edit_date": 1540227293, "creation_date": 1540224621, "answer_id": 52933552, "question_id": 52933363, "link": "https://stackoverflow.com/questions/52933363/how-to-add-type-annotations-for-into-for-the-iterator-element-of-a-vector/52933552#52933552", "title": "How to add type annotations for Into for the iterator element of a vector?", "body": "<p>One possibility would be to inform <code>beta2</code> that <code>&amp;U</code> (as opposed to <code>U</code>) implements <code>Into&lt;i32&gt;</code>:</p>\n\n<pre><code>fn beta2&lt;U&gt;(s: Vec&lt;U&gt;)\nwhere\n    for&lt;'a&gt; &amp;'a U: Into&lt;i32&gt;,\n{\n    for x in s.iter() {\n        println!(\"{:?}\", x.into());\n    }\n}\n</code></pre>\n\n<p>Note that <code>Into</code> accepts <code>self</code> and not <code>&amp;self</code>, i.e. it consumes its argument. Thus, you would have to find some way to convert the borrowed <code>x</code> into an owned value:</p>\n\n<pre><code>fn beta2&lt;U, U2&gt;(s: Vec&lt;U&gt;)\nwhere\n    U: std::borrow::ToOwned&lt;Owned = U2&gt;,\n    U2: Into&lt;i32&gt; + std::borrow::Borrow&lt;U&gt;,\n{\n    for x in s.iter() {\n        println!(\"{:?}\", x.to_owned().into());\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 0, "last_activity_date": 1540228429, "last_edit_date": 1540228429, "creation_date": 1540227799, "answer_id": 52934359, "question_id": 52933363, "link": "https://stackoverflow.com/questions/52933363/how-to-add-type-annotations-for-into-for-the-iterator-element-of-a-vector/52934359#52934359", "title": "How to add type annotations for Into for the iterator element of a vector?", "body": "<p>I don't know what your exact use case is, but I would generally assume that types that are <code>Into&lt;u32&gt;</code> can be cloned and are cheap to clone, so I think the easiest solution is</p>\n\n<pre><code>fn beta2&lt;U: Clone + Into&lt;i32&gt;&gt;(s: &amp;[U]) {\n    for x in s.iter().cloned() {\n        println!(\"{:?}\", x.into());\n    }\n}\n</code></pre>\n\n<p>This will clone each element before calling <code>.into()</code> on it, which will consume the clone.</p>\n\n<p>Note that I have changed the argument <code>s</code> to a slice.  If you are consuming the vector anyway by taking it by value, there is no harm in using the code from your first example, so this only makes sense if you take a slice by reference.</p>\n"}], "owner": {"reputation": 987, "user_id": 3078304, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/bAVgP.jpg?s=128&g=1", "display_name": "mattgathu", "link": "https://stackoverflow.com/users/3078304/mattgathu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1540228429, "creation_date": 1540223922, "last_edit_date": 1540227259, "question_id": 52933363, "link": "https://stackoverflow.com/questions/52933363/how-to-add-type-annotations-for-into-for-the-iterator-element-of-a-vector", "title": "How to add type annotations for Into for the iterator element of a vector?", "body": "<p>I have a vector whose values are trait defined and I would like to use the methods provided by the <code>Iterator</code> trait on this vector.</p>\n\n<p>Here is an simplified code of my use case:</p>\n\n<h3>Case A</h3>\n\n<pre><code>fn beta&lt;T: Into&lt;i32&gt;&gt;(s: Vec&lt;T&gt;) {\n    for x in s {\n        println!(\"{:?}\", x.into());\n    }\n}\n</code></pre>\n\n<h3>Case B</h3>\n\n<pre><code>fn beta2&lt;U: Into&lt;i32&gt;&gt;(s: Vec&lt;U&gt;) {\n    for x in s.iter() {\n        println!(\"{:?}\", x.into());\n    } \n}\n</code></pre>\n\n<p><em>Case A</em> is valid and compiles and runs as expected. <em>Case B</em> however will raise a compile time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:11:26\n   |\n11 |         println!(\"{:?}\", x.into());\n   |                          ^^^^^^^^ cannot infer type for `T`\n</code></pre>\n\n<p>Where should I place my type annotation in this case and what's the expected type annotation?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=3d46a0b35d7643040c8920e7dc9f64b1\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["syntax", "rust", "operators"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 7, "creation_date": 1540221796, "post_id": 52932573, "comment_id": 92774726, "body": "You might want to add some detail about why this new syntax was necessary, for example the difference between <code>0u8..(n+1)</code> and <code>0u8..=n</code> when <code>n == 255</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1540222763, "post_id": 52932573, "comment_id": 92775284, "body": "Also, it is worth noting that <code>a..=b</code> can be used in a match expression pattern, but <code>a..b</code> in that location is experimental (<code>exclusive_range_pattern</code>)!"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1540224407, "post_id": 52932573, "comment_id": 92776178, "body": "Regarding @mcarton&#39;s comment: <a href=\"https://stackoverflow.com/questions/32296410/\">stackoverflow.com/questions/32296410</a>"}], "tags": [], "owner": {"reputation": 8806, "user_id": 257418, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/97Mb4.png?s=128&g=1", "display_name": "Lynn", "link": "https://stackoverflow.com/users/257418/lynn"}, "is_accepted": false, "score": 34, "last_activity_date": 1556470083, "last_edit_date": 1556470083, "creation_date": 1540221089, "answer_id": 52932573, "question_id": 52932572, "link": "https://stackoverflow.com/questions/52932572/what-is-the-dot-dot-equals-operator-in-rust/52932573#52932573", "title": "What is the ..= (dot dot equals) operator in Rust?", "body": "<p>This is the <a href=\"https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html\" rel=\"noreferrer\"><strong>inclusive range operator</strong></a>.</p>\n\n<p>The range <code>x..=y</code> contains all values <code>&gt;= x</code> and <code>&lt;= y</code>, i.e. \u201cfrom <code>x</code> up to and <em>including</em> <code>y</code>\u201d.</p>\n\n<p>This is in contrast to the <em>non-inclusive</em> range operator <code>x..y</code>, which doesn't include <code>y</code> itself.</p>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"{:?}\", (10..20) .collect::&lt;Vec&lt;_&gt;&gt;());\n    println!(\"{:?}\", (10..=20).collect::&lt;Vec&lt;_&gt;&gt;());\n}\n\n// Output:\n//\n//     [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n//     [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n</code></pre>\n\n<h2>Match expressions</h2>\n\n<p>You can also use <code>start..=end</code> as a pattern in a <code>match</code> expression to match any value in the (inclusive) range.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match fahrenheit_temperature {\n    70..=89  =&gt; println!(\"What lovely weather!\"),\n    _        =&gt; println!(\"Ugh, I'm staying in.\"),\n}\n</code></pre>\n\n<p>(Using an <em>exclusive</em> range <code>start..end</code> as a pattern is an <a href=\"https://github.com/rust-lang/rust/issues/37854\" rel=\"noreferrer\">experimental feature</a>.)</p>\n\n<h2>History</h2>\n\n<p>Inclusive ranges used to be an experimental nightly-only feature, and were written <code>...</code> before.</p>\n\n<p>As of Rust 1.26, it's officially part of the language, and written <code>..=</code>.</p>\n\n<p>(Before inclusive ranges existed, you actually couldn't create, say, a range of byte values including <code>255u8</code>. Because that'd be <code>0..256</code>, and <code>256</code> is out of the <code>u8</code> range! This is <a href=\"https://github.com/rust-lang/rust/issues/23635\" rel=\"noreferrer\">issue #23635</a>.)</p>\n\n<h2>See also</h2>\n\n<ul>\n<li>The <a href=\"https://blog.rust-lang.org/2018/05/10/Rust-1.26.html#inclusive-ranges-with-\" rel=\"noreferrer\">Rust 1.26 release blog post</a>'s introduction to <code>..=</code>.</li>\n<li><a href=\"https://stackoverflow.com/questions/43698191/how-do-i-include-the-end-value-in-a-range\">StackOverflow: How do I include the end value in a range?</a></li>\n</ul>\n"}], "owner": {"reputation": 8806, "user_id": 257418, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/97Mb4.png?s=128&g=1", "display_name": "Lynn", "link": "https://stackoverflow.com/users/257418/lynn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2745, "favorite_count": 2, "answer_count": 1, "score": 25, "last_activity_date": 1556470083, "creation_date": 1540221089, "question_id": 52932572, "link": "https://stackoverflow.com/questions/52932572/what-is-the-dot-dot-equals-operator-in-rust", "title": "What is the ..= (dot dot equals) operator in Rust?", "body": "<p>I saw this <code>..=</code> operator in some Rust code:</p>\n\n<pre><code>for s in 2..=9 {\n    // some code here\n}\n</code></pre>\n\n<p>What is it?</p>\n"}, {"tags": ["compilation", "rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 5570, "user_id": 281460, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/cU05x.jpg?s=128&g=1", "display_name": "jwir3", "link": "https://stackoverflow.com/users/281460/jwir3"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1540221329, "post_id": 52932366, "comment_id": 92774440, "body": "It&#39;s actually slightly more complicated than that, because there are also <code>extern</code> definitions that would need to be compiled out."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1540221963, "post_id": 52932366, "comment_id": 92774814, "body": "Does <a href=\"https://stackoverflow.com/questions/42551113/is-it-possible-to-conditionally-enable-an-attribute-like-derive/42551386\">this</a> help you? Specifically: <code>#[cfg_attr(not(test), wasm_bindgen(js_namespace = performance))]</code>. This would disable the attribute for tests. Similarly you can just put <code>#[cfg(not(test))]</code> on your <code>extern</code> block to completely remove it if you are not compiling for testing. If this is what you are searching for, I can make an answer out of this."}, {"owner": {"reputation": 31148, "user_id": 453594, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b18c2193623882316fb54541ee132a0f?s=128&d=identicon&r=PG", "display_name": "axel22", "link": "https://stackoverflow.com/users/453594/axel22"}, "edited": false, "score": 0, "creation_date": 1615561954, "post_id": 52932366, "comment_id": 117737115, "body": "I&#39;m not sure that the <code>cfg_attr</code> is the solution. Unless the whole ecosystem starts using it for each attribute, that does not solve the problem of uniformly disabling wasm-bindgen across all the dependencies."}], "owner": {"reputation": 5570, "user_id": 281460, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/cU05x.jpg?s=128&g=1", "display_name": "jwir3", "link": "https://stackoverflow.com/users/281460/jwir3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 129, "favorite_count": 0, "closed_date": 1540227043, "answer_count": 0, "score": 2, "last_activity_date": 1540221477, "creation_date": 1540220446, "last_edit_date": 1540221477, "question_id": 52932366, "link": "https://stackoverflow.com/questions/52932366/is-there-a-way-to-conditionally-compile-wasm-bindgen-attributes-when-compiling-r", "closed_reason": "Duplicate", "title": "Is there a way to conditionally compile wasm_bindgen attributes when compiling rust?", "body": "<p>I've been reading the <a href=\"https://rustwasm.github.io/book/\" rel=\"nofollow noreferrer\">Rust Wasm Book</a> lately. In it, it utilizes <code>wasm_bindgen</code> through <code>#[wasm_bindgen]</code> annotations. In <a href=\"https://rustwasm.github.io/book/game-of-life/debugging.html#avoid-the-need-to-debug-webassembly-in-the-first-place\" rel=\"nofollow noreferrer\">section 5.5</a> \"Debugging\", the following is mentioned:</p>\n\n<blockquote>\n  <p>Note that in order to run the #[test]s without compiler and linker errors, \n  you will need to comment out the crate-type = \"cdylib\" bits in\n  wasm-game-of-life/Cargo.toml.</p>\n</blockquote>\n\n<p>It similarly recommends commenting out the <code>#[wasm-bindgen]</code> attributes on methods/structs in the next section while running bench tests.</p>\n\n<p>To add an even more complicated portion to this, there are sections like this in complicated wasm applications:</p>\n\n<pre><code>#[wasm_bindgen]\nextern \"C\" {\n#[wasm_bindgen(js_namespace = performance)]\n    fn now() -&gt; f64;\n}\n</code></pre>\n\n<p>I've needed to comment out these sections, as well, in order to get the code to run natively.</p>\n\n<p>This, of course, seems super tedious. My question is whether there is a way to do this work automatically, via the compiler (or via a cargo script), so that I can specify a command such as <code>cargo build</code> or <code>cargo test</code>, which will compile natively (with the attributes disabled), and perhaps something like <code>cargo build --feature=wasm</code> to build with wasm_bindgen enabled.</p>\n\n<p>I thought about writing a separate <code>build.rs</code> script that copies over all sources and <code>Cargo.toml</code> files to an intermediate directory (so your source code isn't modified in place), does the commenting itself, and then builds from this source. Of course, the problem here is that 1) the build script is editing your source, so the line numbers will be off, and 2) it seems unclean - a hacky way to get around this problem.</p>\n\n<p>I was wondering if others had suggestions I could use or things they have used, as this seems like pretty desirable behavior. </p>\n"}, {"tags": ["rust", "coordinates", "rust-piston"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1540221002, "post_id": 52932323, "comment_id": 92774247, "body": "I copied and ran your exact code - the red box is anchored to the top left of the window..."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1540221113, "post_id": 52932323, "comment_id": 92774304, "body": "Well that&#39;s alarming. I&#39;m on Ubuntu 16.04 running Rust 1.29.2 and <code>piston_window</code> 0.81.0, if that tells you anything."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1540221282, "post_id": 52932323, "comment_id": 92774411, "body": "I&#39;m using piston_window 0.82 on Mac OS 10.13.6"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1540221402, "post_id": 52932323, "comment_id": 92774491, "body": "<a href=\"https://i.stack.imgur.com/9xGpM.png\" rel=\"nofollow noreferrer\">i.stack.imgur.com/9xGpM.png</a>"}, {"owner": {"reputation": 6100, "user_id": 5984, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0d75735ed1574bba97c5f58dfc0aae52?s=128&d=identicon&r=PG", "display_name": "idursun", "link": "https://stackoverflow.com/users/5984/idursun"}, "edited": false, "score": 1, "creation_date": 1540224568, "post_id": 52932323, "comment_id": 92776261, "body": "Tried on Windows 10 and works as expected."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1540231507, "post_id": 52932323, "comment_id": 92779593, "body": "Seems like you may need to log a bug with piston. It will probably be a bug in one of their dependencies."}, {"owner": {"reputation": 298, "user_id": 6683971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/166e3700254b59411c77efc7ba60267b?s=128&d=identicon&r=PG&f=1", "display_name": "Elias Riedel G&#229;rding", "link": "https://stackoverflow.com/users/6683971/elias-riedel-g%c3%a5rding"}, "edited": false, "score": 1, "creation_date": 1541806727, "post_id": 52932323, "comment_id": 93355919, "body": "I encountered the same problem (on Arch Linux). Downgrading to piston_window 0.64.0 solved it for me. Did you file a bug report or anything?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 298, "user_id": 6683971, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/166e3700254b59411c77efc7ba60267b?s=128&d=identicon&r=PG&f=1", "display_name": "Elias Riedel G&#229;rding", "link": "https://stackoverflow.com/users/6683971/elias-riedel-g%c3%a5rding"}, "edited": false, "score": 2, "creation_date": 1541813260, "post_id": 52932323, "comment_id": 93357125, "body": "@EliasRiedelG&#229;rding That&#39;s a relief to know that it&#39;s not just me then. With that in mind, I have now filed <a href=\"https://github.com/PistonDevelopers/piston_window/issues/238\" rel=\"nofollow noreferrer\">an issue on their repo</a>."}], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 119, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1540234629, "creation_date": 1540220323, "last_edit_date": 1540234629, "question_id": 52932323, "link": "https://stackoverflow.com/questions/52932323/why-does-it-seem-like-pistons-position-0-0-is-halfway-down-the-window-on-the", "title": "Why does it seem like Piston&#39;s position (0, 0) is halfway down the window on the left?", "body": "<p>I'm hitting what I assume is a pretty basic misunderstanding of how to draw things using the Rust Piston library. Here is the main function I'm working with, mostly copied from beginner tutorials.</p>\n\n<pre><code>extern crate piston_window;\n\nuse piston_window::*;\n\nfn main() {\n    let dims = (640.0, 480.0);\n    let mut window: PistonWindow =\n        WindowSettings::new(\"Hello, Piston!\", (dims.0 as u32, dims.1 as u32))\n            .exit_on_esc(true)\n            .build()\n            .unwrap();\n    while let Some(e) = window.next() {\n        match e {\n            Event::Loop(Loop::Render(_)) =&gt; {\n                window.draw_2d(&amp;e, |c, g| {\n                    clear([1.0; 4], g);\n                    rectangle(\n                        [1.0, 0.0, 0.0, 1.0],\n                        [0.0, 0.0, dims.0, dims.1],\n                        c.transform,\n                        g,\n                    );\n                });\n            }\n            _ =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p>I'm trying to draw a red rectangle the size of the window, but when I run this function, I get a red box drawn on the lower-left corner of the frame, not occupying the whole window as I might expect.</p>\n\n<p><a href=\"https://i.stack.imgur.com/J9j0F.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/J9j0F.png\" alt=\"red rectangle appears to the lower left corner of the frame\"></a></p>\n\n<p>Oddly enough, if I change the dimensions to <code>(480.0, 480.0)</code> so that the window is a square, the box fills up the window like I would expect. I imagine this is simply me misunderstanding how Piston treats coordinates. What exactly am I missing here, and why does it seem like the position (0, 0) is halfway down the window on the left?</p>\n"}, {"tags": ["macros", "rust", "rust-macros"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1540217540, "post_id": 52930744, "comment_id": 92772027, "body": "I&#39;m quite sure it can be done the other way around, but I&#39;m not sure how. Look for example at <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\"><code>rental</code></a>, it has <code>rental-impl</code> as a dependency, but the user code does not have to write <code>extern crate rental_impl</code> so the <code>rental!</code> macro must be reexported by the main crate."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1540218693, "post_id": 52930744, "comment_id": 92772783, "body": "@rodrigo Unfortunately, I do not think that&#39;s what <code>rental</code> does: it exports <a href=\"https://github.com/jpernst/rental/blob/master/src/lib.rs#L220\" rel=\"nofollow noreferrer\">a &quot;regular&quot; macro</a> that does the derive"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 5, "last_activity_date": 1540222005, "creation_date": 1540222005, "answer_id": 52932834, "question_id": 52930744, "link": "https://stackoverflow.com/questions/52930744/is-it-possible-to-have-one-crate-with-both-procedural-macros-and-logic/52932834#52932834", "title": "Is it possible to have one crate with both procedural macros and logic?", "body": "<p>It's actually quite straight-forward to re-export macros.  Simply use</p>\n\n<pre><code>#[macro_use]\nextern crate my_proc_macro;\n</code></pre>\n\n<p>in the root of <code>my_crate</code>.</p>\n\n<p><a href=\"https://github.com/serde-rs/serde/blob/master/serde/src/lib.rs#L299-L305\" rel=\"noreferrer\">The <code>serde</code> crate can be used this way when enabling the feature <code>serde_derive</code>.</a></p>\n\n<p>In the 2018 edition, you can also <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/macros/macro-changes.html#procedural-macros\" rel=\"noreferrer\">explicitly re-export proc macros using <code>use</code> declarations</a>.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 52932834, "answer_count": 1, "score": 4, "last_activity_date": 1540227452, "creation_date": 1540215334, "last_edit_date": 1540227452, "question_id": 52930744, "link": "https://stackoverflow.com/questions/52930744/is-it-possible-to-have-one-crate-with-both-procedural-macros-and-logic", "title": "Is it possible to have one crate with both procedural macros and logic?", "body": "<p>When you want to share a library that uses a procedural macro, is the dual crate approach <code>foo</code>/<code>foo_derive</code> inevitable?</p>\n\n<p>I would like to provide a crate that has the logic <strong>and</strong> the macros. The first thing I tried was:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>my_proc_macro\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src/lib.rs\n\u2514\u2500\u2500 my_crate\n    \u251c\u2500\u2500 Cargo.toml\n    \u2514\u2500\u2500 src/lib.rs\n</code></pre>\n\n<p>In the <code>my_proc_macro</code> crate, I tried to <code>pub use my_crate::*;</code> but it is forbidden to do so: the compiler refused to build this.</p>\n\n<p>Is it possible to do this the other way around? I mean: import the procedural macro crate into the library and then reexport the macro?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 6, "creation_date": 1540208827, "post_id": 52927610, "comment_id": 92766356, "body": "Child structs are stored inline, so no nested boxes required."}], "answers": [{"comments": [{"owner": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "edited": false, "score": 0, "creation_date": 1540243974, "post_id": 52934376, "comment_id": 92785223, "body": "What happen&#39;s if I do inner boxing? Does it point to different memory? Or is it removed by compiler?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1540248771, "post_id": 52934376, "comment_id": 92786571, "body": "@Markys Everytime you create a box, a new memory segment on the heap is allocated, so the inner box points to different memory.  Creating a box is about more than whether something is stored on the heap of the stack, so the compiler can&#39;t simply decide to store something inline that you request to be stored in a box, at least not in the general case, since the behaviour is observably different."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1540252690, "last_edit_date": 1540252690, "creation_date": 1540227875, "answer_id": 52934376, "question_id": 52927610, "link": "https://stackoverflow.com/questions/52927610/do-i-need-to-box-child-structs-of-a-boxed-struct-to-get-everything-on-the-heap/52934376#52934376", "title": "Do I need to Box child structs of a Boxed struct to get everything on the heap?", "body": "<blockquote>\n  <p>Do I need to Box child structs of a Boxed struct to get everything on the heap?</p>\n</blockquote>\n\n<p>No. When you box a value, you box the entire value, which means all of the member values. Since every member of that value is inside the box, everything is on the heap.</p>\n\n<blockquote>\n  <p>What happens if I do inner boxing? Does it point to different memory?</p>\n</blockquote>\n\n<p>Yes. The variable on the stack will point to data in the heap which will then point at different data on the heap.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+-----------+         +----------+\n|   Stack   |         |   Heap   |\n+-----------+         +----------+\n|           +---------&gt;          +------+\n|           |         |          |      |\n|           |         |          |      |\n|           |         |          |      |\n+-----------+         |          |      |\n|   .....   |         +----------+      |\n+-----------+         |   ....   |      |\n|           |         +----------+      |\n|           |         |          |      |\n|           |         |          &lt;------+\n|           |         |          |\n|           |         |          |\n|           |         |          |\n|           |         |          |\n|           |         |          |\n+-----------+         +----------+\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 4, "last_activity_date": 1540304902, "creation_date": 1540304902, "answer_id": 52951549, "question_id": 52927610, "link": "https://stackoverflow.com/questions/52927610/do-i-need-to-box-child-structs-of-a-boxed-struct-to-get-everything-on-the-heap/52951549#52951549", "title": "Do I need to Box child structs of a Boxed struct to get everything on the heap?", "body": "<p>Imagine each type (<code>Outer1</code>, <code>Inner1</code>, <code>i32</code>) has a color and that\nmemory slots are made up of one or more stacked/embedded colored frames of bytes.</p>\n\n<pre><code>struct Outer1 {\n    child: Inner1,\n}\n\nstruct Inner1 {\n    n: i32,\n}\n\nlet x1 = Box::new(Outer1 {\n    child: Inner1 { n: 1 },\n});\n</code></pre>\n\n<p>has this layout:</p>\n\n<p><a href=\"https://i.stack.imgur.com/r2stu.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/r2stu.png\" alt=\"enter image description here\"></a></p>\n\n<pre><code>struct Outer2 {\n    child: Box&lt;Inner2&gt;,\n}\n\nstruct Inner2 {\n    n: Box&lt;i32&gt;,\n}\n\nlet x2 = Box::new(Outer2 {\n    child: Box::new(Inner2 { n: Box::new(1) }),\n});\n</code></pre>\n\n<p>has this layout:</p>\n\n<p><a href=\"https://i.stack.imgur.com/YERbp.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/YERbp.png\" alt=\"enter image description here\"></a></p>\n\n<p>Each <code>Box&lt;Something&gt;</code> start a new colored frame.</p>\n\n<p>Obviously memory is not colored: it is a concept that may help in representation: what really exists are only bytes, and eventually some waste of space due to memory alignments.</p>\n\n<p>Below the memory layout for a struct containig a String property.</p>\n\n<p><a href=\"https://i.stack.imgur.com/oPuw5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/oPuw5.png\" alt=\"enter image description here\"></a></p>\n\n<p>A <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#representation\" rel=\"nofollow noreferrer\">String</a> is made up of three components: a pointer to a buffer, lenght and capacity (in the example they are on the stack) and a buffer that is always stored on the heap.</p>\n\n<p><strong>Note</strong>: it the examples above pointers size are relative to 64 bit architecture.</p>\n"}], "owner": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "accepted_answer_id": 52951549, "answer_count": 2, "score": 0, "last_activity_date": 1540304902, "creation_date": 1540205620, "last_edit_date": 1540252394, "question_id": 52927610, "link": "https://stackoverflow.com/questions/52927610/do-i-need-to-box-child-structs-of-a-boxed-struct-to-get-everything-on-the-heap", "title": "Do I need to Box child structs of a Boxed struct to get everything on the heap?", "body": "<p>I don't understand in Rust what is happening with a struct in a struct when we <code>Box</code> the parent struct.</p>\n\n<pre><code>struct Outer1 {\n    child: Inner1,\n}\n\nstruct Inner1 {\n    n: i32,\n}\n\nstruct Outer2 {\n    child: Box&lt;Inner2&gt;,\n}\n\nstruct Inner2 {\n    n: Box&lt;i32&gt;,\n}\n\npub fn main() {\n    let x1 = Box::new(Outer1 {\n        child: Inner1 { n: 1 },\n    });\n    let x2 = Box::new(Outer2 {\n        child: Box::new(Inner2 { n: Box::new(1) }),\n    });\n}\n</code></pre>\n\n<p><code>x2.child</code> and <code>x2.child.n</code> should be on the heap, right? Where is <code>x1.child</code> and <code>x1.child.n</code>: the stack or the heap?</p>\n\n<p>If <code>child.n</code> would be of type <code>String</code>, <code>n</code> should be a reference and <code>String</code> needs no <code>Box</code> to be on the heap? Is this correct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1540202995, "post_id": 52926467, "comment_id": 92763136, "body": "There is a bit more about <code>Send</code> and <code>Sync</code> in the Nomicon: <a href=\"https://doc.rust-lang.org/stable/nomicon/send-and-sync.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/nomicon/send-and-sync.html</a>"}, {"owner": {"reputation": 71, "user_id": 10539705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7864389c1062b2a74816399fe76010f1?s=128&d=identicon&r=PG&f=1", "display_name": "montekki", "link": "https://stackoverflow.com/users/10539705/montekki"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1540208277, "post_id": 52926467, "comment_id": 92766018, "body": "@E_net4 yes but it states the following: &quot;TODO: better explain what can or can&#39;t be Send or Sync. Sufficient to appeal only to data races?&quot;. My question seeking to find that explanation, what can or can&#39;t be Send or Sync, especially about complex types like LinkedList"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1540212874, "post_id": 52926467, "comment_id": 92768819, "body": "For the particular case of <code>LinkedList</code>, it just had to be implemented in a way that ensures memory safety. Asking what can be <code>Send</code>/<code>Sync</code> in general is a much broader question."}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 10539705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7864389c1062b2a74816399fe76010f1?s=128&d=identicon&r=PG&f=1", "display_name": "montekki", "link": "https://stackoverflow.com/users/10539705/montekki"}, "edited": false, "score": 0, "creation_date": 1540207403, "post_id": 52926732, "comment_id": 92765550, "body": "@rodrigo thanks for you answer, but  1. Isn&#39;t that something that compiler can help us with? e.g. checking that no refs to !Send types &quot;flow&quot; out of our type given the existing implementations? 2. Are there any good writeups on this in documentation or something? the Nomicon is actually not that helpful on the topic"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 71, "user_id": 10539705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7864389c1062b2a74816399fe76010f1?s=128&d=identicon&r=PG&f=1", "display_name": "montekki", "link": "https://stackoverflow.com/users/10539705/montekki"}, "edited": false, "score": 0, "creation_date": 1540212249, "post_id": 52926732, "comment_id": 92768433, "body": "@montekki: No, the compiler cannot know what you are doing or what the semantics are. For example, a type with internal mutability must not be <code>Sync</code> because several threads could modify it at the same time and cause a raze... unless it uses mutexes propery, in that case it is <code>Sync</code> safe again. But the proper use of mutexes cannot be inferred by the compiler."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 5, "last_activity_date": 1540202536, "creation_date": 1540202536, "answer_id": 52926732, "question_id": 52926467, "link": "https://stackoverflow.com/questions/52926467/what-is-the-reasoning-behind-marking-a-type-that-contains-send-fields-with-the/52926732#52926732", "title": "What is the reasoning behind marking a type that contains !Send fields with the Send trait?", "body": "<p>Look at the <a href=\"https://doc.rust-lang.org/src/core/ptr.rs.html#2852\" rel=\"noreferrer\">rationale</a> for <code>NonNull</code> being <code>!Send</code>:</p>\n\n<blockquote>\n  <p><code>NonNull</code> pointers are not <code>Send</code> because the data they reference <strong>may</strong> be aliased.</p>\n</blockquote>\n\n<p>But the <code>NonNull</code> in <code>LinkedList</code> is a private implementation detail. If this type knows that the inner type <code>T</code> is <code>Send</code> and the usage it does is also <code>Send</code>-safe, (no unsafety in the public API) then it can reintroduce the <code>Send</code> trait.</p>\n\n<p>That guarantee basically winds down to ensuring that you cannot get mutable aliases to the inner types; and ensuring that there is no unexpected inner mutability (get a mutable reference from an immutable one).</p>\n\n<p>These guarantees are not given by <code>NonNull</code> but they are in <code>LinkedList</code>.</p>\n"}], "owner": {"reputation": 71, "user_id": 10539705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7864389c1062b2a74816399fe76010f1?s=128&d=identicon&r=PG&f=1", "display_name": "montekki", "link": "https://stackoverflow.com/users/10539705/montekki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 1, "answer_count": 1, "score": 7, "last_activity_date": 1540234787, "creation_date": 1540201651, "last_edit_date": 1540234787, "question_id": 52926467, "link": "https://stackoverflow.com/questions/52926467/what-is-the-reasoning-behind-marking-a-type-that-contains-send-fields-with-the", "title": "What is the reasoning behind marking a type that contains !Send fields with the Send trait?", "body": "<p>What is the reasoning behind marking a type that contains <code>!Send</code> fields (like <code>Rc</code> or <code>NonNull</code>) with the <code>Send</code> trait? For instance, the standard library's <a href=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/collections/linked_list.rs\" rel=\"noreferrer\" title=\"LinkedList\"><code>LinkedList</code></a> works in this fashion: it contains <code>Option&lt;NonNull&lt;_&gt;&gt;</code> fields and it implements <code>Send</code> trait (when <code>T</code> is <code>Send</code>).</p>\n\n<p>How is this safe, what are the guarantees and ways to work safely with such a type? </p>\n"}, {"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1540199717, "post_id": 52924569, "comment_id": 92761137, "body": "Can you give details about the undefined references you are getting?"}, {"owner": {"reputation": 6958, "user_id": 857727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3772f7ef99bd17c1e77d77edbf76c13d?s=128&d=identicon&r=PG&f=1", "display_name": "arnt", "link": "https://stackoverflow.com/users/857727/arnt"}, "edited": false, "score": 0, "creation_date": 1540202068, "post_id": 52924569, "comment_id": 92762588, "body": "This question is borderline for SO; it&#39;s too low in concrete details such as what references are undefined. But I can guess what the answer will be. LLVM allows some measure of target independence, but it doesn&#39;t require each frontend to be 100% portable to new targets. When a frontend is less than 100% portable, you&#39;ll often see undefined references for each instance of platform dependence. Some easily fixable, some very, very hard."}, {"owner": {"reputation": 201, "user_id": 10538725, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ePxU8Ltq5nI/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbBWHCPb4rVhBtiNcfUTHlcI5PM6Eg/mo/photo.jpg?sz=128", "display_name": "Hoblovski", "link": "https://stackoverflow.com/users/10538725/hoblovski"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1540211914, "post_id": 52924569, "comment_id": 92768239, "body": "@rodrigo Technically it&#39;s <code>_ZN4core9panicking5panic17he3feabc16d430735E</code> (expected by my project) and <code>_ZN4core9panicking5panic17ha8afdce0157d83a3E</code> (provided in libcore). Only the hash part is different so I suspect that to be some versioning problem."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1540212697, "post_id": 52924569, "comment_id": 92768731, "body": "Oh, I had a similar problem once, and I workarounded with <code>-C panic=abort</code> or <code>[profile] panic = &#39;abort&#39;</code> in <code>Cargo.toml</code>. Maybe it helps, although I don&#39;t know why it fails in the first place."}], "answers": [{"tags": [], "owner": {"reputation": 569, "user_id": 9848642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/063e31e828928dacf836143539ee3184?s=128&d=identicon&r=PG", "display_name": "Dwight Guth", "link": "https://stackoverflow.com/users/9848642/dwight-guth"}, "is_accepted": false, "score": 1, "last_activity_date": 1559322798, "creation_date": 1559322798, "answer_id": 56399256, "question_id": 52924569, "link": "https://stackoverflow.com/questions/52924569/how-can-i-compile-a-rust-program-with-a-custom-llc/56399256#56399256", "title": "How can I compile a Rust program with a custom llc?", "body": "<p>There's a couple things you should be aware of. Most importantly, the version of LLVM that rustc uses by default if you get it from rustup or a distro package manager is /not/ an actual release of LLVM, and may not actually be bitcode-compatible with a particular llvm release. We solved this issue in my project by building rust from source with the <code>--llvm-root</code> flag to configure. You can then use <code>rustup toolchain link</code> to link your built rustc into a custom rustup toolchain.</p>\n\n<p>Second, you can make rustc emit .rlib files that contain llvm bitcode instead of machine code if you use at least rustc 1.34 and pass the -C linker-plugin-lto flag to rustc. I also wrote the following script that can unpack an rlib file containing object code and pack it back up as an rlib file containing llvm bitcode, if the above approach does not work for you.</p>\n\n<pre><code>#!/bin/bash\ndir=\"$(mktemp -d)\"\ntrap \"rm -rf $dir\" INT TERM EXIT\narchive=$(realpath -m $1)\ncd \"$dir\"\nar x \"$archive\"\nrm ./*.rcgu.o\nfor file in *.bc.z; do\nlen=`od -An -t u4 -j 15 -N4 $file`\nblen=`od -An -t u8 -j $((len+19)) -N8 $file`\ntail -c+$((len+28)) $file | head -c $blen &gt; $file.bc.gz\nprintf \"\\x1f\\x8b\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" |cat - $file.bc.gz |gzip -dc &gt; ${file%.bc.z}.o\ndone\nrm *.bc.z\nrm *.gz\nrm \"$archive\"\nllvm-ar rs \"${archive}\" ./*\n</code></pre>\n\n<p>Once you have the rlib files, you can use any llvm toolchain tool on them the same way you could with a .a file containing llvm bitcode.</p>\n\n<p>In terms of performing the final link, there are a few things to bear in mind. First, rustc automatically generates the symbols <code>__rust_alloc</code>, <code>__rust_alloc_zeroed</code>, <code>__rust_dealloc</code>, and <code>__rust_realloc</code> and points them to either <code>__rg_alloc</code> (and similar <code>__rg_</code> symbols respectively), which is the GlobalAlloc implementation that uses jemalloc by default, or <code>__rdl_alloc</code> (and similar <code>__rdl_</code> symbols respectively), which is the system allocator powered by libc malloc. You will have to implement these symbols yourself if you are not using rustc to do the final link.</p>\n\n<p>Second, libstd and libcore depend on some other libraries that you will also probably have to link against. Depending on what segment of the standard library you are using, you may find that different sets of libraries are required, so I can't help you without a specific error message there, but I can tell you that the list of libraries that my application ended up requiring was, in order: <code>std, core, alloc, unwind, compiler_builtins, panic_abort, backtrace_sys, rustc_demangle</code>. If you are using panic=unwind, you will obviously have to use that instead. If you find you still have missing symbols, I would suggest using nm to look for the library containing the missing symbol and figure out where it belongs in the linker order with trial and error.</p>\n\n<p>Hope this helps, as I've spent a fair amount of effort engineering a solution to this exact problem (although not for the purposes of cross compilation).</p>\n"}], "owner": {"reputation": 201, "user_id": 10538725, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ePxU8Ltq5nI/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbBWHCPb4rVhBtiNcfUTHlcI5PM6Eg/mo/photo.jpg?sz=128", "display_name": "Hoblovski", "link": "https://stackoverflow.com/users/10538725/hoblovski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 651, "favorite_count": 1, "answer_count": 1, "score": 10, "last_activity_date": 1559322798, "creation_date": 1540194555, "last_edit_date": 1540228286, "question_id": 52924569, "link": "https://stackoverflow.com/questions/52924569/how-can-i-compile-a-rust-program-with-a-custom-llc", "title": "How can I compile a Rust program with a custom llc?", "body": "<p>I have a custom LLVM backend and would like to cross compile Rust for that custom (nostd) target. I'd like to compile Rust programs in two steps:</p>\n\n<ol>\n<li>Using <code>rustc</code> to generate LLVM IR.</li>\n<li>Use my own <code>opt</code> and <code>llc</code> to transform LLVM IR into machine code.</li>\n</ol>\n\n<p>I tried using <code>cargo rustc -- --emit=llvm-ir</code>. I get <code>.ll</code> files, and then use <code>llc</code> to get <code>.o</code> files.\nThen I cross compile <code>libcore</code> in the same way. When I try to link all the objects together, it tells me about an undefined reference. I was using the same commit of <code>libcore</code> and <code>rustc</code>. This seems a problem with LLVM versions but I'm not sure.</p>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1540195514, "post_id": 52923749, "comment_id": 92758867, "body": "What did you try? See <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540200971, "post_id": 52923749, "comment_id": 92761938, "body": "I&#39;m tempted to reply &quot;use a for loop&quot;.  You may want to <code>prepare()</code> the insert command to improve performance."}], "owner": {"reputation": 191, "user_id": 6372072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00658b4be4698ff8eb3b20edd3f95281?s=128&d=identicon&r=PG&f=1", "display_name": "Marc Flury", "link": "https://stackoverflow.com/users/6372072/marc-flury"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 623, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1540227660, "creation_date": 1540191172, "last_edit_date": 1540227660, "question_id": 52923749, "link": "https://stackoverflow.com/questions/52923749/what-is-the-best-way-to-add-multiple-rows-using-the-rust-postgres-crate", "title": "What is the best way to add multiple rows using the rust-postgres crate?", "body": "<p>I am using the <a href=\"https://github.com/sfackler/rust-postgres\" rel=\"noreferrer\">rust-postgres</a> crate to insert data into a PostgreSQL database. I scrape data from a website and want to add it to the database. I do not know ahead of time how many rows I will add in one go. What is the best way to add multiple rows to a postgresql in rust?</p>\n\n<p>I wrote a possible solution to the general problem of writing all elements from a vector to a database. I used iterators rather than a <code>for</code> loop because I like the functional style it provides. Sending an <code>INSERT</code> command to the database for every element seems not ideal to me. Is there a better way to do this?</p>\n\n<pre><code>extern crate postgres;\n\nuse postgres::{Connection, TlsMode};\n\nstruct Person {\n    id: i32,\n    name: String,\n    data: Option&lt;Vec&lt;u8&gt;&gt;,\n}\n\nfn write2db(connection: &amp;Connection, person: Person) -&gt; () {\n    connection\n        .execute(\n            \"INSERT INTO person (id, name, data) VALUES ($1, $2, $3)\",\n            &amp;[&amp;person.id, &amp;person.name, &amp;person.data],\n        )\n        .unwrap();\n}\n\nfn main() {\n    let conn = Connection::connect(\"postgres://postgres@localhost:5433\", TlsMode::None).unwrap();\n    conn.execute(\n        \"CREATE TABLE person (\n                        id              SERIAL PRIMARY KEY,\n                        name            VARCHAR NOT NULL,\n                        data            BYTEA\n                      )\",\n        &amp;[],\n    )\n    .unwrap();\n    let me = Person {\n        id: 0,\n        name: \"Steven\".to_string(),\n        data: None,\n    };\n    let you = Person {\n        id: 1,\n        name: \"Alice\".to_string(),\n        data: None,\n    };\n    let he = Person {\n        id: 2,\n        name: \"Bob\".to_string(),\n        data: None,\n    };\n    let she = Person {\n        id: 3,\n        name: \"Claire\".to_string(),\n        data: None,\n    };\n\n    let my_vec = vec![me, you, he, she];\n    my_vec.into_iter().for_each(|a| write2db(&amp;conn, a))\n}\n</code></pre>\n"}, {"tags": ["c++", "rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540261471, "post_id": 52923460, "comment_id": 92789370, "body": "Look at <a href=\"https://github.com/nagisa/rust_libloading\" rel=\"nofollow noreferrer\">libloading</a> but your question is not clear, &quot;I only need to call several functions, not all the functions.&quot; this simple don&#39;t make sense, you can&#39;t &quot;load only one function&quot;, you can load all or nothing. A lib is one entity, not just a list of function. Plus, a dynamic lib is a very unstable thing, even used only in C++, you will have trouble to use it dynamically. And I said &quot;dynamically&quot;. Link a shared/static library or load a dynamic library are two different concepts, please be more clear"}], "answers": [{"tags": [], "owner": {"reputation": 6050, "user_id": 1030410, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e13caf6116a45714153bd145754fd292?s=128&d=identicon&r=PG", "display_name": "Daniel Trugman", "link": "https://stackoverflow.com/users/1030410/daniel-trugman"}, "is_accepted": false, "score": 5, "last_activity_date": 1610388864, "last_edit_date": 1610388864, "creation_date": 1540192781, "answer_id": 52924136, "question_id": 52923460, "link": "https://stackoverflow.com/questions/52923460/how-to-call-a-c-dynamic-library-from-rust/52924136#52924136", "title": "How to call a C++ dynamic library from Rust?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/beta/nomicon/ffi.html\" rel=\"nofollow noreferrer\">Rust's official website</a>, there is no official support for linkage with C++. Instead you can try and use C libraries.</p>\n<p>There is also a thread on this issue in their <a href=\"https://users.rust-lang.org/t/any-updates-on-calling-c-from-rust/10257\" rel=\"nofollow noreferrer\">users forum</a>, where users suggest some 3rd party projects aiming to tackle this issue:</p>\n<ul>\n<li><a href=\"https://github.com/servo/rust-bindgen\" rel=\"nofollow noreferrer\"><strong>bindgen</strong></a> - Auto generation of FFI for Rust</li>\n<li><a href=\"https://github.com/rust-qt/cpp_to_rust\" rel=\"nofollow noreferrer\"><strong>cpp-to-rust</strong></a> - Allows to use C++ libraries from Rust. The main target of this project is Qt.</li>\n</ul>\n<p>I didn't use them, so I can't recommend anything particular or share my experience, but good luck :)</p>\n"}, {"tags": [], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "is_accepted": true, "score": 19, "last_activity_date": 1593501641, "last_edit_date": 1593501641, "creation_date": 1540262855, "answer_id": 52940455, "question_id": 52923460, "link": "https://stackoverflow.com/questions/52923460/how-to-call-a-c-dynamic-library-from-rust/52940455#52940455", "title": "How to call a C++ dynamic library from Rust?", "body": "<p>Before you go further, make sure you have a basic idea of Rust <a href=\"https://doc.rust-lang.org/nomicon/ffi.html\" rel=\"noreferrer\">FFI (foreign function interface)</a>.</p>\n<p>In Rust, it's easy to call C, but hard to call C++.</p>\n<p>To call C functions in Rust, you just have to wrap them with <code>extern</code>, do some basic type casting and sometimes <code>unsafe</code>.</p>\n<p>To call C++ functions, since Rust does not have built-in knowledge of C++ features, you may have to do a lot of manual translation. For example, here is part of the documentation from <a href=\"https://github.com/rust-qt/cpp_to_rust/blob/221feeed079cdf027e197a0cbe783849e33be0a7/cpp_to_rust/cpp_to_rust_generator/README.md\" rel=\"noreferrer\">Rust-Qt</a>:</p>\n<blockquote>\n<p>Many things are directly translated from C++ to Rust:</p>\n<ul>\n<li>Primitive types are mapped to Rust's primitive types (like <code>bool</code>) and types provided by libc crate (like <code>libc::c_int</code>).</li>\n<li>Fixed-size numeric types (e.g <code>int8_t</code> or <code>qint8</code>) are mapped to Rust's fixed size types (e.g. <code>i8</code>).</li>\n<li>Pointers, references and values are mapped to Rust's respective types.</li>\n<li>C++ namespaces are mapped to Rust submodules.</li>\n<li>C++ classes and structs are mapped to Rust structs. This also applies to all instantiations of template classes encountered in the\nlibrary's API, including template classes of dependencies.</li>\n<li>Free functions are mapped to free functions.</li>\n<li>Class methods are mapped to structs' implementations.</li>\n<li>Destructors are mapped to <code>Drop</code> and <code>CppDeletable</code> implementations.</li>\n<li>Function pointer types are mapped to Rust's equivalent representation. Function pointers with references or class values are\nnot supported.</li>\n<li><code>static_cast</code> and <code>dynamic_cast</code> are available in Rust through corresponding traits.</li>\n</ul>\n<p>Names of Rust identifiers are modified according to Rust's naming\nconventions.</p>\n<p>When direct translation is not possible:</p>\n<ul>\n<li>Contents of each include file of the C++ library are placed into a separate submodule.</li>\n<li>Method overloading is emulated with wrapping arguments in a tuple and creating a trait describing tuples acceptable by each method.\nMethods with default arguments are treated in the same way.</li>\n<li>Single inheritance is translated to <code>Deref</code> and <code>DerefMut</code> implementation, allowing to call base class methods on derived\nobjects. When deref coercions are not enough, <code>static_cast</code> should be\nused to convert from derived to base class.</li>\n<li>Getter and setter methods are created for each public class field.</li>\n</ul>\n<p>Not implemented yet but planned:</p>\n<ul>\n<li>Translate C++ <code>typedef</code>s to Rust type aliases.</li>\n<li>Implement operator traits for structs based on C++ operator methods (<a href=\"https://github.com/rust-qt/cpp_to_rust/issues/27\" rel=\"noreferrer\">issue</a>). Operators\nare currently exposed as regular functions with <code>op_</code> prefix.</li>\n<li>Implement Debug and Display traits for structs if applicable methods exist on C++ side.</li>\n<li>Implement iterator traits for collections.</li>\n<li>Subclassing API (<a href=\"https://github.com/rust-qt/cpp_to_rust/issues/26\" rel=\"noreferrer\">issue</a>).</li>\n<li>Provide access to a class's public variables (<a href=\"https://github.com/rust-qt/cpp_to_rust/issues/18\" rel=\"noreferrer\">issue</a>).</li>\n<li>Provide conversion from enums to int and back (used in Qt API).</li>\n<li>Support C++ types nested into template types, like <code>Class1&lt;T&gt;::Class2</code>.</li>\n</ul>\n<p>Not planned to support:</p>\n<ul>\n<li>Advanced template usage, like types with integer template arguments.</li>\n<li>Template partial specializations.</li>\n<li>Template methods and functions.</li>\n</ul>\n</blockquote>\n<p>My suggestion is to wrap your C++ library as a C library, then call it the official FFI way, or use <a href=\"https://github.com/rust-lang-nursery/rust-bindgen\" rel=\"noreferrer\">rust-bindgen</a> to automatically do the wrapping.</p>\n<p>If you still want to call C++ in Rust, <a href=\"https://github.com/google/rustcxx\" rel=\"noreferrer\">rustcxx</a> seems like a handy tool.</p>\n<p>As to the library linking, it's pretty simple:</p>\n<ul>\n<li>Put the library into your system library searching paths like <code>/usr/lib</code> or <code>/usr/local/lib/</code>, make sure it can be found by <code>ldconfig -p</code>.</li>\n<li>Or use the environment variable <code>LD_LIBRARY_PATH</code> to specify the path where your library lays when you run <code>cargo</code> from the CLI.</li>\n</ul>\n"}], "owner": {"reputation": 107, "user_id": 8328954, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cce310968f5d62c38c8f845423bde059?s=128&d=identicon&r=PG&f=1", "display_name": "Chi Wei Shen", "link": "https://stackoverflow.com/users/8328954/chi-wei-shen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8175, "favorite_count": 1, "accepted_answer_id": 52940455, "answer_count": 2, "score": 5, "last_activity_date": 1610388864, "creation_date": 1540189729, "last_edit_date": 1540286852, "question_id": 52923460, "link": "https://stackoverflow.com/questions/52923460/how-to-call-a-c-dynamic-library-from-rust", "title": "How to call a C++ dynamic library from Rust?", "body": "<p>I want to call a C++ dynamic library (*.so) from Rust, but I don't want to build it from Rust. Like this,</p>\n\n<pre><code>cc::Build::new()\n\u00a0\u00a0\u00a0 .file(\"src/foo.cc\")\n    .shared_flag(true)\n    .compile(\"libfoo.so\");\n</code></pre>\n\n<p>In some cases, I only need to call several functions, not all the functions. How can I use it?</p>\n"}, {"tags": ["eclipse", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "edited": false, "score": 0, "creation_date": 1540209541, "post_id": 52925073, "comment_id": 92766824, "body": "Thanks, that&#39;s exactly what I needed. And I can now conclude that it doesn&#39;t work \u2014 no highlighting at all takes place."}, {"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "reply_to_user": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "edited": false, "score": 0, "creation_date": 1540210130, "post_id": 52925073, "comment_id": 92767152, "body": "I see. I guess you have to fix something in <i>Window &gt; Preferences: Rust</i> or something is wrong with your Rust installation or both don&#39;t fit together. On Windows, <i>Rust Language Server Location</i> set to <i>Other installation</i> with  the <code>rls</code> path <code>C:\\Users\\User\\.rustup\\toolchains\\beta-x86_64-pc-windows-msvc&zwnj;&#8203;\\bin\\rls.exe</code> works for me."}, {"owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "edited": false, "score": 0, "creation_date": 1540210921, "post_id": 52925073, "comment_id": 92767569, "body": "Thanks for the suggestion. I&#39;m on macOS, but changing Rust Language Server Location from the default &quot;Use Rustup&quot; to the pre-filled values of &quot;Other installation&quot; and relaunching seems to have done the trick. Highlighting works, and ^Space as well. I&#39;m not sure why the default was broken \u2014 rustup is installed and working."}, {"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "reply_to_user": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "edited": false, "score": 0, "creation_date": 1540211513, "post_id": 52925073, "comment_id": 92767951, "body": "Maybe you first have to <a href=\"https://github.com/rust-lang-nursery/rustup.rs/blob/master/README.md\" rel=\"nofollow noreferrer\">install and activate a toolchain via Rustup (on the command line)</a> to be able to use the <i>Use Rustup</i> preference."}], "tags": [], "owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "is_accepted": true, "score": 2, "last_activity_date": 1540206236, "last_edit_date": 1540206236, "creation_date": 1540196661, "answer_id": 52925073, "question_id": 52922559, "link": "https://stackoverflow.com/questions/52922559/how-can-i-confirm-that-eclipse-content-assist-works-in-corrosion/52925073#52925073", "title": "How can I confirm that Eclipse content assist works in Corrosion?", "body": "<p>The <strong>proposals</strong> of the content assist come <strong>via</strong> <a href=\"https://en.wikipedia.org/wiki/Language_Server_Protocol\" rel=\"nofollow noreferrer\"><strong>Language Server Protocol</strong> (LSP)</a> <strong>from Rust</strong>, Eclipse Corrosion only displays them. To be more precise, the executable <code>rls</code> (<strong>r</strong>ust <strong>l</strong>anguage <strong>s</strong>erver), which is part of a rust version, makes the proposals via LSP.</p>\n\n<p>Therefore the proposals made <strong>depends on the Rust version</strong>. With Rustup you can install several versions in parallel and keep them up to date.</p>\n\n<p>With the following simple code snippet you can check if Eclipse Corrision is configured correctly and LSP works:</p>\n\n<pre><code>fn main() {\n    let foo = 1;\n    {\n        let foo = 2;\n        println!(\"{}\", foo);\n    }\n    println!(\"{}\", foo);\n}\n</code></pre>\n\n<p>If the cursor is set to the first <code>foo</code>, the first and the last <code>foo</code>, but not the two inner ones, should be highlighted (which is also implemented via LSP):</p>\n\n<p><a href=\"https://i.stack.imgur.com/e0K81.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/e0K81.png\" alt=\"enter image description here\"></a></p>\n"}, {"comments": [{"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 1, "creation_date": 1540339290, "post_id": 52929317, "comment_id": 92825840, "body": "The background color of these occurrences can be configured in <i>Window &gt; Preferences: General &gt; Editors &gt; Text Editors &gt; Annotations: LSP Text Occurrences</i>. Or right-click and choose <i>Switch to Theme... &gt; Monokai</i>. Please report this issue here: <a href=\"https://bugs.eclipse.org/bugs/enter_bug.cgi?product=LSP4E&amp;component=General\" rel=\"nofollow noreferrer\">bugs.eclipse.org/bugs/&hellip;</a>"}, {"owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "reply_to_user": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 0, "creation_date": 1540342908, "post_id": 52929317, "comment_id": 92826544, "body": "@howlger Oh wow, you&#39;re spot on, there it is. I Googled and experimented in two separate color preference panels, but came up empty. I wouldn&#39;t have found that in a hundred years. Regarding the bug, feel free to report it \u2014 I&#39;m currently awaiting resolution of a bug in the handling of accounts on eclipse.org before I decide on whether or not I&#39;ll keep using my account."}, {"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 0, "creation_date": 1540366473, "post_id": 52929317, "comment_id": 92833330, "body": "If someone wants to become a hero and fix the bug (which affects not only Eclipse Corrision), Eclipse EclEmma had the same problem (annotation color not adapted for dark theme): <a href=\"https://github.com/eclipse/eclemma/commit/db992c330651fc29391e3f8c22f484135a7a1cd1\" rel=\"nofollow noreferrer\">github.com/eclipse/eclemma/commit/&hellip;</a>"}, {"owner": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 0, "creation_date": 1540641125, "post_id": 52929317, "comment_id": 92945524, "body": "I reported the issue and contributed a fix (even though I prefer the light theme myself for ergonomic reasons): see <a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=540531\" rel=\"nofollow noreferrer\">Eclipse bug 540531</a>. It turned out that everything was there, but only one file was forgotten to include in the build. Such an issue is only visible with the plug-in built, not during development. Unfortunately, the error was not reported earlier. There is also a <a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=540531#c2\" rel=\"nofollow noreferrer\">workaround</a> if you don&#39;t want to wait for it until the next release."}, {"owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "reply_to_user": {"reputation": 21982, "user_id": 6505250, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FgNJn.jpg?s=128&g=1", "display_name": "howlger", "link": "https://stackoverflow.com/users/6505250/howlger"}, "edited": false, "score": 0, "creation_date": 1540646662, "post_id": 52929317, "comment_id": 92946886, "body": "@howlger \ud83d\udc4d nice. Thanks for the suggestion \u2014 I just changed the color, it works reasonably well for now. Dark theme is only necessary in the evenings. If I could I would have it switch automatically at a specific time, but since not even macOS seems to have thought about this obvious thing I&#39;ll just have it enabled permanently :)"}], "tags": [], "owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "is_accepted": false, "score": 0, "last_activity_date": 1540343207, "last_edit_date": 1540343207, "creation_date": 1540211080, "answer_id": 52929317, "question_id": 52922559, "link": "https://stackoverflow.com/questions/52922559/how-can-i-confirm-that-eclipse-content-assist-works-in-corrosion/52929317#52929317", "title": "How can I confirm that Eclipse content assist works in Corrosion?", "body": "<p>What finally solved the underlying problem was to change the Rust Language Server Location from the default \"Use Rustup\" to the pre-filled values of \"Other installation\" and relaunching.</p>\n\n<p>I don't know what the problem was though.</p>\n\n<p><em>It turned out that the actual symbol highlighting discussed above is broken in Eclipse's dark theme (white text on white background), <s>with no way of changing it in preferences</s> there is an obscure setting for this (see @howlger's comment), so in the end Eclipse turned out to <s>not be a serious contender</s> be a real hassle. Just a warning if you, like me, has dark theme as a requirement.</em> </p>\n"}], "owner": {"reputation": 2476, "user_id": 220820, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/354b06f54788837322add9b418d66587?s=128&d=identicon&r=PG", "display_name": "Andreas", "link": "https://stackoverflow.com/users/220820/andreas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 653, "favorite_count": 0, "accepted_answer_id": 52925073, "answer_count": 2, "score": 0, "last_activity_date": 1540348196, "creation_date": 1540183605, "last_edit_date": 1540348196, "question_id": 52922559, "link": "https://stackoverflow.com/questions/52922559/how-can-i-confirm-that-eclipse-content-assist-works-in-corrosion", "title": "How can I confirm that Eclipse content assist works in Corrosion?", "body": "<p>I thought I'd pick up Rust, so I installed it alongside Corrosion for Eclipse. Corrosion's description reads:</p>\n\n<blockquote>\n  <p>Corrosion provides a rich and smart Rust editor with: - Syntax highlighting (using TextMate grammar) and Error reporting, Hover. <strong>Content assist</strong>. Jump to references, Code Outline,  Formatting... provided by the Rust Language Server</p>\n</blockquote>\n\n<p>I've made sure to install RLS, and autocomplete seems to work without any problems in IntelliJ IDEA so I assume the install was successful. </p>\n\n<p>The RLS setting in Eclipse is set to \"Use Rustup\" \u2014 not really sure what that entails. The only warning (about missing RLS) on Eclipse's settings page for Rust went away as soon as I installed RLS, so I assume it detected it.</p>\n\n<p>Despite this nothing happens when pressing ^Space, which is the currently bound shortcut for content assist (e.g. after typing <code>use std::</code> or similar). Since I don't know what to expect from Corrosion I don't know if there's a problem or how to troubleshoot it.</p>\n\n<p>What should I expect from this Content Assist?</p>\n\n<pre><code>$ cargo --version\ncargo 1.29.0 (524a578d7 2018-08-05)\n$ rustc --version\nrustc 1.29.2 (17a9dc751 2018-10-05)\n</code></pre>\n"}, {"tags": ["rust", "object-lifetime"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1540201767, "post_id": 52920957, "comment_id": 92762406, "body": "In short, you need to store the closure in a <code>Box&lt;Option&lt;Fn()&gt;&gt;</code>.  Dynamically-sized types can&#39;t be stored on the stack and must be stored on the heap instead."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1540202162, "post_id": 52920957, "comment_id": 92762649, "body": "The last error message is indeed not particularly helpful.  When applying the <code>&amp;</code> operator to create a borrow, you can&#39;t specify a lifetime.  Rust figures out how long the variable you borrow lives automatically.  Since the parser does not expect a lifetime in this location, <code>&#39;static</code> is interpreted as a loop label instead.  Labels need to be followed by a colon, which is why the parser throws this particular error message."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540229374, "post_id": 52920957, "comment_id": 92778647, "body": "I&#39;d <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=ec771fbd9a5e15faa242663f8377e81a\" rel=\"nofollow noreferrer\">suggest an <code>Option&lt;Box&lt;...&gt;</code> instead</a>."}], "owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 0, "closed_date": 1540229213, "answer_count": 0, "score": 0, "last_activity_date": 1540228431, "creation_date": 1540166451, "last_edit_date": 1540228431, "question_id": 52920957, "link": "https://stackoverflow.com/questions/52920957/pass-a-closure-as-an-argument-and-store-it-to-be-called-later", "closed_reason": "Duplicate", "title": "Pass a closure as an argument and store it to be called later", "body": "<p>I have code similar to the following:</p>\n\n<pre><code>pub struct Delay {\n    // This line would also need to change, obviously\n    handle: Option&lt;&amp;'static Fn()&gt;,\n}\n\nimpl Delay {\n    pub fn new() -&gt; Delay {\n        Delay { handle: None }\n    }\n\n    pub fn do_later&lt;H&gt;(&amp;mut self, handle: H)\n    where\n        H: Fn(),\n    {\n        // This line is the problem child. Of all the things I've tried\n        // none of them work. Including...\n        self.handle = Some(handle);\n        self.handle = Some(&amp;handle);\n        self.handle = Some(&amp;'static handle);\n    }\n\n    pub fn do_now(&amp;self) {\n        match self.handle {\n            Some(handle) =&gt; handle(),\n            None =&gt; (),\n        };\n    }\n}\n\npub struct Action;\n\nimpl Action {\n    pub fn new() -&gt; Action {\n        Action\n    }\n\n    pub fn link(&amp;self, target: &amp;mut Delay) {\n        target.do_later(|| {\n            println!(\"Doin' stuff!!\");\n        })\n    }\n}\n\nfn main() {\n    let mut delay = Delay::new();\n    let action = Action::new();\n\n    action.link(&amp;mut delay);\n    delay.do_now();\n}\n</code></pre>\n\n<p>In reference to the <code>do_later</code> function that I'm having trouble with and the 3 ways I've tried to fix it...</p>\n\n<p><code>handle</code> has an unknown size at compile time. Okay, that's fine, we'll just do it by reference then.</p>\n\n<p><code>&amp;handle</code> may not live long enough, blah blah blah lifetimes. Okay, also fine. We just need to specify that it won't ever be cleared from memory by declaring it as static.</p>\n\n<p><code>&amp;'static handle</code> spits out this garbage...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `:`, found `handle`\n  --&gt; example.rs:13:42\n   |\n13 |             self.handle = Some(&amp;'static handle);\n   |                                         ^^^^^^ expected `:`\n</code></pre>\n\n<p>I have no idea what's going on. Shouldn't this be valid syntax? If not, what do I need to do differently?</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540156937, "post_id": 52919684, "comment_id": 92749465, "body": "The easiest solution is to enable non-lexical lifetimes (or simply use the beta version of the 2018 edition)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540157218, "post_id": 52919684, "comment_id": 92749521, "body": "Redeclaring <code>rdr</code> makes sure it is declared <i>after</i> <code>data_tuple</code>, so the former can&#39;t outlive the latter.  If you reuse the variable, the declaration order is the other way around, so <code>rdr</code> is only dropped after <code>data_tuple</code>, hence the error."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540157420, "post_id": 52919684, "comment_id": 92749573, "body": "Do you really have an error type called <code>Err</code>, which is in scope at the same time as the enum variant of the same name?"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1540186417, "post_id": 52922602, "comment_id": 92754965, "body": "The data type isn&#39;t really necessary.  Just <code>let data_tuple;</code> works fine.  Rust infers the type from the later assignment."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 2, "last_activity_date": 1540185494, "last_edit_date": 1540185494, "creation_date": 1540183974, "answer_id": 52922602, "question_id": 52919684, "link": "https://stackoverflow.com/questions/52919684/problems-with-tuples-lifetime-in-rust/52922602#52922602", "title": "Problems with Tuple&#39;s lifetime in rust.", "body": "<p>This is not connected with tuple lifetimes, this is just the drop order.</p>\n\n<p>When the variables are defined in separate <code>let</code> statements in the same scope (that is, in the same block), they will be dropped in <em>reverse</em> order. Looking at your code, we can see:</p>\n\n<pre><code>let mut rdr = Cursor::new(request);\nlet data_tuple = read_data(&amp;mut rdr).unwrap();\n</code></pre>\n\n<p>So, <code>data_tuple</code> will be dropped <em>first</em>, while <code>rdr</code> is still alive. This is bad, because <code>rdr</code> must reference the tuple. The easiest fix will be to swap their definitions:</p>\n\n<pre><code>let data_tuple: (u8, u8, Vec&lt;u8&gt;);\nlet mut rdr = Cursor::new(request);\ndata_tuple = read_data(&amp;mut rdr).unwrap();\n</code></pre>\n\n<p>This way, <code>rdr</code> will be dropped first, releasing the reference to <code>data_tuple</code> and letting the tuple be dropped itself.</p>\n\n<p>The \"fix\" you mentioned works, because every <code>let</code> statement defines new variable, <em>even if the same name is already used</em>, and the existing variable is immediately forgotten. So, when you write:</p>\n\n<pre><code>let mut rdr = Cursor::new(request);\nlet data_tuple = read_data(&amp;mut rdr).unwrap();\nlet mut rdr = Cursor::new(data_tuple.2.as_slice());\n</code></pre>\n\n<p>the second <code>rdr</code> is in no way connected with the first. Essentially, it's almost the same as declaring two different variables, say, <code>rdr</code> and <code>rdr2</code>, and using <code>rdr2</code> from this place until the end of function.</p>\n"}], "owner": {"reputation": 13, "user_id": 10537522, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50692ec8dde3234a97f95b7d8598b787?s=128&d=identicon&r=PG&f=1", "display_name": "d00rt", "link": "https://stackoverflow.com/users/10537522/d00rt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 0, "accepted_answer_id": 52922602, "answer_count": 1, "score": 1, "last_activity_date": 1540185494, "creation_date": 1540154495, "question_id": 52919684, "link": "https://stackoverflow.com/questions/52919684/problems-with-tuples-lifetime-in-rust", "title": "Problems with Tuple&#39;s lifetime in rust.", "body": "<p>I'm trying to implement a simple parser for a byte stream.</p>\n\n<p>I'm having troubles when I want to reuse a variable I declared previously,</p>\n\n<pre><code>fn read_data(asn_data: &amp;mut Cursor&lt;&amp;[u8]&gt;) -&gt; Result&lt;(u8, u8, Vec&lt;u8&gt;), Err&gt; {\n    let total_len = asn_data.get_ref().len();\n\n    if total_len &lt; 2 {\n        return Err(1);\n    }\n    let d_type = asn_data.read_u8().unwrap();\n    let d_len = asn_data.read_u8().unwrap();\n\n    if (asn_data.position() + d_len as u64) &gt; total_len as u64 {\n        return Err(2);\n    }\n\n    let mut buf = vec![0; d_len as usize];\n\n    match asn_data.read_exact(&amp;mut buf) {\n        Err(e) =&gt; Err(e),\n        Ok(()) =&gt; Ok((d_type, d_len, buf)),\n    }\n\n}\n\nfn parse_request(request: &amp;[u8]) -&gt; Option&lt;u8&gt; {\n\n    if request.len() == 0 {\n        return None;\n    }\n\n    let mut rdr = Cursor::new(request);\n    let data_tuple = read_data(&amp;mut rdr).unwrap();\n    println!(\"{:02?}\", data_tuple.2);\n\n    rdr = Cursor::new(data_tuple.2.as_slice());\n    let data_tuple = read_data(&amp;mut rdr).unwrap();\n    println!(\"{:02x?}\", data_tuple.2);\n\n    Some(1)\n}\n</code></pre>\n\n<p>In the parse_request function I want to reuse rdr variable, but with the code shown above I get the next error when compiling:</p>\n\n<blockquote>\n  <p>error[E0597]: <code>data_tuple.2</code> does not live long enough    -->\n  src/main.rs:80:23\n      | 80  |     rdr = Cursor::new(data_tuple.2.as_slice());\n      |                       ^^^^^^^^^^^^ borrowed value does not live long enough ... 104 | }\n      | - <code>data_tuple.2</code> dropped here while still borrowed\n      |\n      = note: values in a scope are dropped in the opposite order they are created</p>\n  \n  <p>error: aborting due to previous error</p>\n</blockquote>\n\n<p>However if I write \"let mut\" when I use the 2nd time rdr variable, the code compiles and works fine... </p>\n\n<pre><code>let mut rdr = Cursor::new(data_tuple.2.as_slice());\n</code></pre>\n\n<p>I don't understand why... what I want is to reuse the variable instead to declare it again...</p>\n\n<p>I tried with some examples/issues related to variable life time but I didn't get the solution for my case... and the solution I found I don't understand fully...</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1540153697, "post_id": 52919531, "comment_id": 92748707, "body": "<code>&#39;\u306e&#39; as u16</code>, hex encode. If you want to operate on an entire string and you\u2019re confident that it\u2019s all kanji, you <i>can</i> encode it as UTF-16."}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 1, "creation_date": 1540154105, "post_id": 52919531, "comment_id": 92748817, "body": "...though of course if one is looking for code points then <code>as u32</code> would be highly recommended. True that utf-16 good enough for Kanji today but in general that encoding is just a mess. Many characters will fail to give the correct code point with <code>u16</code>."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1540211653, "post_id": 52919531, "comment_id": 92768046, "body": "<code>&quot;\u306e\ud83d\ude0e&quot;.chars().map(|ch| ch as u32).collect::&lt;Vec&lt;_&gt;&gt;()</code>, though using <code>.chars()</code> directly should be sufficient in most cases. Note that the \ud83d\ude0e needs more than 16 bits."}], "answers": [{"comments": [{"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 5, "creation_date": 1540154309, "post_id": 52919570, "comment_id": 92748854, "body": "I&#39;d go as far as to say &quot;don&#39;t EVER use <code>u16</code> at all!&quot; It&#39;s just misleading and an unncessary &quot;optimization.&quot; But kudos for working out and showing that the <code>as u16</code> silently drops off the higher-order 16 bits of the code point. That&#39;s good information to have and nicely researched. I&#39;d suggest phrasing it more as &quot;Don&#39;t do this&quot; because you might know your characters are all in the BMP today, but tomorrow they might not be."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1540154401, "post_id": 52919570, "comment_id": 92748876, "body": "Thank you. By the way, do you know how to get its Shift JIS value? Should I use a lookup table?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1540154551, "post_id": 52919570, "comment_id": 92748911, "body": "@RayToal I agree and changed the wording slightly."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 1, "creation_date": 1540154606, "post_id": 52919570, "comment_id": 92748921, "body": "@AurevoirXavier I just googled that for you \u2013 here you go: <a href=\"https://stackoverflow.com/questions/48136939/how-do-i-use-the-shift-jis-encoding-in-rust\" title=\"how do i use the shift jis encoding in rust\">stackoverflow.com/questions/48136939/&hellip;</a>"}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1540154815, "post_id": 52919570, "comment_id": 92748989, "body": "@SvenMarnach You saved my day!"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1540154838, "post_id": 52919570, "comment_id": 92748993, "body": "@AurevoirXavier Glad to help. :)"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 10, "last_activity_date": 1613614328, "last_edit_date": 1613614328, "creation_date": 1540153686, "answer_id": 52919570, "question_id": 52919531, "link": "https://stackoverflow.com/questions/52919531/how-to-get-a-chars-unicode-value/52919570#52919570", "title": "How to get a char&#39;s unicode value?", "body": "<p>The <code>char</code> type can be cast to <code>u32</code> using <code>as</code>.  The line</p>\n<pre><code>println!(&quot;{:x}&quot;, '\u306e' as u32);\n</code></pre>\n<p>will print &quot;306e&quot; (using <code>{:x}</code> to format the number as hex).</p>\n<p>If you are sure all your characters are in the <a href=\"https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane\" rel=\"nofollow noreferrer\">BMP</a>, you can in theory also cast directly to <code>u16</code>.  For characters from supplementary planes this will silently give wrong results, though, e.g. <code>'\ud83d\udf56' as u16</code> returns <code>0xf756</code> instead of the correct <code>0x1f756</code>, so you need a strong reason to do this.</p>\n<p>Internally, a <code>char</code> is stored as a 32-bit number, so <code>c as u32</code> for some character <code>c</code> only reinterprets the memory representation of the character as an <code>u32</code>.</p>\n"}], "owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1414, "favorite_count": 0, "accepted_answer_id": 52919570, "answer_count": 1, "score": 4, "last_activity_date": 1613614328, "creation_date": 1540153407, "last_edit_date": 1540155108, "question_id": 52919531, "link": "https://stackoverflow.com/questions/52919531/how-to-get-a-chars-unicode-value", "title": "How to get a char&#39;s unicode value?", "body": "<p>I want to get Kanji's Unicode value. It might be something looks like <code>let values: &amp;[u16] = f(\"\u306e\u306e\u306e\");</code></p>\n\n<p>When I use <code>\"\u306e\".as_bytes()</code> I got <code>[227, 129, 174]</code>.</p>\n\n<p>When I use <code>'\u306e'.escape_unicode()</code> I got <code>'\\u306e'</code>, the <code>0x306e</code> is what exactly I want.</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540153524, "post_id": 52919494, "comment_id": 92748663, "body": "str != String !"}, {"owner": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540203917, "post_id": 52919494, "comment_id": 92763591, "body": "What should this tell me? I know that str is different from String... the first unwrap doesn&#39;t return a String, this is a HeaderValue, if this would be the idea... or because of the title? I&#39;ve put in a &quot;string value&quot;. ;-)"}, {"owner": {"reputation": 10246, "user_id": 762363, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cec6320f5a5a8253b3dbfbb8177e001?s=128&d=identicon&r=PG", "display_name": "Tarmil", "link": "https://stackoverflow.com/users/762363/tarmil"}, "edited": false, "score": 0, "creation_date": 1540396750, "post_id": 52919494, "comment_id": 92853112, "body": "I guess you could replace <code>.unwrap().to_str()</code> with <code>.and_then(HeaderValue::to_str)</code> to have one less panic risk."}], "answers": [{"comments": [{"owner": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "edited": false, "score": 0, "creation_date": 1583973724, "post_id": 56925633, "comment_id": 107295878, "body": "Ok. I&#39;ve expected that a webframework provides something like your <code>fn get_content_type</code> and not everybody needs to reinvent it. But thanks."}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "edited": false, "score": 0, "creation_date": 1584018853, "post_id": 56925633, "comment_id": 107311474, "body": "@Markus Depends on your perspective. actix-web gives you an API to the HTTP-protocol, with all the things that might fail. In this lower level context, getting the content type is straight forward. If you only want to work at a higher level, you can copy this code and publish it to crates.io \ud83d\ude09"}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": true, "score": 8, "last_activity_date": 1562530361, "last_edit_date": 1562530361, "creation_date": 1562529327, "answer_id": 56925633, "question_id": 52919494, "link": "https://stackoverflow.com/questions/52919494/is-there-simpler-method-to-get-the-string-value-of-an-actix-web-http-header/56925633#56925633", "title": "Is there simpler method to get the string value of an Actix-Web HTTP header?", "body": "<p>Yes, that is the \"only\" possibility, but it's like that because:</p>\n\n<ol>\n<li>The header may not exist, <code>headers().get(key)</code> returns <code>Option</code>.</li>\n<li>The header may have non-ASCII chars, and <code>HeaderValue::to_str</code> might fail.</li>\n</ol>\n\n<p>actix-web lets you handle those errors individually.</p>\n\n<p>To simplify, you could make a helper function that does not differentiate between the two errors:</p>\n\n<pre><code>fn get_content_type&lt;'a&gt;(req: &amp;'a HttpRequest) -&gt; Option&lt;&amp;'a str&gt; {\n    req.headers().get(\"content-type\")?.to_str().ok()\n}\n</code></pre>\n\n<p>Full example:</p>\n\n<pre><code>use actix_web::{web, App, HttpRequest, HttpServer, Responder};\n\nfn main() {\n    HttpServer::new(|| App::new().route(\"/\", web::to(handler)))\n        .bind(\"127.0.0.1:8000\")\n        .expect(\"Cannot bind to port 8000\")\n        .run()\n        .expect(\"Unable to run server\");\n}\n\nfn handler(req: HttpRequest) -&gt; impl Responder {\n    if let Some(content_type) = get_content_type(&amp;req) {\n        format!(\"Got content-type = '{}'\", content_type)\n    } else {\n        \"No content-type header.\".to_owned()\n    }\n}\n\nfn get_content_type&lt;'a&gt;(req: &amp;'a HttpRequest) -&gt; Option&lt;&amp;'a str&gt; {\n    req.headers().get(\"content-type\")?.to_str().ok()\n}\n</code></pre>\n\n<p>Which will give you the results:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl localhost:8000\nNo content-type header.\u23ce\n$ curl localhost:8000 -H 'content-type: application/json'\nGot content-type = 'application/json'\u23ce\n$ curl localhost:8000 -H 'content-type: \ud83d\udca9'\nNo content-type header.\u23ce\n</code></pre>\n\n<p>By the way, you may be interested in <a href=\"https://docs.rs/actix-web/1.0.3/actix_web/guard/index.html\" rel=\"noreferrer\">guards</a>:</p>\n\n<pre><code>web::route()\n    .guard(guard::Get())\n    .guard(guard::Header(\"content-type\", \"text/plain\"))\n    .to(handler)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 455, "user_id": 5628396, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/08f7ccebb610d0e2e1d21bededc21648?s=128&d=identicon&r=PG&f=1", "display_name": "David Bell", "link": "https://stackoverflow.com/users/5628396/david-bell"}, "edited": false, "score": 0, "creation_date": 1613073358, "post_id": 60688660, "comment_id": 116971223, "body": "Forgive my newbie question but what does Actix do/return when your unwrap fails, for example if you have an emoji in the header value?"}, {"owner": {"reputation": 1428, "user_id": 9888500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A0V6D.jpg?s=128&g=1", "display_name": "Esteban Borai", "link": "https://stackoverflow.com/users/9888500/esteban-borai"}, "reply_to_user": {"reputation": 455, "user_id": 5628396, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/08f7ccebb610d0e2e1d21bededc21648?s=128&d=identicon&r=PG&f=1", "display_name": "David Bell", "link": "https://stackoverflow.com/users/5628396/david-bell"}, "edited": false, "score": 0, "creation_date": 1613160694, "post_id": 60688660, "comment_id": 117000505, "body": "No problem, all questions are valid questions! When you call <code>unwrap</code> on any value, Rust your thread will panic if the resulting variant is either <code>Err</code> or <code>None</code> (based on the type returned), and application exits. Using <code>unwrap</code> most of the time is not recommended, the right approach is to handle the variant resulting from the <code>get</code> call."}], "tags": [], "owner": {"reputation": 1428, "user_id": 9888500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A0V6D.jpg?s=128&g=1", "display_name": "Esteban Borai", "link": "https://stackoverflow.com/users/9888500/esteban-borai"}, "is_accepted": false, "score": 0, "last_activity_date": 1613161034, "last_edit_date": 1613161034, "creation_date": 1584232390, "answer_id": 60688660, "question_id": 52919494, "link": "https://stackoverflow.com/questions/52919494/is-there-simpler-method-to-get-the-string-value-of-an-actix-web-http-header/60688660#60688660", "title": "Is there simpler method to get the string value of an Actix-Web HTTP header?", "body": "<p>I use the following from a route:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[get(&quot;/auth/login&quot;)]\nasync fn login(request: HttpRequest, session: Session) -&gt; Result&lt;HttpResponse, ApiError&gt; {\n    let req_headers = request.headers();\n\n    let basic_auth_header = req_headers.get(&quot;Authorization&quot;);\n    let basic_auth: &amp;str = basic_auth_header.unwrap().to_str().unwrap();\n    // Keep in mind that calling &quot;unwrap&quot; here could make your application\n    // panic. The right approach at this point is to evaluate the resulting\n    // enum variant from `get`'s call\n\n    println!(&quot;{}&quot;, basic_auth); // At this point I have the value of the header as a string\n\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 362, "user_id": 3819791, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/4Mha2.png?s=128&g=1", "display_name": "Markus", "link": "https://stackoverflow.com/users/3819791/markus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3236, "favorite_count": 1, "accepted_answer_id": 56925633, "answer_count": 2, "score": 6, "last_activity_date": 1613161034, "creation_date": 1540153071, "last_edit_date": 1562529606, "question_id": 52919494, "link": "https://stackoverflow.com/questions/52919494/is-there-simpler-method-to-get-the-string-value-of-an-actix-web-http-header", "title": "Is there simpler method to get the string value of an Actix-Web HTTP header?", "body": "<p>Is this is the only possibility to get the content-type header from an Actix-Web request? This has to check if the header is available or if <code>to_str</code> failed...</p>\n\n<pre><code>let req: actix_web::HttpRequest;\n\nlet content_type: &amp;str = req\n    .request()\n    .headers()\n    .get(actix_web::http::header::CONTENT_TYPE)\n    .unwrap()\n    .to_str()\n    .unwrap();\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1540136040, "post_id": 52916892, "comment_id": 92743758, "body": "Please include which version/toolchain of the compiler you are using."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1540305013, "post_id": 52916892, "comment_id": 92811017, "body": "The <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c6efc9041151a780f420bd74aa7fd42c\" rel=\"nofollow noreferrer\">code you have provided does not produce the error you say it will</a>, even when using the 2018 edition. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "edited": false, "score": 0, "creation_date": 1540151082, "post_id": 52916993, "comment_id": 92748075, "body": "Thanks. I left out unintentionally that I&#39;m using 2018 edition."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1540136315, "creation_date": 1540136315, "answer_id": 52916993, "question_id": 52916892, "link": "https://stackoverflow.com/questions/52916892/why-do-i-get-cant-find-crate-when-using-a-module-in-rust-2018/52916993#52916993", "title": "Why do I get &quot;can&#39;t find crate&quot; when using a module in Rust 2018?", "body": "<p>You seem to be using the 2018 edition of Rust.  There have been a <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/module-system/path-clarity.html#changes-to-paths\" rel=\"nofollow noreferrer\">few changes to paths in <code>use</code> declarations</a> since the 2015 edition (aka Rust 1.0).  The path after a <code>use</code> declaration now always needs to start with a crate name, the <code>crate</code> keyword denoting the root of the crate, <code>self</code> denoting the current module or <code>super</code> denoting the parent module.  So either of these two <code>use</code> declarations should work:</p>\n\n<pre><code>pub use self::bindings::*;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>pub use crate::bindings::*;\n</code></pre>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 278, "favorite_count": 0, "accepted_answer_id": 52916993, "answer_count": 1, "score": 0, "last_activity_date": 1540304866, "creation_date": 1540135627, "last_edit_date": 1540304866, "question_id": 52916892, "link": "https://stackoverflow.com/questions/52916892/why-do-i-get-cant-find-crate-when-using-a-module-in-rust-2018", "title": "Why do I get &quot;can&#39;t find crate&quot; when using a module in Rust 2018?", "body": "<p>I have a <code>lib.rs</code> file containing:</p>\n\n<pre><code>mod bindings {\n    // ...\n}\n\npub use bindings::*;\n</code></pre>\n\n<p>What I get from <code>rustc</code> is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|  pub use bindings::*;\n|          ^^^^^^^^ can't find crate\n</code></pre>\n\n<p>Why does Rust think <code>bindings</code> is a crate instead of module?</p>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540111896, "post_id": 52911942, "comment_id": 92737352, "body": "Since <code>fn(M) -&gt; M</code> has static lifetime and does not implement <code>Drop</code>, transmuting <code>PhantomData&lt;fn(M) -&gt; M&gt;</code> to <code>PhantomData&lt;()&gt;</code> shouldn&#39;t have any observable effect except for type checking."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1540125521, "post_id": 52911942, "comment_id": 92740765, "body": "Is there more than one non zero-sized field in the struct?"}, {"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1540130278, "post_id": 52911942, "comment_id": 92742096, "body": "@CodesInChaos In the real struct, yes."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1540131258, "post_id": 52911942, "comment_id": 92742389, "body": "This doesn&#39;t answer the question, but in terms of design, I would rather seek to newtype those markers instead of making that a logic of the container. Thus, a value of <code>struct PlayerMapMarker(String)</code> could not be added to a <code>Map&lt;ItemMapMarker&gt;</code>."}, {"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1540132022, "post_id": 52911942, "comment_id": 92742591, "body": "@E_net4 As I said, it doesn&#39;t make that much sense taken out of context. In <a href=\"https://github.com/orlp/slotmap\" rel=\"nofollow noreferrer\">the real data structure</a> it is the <b>keys</b> that are marked, and the user doesn&#39;t get to choose their own key type, it is always the same."}], "answers": [{"tags": [], "owner": {"reputation": 491, "user_id": 5282385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f909f7c0f578c26cc98852294a416cc?s=128&d=identicon&r=PG", "display_name": "Ralf Jung", "link": "https://stackoverflow.com/users/5282385/ralf-jung"}, "is_accepted": true, "score": 4, "last_activity_date": 1540298596, "last_edit_date": 1540298596, "creation_date": 1540278537, "answer_id": 52943104, "question_id": 52911942, "link": "https://stackoverflow.com/questions/52911942/is-transmuting-phantomdata-markers-safe/52943104#52943104", "title": "Is transmuting PhantomData markers safe?", "body": "<p><strong>TL;DR:</strong> Add <code>#[repr(C)]</code> and you should be good.</p>\n\n<hr>\n\n<p>There are two separate concerns here: Whether the transmute is valid in the sense of returning valid data at the return type, and whether the entire thing violates any higher-level invariants that might be attached to the involved types. (In the terminology of my <a href=\"https://www.ralfj.de/blog/2018/08/22/two-kinds-of-invariants.html\" rel=\"nofollow noreferrer\">blog post</a>, you have to make sure that both validity and safety invariants are maintained.)</p>\n\n<p>For the validity invariant, you are in uncharted territory. The compiler could decide to lay out <code>Map&lt;T, M&gt;</code> very differently from <code>Map&lt;T, ()&gt;</code>, i.e. the <code>data</code> field could be at a different offset and there could be spurious padding. It does not seem likely, but so far we are guaranteeing very little here. Discussion about what we can and want to guarantee there is <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/labels/topic-repr\" rel=\"nofollow noreferrer\">happening right now</a>. We purposefully want to avoid making too many guarantees about <code>repr(Rust)</code> to avoid painting ourselves into a corner.</p>\n\n<p>What you could do is to add <code>repr(C)</code> to your struct, then I am fairly sure you can count on ZSTs not changing anything (but I <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/pull/31/files#r227250383\" rel=\"nofollow noreferrer\">asked for clarification</a> just to be sure). For <code>repr(C)</code> we provide more guarantees about how the struct is laid out, which in fact is its entire purpose. If you want to play tricks with struct layout, you should probably add that attribute.</p>\n\n<p>For the higher-level safety invariant, you must be careful not to create a broken <code>Map</code> and let that \"leak\" beyond the borders of your API (into the surrounding safe code), i.e. you shouldn't return an instance of <code>Map</code> that violates any invariants you might have put on it. Moreover, <code>PhantomData</code> has some effects on variance and the drop checker that you should be aware of. With the types that are being transmuted being so trivial (your marker types don't require dropping, i.e. them and their transitive fields all do not implement <code>Drop</code>) I do not think you have to expect any problem from this side.</p>\n\n<p>To be clear, <code>repr(Rust)</code> (the default) might also be fine once we decide this is something we want to guarantee -- and ignoring size-0-align-1 types (like <code>PhantomData</code>) entirely seems like a pretty sensible guarantee to me. Personally though I'd still advise for using <code>repr(C)</code> unless that has a cost you are not willing to pay (e.g. because you lose the compilers automatic size-reduction-by-reordering and cannot replicate it manually).</p>\n"}], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 1, "accepted_answer_id": 52943104, "answer_count": 1, "score": 7, "last_activity_date": 1540298596, "creation_date": 1540093208, "question_id": 52911942, "link": "https://stackoverflow.com/questions/52911942/is-transmuting-phantomdata-markers-safe", "title": "Is transmuting PhantomData markers safe?", "body": "<p>This is taken <a href=\"https://github.com/orlp/slotmap\" rel=\"noreferrer\">out of context</a> so it might seem a bit weird, but I have the following data structure:</p>\n\n<pre><code>use std::marker::PhantomData;\n\npub struct Map&lt;T, M=()&gt; {\n    data: Vec&lt;T&gt;,\n    _marker: PhantomData&lt;fn(M) -&gt; M&gt;,\n}\n</code></pre>\n\n<p><code>Map</code> is an associative map where keys are \"marked\" to prevent using keys from one map on another unrelated map. Users can opt into this by passing some unique type they've made as <code>M</code>, for example:</p>\n\n<pre><code>struct PlayerMapMarker;\nlet mut player_map: Map&lt;String, PlayerMapMarker&gt; = Map::new();\n</code></pre>\n\n<p>This is all fine, but some iterators (e.g. the ones giving only values) I want to write for this map do not contain the marker in their type. Would the following transmute be safe to discard the marker?</p>\n\n<pre><code>fn discard_marker&lt;T, M&gt;(map: &amp;Map&lt;T, M&gt;) -&gt; &amp;Map&lt;T, ()&gt; {\n    unsafe { std::mem::transmute(map) }\n}\n</code></pre>\n\n<p>So that I could write and use:</p>\n\n<pre><code>fn values(&amp;self) -&gt; Values&lt;T&gt; {\n    Values { inner: discard_marker(self).iter() }\n}\n\nstruct Values&lt;'a, T&gt; {\n    inner: Iter&lt;'a, T, ()&gt;,\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540078012, "post_id": 52910783, "comment_id": 92732628, "body": "please be more specific, what do want to stock ? How do you want use it ? In definitive, a procedural macro can do more than macro, but are not magic, store a state need to stock it somewhere, static, const, something else."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540113205, "post_id": 52910783, "comment_id": 92737671, "body": "You probably mean <code>match</code> instead of <code>map</code> in the code you would like to generate.  You also need to add a catch-all branch."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540113355, "post_id": 52910783, "comment_id": 92737708, "body": "Regarding your actual question, I&#39;d keep it explicit and define an <code>enum</code> with the types.  You could define a simple declarative macro to reduce the boilerplate."}], "answers": [{"comments": [{"owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "edited": false, "score": 0, "creation_date": 1540117187, "post_id": 52914046, "comment_id": 92738632, "body": "AH, yes I did see that issue but I thought someone might have come up with a solution."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 10, "last_activity_date": 1565295497, "last_edit_date": 1565295497, "creation_date": 1540115604, "answer_id": 52914046, "question_id": 52910783, "link": "https://stackoverflow.com/questions/52910783/is-it-possible-to-store-state-within-rusts-procedural-macros/52914046#52914046", "title": "Is it possible to store state within Rust&#39;s procedural macros?", "body": "<p>Currently there is no officially supported way to store state that can be used by two different proc macro invocations. I created <a href=\"https://github.com/rust-lang/rust/issues/44034\" rel=\"nofollow noreferrer\">this very related issue</a> where this problem is discussed. </p>\n\n<p>Storing state is certainly possible, but just in a hacky way. You could, for example, serialize all your state into <code>/tmp/my-state</code>. Or you could try using <code>static</code> global variables. But even if this works now, this is not guaranteed to work in the future. Another problem: due to incremental compilation, it is not guaranteed that all of your proc macro invocations are actually executed. So if you have one macro that generates the state and one that reads it, if the first is not executed, really strange things happen. So it is technically possible to store global state, but it's not advisable.</p>\n\n<p>In the issue linked above, you can see that MSleepyPanda <a href=\"https://github.com/rust-lang/rust/issues/44034#issuecomment-392582763\" rel=\"nofollow noreferrer\">proposed a possible solution</a>, but we are far from having this implemented.</p>\n"}], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1343, "favorite_count": 1, "accepted_answer_id": 52914046, "answer_count": 1, "score": 9, "last_activity_date": 1565295497, "creation_date": 1540076442, "last_edit_date": 1558360696, "question_id": 52910783, "link": "https://stackoverflow.com/questions/52910783/is-it-possible-to-store-state-within-rusts-procedural-macros", "title": "Is it possible to store state within Rust&#39;s procedural macros?", "body": "<p>Is it possible to build a macro that doesn't output anything but instead stores state to build up a list and then a second macro that will then actually use that data?</p>\n\n<p>For example:</p>\n\n<pre><code>trait SomeTrait {}\n\n#[derive(mark)]\nstruct Person {}\n\nimpl SomeTrait for Person {}\n\n#[derive(mark)]\nstruct Item {}\n\nimpl SomeTrait for Item  {}\n\n#[derive(mark)]\nstruct Object {}\n\nimpl SomeTrait for Object {}\n\ncreate_mapper! // this then outputs the below function\n//assuming for the fact that data is loaded correctly before this macro is used\n\nfn select_item(kind: String) -&gt; impl SomeTrait {\n    match kind {\n        \"person\" =&gt; Person,\n        \"item\" =&gt; Item,\n        \"object\" =&gt; Object,        \n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "mutable", "borrowing"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1540065990, "post_id": 52909623, "comment_id": 92730002, "body": "<i>&quot;Why this code compile without error?&quot;</i> -- <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c6ead91ff0b8297bf2c9c1cd2f4a376a\" rel=\"nofollow noreferrer\">It doesn&#39;t?</a>"}, {"owner": {"reputation": 20930, "user_id": 6881240, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dc1e27d7e9a3de2ca8e257cb7c72ff4a?s=128&d=identicon&r=PG&f=1", "display_name": "kabanus", "link": "https://stackoverflow.com/users/6881240/kabanus"}, "edited": false, "score": 0, "creation_date": 1540066033, "post_id": 52909623, "comment_id": 92730015, "body": "Yea, I just posted an answer and only now noticed you say it compiles. Are you sure?"}, {"owner": {"reputation": 71, "user_id": 5603609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bb19e51100e20964963c0ae56429e11?s=128&d=identicon&r=PG", "display_name": "Sargis", "link": "https://stackoverflow.com/users/5603609/sargis"}, "edited": false, "score": 2, "creation_date": 1540066801, "post_id": 52909623, "comment_id": 92730227, "body": "Yes it compiles."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1540070287, "post_id": 52909623, "comment_id": 92731218, "body": "Cannot reproduce in stable or nightly, with or without optimizations."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1540076090, "post_id": 52909623, "comment_id": 92732369, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">What are non-lexical lifetimes?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 5603609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bb19e51100e20964963c0ae56429e11?s=128&d=identicon&r=PG", "display_name": "Sargis", "link": "https://stackoverflow.com/users/5603609/sargis"}, "edited": false, "score": 0, "creation_date": 1540066775, "post_id": 52909682, "comment_id": 92730217, "body": "I use nightly version Rust. Maybe because of this."}, {"owner": {"reputation": 71, "user_id": 5603609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bb19e51100e20964963c0ae56429e11?s=128&d=identicon&r=PG", "display_name": "Sargis", "link": "https://stackoverflow.com/users/5603609/sargis"}, "edited": false, "score": 0, "creation_date": 1540067101, "post_id": 52909682, "comment_id": 92730306, "body": "Thanks for the answer. When i add  println!(&quot;{}&quot;, x.data); and println!(&quot;{}&quot;, y.data); it does not compile. And sorry for my bad english..."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1540072394, "post_id": 52909682, "comment_id": 92731736, "body": "NLL are not an optimization. The borrow-checker does its job before any optimization and is a purely semantic and artificial restriction, so the &quot;smartly optimizes the code as&quot; remark makes no sense."}], "tags": [], "owner": {"reputation": 434, "user_id": 6649816, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-TQJKUCa5q_M/AAAAAAAAAAI/AAAAAAAABDg/GQgsVqO9luU/photo.jpg?sz=128", "display_name": "Guillaume Quintard", "link": "https://stackoverflow.com/users/6649816/guillaume-quintard"}, "is_accepted": false, "score": 4, "last_activity_date": 1540075114, "last_edit_date": 1540075114, "creation_date": 1540066073, "answer_id": 52909682, "question_id": 52909623, "link": "https://stackoverflow.com/questions/52909623/rust-multiple-mutable-borrowing/52909682#52909682", "title": "Rust multiple mutable borrowing", "body": "<p>On my rust version (1.29.1), I do have the multi-borrow errors.</p>\n\n<p>I think you are benefiting from non-lexical lifetimes here, that or the compiler smartly optimizes* the code as:</p>\n\n<pre><code>let mut foo = Foo::new(\"hello\");\n\n{ let x = &amp;mut foo; }\n{ let y = &amp;mut foo; }\n\nprintln!(\"{}\", foo.data);\n</code></pre>\n\n<p>which works because you are not using <code>x</code> and <code>y</code>.</p>\n\n<p>*: from @mcarton: optimizations occurs after the borrow-check pass, so the only option is NLL.</p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 9, "last_activity_date": 1540072242, "creation_date": 1540072242, "answer_id": 52910421, "question_id": 52909623, "link": "https://stackoverflow.com/questions/52909623/rust-multiple-mutable-borrowing/52910421#52910421", "title": "Rust multiple mutable borrowing", "body": "<p>You are probably benefiting from non-lexical lifetimes which have been <a href=\"https://internals.rust-lang.org/t/announcing-rust-2018-preview-2/8218\" rel=\"noreferrer\">enabled by default since Rust 1.30</a> while using the 2018 edition.</p>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">What are non-lexical lifetimes?</a>.</p>\n"}], "owner": {"reputation": 71, "user_id": 5603609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bb19e51100e20964963c0ae56429e11?s=128&d=identicon&r=PG", "display_name": "Sargis", "link": "https://stackoverflow.com/users/5603609/sargis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1514, "favorite_count": 1, "answer_count": 2, "score": 6, "last_activity_date": 1540075114, "creation_date": 1540065645, "question_id": 52909623, "link": "https://stackoverflow.com/questions/52909623/rust-multiple-mutable-borrowing", "title": "Rust multiple mutable borrowing", "body": "<p>I'm trying Rust and have issues with understanding \"borrowing\". </p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    data: T,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn new(data: T) -&gt; Self {\n        Foo {\n            data: data,\n        }\n    }\n}\n\nfn main() {\n    let mut foo = Foo::new(\"hello\");\n\n    let x = &amp;mut foo;\n    let y = &amp;mut foo;\n\n    println!(\"{}\", foo.data);\n\n}\n</code></pre>\n\n<p>Why this code compile without error? After all, I'm get a multiple mutable references on <code>foo</code>. The following is written to documentation:</p>\n\n<p><strong>The Rules of References</strong><br>\nLet\u2019s recap what we\u2019ve discussed about references:</p>\n\n<p>a) At any given time, you can have either (but not both of) one mutable reference or any number of immutable references.</p>\n\n<p>b) References must always be valid.</p>\n\n<p>What is the reason for this behavior? Thanks!</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540048834, "post_id": 52906921, "comment_id": 92725067, "body": "your code don&#39;t compile. how many time did you run launch the test ? <code>thread_rng().sample_iter(&amp;Standard).take(LEN * 2).collect();</code> could replace <code>rand_array()</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1540050326, "post_id": 52906921, "comment_id": 92725500, "body": "Very interesting! As far as <a href=\"https://rust.godbolt.org/z/8HCeTI\" rel=\"nofollow noreferrer\">I can see</a>: (a) the <code>loop</code> version still has bound checks and (b) the assembly of the <code>iter</code> version checks if the length is a multiple of 4 and then uses a loop which munches 4 floats at once (partial loop unrolling). And still, I see roughly the same timings on my machine (20ms/23ms). Fairly consistently."}, {"owner": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 0, "creation_date": 1540050611, "post_id": 52906921, "comment_id": 92725594, "body": "The semicolon at the end of the <code>dot_product_iter</code> call should be removed, otherwise, the compiler could decide to eliminate it entirely (it doesn&#39;t seem to, though)."}, {"owner": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 1, "creation_date": 1540050690, "post_id": 52906921, "comment_id": 92725618, "body": "Increasing <code>LEN</code> I find the run time gets closer and closer, and if I make both functions <code>#[inline(never)]</code> then the loop variant is always slower (the inline version probably can avoid the loop bound checks)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 1, "creation_date": 1540051018, "post_id": 52906921, "comment_id": 92725715, "body": "@DavidBrown When increasing <code>LEN</code>, iter get a net avantage."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1540051764, "post_id": 52906921, "comment_id": 92725947, "body": "@Stargateur I added the missing lines to make it compile using cut-n&#39;-paste. I have launched the benchmark several times with about the same result (1ns up and down for both cases). The generation of the random array is not part of what is measured, but yes, you suggestion would work."}, {"owner": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "edited": false, "score": 0, "creation_date": 1540051842, "post_id": 52906921, "comment_id": 92725965, "body": "when I use <code>x.iter().zip(y).fold(0f64, |r, (&amp;a, &amp;b)| r + a * b)</code>, the iter version is never slower on my pc. (I have to store the result in the bench function, to avoid it fully optimized away (<code>result = dot_product_iter...</code>). (using the version before the last edit)."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1540051997, "post_id": 52906921, "comment_id": 92726007, "body": "@LukasKalbertodt Yes, I compiled both the <a href=\"https://godbolt.org/z/Aj_vlg\" rel=\"nofollow noreferrer\">iterator version</a> and the <a href=\"https://godbolt.org/z/SmB8ZG\" rel=\"nofollow noreferrer\">loop version</a> and noted the same. What I don&#39;t understand is why they perform so differently even though the iterator version uses loop unrolling. For the pipeline, this should be very efficient, but for some reason it is not."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 0, "creation_date": 1540052117, "post_id": 52906921, "comment_id": 92726041, "body": "@DavidBrown I updated the post. I actually benchmarked the one without the semicolon but forgot to update the post I wrote. PTAL."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 14451, "user_id": 33499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c590aa4c56918b47c7ba5e39dba5d8?s=128&d=identicon&r=PG", "display_name": "wimh", "link": "https://stackoverflow.com/users/33499/wimh"}, "edited": false, "score": 0, "creation_date": 1540052215, "post_id": 52906921, "comment_id": 92726074, "body": "@wimh That is indeed very interesting. I would expect that the compiler should be able to combine the <code>sum</code> and <code>map</code> into what you wrote using <code>foldr</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1540302709, "post_id": 52936731, "comment_id": 92809472, "body": "Very interesting indeed. I consistently get 20 and 24 for the two benchmarks. Also using 1.31.0."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1540302882, "post_id": 52936731, "comment_id": 92809583, "body": "Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz with 16 GB RAM."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1540404854, "post_id": 52936731, "comment_id": 92857586, "body": "I took your code and tried that on a different machine (Intel(R) Core(TM) i3-4160 CPU @ 3.60GHz). For some reason, I get 20ns and 16ns. Why?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1540237481, "creation_date": 1540237481, "answer_id": 52936731, "question_id": 52906921, "link": "https://stackoverflow.com/questions/52906921/zero-cost-abstractions-performance-of-for-loop-vs-iterators/52936731#52936731", "title": "Zero-cost abstractions: performance of for-loop vs. iterators", "body": "<p>It seems zero cost to me. I wrote your code slightly more idiomatically, using the same random values for both tests, and then tested multiple times:</p>\n\n<pre><code>fn dot_product_1(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    let mut result: f64 = 0.0;\n    for i in 0..min(x.len(), y.len()) {\n        result += x[i] * y[i];\n    }\n    result\n}\n\nfn dot_product_2(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    x.iter().zip(y).map(|(&amp;a, &amp;b)| a * b).sum()\n}\n</code></pre>\n\n\n\n<pre><code>fn rand_array(cnt: usize) -&gt; Vec&lt;f64&gt; {\n    let mut rng = rand::rngs::StdRng::seed_from_u64(42);\n    rng.sample_iter(&amp;rand::distributions::Standard).take(cnt).collect()\n}\n\n#[bench]\nfn bench_small_1(b: &amp;mut Bencher) {\n    let samples = rand_array(2 * LEN);\n    let (s0, s1) = samples.split_at(LEN);\n    b.iter(|| dot_product_1(s0, s1))\n}\n\n#[bench]\nfn bench_small_2(b: &amp;mut Bencher) {\n    let samples = rand_array(2 * LEN);\n    let (s0, s1) = samples.split_at(LEN);\n    b.iter(|| dot_product_2(s0, s1))\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>bench_small_1   20 ns/iter (+/- 6)\nbench_small_2   17 ns/iter (+/- 1)\n\nbench_small_1   19 ns/iter (+/- 3)\nbench_small_2   17 ns/iter (+/- 2)\n\nbench_small_1   19 ns/iter (+/- 5)\nbench_small_2   17 ns/iter (+/- 3)\n\nbench_small_1   19 ns/iter (+/- 3)\nbench_small_2   24 ns/iter (+/- 7)\n\nbench_small_1   28 ns/iter (+/- 1)\nbench_small_2   24 ns/iter (+/- 1)\n\nbench_small_1   27 ns/iter (+/- 1)\nbench_small_2   25 ns/iter (+/- 1)\n\nbench_small_1   28 ns/iter (+/- 1)\nbench_small_2   25 ns/iter (+/- 1)\n\nbench_small_1   28 ns/iter (+/- 1)\nbench_small_2   25 ns/iter (+/- 1)\n\nbench_small_1   28 ns/iter (+/- 0)\nbench_small_2   25 ns/iter (+/- 1)\n\nbench_small_1   28 ns/iter (+/- 1)\nbench_small_2   17 ns/iter (+/- 1)\n</code></pre>\n\n<p>In 9 of the 10 runs, the idiomatic code was faster than the for loop. This was done on 2.9 GHz Core i9 (I9-8950HK)  with 32 GB RAM, compiled with <code>rustc 1.31.0-nightly (fc403ad98 2018-09-30)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 456, "user_id": 21074, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/df27a60f48d1aa274c4784cc394d3110?s=128&d=identicon&r=PG", "display_name": "L. Kolmodin", "link": "https://stackoverflow.com/users/21074/l-kolmodin"}, "is_accepted": false, "score": 1, "last_activity_date": 1540566147, "last_edit_date": 1540566147, "creation_date": 1540504870, "answer_id": 52998717, "question_id": 52906921, "link": "https://stackoverflow.com/questions/52906921/zero-cost-abstractions-performance-of-for-loop-vs-iterators/52998717#52998717", "title": "Zero-cost abstractions: performance of for-loop vs. iterators", "body": "<p>For fun, I rewrote the benchmark to use <a href=\"https://crates.io/crates/criterion\" rel=\"nofollow noreferrer\">criterion</a>, a port of the Haskell benchmarking library.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"mats-zero-cost-rust\"\nversion = \"0.1.0\"\nauthors = [\"mats\"]\n\n[dev-dependencies]\ncriterion = \"0.2\"\nrand = \"0.4\"\n\n[[bench]]\nname = \"my_benchmark\"\nharness = false\n</code></pre>\n\n<p><strong>benches/my_benchmark.rs</strong></p>\n\n<pre><code>#[macro_use]\nextern crate criterion;\nextern crate rand;\n\nuse std::cmp::min;\n\nuse criterion::Criterion;\n\nuse rand::{thread_rng, Rng};\n\nconst LEN: usize = 30;\n\nfn dot_product_loop(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    let mut result: f64 = 0.0;\n    for i in 0..min(x.len(), y.len()) {\n        result += x[i] * y[i];\n    }\n    return result;\n}\n\nfn dot_product_iter(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    x.iter().zip(y).map(|(&amp;a, &amp;b)| a * b).sum()\n}\n\nfn rand_array(cnt: u32) -&gt; Vec&lt;f64&gt; {\n    let mut rng = thread_rng();\n    (0..cnt).map(|_| rng.gen()).collect()\n}\n\nfn criterion_loop_with_slice(c: &amp;mut Criterion) {\n    c.bench_function(\"loop with slice\", |b| {\n        let samples = rand_array(2 * LEN as u32);\n        b.iter(|| dot_product_loop(&amp;samples[0..LEN], &amp;samples[LEN..2 * LEN]))\n    });\n}\n\nfn criterion_loop_without_slice(c: &amp;mut Criterion) {\n    c.bench_function(\"loop without slice\", |b| {\n        let samples = rand_array(2 * LEN as u32);\n        let (s0, s1) = samples.split_at(LEN);\n        b.iter(|| dot_product_loop(s0, s1))\n    });\n}\n\nfn criterion_iter_with_slice(c: &amp;mut Criterion) {\n    c.bench_function(\"iterators with slice\", |b| {\n        let samples = rand_array(2 * LEN as u32);\n        b.iter(|| dot_product_iter(&amp;samples[0..LEN], &amp;samples[LEN..2 * LEN]))\n    });\n}\n\nfn criterion_iter_without_slice(c: &amp;mut Criterion) {\n    c.bench_function(\"iterators without slice\", |b| {\n        let samples = rand_array(2 * LEN as u32);\n        let (s0, s1) = samples.split_at(LEN);\n        b.iter(|| dot_product_iter(s0, s1))\n    });\n}\n\ncriterion_group!(benches, criterion_loop_with_slice, criterion_loop_without_slice, criterion_iter_with_slice, criterion_iter_without_slice);\ncriterion_main!(benches);\n</code></pre>\n\n<p>I observe these results;</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>kolmodin@blin:~/code/mats-zero-cost-rust$ cargo bench\n   Compiling mats-zero-cost-rust v0.1.0 (/home/kolmodin/code/mats-zero-cost-rust)                                                                                                                                  \n    Finished release [optimized] target(s) in 1.16s                                                                                                                                                                \n     Running target/release/deps/my_benchmark-6f00e042fd40bc1d\nGnuplot not found, disabling plotting\nloop with slice         time:   [7.5794 ns 7.6843 ns 7.8016 ns]                             \nFound 14 outliers among 100 measurements (14.00%)\n  1 (1.00%) high mild\n  13 (13.00%) high severe\n\nloop without slice      time:   [24.384 ns 24.486 ns 24.589 ns]                                \nFound 3 outliers among 100 measurements (3.00%)\n  2 (2.00%) low severe\n  1 (1.00%) low mild\n\niterators with slice    time:   [13.842 ns 13.852 ns 13.863 ns]                                  \nFound 6 outliers among 100 measurements (6.00%)\n  1 (1.00%) low mild\n  4 (4.00%) high mild\n  1 (1.00%) high severe\n\niterators without slice time:   [13.420 ns 13.424 ns 13.430 ns]                                     \nFound 12 outliers among 100 measurements (12.00%)\n  1 (1.00%) low mild\n  1 (1.00%) high mild\n  10 (10.00%) high severe\n\nGnuplot not found, disabling plotting\n</code></pre>\n\n<p>Using <code>rustc 1.30.0 (da5f414c2 2018-10-24)</code> on an AMD Ryzen 7 2700X.</p>\n\n<p>The iterator implementation gets similar results for using <code>slice</code> and <code>split_at</code>.</p>\n\n<p>The loop implementation gets very different results. The version with slice is significantly faster.</p>\n"}], "owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1763, "favorite_count": 0, "accepted_answer_id": 52936731, "answer_count": 2, "score": 10, "last_activity_date": 1540566147, "creation_date": 1540047160, "last_edit_date": 1540443421, "question_id": 52906921, "link": "https://stackoverflow.com/questions/52906921/zero-cost-abstractions-performance-of-for-loop-vs-iterators", "title": "Zero-cost abstractions: performance of for-loop vs. iterators", "body": "<p>Reading the <a href=\"https://ruudvanasseldonk.com/2016/11/30/zero-cost-abstractions\" rel=\"nofollow noreferrer\">Zero-cost abstractions</a> and looking at <a href=\"https://www.slideshare.net/yann_s/introduction-to-rust-a-lowlevel-language-with-highlevel-abstractions\" rel=\"nofollow noreferrer\">Introduction to rust: a low-level language with high-level abstractions</a> I tried to compare two approaches to computing the dot product of a vector: one using a for loop and one using iterators.</p>\n\n<pre><code>#![feature(test)]\n\nextern crate rand;\nextern crate test;\n\nuse std::cmp::min;\n\nfn dot_product_1(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    let mut result: f64 = 0.0;\n    for i in 0..min(x.len(), y.len()) {\n        result += x[i] * y[i];\n    }\n    return result;\n}\n\nfn dot_product_2(x: &amp;[f64], y: &amp;[f64]) -&gt; f64 {\n    x.iter().zip(y).map(|(&amp;a, &amp;b)| a * b).sum::&lt;f64&gt;()\n}\n\n#[cfg(test)]\nmod bench {\n    use test::Bencher;\n    use rand::{Rng,thread_rng};\n    use super::*;\n\n    const LEN: usize = 30;\n\n    #[test]\n    fn test_1() {\n        let x = [1.0, 2.0, 3.0];\n        let y = [2.0, 4.0, 6.0];\n        let result = dot_product_1(&amp;x, &amp;y);\n        assert_eq!(result, 28.0);\n    }\n\n    #[test]\n    fn test_2() {\n        let x = [1.0, 2.0, 3.0];\n        let y = [2.0, 4.0, 6.0];\n        let result = dot_product_2(&amp;x, &amp;y);\n        assert_eq!(result, 28.0);\n    }\n\n    fn rand_array(cnt: u32) -&gt; Vec&lt;f64&gt; {\n        let mut rng = thread_rng();\n        (0..cnt).map(|_| rng.gen::&lt;f64&gt;()).collect()\n\n    }\n\n    #[bench]\n    fn bench_small_1(b: &amp;mut Bencher) {\n        let samples = rand_array(2*LEN as u32);\n        b.iter(|| {\n            dot_product_1(&amp;samples[0..LEN], &amp;samples[LEN..2*LEN])\n        })\n    }\n\n    #[bench]\n    fn bench_small_2(b: &amp;mut Bencher) {\n        let samples = rand_array(2*LEN as u32);\n        b.iter(|| {\n            dot_product_2(&amp;samples[0..LEN], &amp;samples[LEN..2*LEN])\n        })\n    }\n}\n</code></pre>\n\n<p>The later of the links above claims that the version with the iterators should have similar performance \"and actually be a little bit faster\". However, when benchmarking the two, I get very different results:</p>\n\n<pre><code>running 2 tests\ntest bench::bench_small_loop ... bench:          20 ns/iter (+/- 1)\ntest bench::bench_small_iter ... bench:          24 ns/iter (+/- 2)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 2 measured; 0 filtered out\n</code></pre>\n\n<p>So, where did the \"zero-cost abstraction\" go?</p>\n\n<p><strong>Update:</strong> Adding the <code>foldr</code> example provided by @wimh and using <code>split_at</code> instead of slices give the following result.</p>\n\n<pre><code>running 3 tests\ntest bench::bench_small_fold ... bench:          18 ns/iter (+/- 1)\ntest bench::bench_small_iter ... bench:          21 ns/iter (+/- 1)\ntest bench::bench_small_loop ... bench:          24 ns/iter (+/- 1)\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 3 measured; 0 filtered out\n</code></pre>\n\n<p>So it seems that the additional time comes directly or indirectly from constructing the slices inside the measured code. To check that it indeed was the case, I tried the following two approaches with the same result (here shown for <code>foldr</code> case and using <code>map</code> + <code>sum</code>):</p>\n\n<pre><code>#[bench]\nfn bench_small_iter(b: &amp;mut Bencher) {\n    let samples = rand_array(2 * LEN);\n    let s0 = &amp;samples[0..LEN];\n    let s1 = &amp;samples[LEN..2 * LEN];\n    b.iter(|| dot_product_iter(s0, s1))\n}\n\n#[bench]\nfn bench_small_fold(b: &amp;mut Bencher) {\n    let samples = rand_array(2 * LEN);\n    let (s0, s1) = samples.split_at(LEN);\n    b.iter(|| dot_product_fold(s0, s1))\n}\n</code></pre>\n"}, {"tags": ["debugging", "visual-studio-code", "rust", "lldb"], "owner": {"reputation": 2503, "user_id": 4737924, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06ff2f73692374431f3ddba82498dd9b?s=128&d=identicon&r=PG", "display_name": "Aleksander Wons", "link": "https://stackoverflow.com/users/4737924/aleksander-wons"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 194, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1540042557, "creation_date": 1540042557, "question_id": 52906249, "link": "https://stackoverflow.com/questions/52906249/rust-type-visualization-in-vscode-does-not-work-despite-setting-sourcelanguages", "title": "Rust type visualization in VSCode does not work despite setting sourceLanguages", "body": "<p>Problem</p>\n\n<p>I can't figure how to set up VSCode to properly visualize Rust types while debugging. Every variable is said to be of C type even though I added <code>\"sourceLanguages\": [\"rust\"]</code> to my launch.json.</p>\n\n<p>My current setup</p>\n\n<ul>\n<li>rustc 1.31.0-nightly (bef62ccdd 2018-10-16)</li>\n<li>VSCode version: 1.28.2</li>\n<li>lldb version 6.0.1</li>\n<li>CodeLLDB version 1.0.0</li>\n</ul>\n\n<p>Here is the launch.json</p>\n\n<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"lldb\",\n            \"request\": \"launch\",\n            \"sourceLanguages\": [\"rust\"],\n            \"name\": \"main\",\n            \"program\": \"target/debug/chip8-emulator\",\n            \"args\": [\"/home/alex/Downloads/chip8_roms/PONG\"],\n            \"cwd\": \"${workspaceRoot}\"\n        }\n    ]\n}\n</code></pre>\n\n<p>Is there anything else I need to configure to make the visualization of types work correctly?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1540015313, "creation_date": 1540015313, "answer_id": 52902885, "question_id": 52902143, "link": "https://stackoverflow.com/questions/52902143/how-to-make-a-struct-accept-type-impl-stdopsfn-as-its-field/52902885#52902885", "title": "How to make a struct accept type `impl std::ops::Fn&lt;()&gt;` as its field?", "body": "<p>Just use a generic type argument.</p>\n\n<pre><code>fn return_closure() -&gt; impl Fn() {\n    move || {\n        println!(\"abc\");\n    }\n}\n\nstruct HoldClosure&lt;F: Fn()&gt; {\n    closure: F,\n}\n\nfn main() {    \n    let hold_my_closure = HoldClosure {\n        closure: return_closure()\n    };\n\n    (hold_my_closure.closure)();\n}\n</code></pre>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 52902885, "answer_count": 1, "score": 0, "last_activity_date": 1540015313, "creation_date": 1540006068, "question_id": 52902143, "link": "https://stackoverflow.com/questions/52902143/how-to-make-a-struct-accept-type-impl-stdopsfn-as-its-field", "title": "How to make a struct accept type `impl std::ops::Fn&lt;()&gt;` as its field?", "body": "<p>In Rust 1.26 a new feature called impl Trait was stabilized which makes function able to return an unboxed closure. But how to define a struct field's type for an unboxed closure, code below doesn't compile:</p>\n\n<pre><code>fn return_closure() -&gt; impl Fn() -&gt; () {\n    move || {\n        println!(\"abc\");\n    }\n}\n\nstruct HoldClosure {\n    closure: impl Fn() -&gt; ()\n}\n\nfn main() {    \n    let hold_my_closure = HoldClosure {\n        closure: return_closure()\n    };\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1540025552, "post_id": 52903936, "comment_id": 92719033, "body": "As a side not, fixed-length arrays can also be destructured \u2013 that&#39;s not really a difference between the two types.  It is a lot more common to destructure tuples, though."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1540043447, "post_id": 52903936, "comment_id": 92723384, "body": "I&#39;d said that the most important difference was shown in the other answer: array can be iterated, sliced, indexed by variable, etc., and all we can do with tuples is destructuring and constant indexing. Arrays are limited in content, but much more flexible in usage, in other words."}], "tags": [], "owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "is_accepted": false, "score": 10, "last_activity_date": 1540026346, "last_edit_date": 1540026346, "creation_date": 1540025232, "answer_id": 52903936, "question_id": 52902137, "link": "https://stackoverflow.com/questions/52902137/what-is-the-difference-between-tuples-and-array-in-rust/52903936#52903936", "title": "What is the difference between tuples and array in rust?", "body": "<h1>Array</h1>\n\n<ul>\n<li>collection of values of the same type</li>\n<li>fixed-sized collection</li>\n</ul>\n\n<h2>Accessing element</h2>\n\n<p>You can access element of array by array's name, square brackets, and index, ex:</p>\n\n<pre><code>let arr = [22, 433, 55];\nassert_eq!(arr[0], 22);\n</code></pre>\n\n<h2>Destructing array</h2>\n\n<p>Arrays can be destructed into multiple variables, ex:</p>\n\n<pre><code>let arr = [1, 42 ,309];\nlet [id, code, set] = arr;\n\nassert_eq!(id, 1);\nassert_eq!(code, 42);\nassert_eq!(set, 309);\n</code></pre>\n\n<h1>Tuple</h1>\n\n<ul>\n<li>collection of values of different types</li>\n<li>finite heterogeneous sequence</li>\n</ul>\n\n<h2>Accessing element</h2>\n\n<p>You can access element of tuple by tuple's name, dot, and index, ex:</p>\n\n<pre><code>let tup = (22, \"str\", 55);\nassert_eq!(tup.0, 22);\n</code></pre>\n\n<h2>Functions</h2>\n\n<p>Tuples may be used to return multiple values from functions, ex: </p>\n\n<pre><code>fn num(i: u32) -&gt; (i64, u32) {\n    (-33, 33 + i)\n}\n\nassert_eq!(num(12), (-33, 45));\n</code></pre>\n\n<h2>Destructing tuples</h2>\n\n<p>Tuples can also be destructed and it's more common practise to destruct tuples rather than arrays, ex:</p>\n\n<pre><code>let tup = (212, \"Wow\", 55);\nlet (num, word, id) = tup;\n\nassert_eq!(num, 212);\nassert_eq!(word, \"Wow\");\nassert_eq!(id, 55);\n</code></pre>\n\n<p>Useful resources:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch03-02-data-types.html#compound-types\" rel=\"noreferrer\">Compound Types - The Rust Programming Language</a></li>\n<li><a href=\"https://doc.rust-lang.org/rust-by-example/primitives/tuples.html\" rel=\"noreferrer\">Tuples - Rust by example</a></li>\n<li><a href=\"https://doc.rust-lang.org/rust-by-example/primitives/array.html\" rel=\"noreferrer\">Arrays and Slices - Rust by example</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 12, "last_activity_date": 1540044761, "last_edit_date": 1540044761, "creation_date": 1540025373, "answer_id": 52903950, "question_id": 52902137, "link": "https://stackoverflow.com/questions/52902137/what-is-the-difference-between-tuples-and-array-in-rust/52903950#52903950", "title": "What is the difference between tuples and array in rust?", "body": "<p>An array is a list of items of homogeneous type.  You can iterate over it and index or slice it with dynamic indices.  It should be used for homegeneous collections of items that play the same role in the code.  In general, you will iterate over an array at least once in your code.</p>\n\n<p>A tuple is a fixed-length agglomeration of heterogeneous items.  It should be thought of as a <code>struct</code> with anonymous fields.  The fields generally have different meaning in the code, and you can't iterate over it.</p>\n"}, {"tags": [], "owner": {"reputation": 18897, "user_id": 8059459, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9f0fc0fd607fc44a4597cacb7f034ba6?s=128&d=identicon&r=PG&f=1", "display_name": "Willem van der Veen", "link": "https://stackoverflow.com/users/8059459/willem-van-der-veen"}, "is_accepted": false, "score": 0, "last_activity_date": 1606560742, "creation_date": 1606560742, "answer_id": 65048804, "question_id": 52902137, "link": "https://stackoverflow.com/questions/52902137/what-is-the-difference-between-tuples-and-array-in-rust/65048804#65048804", "title": "What is the difference between tuples and array in rust?", "body": "<p><strong>Tuples:</strong></p>\n<ul>\n<li>Items can be heterogenous types</li>\n<li>Fixed number of items</li>\n<li>Indexing via <code>.</code> syntax e.g <code>myTuple.0</code> for first element</li>\n<li>Mutable only with <code>mut</code> keyword</li>\n</ul>\n<p><strong>Arrays:</strong></p>\n<ul>\n<li>Item are same type</li>\n<li>Fixed number of items</li>\n<li>Indexing via <code>[]</code> syntax e.g <code>myArr.[0]</code> for first element</li>\n<li>Mutable only with <code>mut</code> keyword</li>\n</ul>\n<p><strong>Example:</strong></p>\n<p>For the example I have declared the types explicitly so you can the what types the variables are. In your code you can leave them out\nusually since the compiler will infer them.</p>\n<pre><code>fn main() {\n    let mut tupleA: (i32, i32, &amp;str) = (3434, 5634, &quot;abc&quot;);    \n    let tupleB: (char, i32, bool) = ('d', 456, false);    \n\n    let mut arrayA: [i32; 3] = [1,2,3];\n    let arrayB: [bool; 4] = [false, true, false, true];\n\n    tupleA.1 = 5;\n    arrayA[0] = 5;\n\n    println!(&quot;{:?} {:?} {:?} {:?}&quot;, tupleA, tupleB, arrayA, arrayB)\n    // prints (3434, 5, &quot;abc&quot;) ('d', 456, false) [5, 2, 3] [false, true, false, true]\n\n}\n</code></pre>\n"}], "owner": {"reputation": 940, "user_id": 3594927, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/0200248d9de6dd7199e6f0c1ed2f63db?s=128&d=identicon&r=PG", "display_name": "abhishek_M", "link": "https://stackoverflow.com/users/3594927/abhishek-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3238, "favorite_count": 1, "accepted_answer_id": 52903950, "answer_count": 3, "score": 9, "last_activity_date": 1606560742, "creation_date": 1540005978, "question_id": 52902137, "link": "https://stackoverflow.com/questions/52902137/what-is-the-difference-between-tuples-and-array-in-rust", "title": "What is the difference between tuples and array in rust?", "body": "<p>The only real difference I can figure out after reading the beginner guide, is that in tuple you can have values of multiple types? Both are immutable?</p>\n\n<p>And what are the use cases where I'd want a tuple or array, apart from the obvious one. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1540059357, "last_edit_date": 1540059357, "creation_date": 1540034890, "answer_id": 52905147, "question_id": 52902081, "link": "https://stackoverflow.com/questions/52902081/can-you-create-a-function-that-takes-another-function-and-a-parameter-and-return/52905147#52905147", "title": "Can you create a function that takes another function and a parameter and returns a lazy stream of nested function calls?", "body": "<p>You can repeatedly call a closure using <a href=\"https://doc.rust-lang.org/nightly/std/iter/fn.repeat_with.html\" rel=\"nofollow noreferrer\"><code>std::iter::repeat_with()</code></a>:</p>\n\n<pre><code>repeat_with(move || {\n    let result = x;\n    x = f(x);\n    result\n})\n</code></pre>\n\n<p>The return value is an iterator over the successive return values of the closure.</p>\n\n<p>We use <code>move</code> to move <code>x</code> into the closure, as the current state of our iteration.  Inside the closure we update <code>x</code> with <code>f(x)</code> and return the old value (so in the first iteration we return the original <code>x</code>).</p>\n\n<p>Here is a complete working example:</p>\n\n<pre><code>use std::iter::repeat_with;\n\nfn collatz(n: u64) -&gt; u64 {\n    match n % 2 {\n        0 =&gt; n / 2,\n        _ =&gt; 3 * n + 1,\n    }\n}\n\nfn iterate&lt;F, X&gt;(f: F, mut x: X) -&gt; impl Iterator&lt;Item = X&gt;\nwhere\n    F: Fn(X) -&gt; X,\n    X: Copy,\n{\n    repeat_with(move || {\n        let result = x;\n        x = f(x);\n        result\n    })\n}\n\nfn main() {\n    for i in iterate(collatz, 12).take_while(|&amp;x| x != 1) {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=3b9375df9984e45098f663c9af86cb66\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1555011746, "creation_date": 1555011746, "answer_id": 55640072, "question_id": 52902081, "link": "https://stackoverflow.com/questions/52902081/can-you-create-a-function-that-takes-another-function-and-a-parameter-and-return/55640072#55640072", "title": "Can you create a function that takes another function and a parameter and returns a lazy stream of nested function calls?", "body": "<p>As of Rust 1.34, you can use <a href=\"https://doc.rust-lang.org/std/iter/fn.successors.html\" rel=\"nofollow noreferrer\"><code>iter::successors</code></a>:</p>\n\n<pre><code>fn coltz(n: u64) -&gt; Option&lt;u64&gt; {\n    match n % 2 {\n        0 =&gt; Some(n / 2),\n        _ =&gt; Some(3 * n + 1),\n    }\n}\n\nuse std::iter;\n\nfn main() {\n    let sequence = iter::successors(Some(10), |&amp;v| coltz(v)).take_while(|&amp;v| v != 1);\n    for v in sequence {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>12\n6\n3\n10\n5\n16\n8\n4\n2\n</code></pre>\n"}], "owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 1, "accepted_answer_id": 52905147, "answer_count": 2, "score": 7, "last_activity_date": 1555011746, "creation_date": 1540004977, "last_edit_date": 1541779985, "question_id": 52902081, "link": "https://stackoverflow.com/questions/52902081/can-you-create-a-function-that-takes-another-function-and-a-parameter-and-return", "title": "Can you create a function that takes another function and a parameter and returns a lazy stream of nested function calls?", "body": "<p>In Clojure, I use a function called <a href=\"https://clojuredocs.org/clojure.core/iterate\" rel=\"nofollow noreferrer\"><code>iterate</code></a> that:</p>\n\n<blockquote>\n  <p>Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects</p>\n</blockquote>\n\n<p>Is there something similar in Rust? </p>\n\n<p>For example, I have this function that I'd like to pass to a function with a number and then iterate over a stream/range/vector until I find <code>Some(1)</code>:</p>\n\n<pre><code>fn coltz(n: u64) -&gt; Option&lt;u64&gt; {\n    match n % 2 {\n        0 =&gt; Some(n / 2), \n        _ =&gt; Some(3 * n + 1)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1540039767, "creation_date": 1540039767, "answer_id": 52905826, "question_id": 52901894, "link": "https://stackoverflow.com/questions/52901894/clean-way-for-struct-to-reassign-multiple-fields-using-an-associated-function/52905826#52905826", "title": "Clean way for struct to reassign multiple fields using an associated function?", "body": "<p>You can update a subset of the fields of <code>self</code> using assignment:</p>\n\n<pre><code>*self = Self { one, two, five, seven, eight, ..*self };\n</code></pre>\n\n<p>This updates the named fields with the matching local variables, and leaves the remaining fields unchanged.  I'm not sure, though, whether this is more readable than what you have.</p>\n\n<p>I would also consider a few other options.  The return type of <code>do_fancy_calculation()</code> doesn't really convey much meaning \u2013 maybe return a <code>struct</code> instead?  If the function is always used to update the state of <code>Thing</code>s, you could make it an associated function that directly updates <code>Thing</code>, so you wouldn't need to merge the return values into <code>Thing</code> anymore.</p>\n"}], "owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 52905826, "answer_count": 1, "score": 0, "last_activity_date": 1540039767, "creation_date": 1540002174, "question_id": 52901894, "link": "https://stackoverflow.com/questions/52901894/clean-way-for-struct-to-reassign-multiple-fields-using-an-associated-function", "title": "Clean way for struct to reassign multiple fields using an associated function?", "body": "<p>Consider this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=3ea13de5b58d924e2c217cc30c8e08d1\" rel=\"nofollow noreferrer\">playground</a> example:</p>\n\n<pre><code>#[allow(dead_code)]\nstruct Things {\n    zero: usize,\n    one: usize,\n    ...\n    nine: usize,\n}\n\nfn do_fancy_calculation() -&gt; (usize, usize, usize, usize, usize) {\n    (1, 1, 1, 1, 1)\n}\n\nimpl Things {\n    fn renew(&amp;mut self) {\n        // does not work:\n        // let self {one, two, five, seven, eight} = do_fancy_calculation();\n\n        //\n        let (one, two, five, seven, eight) = do_fancy_calculation();\n        self.one = one;\n        self.two = two;\n        self.five = five;\n        self.seven = seven;\n        self.eight = eight;\n    }\n}\n\nfn main() {\n    let (zero, one, two, three, four, five, six, seven, eight, nine) =\n        (0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\n    let mut things = Things {\n        zero,\n        ...\n        nine,\n    };\n\n    things.renew();\n\n    println!(\"{}\", things.one);\n}\n</code></pre>\n\n<p>How can I nicely assign to <code>one, two, five, seven, eight</code>, without resorting to multiple <code>self.x = y;</code> type statements? </p>\n\n<p>I call the toy associated function <code>renew</code> because in my actual use case, the struct represents the state of something, and I need to refresh/renew/recreate some variables to represent changes in state. Am I going about solving my use case the wrong way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 1, "creation_date": 1539996499, "post_id": 52901245, "comment_id": 92714975, "body": "Why not just use a mutable reference?"}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1539996781, "post_id": 52901245, "comment_id": 92715018, "body": "If you mean a mutable reference in the UnsafeStruct that would not work because I need unsafe behavior."}, {"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1539996854, "post_id": 52901245, "comment_id": 92715030, "body": "Can you clarify what you mean with &quot;I need unsafe behavior&quot;?"}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1539997208, "post_id": 52901245, "comment_id": 92715072, "body": "I need raw pointer functionality. I need to manipulate a struct directly outside borrow checking rules."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1540036853, "post_id": 52901245, "comment_id": 92721568, "body": "You can store a mutable reference in the struct, and cast it to a raw pointer in your unsafe code when needed."}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1540060693, "post_id": 52901245, "comment_id": 92728473, "body": "No you can not because then you would have multiple mutable references in existence."}], "answers": [{"comments": [{"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1540073193, "post_id": 52906739, "comment_id": 92731894, "body": "I created my own answer explaining exactly what was going on because your answer does not directly answer my question about using <code>std::marker::PhantomData</code>. The documentation and information around <code>PhantomData</code> are light and I got the wrong impression from some of the wording. I thought the borrow checking behavior was different because the <code>PhantomData</code> reference does not actually exist in the runtime code and is just there for compiler clarification."}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1540073214, "post_id": 52906739, "comment_id": 92731898, "body": "Your information is correct about the lifetimes, cells, interior mutability, and etc. It just is not quite relevant to what I was trying to achieve. I provided a simplified example to show the problem with <code>PhantomData</code> I was having. The example is not representative of my actual code. I do not want / can not convert it to safe code using cells or other interior mutability."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1540045904, "creation_date": 1540045904, "answer_id": 52906739, "question_id": 52901245, "link": "https://stackoverflow.com/questions/52901245/how-can-i-use-phantomdata-in-a-struct-with-raw-pointers-such-that-the-struct-d/52906739#52906739", "title": "How can I use PhantomData in a struct, with raw pointers, such that the struct does not outlive the lifetime of the referenced other struct?", "body": "<p><strong>TL;DR</strong> What you're doing violates the exclusivity requirement of mutable references, but you can use shared references and internal mutability to make an API that works.</p>\n\n<p>A <code>&amp;mut T</code> reference represents <em>exclusive</em> access to a <code>T</code>. When you borrow an object with <code>&amp;mut</code>, that object must not be accessed (mutably or immutably), through any other reference, for the lifetime of the <code>&amp;mut</code> borrow. In this example:</p>\n\n<pre><code>let mut test = Test { value: 0 };\nlet mut unsafe_struct: UnsafeStruct;\nunsafe_struct = UnsafeStruct::new(&amp;mut test);\n\nunsafe_struct.set_test_value(1);\ntest.value();\n\ntest.set_value(2);\nunsafe_struct.test_value();\n</code></pre>\n\n<p><code>unsafe_struct</code> keeps the <code>&amp;mut</code> borrow of <code>test</code> alive. It doesn't matter that internally it contains a raw pointer; it could contain nothing. The <code>'a</code> in <code>UnsafeStruct&lt;'a&gt;</code> extends the lifetime of the borrow, making it undefined behavior to access <code>test</code> directly, until after <code>unsafe_struct</code> is used for the last time.</p>\n\n<p>The example suggests that you actually want <em>shared</em> access to a resource (that is, shared between <code>test</code> and <code>unsafe_struct</code>). Rust has a shared reference type; it's <code>&amp;T</code>. If you want the original <code>T</code> to still be accessible while a borrow is live, that borrow <em>has</em> to be shared (<code>&amp;</code>), not exclusive (<code>&amp;mut</code>).</p>\n\n<p>How do you mutate something if all you have is a shared reference? Using <strong>internal mutability</strong>.</p>\n\n<pre><code>use std::cell::Cell;\n\npub struct Test {\n    value: Cell&lt;u32&gt;,\n}\n\nimpl Test {\n    pub fn value(&amp;self) {\n        println!(\"{}\", self.value.get())\n    }\n\n    pub fn set_value(&amp;self, value: u32) {\n        self.value.set(value);\n    }\n}\n\npub struct SafeStruct&lt;'a&gt; {\n    test: &amp;'a Test,\n}\n\nimpl&lt;'a&gt; SafeStruct&lt;'a&gt; {\n    pub fn new(test: &amp;'a Test) -&gt; SafeStruct&lt;'a&gt; {\n        SafeStruct { test }\n    }\n\n    pub fn test_value(&amp;self) {\n        println!(\"{}\", self.test.value.get())\n    }\n\n    pub fn set_test_value(&amp;self, value: u32) {\n        self.test.set_value(value);\n    }\n}\n</code></pre>\n\n<p>There's no <code>unsafe</code> code left -- <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> is a safe abstraction. You could also use <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicU32.html\" rel=\"nofollow noreferrer\"><code>AtomicU32</code></a> instead of <code>Cell&lt;u32&gt;</code>, for thread-safety, or if the real content of <code>Test</code> is more complicated, <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>, <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a>, or <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a>. These are all abstractions that provide shared (\"internal\") mutability, but they differ in usage. Read the documentation and the links below for more detail.</p>\n\n<p>As a final resort, if you need shared mutable access to an object with no overhead, and take full responsibility for guaranteeing its correctness on your own shoulders, you can use <a href=\"https://doc.rust-lang.org/std/cell/struct.UnsafeCell.html\" rel=\"nofollow noreferrer\"><code>UnsafeCell</code></a>. This <em>does</em> require using <code>unsafe</code> code, but you can write any API you want. Note that all the safe abstractions I just mentioned are built using <code>UnsafeCell</code> internally. You cannot have shared mutability without it.</p>\n\n<h3>Links</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/33233003/how-does-the-rust-compiler-know-cell-has-internal-mutability\">How does the Rust compiler know `Cell` has internal mutability?</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html#refcellt-and-the-interior-mutability-pattern\" rel=\"nofollow noreferrer\"><code>RefCell&lt;T&gt;</code> and the Interior Mutability Pattern</a> (from the official book)</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "is_accepted": true, "score": 2, "last_activity_date": 1540073038, "creation_date": 1540073038, "answer_id": 52910495, "question_id": 52901245, "link": "https://stackoverflow.com/questions/52901245/how-can-i-use-phantomdata-in-a-struct-with-raw-pointers-such-that-the-struct-d/52910495#52910495", "title": "How can I use PhantomData in a struct, with raw pointers, such that the struct does not outlive the lifetime of the referenced other struct?", "body": "<p>I am answering my own question. The problem I was trying to solve was using <code>std::marker::PhantomData</code> to achieve adding lifetimes to a struct with raw pointers to prevent use after free errors. You can not achieve this with <code>PhantomData</code>. There is a use case for handling unhandled lifetimes, but that is different than what I was trying accomplish, and was the source of my confusion / question.</p>\n\n<p>I was already aware and have handled the fact that you must handle use after free and other errors when using unsafe code. I just thought I might be able to handle this type of use after free error at compile time instead of runtime.   </p>\n"}], "owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 278, "favorite_count": 0, "accepted_answer_id": 52910495, "answer_count": 2, "score": 3, "last_activity_date": 1540073038, "creation_date": 1539993582, "question_id": 52901245, "link": "https://stackoverflow.com/questions/52901245/how-can-i-use-phantomdata-in-a-struct-with-raw-pointers-such-that-the-struct-d", "title": "How can I use PhantomData in a struct, with raw pointers, such that the struct does not outlive the lifetime of the referenced other struct?", "body": "<p>I have struct that has unsafe code and raw mutable pointers to another type of struct. The unsafe struct should only be used during the lifetime of the other struct but you can not specify a lifetime for pointers. I discovered <code>std::marker::PhantomData</code> could be used for this unused lifetime issues but I am having issues getting it to work. I'm not sure if this is an invalid use case or I'm doing something wrong.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=47fa6589333f05fb66d0727982a998ba\" rel=\"nofollow noreferrer\">Simplified Example</a>:</p>\n\n<pre><code>use std::marker::PhantomData;\n\npub struct Test {\n    value: u32,\n}\n\nimpl Test {\n    pub fn value(&amp;self) {\n        println!(\"{}\", self.value)\n    }\n\n    pub fn set_value(&amp;mut self, value: u32) {\n        self.value = value;\n    }\n}\n\n// I want compiler to complain about the lifetime of test\n// so that UnsafeStruct is not used after test is dropped\npub struct UnsafeStruct&lt;'a&gt; {\n    test: *mut Test,\n    phantom: PhantomData&lt;&amp;'a mut Test&gt;,\n}\n\nimpl&lt;'a&gt; UnsafeStruct&lt;'a&gt; {\n    pub fn new(test: &amp;'a mut Test) -&gt; UnsafeStruct&lt;'a&gt; {\n        UnsafeStruct {\n            test: test,\n            phantom: PhantomData,\n        }\n    }\n\n    pub fn test_value(&amp;self) {\n        unsafe { println!(\"{}\", (*self.test).value) }\n    }\n\n    pub fn set_test_value(&amp;mut self, value: u32) {\n        unsafe {\n            (*self.test).set_value(value);\n        }\n    }\n}\n\nfn main() {\n    // No borrow checker errors\n    // but the compiler does not complain about lifetime of test\n    let mut unsafe_struct: UnsafeStruct;\n    {\n        let mut test = Test { value: 0 };\n        unsafe_struct = UnsafeStruct {\n            test: &amp;mut test,\n            phantom: PhantomData,\n        };\n\n        unsafe_struct.set_test_value(1);\n        test.value();\n\n        test.set_value(2);\n        unsafe_struct.test_value();\n    }\n    unsafe_struct.set_test_value(3);\n    unsafe_struct.test_value();\n\n    // Lifetime errors caught\n    // but there will be borrow checker errors if you fix\n    let mut unsafe_struct: UnsafeStruct;\n    {\n        let mut test = Test { value: 0 };\n        unsafe_struct = UnsafeStruct::new(&amp;mut test);\n\n        unsafe_struct.set_test_value(1);\n        test.value();\n\n        test.set_value(2);\n        unsafe_struct.test_value();\n    }\n    unsafe_struct.set_test_value(3);\n    unsafe_struct.test_value();\n\n    // Borrow checker errors when you fix lifetime error\n    {\n        let mut test = Test { value: 0 };\n        let mut unsafe_struct: UnsafeStruct;\n        unsafe_struct = UnsafeStruct::new(&amp;mut test);\n\n        unsafe_struct.set_test_value(1);\n        test.value();\n\n        test.set_value(2);\n        unsafe_struct.test_value();\n    }\n}\n</code></pre>\n\n<p>If I create the <code>UnsafeStruct</code> directly the compiler does not catch the lifetime errors and I would like to use a constructor function anyway. If I use the constructor function then I have borrow checker errors. Is it possible to fix this code, such that the compiler will error when attempting to use a <code>UnsafeStruct</code> outside of the lifetime of the corresponding <code>Test</code>, but will not have the borrow checking errors shown in the example?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539987873, "post_id": 52900274, "comment_id": 92713431, "body": "&quot;How does serde transform the string person into the type Person&quot;, serde don&#39;t do this maybe you mean <a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"nofollow noreferrer\"><code>serde-yaml</code></a>"}], "answers": [{"comments": [{"owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "edited": false, "score": 0, "creation_date": 1539988038, "post_id": 52900558, "comment_id": 92713469, "body": "so how do I do this myself so I can derive the type <code>Person</code> from the string <code>person</code> as serde does?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "edited": false, "score": 1, "creation_date": 1539988151, "post_id": 52900558, "comment_id": 92713503, "body": "serde doesn&#39;t derive the type Person from the string person."}, {"owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "edited": false, "score": 0, "creation_date": 1539988972, "post_id": 52900558, "comment_id": 92713672, "body": "So what, when you load the large string of textual data that is your data, serde changes <code>person</code> into <code>Person</code> magically without doing any processing or checking? It has to look at the data you&#39;ve loaded to figure out what data is being loaded so it can take  <code>&quot;person&quot;</code> and return <code>Person</code> and then do some equivalent of <code>Person::new(&quot;Bob&quot;,34)</code> which then returns the final struct of <code>Person {name: &quot;Bob&quot;, age: 34}</code>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "edited": false, "score": 1, "creation_date": 1540022833, "post_id": 52900558, "comment_id": 92718425, "body": "@Thermatix You don&#39;t tell serde to &quot;load this string&quot;. You tell it to &quot;load a Person from this string&quot; (or possibly &quot;load a list of persons&quot;, or &quot;load a Department&quot; which contains persons). The top-level type to be loaded isn&#39;t derived from the data, it&#39;s statically written down in the code you write."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 1, "last_activity_date": 1539987525, "creation_date": 1539987525, "answer_id": 52900558, "question_id": 52900274, "link": "https://stackoverflow.com/questions/52900274/how-does-serde-transform-a-the-value-inside-a-string-into-a-type/52900558#52900558", "title": "How does serde transform a the value inside a string into a Type", "body": "<p>You tell serde the type you want. It knows the types of the members from the <code>Derive</code> implementation.</p>\n"}], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1539989447, "creation_date": 1539985415, "last_edit_date": 1539989447, "question_id": 52900274, "link": "https://stackoverflow.com/questions/52900274/how-does-serde-transform-a-the-value-inside-a-string-into-a-type", "title": "How does serde transform a the value inside a string into a Type", "body": "<p>I've built an ECS (a simple one I think) and I've built a mechanism to load external data (entity templates) into my program the problem I'm having is how to transform the already loaded data into a type. </p>\n\n<p>Since <a href=\"https://crates.io/crates/serde\" rel=\"nofollow noreferrer\">Serde</a> does this I thought to look up how but I can't actually find the part that does this.</p>\n\n<p>What I mean is, when you create a data structure like this:</p>\n\n<pre><code>person:\n  name: Bob\n  age: 34\n</code></pre>\n\n<p>and serde is able to transform it into a struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Person {\n   name: String,\n   age: i32\n}\n</code></pre>\n\n<p>How does serde transform the string <code>person</code> into the type <code>Person</code></p>\n\n<p>EDIT: \nTo give an example in another language(ruby):</p>\n\n\n\n<pre><code>class Person\n  attr_accessor :name, :age\n  def initialize(name:, age:)\n    @name = name\n    @age = age\n  end\nend\n\n# pretend type was loaded in from the yaml example from the key\ntype = 'person'\n\n# pretend person_data was loaded in from the yaml example form the value of the key\nperson_data = {\n  name: 'Bob',\n  age: 34\n}\n\n# and now we get the type and then initialize it\n# Just like serde does\nconst_get(type.capitalize).new(person_data)\n</code></pre>\n\n<p>Now obviously Rust can't do this at runtime or does it like this but serde must do something to that ends up with the same result, with <code>\"person\"</code> transforming into <code>Person</code>.</p>\n"}, {"tags": ["rust", "ffi", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1540043631, "post_id": 52905528, "comment_id": 92723445, "body": "Sorry, but where&#39;s the crash? I see only the output specified in <code>main</code>."}, {"owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1540043989, "post_id": 52905528, "comment_id": 92723556, "body": "Sorry, that&#39;s in a previous version of the text. I will remove that line now that I have the whole thing working. Crash was unrelated to the problem at hand, and was simply that <code>sg_init</code> is necessary before anything else."}], "tags": [], "owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "is_accepted": true, "score": 0, "last_activity_date": 1540044032, "last_edit_date": 1540044032, "creation_date": 1540037575, "answer_id": 52905528, "question_id": 52898614, "link": "https://stackoverflow.com/questions/52898614/using-cargo-how-can-i-add-a-system-library-to-the-link-command/52905528#52905528", "title": "Using Cargo, how can I add a system library to the link command?", "body": "<p>Turns out I don't need <code>build.rs</code> at all. Or perhaps I would if the library were installed in a non-standard location. However, I can now successfully link and run the application.</p>\n\n<p>First, I removed <code>build = \"build.rs\"</code> from Cargo.toml.</p>\n\n<p>Second, I went back into my code and moved the <code>#[link(name = \"statgrab\", kind = \"dylib\")]</code> to right before the <code>extern \"C\"</code> stanza.</p>\n\n<p><code>systemstats.rs</code></p>\n\n<pre><code>extern crate libc;\n\n#[repr(C)]\n#[derive(Clone, Copy, Debug)]\nstruct sg_load_stats {\n    min1: libc::c_double,\n    min5: libc::c_double,\n    min15: libc::c_double,\n    systime: libc::time_t,\n}\n\n#[link(name = \"statgrab\", kind = \"dylib\")]\nextern \"C\" {\n    fn sg_init(ignore_errors: libc::c_int) -&gt; libc::c_int;\n    fn sg_get_load_stats() -&gt; *mut sg_load_stats;\n}\n\n\nfn main() {\n    unsafe {\n        sg_init(1);\n        let load_stats = sg_get_load_stats();\n        println!(\"[load_stats] {:?}\", *load_stats);\n    }\n}\n</code></pre>\n\n<p>And then the output:</p>\n\n<pre><code>root@040ee947460c:/src/palimpsest# cargo run\n   Compiling palimpsest v0.1.0 (file:///src/palimpsest)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.54s\n     Running `target/debug/systemstats`\n[load_stats] sg_load_stats { min1: 0.09, min5: 0.05, min15: 0.01, systime: 1540037934 }\nroot@040ee947460c:/src/palimpsest#\n</code></pre>\n"}], "owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 676, "favorite_count": 0, "accepted_answer_id": 52905528, "answer_count": 1, "score": 1, "last_activity_date": 1540044032, "creation_date": 1539976416, "last_edit_date": 1539976782, "question_id": 52898614, "link": "https://stackoverflow.com/questions/52898614/using-cargo-how-can-i-add-a-system-library-to-the-link-command", "title": "Using Cargo, how can I add a system library to the link command?", "body": "<p>I'm trying to call into a standard C library (libstatgrab) on my system, and can't figure out how to get the library included in the link line.</p>\n\n<p>I've got Cargo running a <code>build.rs</code> , and the output from that is: </p>\n\n<pre><code>cargo:rustc-link-lib=statgrab\ncargo:rustc-link-search=native=/usr/lib/x86_64-linux-gnu/\n</code></pre>\n\n<p>Since my example is a small prototype, here are all of the files involved:</p>\n\n<p><code>src/systemstats.rs</code></p>\n\n<pre><code>extern crate libc;\n\n#[repr(C)]\n#[derive(Clone, Copy, Debug)]\nstruct sg_load_stats {\n    min1: libc::c_double,\n    min5: libc::c_double,\n    min15: libc::c_double,\n    systime: libc::time_t,\n}\n\nextern \"C\" {\n    fn sg_get_load_stats() -&gt; *mut sg_load_stats;\n}\n\n\nfn main() {\n    unsafe {\n        let load_stats = sg_get_load_stats();\n        println!(\"[load_stats] {:?}\", *load_stats);\n    }\n}\n</code></pre>\n\n<p><code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"palimpsest\"\nversion = \"0.1.0\"\nauthors = [\"Savanni D'Gerinel &lt;savanni@luminescent-dreams.com&gt;\"]\nbuild = \"build.rs\"\n\n[dependencies]\nlibc = \"0.2.43\"\n\n[[bin]]\nname = \"systemstats\"\npath = \"src/systemstats.rs\"\n</code></pre>\n\n<p><code>build.rs</code></p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-lib=statgrab\");\n    println!(\"cargo:rustc-link-search=native=/usr/lib/x86_64-linux-gnu/\");\n}\n</code></pre>\n\n<p>And, finally, the build output:</p>\n\n<pre><code>root@0a2938cbf3b7:/src/palimpsest# cargo build\n   Compiling palimpsest v0.1.0 (file:///src/palimpsest)\n   Compiling libc v0.2.43\nls -l error: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.1y16o1qfye96o7m0.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.3ewjf7fna93e7dd4.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.3rngp6bm2u2q5z0y.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.4oc10dk278mpk1vy.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.4xq48u46a1pwiqn7.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.51s1w397y42gpez1.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.8xzrsc1ux72v29j.rcgu.o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.oa3rad818d8sgn4.rcgu.o\" \"-o\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e\" \"/src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.crate.allocator.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-nodefaultlibs\" \"-L\" \"/src/palimpsest/target/debug/deps\" \"-L\" \"/usr/lib/x86_64-linux-gnu/\" \"-L\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/src/palimpsest/target/debug/deps/liblibc-fe86c4c07bd339cb.rlib\" \"-Wl,--start-group\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-448e7f800092c158.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-187d239173779b21.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-1016cb92bf3e0c0f.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-404ca41e10f51fe1.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_system-3c640c2d04fa8073.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-6ea835c502ac484a.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-b77d79244be470bc.rlib\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-a51c1c47035430ae.rlib\" \"-Wl,--end-group\" \"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-0413689b51de5d7d.rlib\" \"-Wl,-Bdynamic\" \"-lutil\" \"-lutil\" \"-ldl\" \"-lrt\" \"-lpthread\" \"-lpthread\" \"-lgcc_s\" \"-lc\" \"-lm\" \"-lrt\" \"-lpthread\" \"-lutil\" \"-lutil\"\n  = note: /src/palimpsest/target/debug/deps/systemstats-a71368fbbfd6ba9e.3ewjf7fna93e7dd4.rcgu.o: In function `systemstats::main':\n          /src/palimpsest/src/systemstats.rs:19: undefined reference to `sg_get_load_stats'\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>The build output is a pain to read, but where I see <code>\"-L\" \"/usr/lib/x86_64-linux-gnu/\"</code> in it, I do not see <code>-lstatgrab</code>. My understanding of the documents was that <code>cargo:rustc-link-lib=statgrab</code> should have added that flag, but it doesn't.</p>\n\n<p>Frustratingly, I've done some work linking to Cocoa on MacOS, and the only think I needed for that was a single line in my source: <code>#[link(name = \"Cocoa\", kind = \"framework\")]</code>, and so I don't understand why I can't just use a similar line, <code>#[link(name = \"statgrab\", kind = \"dylib\")]</code> here.</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539963691, "post_id": 52895363, "comment_id": 92703981, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">How do I create a global, mutable singleton?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1539962630, "post_id": 52895381, "comment_id": 92703447, "body": "Thanks. Could you post an example? So far I got: the trait <code>rocket::request::FromRequest&lt;&#39;_, &#39;_&gt;</code> is not implemented for <code>ContainsImage</code>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1539962910, "last_edit_date": 1539962910, "creation_date": 1539962329, "answer_id": 52895381, "question_id": 52895363, "link": "https://stackoverflow.com/questions/52895363/an-opened-image-as-a-global-variable/52895381#52895381", "title": "An opened image as a global variable?", "body": "<p>If you want to share something in Rocket, you will have to use a <a href=\"https://rocket.rs/guide/state/#managed-state\" rel=\"nofollow noreferrer\">managed state</a>:</p>\n\n<ol>\n<li><p>Say to Rocket you want to manage the resource:</p>\n\n<pre><code>let image = image::open(\"/home/d33tah/tmp/combined.png\").unwrap();\nrocket::ignite().manage(image);\n</code></pre></li>\n<li><p>Retrieve it in the routes where you need it:</p>\n\n<pre><code>#[get(\"/foo\")]\nfn foo(image: State&lt;DynamicImage&gt;) {\n    // Can use `image`.\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 52895381, "answer_count": 1, "score": 0, "last_activity_date": 1540479398, "creation_date": 1539962253, "last_edit_date": 1540479398, "question_id": 52895363, "link": "https://stackoverflow.com/questions/52895363/an-opened-image-as-a-global-variable", "title": "An opened image as a global variable?", "body": "<p>I'd like to write a server that resizes a huge image. Since loading it on every request would take a lot of time, I decided to pre-load it. Unfortunately I got the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling hello_world v0.0.0 (/tmp/Rocket/examples/hello_world)                                                                                                                                                                                                                                                                                                         \nerror[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants                                                                                                                                                                                                                                                                         \n --&gt; examples/hello_world/src/main.rs:9:35                                                                                                                                                                                                                                                                                                                                 \n  |                                                                                                                                                                                                                                                                                                                                                                        \n9 | static img: image::DynamicImage = image::open(\"/home/d33tah/tmp/combined.png\").unwrap();                                                                                                                                                                                                                                                                               \n  |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                                                                                                                                                                                                                         \n\nerror[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants                                                                                                                                                                                                                                                                         \n --&gt; examples/hello_world/src/main.rs:9:35                                                                                                                                                                                                                                                                                                                                 \n  |                                                                                                                                                                                                                                                                                                                                                                        \n9 | static img: image::DynamicImage = image::open(\"/home/d33tah/tmp/combined.png\").unwrap();                                                                                                                                                                                                                                                                               \n  |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                                                                                                                                                                                                                \n\nerror: aborting due to 2 previous errors                                                                                                                                                                                                                                                                                                                                   \n\nFor more information about this error, try `rustc --explain E0015`.                                                                                                                                                                                                                                                                                                        \nerror: Could not compile `hello_world`.                                                                                                                                                                                                                                                                                                                                    \n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Here's the code:</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use] extern crate rocket;\n\n#[cfg(test)] mod tests;\n\nextern crate image;\n\nstatic img: image::DynamicImage = image::open(\"/home/d33tah/tmp/combined.png\").unwrap();\n\n#[get(\"/\")]\nfn hello() -&gt; Vec&lt;u8&gt; {\n    \"\".into()\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![hello]).launch();\n}\n</code></pre>\n\n<p>To compile it, you'll need <code>rocket</code> installed based on its latest Github checkout (currently: 831d8dfbe30dd69f0367a75361e027127b2100e1) and <code>image</code> crate.</p>\n\n<p>Is it possible to create such a global variable? If not, do I have any other options?</p>\n\n<p>EDIT: this was flagged as a duplicate of this question, but as Boiethios showed, this specific case is better solved by Rocket's API.</p>\n"}, {"tags": ["rust", "undefined-behavior", "unsafe"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539958101, "post_id": 52893071, "comment_id": 92700773, "body": "Yes, this sounds correct. But how are you creating the array?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539958316, "post_id": 52893071, "comment_id": 92700919, "body": "@Peter <code>Vec::with_capacity()</code>, <code>push(mem::uninitialized())</code>, <code>into_boxed_slice()</code>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539958796, "post_id": 52893071, "comment_id": 92701213, "body": "@Peter oh, pardon. I meant <code>push(ManuallyDrop::new(mem::uninitialized()))</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1539959241, "post_id": 52893071, "comment_id": 92701436, "body": "If you are careful, I think you can just use <code>unitialized()</code> for the entire array"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539960275, "post_id": 52893071, "comment_id": 92702055, "body": "@PeterHall Good point, but I need it to be allocated dynamically. Will use it, if I need a static array."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1540056557, "post_id": 52893071, "comment_id": 92727256, "body": "I&#39;ll use <a href=\"https://doc.rust-lang.org/nightly/core/mem/union.MaybeUninit.html\" rel=\"nofollow noreferrer\"><code>MaybeUninit</code></a>, since I&#39;m on nightly anyway."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539965870, "post_id": 52894858, "comment_id": 92705093, "body": "I&#39;m unconvinced. <a href=\"https://github.com/rust-lang/rfcs/pull/1892\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/1892</a> suggests that <code>mem::uninitialized</code> is instant UB for any <code>T</code> that has invalid bit patterns, and <code>Box</code> has an invalid bit pattern (all-zeros)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539966535, "post_id": 52894858, "comment_id": 92705386, "body": "@trentcl But that would only matter if you had a variable of type <code>Box&lt;T&gt;</code> pointing at that uninitialized memory. That is avoidable here though - you only ever refer to a <code>Box&lt;T&gt;</code> after the memory is initialized."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539966730, "post_id": 52894858, "comment_id": 92705486, "body": "I think it would only be a problem if the contents of the box are uninitialized."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539967234, "post_id": 52894858, "comment_id": 92705705, "body": "I think exactly the opposite! An uninitialized <code>Box&lt;T&gt;</code> is instant UB; the referred-to memory being uninitialized would only be a problem when you dereference it. However, I&#39;m not 100% sure of my interpretation since the RFC mostly focuses on <code>!</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539993062, "post_id": 52894858, "comment_id": 92714430, "body": "@trentcl The uninitialized <code>Box&lt;T&gt;</code> doesn&#39;t exist unless you create a variable bound to the memory range. Without a variable binding, it&#39;s just a block of uninitialized memory that nothing cares about."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1539960636, "creation_date": 1539960636, "answer_id": 52894858, "question_id": 52893071, "link": "https://stackoverflow.com/questions/52893071/is-manuallydropboxt-with-memuninitialized-defined-behavior/52894858#52894858", "title": "Is ManuallyDrop&lt;Box&lt;T&gt;&gt; with mem::uninitialized defined behavior?", "body": "<p>Provided that you do not read from uninitialized memory or create pointers to it, then this should not be UB. </p>\n\n<p>You will need to do some careful bookkeeping to disallow access to uninitialized items, and only drop initialized ones. Adding a new item where there is uninitialized memory needs to be done with <code>ptr::write()</code>, to avoid an invalid drop on the underlying memory. But if you overwrite an existing valid value, then you should <em>not</em> use <code>ptr::write</code> because you need that value to be correctly dropped.</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 52894858, "answer_count": 1, "score": 6, "last_activity_date": 1539965512, "creation_date": 1539954770, "last_edit_date": 1539965512, "question_id": 52893071, "link": "https://stackoverflow.com/questions/52893071/is-manuallydropboxt-with-memuninitialized-defined-behavior", "title": "Is ManuallyDrop&lt;Box&lt;T&gt;&gt; with mem::uninitialized defined behavior?", "body": "<p>I have an array with <code>[ManuallyDrop&lt;Box&lt;T&gt;&gt;]</code> which is filled lazily. To realize this, I \"initialize\" the array with <code>ManuallyDrop::new(mem::uninitialized())</code>. </p>\n\n<p>Is this well-defined behavior as long as I only call <code>ManuallyDrop::drop()</code> on initialized elements?</p>\n"}, {"tags": ["rust", "cryptography", "sha256", "hmac"], "comments": [{"owner": {"reputation": 32972, "user_id": 150978, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/feadc214792e2581c3c750140e3eb2c7?s=128&d=identicon&r=PG", "display_name": "Robert", "link": "https://stackoverflow.com/users/150978/robert"}, "edited": false, "score": 3, "creation_date": 1539938914, "post_id": 52888842, "comment_id": 92690526, "body": "The rust signature is encoded twice: first hex and then base64. Therefore it&#39;s length is also different."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1539939024, "post_id": 52888842, "comment_id": 92690569, "body": "Why the hex encoding ? It makes no sense to encode to hex <i>then</i> to base64. Both have the same purpose: produce a readable and easy to exchange string from an array of bytes. You never use both."}, {"owner": {"reputation": 98, "user_id": 4105175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d709e4fd8e2c6dcc936afb7c418b1c8?s=128&d=identicon&r=PG&f=1", "display_name": "JoshuaBatty", "link": "https://stackoverflow.com/users/4105175/joshuabatty"}, "edited": false, "score": 0, "creation_date": 1539939160, "post_id": 52888842, "comment_id": 92690647, "body": "correct good spot thank you!"}], "answers": [{"comments": [{"owner": {"reputation": 98, "user_id": 4105175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d709e4fd8e2c6dcc936afb7c418b1c8?s=128&d=identicon&r=PG&f=1", "display_name": "JoshuaBatty", "link": "https://stackoverflow.com/users/4105175/joshuabatty"}, "edited": false, "score": 0, "creation_date": 1539939195, "post_id": 52888899, "comment_id": 92690675, "body": "Thank you so much! Glad i was at least close! :)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1539939017, "creation_date": 1539939017, "answer_id": 52888899, "question_id": 52888842, "link": "https://stackoverflow.com/questions/52888842/incorrect-hmac-sha256-base64-encoded-result-in-rust-compared-to-js-approach/52888899#52888899", "title": "Incorrect Hmac SHA256 Base64 encoded result in Rust compared to JS approach", "body": "<p>Just remove the hex-thing</p>\n\n<pre><code>extern crate ring;\nextern crate data_encoding;\n\nuse ring::{digest, hmac};\nuse data_encoding::BASE64;\n\nfn main() {\n    let secret_key = \"secret\";\n    let payload = \"test\";\n    let signed_key = hmac::SigningKey::new(&amp;digest::SHA256, secret_key.as_bytes());\n    let signature = hmac::sign(&amp;signed_key, payload.as_bytes());\n    let b64_encoded_sig = BASE64.encode(signature.as_ref());\n    assert_eq!(b64_encoded_sig, \"Aymga2LNFrM+tnkr6MYLFY2Jou46h2/Omogeu0iMCRQ=\");\n}\n</code></pre>\n"}], "owner": {"reputation": 98, "user_id": 4105175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d709e4fd8e2c6dcc936afb7c418b1c8?s=128&d=identicon&r=PG&f=1", "display_name": "JoshuaBatty", "link": "https://stackoverflow.com/users/4105175/joshuabatty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 1, "accepted_answer_id": 52888899, "answer_count": 1, "score": 2, "last_activity_date": 1539939017, "creation_date": 1539938742, "question_id": 52888842, "link": "https://stackoverflow.com/questions/52888842/incorrect-hmac-sha256-base64-encoded-result-in-rust-compared-to-js-approach", "title": "Incorrect Hmac SHA256 Base64 encoded result in Rust compared to JS approach", "body": "<p>I'm trying to port a crypto exchange API from JavaScript to Rust. The JavaScript version authenticates and connects. The payload and secret key are signed using Hmac Sha256 and encoded to Base64. Below is the working implementation in JavaScript.</p>\n\n<pre><code>var param = \"test\";\nvar privateKey = \"secret\";\nvar signature = crypto.createHmac('sha256', new Buffer(privateKey, 'utf8'))\n    .update(param)\n    .digest('base64');\n</code></pre>\n\n<p>It returns the following signature: <code>Aymga2LNFrM+tnkr6MYLFY2Jou46h2/Omogeu0iMCRQ=</code></p>\n\n<p>In Rust i'm using Hmac SHA256 and encoding the result back to Base64 yet i'm unable to get close to the expected signature. Here is my best 2 day attempt at this: </p>\n\n<pre><code>extern crate ring;\nextern crate data_encoding;\nextern crate hex;\n\nuse ring::{digest, hmac};\nuse data_encoding::BASE64;\nuse hex::encode as hex_encode;\n\nfn main() {\n    let secret_key = \"secret\";\n    let payload = \"test\";\n    let signed_key = hmac::SigningKey::new(&amp;digest::SHA256, secret_key.as_bytes());\n    let signature = hex_encode(hmac::sign(&amp;signed_key, payload.as_bytes()).as_ref());\n    let b64_encoded_sig = BASE64.encode(signature.as_ref());\n    assert_eq!(b64_encoded_sig, \"Aymga2LNFrM+tnkr6MYLFY2Jou46h2/Omogeu0iMCRQ=\");\n}\n</code></pre>\n\n<p>This returns the following signature: <code>MDMyOWEwNmI2MmNkMTZiMzNlYjY3OTJiZThjNjBiMTU4ZDg5YTJlZTNhODc2ZmNlOWE4ODFlYmI0ODhjMDkxNA==</code></p>\n\n<p>Would really appreciate getting a point in the right direction, gone around in circles for days now and not sure where exactly i'm going wrong. Thanks. </p>\n"}, {"tags": ["asynchronous", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539935879, "post_id": 52887688, "comment_id": 92688978, "body": "They are the read functions here: <a href=\"https://docs.rs/tokio/0.1.11/tokio/io/index.html\" rel=\"nofollow noreferrer\">docs.rs/tokio/0.1.11/tokio/io/index.html</a>"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539935910, "post_id": 52887688, "comment_id": 92688989, "body": "Though I have read the doc for the functions, but it&#39;s quite unclear from the documentation how to actually chain them together properly"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539935934, "post_id": 52887688, "comment_id": 92689002, "body": "Edit your post and add the description there ;) You are not posting this for me, but for everyone else who might stumple upon your question"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539936468, "post_id": 52887688, "comment_id": 92689265, "body": "I assume most people that could answer the question wouldn&#39;t need the docs link :p... but, w/e"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539937161, "post_id": 52887688, "comment_id": 92689632, "body": "Don&#39;t assume things you don&#39;t know ;) Stackoverflow is a place for people who google for a thing and start digging around. The more you clarify your question, the more you can help people. You provided the documentation, so a person who reads this knows exactly the version you are using and the exact crate you were using."}], "answers": [{"comments": [{"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938192, "post_id": 52888408, "comment_id": 92690154, "body": "that isn&#39;t really what I&#39;m looking for, as in, it misses the recursive part. I&#39;m looking more for something like &quot;Lines&quot; where I can apply the function over and over to a stream of data, as in, whenever it reaches the end it goes back to the top, so to speak. But the ReadUntil and other structs returned by the read functions don&#39;t implement <code>Stream</code> in a way similar to lines."}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938266, "post_id": 52888408, "comment_id": 92690191, "body": "If you may, I&#39;m looking for something similar to this: <a href=\"https://www.reddit.com/r/rust/comments/75ftyj/how_can_i_write_a_basic_service_in_tokio/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/75ftyj/&hellip;</a> But with the new tokio, rather than tokio-core and the old modules"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938389, "post_id": 52888408, "comment_id": 92690245, "body": "Then please expand your answer! I read the question as such that you don&#39;t know how to chain <code>read_until</code> and <code>read_exact</code>. A &quot;recusirve&quot; way as such can&#39;t exist, because you can&#39;t call closures recursivly. Why didn&#39;t you posted that link (or the example) in your question, so I know what you are looking for?"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938442, "post_id": 52888408, "comment_id": 92690276, "body": "Because If I could find an example I wouldn&#39;t be asking the question.... :/"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938477, "post_id": 52888408, "comment_id": 92690298, "body": "The example above is using tokio-rs and I&#39;m not even 100% sure it does what I intent to do (as in, it may close the connection)"}, {"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539938527, "post_id": 52888408, "comment_id": 92690318, "body": "Anyway, as far as I can tell wirting a Codec that sits over MIO directly seems to be the only way to do this at the moment... which is a tad bit silly. But, I&#39;ll leave the question open, maybe I&#39;m missing something. Thank you for trying."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 1, "last_activity_date": 1539937099, "creation_date": 1539937099, "answer_id": 52888408, "question_id": 52887688, "link": "https://stackoverflow.com/questions/52887688/how-to-chain-tokio-read-functions/52888408#52888408", "title": "How to chain tokio read functions?", "body": "<p>Yes, there is a way.</p>\n\n<p><a href=\"https://docs.rs/tokio-io/0.1.9/tokio_io/io/fn.read_until.html\" rel=\"nofollow noreferrer\"><code>read_until</code></a> is returns a struct <a href=\"https://docs.rs/tokio-io/0.1.9/tokio_io/io/struct.ReadUntil.html\" rel=\"nofollow noreferrer\"><code>ReadUntil</code></a>, which implements the <a href=\"https://docs.rs/futures/0.1.24/futures/future/trait.Future.html\" rel=\"nofollow noreferrer\"><code>Future</code></a>-trait, which iteself provides a lot of useful functions, e.g. <a href=\"https://docs.rs/futures/0.1.24/futures/future/trait.Future.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a> which can be used to chain futures.</p>\n\n<p>A simple (and silly) example looks like this:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_io; // 0.1.8 // 0.1.24\n\nuse futures::future::Future;\nuse std::io::Cursor;\nuse tokio_io::io::{read_exact, read_until};\n\nfn main() {\n    let cursor = Cursor::new(b\"abcdef\\ngh\");\n    let mut buf = vec![0u8; 2];\n    println!(\n        \"{:?}\",\n        String::from_utf8_lossy(\n            read_until(cursor, b'\\n', vec![])\n                .and_then(|r| read_exact(r.0, &amp;mut buf))\n                .wait()\n                .unwrap()\n                .1\n        )\n    );\n}\n</code></pre>\n\n<p>Here I use a Cursor, which happens to implement the <a href=\"https://docs.rs/tokio-io/0.1.9/tokio_io/trait.AsyncRead.html\" rel=\"nofollow noreferrer\"><code>AsyncRead</code></a>-trait and use the <code>read_until</code> function to read until a newline occurs (between <code>'f'</code> and <code>'g'</code>).<br>\nAfterwards to chain those I use <code>and_then</code> to use <code>read_exact</code> in case of an success, use <a href=\"https://docs.rs/futures/0.1.24/futures/future/trait.Future.html#method.wait\" rel=\"nofollow noreferrer\"><code>wait</code></a> to get the <code>Result</code> unwrap it (don't do this in production kids!) and take the second argument from the tuple (the first one is the cursor).<br>\nLast I convert the <code>Vec</code> into a String to display <code>\"gh\"</code> with <code>println!</code>.</p>\n"}], "owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1539937099, "creation_date": 1539934263, "last_edit_date": 1539936493, "question_id": 52887688, "link": "https://stackoverflow.com/questions/52887688/how-to-chain-tokio-read-functions", "title": "How to chain tokio read functions?", "body": "<p>Is there a way to chain the <code>read_*</code> functions in <code>tokio::io</code> in a \"recursive\" way ?</p>\n\n<p>I'm essentially looking to do something like:</p>\n\n<p><code>read_until</code> x then <code>read_exact</code> y then write response then go back to the top.</p>\n\n<p>In case you are confused what functions i'm talking about: <a href=\"https://docs.rs/tokio/0.1.11/tokio/io/index.html\" rel=\"nofollow noreferrer\">https://docs.rs/tokio/0.1.11/tokio/io/index.html</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1539928469, "post_id": 52885698, "comment_id": 92686015, "body": "Your second snippet with dyn works in the playground. Maybe update your compiler?"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1539929394, "post_id": 52885698, "comment_id": 92686305, "body": "I know it works, but in my special situation, I can&#39;t use <code>&amp;dyn</code> keyword, I need to call the function C in a new thread, otherwise it will cause an error: <code>cannot be shared between threads safely</code>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539930677, "post_id": 52886787, "comment_id": 92686752, "body": "As a note: whenever a function (or even a <code>Fn</code>) returns <code>()</code> you can omit that, e.g. you function a from above becomes <code>fn a&lt;B, C&gt;(b: B) where B: Fn(C), C: Fn()</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1539934640, "post_id": 52886787, "comment_id": 92688379, "body": "Also, here the <code>where</code> form is order of magnitudes more readable that the hypothetical nested <code>impl</code> form. Please don&#39;t try to compress your code as much as possible just because you can\u2026"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1540000509, "post_id": 52886787, "comment_id": 92715417, "body": "@hellow It doesn&#39;t work: <a href=\"https://play.rust-lang.org/?gist=e5e5f0f52738126e103408a078f1ee7c\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1540001800, "post_id": 52886787, "comment_id": 92715561, "body": "<i>it isn&#39;t very useful given how other parts of Rust work.</i> I am not sure of this. I feel it may help solve <a href=\"https://stackoverflow.com/questions/52869795/how-to-call-a-recursive-closure-in-a-new-thread\">calling a recursive closure in a new thread</a> out."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1540015382, "post_id": 52886787, "comment_id": 92717155, "body": "Your example doesn&#39;t work with <code>-&gt; ()</code> either, so what&#39;s the point?"}, {"owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "edited": false, "score": 0, "creation_date": 1540083958, "post_id": 52886787, "comment_id": 92733374, "body": "Ah, my bad. <i>you can omit that,</i> here the &#39;that&#39; means that parentheses rather than the answer."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 10, "last_activity_date": 1539929730, "creation_date": 1539929730, "answer_id": 52886787, "question_id": 52885698, "link": "https://stackoverflow.com/questions/52885698/how-to-do-things-equal-to-nested-impl-trait/52886787#52886787", "title": "How to do things equal to nested `impl Trait`?", "body": "<p>Nested impl Trait doesn't work because it hasn't been specified or implemented yet. Also, because it isn't very useful given how other parts of Rust work.</p>\n\n<p><code>fn a(b: impl Fn(impl Fn() -&gt; ()) -&gt; ()) -&gt; ()</code> can be written using full generic syntax as</p>\n\n<pre><code>fn a&lt;B, C&gt;(b: B) -&gt; ()\nwhere B: Fn(C) -&gt; (),\n      C: Fn() -&gt; ()\n</code></pre>\n\n<p>So what does that mean? It means that <code>B</code> is something callable that takes an argument of something else callable. But the important thing here is in the concrete types. Specifically, <code>B</code> doesn't take <strong>any</strong> callable with a compatible signature, but specifically a <code>C</code>. What is C? Well, that's the issue. If you call <code>a</code> like this:</p>\n\n<pre><code>a(|f| f());\n</code></pre>\n\n<p>then <code>C</code> is the type of the lambda's parameter <code>f</code>, but that type is not known, since the parameter <code>f</code>'s type cannot be deduced from usage alone. But suppose that wasn't a problem, what would the body of <code>a</code> look like?</p>\n\n<pre><code>fn a&lt;B, C&gt;(b: B) -&gt; ()\nwhere B: Fn(C) -&gt; (),\n      C: Fn() -&gt; () {\n  b(|| ())\n}\n</code></pre>\n\n<p>Here we attempt to call <code>b</code> passing lambda. But the lambda's type is <code>unnamed local lambda type</code>, not <code>C</code>. Since <code>C</code> was passed in from the outside, it cannot be the type of a lambda local to <code>a</code>. Simply put, unless you pass in a <code>C</code> as an additional parameter to <code>a</code>, there is <em>nothing</em> that <code>a</code> has that it could pass to <code>b</code>.</p>\n\n<p>What you apparently want is for <code>B</code> to be not a function object that can be called with some <code>C</code>, but with <strong>any</strong> <code>C</code>. You want it to be a polymorphic function object. Rust doesn't support compile-time polymorphic function objects (the equivalent in Haskell would be a <code>forall a. a -&gt; IO ()</code> or similar). It only supports runtime polymorphic function objects.</p>\n\n<p>That's the job of <code>dyn</code>. Now you've said you can't use <code>&amp;dyn</code>, because you want to pass the function object to another thread. So instead, use <code>Box&lt;dyn&gt;</code>:</p>\n\n<pre><code>fn a(b: impl Fn(Box&lt;dyn Fn() -&gt; ()&gt;) -&gt; ()) -&gt; () {\n b(Box::new(|| println!(\"Hello\")))\n} \n\nfn main() {\n    a(move |f| { f(); f(); });\n}\n</code></pre>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "accepted_answer_id": 52886787, "answer_count": 1, "score": 5, "last_activity_date": 1539929730, "creation_date": 1539921384, "question_id": 52885698, "link": "https://stackoverflow.com/questions/52885698/how-to-do-things-equal-to-nested-impl-trait", "title": "How to do things equal to nested `impl Trait`?", "body": "<p><code>function A</code> which take a <code>function B</code> as parameter, again the <code>function B</code> take <code>function C</code> as parameter. I try the syntax like below, but this gives me an error: </p>\n\n<pre><code>fn a(b: impl Fn(impl Fn() -&gt; ()) -&gt; ()) -&gt; () {\n // ...\n}  \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0666]: nested `impl Trait` is not allowed\n --&gt; src/main.rs:2:21\n  |\n2 |     fn a(b: impl Fn(impl Fn() -&gt; ()) -&gt; ()) -&gt; () {\n  |             --------^^^^^^^^^^^^^^^-------\n  |             |       |\n  |             |       nested `impl Trait` here\n  |             outer `impl Trait`\n</code></pre>\n\n<p>For some reason, I can't use <code>&amp;dyn</code> keyword:</p>\n\n<pre><code>fn a(b: impl Fn(&amp;dyn Fn() -&gt; ()) -&gt; ()) -&gt; () {\n // ...\n} \n</code></pre>\n\n<p>Are there another ways to do this?</p>\n\n<p>And I don't know why <strong>nested <code>impl Trait</code></strong> cause an error.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 180, "user_id": 6820433, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/958909c93aa4cb9534adda447617acc0?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel S.", "link": "https://stackoverflow.com/users/6820433/daniel-s"}, "is_accepted": true, "score": 3, "last_activity_date": 1539917919, "creation_date": 1539917919, "answer_id": 52885296, "question_id": 52884893, "link": "https://stackoverflow.com/questions/52884893/rust-reference-to-temporary-value-doesnt-report-error/52885296#52885296", "title": "Rust reference to temporary value doesn&#39;t report error", "body": "<blockquote>\n  <p>Isn't the <code>Cons(2, &amp;Nil)</code> dropped before constructing <code>Cons(1, _)</code>?</p>\n</blockquote>\n\n<p>If you bind a reference to a temporary, Rust extends the lifetime of the temporary as needed for the binding; see <a href=\"https://stackoverflow.com/a/47662488/6820433\">this answer</a> for details.</p>\n\n<blockquote>\n  <p>Why is there such difference between before and after adding <code>impl Drop</code>?</p>\n</blockquote>\n\n<p>See <a href=\"https://users.rust-lang.org/t/borrowed-value-does-not-live-long-enough-with-destructor/7716/11\" rel=\"nofollow noreferrer\">this comment</a>. The extended lifetime of the temporary matches the lifetime of <code>x</code> in your example. When a <code>struct</code> containing references has no <code>Drop</code> implementation,</p>\n\n<blockquote>\n  <p>it\u2019s permissible for reference and referent to have identical lifetimes: the reference can\u2019t be used unsafely. Introducing a <code>Drop</code> impl to the situation requires the referent to <em>strictly</em> outlive the reference, to ensure there is a clear order in which to run <code>drop</code> methods.</p>\n</blockquote>\n"}], "owner": {"reputation": 65, "user_id": 6143707, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c283985c88830c32ce094bfe91d2ebd7?s=128&d=identicon&r=PG&f=1", "display_name": "amlo", "link": "https://stackoverflow.com/users/6143707/amlo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 1, "accepted_answer_id": 52885296, "answer_count": 1, "score": 4, "last_activity_date": 1539917919, "creation_date": 1539914688, "question_id": 52884893, "link": "https://stackoverflow.com/questions/52884893/rust-reference-to-temporary-value-doesnt-report-error", "title": "Rust reference to temporary value doesn&#39;t report error", "body": "<p>I have the following code:  </p>\n\n<pre><code>#[derive(Debug)]\npub enum List&lt;'a&gt; {\n    Nil,\n    Cons(i32, &amp;'a List&lt;'a&gt;)\n}\n\n{\n    let x = Cons(1, &amp;Cons(2, &amp;Nil));\n    println!(\"{:?}\", x);\n}\n</code></pre>\n\n<p>It works fine. I don't understand why this code doesn't report any error, isn't the <code>Cons(2, &amp;Nil)</code> dropped before constructing <code>Cons(1, _)</code> ?  </p>\n\n<p>Moreover, after I added an empty <code>impl Drop</code> for <code>List</code>, the above code doesn't work any more:  </p>\n\n<pre><code>impl&lt;'a&gt; Drop for List&lt;'a&gt; {\n    fn drop(&amp;mut self) {\n\n    }\n}\n</code></pre>\n\n<p>It reports errors that <code>borrowed value does not live long enough</code> for <code>Cons(2, _)</code> and <code>Nil</code>.  </p>\n\n<p>Why is there such difference between before and after adding <code>impl Drop</code> ?</p>\n"}, {"tags": ["rust", "mutex", "atomic"], "comments": [{"owner": {"reputation": 6746, "user_id": 1143634, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e7lca.png?s=128&g=1", "display_name": "StaceyGirl", "link": "https://stackoverflow.com/users/1143634/staceygirl"}, "edited": false, "score": 1, "creation_date": 1539943604, "post_id": 52882922, "comment_id": 92692954, "body": "Hard to say, you need to provide more info on how <code>len</code> can be used later. If there are no others functions except <code>len</code> and <code>reserve</code>, then you can even use <code>relaxed</code> ordering everywhere. So what other operations thread are supposed to do on it and how? For what purpose you may need <code>len</code> function if returned value is racy? If array can be resized, accessing elements should require mutex lock anyway."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539948929, "post_id": 52882922, "comment_id": 92695696, "body": "I can&#39;t see why <code>len</code> even needs to be atomic.  Every thread requesting it has to treat its value as outdated right from the moment it received it anyway, regardless of any ordering guarantees."}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 96, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1539901363, "creation_date": 1539898457, "last_edit_date": 1539901363, "question_id": 52882922, "link": "https://stackoverflow.com/questions/52882922/do-i-need-acquire-release-when-release-only-occures-in-locked-region-of-a-mutex", "title": "Do I need Acquire/Release when Release only occures in locked region of a mutex?", "body": "<p>I'm writing a thread safe expandable array/vector with immutable data.</p>\n\n<p>To receive the length of an element, I load an atomic integer. Reserving more space is guarded by a mutex. While reserving, I have to update the length. Since <code>reserve</code> is not called concurrently, do I need to store the value with release semantic? Is it possible, that instructions in a locked region are executed in another order as specified?</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>fn len(&amp;self) -&gt; usize {\n    // Do we need Acquire or is Relaxed enough?\n    self.len.load(atomic::Ordering::Acquire)\n}\n\nfn reserve(&amp;self, additional: usize) {\n    let _guard = self.mutex.lock();\n    // this call happens while the mutex is locked. Is Relaxed fine or do we \n    // need Acquire?\n    let current_len = self.len.load(atomic::Ordering::Relaxed);\n\n    // ... do the reserving stuff ...\n\n    // this call happens while the mutex is locked. Do we need Release semantic\n    // or is Relaxed enough?\n    self.len.store(current_len + additional, atomic::Ordering::Release);\n}\n</code></pre>\n\n<p>I intentionally did not add the code to get the data, as this would lead to discussions that are not relevant here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1539895780, "post_id": 52882267, "comment_id": 92678223, "body": "Could you please be a bit more specific what you are trying to do, and what your problem is?  Why are you comparing the length to 1 in the Python code?  Have you tried translating the Python code directly to Rust, and did you encounter any problems when doing so?  Currently I don&#39;t understand what your specific problem is."}, {"owner": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 0, "creation_date": 1539895989, "post_id": 52882267, "comment_id": 92678320, "body": "He wants to find out if strings have characters in common. The python code converts both strings into sets and checks if length of the set intersection is larger than 0."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 12516, "user_id": 302268, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/c3985dffcdc646b67ed0699a364639e2?s=128&d=identicon&r=PG", "display_name": "Mad Wombat", "link": "https://stackoverflow.com/users/302268/mad-wombat"}, "edited": false, "score": 1, "creation_date": 1539896359, "post_id": 52882267, "comment_id": 92678468, "body": "@MadWombat I understand what the goal is.  What I don&#39;t understand is the specific problems.  The Ptyhon code translates to a Rust implementation in a rather straight-forward way, but the OP seems to have hit some obstacle.  Sure, I could just write the code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=2c0332c1e65051f72fd4808a95b5d9ad\" rel=\"nofollow noreferrer\">in fact I did</a>), but I think I could give a much more useful answer if I understand what the actual problem is.  And regarding the Python code, I was just wondering why it ends with <code>&lt; 1</code> instead of <code>!= 0</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539896563, "post_id": 52882267, "comment_id": 92678542, "body": "(I&#39;d generally write the Python code as simply <code>if set(s1) &amp; set(s2):</code> without bothering with <code>len()</code>.)"}, {"owner": {"reputation": 4058, "user_id": 1887118, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a850635ea6017cb2b33c5b3b620119cd?s=128&d=identicon&r=PG", "display_name": "nalyd88", "link": "https://stackoverflow.com/users/1887118/nalyd88"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539896678, "post_id": 52882267, "comment_id": 92678590, "body": "@SvenMarnach Thanks for the code example (you should post it as an answer). I&#39;m new to rust and thought there was probably a simpler way. As for the <code>&lt; 1</code>, it should be <code>!=0</code> but for some reason I didn&#39;t put that when I wrote it."}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539896758, "post_id": 52882267, "comment_id": 92678617, "body": "@SvenMarnach it might be better to use <code>is_disjoint</code> instead of building the intersection and then checking it, as it will short-circuit"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 1, "creation_date": 1539896841, "post_id": 52882267, "comment_id": 92678641, "body": "@PitaJ When writing Python, I often care more about conciseness and readability than performance, but you are right. :)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1539897224, "post_id": 52882267, "comment_id": 92678795, "body": "Your solution has time complexity O(<i>mn</i>), where <i>m</i> and <i>n</i> are the respective lengths of the two strings.  The solution using sets has an (amortised) complexity of O(<i>m</i> + <i>n</i>), so it is asymptotically a lot faster.  For very short strings, it might even be slightly slower, though."}, {"owner": {"reputation": 2638, "user_id": 7208029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QxbAJ.png?s=128&g=1", "display_name": "Chai T. Rex", "link": "https://stackoverflow.com/users/7208029/chai-t-rex"}, "edited": false, "score": 0, "creation_date": 1539898091, "post_id": 52882267, "comment_id": 92679106, "body": "If the range of possible characters is guaranteed to be small, you can use a bit array to record whether you&#39;ve seen a character in the first string and then check the bit array for each character in the second array."}], "answers": [{"tags": [], "owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "is_accepted": false, "score": 1, "last_activity_date": 1539897739, "last_edit_date": 1539897739, "creation_date": 1539896596, "answer_id": 52882539, "question_id": 52882267, "link": "https://stackoverflow.com/questions/52882267/how-to-find-if-two-strings-have-common-characters-in-rust/52882539#52882539", "title": "How to find if two strings have common characters in Rust", "body": "<p>You can approach it several ways, here are a couple options: </p>\n\n<ul>\n<li>build a set of the first string, and check if the second string contains a character in that set [O(n + m)]</li>\n<li>iterate through the first string's characters, and check whether the second string contains any of them [O(n * m)]</li>\n</ul>\n\n<p>I decided to use a <code>HashSet</code> but you could use a basic array if you only care about ascii (thus restricted to 256 possibilities).</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn share_char(a: &amp;str, b: &amp;str) -&gt; bool {\n    // get which one is shorter\n    let (shorter, longer) = if a.len() &gt; b.len() {\n        (b, a)\n    }  else {\n        (a, b)\n    };\n\n    // fill the set with the characters from the shorter string\n    let set: HashSet&lt;char&gt; = shorter.chars().collect();\n\n    longer.chars().any(|c| set.contains(&amp;c))\n}\n\n#[test]\nfn test() {\n    let str1 = \"abcdef\";\n    let str2 = \"the quick brown fox\";\n    let str3 = \"hijk\";\n\n    assert!(share_char(str1, str2));\n    assert!(!share_char(str1, str3));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=76567b94d3bd15b37e33acb9a8d701d5\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=76567b94d3bd15b37e33acb9a8d701d5</a></p>\n\n<p>Edit: changed to use collect</p>\n\n<p>Edit2: I want to explain why I did the shorter/longer check and why I didn't just build two sets.</p>\n\n<p>Inserting to a <code>HashSet</code> is a more expensive operation than just iterating over a string's characters. This means that there is a difference between building the set from the long string vs from the short one. Odds are that this difference is negligible as your strings are likely to be of similar lengths. </p>\n\n<p>This expense difference is also why I don't build a second set. Not only do we save that insertion cost, we can also save some iterations since our <code>any</code> will short-circuit if it finds a match.</p>\n\n<p>Edit3: Another thing. If you just want to check whether a string contains any of a given set of characters, you should use pattern matching.</p>\n\n<pre><code>str1.chars().any(|c| match c {\n    'a' | 'd' | 'f' | 'e' =&gt; true,\n    _ =&gt; false,\n});\n</code></pre>\n\n<p>This will be much more performant than even using a static Set.</p>\n"}, {"comments": [{"owner": {"reputation": 3489, "user_id": 9434800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/469a55ff2e5beb918a1ba26465ed5518?s=128&d=identicon&r=PG&f=1", "display_name": "Mickael B.", "link": "https://stackoverflow.com/users/9434800/mickael-b"}, "edited": false, "score": 2, "creation_date": 1588950466, "post_id": 61681476, "comment_id": 109105879, "body": "Please avoid code only answer and provide explanations on how it works, why is it more efficient ?"}], "tags": [], "owner": {"reputation": 62, "user_id": 7012450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea86ff04489de877713e719f785c0c57?s=128&d=identicon&r=PG", "display_name": "artem", "link": "https://stackoverflow.com/users/7012450/artem"}, "is_accepted": false, "score": 0, "last_activity_date": 1588995239, "last_edit_date": 1588995239, "creation_date": 1588948283, "answer_id": 61681476, "question_id": 52882267, "link": "https://stackoverflow.com/questions/52882267/how-to-find-if-two-strings-have-common-characters-in-rust/61681476#61681476", "title": "How to find if two strings have common characters in Rust", "body": "<p><code>.any + .contains</code> means iterate <strong>all</strong> elements from one string for <strong>each</strong> char from another one (complexity <code>O(nm)</code>);  </p>\n\n<hr>\n\n<p>Instead, you can use hashmap and store every <strong>char</strong> as key and <strong>bool</strong> or <strong>int</strong> as value:<br>\nin this case you store all chars from first string in first iteration and then iterate second string, trying to get each char from hashmap.<br>\nIf char exists, then return <code>true</code> immediately (complexity in worst case <code>O(n+m)</code>).</p>\n\n<hr>\n\n<p>For performance I recommend using array instead of HashMap when possible present keys as indices.</p>\n\n<pre><code>fn common_chars(s1: &amp;str, s2: &amp;str) -&gt; bool {\n   const ALPHABET_LEN: usize = 26;\n   const CHAR_CODE: usize = 97; // a-97, z-122\n   let mut alpahbet = [0; ALPHABET_LEN]; \n   for c in s1.chars() {\n      alpahbet[c as usize - CHAR_CODE] += 1; // store each char from first string\n   }\n   for c in s2.chars() {\n      if alpahbet[c as usize - CHAR_CODE] != 0 { // a stored char is found!\n         return true;\n      }\n   }\n   false\n}\n#[test]\nfn test() {\n   let str1 = \"abcdef\";\n   let str2 = \"the quick brown fox\";\n   let str3 = \"hijk\";\n   assert!(common_chars(str1, str2));\n   assert!(!common_chars(str1, str3));\n}\n</code></pre>\n"}], "owner": {"reputation": 4058, "user_id": 1887118, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a850635ea6017cb2b33c5b3b620119cd?s=128&d=identicon&r=PG", "display_name": "nalyd88", "link": "https://stackoverflow.com/users/1887118/nalyd88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 787, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1588995239, "creation_date": 1539895432, "last_edit_date": 1588949124, "question_id": 52882267, "link": "https://stackoverflow.com/questions/52882267/how-to-find-if-two-strings-have-common-characters-in-rust", "title": "How to find if two strings have common characters in Rust", "body": "<p>I'm new to rust and trying to find out if two strings share any common characters. I know there should be a simple way to do this without using regex (I'm not opposed to regex) maybe by using <code>my_str.chars().any()</code> but I'm not sure how to implement this. </p>\n\n<p>I've done it before in Python by comparing sets.</p>\n\n<pre><code>if len(set(candidate) &amp; set(required)) &lt; 1: \n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<pre><code>let result = candidate.chars().any(|c| required.contains(c));\n</code></pre>\n\n<p>So, I was able to get a solution to work using <code>any</code>. But since I'm new to rust, I'm not sure if its the best way. Perhaps using <code>HashSets</code> would be more efficient? My application is small so efficiency isn't a huge factor. What is the most \"rustic\" way?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 1, "last_activity_date": 1539892754, "creation_date": 1539892754, "answer_id": 52881626, "question_id": 52881280, "link": "https://stackoverflow.com/questions/52881280/how-to-correctly-represent-a-stack-based-language-in-rust/52881626#52881626", "title": "How to correctly represent a stack based language in Rust?", "body": "<p>The type <code>Fn(Vec&lt;Noun&gt;) -&gt; Noun</code> describes a <em>trait object</em>, a place holder for any type implemting this trait.  Since the trait could be implemented by plain functions or closures that capture additional variables, the compiler can't know how much space to allocate for such an object.  A trait object is \"dynamically sized\" and as such can't live on the stack.</p>\n\n<p>One option to resolve the error message is to store in on the heap instead:</p>\n\n<pre><code>enum Primitive&lt;T&gt; {\n    Noun(T),\n    Verb(Box&lt;dyn Fn(Vec&lt;Noun&gt;) -&gt; Noun&gt;),\n}\n</code></pre>\n\n<p>The <code>dyn</code> keyword makes explicit that we are dealing with a trait object, and that method calls on this object are dynamically dispatched.  It's optional in current Rust, but recommended in new code to make trait objects more obvious.</p>\n\n<p>An alternative is to use a plain function pointer instead of a trait object:</p>\n\n<pre><code>enum Primitive&lt;T&gt; {\n    Noun(T),\n    Verb(fn(Vec&lt;Noun&gt;) -&gt; Noun),\n}\n</code></pre>\n\n<p>A function pointer can only point to an ordinary function or a closure that does not capture any variables, and as such is statically sized, so it can be stored on the stack.</p>\n\n<p>Personally, I would probably implement a custom trait called <code>Function</code> or similar, and use</p>\n\n<pre><code>enum Primitive&lt;T&gt; {\n    Noun(T),\n    Verb(Box&lt;dyn Function&gt;),\n}\n</code></pre>\n\n<p>The custom trait will give you a lot more flexibility to attach metadata and additional methods to the trait object, e.g. a method to retrieve the number of inputs the function will consume.</p>\n"}], "owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 52881626, "answer_count": 1, "score": 0, "last_activity_date": 1539892754, "creation_date": 1539891354, "question_id": 52881280, "link": "https://stackoverflow.com/questions/52881280/how-to-correctly-represent-a-stack-based-language-in-rust", "title": "How to correctly represent a stack based language in Rust?", "body": "<p>I am trying to emulate section 3 of <a href=\"https://wiki.haskell.org/Parsing_a_simple_imperative_language\" rel=\"nofollow noreferrer\">Parsing a simple imperative language</a> (Haskell). In particular, I am considering a stack based language instead of an imperative language, and I am trying to right idiomatic Rust code to represent the data.</p>\n\n<p>Suppose you want to make a small (<em>really small</em>) <a href=\"https://en.wikipedia.org/wiki/Stack-oriented_programming\" rel=\"nofollow noreferrer\">stack based language</a> that has some basic arithmetic operations, no user defined functions, and works on decimal numbers and integers. So for example:</p>\n\n<pre><code>   1 2 +\n-&gt; Stack contains: 3\n</code></pre>\n\n<p>What's going on? Read from left to right, push 1 and 2 on the stack, and the <code>+</code> would push off the <code>1</code> and <code>2</code> and then push <code>3</code> (<code>= 1 + 2</code>) onto the stack.</p>\n\n<p>My idea is there to consider <code>3</code> types of \"primitives\" that need parsing. You have integers, decimal numbers, and functions. Furthermore, decimal and integers numbers are both \"nouns\", and functions are \"verbs\". So when executing a program my idea was you could represent these ideas in Rust by extending the idea of the <code>Result&lt;T, E&gt;</code> enum. I came up with the following scheme:</p>\n\n<pre><code>enum Noun {\n    Integer(i64),\n    Decimal(f64)\n}\n\nenum Primitive&lt;T&gt; {\n    Noun(T),\n    Verb(Fn(Vec&lt;Noun&gt;) -&gt; Noun),\n}\n\n// Not really important, just giving a main so it can be ran\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>In other words, a primitive is either a <code>Noun</code> or a <code>Verb</code>, and <code>Noun</code> is either an integer or a float.</p>\n\n<p>However, this results in:</p>\n\n<pre><code>error[E0277]: the trait bound `std::ops::Fn(std::vec::Vec&lt;Noun&gt;) -&gt; Noun + 'static: std::marker::Sized` is not satisfied\n --&gt; main.rs:8:10\n  |\n8 |     Verb(Fn(Vec&lt;Noun&gt;) -&gt; Noun),\n  |          ^^^^^^^^^^^^^^^^^^^^^^ `std::ops::Fn(std::vec::Vec&lt;Noun&gt;) -&gt; Noun + 'static` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `std::ops::Fn(std::vec::Vec&lt;Noun&gt;) -&gt; Noun + 'static`\n  = note: only the last field of a struct may have a dynamically sized type\n\nerror: aborting due to previous error(s)\n</code></pre>\n\n<p>What would be the standard way of doing this in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "edited": false, "score": 1, "creation_date": 1539894257, "post_id": 52880107, "comment_id": 92677520, "body": "This is a great answer thanks, and the exact question I had in mind"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539931177, "post_id": 52880107, "comment_id": 92686953, "body": "<code>warning: casting u8 to u32 may become silently lossy if types change</code> =&gt; <code>help: try: &#39;u32::from(x)&#39;</code> I think this clippy lint is awesome &lt;3"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539931583, "post_id": 52880107, "comment_id": 92687112, "body": "@hellow I answered the explicit question but I totally agree that stargateur&#39;s answer better solves OP&#39;s real problem here"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539932009, "post_id": 52880107, "comment_id": 92687293, "body": "I didn&#39;t say anything against your answer, it is simple and clear. I just said something about the <code>as</code> cast, because IMHO it is better to use <code>u32::from</code> instead."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 2, "last_activity_date": 1539931074, "last_edit_date": 1539931074, "creation_date": 1539886239, "answer_id": 52880107, "question_id": 52879882, "link": "https://stackoverflow.com/questions/52879882/how-can-i-bind-a-variable-in-a-map-function-to-a-type/52880107#52880107", "title": "How can I bind a variable in a map function to a type?", "body": "<p>You can cast with <code>as</code>.</p>\n\n<p>Change</p>\n\n<pre><code>.map(|(x, y)| *x.pow(y))\n</code></pre>\n\n<p>to</p>\n\n<pre><code>.map(|(x, y)| (*x as u32).pow(y))\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1539886824, "post_id": 52880167, "comment_id": 92673887, "body": "Or even better, <code>(1..10u32).zip...</code>."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1539891301, "last_edit_date": 1539891301, "creation_date": 1539886483, "answer_id": 52880167, "question_id": 52879882, "link": "https://stackoverflow.com/questions/52879882/how-can-i-bind-a-variable-in-a-map-function-to-a-type/52880167#52880167", "title": "How can I bind a variable in a map function to a type?", "body": "<p>Currently, the compiler doesn't guess what the type of your integer is.</p>\n\n<p>The compiler needs a hint:</p>\n\n<pre><code>pub fn is_armstrong_number(num: u32) -&gt; bool {\n    (1..10u32) // [1, 2, 3, 4, 5, 6, 7, 8, 9].iter()\n        .zip(num.to_string().chars().map(|c| c.to_digit(10).unwrap()))\n        .map(|(x, y)| x.pow(y))\n        .sum::&lt;u32&gt;() // .fold(0, |acc, x| acc + x)\n        == num\n}\n</code></pre>\n\n<hr>\n\n<p>Also note that your implementation of armstrong_number is wrong, a correct one could be:</p>\n\n<pre><code>fn is_armstrong_number(num: u32) -&gt; bool {\n    let buf = num.to_string();\n    let y = buf.chars().count() as u32;\n    buf.chars()\n        .map(|c| c.to_digit(10).unwrap())\n        .map(|x| x.pow(y))\n        .sum::&lt;u32&gt;()\n        == num\n}\n\nfn main() {\n    assert!(is_armstrong_number(153));\n    assert!(!is_armstrong_number(11));\n}\n</code></pre>\n\n<hr>\n\n<p>I also tried this one for fun:</p>\n\n<pre><code>extern crate num; // 0.2.0\n\n#[derive(Clone, Copy)]\nstruct DigitInteger&lt;T&gt; {\n    num: T,\n    radix: T,\n}\n\nimpl&lt;T&gt; Iterator for DigitInteger&lt;T&gt;\nwhere\n    T: num::Unsigned + num::Zero + Copy,\n{\n    type Item = T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.num != T::zero() {\n            let ret = self.num % self.radix;\n            self.num = self.num / self.radix;\n            Some(ret)\n        } else {\n            None\n        }\n    }\n}\n\nfn is_armstrong_number&lt;T&gt;(num: T, radix: T) -&gt; bool\nwhere\n    T: num::Unsigned,\n    T: num::pow::Pow&lt;T&gt;,\n    T: num::FromPrimitive,\n    T: std::iter::Sum&lt;&lt;&lt;DigitInteger&lt;T&gt; as std::iter::Iterator&gt;::Item as num::traits::Pow&lt;T&gt;&gt;::Output&gt;,\n    T: Copy,\n{\n    use num::pow::Pow;\n    let d = DigitInteger { num, radix };\n    let y = T::from_usize(d.count()).unwrap();\n    d.map(|x| Pow::pow(x, y)).sum::&lt;T&gt;() == num\n}\n\nfn main() {\n    assert!(is_armstrong_number(153u32, 10));\n    assert!(!is_armstrong_number(11u32, 10));\n    assert!(is_armstrong_number(1u32, 2));\n    assert!(!is_armstrong_number(2u32, 2));\n}\n</code></pre>\n"}], "owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 52880167, "answer_count": 2, "score": 1, "last_activity_date": 1539931074, "creation_date": 1539885272, "last_edit_date": 1539886351, "question_id": 52879882, "link": "https://stackoverflow.com/questions/52879882/how-can-i-bind-a-variable-in-a-map-function-to-a-type", "title": "How can I bind a variable in a map function to a type?", "body": "<p>How can I tell the compiler that this is a type that should have a function <code>pow()</code>?  </p>\n\n<pre><code>pub fn is_armstrong_number(num: u32) -&gt; bool {\n\n  [1, 2, 3, 4, 5, 6, 7, 8, 9].iter()\n                             .zip( num.to_string().chars()\n                             .map(|c| c.to_digit(10).unwrap()) )\n                             .map(|(x, y)| *x.pow(y))\n                             .fold(0, |acc, x| acc + x) == num\n\n}\n</code></pre>\n\n<p>Error: </p>\n\n<pre><code>error[E0599]: no method named `pow` found for type `&amp;{integer}` in the current scope\n  --&gt; src/lib.rs:10:47\n   |\n10 |                              .map(|(x, y)| *x.pow(y))\n   |                                               ^^^\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539884856, "post_id": 52879608, "comment_id": 92672912, "body": "I get a error saying <code>no method named &quot;unwrap&quot; found for type &quot;std::result::Result&lt;MyObjectl, std::rc::Rc&lt;Myobject&gt;&gt;&quot; in the current scope</code>. This is because unwrap requires the Rc Error to have the Debug trait implemented. <a href=\"https://stackoverflow.com/a/30994296/3738647\">stackoverflow.com/a/30994296/3738647</a>   the method <code>unwrap</code> exists but the following trait bounds were not satisfied:           `std::rc::Rc&lt;ics_channels::ics_channel::Channel&gt; : std::fmt::Debug"}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539895592, "post_id": 52879608, "comment_id": 92678130, "body": "@user373864q that&#39;s weird, because it works just fine on the playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=b0512ce5676eaf2bc5c7284b2a2a694e\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> what version of rust are you on?"}, {"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539899352, "post_id": 52879608, "comment_id": 92679552, "body": "1.29.1 It may because I am using an object instead of a primitive."}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539902784, "post_id": 52879608, "comment_id": 92680554, "body": "You might be doing it wrong. You don&#39;t just call <code>.unwrap()</code> on the Rc. You have to do <code>try_unwrap</code> first like in my example"}, {"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539906503, "post_id": 52879608, "comment_id": 92681342, "body": "I tried that   <code>pub fn get_things (&amp;self) -&gt; Vec&lt;Thing&gt; {          self.things.into_iter().map(|x| Rc::try_unwrap(x).unwrap()).collect()  }</code>"}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539923786, "post_id": 52879608, "comment_id": 92684846, "body": "Can you sharea playground link with a reproduction? Maybe then I can help."}], "tags": [], "owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "is_accepted": false, "score": 1, "last_activity_date": 1539884102, "creation_date": 1539884102, "answer_id": 52879608, "question_id": 52878968, "link": "https://stackoverflow.com/questions/52878968/cloning-from-vec-of-ref-counted-times-to-a-vec-of-object/52879608#52879608", "title": "Cloning from Vec of Ref Counted times to a vec of object", "body": "<p>If you want to avoid cloning anything, and you only have one reference to each value in the array, then you can just unwrap the <code>Rc</code>s:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let strs = vec![Rc::new(\"aghaj\".to_string()); 7];\n\n    println!(\"{:?}\", strs);\n\n    let unwrapped: Vec&lt;_&gt; = strs\n        .into_iter()\n        .map(|x| Rc::try_unwrap(x).unwrap())\n        .collect();\n\n    println!(\"{:?}\", unwrapped);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "edited": false, "score": 0, "creation_date": 1539885922, "post_id": 52879822, "comment_id": 92673452, "body": "Thank you very much this was very helpful."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1539885652, "last_edit_date": 1539885652, "creation_date": 1539884990, "answer_id": 52879822, "question_id": 52878968, "link": "https://stackoverflow.com/questions/52878968/cloning-from-vec-of-ref-counted-times-to-a-vec-of-object/52879822#52879822", "title": "Cloning from Vec of Ref Counted times to a vec of object", "body": "<p>You can use the usual <code>iter().map(...).collect()</code> pattern for this.  Inside the map, you need to create a clone of the item inside the <code>Rc</code> by dereferencing first and then calling <code>clone()</code>:</p>\n\n<pre><code>let v: Vec&lt;_&gt; = (0..10).map(|_| Rc::new(String::from(\"a\"))).collect();\nlet v: Vec&lt;_&gt; = v.iter().map(|s| (**s).clone()).collect();\n</code></pre>\n\n<p>The type of <code>s</code> in the closure is <code>&amp;Rc&lt;String&gt;</code>.  By dereferencing once, you get <code>Rc&lt;String&gt;</code>.  By dereferencing again you get a <code>String</code>.  The string is implicitly reborrowed for the call to <code>clone()</code>, which returns a copy of the string.</p>\n"}], "owner": {"reputation": 485, "user_id": 3738647, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f5b08c58e77723f0faee4d1bd45f64bd?s=128&d=identicon&r=PG", "display_name": "ZNackasha", "link": "https://stackoverflow.com/users/3738647/znackasha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 52879822, "answer_count": 2, "score": 2, "last_activity_date": 1539886407, "creation_date": 1539881671, "last_edit_date": 1539886407, "question_id": 52878968, "link": "https://stackoverflow.com/questions/52878968/cloning-from-vec-of-ref-counted-times-to-a-vec-of-object", "title": "Cloning from Vec of Ref Counted times to a vec of object", "body": "<p>I currently I have a <code>Vec&lt;Rc&lt;Item&gt;&gt;</code> and I would very much like to have a <code>Vec&lt;Item&gt;</code> in which each Rc item is cloned into the new Vec. How do I accomplish this?</p>\n"}, {"tags": ["rust", "graph-algorithm", "petgraph"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1539865155, "post_id": 52873390, "comment_id": 92661108, "body": "As the error message states, the correct trait is called <code>IntoNeighborsDirected</code>, if you really want to be generic over <code>G</code>.  If you just want to get something working, it may be quicker to implement this for a concrete type first (e.g. <code>Graph</code>)."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539867458, "post_id": 52873390, "comment_id": 92662516, "body": "Always try to give us an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>. I edited it, so you can see, what I mean. Now I can copy&amp;paste the code into the playground (better you provide us a playground ;) ) and start solving your problem."}, {"owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "edited": false, "score": 0, "creation_date": 1539881543, "post_id": 52873390, "comment_id": 92671252, "body": "Thanks! I didn&#39;t know that the Rust playground supports crates as well - that&#39;s a nifty feature."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1539867295, "creation_date": 1539867295, "answer_id": 52874542, "question_id": 52873390, "link": "https://stackoverflow.com/questions/52873390/random-walk-using-petgraph/52874542#52874542", "title": "Random walk using petgraph", "body": "<p>The solution is quiet clear, if you understand the compiler.<br>\nRust does not assume anything about the type, unless you specify it, e.g. you can't add two types <code>T</code> together, unless the implement the <a href=\"https://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"nofollow noreferrer\"><code>Add</code></a> trait. Then you can write <code>T + T</code>.<br>\nYour problem is very similar.</p>\n\n<p>You are trying to use the function <code>neighbors_directed</code> which is not implemented for <code>G</code> (which is bound to <code>GraphBase</code> in your example). Instead you have to specify that <code>G</code> also must implement the trait <a href=\"https://docs.rs/petgraph/0.4.13/petgraph/visit/trait.IntoNeighborsDirected.html\" rel=\"nofollow noreferrer\"><code>IntoNeighborsDirected</code></a> by adding that to your impl block.</p>\n\n<pre><code>impl&lt;G&gt; Walker&lt;G&gt; for RandomWalk&lt;G&gt; where G: GraphBase + IntoNeighborsDirected\n</code></pre>\n\n<p>This will tell the compiler, that <code>G</code> has the method <code>neighbors_directed</code> implemented and you can use it (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=1e63fd476c10f34b547d06aa97423450\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}], "owner": {"reputation": 1143, "user_id": 1233615, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b941941886b3fdc1e8a3596ff5cd3f0a?s=128&d=identicon&r=PG", "display_name": "fuji", "link": "https://stackoverflow.com/users/1233615/fuji"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 52874542, "answer_count": 1, "score": 0, "last_activity_date": 1580252287, "creation_date": 1539863613, "last_edit_date": 1580252287, "question_id": 52873390, "link": "https://stackoverflow.com/questions/52873390/random-walk-using-petgraph", "title": "Random walk using petgraph", "body": "<p>I am trying to implement a random walk on a directed graph using the <code>petgraph</code> crate.</p>\n\n<p>So far, I have defined a <code>RandomWalk</code> struct which implements the <code>Walker</code> trait:</p>\n\n<pre><code>extern crate petgraph; // 0.4.13\nuse petgraph::visit::{GraphBase, Walker};\nuse petgraph::Direction;\n\npub struct RandomWalk&lt;G&gt; \n    where G: GraphBase\n{\n   next: G::NodeId, \n}\n\nimpl&lt;G&gt; Walker&lt;G&gt; for RandomWalk&lt;G&gt;\n    where G: GraphBase\n{\n   type Item = G::NodeId; \n\n   fn walk_next(&amp;mut self, graph: G) -&gt; Option&lt;Self::Item&gt; {\n       // Even this deterministic walk does not work:\n       graph.neighbors_directed(self.next, Direction::Incoming).next()\n   }\n}\n</code></pre>\n\n<p>However, I get the error:</p>\n\n<pre><code>error[E0599]: no method named `neighbors_directed` found for type `G` in the current scope\n  --&gt; src/lib.rs:50:11\n   |\n50 |     graph.neighbors_directed(self.next, Direction::Incoming).next()\n   |           ^^^^^^^^^^^^^^^^^^\n   |\n   = note: the method `neighbors_directed` exists but the following trait bounds were not satisfied:\n           `&amp;G : petgraph::visit::IntoNeighborsDirected`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `neighbors_directed`, perhaps you need to implement it:\n           candidate #1: `petgraph::visit::IntoNeighborsDirected`\n</code></pre>\n\n<p>I don't really understand how the <code>petgraph</code> API works, is <code>GraphBase</code> not the correct type?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539861974, "post_id": 52872553, "comment_id": 92659308, "body": "Why do you try to recode peek ? why not just use it ? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=14b210184e2d30df299a3caaf2b1cebd\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 3, "user_id": 10523509, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KT-fXw73Ih0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbC4IHYGbyMDj__gpb5pISK_G387MA/mo/photo.jpg?sz=128", "display_name": "Michael Heinrich", "link": "https://stackoverflow.com/users/10523509/michael-heinrich"}, "edited": false, "score": 0, "creation_date": 1539862584, "post_id": 52872553, "comment_id": 92659642, "body": "I wanted to hide the creation of a peekable to make it more generic"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539863225, "post_id": 52872553, "comment_id": 92659978, "body": "I recommend stating your actual goal in your question, not just what you tried and how it failed.  This way the answers you get will be a lot more useful."}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 10523509, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KT-fXw73Ih0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbC4IHYGbyMDj__gpb5pISK_G387MA/mo/photo.jpg?sz=128", "display_name": "Michael Heinrich", "link": "https://stackoverflow.com/users/10523509/michael-heinrich"}, "edited": false, "score": 0, "creation_date": 1539862935, "post_id": 52872890, "comment_id": 92659830, "body": "Thanks. I was put on the wrong track by peek() itself. I now understand that the peekable is not advanced but Iterator is. It means my tests are incorrect and not the implementation."}, {"owner": {"reputation": 3, "user_id": 10523509, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KT-fXw73Ih0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbC4IHYGbyMDj__gpb5pISK_G387MA/mo/photo.jpg?sz=128", "display_name": "Michael Heinrich", "link": "https://stackoverflow.com/users/10523509/michael-heinrich"}, "edited": false, "score": 0, "creation_date": 1539863346, "post_id": 52872890, "comment_id": 92660038, "body": "I will be using cloned() from now on. Thank you."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1539864121, "last_edit_date": 1539864121, "creation_date": 1539861863, "answer_id": 52872890, "question_id": 52872553, "link": "https://stackoverflow.com/questions/52872553/unexpected-iterator-behaviour-when-using-peekable/52872890#52872890", "title": "Unexpected iterator behaviour when using peekable", "body": "<p>The documentation of <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.peekable\" rel=\"nofollow noreferrer\"><code>Iterator::peekable()</code></a> explicitly documents this behaviour:</p>\n\n<blockquote>\n  <p>Note that the underlying iterator is still advanced when <code>peek</code> is called for the first time: In order to retrieve the next element, <code>next</code> is called on the underlying iterator, hence any side effects (i.e. anything other than fetching the next value) of the <code>next</code> method will occur.</p>\n</blockquote>\n\n<p>Since <code>Peekable</code> works on arbitrary iterators, it can only use the standard iterator interface to peek at the next element, and the only way to get the next element from a generic <code>Iterator</code> is to call <code>next</code> on it.</p>\n\n<p>I'd like to add a bit more context on what's going on in your code.  The struct <code>Peekable</code> is an iterator adapter.  If you have an iterator <code>iter</code>, you can call <code>iter.peekable()</code> to get a <em>new</em> iterator that supports peeking at the next element.  The method <code>peekable()</code> takes <code>self</code> by value, which means it consumes the original iterator.  So the standard way to use it is code like this:</p>\n\n<pre><code>let mut iter = \"abc\".chars().peekable();\n</code></pre>\n\n<p>Now <code>iter</code> is a peekable iterator, and peeking does <em>not</em> advance <code>iter</code> itself, but only the underlying iterator, which is wrapped in <code>Peekable</code> and not directly accessible anymore.</p>\n\n<p>In your code, however, you create a new <code>Peekable</code> wrapper everytime <code>peek_first()</code> is called.  The wrapper is dropped at the end of <code>peek_first()</code>.  In your test function you only see the underlying iterator, which is advanced every time, as stated in the documentation.</p>\n\n<p>So why is it even possible to retain access to the underlying iterator if <code>peekable()</code> takes <code>self</code> by value and consumes it?  This is because of <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#impl-Iterator-13\" rel=\"nofollow noreferrer\">the forwarding implementation of the <code>Iterator</code> trait for mutable references to iterators</a>:</p>\n\n<pre><code>impl&lt;'_, I&gt; Iterator for &amp;'_ mut I\nwhere\n    I: Iterator + ?Sized;\n</code></pre>\n\n<p>The <code>peek_first()</code> method receives <code>self</code> by mutable reference, so it can't consume the underlying iterator.  It instead uses the forwarding implementation for mutable references to iterators, and only consumes the mutable reference.</p>\n\n<p>As a side note, you use <code>.and_then(|c| Some(*c))</code> to turn an <code>Option&lt;&amp;T&gt;</code> into an <code>Option&lt;T&gt;</code>.  There is a dedicated method for this, which is called <code>cloned()</code>.</p>\n"}], "owner": {"reputation": 3, "user_id": 10523509, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KT-fXw73Ih0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbC4IHYGbyMDj__gpb5pISK_G387MA/mo/photo.jpg?sz=128", "display_name": "Michael Heinrich", "link": "https://stackoverflow.com/users/10523509/michael-heinrich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 52872890, "answer_count": 1, "score": 0, "last_activity_date": 1539864121, "creation_date": 1539860671, "last_edit_date": 1539862229, "question_id": 52872553, "link": "https://stackoverflow.com/questions/52872553/unexpected-iterator-behaviour-when-using-peekable", "title": "Unexpected iterator behaviour when using peekable", "body": "<pre><code>use std::str::Chars;\n\ntrait Extractor {\n    fn peek_first(&amp;mut self) -&gt; Option&lt;char&gt;;\n}\n\nimpl &lt;'a&gt; Extractor for Chars&lt;'a&gt; {\n    fn peek_first(&amp;mut self) -&gt; Option&lt;char&gt; {\n        let mut pk = self.peekable();\n        pk.peek().and_then(|c| Some(*c))\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use std::str::Chars;\n    use super::Extractor;\n\n    #[test]\n    fn peek_first_test() {\n        let mut iterator: Chars;\n        iterator = \"\".chars();\n        assert_eq!(iterator.peek_first(), None);\n        assert_eq!(iterator.as_str(), \"\".to_string());\n\n        iterator = \"A\".chars();\n        assert_eq!(iterator.peek_first(), Some('A'));\n        assert_eq!(iterator.as_str(), \"A\".to_string());\n\n        iterator = \"AB\".chars();\n        assert_eq!(iterator.peek_first(), Some('A'));\n        assert_eq!(iterator.as_str(), \"AB\".to_string());\n    }\n} \n</code></pre>\n\n<p>I am trying out traits and wanted to put a peek_first() on an Chars iterator. As you can see I use a peekable to get a peekable iterator off the self iterator. I made a test to see if the peek_first() would not alter the self iterator state but it did. The peeked for element changes the underlying iterator and advances it. </p>\n\n<p>The test </p>\n\n<pre><code>assert_eq!(iterator.as_str(), \"A\".to_string());\n</code></pre>\n\n<p>fails as iterator.as_str() evaluates to an empty string.</p>\n\n<p>Is this correct behaviour or not? I couldn't find this in any of the documentation for rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539851481, "post_id": 52869795, "comment_id": 92653536, "body": "My advice would be, don&#39;t. Use proper functions instead. You won&#39;t be able to ever touch that code again, because you don&#39;t understand how it works after a week or two. Even then I would be afraid to destroy the lifetimes which will occur, after you fixed the Sync thing (Just add <code>+ Sync</code> to your impls)"}, {"owner": {"reputation": 355, "user_id": 1574106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b194afd8e8777547fff445a99c918296?s=128&d=identicon&r=PG", "display_name": "Dave Mason", "link": "https://stackoverflow.com/users/1574106/dave-mason"}, "edited": false, "score": 0, "creation_date": 1545578684, "post_id": 52869795, "comment_id": 94654182, "body": "According to <a href=\"https://stackoverflow.com/questions/52885698/how-to-do-things-equal-to-nested-impl-trait\">this other question</a> you can box the dyn reference."}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1539850686, "creation_date": 1539850686, "question_id": 52869795, "link": "https://stackoverflow.com/questions/52869795/how-to-call-a-recursive-closure-in-a-new-thread", "title": "How to call a recursive closure in a new thread?", "body": "<p><a href=\"https://github.com/Stebalien/tool-rs\" rel=\"nofollow noreferrer\">tool</a> is a grab-bag of useful functions for functional programming includes <a href=\"https://docs.rs/tool/0.2.1/tool/fn.fix.html\" rel=\"nofollow noreferrer\">making recursive closure</a>, for example:</p>\n\n<pre><code>extern crate tool;\nuse tool::prelude::*;\n\nfn main() {\n    let fib = fix(move |f, x| {\n        if x == 0 || x == 1 {\n            x\n        } else {\n            // `f` is `fib`\n            f(x - 1) + f(x - 2)\n        }\n    });\n\n    println!(\"{}\", fib(10)); // print 55\n}\n</code></pre>\n\n<p>Things I want to implement is here : <a href=\"https://play.rust-lang.org/?gist=2b1d0a825c1512a40190994a05ac1f7d\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Here's the overview: I'm defining a <code>function A</code> which take a <code>function B</code> as parameter, again the <code>function B</code> take <code>function C</code> as parameter. I need to call the <code>function C</code> in a new thread, In this case using <code>&amp;dyn</code> keyword for the inner function gives me an error:</p>\n\n<pre><code>fn a(b: impl Fn(&amp;dyn Fn() -&gt; ()) -&gt; ()) -&gt; () {\n // ...\n} \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn std::ops::Fn() -&gt;()` cannot be shared between threads safely\n</code></pre>\n\n<p>I try the syntax like below, but this gives me an another error: </p>\n\n<pre><code>fn a(b: impl Fn(impl Fn() -&gt; ()) -&gt; ()) -&gt; () {\n // ...\n}  \n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0666]: nested `impl Trait` is not allowed\n --&gt; src/main.rs:2:21\n  |\n2 |     fn a(b: impl Fn(impl Fn() -&gt; ()) -&gt; ()) -&gt; () {\n  |             --------^^^^^^^^^^^^^^^-------\n  |             |       |\n  |             |       nested `impl Trait` here\n  |             outer `impl Trait`\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "mutex"], "comments": [{"owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "edited": false, "score": 0, "creation_date": 1539833129, "post_id": 52866447, "comment_id": 92646813, "body": "Well, it won&#39;t work for other reasons (that the siv main loop won&#39;t ever give back a lock), but the main question still stands."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1539838435, "post_id": 52866447, "comment_id": 92648020, "body": "Please include more code to look at. Naive assumptions on the types you wrote works. See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=580fbadc583c66bcb60d1f4560284454\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Basically, your error message says the <code>Cursive</code> type is not <code>Sync</code>, so <code>Arc&lt;Mutex&lt;Cursive&gt;&gt;</code> is not <code>Send</code>."}, {"owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 1, "creation_date": 1539840313, "post_id": 52866447, "comment_id": 92648494, "body": "@EarthEngine Why wouldn&#39;t Mutex make it sync? Isn&#39;t that the point of Mutex?"}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1539840423, "post_id": 52866447, "comment_id": 92648527, "body": "This is why I need to look at how things being defined... guessing does not make sense."}, {"owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 1, "creation_date": 1539843821, "post_id": 52866447, "comment_id": 92649679, "body": "@EarthEngine Is this enough?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1539869727, "post_id": 52866447, "comment_id": 92664037, "body": "It appears that the ncurses backend in cursive was built using <code>Cell</code>s and <code>RefCell</code>s, making it completely thread unsafe. If you really need multithreading, I can only advise to use the Actor pattern."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1540163759, "post_id": 52866447, "comment_id": 92750815, "body": "Yes... This is another GOOD part of Rust: by making <code>&amp;Cell</code> not <code>Send</code>, it turns the traditional &quot;Access UI component in the creation UI thread only&quot; rule into a compile rule."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 3, "last_activity_date": 1539841213, "creation_date": 1539841213, "answer_id": 52867633, "question_id": 52866447, "link": "https://stackoverflow.com/questions/52866447/can-i-safely-multithread-something-which-isnt-meant-to-be-multithreaded/52867633#52867633", "title": "Can I safely multithread something which isn&#39;t meant to be multithreaded?", "body": "<blockquote>\n  <p>What is rust trying to protect me against [...]</p>\n</blockquote>\n\n<p>Something in what you're sending between threads contains a <code>dyn cursive::traits::View</code> trait object.  This trait object is not <code>Send</code>.  It needs to be <code>Send</code> because by putting it inside an <code>Arc</code>, you can no longer predict which thread will be responsible for destroying it, so it must be safe to transfer ownership between threads.</p>\n\n<blockquote>\n  <p>[...] can I do anything about it?</p>\n</blockquote>\n\n<p>You haven't provided enough context to say for certain, but probably not.</p>\n\n<p>You could <em>maybe</em> try using a plain borrowed reference (plus a threading library that supports scoped threads), but I can't say if that will work for you.</p>\n\n<blockquote>\n  <p>Why wouldn't Mutex make it sync? Isn't that the point of Mutex? </p>\n</blockquote>\n\n<p>No.  It can't make something thread-safe when it wasn't already thread-safe.  <code>Mutex</code> just manages exclusive access to a value, it doesn't make that access from different threads safe.  The only thing that can make a type thread-safe is the type in question.</p>\n\n<p>Making a guess: the library was written such that it does not require thread safety, thus <code>Arc</code> cannot assume it's thread-safe, so it refuses to compile.</p>\n"}, {"tags": [], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "is_accepted": false, "score": 0, "last_activity_date": 1540163451, "last_edit_date": 1540163451, "creation_date": 1539901814, "answer_id": 52883485, "question_id": 52866447, "link": "https://stackoverflow.com/questions/52866447/can-i-safely-multithread-something-which-isnt-meant-to-be-multithreaded/52883485#52883485", "title": "Can I safely multithread something which isn&#39;t meant to be multithreaded?", "body": "<p>I don't know what your actual code is. But the following example replicate the exact error you have:</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Mutex,Arc};\n\nstruct Cursive;\nimpl Default for Cursive {\n    fn default() -&gt; Self {\n        Cursive\n    }\n}\ntrait View{\n    fn run(&amp;self);\n}\nimpl View for Cursive{\n    fn run(&amp;self){}\n}\n\nfn main() {\n    let mut siv:Arc&lt;Mutex&lt;dyn View&gt;&gt; = Arc::new(Mutex::new(Cursive::default()));\n    let copy_siv = siv.clone();\n\n    thread::spawn(move || {\n        let mut new_siv = copy_siv.lock().unwrap();\n    });\n\n    (*(siv.lock().unwrap())).run();\n}\n</code></pre>\n\n<p>You can try it in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=99b10199e5a097d36c9b79e7936d5726\" rel=\"nofollow noreferrer\">playground</a>. The error message:</p>\n\n<pre><code>error[E0277]: `dyn View` cannot be sent between threads safely\n  --&gt; src/main.rs:21:5\n   |\n21 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^ `dyn View` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `dyn View`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;dyn View&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;dyn View&gt;&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:21:19: 23:6 copy_siv:std::sync::Arc&lt;std::sync::Mutex&lt;dyn View&gt;&gt;]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<h1>Analysis and Solution</h1>\n\n<p>The error message explained everything to experienced users. For those new to the language, <code>siv</code> is a reference counted, mutex protected trait object. This object only known to be a <code>View</code>, the compiler have no evidence on whether or not it is <code>Send</code>. However, for the code to work,</p>\n\n<ul>\n<li><code>Arc&lt;Mutex&lt;T&gt;&gt;</code> must be <code>Send</code>, as you are sending such a thing to another thread; Therefore:</li>\n<li><code>Mutex&lt;T&gt;</code> must be <code>Send</code> and <code>Sync</code>, as <code>Arc</code> requires the reference counted object to be <code>Send</code> and <code>Sync</code>. Therefore:</li>\n<li><code>T</code> must be <code>Send</code>, as the same object will be accessed in different threads without any further protection.</li>\n</ul>\n\n<p>So, this code does not work. The solution is </p>\n\n<pre><code>let mut siv:Arc&lt;Mutex&lt;dyn View + Send&gt;&gt; = ...\n</code></pre>\n\n<p>You can try it yourself!</p>\n\n<h1><code>Mutex&lt;T&gt;: Send + Sync</code> requires <code>T: Send</code></h1>\n\n<p>To see why, first ask a question: what cannot be <code>Send</code>?</p>\n\n<p>One example is that references to things with interior mutablity cannot be <code>Send</code>. Because if they were, people can mutate the thing through interior mutability in different threads and causes data race.</p>\n\n<p>Now suppose you have a <code>Mutex&lt;&amp;Cell&lt;T&gt;&gt;</code>, because the protected thing is only a reference, not the <code>Cell</code> itself, the <code>Cell</code> itself may still be somewhere unprotected. The compiler thus cannot conclude when you call <code>lock().set()</code> there is no risk to cause data race. So the compiler prevent it from <code>Send</code>.</p>\n\n<h1>What if I have to ...</h1>\n\n<p>So we see that <code>&amp;Cell&lt;T&gt;</code> is not <code>Send</code>, and so even it is protected in <code>Mutex</code> we still cannot use it in another thread. What can we do then?</p>\n\n<p>This problem is actually not new. Almost all UI API have the same problem: the UI components were created in the UI thread, and so you cannot access them in any other threads. Instead, you have to schedule a routine to be run in the UI thread, and let the UI thread to access the component.</p>\n\n<p>Fails to do so in other languages (.NET, Java...) will throw exceptions in the best, causing undefined behavior in the worst. Once again, Rust turns such violates into compile errors without special treatments (<code>&amp;Cell&lt;T&gt;</code> have nothing to do with UI), this is really GOOD!</p>\n\n<p>So, if this is what you wanted to do, you have to do the same thing: access the view object in the UI thread only. How to do so depends on the API you were using.</p>\n"}], "owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 365, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1540163451, "creation_date": 1539832280, "last_edit_date": 1539859694, "question_id": 52866447, "link": "https://stackoverflow.com/questions/52866447/can-i-safely-multithread-something-which-isnt-meant-to-be-multithreaded", "title": "Can I safely multithread something which isn&#39;t meant to be multithreaded?", "body": "<p>I'm using a trait which isn't designed around multithreading (Cursive).</p>\n\n<p>Now, while it's using multithreading, it's going to be behind a mutex, so it won't be able to be used at two threads at the same time.</p>\n\n<p>What is rust trying to protect me against and can I do anything about it?</p>\n\n<p>For sample reference, my sample code is:</p>\n\n<pre><code>extern crate cursive;\n\nuse cursive::Cursive;\nuse std::thread;\nuse std::sync::{Mutex,Arc};\n\nfn main() {\n    let mut siv = Arc::new(Mutex::new(Cursive::default()));\n    let copy_siv = siv.clone();\n\n    thread::spawn(move || {\n        let mut new_siv = copy_siv.lock().unwrap();\n    });\n\n    (*(siv.lock().unwrap())).run();\n }\n</code></pre>\n\n<p>The compiler complains at <code>thread::spawn</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Error[E0277]: `(dyn cursive::traits::View + 'static)` cannot be sent between threads safely\n   --&gt; src/main.rs:16:5\n   |\n16 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^ `(dyn cursive::traits::View + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn cursive::traits::View + 'static)`\n</code></pre>\n"}, {"tags": ["rust", "tuples", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 1610, "user_id": 145214, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ed4e23089f1581820603219baea49d51?s=128&d=identicon&r=PG", "display_name": "Kitson", "link": "https://stackoverflow.com/users/145214/kitson"}, "edited": false, "score": 0, "creation_date": 1539897917, "post_id": 52870731, "comment_id": 92679029, "body": "Thanks, while it does take a bit more manipulation for it to actually work for me, this does seem to explain the root cause of it."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 1, "last_activity_date": 1539875511, "last_edit_date": 1539875511, "creation_date": 1539854017, "answer_id": 52870731, "question_id": 52866443, "link": "https://stackoverflow.com/questions/52866443/resolve-to-a-tuple-for-a-future/52870731#52870731", "title": "Resolve to a tuple for a future", "body": "<p>The first element of your tuple is a future, but the second element is an <code>Option</code>.  While <code>IntoFuture</code> is implemented for tuples as long as all elements implement it and the error types match, you only have a single future to resolve, so there is an easier solution.</p>\n\n<p>Another problem is that <code>response.into_body()</code> consumes <code>response</code>, so you can't access it later to retrieve the headers.  Since we have only a single future to resolve, the easiest solution is to extract the content type from the response first, and then attach it to the result in the <code>map()</code> method:</p>\n\n<pre><code>let result = client\n    .get(\"https://www.stackoverflow.com/\".parse().unwrap())\n    .map_err(|err| Error::from(err))\n    .and_then(|response| {\n        let content_type = response\n            .headers()\n            .get(CONTENT_TYPE)\n            .map(|content_type| content_type.to_str().unwrap().to_string());\n        response\n            .into_body()\n            .concat2()\n            .map(|body| (\n                String::from_utf8(body.to_vec()).unwrap(),\n                content_type,\n            ))\n            .map_err(|err| Error::from(err))\n    });\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=ce423a6a2937d7a813a236475dd3aa8c\" rel=\"nofollow noreferrer\">Full example code in the playground</a></p>\n\n<p>If you still have trouble making the code work, I suggest posting a question including a minimal example of the actual code you try compiling as well as the actual error message you get.  Error messages for code using future combinators can get long and confusing, but they are still the most important bit of information to understand why the code doesn't compile.</p>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539873076, "post_id": 52873398, "comment_id": 92666224, "body": "Thanks for pointing out that a tuple of futures can be returned directly, and is implicity joined by the <code>IntoFuture</code> implementation for tuples. However, I believe your example code is wrong; <code>response.into_body().concat2()</code> already <i>is</i> a future.  You wrap that future in <code>Ok()</code>, which results in a future resolving immediately and returning the unresolved future.  I don&#39;t think this is useful in any way."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539873275, "post_id": 52873398, "comment_id": 92666344, "body": "Moreover, if you really wanted to return a tuple of values that both aren&#39;t futures, it would be rather pointless to chain them on with <code>and_then()</code> by artificially turning them into futures.  It would be a lot easier to simply use <code>map()</code> instead."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 0, "last_activity_date": 1539889813, "last_edit_date": 1539889813, "creation_date": 1539863650, "answer_id": 52873398, "question_id": 52866443, "link": "https://stackoverflow.com/questions/52866443/resolve-to-a-tuple-for-a-future/52873398#52873398", "title": "Resolve to a tuple for a future", "body": "<p>Your problem boils down to:</p>\n\n<pre><code>use futures::*;\n\nstruct Foo {}\n\nimpl Future for Foo {\n    type Item = u32;\n    type Error = u32;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        Ok(Async::Ready(100))\n    }\n}\n\nfn main() {\n    let f = Foo {};\n\n    let _result = f\n        .and_then(|val| {\n            (val * 2, val * 4)\n        });\n}\n</code></pre>\n\n<p>That gives:</p>\n\n<pre><code>   |                                    \n18 |  .and_then(|val| {\n   |   ^^^^^^^^ the trait `futures::future::IntoFuture` is not implemented for `(u32, u32)`\n</code></pre>\n\n<p>By the way <a href=\"https://docs.rs/futures/0.2.1/futures/future/trait.IntoFuture.html#impl-IntoFuture-1\" rel=\"nofollow noreferrer\"><code>IntoFuture</code></a> is implemented for <code>Result</code>:</p>\n\n<pre><code>impl&lt;T, E&gt; IntoFuture for Result&lt;T, E&gt;\n</code></pre>\n\n<p>And for <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.IntoFuture.html#foreign-impls\" rel=\"nofollow noreferrer\">the tuple</a>:</p>\n\n<pre><code>impl&lt;A, B&gt; IntoFuture for (A, B) \nwhere\n    A: IntoFuture,\n    B: IntoFuture&lt;Error = A::Error&gt;,\n</code></pre>\n\n<p>And returning a tuple of Results works:</p>\n\n<pre><code>use futures::*;\n\nstruct Foo {}\n\nimpl Future for Foo {\n    type Item = u32;\n    type Error = u32;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        Ok(Async::Ready(100))\n    }\n}\n\nfn main() {\n    let f = Foo {};\n\n    let _result = f\n        .and_then(|val| {\n            (Ok(val * 2), Ok(val * 4))\n        });\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=97ce8fbe9eb1b5560039559d9aadd917\" rel=\"nofollow noreferrer\">playground</a> with your example: it works but it is quite convoluted to obtain the results. See also the comments below.</p>\n"}], "owner": {"reputation": 1610, "user_id": 145214, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ed4e23089f1581820603219baea49d51?s=128&d=identicon&r=PG", "display_name": "Kitson", "link": "https://stackoverflow.com/users/145214/kitson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 510, "favorite_count": 0, "accepted_answer_id": 52870731, "answer_count": 2, "score": 2, "last_activity_date": 1539889813, "creation_date": 1539832240, "last_edit_date": 1539873140, "question_id": 52866443, "link": "https://stackoverflow.com/questions/52866443/resolve-to-a-tuple-for-a-future", "title": "Resolve to a tuple for a future", "body": "<p>In rust, I am trying to fulfill a future by extracting two bits of data out of a <code>.get</code> request using a hyper client as a tuple.  The problem is the resulting type doesn't <em>work</em>.</p>\n\n<p>So given some code like this:</p>\n\n<pre><code>let result = client\n  .get(url)\n  .map_err(|err| Error::from(err))\n  .and_then(|response| {\n    (response\n      .into_body()\n      .concat2()\n      .map(|body| String::from_utf8(body.to_vec()).unwrap())\n      .map_err(|err| Error::from(err)),\n    response\n      .headers()\n      .get(CONTENT_TYPE)\n      .map(|content_type| content_type.to_str()))\n  });\n</code></pre>\n\n<p>I am getting an error like <code>the trait \"futures::IntoFuture\" is not implemented for</code>...</p>\n\n<p>I am pretty sure that it is because the two members of the tuple are futures and can be dealt with, but a tuple isn't, but I am not sure how to resolve the values of the futures and place them into a tuple.</p>\n"}]