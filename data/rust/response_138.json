[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1504124336, "post_id": 45968885, "comment_id": 78897280, "body": "Note that <code>identity</code> is 4 more characters than your original example; I&#39;d expect people would be too lazy to type it out ^_^."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 7, "creation_date": 1504124417, "post_id": 45968885, "comment_id": 78897326, "body": "@Shepmaster Sometime expressivity is better than brevity :p"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1504132659, "post_id": 45968885, "comment_id": 78900586, "body": "@Shepmaster : As with your answer, F# calls it <code>id</code>, so there&#39;s precedent for that in the stdlib at least."}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 1, "creation_date": 1525915643, "post_id": 45968885, "comment_id": 87546404, "body": "Same with Haskell. <a href=\"https://www.haskell.org/hoogle/?hoogle=id\" rel=\"nofollow noreferrer\"><code>id</code></a>s everywhere!"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1504169988, "post_id": 45968991, "comment_id": 78913340, "body": "I made another one when the item is not moved: <code>fn id_deref&lt;T&gt;(v: &amp;Option&lt;T&gt;) -&gt; Option&lt;&amp;T&gt; {v.as_ref()}</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1504184089, "post_id": 45968991, "comment_id": 78923299, "body": "@Boiethios I&#39;d be very hesitant to call that anything like &quot;identity&quot; considering it changes the value. I&#39;d also not call it &quot;deref&quot; because that means something in Rust which isn&#39;t what that function does. Also, that function is redundant; you can just say <code>Option::as_ref</code> instead."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1589899937, "last_edit_date": 1589899937, "creation_date": 1504124145, "answer_id": 45968991, "question_id": 45968885, "link": "https://stackoverflow.com/questions/45968885/is-there-a-builtin-identity-function-in-rust/45968991#45968991", "title": "Is there a builtin identity function in Rust?", "body": "<h1>Answering your question</h1>\n\n<p>After Rust 1.33, see <a href=\"https://stackoverflow.com/a/52525620/155423\">the sibling answer</a>.</p>\n\n<p>Before Rust 1.33, there is no such function in stable Rust. You can create your own:</p>\n\n<pre><code>fn id&lt;T&gt;(v: T) -&gt; T { v } \n</code></pre>\n\n<p>Although most people just inline the code, as you did.</p>\n\n<h1>Solving your problem</h1>\n\n<p>After Rust 1.29, use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten\" rel=\"nofollow noreferrer\"><code>Iterator::flatten</code></a>:</p>\n\n<pre><code>let v = vec![Some(1), None, Some(2)];\nfor i in v.into_iter().flatten() {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>Before Rust 1.29, use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>Iterator::flat_map</code></a>:</p>\n\n<pre><code>let v = vec![Some(1), None, Some(2)];\nfor i in v.into_iter().flat_map(|o| o) {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43285372/155423\">Why does `Option` support `IntoIterator`?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 9, "last_activity_date": 1551668708, "last_edit_date": 1551668708, "creation_date": 1537993791, "answer_id": 52525620, "question_id": 45968885, "link": "https://stackoverflow.com/questions/45968885/is-there-a-builtin-identity-function-in-rust/52525620#52525620", "title": "Is there a builtin identity function in Rust?", "body": "<p>There is an <a href=\"https://doc.rust-lang.org/std/convert/fn.identity.html\" rel=\"noreferrer\"><code>std::convert::identity</code></a> function as of <a href=\"https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html\" rel=\"noreferrer\">Rust 1.33.0</a>.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1756, "favorite_count": 0, "accepted_answer_id": 52525620, "answer_count": 2, "score": 11, "last_activity_date": 1589899937, "creation_date": 1504123701, "last_edit_date": 1504124173, "question_id": 45968885, "link": "https://stackoverflow.com/questions/45968885/is-there-a-builtin-identity-function-in-rust", "title": "Is there a builtin identity function in Rust?", "body": "<p>I have a vector of <code>Option</code>s and I want to filter only the <code>Some</code>s. I use <code>filter_map</code> with identity:</p>\n\n<pre><code>let v = vec![Some(1), None, Some(2)];\nfor i in v.into_iter().filter_map(|o| o) {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>Is there a builtin function permitting to write something like <code>filter_map(identity)</code>?</p>\n"}, {"tags": ["datetime", "rust"], "comments": [{"owner": {"reputation": 3334, "user_id": 4473327, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hP14q.jpg?s=128&g=1", "display_name": "neuhaus", "link": "https://stackoverflow.com/users/4473327/neuhaus"}, "edited": false, "score": 2, "creation_date": 1504119580, "post_id": 45967902, "comment_id": 78894874, "body": "the format string is missing the time zone specifier"}], "answers": [{"comments": [{"owner": {"reputation": 485, "user_id": 823644, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/cfa39edd6c55aa62961b17fc320c5ac9?s=128&d=identicon&r=PG", "display_name": "TheFox", "link": "https://stackoverflow.com/users/823644/thefox"}, "edited": false, "score": 0, "creation_date": 1576602205, "post_id": 45968960, "comment_id": 104949901, "body": "How can I parse a <code>String</code> instead of a <code>&amp;&#39;static str</code>? All examples from Chrono are always using <code>&amp;&#39;static str</code>. But that&#39;s not how you do it in a real program. In production you use <code>String</code> for everything."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 485, "user_id": 823644, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/cfa39edd6c55aa62961b17fc320c5ac9?s=128&d=identicon&r=PG", "display_name": "TheFox", "link": "https://stackoverflow.com/users/823644/thefox"}, "edited": false, "score": 1, "creation_date": 1576603030, "post_id": 45968960, "comment_id": 104950283, "body": "@TheFox <a href=\"https://stackoverflow.com/q/29026066/155423\">What is the idiomatic way to convert a String to &amp;str?</a>; <a href=\"https://stackoverflow.com/q/41034635/155423\">Idiomatic transformations for String, &amp;str, Vec&lt;u8&gt; and &amp;&#91;u8&#93;</a>; <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>. TL;DR: if you have a <code>s: String</code>,  you can pass <code>&amp;s</code> and it will become a <code>&amp;str</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1576602726, "last_edit_date": 1576602726, "creation_date": 1504124003, "answer_id": 45968960, "question_id": 45967902, "link": "https://stackoverflow.com/questions/45967902/badformat-parsing-string-to-date-when-using-chrono/45968960#45968960", "title": "BadFormat parsing string to date when using Chrono", "body": "<ol>\n<li><p>As mentioned in the comments, your format string doesn't allow for the <code>\" UTC\"</code> part of your string. That's why you get the <code>BadFormat</code> error. </p></li>\n<li><p>If you add <code>\" UTC\"</code> to your format string, you still get a <code>BadFormat</code> error because you've typed <code>.%9f</code> when it should be <code>%.9f</code>.</p></li>\n<li><p>Once you fix that, you get a <code>NotEnough</code> error because we aren't actually parsing a timezone.</p></li>\n</ol>\n\n<p>I'd use <code>NaiveDateTime</code> to always parse in UTC and then add the <code>\" UTC\"</code> onto the format string to ignore it, correcting the typo:</p>\n\n<pre><code>use chrono::prelude::*; // 0.4.9\n\nfn main() {\n    let dt1 = NaiveDateTime::parse_from_str(\n        \"2017-08-30 18:34:06.638997932 UTC\",\n        \"%Y-%m-%d %H:%M:%S%.9f UTC\",\n    );\n\n    println!(\"{:?}\", dt1); // Ok(2017-08-30T18:34:06.638997932)\n}\n</code></pre>\n"}], "owner": {"reputation": 381, "user_id": 1916077, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0c1d6cb98258b7f668739459c79aeb8e?s=128&d=identicon&r=PG", "display_name": "user1916077", "link": "https://stackoverflow.com/users/1916077/user1916077"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 517, "favorite_count": 0, "accepted_answer_id": 45968960, "answer_count": 1, "score": 0, "last_activity_date": 1576602726, "creation_date": 1504119442, "last_edit_date": 1504124487, "question_id": 45967902, "link": "https://stackoverflow.com/questions/45967902/badformat-parsing-string-to-date-when-using-chrono", "title": "BadFormat parsing string to date when using Chrono", "body": "<p>I am trying to convert a string to a date using the Chrono library. I always get a <code>BadFormat</code> or <code>NotEnough</code> error:</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::prelude::*;\n\nfn main() {\n    let dt1 = DateTime::parse_from_str(\n        \"2017-08-30 18:34:06.638997932 UTC\", \n        \"%Y-%m-%d %H:%M:%S.%9f\"\n    );\n    println!(\"{:?}\", dt1);\n}\n</code></pre>\n\n<p>I'm not sure what I am doing wrong. </p>\n"}, {"tags": ["rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1504077979, "post_id": 45954354, "comment_id": 78866600, "body": "Did you install <code>rustup</code>?"}, {"owner": {"reputation": 546, "user_id": 217945, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c9cd57a932fc396314fef9df31933c5?s=128&d=identicon&r=PG", "display_name": "dirac3000", "link": "https://stackoverflow.com/users/217945/dirac3000"}, "edited": false, "score": 1, "creation_date": 1505134806, "post_id": 45954354, "comment_id": 79274416, "body": "once you installed rustup, just close the error and it will propose you to choose from one of the available toolchains."}], "answers": [{"comments": [{"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1509028504, "post_id": 45954457, "comment_id": 80861617, "body": "I&#39;ve set rustup default stable-gnu, but I still see the popup message."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1504078105, "creation_date": 1504078105, "answer_id": 45954457, "question_id": 45954354, "link": "https://stackoverflow.com/questions/45954354/how-do-i-tell-vs-code-what-toolchain-i-want-to-use/45954457#45954457", "title": "How do I tell VS code what toolchain I want to use?", "body": "<p>As the message says, you must choose a toolchain (<a href=\"https://github.com/rust-lang-nursery/rustup.rs\" rel=\"nofollow noreferrer\">documentation here</a>):</p>\n\n<pre><code>$ rustup default stable\n</code></pre>\n\n<p>for the stable Rust, or</p>\n\n<pre><code>$ rustup default nightly\n</code></pre>\n\n<p>for the newest development version.</p>\n\n<p>If you only want to play with Rust, I advise you to use nightly Rust because there are more new things in it.</p>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user3704639"}, "is_accepted": false, "score": 7, "last_activity_date": 1504136710, "creation_date": 1504136710, "answer_id": 45971239, "question_id": 45954354, "link": "https://stackoverflow.com/questions/45954354/how-do-i-tell-vs-code-what-toolchain-i-want-to-use/45971239#45971239", "title": "How do I tell VS code what toolchain I want to use?", "body": "<p>The extension will provide a prompt after you close that prompt, which allows you to select the toolchain you want. You can see the toolchain that you selected in your preferences file.</p>\n"}, {"comments": [{"owner": {"reputation": 415, "user_id": 6032698, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-aaCuIvrvuzg/AAAAAAAAAAI/AAAAAAAAAD4/kEv5DLONsww/photo.jpg?sz=128", "display_name": "Shoaib Ahmed", "link": "https://stackoverflow.com/users/6032698/shoaib-ahmed"}, "edited": false, "score": 41, "creation_date": 1556470455, "post_id": 46957163, "comment_id": 98441725, "body": "This is so damn counter-intuitive!"}], "tags": [], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "is_accepted": false, "score": 89, "last_activity_date": 1509028591, "creation_date": 1509028591, "answer_id": 46957163, "question_id": 45954354, "link": "https://stackoverflow.com/questions/45954354/how-do-i-tell-vs-code-what-toolchain-i-want-to-use/46957163#46957163", "title": "How do I tell VS code what toolchain I want to use?", "body": "<p>Press <strong>Close</strong> to select toolchain :)</p>\n"}, {"tags": [], "owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "is_accepted": false, "score": 2, "last_activity_date": 1534856161, "creation_date": 1534856161, "answer_id": 51949199, "question_id": 45954354, "link": "https://stackoverflow.com/questions/45954354/how-do-i-tell-vs-code-what-toolchain-i-want-to-use/51949199#51949199", "title": "How do I tell VS code what toolchain I want to use?", "body": "<p>Add this to your configuration with toolchain you want to use to enforce it in VS Code:</p>\n\n<pre><code>\"rust.rustup\": {\n    \"toolchain\": \"stable-x86_64-apple-darwin\"\n  }\n</code></pre>\n"}], "owner": {"reputation": 549, "user_id": 8536461, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d8504485c73735e35868b4d50585443?s=128&d=identicon&r=PG&f=1", "display_name": "MTech2008", "link": "https://stackoverflow.com/users/8536461/mtech2008"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9102, "favorite_count": 6, "answer_count": 4, "score": 52, "last_activity_date": 1534856161, "creation_date": 1504077726, "last_edit_date": 1504094790, "question_id": 45954354, "link": "https://stackoverflow.com/questions/45954354/how-do-i-tell-vs-code-what-toolchain-i-want-to-use", "title": "How do I tell VS code what toolchain I want to use?", "body": "<p>After installing extensions for Rust, I get this error:</p>\n\n<blockquote>\n  <p>To properly function, the extension needs to know what toolchain you\n  want to use.</p>\n</blockquote>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1504051022, "post_id": 45949729, "comment_id": 78858515, "body": "<code>pub fn foo&lt;I&gt;(n: I) -&gt; I where I: Shr&lt;i32, Output = I&gt; {}</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1504095742, "post_id": 45949729, "comment_id": 78878594, "body": "@Shepmaster Are there already &quot;meta traits&quot; that include other traits? Something like <code>trait Int = Add + Sub + Mul</code> etc. to easily write complex generic code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1504096755, "post_id": 45949729, "comment_id": 78879412, "body": "@Boiethios yep; that&#39;s why I linked <a href=\"https://stackoverflow.com/q/37296351/155423\">stackoverflow.com/q/37296351/155423</a> as a duplicate \u2014 it&#39;s often the next question asked."}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 210, "favorite_count": 0, "closed_date": 1504050945, "answer_count": 0, "score": 0, "last_activity_date": 1504051308, "creation_date": 1504049369, "question_id": 45949729, "link": "https://stackoverflow.com/questions/45949729/halving-generic-integers", "closed_reason": "Duplicate", "title": "Halving Generic Integers", "body": "<p>I want to be able to halve a generic integer type and have my function return that integer type.</p>\n\n<pre><code>use std::ops::*;\n\npub fn half_nonnegative&lt;I: Shr&lt;i32&gt;&gt;(n: I) -&gt; &lt;I as std::ops::Shr&lt;i32&gt;&gt;::Output {\n    n &gt;&gt; 1\n}\n\npub fn half_nonnegative_input_type_same_as_output&lt;I: Shr&lt;i32&gt;&gt;(n: I) -&gt; I {\n    n &gt;&gt; 1\n}\n</code></pre>\n\n<p>The first function halves my integer, but potentially returns a different type. The second function doesn't compile. How do I constrain the second function to have the same output type as the input type?</p>\n\n<p>Should I be halving in some other way? Dividing by one() + one()?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1504033742, "post_id": 45946413, "comment_id": 78851709, "body": "Have you read <a href=\"https://stackoverflow.com/q/31362206/155423\">stackoverflow.com/q/31362206/155423</a>; <a href=\"https://stackoverflow.com/q/41087239/155423\">stackoverflow.com/q/41087239/155423</a>; <a href=\"https://stackoverflow.com/q/24847331/155423\">stackoverflow.com/q/24847331/155423</a>; <a href=\"https://stackoverflow.com/q/24162518/155423\">stackoverflow.com/q/24162518/155423</a>; <a href=\"https://stackoverflow.com/q/40535543/155423\">stackoverflow.com/q/40535543/155423</a>? Those were the <i>first</i> 5 SO questions I found with the error text &quot;concrete lifetime that was found&quot;. Please <a href=\"https://stackoverflow.com/posts/45946413/edit\">edit</a> your question to explain how it&#39;s different from those."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1504036686, "post_id": 45946413, "comment_id": 78853184, "body": "@Shepmaster Even if strip struct, variables, traits, functions names my code completly different from question you suggest. My question is little similar to <b>answer</b> from <a href=\"https://stackoverflow.com/questions/32194367/expected-bound-lifetime-parameter-found-concrete-lifetime\" title=\"expected bound lifetime parameter found concrete lifetime\">stackoverflow.com/questions/32194367/&hellip;</a> , but actually code in solution cause problems."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1504283032, "post_id": 45952466, "comment_id": 78969693, "body": "Yes, in real code I use <code>Rc</code>, so move not a problem for me. While two time implement <code>Ex</code> one for <code>Boo</code>, one for <code>struct XXX(Boo)</code> is not good, so I try to use closure."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 1, "last_activity_date": 1504075379, "last_edit_date": 1504075379, "creation_date": 1504070503, "answer_id": 45952466, "question_id": 45946413, "link": "https://stackoverflow.com/questions/45946413/fn-as-trait-concrete-lifetime-required/45952466#45952466", "title": "Fn as trait concrete lifetime required", "body": "<p>Looks like <a href=\"https://github.com/rust-lang/rust/issues/38714\" rel=\"nofollow noreferrer\">issue #38714</a>.</p>\n\n<p>While it is being fixed, you can directly implement <code>Ex</code> for <code>Boo</code>.</p>\n\n<pre><code>impl Ex for Boo {\n    fn do_&lt;'a&gt;(&amp;self, ecx: &amp;'a mut Ctx) -&gt; Box&lt;Foo + 'a&gt; {\n        self.f1(ecx)\n    }    \n}\n\nfn main() {\n    let boo = Boo;\n    reg(\"aaa\", boo);\n}\n</code></pre>\n\n<blockquote>\n  <p>In real code my struct Boo contains some data, and want to call reg for it twice, so I not implement trait Ex, but try to use closure.</p>\n</blockquote>\n\n<p>You'll not be able to do that with the code you provided. <code>move |cx| boo.f1(cx)</code> moves <code>boo</code> into the closure, and you can't use <code>boo</code> after that. </p>\n\n<p>If you want to share data, you'll need to use <code>Rc</code> in <code>Boo</code>.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1504075379, "creation_date": 1504032798, "last_edit_date": 1504033256, "question_id": 45946413, "link": "https://stackoverflow.com/questions/45946413/fn-as-trait-concrete-lifetime-required", "title": "Fn as trait concrete lifetime required", "body": "<p>I want to use an API that I can modify <code>reg</code>:</p>\n\n<pre><code>struct Ctx;\ntrait Foo {}\n\ntrait Ex {\n    fn do_&lt;'a&gt;(&amp;self, cx: &amp;'a mut Ctx) -&gt; Box&lt;Foo + 'a&gt;;\n}\n\nimpl&lt;F&gt; Ex for F\nwhere\n    F: for&lt;'a&gt; Fn(&amp;'a mut Ctx) -&gt; Box&lt;Foo + 'a&gt;,\n{\n    fn do_&lt;'a&gt;(&amp;self, ecx: &amp;'a mut Ctx) -&gt; Box&lt;Foo + 'a&gt; {\n        (*self)(ecx)\n    }\n}\n\nfn reg&lt;F&gt;(name: &amp;str, ext: F)\nwhere\n    F: Ex + 'static,\n{\n}\n\n//My code starts here\nstruct Boo;\n\nimpl Boo {\n    fn f1&lt;'a&gt;(&amp;self, cx: &amp;'a mut Ctx) -&gt; Box&lt;Foo + 'a&gt; {\n        unimplemented!();\n    }\n}\n\nfn main() {\n    let boo = Boo;\n    reg(\"aaa\", move |cx| boo.f1(cx));\n}\n</code></pre>\n\n<p>But I got an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `for&lt;'a&gt; &lt;[closure@src/main.rs:33:16: 33:36 boo:_] as std::ops::FnOnce&lt;(&amp;'a mut Ctx,)&gt;&gt;::Output == std::boxed::Box&lt;Foo + 'a&gt;`\n  --&gt; src/main.rs:33:5\n   |\n33 |     reg(\"aaa\", move |cx| boo.f1(cx));\n   |     ^^^ expected bound lifetime parameter 'a, found concrete lifetime\n   |\n   = note: concrete lifetime that was found is lifetime '_#9r\n   = note: required because of the requirements on the impl of `Ex` for `[closure@src/main.rs:33:16: 33:36 boo:_]`\n   = note: required by `reg`\n\nerror[E0281]: type mismatch: `[closure@src/main.rs:33:16: 33:36 boo:_]` implements the trait `std::ops::Fn&lt;(&amp;mut Ctx,)&gt;`, but the trait `for&lt;'a&gt; std::ops::Fn&lt;(&amp;'a mut Ctx,)&gt;` is required\n  --&gt; src/main.rs:33:5\n   |\n33 |     reg(\"aaa\", move |cx| boo.f1(cx));\n   |     ^^^        -------------------- implements `std::ops::Fn&lt;(&amp;mut Ctx,)&gt;`\n   |     |\n   |     requires `for&lt;'a&gt; std::ops::Fn&lt;(&amp;'a mut Ctx,)&gt;`\n   |     expected concrete lifetime, found bound lifetime parameter 'a\n   |\n   = note: required because of the requirements on the impl of `Ex` for `[closure@src/main.rs:33:16: 33:36 boo:_]`\n   = note: required by `reg`\n</code></pre>\n\n<p>How can I fix this? </p>\n\n<p>In real code my <code>struct Boo</code> contains some data,\nand want to call <code>reg</code> for it twice, so I not implement <code>trait Ex</code>, but\ntry to use closure.</p>\n"}, {"tags": ["vector", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "is_accepted": true, "score": 7, "last_activity_date": 1504025576, "creation_date": 1504025576, "answer_id": 45944485, "question_id": 45944235, "link": "https://stackoverflow.com/questions/45944235/create-new-vector-from-old-vector/45944485#45944485", "title": "Create new Vector from old Vector?", "body": "<p>Use <code>clone</code> to make a copy of the original <code>Vec</code>.</p>\n\n<pre><code>let vec1 = vec![\"Hello\", \"world!\"];\nlet mut vec2 = vec1.clone();\nvec2.insert(1, \" \");\n</code></pre>\n"}], "owner": {"reputation": 1876, "user_id": 6568784, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/Kk1s7.png?s=128&g=1", "display_name": "baranskistad", "link": "https://stackoverflow.com/users/6568784/baranskistad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2492, "favorite_count": 1, "closed_date": 1504027020, "accepted_answer_id": 45944485, "answer_count": 1, "score": 1, "last_activity_date": 1504025576, "creation_date": 1504024567, "question_id": 45944235, "link": "https://stackoverflow.com/questions/45944235/create-new-vector-from-old-vector", "closed_reason": "Duplicate", "title": "Create new Vector from old Vector?", "body": "<p>I was wondering how to create a new Vector from an old Vector, and insert elements into it.</p>\n\n<pre><code>let vec1 = vec![\"Hello\", \"world!\"];\nlet vec2 = Vec::newFrom(vec1).insert(1, \" \");\n</code></pre>\n\n<p>What method/function can I use to accomplish this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1504027584, "post_id": 45944145, "comment_id": 78848366, "body": "TL;DR \u2014 references and non-references are different types, just like in C++. You want to store something that is either a reference or an owned value, that calls for a <code>Cow</code>. The <a href=\"https://play.integer32.com/?gist=c5cd2d2c92bd0a6d6c1a7a3173e969d4&amp;version=stable\" rel=\"nofollow noreferrer\">direct (and ugly) solution with <code>Cow</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "is_accepted": true, "score": 4, "last_activity_date": 1504027060, "last_edit_date": 1504027060, "creation_date": 1504026256, "answer_id": 45944660, "question_id": 45944145, "link": "https://stackoverflow.com/questions/45944145/expected-reference-found-struct/45944660#45944660", "title": "Expected reference, found struct", "body": "<p>Is there a reason you can't take the <code>BigInt</code>s by value instead of by reference? This would remove all the borrow checker errors. Unless it's a clear and <em>measured</em> bottleneck to clone the <code>BigInt</code>s, passing by reference won't be much faster and it's less ergonomic.</p>\n\n<p>Here's a working solution that doesn't use references (and instead clones the values)</p>\n\n<pre><code>extern crate num_bigint;\n\nuse num_bigint::BigInt;\n\npub fn fibonacci_matrix_multiply(x: (BigInt, BigInt), y: (BigInt, BigInt)) -&gt; (BigInt, BigInt) {\n    (&amp;x.0 * (&amp;y.1 + &amp;y.0) + &amp;x.1 * &amp;y.0, x.0 * y.0 + x.1 * y.1)\n}\n\npub fn power_accumulate_positive(\n    mut r: (BigInt, BigInt),\n    mut a: (BigInt, BigInt),\n    mut n: i32,\n) -&gt; (BigInt, BigInt) {\n    loop {\n        if n &amp; 1 == 1 {\n            r = fibonacci_matrix_multiply(r, a.clone());\n            if n == 1 {\n                return r;\n            }\n        }\n        a = fibonacci_matrix_multiply(a.clone(), a);\n        n = n / 2;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 7606550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d280cfb4b941e8d99e8ee7c8ba3873ff?s=128&d=identicon&r=PG&f=1", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/7606550/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3931, "favorite_count": 0, "closed_date": 1504026442, "accepted_answer_id": 45944660, "answer_count": 1, "score": 5, "last_activity_date": 1504028116, "creation_date": 1504024309, "last_edit_date": 1504026370, "question_id": 45944145, "link": "https://stackoverflow.com/questions/45944145/expected-reference-found-struct", "closed_reason": "Duplicate", "title": "Expected reference, found struct", "body": "<p>I'm trying to learn Rust by translating C++ code from the \"Elements of Programming\" book by Stepanov and McJones. Here's a simple code snippet:</p>\n\n<pre><code>extern crate num_bigint;\n\nuse num_bigint::BigInt;\n\npub fn fibonacci_matrix_multiply(x: (&amp;BigInt, &amp;BigInt), y: (&amp;BigInt, &amp;BigInt)) -&gt; (BigInt, BigInt) {\n    (x.0 * (y.1 + y.0) + x.1 * y.0, x.0 * y.0 + x.1 * y.1)\n}\n\npub fn power_accumulate_positive(\n    mut r: (&amp;BigInt, &amp;BigInt),\n    mut a: (&amp;BigInt, &amp;BigInt),\n    mut n: i32,\n) -&gt; (BigInt, BigInt) {\n    loop {\n        if n &amp; 1 == 1 {\n            r = fibonacci_matrix_multiply(r, a);\n            if n == 1 {\n                return r;\n            }\n        }\n        a = fibonacci_matrix_multiply(a, a);\n        n = n / 2;\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Here's the error messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:16:17\n   |\n16 |             r = fibonacci_matrix_multiply(r, a);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found struct `num_bigint::BigInt`\n   |\n   = note: expected type `(&amp;num_bigint::BigInt, &amp;num_bigint::BigInt)`\n              found type `(num_bigint::BigInt, num_bigint::BigInt)`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:18:24\n   |\n18 |                 return r;\n   |                        ^ expected struct `num_bigint::BigInt`, found reference\n   |\n   = note: expected type `(num_bigint::BigInt, num_bigint::BigInt)`\n              found type `(&amp;num_bigint::BigInt, &amp;num_bigint::BigInt)`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:21:13\n   |\n21 |         a = fibonacci_matrix_multiply(a, a);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found struct `num_bigint::BigInt`\n   |\n   = note: expected type `(&amp;num_bigint::BigInt, &amp;num_bigint::BigInt)`\n              found type `(num_bigint::BigInt, num_bigint::BigInt)`\n</code></pre>\n\n<p>I understand that I'm returning a tuple of structs and trying to assign it to a tuple of references, but I don't know how to solve the problem.</p>\n"}, {"tags": ["for-loop", "rust", "mutable", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 123, "user_id": 4030578, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ddbvA.jpg?s=128&g=1", "display_name": "Francesco Alem.", "link": "https://stackoverflow.com/users/4030578/francesco-alem"}, "edited": false, "score": 0, "creation_date": 1504013805, "post_id": 45940545, "comment_id": 78839308, "body": "Thank you so much, both for restructuring the code and for explaining the problem! I&#39;ll accept as soon as i can. And thank you for the functional programming way of creating the vec! i would give two +1 if i could!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1504013504, "creation_date": 1504013504, "answer_id": 45940545, "question_id": 45940385, "link": "https://stackoverflow.com/questions/45940385/how-can-i-fix-these-two-for-loops-to-allow-modification-of-the-vector-content/45940545#45940545", "title": "How can I fix these two for loops to allow modification of the vector content?", "body": "<p>Read the error messages \u2014 they are a huge benefit of a statically typed language, but it does require you to actually <em>look</em> at them.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  --&gt; src/main.rs:19:17\n   |\n19 |             q = rng.gen::&lt;f64&gt;();\n   |                 ^^^^^^^^^^^^^^^^ expected &amp;mut f64, found f64\n   |\n   = note: expected type `&amp;mut f64`\n              found type `f64`\n   = help: try with `&amp;mut rng.gen::&lt;f64&gt;()`\n</code></pre>\n\n<p>Unfortunately, the \"help\" here isn't the right path, but it's just a guess from the compiler.</p>\n\n<p>You are attempting to create a random value of type <code>f64</code> and assign it to a variable that holds a <code>&amp;mut f64</code>. These are different types, so you get an error.</p>\n\n<p>You need to dereference the variable to store into it:</p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n\n    let mut v = vec![\n        vec![0f64; 35],\n        vec![0f64; 35],\n        vec![0f64; 35],\n        vec![0f64; 35],\n    ];\n\n    for el in &amp;mut v {\n        for q in el {\n            *q = rng.gen::&lt;f64&gt;();\n        }   \n    }\n\n    println!(\"vec: {:?}\", v);\n}\n</code></pre>\n\n<hr>\n\n<p>I'd probably not zero-initialize anything though, and write it as </p>\n\n<pre><code>let mut rng = rand::thread_rng();\n\nlet v: Vec&lt;Vec&lt;f64&gt;&gt; = (0..4)\n    .map(|_| (0..35).map(|_| rng.gen()).collect())\n    .collect();\n\nprintln!(\"vec: {:?}\", v);\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 4030578, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ddbvA.jpg?s=128&g=1", "display_name": "Francesco Alem.", "link": "https://stackoverflow.com/users/4030578/francesco-alem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 45940545, "answer_count": 1, "score": 2, "last_activity_date": 1504013798, "creation_date": 1504013070, "last_edit_date": 1504013798, "question_id": 45940385, "link": "https://stackoverflow.com/questions/45940385/how-can-i-fix-these-two-for-loops-to-allow-modification-of-the-vector-content", "title": "How can I fix these two for loops to allow modification of the vector content?", "body": "<p>I'm trying to make a loop over the matrix made using a <code>Vec&lt;f64&gt;</code> inside a Vec, and then alter its elements one by one.</p>\n\n<p>I cannot seem to make it work; I'm still too confused about the syntax...</p>\n\n<pre><code>extern crate rand;\n\nuse std::ptr;\nuse std::mem;\n\nuse rand::Rng;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let mut v: Vec&lt;Vec&lt;f64&gt;&gt; = Vec::new();\n    v.push(vec![0f64; 35]);\n    v.push(vec![0f64; 35]);\n    v.push(vec![0f64; 35]);\n    v.push(vec![0f64; 35]);\n\n    let len = v.len();\n    for &amp;el in &amp;v {\n        for q in &amp;mut el {\n            q = rng.gen::&lt;f64&gt;();\n            println!(\"{}\", q);\n        }\n        println!(\"{:?}\", el);\n    }\n    println!(\"float: {}\", rng.gen::&lt;f64&gt;());\n    //println!(\"vec: {:?}, len: {}\",v,len);\n}\n</code></pre>\n\n<p>The compiler says this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:19:17\n   |\n19 |             q = rng.gen::&lt;f64&gt;();\n   |                 ^^^^^^^^^^^^^^^^ expected &amp;mut f64, found f64\n   |\n   = note: expected type `&amp;mut f64`\n              found type `f64`\n   = help: try with `&amp;mut rng.gen::&lt;f64&gt;()`\n</code></pre>\n\n<p>I tried following the compiler hints, various combinations of <code>mut &amp;</code> and <code>.iter()</code> or <code>.iter_mut()</code>, but none of them worked. After some frustration, I noticed that my search for a solution had become a Monte Carlo algorithm. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "is_accepted": true, "score": 1, "last_activity_date": 1504084283, "creation_date": 1504084283, "answer_id": 45956376, "question_id": 45936220, "link": "https://stackoverflow.com/questions/45936220/explicit-lifetimes-change-the-function-signature-and-make-the-function-incompati/45956376#45956376", "title": "Explicit lifetimes change the function signature and make the function incompatible for the required type signature", "body": "<pre><code>hir_visit::walk_crate(&amp;mut visitor, visitor.map.krate());\n</code></pre>\n\n<p>The solution was to realize that map also contains a krate as a reference, but with the correct lifetime. This means that I don't have to introduce explicit lifetimes.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=57dc44b0d8e8f7461df8ba812a05e335&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 45956376, "answer_count": 1, "score": 2, "last_activity_date": 1504084283, "creation_date": 1504001026, "last_edit_date": 1504036960, "question_id": 45936220, "link": "https://stackoverflow.com/questions/45936220/explicit-lifetimes-change-the-function-signature-and-make-the-function-incompati", "title": "Explicit lifetimes change the function signature and make the function incompatible for the required type signature", "body": "<pre><code>#![feature(rustc_private)]\n#![feature(box_syntax)]\nextern crate rustc;\nextern crate rustc_driver;\n\nuse rustc::hir::intravisit as hir_visit;\nuse rustc::hir;\nuse rustc_driver::driver::{CompileController, CompileState};\n\npub struct SomeVisitor&lt;'a, 'tcx: 'a&gt; {\n    pub map: &amp;'a hir::map::Map&lt;'tcx&gt;,\n}\n\nimpl&lt;'v, 'tcx: 'v&gt; rustc::hir::intravisit::Visitor&lt;'tcx&gt; for SomeVisitor&lt;'v, 'tcx&gt; {\n    fn nested_visit_map&lt;'this&gt;(&amp;'this mut self) -&gt; hir_visit::NestedVisitorMap&lt;'this, 'tcx&gt; {\n        hir_visit::NestedVisitorMap::All(self.map)\n    }\n}\n\nfn hir(s: &amp;mut CompileState) {\n    let krate = s.hir_crate.unwrap();\n    let map = s.hir_map.unwrap();\n    let mut visitor = SomeVisitor { map };\n    hir_visit::walk_crate(&amp;mut visitor, krate);\n}\n\nfn main() {\n    {\n        let mut controller = CompileController::basic();\n        controller.after_hir_lowering.callback = box hir;\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0b20f69f7ef2e5aeb8bc7f242176eca6&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I understand why I am getting the lifetime error and it is very easy to solve it by adding explicit lifetimes for the function <code>hir</code>.</p>\n\n<pre><code>pub fn walk_crate&lt;'v, V: hir_visit::Visitor&lt;'v&gt;&gt;(visitor: &amp;mut V, krate: &amp;'v Crate) {}\n</code></pre>\n\n<p>Because of this definition the lifetime for the reference needs to live for <code>'tcx</code>.</p>\n\n<pre><code>fn hir&lt;'v, 'tcx&gt;(s: &amp;'tcx mut CompileState&lt;'v, 'tcx&gt;) {\n    let krate = s.hir_crate.unwrap();\n    let map = s.hir_map.unwrap();\n    let mut visitor = SomeVisitor { map };\n    hir_visit::walk_crate(&amp;mut visitor, krate);\n}\n</code></pre>\n\n<p>But then the function <code>hir</code> becomes incompatible for the callback. <a href=\"https://play.rust-lang.org/?gist=ba2517602ba3d449ca63cb067750eda0&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I assume that I may need to use <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">HRTB</a> here?</p>\n\n<p>Update:</p>\n\n<p>My current workaround is to use transmute. (<a href=\"https://play.rust-lang.org/?gist=8861d2e6b36ea4e0582c83b8275b4905&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a>). Surely there must be a better way?</p>\n"}, {"tags": ["multithreading", "rust", "closures"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1503998225, "post_id": 45935100, "comment_id": 78828337, "body": "A closure is an anonymous function with variable capture, it is not multithreaded (unless you ask for it). Moreover, could you post the code you refer to, when you say &quot;if I have <code>Fn()</code>, I cannot pass a mutable variable inside the closure or it needs to be wrapped with a <code>Mutex</code>&quot;?"}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503998476, "post_id": 45935100, "comment_id": 78828515, "body": "@Boiethios sure, just updated the question with a link."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503998723, "post_id": 45935100, "comment_id": 78828687, "body": "You need to use <code>FnMut</code>: <a href=\"https://play.rust-lang.org/?gist=6c4a057153b0781a52b9171c5f2b2081&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> But I let someone with more knowledge to answer with detailed explanations."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503998968, "post_id": 45935100, "comment_id": 78828835, "body": "@Boiethios that is correct, changing to FnMut or using a Mutex can solve the problem but my question is, why? If it is not a separate thread, why it should be even important to pass a Mutex?"}], "answers": [{"comments": [{"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 1, "creation_date": 1504000788, "post_id": 45935645, "comment_id": 78830083, "body": "Oh wow, this is a nice and clear explanation. Thank you so much DK."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 17, "last_activity_date": 1504011358, "last_edit_date": 1504011358, "creation_date": 1503999538, "answer_id": 45935645, "question_id": 45935100, "link": "https://stackoverflow.com/questions/45935100/how-do-rust-closures-work-and-how-does-it-execute-a-closure/45935645#45935645", "title": "How do Rust closures work and how does it execute a closure?", "body": "<p>There are two layers to this question.</p>\n\n<p>First, a closure in Rust is just an anonymously-defined type that implements one or more \"callable\" traits.  For example, this:</p>\n\n<pre><code>fn main() {\n    let a = 6;\n    let closure = |b| {\n        println!(\"product is: {}\", a * b);\n    };\n    closure(7);\n}\n</code></pre>\n\n<p>is de-sugared into something similar to:</p>\n\n<pre><code>fn main() {\n    let a = 6;\n    let closure = {\n        struct Closure&lt;'a&gt; {\n            a: &amp;'a i32,\n        }\n        impl&lt;'a&gt; Fn&lt;(i32,)&gt; for Closure&lt;'a&gt; {\n            extern \"rust-call\" fn call(&amp;self, (b,): (i32,)) {\n                println!(\"product is: {}\", (*self.a) * b);\n            }\n        }\n        impl&lt;'a&gt; FnMut&lt;(i32,)&gt; for Closure&lt;'a&gt; {\n            extern \"rust-call\" fn call_mut(&amp;mut self, args: (i32,)) {\n                self.call(args)\n            }\n        }\n        impl&lt;'a&gt; FnOnce&lt;(i32,)&gt; for Closure&lt;'a&gt; {\n            type Output = ();\n            extern \"rust-call\" fn call_once(self, args: (i32,)) {\n                self.call(args)\n            }\n        }\n        Closure {\n            a: &amp;a,\n        }\n    };\n    FnOnce::call_once(closure, (7,));\n}\n</code></pre>\n\n<blockquote>\n  <p><strong>Note</strong>: the above code relies on unstable, internal details and will not work on a stable compiler.  It is provided for explanation only; you should <strong>not</strong> use this pattern yourself.</p>\n</blockquote>\n\n<p>There's no threading involved, and nothing magical is happening.  They boil down to a regular function call with an extra initial \"context\" argument.</p>\n\n<p>This brings us to the second layer, which is why your <em>specific</em> code doesn't work: <em>because you told the compiler to forbid it</em>.  One critical concern for callables is how the context is passed to the callable's code.  This is represented by the <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code> traits (which are explained in the answer to the question <a href=\"https://stackoverflow.com/questions/30177395/when-does-a-closure-implement-fn-fnmut-and-fnonce\">When does a closure implement Fn, FnMut and FnOnce?</a>).  By taking <code>&amp;Fn(f64)</code>, you've restricted yourself to only accepting closures which require immutable access to their context.</p>\n\n<p>If you want a closure to be able to mutate its context, you need to use <code>FnMut</code> instead.  Or, if you only need to call a closure once, you can use <code>FnOnce</code> (although not as a trait object like you're doing in your example).</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 634, "favorite_count": 0, "accepted_answer_id": 45935645, "answer_count": 1, "score": 4, "last_activity_date": 1504011358, "creation_date": 1503998072, "last_edit_date": 1504011275, "question_id": 45935100, "link": "https://stackoverflow.com/questions/45935100/how-do-rust-closures-work-and-how-does-it-execute-a-closure", "title": "How do Rust closures work and how does it execute a closure?", "body": "<p>Does it create a new thread and then execute that anonymous function inside the new thread? </p>\n\n<p>I noticed many ownership / borrowing restrictions when I'm working with a closure. For example, if I have <code>Fn()</code>, <a href=\"https://play.rust-lang.org/?gist=7a9e0f376c5fcd2d4324b88918beceab&amp;version=stable\" rel=\"nofollow noreferrer\">I cannot pass a mutable variable inside the closure or it needs to be wrapped with a <code>Mutex</code></a>:</p>\n\n<pre><code>fn helloworld(f: &amp;Fn(f64)) {\n    f(42f64);\n}\n\npub fn main() {\n    let mut killer = 2;\n    helloworld(&amp;|n| {\n        println!(\"{}\", n);\n        killer += 1;\n    });\n}\n</code></pre>\n\n<p>If a closure can be unsafe like that then something asynchronous or parallel is going on behind the scene and that's why Rust compiler doesn't let me to compile such code.</p>\n\n<p>I might just be confused because I'm coming from a JavaScript / Python world and things are completely different there.</p>\n"}, {"tags": ["rust", "mutable", "borrow-checker", "lifetime-scoping"], "comments": [{"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 3, "creation_date": 1503997864, "post_id": 45934928, "comment_id": 78828118, "body": "Try interior mutability :-), Use a RefCell maybe ?. Thinking aloud..."}], "owner": {"reputation": 551, "user_id": 1432694, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/e5d74ff9d9865d9e09afd255a9e8cc07?s=128&d=identicon&r=PG", "display_name": "red_trumpet", "link": "https://stackoverflow.com/users/1432694/red-trumpet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 192, "favorite_count": 0, "closed_date": 1504015179, "answer_count": 0, "score": 1, "last_activity_date": 1504015825, "creation_date": 1503997578, "last_edit_date": 1504015825, "question_id": 45934928, "link": "https://stackoverflow.com/questions/45934928/accessing-different-fields-of-the-same-struct-simultaneously-and-mutably", "closed_reason": "Duplicate", "title": "Accessing different fields of the same struct simultaneously and mutably", "body": "<p>I'm trying to write a card game in Rust but ran into some trouble with the borrow checker. My main <code>struct</code> is the <code>Game</code>, which looks like this</p>\n\n<pre><code>struct Game {\n    players: HashMap&lt;String, Player&gt;,\n    deck: Vec&lt;Card&gt;,\n}\n</code></pre>\n\n<p>Player is something like</p>\n\n<pre><code>struct Player {\n    hand: Vec&lt;Card&gt;,\n}\n</code></pre>\n\n<p>and for simplicity we may assume, that <code>Card</code> looks like</p>\n\n<pre><code>struct Card {\n    text: String,\n}\n</code></pre>\n\n<p>Now naturally I would like to draw cards from <code>Game.deck</code></p>\n\n<pre><code>impl Game {\n    fn draw_cards(&amp;mut self, num: usize) -&gt; Option&lt;Vec&lt;Card&gt;&gt; {\n        if self.deck.len() &gt;= num {\n            let mut cards: Vec&lt;Card&gt; = Vec::new();\n            for _ in 0..num {\n                cards.push(self.deck.pop().unwrap());\n            }\n            Some(cards)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>and append them to a player's hand</p>\n\n<pre><code>impl Game {\n    fn draw_to_player(&amp;mut self, name: &amp;String, num: usize) -&gt; Result&lt;(), ()&gt; {\n        let cards = self.draw_cards(num);\n        match cards {\n            Some(mut cards) =&gt; {\n                let player = self.players.get_mut(name);\n                match player {\n                    Some(player) =&gt; {\n                        player.hand.append(&amp;mut cards);\n                        Ok(())\n                    },\n                    None =&gt; Err(()),\n                }\n            },\n            None =&gt; Err(()),\n        }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=93ddc48f6042648ba7a88d51ff12337f&amp;version=stable\" rel=\"nofollow noreferrer\">Complete playground example</a></p>\n\n<p>Up to this point, everything works quite fine. When starting the game, I want to iterate over all players and let them draw their starting hand:</p>\n\n<pre><code>fn draw_for_all(&amp;mut self) {\n    for name in self.players.keys() {\n        self.draw_to_player(name, 2);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=831c3546f017005935cb1b16e37bc99c&amp;version=stable\" rel=\"nofollow noreferrer\">Complete playground example</a></p>\n\n<p>This does not work, as <code>self</code> is borrowed when iterating over the keys, but has to be borrowed mutably to call <code>draw_to_player</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as mutable because `self.players` is also borrowed as immutable\n  --&gt; src/main.rs:48:13\n   |\n47 |         for name in self.players.keys() {\n   |                     ------------ immutable borrow occurs here\n48 |             self.draw_to_player(name, 2);\n   |             ^^^^ mutable borrow occurs here\n49 |         }\n   |         - immutable borrow ends here\n</code></pre>\n\n<p>How could I approach this problem?</p>\n"}, {"tags": ["c", "linker", "rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1504018726, "creation_date": 1504018726, "answer_id": 45942391, "question_id": 45931131, "link": "https://stackoverflow.com/questions/45931131/linking-to-a-local-c-library-for-rust-with-ffi/45942391#45942391", "title": "Linking to a local C library for Rust with FFI", "body": "<blockquote>\n  <p>building two .a files: <code>cspice.a</code> and <code>csupport.a</code></p>\n</blockquote>\n\n<p>On Linux, static libraries are generally called <code>libfoo.a</code>, but your library doesn't have the <code>lib</code> prefix.</p>\n\n<p>Renaming the file to <code>libcspice.a</code> should allow it to compile. I'm not sure if you'd want to modify your build script or the libraries build script to perform the renaming. It's even possible that the library itself has a compilation switch to use a platform-standard naming scheme.</p>\n"}], "owner": {"reputation": 806, "user_id": 719020, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/7dfa71310fe94858b6f042303b414873?s=128&d=identicon&r=PG", "display_name": "ChrisR", "link": "https://stackoverflow.com/users/719020/chrisr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2433, "favorite_count": 1, "accepted_answer_id": 45942391, "answer_count": 1, "score": 2, "last_activity_date": 1504018726, "creation_date": 1503983676, "last_edit_date": 1504016215, "question_id": 45931131, "link": "https://stackoverflow.com/questions/45931131/linking-to-a-local-c-library-for-rust-with-ffi", "title": "Linking to a local C library for Rust with FFI", "body": "<p>I am trying to wrap a <a href=\"https://naif.jpl.nasa.gov/naif/toolkit.html\" rel=\"nofollow noreferrer\">quite large C library</a> in Rust. I used bindgen to generate the bindings. Rust seems content with those. However, despite my different attempts and my many reads of the <a href=\"http://doc.crates.io/build-script.html#case-study-building-some-native-code\" rel=\"nofollow noreferrer\">build-script docs</a>, I keep on getting linking issues.</p>\n\n<p>The library I'm using has a set of csh script which end up building two <code>.a</code> files: <code>cspice.a</code> and <code>csupport.a</code>. They are both stored in the <code>cspice_linux_gcc_64bit/lib</code> of my project (cf. the tree at bottom).</p>\n\n<p>I currently test the proper binding by calling constants and functions from my tests, cf. <a href=\"https://github.com/ChristopherRabotin/SPICE/blob/issue-1/src/lib.rs\" rel=\"nofollow noreferrer\">lib.rs</a> (on my Github).</p>\n\n<p>I highly suspect that something is wrong with my <code>build.rs</code> or, less likely, my <code>Cargo.toml</code>.</p>\n\n<h1>Linking error</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>Running `rustc --crate-name spice src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=94c06ffe4bfd7d5f -C extra-filename=-94c06ffe4bfd7d5f --out-dir /home/chris/Workspace/rust/SPICE/target/debug/deps -L dependency=/home/chris/Workspace/rust/SPICE/target/debug/deps -L native=cspice_linux_gcc_64bit/lib -l static=cspice`\n\nerror: could not find native static library `cspice`, perhaps an -L flag is missing?\n\nerror: Could not compile `spice`.\n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name spice src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=94c06ffe4bfd7d5f -C extra-filename=-94c06ffe4bfd7d5f --out-dir /home/chris/Workspace/rust/SPICE/target/debug/deps -L dependency=/home/chris/Workspace/rust/SPICE/target/debug/deps -L native=cspice_linux_gcc_64bit/lib -l static=cspice` (exit code: 101)\nBuild failed, waiting for other jobs to finish...\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"/home/chris/Workspace/rust/SPICE/target/debug/deps/spice-e22b64d176595306.0.o\" \"-o\" \"/home/chris/Workspace/rust/SPICE/target/debug/deps/spice-e22b64d176595306\" \"-Wl,--gc-sections\" \"-pie\" \"-nodefaultlibs\" \"-L\" \"/home/chris/Workspace/rust/SPICE/target/debug/deps\" \"-L\" \"cspice_linux_gcc_64bit/lib\" \"-L\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"-Wl,--whole-archive\" \"-l\" \"cspice\" \"-Wl,--no-whole-archive\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libtest-163c20e386ec0612.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgetopts-bd312ea730ea22d0.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libterm-4959b4e709084e0a.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-35ad9950c7e5074b.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-fb44afc024bbc636.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-14b8f3202acdad6a.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-20a50a22d4c2b1e9.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-b479831207997444.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-10b591f1a68dd370.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-28913dc5a1e63cd7.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-6ecacccb5bdc4911.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-f4f0ae88f5ad8ad4.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-bfaa82017ca17cb2.rlib\" \"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-863b57a66ba6c3e1.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"dl\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"gcc_s\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"util\"\n  = note: /usr/lib64/gcc/x86_64-suse-linux/4.8/../../../../x86_64-suse-linux/bin/ld: cannot find -lcspice\n          collect2: error: ld returned 1 exit status\n\n\nerror: aborting due to previous error(s)\n\nerror: Could not compile `spice`.\n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name spice src/lib.rs --emit=dep-info,link -C debuginfo=2 --test -C metadata=e22b64d176595306 -C extra-filename=-e22b64d176595306 --out-dir /home/chris/Workspace/rust/SPICE/target/debug/deps -L dependency=/home/chris/Workspace/rust/SPICE/target/debug/deps -L native=cspice_linux_gcc_64bit/lib -l static=cspice` (exit code: 101)\n</code></pre>\n\n<h1><code>build.rs</code></h1>\n\n<pre><code>extern crate bindgen;\n\nuse std::env;\nuse std::path::PathBuf;\n\n\nfn main() {\n    let out_dir = env::var(\"OUT_DIR\").unwrap();\n    // Tell cargo to tell rustc to link the system bzip2\n    // shared library.\n    println!(\"cargo:rustc-link-search=native=cspice_linux_gcc_64bit/lib\");\n    println!(\"cargo:rustc-link-lib=static=cspice\");\n    //println!(\"cargo:rustc-flags=-L cspice_linux_gcc_64bit/lib\");\n\n    // The bindgen::Builder is the main entry point\n    // to bindgen, and lets you build up options for\n    // the resulting bindings.\n    let bindings = bindgen::Builder::default()\n        // The input header we would like to generate\n        // bindings for.\n        .header(\"spice_wrapper.h\")\n        // Finish the builder and generate the bindings.\n        .generate()\n        // Unwrap the Result and panic on failure.\n        .expect(\"Unable to generate bindings\");\n\n\n    let out_path = PathBuf::from(out_dir.clone());\n    // Write the bindings to the $OUT_DIR/bindings.rs file.\n    bindings\n        .write_to_file(out_path.join(\"spice_bindings.rs\"))\n        .expect(\"Couldn't write bindings!\");\n}\n</code></pre>\n\n<h1><code>Cargo.toml</code></h1>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\n(...)\nlinks = \"cspice\"\nbuild = \"build.rs\"\n\n[build-dependencies]\nbindgen = \"0.26.3\"\n\n[dependencies]\n</code></pre>\n\n<h1>Tree</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 build.rs\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 cspice_linux_gcc_64bit\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 doc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 etc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 exe\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 makeall.csh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u251c\u2500\u2500 spice_wrapper.h\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 target\n    \u2514\u2500\u2500 debug\n</code></pre>\n"}, {"tags": ["windows", "rust", "oracle-call-interface", "bindgen"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1503991069, "post_id": 45931009, "comment_id": 78823967, "body": "Why do you need a <code>&#47;</code> between <code>-I</code> and <code>E:</code> in <code>.clang_arg()</code>?"}, {"owner": {"reputation": 31, "user_id": 7929393, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ccba41a47b7af7cb3eac5164a7b0722b?s=128&d=identicon&r=PG&f=1", "display_name": "yelan_fn", "link": "https://stackoverflow.com/users/7929393/yelan-fn"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1504054072, "post_id": 45931009, "comment_id": 78859282, "body": "Oh, I am really too foolish. I took it for granted that this was the case: there should be someing(maybe a space,or a /)  between -I and E:/. I think i should look at the help document of clang. Thanks a lot!!"}], "owner": {"reputation": 31, "user_id": 7929393, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ccba41a47b7af7cb3eac5164a7b0722b?s=128&d=identicon&r=PG&f=1", "display_name": "yelan_fn", "link": "https://stackoverflow.com/users/7929393/yelan-fn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 382, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1504012625, "creation_date": 1503982933, "last_edit_date": 1504012625, "question_id": 45931009, "link": "https://stackoverflow.com/questions/45931009/how-to-find-oracles-oci-h-header-when-i-use-bindgen-on-a-windows-system", "title": "How to find Oracle&#39;s &quot;oci.h&quot; header when I use Bindgen on a Windows system?", "body": "<p>I tried to use <code>bindgen</code> to automatically generate Rust FFI bindings to C and C++ libraries for the OCI bindings for an Oracle database.</p>\n\n<p>I followed <a href=\"https://rust-lang-nursery.github.io/rust-bindgen/\" rel=\"nofollow noreferrer\">the <code>bindgen</code> User Guide</a>, and I did it like this:  </p>\n\n<pre><code>extern crate bindgen;\n\nuse std::env;\nuse std::path::PathBuf;\n\nfn main() {\n    println!(\"cargo:rustc-link-search={}\", \"E:\\\\Rust\\\\instantclient_11_2\\\\sdk\\\\lib\\\\msvc\");\n    let bindings = bindgen::Builder::default()\n        .header(\"wrapper.h\")\n        .clang_arg(\"-I/E:\\\\Rust\\\\instantclient_11_2\\\\sdk\\\\include\")\n        .generate()\n        .expect(\"Unable to generate to bindings\");\n\n    let out_path = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n    bindings.write_to_file(out_path.join(\"oci.rs\"))\n        .expect(\"Couldn't write bindings\");\n}\n</code></pre>\n\n<p>My Oracle client SDK path is <code>E:/Rust/instantclient_11_2</code>, and the active toolchain is <code>nightly-x86_64-pc-windows-msvc</code> The <code>wrapper.h</code> file is:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;oci.h&gt;\n</code></pre>\n\n<p>When I run <code>cargo build</code>, I get the following error:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling test_bindgen v0.1.0 (file:///E:/Rust/test_bindgen)\nerror: failed to run custom build command for `test_bindgen v0.1.0 (file:///E:/Rust/test_bindgen)`\nprocess didn't exit successfully: `E:\\Rust\\test_bindgen\\target\\debug\\build\\test_bindgen-67bec61306f8f8d4\\build-script-build` (ex\nit code: 101)\n--- stdout\ncargo:rustc-link-search=E:\\Rust\\instantclient_11_2\\sdk\\lib\\msvc\nwrapper.h:1:10: fatal error: 'oci.h' file not found, err: true\n\n--- stderr\nwrapper.h:1:10: fatal error: 'oci.h' file not found\nthread 'main' panicked at 'Unable to generate to bindings: ()', src\\libcore\\result.rs:906:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>If I perform the same operation on Ubuntu 16.04 it succeeds, but I don't know how to do it on a Windows system.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1503965785, "post_id": 45928673, "comment_id": 78816531, "body": "I don&#39;t know enough to answer. I will say in the example replacing your <code>Map</code> struct with <code>type Map&lt;&#39;a&gt; = hir::map::Map&lt;&#39;a&gt;;</code> shows the same error, so it seems somehow your struct and the core one are different?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1503990796, "post_id": 45928673, "comment_id": 78823802, "body": "It is likely because <code>RefCell</code> forces <code>&#39;hir</code> to be invariant. <a href=\"https://stackoverflow.com/q/43210387/\">stackoverflow.com/q/43210387</a>"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1503974122, "creation_date": 1503963107, "last_edit_date": 1503974122, "question_id": 45928673, "link": "https://stackoverflow.com/questions/45928673/two-similar-code-snippets-but-only-one-triggers-a-lifetime-error", "title": "Two similar code snippets but only one triggers a lifetime error", "body": "<pre><code>#![feature(rustc_private)]\nextern crate rustc;\nuse rustc::hir::intravisit as hir_visit;\nuse rustc::hir;\nuse std::marker::PhantomData;\n\n// ----------------------------------------------------------------------------\n// Why does this compile?\n// ----------------------------------------------------------------------------\npub struct Map&lt;'a&gt; {\n    pub _m: PhantomData&lt;&amp;'a ()&gt;,\n}\npub struct SomeVisitor&lt;'a, 'tcx: 'a&gt; {\n    pub map: &amp;'a Map&lt;'tcx&gt;,\n}\npub enum NestedVisitorMap&lt;'this, 'tcx: 'this&gt; {\n    None,\n    OnlyBodies(&amp;'this Map&lt;'tcx&gt;),\n    All(&amp;'this Map&lt;'tcx&gt;),\n}\npub trait Visitor&lt;'v&gt;: Sized {\n    fn nested_visit_map&lt;'this&gt;(&amp;'this mut self) -&gt; NestedVisitorMap&lt;'this, 'v&gt;;\n}\nimpl&lt;'v, 'tcx&gt; Visitor&lt;'v&gt; for SomeVisitor&lt;'v, 'tcx&gt; {\n    fn nested_visit_map&lt;'this&gt;(&amp;'this mut self) -&gt; NestedVisitorMap&lt;'this, 'v&gt; {\n        NestedVisitorMap::All(self.map)\n    }\n}\n// ----------------------------------------------------------------------------\n// Why does this *not* compile?\n// ----------------------------------------------------------------------------\npub struct SomeVisitor2&lt;'a, 'tcx: 'a&gt; {\n    pub map: &amp;'a hir::map::Map&lt;'tcx&gt;,\n}\nimpl&lt;'v, 'tcx&gt; hir_visit::Visitor&lt;'v&gt; for SomeVisitor2&lt;'v, 'tcx&gt; {\n    fn nested_visit_map&lt;'this&gt;(&amp;'this mut self) -&gt; hir_visit::NestedVisitorMap&lt;'this, 'v&gt; {\n        hir_visit::NestedVisitorMap::All(self.map)\n    }\n}\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=83d4b8c84ed25b25c3853c22eebab9b0&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p><a href=\"https://github.com/rust-lang/rust/blob/9a59d693239915aa37bd08ca194a8ba2857db25a/src/librustc/hir/intravisit.rs#L77\" rel=\"nofollow noreferrer\">NestedVisitorMap</a> and <a href=\"https://github.com/rust-lang/rust/blob/9a59d693239915aa37bd08ca194a8ba2857db25a/src/librustc/hir/intravisit.rs#L162\" rel=\"nofollow noreferrer\">Visitor</a></p>\n\n<p>I recently ran into a lifetime issue and I decided to recreate it without any dependencies. The odd thing is that I can not recreate the lifetime error. To me both implementations look the same from the outside, but only one compiles successfully. Why is that?</p>\n\n<p><code>rustc 1.21.0-nightly (e26688824 2017-08-27)</code></p>\n\n<p>Update:</p>\n\n<p>The problem seems to be the <code>RefCell</code> inside <code>Map</code>.</p>\n\n<pre><code>#[derive(Clone)]\npub struct Map&lt;'hir&gt; {\n    inlined_bodies: RefCell&lt;rustc::util::nodemap::DefIdMap&lt;&amp;'hir hir::Body&gt;&gt;,\n}\n</code></pre>\n\n<p>If there is a <code>RefCell</code> with a inner lifetime, it will trigger an error.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=72040e66ec3b33c9a2256a940f25acbc&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Update2:</p>\n\n<p>It turns out that I just mixed up lifetime subtyping. <a href=\"https://play.rust-lang.org/?gist=e8d94fbd38216b3b4a8afad31d9ee261&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I still don't know why only <code>RefCell</code> causes the error.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1503940377, "post_id": 45923842, "comment_id": 78806847, "body": "You cannot until non-lexical lifetimes are implemented."}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 1, "closed_date": 1503940283, "answer_count": 0, "score": 1, "last_activity_date": 1503940361, "creation_date": 1503938996, "last_edit_date": 1503940361, "question_id": 45923842, "link": "https://stackoverflow.com/questions/45923842/how-can-i-pass-an-element-of-a-vector-as-argument-for-push-into-the-same-ve", "closed_reason": "Duplicate", "title": "How can I pass an element of a vector as argument for `.push()` into the same vector without introduction of a temporary variable?", "body": "<p>This example fails:</p>\n\n<pre><code>fn main() {\n    let mut v: Vec&lt;i8&gt; = vec![1, 2];\n    v.push(v[0])\n}\n</code></pre>\n\n<p>error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `v` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:3:12\n  |\n3 |     v.push(v[0])\n  |     -      ^   - mutable borrow ends here\n  |     |      |\n  |     |      immutable borrow occurs here\n  |     mutable borrow occurs here\n</code></pre>\n\n<p>I knew how to fix this:</p>\n\n<pre><code>let mut v: Vec&lt;i8&gt; = vec![1, 2];\nlet take = v[0];\nv.push(take);\n</code></pre>\n\n<p>How can I pass an element of a vector as argument for <code>.push()</code> into the same vector without introduction of a temporary variable?</p>\n"}, {"tags": ["rust", "integer-overflow", "integer-arithmetic", "modular-arithmetic"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1503920461, "post_id": 45918104, "comment_id": 78794614, "body": "<a href=\"https://doc.rust-lang.org/std/u128/\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/u128</a>"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1503920618, "post_id": 45918104, "comment_id": 78794707, "body": "Just use this: <a href=\"http://huonw.github.io/primal/primal/fn.is_prime.html\" rel=\"nofollow noreferrer\">huonw.github.io/primal/primal/fn.is_prime.html</a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 3, "creation_date": 1503921217, "post_id": 45918104, "comment_id": 78795079, "body": "<a href=\"https://en.wikipedia.org/wiki/Modular_arithmetic#Example_implementations\" rel=\"nofollow noreferrer\">Wiki modular arithmetic example implementation</a>"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503931334, "post_id": 45918104, "comment_id": 78801994, "body": "@red75prime if you (or someone) can turn that into an answer I would love to accept it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503932733, "post_id": 45918104, "comment_id": 78802861, "body": "@red75prime Why do not you post it as answer?"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503933536, "post_id": 45918104, "comment_id": 78803371, "body": "@Boiethios that&#39;s a good trick if you&#39;re on nightly, but then I have to wonder how to do it for <code>u128</code> (and so on until I run out of higher-bit datatypes)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503933606, "post_id": 45918104, "comment_id": 78803419, "body": "@RichardRast Sure, I just wanted to answer your interrogation about <code>u128</code>"}], "answers": [{"comments": [{"owner": {"reputation": 2291, "user_id": 3193876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e89e4aba2480e6a7ef021bfaceb9bdc5?s=128&d=identicon&r=PG&f=1", "display_name": "Ronald", "link": "https://stackoverflow.com/users/3193876/ronald"}, "edited": false, "score": 1, "creation_date": 1503920594, "post_id": 45918161, "comment_id": 78794688, "body": "strictly speaking <code>n * n % d = (n % d) * (n % d) % d</code>"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 6, "creation_date": 1503921068, "post_id": 45918161, "comment_id": 78795000, "body": "This can still overflow if <code>d</code> is large."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1503931163, "post_id": 45918161, "comment_id": 78801897, "body": "@interjay Specifically, it can overflow if <code>d &gt; 2^16</code>"}], "tags": [], "owner": {"reputation": 1687, "user_id": 7393694, "user_type": "registered", "accept_rate": 92, "profile_image": "https://graph.facebook.com/10154893180006667/picture?type=large", "display_name": "J&#252;rg Merlin Spaak", "link": "https://stackoverflow.com/users/7393694/j%c3%bcrg-merlin-spaak"}, "is_accepted": false, "score": 0, "last_activity_date": 1503924221, "last_edit_date": 1503924221, "creation_date": 1503920554, "answer_id": 45918161, "question_id": 45918104, "link": "https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow/45918161#45918161", "title": "How to do arithmetic modulo another number, without overflow?", "body": "<p>Use simple mathematics:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(n*n)%d = (n%d)*(n%d)%d\n</code></pre>\n\n<p>To see that this is indeed true, set <code>n = k*d+r</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>n*n%d = k**2*d**2+2*k*d*r+r**2 %d = r**2%d = (n%d)*(n%d)%d\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503937373, "post_id": 45923436, "comment_id": 78805422, "body": "@red75prime If you want to post your own answer, I delete mine."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503938898, "post_id": 45923436, "comment_id": 78806169, "body": "No, it&#39;s fine. The problem is this algorithm isn&#39;t correct. I found one bug <code>if d &gt; m ...</code> should be <code>if d &gt;= m ...</code>. Another one causes subtract with overflow in ` (d &lt;&lt; 1) - m`. I didn&#39;t find why yet."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503939547, "post_id": 45923436, "comment_id": 78806486, "body": "Also it seems to give incorrect answers. 11552001120680995*15777587326414455 (mod 18442563521290148565) should be 844062957336182220, algorithm gives 13054753449364403936"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1503940301, "post_id": 45923436, "comment_id": 78806816, "body": "Note that the wikipedia section indicates that all arguments (<code>x</code>, <code>y</code> and <code>m</code>) must be at most 63 bits (that is, $&lt;2^63$). @red75prime your given arguments (here, the modulus) uses all 64 bits."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1503938825, "last_edit_date": 1503938825, "creation_date": 1503937351, "answer_id": 45923436, "question_id": 45918104, "link": "https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow/45923436#45923436", "title": "How to do arithmetic modulo another number, without overflow?", "body": "<p><a href=\"https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow#comment78795079_45918104\">red75prime added a useful comment</a>. Here is the Rust code to calculate a modulo of two multiplied numbers, taken from Wikipedia:</p>\n\n<pre><code>fn mul_mod(mut x: u64, mut y: u64, m: u64) -&gt; u64 {\n    let mut d = 0_u64;\n    let mp2 = m &gt;&gt; 1;\n    x %= m;\n    y %= m;\n\n    for _ in 0..64 {\n        d = if d &gt; mp2 {\n            (d &lt;&lt; 1) - m\n        } else {\n            d &lt;&lt; 1\n        };\n        if x &amp; 0x8000_0000_0000_0000_u64 != 0 {\n            d += y;\n        }\n        if d &gt; m {\n            d -= m;\n        }\n        x &lt;&lt;= 1;\n    }\n    d\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1503958912, "post_id": 45924957, "comment_id": 78814891, "body": "@mcarton what is <code>half</code> half of?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503989288, "post_id": 45924957, "comment_id": 78822944, "body": "@Shepmaster now that I think about it, nothing :)"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "edited": false, "score": 0, "creation_date": 1505071256, "post_id": 45924957, "comment_id": 79251035, "body": "I regret to say that I have not gone through the work of understanding this code :( but I have tested it thoroughly and it works very well. Thank you!"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 5, "last_activity_date": 1503990424, "last_edit_date": 1503990424, "creation_date": 1503943543, "answer_id": 45924957, "question_id": 45918104, "link": "https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow/45924957#45924957", "title": "How to do arithmetic modulo another number, without overflow?", "body": "<p>Richard Rast <a href=\"https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow#comment78806816_45923436\">pointed out</a> that Wikipedia version works only with 63-bit integers. I extended the code provided by Boiethios to work with full range of 64-bit unsigned integers. </p>\n\n<pre><code>fn mul_mod64(mut x: u64, mut y: u64, m: u64) -&gt; u64 {\n    let msb = 0x8000_0000_0000_0000;\n    let mut d = 0;\n    let mp2 = m &gt;&gt; 1;\n    x %= m;\n    y %= m;\n\n    if m &amp; msb == 0 {\n        for _ in 0..64 {\n            d = if d &gt; mp2 {\n                (d &lt;&lt; 1) - m\n            } else {\n                d &lt;&lt; 1\n            };\n            if x &amp; msb != 0 {\n                d += y;\n            }\n            if d &gt;= m {\n                d -= m;\n            }\n            x &lt;&lt;= 1;\n        }\n        d\n    } else {\n        for _ in 0..64 {\n            d = if d &gt; mp2 {\n                d.wrapping_shl(1).wrapping_sub(m)\n            } else {\n                // the case d == m &amp;&amp; x == 0 is taken care of \n                // after the end of the loop\n                d &lt;&lt; 1\n            };\n            if x &amp; msb != 0 {\n                let (mut d1, overflow) = d.overflowing_add(y);\n                if overflow {\n                    d1 = d1.wrapping_sub(m);\n                }\n                d = if d1 &gt;= m { d1 - m } else { d1 };\n            }\n            x &lt;&lt;= 1;\n        }\n        if d &gt;= m { d - m } else { d }\n    }\n}\n\n#[test]\nfn test_mul_mod64() {\n    let half = 1 &lt;&lt; 16;\n    let max = std::u64::MAX;\n\n    assert_eq!(mul_mod64(0, 0, 2), 0);\n    assert_eq!(mul_mod64(1, 0, 2), 0);\n    assert_eq!(mul_mod64(0, 1, 2), 0);\n    assert_eq!(mul_mod64(1, 1, 2), 1);\n    assert_eq!(mul_mod64(42, 1, 2), 0);\n    assert_eq!(mul_mod64(1, 42, 2), 0);\n    assert_eq!(mul_mod64(42, 42, 2), 0);\n    assert_eq!(mul_mod64(42, 42, 42), 0);\n    assert_eq!(mul_mod64(42, 42, 41), 1);\n    assert_eq!(mul_mod64(1239876, 2948635, 234897), 163320);\n\n    assert_eq!(mul_mod64(1239876, 2948635, half), 18476);\n    assert_eq!(mul_mod64(half, half, half), 0);\n    assert_eq!(mul_mod64(half+1, half+1, half), 1);\n\n    assert_eq!(mul_mod64(max, max, max), 0);\n    assert_eq!(mul_mod64(1239876, 2948635, max), 3655941769260);\n    assert_eq!(mul_mod64(1239876, max, max), 0);\n    assert_eq!(mul_mod64(1239876, max-1, max), max-1239876);\n    assert_eq!(mul_mod64(max, 2948635, max), 0);\n    assert_eq!(mul_mod64(max-1, 2948635, max), max-2948635);\n    assert_eq!(mul_mod64(max-1, max-1, max), 1);\n    assert_eq!(mul_mod64(2, max/2, max-1), 0);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2133, "user_id": 252723, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01ca5efa94588ff009f9f67c7d41ba7d?s=128&d=identicon&r=PG", "display_name": "Julian", "link": "https://stackoverflow.com/users/252723/julian"}, "is_accepted": false, "score": 0, "last_activity_date": 1616264899, "last_edit_date": 1616264899, "creation_date": 1616248811, "answer_id": 66722460, "question_id": 45918104, "link": "https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow/66722460#66722460", "title": "How to do arithmetic modulo another number, without overflow?", "body": "<p>Here's an alternative approach (there's now a <code>u128</code> datatype):</p>\n<pre><code>fn mul_mod(a: u64, b: u64, m: u64) -&gt; u64 {\n    let (a, b, m) = (a as u128, b as u128, m as u128);\n    ((a * b) % m) as u64\n}\n</code></pre>\n<p>This approach just leans on LLVM's 128 bit integer arithmetic.</p>\n<p>The thing I like about this version is that it's really easy to convince yourself that the solution is correct for the entire domain. Since <code>a</code> and <code>b</code> are <code>u64</code>s the product is guaranteed to fit in a <code>u128</code>, and since <code>m</code> is a <code>u64</code> the downcast at the end is guaranteed to be safe.</p>\n<p>I don't know how performance compares to other approaches, but I would be pretty surprised if it were dramatically slower. If you really care about performance you're going to want to run some benchmarks and try a few alternatives in any case.</p>\n"}], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1023, "favorite_count": 0, "accepted_answer_id": 45924957, "answer_count": 4, "score": 6, "last_activity_date": 1616264899, "creation_date": 1503920354, "question_id": 45918104, "link": "https://stackoverflow.com/questions/45918104/how-to-do-arithmetic-modulo-another-number-without-overflow", "title": "How to do arithmetic modulo another number, without overflow?", "body": "<p>I'm trying to implement a fast primality test for Rust's <code>u32</code> and <code>u64</code> datatypes. As part of it, I need to compute <code>(n*n)%d</code> where <code>n</code> and <code>d</code> are <code>u32</code> (or <code>u64</code>, respectively).</p>\n\n<p>While the result can easily fit in the datatype, I'm at a loss for how to compute this. As far as I know there is no processor primitive for this.</p>\n\n<p>For <code>u32</code> we can fake it -- cast up to <code>u64</code>, so that the product won't overflow, then take the modulus, then cast back down to <code>u32</code>, knowing this won't overflow. However since I don't have a <code>u128</code> datatype (as far as I know) this trick won't work for <code>u64</code>.</p>\n\n<p>So for <code>u64</code>, the most obvious way I can think of to accomplish this is to somehow compute <code>x*y</code> to get a pair <code>(carry, product)</code> of <code>u64</code>, so we capture the amount of overflow instead of just losing it (or panicking, or whatever).</p>\n\n<p>Is there a way to do this? Or another standard way to solve the problem?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 31, "user_id": 8526967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53e9fff23d455b77d6863fdbef7d8009?s=128&d=identicon&r=PG&f=1", "display_name": "babariviere", "link": "https://stackoverflow.com/users/8526967/babariviere"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503920187, "post_id": 45917378, "comment_id": 78794435, "body": "I just want to return a Client struct, not an enum with different Client"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1503926331, "last_edit_date": 1503926331, "creation_date": 1503921525, "answer_id": 45918450, "question_id": 45917378, "link": "https://stackoverflow.com/questions/45917378/rust-different-return-types-with-same-base-structure/45918450#45918450", "title": "Rust different return types with same base structure", "body": "<p>Your approach does not seem bad. My suggest is to use <a href=\"https://en.wikipedia.org/wiki/Composite_pattern\" rel=\"nofollow noreferrer\">composition</a>: encapsulate your <code>enum</code> in a <code>struct</code> and do the thing you want in each method with a <code>match</code>:</p>\n\n<pre><code>enum ConnectionResult { // not pub because intern implementation\n    Normal(Client&lt;TcpStream&gt;),\n    Secure(Client&lt;SslStream&lt;TcpStream&gt;&gt;),\n}\n\npub struct MyClient {\n    connection_result: ConnectionResult,\n    // other fields\n}\n\nimpl MyClient {\n    pub fn do_something(&amp;self) {\n        match connection_result {\n            Normal(client) =&gt; // do something with normal client\n            Secure(client) =&gt; // do something with secure client\n        }\n    }\n}\n</code></pre>\n\n<p>From the user point of view, there is no difference between the two clients.</p>\n\n<p>If you do not want this solution, you can use the nightly <code>-&gt; impl</code> feature:</p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\ntrait MyClient {\n    // the methods you need\n}\n\nstruct NormalClient {\n    client: Client&lt;TcpStream&gt;,\n    /*etc.*/\n}\nstruct SecureClient {\n    client: Client&lt;SslStream&lt;TcpStream&gt;&gt;,\n    /*etc.*/\n}\n\nimpl MyClient for NormalClient { /*etc.*/ }\nimpl MyClient for SecureClient { /*etc.*/ }\n\nfn get_client() -&gt; impl MyClient { /*etc.*/ }\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 8526967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53e9fff23d455b77d6863fdbef7d8009?s=128&d=identicon&r=PG&f=1", "display_name": "babariviere", "link": "https://stackoverflow.com/users/8526967/babariviere"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 45918450, "answer_count": 1, "score": 2, "last_activity_date": 1503926331, "creation_date": 1503917860, "last_edit_date": 1503924736, "question_id": 45917378, "link": "https://stackoverflow.com/questions/45917378/rust-different-return-types-with-same-base-structure", "title": "Rust different return types with same base structure", "body": "<p>I want to return a different IMAP connection depending on the <code>secure</code> variable, but <a href=\"http://mattnenterprise.github.io/rust-imap/imap/client/struct.Client.html\" rel=\"nofollow noreferrer\"><code>imap::client::Client</code></a> returns a different type if we use SSL or not. All of the functions in <code>Client</code> are implemented by <code>impl&lt;T: Read + Write&gt; Client&lt;T&gt;</code>.</p>\n\n<p>Is there a better and way more efficient solution possible?</p>\n\n<pre><code>use error::*;\nuse imap::client::Client;\nuse openssl::ssl::{SslConnectorBuilder, SslMethod, SslStream};\nuse std::net::TcpStream;\n\npub enum ConnectionResult {\n    Normal(Client&lt;TcpStream&gt;),\n    Secure(Client&lt;SslStream&lt;TcpStream&gt;&gt;),\n}\n\n/// Mail account\n#[derive(Debug, Deserialize)]\npub struct Account {\n    pub username: String,\n    pub password: String,\n    pub domain: String,\n    pub port: u16,\n    pub secure: bool,\n}\n\nimpl Account {\n    pub fn connect(&amp;self) -&gt; Result&lt;ConnectionResult&gt; {\n        if self.secure {\n            let ssl_connector = SslConnectorBuilder::new(SslMethod::tls())\n                .chain_err(|| \"fail with ssl\")?\n                .build();\n            let mut imap_socket = Client::secure_connect(\n                (self.domain.as_str(), self.port),\n                &amp;self.domain,\n                ssl_connector,\n            );\n            imap_socket\n                .login(&amp;self.username, &amp;self.password)\n                .chain_err(|| \"fail when login\")?;\n            Ok(ConnectionResult::Secure(imap_socket))\n        } else {\n            let mut imap_socket = Client::connect((self.domain.as_str(), self.port))?;\n            imap_socket\n                .login(&amp;self.username, &amp;self.password)\n                .chain_err(|| \"fail when login\")?;\n            Ok(ConnectionResult::Normal(imap_socket))\n        }\n}\n</code></pre>\n\n<p>I just want to return a <code>Client</code> struct, not a enum that holds different <code>Client</code>s:</p>\n\n<pre><code>pub fn connect&lt;T: Read + Write&gt;(&amp;self) -&gt; Result&lt;Client&lt;T&gt;&gt; {\n    // But this won't work\n}\n</code></pre>\n"}, {"tags": ["string", "rust", "match"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1566504524, "last_edit_date": 1566504524, "creation_date": 1503914219, "answer_id": 45916324, "question_id": 45916094, "link": "https://stackoverflow.com/questions/45916094/how-do-i-a-match-string-with-further-processing/45916324#45916324", "title": "How do I a match string with further processing?", "body": "<p>Use an <code>if</code> in your <code>match</code>, called a <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch18-03-pattern-syntax.html#extra-conditionals-with-match-guards\" rel=\"nofollow noreferrer\"><em>match guard</em></a>:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{self, BufReader, BufRead};\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let file_path = \"foo.txt\";\n    // read file line by line\n    let file = File::open(file_path)?;\n    let reader = BufReader::new(file);\n\n    for line in reader.lines() {\n        parse_line(line?);\n    }\n\n    Ok(())\n}\n\nfn parse_line(line: String) {\n    match &amp;line {\n        s if s.contains(\"foo\") =&gt; print!(\"contains foo\"),\n        s if s.contains(\"bar\") =&gt; print!(\"contains bar\"),\n        _ =&gt; print!(\"other\"),\n    }\n}\n</code></pre>\n\n<p>Note that this line:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(String) if line.contains(\"foo\") =&gt; print!(\"function head\");\n</code></pre>\n\n<p>is not Rust. There is no syntax like that in Rust.</p>\n"}], "owner": {"reputation": 329, "user_id": 6557347, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/bf5777750fd1ea3661085e7764c9d582?s=128&d=identicon&r=PG&f=1", "display_name": "abdoe", "link": "https://stackoverflow.com/users/6557347/abdoe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 45916324, "answer_count": 1, "score": 2, "last_activity_date": 1566504524, "creation_date": 1503913535, "last_edit_date": 1503924394, "question_id": 45916094, "link": "https://stackoverflow.com/questions/45916094/how-do-i-a-match-string-with-further-processing", "title": "How do I a match string with further processing?", "body": "<p>I'm reading some file, line by line and want to match each line, to verify if it contains a specific string.</p>\n\n<p>What I have so far:</p>\n\n<pre><code>// read file line by line\nlet file = File::open(file_path).expect(\"Cannot open file\");\nlet buffer = BufReader::new(file);\nfor line in buffer.lines() {\n    // println!(\"{:?}\", line.unwrap());\n    parse_line(line.unwrap());\n\n}\n\nfn parse_line(line: String) {\n    match line {\n        (String) if line.contains(\"foo\") =&gt; print!(\"function head\"),\n        _ =&gt; print!(\"function body\"),\n    }\n}\n</code></pre>\n\n<p>This results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `,` or `@`, found `)`\n  --&gt; src/main.rs:13:20\n   |\n13 |             (String) if line.contains(\"foo\") =&gt; print!(\"function head\"),\n   |                    ^ expected one of `,` or `@` here\n</code></pre>\n\n<p>Can I use <code>match</code> to check for different containing strings, like I'd do with <code>switch</code> in other cases?</p>\n\n<p>As in, something like:</p>\n\n<pre><code>fn parse_line(line: String) {\n    match line {\n        line.contains(\"foo\") =&gt; print!(\"function foo\"),\n        line.contains(\"bar\") =&gt; print!(\"function bar\"),\n        _ =&gt; print!(\"function body\"),\n    }\n}\n</code></pre>\n"}, {"tags": ["iterator", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1503844019, "creation_date": 1503844019, "answer_id": 45906022, "question_id": 45904760, "link": "https://stackoverflow.com/questions/45904760/how-to-take-ownership-of-a-value-in-flat-map/45906022#45906022", "title": "How to take ownership of a value in flat_map", "body": "<blockquote>\n  <p>How to take ownership of a value in flat_map</p>\n</blockquote>\n\n<p>There's nothing special about <code>flat_map</code> here. When calling <code>get_foo</code>, ownership of the return value is transferred to the caller, just like anywhere else in Rust.</p>\n\n<blockquote>\n  <p>I've used into_iter everywhere, which as I understand it, takes ownership of the iterated values.</p>\n</blockquote>\n\n<p>Usually, yes, but not for an array. See the linked questions below for why. This is the source of the problem. The <code>flat_map</code> closure owns the result of <code>get_foo</code>, and then you <em>take a reference to it</em>. The reference cannot live beyond the closure, but that's what you are asking it to do.</p>\n\n<p>As a workaround, you can return a <code>Vec</code> from your function:</p>\n\n<pre><code>fn get_foo(i: u8) -&gt; Vec&lt;u8&gt; {\n    if i % 2 == 0 {\n        vec![1, 2, 3]\n    } else {\n        vec![4, 5, 6]\n    }\n}\n</code></pre>\n\n<p>You could also convert the returned array into a <code>Vec</code> inside the <code>flat_map</code> call.</p>\n\n<p>If you felt like the situation warranted it, you could implement your own iterator:</p>\n\n<pre><code>struct CloneArrayIter&lt;T&gt; {\n    arr: [T; 3],\n    idx: usize,\n}\n\nimpl&lt;T&gt; CloneArrayIter&lt;T&gt; {\n    fn new(arr: [T; 3]) -&gt; Self {\n        Self { arr, idx: 0 }\n    }\n}\n\nimpl&lt;T&gt; Iterator for CloneArrayIter&lt;T&gt;\nwhere\n    T: Clone,\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.idx &lt; 3 {\n            let value = self.arr[self.idx].clone();\n            self.idx += 1;\n            Some(value)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>And use it as <code>.flat_map(|i| CloneArrayIter::new(get_foo(i)))</code></p>\n\n<p>I'd probably just use an <code>ArrayVec</code> from <a href=\"https://crates.io/crates/arrayvec\" rel=\"noreferrer\">arrayvec</a> though:</p>\n\n<pre><code>extern crate arrayvec;\n\nuse arrayvec::ArrayVec;\n\nfn main() {\n    let foo_selectors = vec![0, 1];\n\n    let foos: Vec&lt;_&gt; = foo_selectors\n        .into_iter()\n        .flat_map(|i| get_foo(i))\n        .collect();\n\n    println!(\"{:?}\", foos);\n}\n\nfn get_foo(i: u8) -&gt; ArrayVec&lt;[u8; 3]&gt; {\n    if i % 2 == 0 { [1, 2, 3] } else { [4, 5, 6] }.into()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34733811/155423\">What is the difference between iter and into_iter?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30467085/155423\">How to Iterate Over an Array?</a></li>\n</ul>\n"}], "owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 836, "favorite_count": 0, "accepted_answer_id": 45906022, "answer_count": 1, "score": 3, "last_activity_date": 1503844019, "creation_date": 1503835467, "last_edit_date": 1503836048, "question_id": 45904760, "link": "https://stackoverflow.com/questions/45904760/how-to-take-ownership-of-a-value-in-flat-map", "title": "How to take ownership of a value in flat_map", "body": "<p>With the following simplified/abstracted version of my problem:</p>\n\n<pre><code>fn main() {\n    let foo_selectors = vec![0, 1];\n\n    let foos: Vec&lt;_&gt; = foo_selectors\n        .into_iter()\n        .flat_map(|i| get_foo(i).into_iter())\n        .collect();\n\n    println!(\"{:?}\", foos);\n}\n\nfn get_foo(i: u8) -&gt; [u8; 3] {\n    if i % 2 == 0 {\n        [1, 2, 3]\n    } else {\n        [4, 5, 6]\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9073a983a386f717184fb29d609e37b5&amp;version=stable\" rel=\"nofollow noreferrer\">Playground Link</a></p>\n\n<p>I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:6:44\n   |\n6  |         .flat_map(|i| get_foo(i).into_iter())\n   |                       ----------           ^ temporary value dropped here while still borrowed\n   |                       |\n   |                       temporary value created here\n...\n10 | }\n   | - temporary value needs to live until here\n</code></pre>\n\n<p>The error message complains about borrowing, but I've used <code>into_iter</code> everywhere, which as I understand it, takes ownership of the iterated values. I want to take ownership of the values returned from <code>get_foo</code> and insert their elements into <code>foos</code>. How can I do that?</p>\n"}, {"tags": ["multithreading", "rust", "sdl-2"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1503835682, "post_id": 45904775, "comment_id": 78768024, "body": "This is correct, however, I don&#39;t need sync in the case of cloning - I use separate object and I think I have nothing to share. Or am I wrong here?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1503836718, "post_id": 45904775, "comment_id": 78768300, "body": "It is the function <code>add_timer</code> which needs <code>Sync</code>, not you. You have to comply with the requirement."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 0, "last_activity_date": 1503844158, "last_edit_date": 1503844158, "creation_date": 1503835563, "answer_id": 45904775, "question_id": 45903158, "link": "https://stackoverflow.com/questions/45903158/sdl2-fnmut-and-mpsc-sender-can-not-be-shared-safely-between-threads/45904775#45904775", "title": "SDL2, FnMut and mpsc, sender can not be shared safely between threads", "body": "<p>The cloned sender has the same type as original sender, so it is still not <code>Sync</code>. <code>add_timer</code> function wants a closure which is <code>Sync</code>, so you need to wrap sender in <code>Mutex</code> which makes your sender safe to share between threads.</p>\n\n<pre><code>let timer_tx = Mutex::new(tx.clone());\ntimer_subsystem.add_timer(\n    1000u32 / 120u32,\n    Box::new(move || {\n        timer_tx.lock().unwrap().send(Event::Draw);\n        1000u32 / 120u32\n    }),\n);\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "accepted_answer_id": 45904775, "answer_count": 1, "score": 1, "last_activity_date": 1503844413, "creation_date": 1503823176, "last_edit_date": 1503844413, "question_id": 45903158, "link": "https://stackoverflow.com/questions/45903158/sdl2-fnmut-and-mpsc-sender-can-not-be-shared-safely-between-threads", "title": "SDL2, FnMut and mpsc, sender can not be shared safely between threads", "body": "<p>I want to start a timer with <code>sdl2-rs</code> crate for performing draw calls. I wanted to start it by doing something like this:</p>\n\n<pre><code>extern crate sdl2;\n\nuse std::sync::mpsc;\n\nenum Event {\n    Draw,\n}\n\nfn main() {\n    let sdl_context = sdl2::init().unwrap();\n    let video_subsystem = sdl_context.video().unwrap();\n    video_subsystem.gl_attr().set_context_version(4, 5);\n    println!(\n        \"Current gl version: {:?}\",\n        video_subsystem.gl_attr().context_version()\n    );\n    let timer_subsystem = sdl_context.timer().unwrap();\n\n    let window = video_subsystem\n        .window(\"rust-sdl2 demo: Video\", 800, 600)\n        .position_centered()\n        .opengl()\n        .build()\n        .unwrap();\n\n    let context = window.gl_create_context().unwrap();\n\n    let (tx, rx) = mpsc::channel();\n    {\n        let timer_tx = tx.clone();\n        timer_subsystem.add_timer(\n            1000u32 / 120u32,\n            Box::new(move || {\n                timer_tx.send(Event::Draw);\n                1000u32 / 120u32\n            }),\n        );\n    }\n}\n</code></pre>\n\n<p>However, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::sync::mpsc::Sender&lt;Event&gt;: std::marker::Sync` is not satisfied in `[closure@src/main.rs:33:22: 36:14 timer_tx:std::sync::mpsc::Sender&lt;Event&gt;]`\n  --&gt; src/main.rs:33:13\n   |\n33 | /             Box::new(move || {\n34 | |                 timer_tx.send(Event::Draw);\n35 | |                 1000u32 / 120u32\n36 | |             }),\n   | |______________^ `std::sync::mpsc::Sender&lt;Event&gt;` cannot be shared between threads safely\n   |\n   = help: within `[closure@src/main.rs:33:22: 36:14 timer_tx:std::sync::mpsc::Sender&lt;Event&gt;]`, the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender&lt;Event&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:33:22: 36:14 timer_tx:std::sync::mpsc::Sender&lt;Event&gt;]`\n   = note: required for the cast to the object type `std::ops::FnMut() -&gt; u32 + std::marker::Sync`\n</code></pre>\n\n<p>I understand that the sender is not <code>Sync</code> so I clone it and move cloned object into the <code>FnMut</code> closure but it does not work anyway. How can I do that? As from what I understand by moving the object into a closure we <strong>don't</strong> share it so it must work this way. Also, examples in the documentation say the same.</p>\n"}, {"tags": ["function", "macros", "rust", "absolute-value"], "answers": [{"comments": [{"owner": {"reputation": 399, "user_id": 5450034, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/2462e1581e38e42f3908a6357b844812?s=128&d=identicon&r=PG&f=1", "display_name": "A. N. Other", "link": "https://stackoverflow.com/users/5450034/a-n-other"}, "edited": false, "score": 0, "creation_date": 1503820593, "post_id": 45902812, "comment_id": 78764345, "body": "Thanks, that works perfectly. At this point I can simply call abs(-4) from main and delete the &quot;let value = &quot; and the whole &quot;println!&quot; statement in main."}, {"owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "reply_to_user": {"reputation": 399, "user_id": 5450034, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/2462e1581e38e42f3908a6357b844812?s=128&d=identicon&r=PG&f=1", "display_name": "A. N. Other", "link": "https://stackoverflow.com/users/5450034/a-n-other"}, "edited": false, "score": 0, "creation_date": 1503820671, "post_id": 45902812, "comment_id": 78764360, "body": "Yes: <code>fn main() {     abs(-4); }</code>"}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": true, "score": 2, "last_activity_date": 1584421435, "last_edit_date": 1584421435, "creation_date": 1503820350, "answer_id": 45902812, "question_id": 45902734, "link": "https://stackoverflow.com/questions/45902734/absolute-value-function-in-rust/45902812#45902812", "title": "Absolute value function in Rust", "body": "<p>Try <a href=\"https://play.rust-lang.org/?gist=e1161f4dedb794dcf09fa2cc9379f590&amp;version=stable\" rel=\"nofollow noreferrer\">this</a> to avoid recursion:</p>\n\n<pre><code>fn main() {\n    let value = abs(-4);\n    println!(\"{}.\", value);\n}\nfn abs(x: i32) -&gt; i32 {\n    let y = if x &gt;= 0 { x } else { -x };\n    println!(\"The abs value of {} is {} \", x, y);\n    y\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>The abs value of -4 is 4\n4.\n</code></pre>\n\n<hr>\n\n<p>There are built-in <code>.abs()</code> method for primitive types e.g. \n<a href=\"https://doc.rust-lang.org/std/primitive.i8.html#method.abs\" rel=\"nofollow noreferrer\">i8</a>, \n<a href=\"https://doc.rust-lang.org/std/primitive.i16.html#method.abs\" rel=\"nofollow noreferrer\">i16</a>, \n<a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.abs\" rel=\"nofollow noreferrer\">i32</a>, \n<a href=\"https://doc.rust-lang.org/std/primitive.i64.html#method.abs\" rel=\"nofollow noreferrer\">i64</a>, \n<a href=\"https://doc.rust-lang.org/std/primitive.i128.html#method.abs\" rel=\"nofollow noreferrer\">i128</a>, \n<a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.abs\" rel=\"nofollow noreferrer\">f32</a>, \nand <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.abs\" rel=\"nofollow noreferrer\">f64</a>:  </p>\n\n<pre><code>assert_eq!(10i32.abs(), 10);\nassert_eq!((-10i32).abs(), 10);\n</code></pre>\n\n<h3>Overflow behavior</h3>\n\n<blockquote>\n  <p>The absolute value of <code>i32::min_value()</code> cannot be represented as an\n  <code>i32</code>, and attempting to calculate it will cause an overflow. This\n  means that code in debug mode will trigger a panic on this case and\n  optimized code will return <code>i32::min_value()</code> without a panic.</p>\n</blockquote>\n\n<p>The following code, will panic in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95b6e62b07fa995cb788359f314a1327\" rel=\"nofollow noreferrer\">debug</a> mode (and returns <code>-128</code> in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=32ab5f734d4c59f2bd6553d9a62ab0ec\" rel=\"nofollow noreferrer\">release</a> mode):</p>\n\n<pre><code>fn main() {\n    let a = -128_i8;\n    println!(\"{}\", a); // -128\n    let b = a.abs();\n    println!(\"{}\", b); // -128\n}\n</code></pre>\n\n<hr>\n\n<p>Since <code>abs(-2_147_483_648_i32)</code> is <code>2_147_483_648_u32</code>, you may return <code>u32</code> instead of <code>i32</code>: </p>\n\n<pre><code>fn abs(x: i32) -&gt; u32 {\n    if x &gt;= 0 {\n        x as u32\n    } else if x == std::i32::MIN {\n        2_147_483_648_u32\n    } else {\n        -x as u32\n    }\n}\nfn main() {\n    let value = abs(std::i32::MIN); // i32::min_value() // -2_147_483_648i32\n    println!(\"{}.\", value); // 2147483648\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=808c4fc5ca72d69863be36e55dd13e0f\" rel=\"nofollow noreferrer\">Output</a>:</p>\n\n<pre><code>2147483648\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1503842228, "creation_date": 1503842228, "answer_id": 45905738, "question_id": 45902734, "link": "https://stackoverflow.com/questions/45902734/absolute-value-function-in-rust/45905738#45905738", "title": "Absolute value function in Rust", "body": "<p>The absolute value method is <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.abs\" rel=\"nofollow noreferrer\">already defined</a>; you do not need to implement it yourself</p>\n\n<pre><code>fn main() {\n    let value = abs(-4);\n    println!(\"{}.\", value);\n}\n\nfn abs(x: i32) -&gt; i32 {\n    let val = x.abs();\n    println!(\"The abs value of {} is {}\", x, val);\n    val\n}\n</code></pre>\n"}], "owner": {"reputation": 399, "user_id": 5450034, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/2462e1581e38e42f3908a6357b844812?s=128&d=identicon&r=PG&f=1", "display_name": "A. N. Other", "link": "https://stackoverflow.com/users/5450034/a-n-other"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 829, "favorite_count": 0, "accepted_answer_id": 45902812, "answer_count": 2, "score": 2, "last_activity_date": 1584421435, "creation_date": 1503819645, "last_edit_date": 1503842090, "question_id": 45902734, "link": "https://stackoverflow.com/questions/45902734/absolute-value-function-in-rust", "title": "Absolute value function in Rust", "body": "<p>In this elementary Rust program a function calculates the absolute value of an integer, and main() helps in completing a statement with the result:</p>\n\n<pre><code>fn main() {\n    let value = abs(-4);\n    println!(\"{}.\", value);\n}\n\nfn abs(x: i32) -&gt; i32 {\n    print!(\"The abs value of {} is \", x);\n\n    if x &gt; 0 {\n        return x;\n    } else {\n        -x\n    }\n}\n</code></pre>\n\n<p>Is there a way to print correctly the whole statement \"The abs value of... is...\" into the abs() function? I tried unsuccessfully with </p>\n\n<pre><code>println!(\"The abs value of {} is {} \", x, x);\n</code></pre>\n\n<p>This always prints the value of the x parameter (e.g. -4, -4) so it's not correct. </p>\n\n<p>And with</p>\n\n<pre><code>println!(\"The abs value of {} is {} \", x, abs(x));\n</code></pre>\n\n<p>But here, for some reason, Rust is not happy with recursion, gives a warning at compilation and then doesn't run the program.</p>\n"}, {"tags": ["io", "macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1503907378, "last_edit_date": 1503907378, "creation_date": 1503853935, "answer_id": 45907394, "question_id": 45901393, "link": "https://stackoverflow.com/questions/45901393/is-it-possible-for-a-macro-to-generate-code-based-on-the-content-of-a-file/45907394#45907394", "title": "Is it possible for a macro to generate code based on the content of a file?", "body": "<p>While this is probably possible, you are certainly asking for trouble: For example, cargo will not be able to tell if the \"wrapping\" code needs recompilation after the \"wrapped\" code changed because it does not consider that file to be part of the source tree.</p>\n\n<p>You should consider either using a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build script</a> or good old Makefiles, which are designed exactly for that purpose.</p>\n"}], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 45907394, "answer_count": 1, "score": 2, "last_activity_date": 1503907378, "creation_date": 1503803997, "last_edit_date": 1503844935, "question_id": 45901393, "link": "https://stackoverflow.com/questions/45901393/is-it-possible-for-a-macro-to-generate-code-based-on-the-content-of-a-file", "title": "Is it possible for a macro to generate code based on the content of a file?", "body": "<p>I'd like to write a macro that is parametrized by a file path. At compile time it reads that file and emits Rust code based on its content. Is this possible?</p>\n\n<p>I've found <a href=\"https://doc.rust-lang.org/1.1.0/std/macro.include_bytes!.html\" rel=\"nofollow noreferrer\"><code>include_bytes!</code></a> but it's unclear how I could consume its result during compile-time instead of just splicing in the contents into the generated code as-is.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 2, "creation_date": 1503824636, "post_id": 45899965, "comment_id": 78765300, "body": "You can create a vector of indexes into the first vector, but I don&#39;t know how idiomatic that is - it seems a bit like cheating to get around the safety checks. And it will cause issues e.g. if the order of items in the source vector changes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503845227, "post_id": 45899965, "comment_id": 78770726, "body": "@interjay it&#39;s not <i>cheating</i>, it&#39;s just another level of indirection, but one that can checked for safety at runtime (via bounds checks). References are checked at compile time. If it were allowed, they could be invalidated for the reasons you mention."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503846092, "post_id": 45899965, "comment_id": 78770978, "body": "@Shepmaster It&#39;s safe in that it won&#39;t cause invalid memory access errors. But it can access the wrong element if you previously deleted an element in the vector, which I would consider unsafe (to a lesser degree) even if it isn&#39;t unsafe in Rust terminology."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503846308, "post_id": 45899965, "comment_id": 78771051, "body": "@interjay we like to be <i>very</i> precise about the &quot;unsafe&quot; word, so I&#39;d strongly advocate for just using the more conventional &quot;incorrect&quot;. Besides, if you tell someone their program does &quot;the wrong thing&quot;, it&#39;s probably much easier to understand than &quot;it does an unsafe thing&quot;."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1503848829, "post_id": 45899965, "comment_id": 78771778, "body": "@Shepmaster OK, I&#39;ll try not to use the term &quot;unsafe&quot; except for what the rust compiler considers unsafe. But &quot;incorrect&quot; or &quot;wrong&quot; are not really valid alternatives: There is a potential for shooting yourself in the foot but you&#39;ll be fine if you&#39;re careful. And my point above was that this potential is a spectrum and not a dichotomy, even in Rust: Unsafe raw pointers are more dangerous than &quot;safe&quot; vector indexes, and vector indexes are more dangerous than <code>Rc</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503854479, "post_id": 45899965, "comment_id": 78773501, "body": "@interjay also, FWIW, indices are how <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\">petgraph</a> works, so it&#39;s certainly a well-respected solution."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503854780, "post_id": 45899965, "comment_id": 78773592, "body": "@interjay indexing does not sound like a bad idea at all. I guess it comes at a higher runtime cost when iterating, but that&#39;s not necessarily  a show stopper."}], "answers": [{"comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1503855027, "post_id": 45906320, "comment_id": 78773681, "body": "Seems pretty obvious in retrospect. Amazing how learning rust makes me feel all inept again... anyway, thank&#39;s a lot!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1503857319, "last_edit_date": 1503857319, "creation_date": 1503846039, "answer_id": 45906320, "question_id": 45899965, "link": "https://stackoverflow.com/questions/45899965/how-to-repeatedly-loop-over-subsets-of-a-collection-determined-by-an-attribute-o/45906320#45906320", "title": "How to repeatedly loop over subsets of a collection determined by an attribute of the items?", "body": "<pre><code>struct Manager&lt;'a&gt; {\n    objects: Vec&lt;Object&gt;,     // objects owned by Manager\n    dynamic: Vec&lt;&amp;'a Object&gt;  // references to dynamic objects\n}\n</code></pre>\n\n<p>This does not work and has been thoroughly discussed in <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>.</p>\n\n<p>One solution is to have multiple owners of a single value, known as <em>shared ownership</em>. One implementation is <a href=\"https://doc.rust-lang.org/stable/std/rc/\" rel=\"nofollow noreferrer\"><code>Rc</code></a>. </p>\n\n<p>You also want to have mutability that is not tied to the scope of the program but instead to the runtime characteristics, which can be enabled with <em>interior mutability</em>. One implementation of is <a href=\"https://doc.rust-lang.org/stable/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\n#[derive(Debug)]\nstruct Object {\n    state: i32,\n    printable: Option&lt;i32&gt;,\n    dynamic: Option&lt;i32&gt;,\n}\n\n#[derive(Debug, Default)]\nstruct Manager {\n    objects: Vec&lt;Rc&lt;RefCell&lt;Object&gt;&gt;&gt;,\n    printable: Vec&lt;Rc&lt;RefCell&lt;Object&gt;&gt;&gt;,\n    dynamic: Vec&lt;Rc&lt;RefCell&lt;Object&gt;&gt;&gt;,\n}\n\nimpl Manager {\n    fn add(&amp;mut self, state: i32, printable: Option&lt;i32&gt;, dynamic: Option&lt;i32&gt;) {\n        let obj = Object { state, printable, dynamic };\n        let obj = Rc::new(RefCell::new(obj));\n\n        self.objects.push(obj.clone());\n\n        if printable.is_some() {\n            self.printable.push(obj.clone())\n        }\n\n        if dynamic.is_some() {\n            self.dynamic.push(obj.clone())\n        }\n    }\n\n    fn print_objects(&amp;self) {\n        for o in &amp;self.printable {\n            let o = o.borrow();\n            if let Some(i) = o.printable {\n                print!(\"{}: {}, \", i, o.state);\n            }\n        }\n        println!();\n    }\n\n    fn update_objects(&amp;mut self) {\n        for o in &amp;self.dynamic {\n            let mut o = o.borrow_mut();\n            if let Some(i) = o.dynamic {\n                o.state += i;\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut mgr = Manager::default();\n\n    mgr.add(0, Some(10), None);\n    mgr.add(0, None, Some(1));\n    mgr.add(0, Some(20), Some(2));\n\n    for _ in 0..3 {\n        mgr.update_objects();\n        mgr.print_objects();\n    }\n}\n</code></pre>\n\n<p>You still have all the inherent problems of transitioning an item from one group to another.</p>\n"}], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 45906320, "answer_count": 1, "score": 1, "last_activity_date": 1503857319, "creation_date": 1503784396, "last_edit_date": 1503845001, "question_id": 45899965, "link": "https://stackoverflow.com/questions/45899965/how-to-repeatedly-loop-over-subsets-of-a-collection-determined-by-an-attribute-o", "title": "How to repeatedly loop over subsets of a collection determined by an attribute of the items?", "body": "<p>I have a collection of objects owned by a struct <code>Manager</code>. These objects have optional attributes such as <code>printable</code> or <code>dynamic</code>. I want to repeatedly loop over all printable objects to print them and loop over all dynamic objects to update them. My rather naive implementation is this:</p>\n\n<pre><code>struct Object {\n    state: i32,\n    printable: Option&lt;i32&gt;,\n    dynamic: Option&lt;i32&gt;\n}\n\nstruct Manager {\n    objects: Vec&lt;Object&gt;,\n}\n\nimpl Manager {\n    fn print_objects(&amp;self) {\n        for o in &amp;self.objects {\n            if let Some(i) = o.printable {\n                print!(\"{}: {}, \", i, o.state);\n            }\n        }\n        println!();\n    }\n\n    fn update_objects(&amp;mut self) {\n        for o in &amp;mut self.objects {\n            if let Some(i) = o.dynamic {\n                o.state += i;\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut mgr = Manager{objects: Vec::new()};\n\n    mgr.objects.push(Object{state: 0, printable: Some(10), dynamic: None});\n    mgr.objects.push(Object{state: 0, printable: None, dynamic: Some(1)});\n    mgr.objects.push(Object{state: 0, printable: Some(20), dynamic: Some(2)});\n\n    for _ in 0..3 {\n        mgr.update_objects();\n        mgr.print_objects();\n    }\n}\n</code></pre>\n\n<p>This solution has the drawback that it needs to loop over all objects and check each for the appropriate flag. Assuming that only a small fraction of the objects are dynamic, I'd rather avoid looping over all of them. In C++ I would simply create a list of pointers to the dynamic objects and loop over that. Attempting this: </p>\n\n<pre><code>struct Manager&lt;'a&gt; {\n    objects: Vec&lt;Object&gt;,     // objects owned by Manager\n    dynamic: Vec&lt;&amp;'a Object&gt;  // references to dynamic objects\n}\n\nimpl&lt;'a&gt; Manager&lt;'a&gt; { /* ... */ }\n\nfn main() {\n    let mut mgr = Manager{objects: Vec::new(), dynamic: Vec::new()};\n\n    mgr.objects.push(Object{state: 0, printable: Some(10), dynamic: None});\n    mgr.objects.push(Object{state: 0, printable: None, dynamic: Some(1)});\n    mgr.objects.push(Object{state: 0, printable: Some(20), dynamic: Some(2)});\n\n    mgr.dynamic.push(&amp;mgr.objects[1]);\n    mgr.dynamic.push(&amp;mgr.objects[2]);\n\n    for _ in 0..3 {\n        mgr.update_objects();  // can't mutably borrow because of reference held by mgr.dynamic\n        mgr.print_objects();\n    }\n}\n</code></pre>\n\n<p>It seems to be a very basic problem that I can't keep a reference to elements in <code>Manager.objects</code> and at the same time borrow it mutably. Thus, I've started to doubt my whole approach. Is there an idiomatic way to implement such a pattern in Rust?</p>\n\n<p>I believe that keeping references to objects prevents me from mutating them, but I'd be happy to learn a way around that. A future goal would be to change <code>printable</code> or <code>dynamic</code> during update, but I'd like to figure out the basic stuff before tackling that step.</p>\n"}, {"tags": ["macos", "terminal", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503785192, "post_id": 45899815, "comment_id": 78759072, "body": "<b>Why</b> are you (attempting to) run it as root?"}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503788710, "post_id": 45899815, "comment_id": 78759685, "body": "Because when I tried it without it was giving this error so I thought using sudo would solve it"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503789685, "post_id": 45899815, "comment_id": 78759832, "body": "Does that mean that you also get the error when you don&#39;t use <code>sudo</code>? Please <a href=\"https://stackoverflow.com/posts/45899815/edit\">edit</a> your question to have the complete shell command you are running, starting with the <code>curl</code> command until the next shell prompt."}], "answers": [{"comments": [{"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1503835548, "post_id": 45904613, "comment_id": 78767976, "body": "Thanks this seems to work. Will I need to manually edit the path? what path would I need to change it to if yes?"}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 2, "creation_date": 1503841562, "post_id": 45904613, "comment_id": 78769578, "body": "Thanks figured it out. Had to add <code>source ~&#47;.cargo&#47;env</code> to my .bash_profile"}, {"owner": {"reputation": 1837, "user_id": 1006580, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/ccfe359078faedfd6256a0431433fa19?s=128&d=identicon&r=PG", "display_name": "Nestor Ledon", "link": "https://stackoverflow.com/users/1006580/nestor-ledon"}, "edited": false, "score": 0, "creation_date": 1563114843, "post_id": 45904613, "comment_id": 100585749, "body": "Gold! I&#39;ll update the answer to include the additional step to modify path."}], "tags": [], "owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "is_accepted": true, "score": 19, "last_activity_date": 1563116869, "last_edit_date": 1563116869, "creation_date": 1503834425, "answer_id": 45904613, "question_id": 45899815, "link": "https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra/45904613#45904613", "title": "Could not write to .bash_profile when installing Rust on macOS Sierra", "body": "<p>Give a try using this not using sudo:</p>\n\n<pre><code>curl https://sh.rustup.rs -sSf | sh -s -- --help\n</code></pre>\n\n<p>If that works then probably you could try:</p>\n\n<pre><code>curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path \n</code></pre>\n\n<p>If the command with the <em>--no-modify-path</em> option works, you'll have to manually update <strong>.bash_profile</strong> to include it in your path:</p>\n\n<pre><code>source ~/.cargo/env\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": false, "score": 4, "last_activity_date": 1544123040, "last_edit_date": 1544123040, "creation_date": 1541957022, "answer_id": 53251282, "question_id": 45899815, "link": "https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra/53251282#53251282", "title": "Could not write to .bash_profile when installing Rust on macOS Sierra", "body": "<p>The accepted answer worked for me in the working terminal session only, it did not work after restarting my MacBokk Air.</p>\n\n<p>The solution worked with me is:</p>\n\n<pre><code>// Opened .bash_profile file, I used VS code as editor, this the `code` below\nHasans-Air:~ h_ajsf$ sudo code $HOME/.bash_profile\n// Add the below to the .bash_profile file\nPATH=$PATH:/Users/$USER/.cargo/bin\n//Saved the file\n//Updated env by:\nHasans-Air:~ h_ajsf$ source $HOME/.bash_profile\n//Check for JAVA_HOME\nHasans-Air:~ h_ajsf$ rustup\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>As shown <a href=\"https://github.com/yarnpkg/yarn/issues/666#issuecomment-253310572\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<blockquote>\n  <p>It sounds like the user running the install script didn't have\n  permission/wasn't owner of ~/.bash_profile, which is unusual. Maybe\n  yarn should check and be more helpful, but in any case it's probably a\n  good idea to run <code>sudo chown</code> whoami <code>~/.bash_profile</code></p>\n</blockquote>\n\n<p>So, I tried the below command:</p>\n\n<pre><code>Hasans-Air:~ h_ajsf$ sudo chown h_ajsf ~/.bash_profile\n</code></pre>\n\n<p>And everything completed smoothly.</p>\n\n<p><a href=\"https://i.stack.imgur.com/WvHfG.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/WvHfG.png\" alt=\"enter image description here\"></a></p>\n"}], "owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3382, "favorite_count": 1, "accepted_answer_id": 45904613, "answer_count": 2, "score": 10, "last_activity_date": 1563116869, "creation_date": 1503782914, "last_edit_date": 1503785173, "question_id": 45899815, "link": "https://stackoverflow.com/questions/45899815/could-not-write-to-bash-profile-when-installing-rust-on-macos-sierra", "title": "Could not write to .bash_profile when installing Rust on macOS Sierra", "body": "<p>I am trying to install Rust by running the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>I keep getting this following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>could not write rcfile file: '/Users/pro/.bash_profile'\ninfo: caused by: Permission denied (os error 13\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "ownership-semantics"], "comments": [{"owner": {"reputation": 306, "user_id": 569173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f748f66f4419fb34553f17c8b08a7131?s=128&d=identicon&r=PG", "display_name": "hutch", "link": "https://stackoverflow.com/users/569173/hutch"}, "edited": false, "score": 0, "creation_date": 1503780740, "post_id": 45899182, "comment_id": 78758178, "body": "The problem appears to be the temporary. Why not define a var in the scope ending at line 60? Something like <code>let wstate = 5.;</code> Your real state is more complex so might already be there."}, {"owner": {"reputation": 453, "user_id": 1864755, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/12befeb72cef2adfb9082ccbe6e9346e?s=128&d=identicon&r=PG", "display_name": "kave", "link": "https://stackoverflow.com/users/1864755/kave"}, "reply_to_user": {"reputation": 306, "user_id": 569173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f748f66f4419fb34553f17c8b08a7131?s=128&d=identicon&r=PG", "display_name": "hutch", "link": "https://stackoverflow.com/users/569173/hutch"}, "edited": false, "score": 0, "creation_date": 1503784765, "post_id": 45899182, "comment_id": 78758980, "body": "The problem is, that the inner scope actually is the game loop. I could maybe Magd the state a variable of my game object, so that it survives a whole game and I just change it. But the Learning Algorithm even survives through multiple games and there is no way I can make the game states global variables through all games, since the only objects that live this long are the learningalgorithms, the Game objects are created newly for every game"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503801417, "post_id": 45899182, "comment_id": 78761234, "body": "Your example works in nightly Rust. I&#39;m not sure yet which changes make it compile."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503802286, "post_id": 45899182, "comment_id": 78761355, "body": "Ah, that&#39;s <a href=\"https://github.com/rust-lang/rust/pull/43838\" rel=\"nofollow noreferrer\">PR 43838</a>. It will not help in general case."}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 0, "last_activity_date": 1503806046, "last_edit_date": 1503806046, "creation_date": 1503805494, "answer_id": 45901502, "question_id": 45899182, "link": "https://stackoverflow.com/questions/45899182/using-a-generic-trait-over-st-enforces-me-to-have-t-outlive-s/45901502#45901502", "title": "Using a Generic Trait over S&lt;T&gt; enforces me to have T outlive S", "body": "<p>Your problem can be boiled down to</p>\n\n<pre><code>struct WorldState&lt;'a&gt; {\n    state: &amp;'a f64,\n}\n\ntrait LearningAlgorithm&lt;T&gt; {\n    fn print_learning_information(&amp;self, &amp;T);\n}\n\nstruct EvolutionaryAlgorithm();\n\nimpl&lt;T&gt; LearningAlgorithm&lt;T&gt; for EvolutionaryAlgorithm\n{\n    fn print_learning_information(&amp;self, input: &amp;T) {\n    }\n}\n\nfn main() {\n    // scope a\n    let mut a: Box&lt;LearningAlgorithm&lt;WorldState&gt;&gt; =\n        Box::new(EvolutionaryAlgorithm());\n    { // scope b\n        let val = 5.;\n        let state = WorldState { state: &amp;val };\n        a.print_learning_information(&amp;state);\n    }\n}\n</code></pre>\n\n<p>Note that <code>WorldState</code> is a type constructor, not a concrete type. Lifetime elision allows you to write <code>Box&lt;LearningAlgorithm&lt;WorldState&gt;&gt;</code> with no lifetime parameter explicitly specified for <code>WorldState</code>, but it just means that the compiler selects some appropriate lifetime parameter. </p>\n\n<p>In this case lifetime selected for <code>WorldState</code> is <code>scope a</code>, thus the type of <code>a</code> is <code>Box&lt;LearningAlgorithm&lt;WorldState&lt;'scope_a&gt;&gt;&gt;</code>. Consequently, <code>state</code> should have type <code>WorldState&lt;'scope_a&gt;</code>, and the reference it contains should be valid for <code>scope a</code>, but a value the reference points to exists only in <code>scope b</code>.</p>\n\n<p>You need support for higher-kinded types to make your example work as it is, but Rust doesn't provide it.</p>\n\n<p>The easiest solution is to get rid of <code>WorldState</code>'s lifetime parameter by replacing reference with <code>Rc</code>. Maybe someone will come up with better solution.</p>\n"}], "owner": {"reputation": 453, "user_id": 1864755, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/12befeb72cef2adfb9082ccbe6e9346e?s=128&d=identicon&r=PG", "display_name": "kave", "link": "https://stackoverflow.com/users/1864755/kave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1503806046, "creation_date": 1503777439, "last_edit_date": 1503779767, "question_id": 45899182, "link": "https://stackoverflow.com/questions/45899182/using-a-generic-trait-over-st-enforces-me-to-have-t-outlive-s", "title": "Using a Generic Trait over S&lt;T&gt; enforces me to have T outlive S", "body": "<p>The boiled-down problem looks as follows:</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct WorldState&lt;'a&gt; {\n    state: &amp;'a f64,\n}\n\ntrait CalculateWorldState&lt;T&gt; {\n    fn state_value(&amp;mut self, input: &amp;T) -&gt; f64;\n}\n\n\ntrait LearningAlgorithm&lt;T&gt; {\n    fn print_learning_information(&amp;self, &amp;T);\n}\n\nstruct EvolutionaryAlgorithm&lt;F, T&gt;\nwhere\n    F: CalculateWorldState&lt;T&gt;,\n{\n    //I need this since I only use T as a method parameter, I do not save it anywhere\n    //T are different ways to represent the current worldstate and are\n    //short-lived (new ones generated every frame)\n    _p_: PhantomData&lt;T&gt;,\n    //I don't actually need this one in the real example since I have\n    //an instatiated version of type CalculateWorldState saved in the\n    //struct but I use phantomdata for simplicity of the example\n    _p: PhantomData&lt;F&gt;,\n}\n\nimpl&lt;F, T&gt; LearningAlgorithm&lt;T&gt; for EvolutionaryAlgorithm&lt;F, T&gt;\nwhere\n    F: CalculateWorldState&lt;T&gt;,\n{\n    fn print_learning_information(&amp;self, input: &amp;T) {\n        println!(\"My learning goes splendid!\");\n        //do something with &amp;T by calling the object of type\n        //CalculateWorldState which we have saved somewhere, but do\n        //not save the &amp;T reference anywhere, just look at it\n    }\n}\n\nstruct WorldIsInGoodState {}\n\nimpl&lt;'a&gt; CalculateWorldState&lt;WorldState&lt;'a&gt;&gt; for WorldIsInGoodState {\n    fn state_value(&amp;mut self, input: &amp;WorldState) -&gt; f64 {\n        100.\n    }\n}\n\nfn main() {\n    let mut a: Box&lt;LearningAlgorithm&lt;WorldState&gt;&gt; =\n        Box::new(EvolutionaryAlgorithm::&lt;WorldIsInGoodState, WorldState&gt; {\n            _p: PhantomData,\n            _p_: PhantomData,\n        });\n    {\n        let state = WorldState { state: &amp;5. };\n        a.print_learning_information(&amp;state);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=353ad2d11bb4cce042362fb6b4279d55&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>The above code fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:59:5\n   |\n57 |         let state = WorldState { state: &amp;5. };\n   |                                          -- temporary value created here\n58 |         a.print_learning_information(&amp;state);\n59 |     }\n   |     ^ temporary value dropped here while still borrowed\n60 | }\n   | - temporary value needs to live until here\n</code></pre>\n\n<p><code>WorldState&lt;'a&gt;</code> is a very short-lived data type (one per frame), whereas <code>LearningAlgorithm</code> is a very long-lived data type (multiple games). But the way I implemented the thing, Rust is eager to believe, that every <code>WorldState</code> I pass to <code>print_learning_information</code> has to outlive the <code>LearningAlgorithm</code>.</p>\n\n<p>What did I do wrong? How could this else be handled?</p>\n\n<p>A few things I would not like to do:</p>\n\n<ul>\n<li>Have <code>WorldState</code> contain a normal state (since in reality it contains a few vectors and not a <code>f64</code> and I don't want to copy them around into <code>WorldState</code> structs when passing each player its own view of the world)</li>\n<li>Just quit this project and start a new one (you all know it, after you invested some time, you don't want to just throw all the work away)</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1503776633, "post_id": 45898588, "comment_id": 78757320, "body": "You constrain lifetime in the method <code>IReadOnlyStore::get()</code> too much. <a href=\"https://play.rust-lang.org/?gist=7d1e143ed9c0683eff2a8bdedc4df4dc&amp;version=stable\" rel=\"nofollow noreferrer\">This works</a>. Take a look at <a href=\"https://stackoverflow.com/a/45834055/2731452\">variance of structs</a> too."}, {"owner": {"reputation": 429, "user_id": 3512469, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22b2613bfcf31af645a741ce99b943cd?s=128&d=identicon&r=PG&f=1", "display_name": "andrekupka", "link": "https://stackoverflow.com/users/3512469/andrekupka"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503777096, "post_id": 45898588, "comment_id": 78757420, "body": "Thank you very much, now its working and with the linked post I understood the problem."}], "owner": {"reputation": 429, "user_id": 3512469, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22b2613bfcf31af645a741ce99b943cd?s=128&d=identicon&r=PG&f=1", "display_name": "andrekupka", "link": "https://stackoverflow.com/users/3512469/andrekupka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "closed_date": 1503800796, "answer_count": 0, "score": 0, "last_activity_date": 1503774237, "creation_date": 1503772989, "last_edit_date": 1503774237, "question_id": 45898588, "link": "https://stackoverflow.com/questions/45898588/value-is-still-borrowed-although-it-is-no-longer-used", "closed_reason": "Duplicate", "title": "Value is still borrowed although it is no longer used", "body": "<p>I am trying to implement an abstraction for key-value stores in Rust. Therefore I have two traits: The <code>IStorageSystem</code> which is partitioned into multiple <code>IStore</code>s that provide the actual key-value pairs. If a store is opened, the internal tree-map should be locked until the opened store goes out of scope. Further the whole access should be thread-safe: </p>\n\n<pre><code>use std::collections::BTreeMap;\nuse std::sync::{Arc, RwLock, RwLockReadGuard};\n\npub type Bytes = Vec&lt;u8&gt;;\n\npub trait IStorageSystem {\n    fn open_read&lt;'sys&gt;(&amp;'sys mut self, name: &amp;str) -&gt; Box&lt;IReadOnlyStore&lt;'sys&gt; + 'sys&gt;;\n}\n\npub trait IReadOnlyStore&lt;'sys&gt; {\n    fn get(&amp;'sys self, key: &amp;Bytes) -&gt; Option&lt;&amp;'sys Bytes&gt;;\n}\n\ntype StoreData = BTreeMap&lt;Bytes, Bytes&gt;;\n\nstruct InMemoryStorageSystem {\n    stores: BTreeMap&lt;String, Arc&lt;RwLock&lt;StoreData&gt;&gt;&gt;,\n}\n\nimpl InMemoryStorageSystem {\n    pub fn new() -&gt; InMemoryStorageSystem {\n        InMemoryStorageSystem {\n            stores: BTreeMap::new(),\n        }\n    }\n}\n\nimpl IStorageSystem for InMemoryStorageSystem {\n    fn open_read&lt;'sys&gt;(&amp;'sys mut self, name: &amp;str) -&gt; Box&lt;IReadOnlyStore&lt;'sys&gt; + 'sys&gt; {\n        let store_data = self.stores.entry(name.into())\n            .or_insert(Arc::new(RwLock::new(StoreData::new())));\n        Box::new(ReadOnlyInMemoryStore::new(store_data))\n    }\n}\n\n\nstruct ReadOnlyInMemoryStore&lt;'sys&gt; {\n    data: RwLockReadGuard&lt;'sys, StoreData&gt;,\n}\n\n\nimpl&lt;'sys&gt; ReadOnlyInMemoryStore&lt;'sys&gt; {\n    fn new(data: &amp;'sys Arc&lt;RwLock&lt;StoreData&gt;&gt;) -&gt; ReadOnlyInMemoryStore&lt;'sys&gt; {\n        let locked_data = data.read().unwrap();\n\n        ReadOnlyInMemoryStore {\n            data: locked_data,\n        }\n    }\n}\n\n\nimpl&lt;'sys&gt; IReadOnlyStore&lt;'sys&gt; for ReadOnlyInMemoryStore&lt;'sys&gt; {\n    fn get(&amp;'sys self, key: &amp;Bytes) -&gt; Option&lt;&amp;'sys Bytes&gt; {\n        self.data.get(key)\n    }\n}\n\nfn main() {\n    let mut storage = InMemoryStorageSystem::new();\n    let store = storage.open_read(\"values\");\n\n    let key = String::from(\"dummy\").into_bytes();\n    let value = store.get(&amp;key);\n    match value {\n        Some(ref val) =&gt; println!(\"Got {:?}\", value),\n        None =&gt; println!(\"Nothing found\"),\n    }\n}\n</code></pre>\n\n<p>When I try to compile this code I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `*store` does not live long enough\n  --&gt; src/main.rs:69:1\n   |\n64 |    let value = store.get(&amp;key);\n   |                ----- borrow occurs here\n...\n69 | }\n   | ^ `*store` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>How do I fix this? As far as I see, this should be working because all lifetimes are bound to the storage system which is created first and thus should be dropped last.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1503769791, "post_id": 45898130, "comment_id": 78755357, "body": "It might have to do with this: <a href=\"https://users.rust-lang.org/t/how-to-use-specialization-features/6023\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/how-to-use-specialization-features/602&zwnj;&#8203;3</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503769908, "post_id": 45898130, "comment_id": 78755396, "body": "<i>so there&#39;s no conflict</i> \u2014 there&#39;s no conflict <b>now</b>, but that&#39;s not how these rules work. Your code should not stop compiling if the standard library or protobuf decide to implement the trait for the type. See <a href=\"https://stackoverflow.com/q/39159226/155423\">stackoverflow.com/q/39159226/155423</a>; <a href=\"https://stackoverflow.com/q/37347311/155423\">stackoverflow.com/q/37347311/155423</a>; <a href=\"https://stackoverflow.com/q/30845737/155423\">stackoverflow.com/q/30845737/155423</a>, etc."}, {"owner": {"reputation": 21, "user_id": 6063272, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NOO4OD2teDU/AAAAAAAAAAI/AAAAAAAABlo/nNDUrWCw7LY/photo.jpg?sz=128", "display_name": "Colin Merkel", "link": "https://stackoverflow.com/users/6063272/colin-merkel"}, "edited": false, "score": 0, "creation_date": 1503769918, "post_id": 45898130, "comment_id": 78755399, "body": "In that thread, somebody says &quot;Specialization is currently only used in the standard library...&quot;. Does that mean you can only specialize over traits from the standard library?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503769956, "post_id": 45898130, "comment_id": 78755415, "body": "Highly relevant recent question: <a href=\"https://stackoverflow.com/q/45873736/155423\">Why do I get a conflicting implementations error when specializing a trait?</a>."}, {"owner": {"reputation": 21, "user_id": 6063272, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NOO4OD2teDU/AAAAAAAAAAI/AAAAAAAABlo/nNDUrWCw7LY/photo.jpg?sz=128", "display_name": "Colin Merkel", "link": "https://stackoverflow.com/users/6063272/colin-merkel"}, "edited": false, "score": 0, "creation_date": 1503770016, "post_id": 45898130, "comment_id": 78755435, "body": "Right, but whether or not there will eventually be a conflict is irrelevant, since <code>std::default::Default</code> is implemented for <code>u64</code>, so there&#39;s a direct conflict there. Yet the specialization works for that case."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503770357, "post_id": 45898130, "comment_id": 78755525, "body": "<i>since <code>std::default::Default</code> is implemented for <code>u64</code></i> \u2014 that&#39;s why it works. Your second case is not a <b>specialization</b> of an existing implementation, it&#39;s a completely orthogonal implementation, one that crosses the crate boundary and thus the orphan and/or coherence rules come into play. The specialization feature doesn&#39;t address those cases at all."}, {"owner": {"reputation": 21, "user_id": 6063272, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NOO4OD2teDU/AAAAAAAAAAI/AAAAAAAABlo/nNDUrWCw7LY/photo.jpg?sz=128", "display_name": "Colin Merkel", "link": "https://stackoverflow.com/users/6063272/colin-merkel"}, "edited": false, "score": 1, "creation_date": 1503770818, "post_id": 45898130, "comment_id": 78755637, "body": "I see: so the compiler is getting confused by the fact that the trait <i>isn&#39;t</i> implemented in <code>protobuf::Message</code>, and fails because it might conflict in the future - not realizing that it if it were, it would be fine, since specialization would take over.  That sounds like a reasonable answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503771247, "post_id": 45898130, "comment_id": 78755757, "body": "It&#39;s nothing to do with a &quot;primitive type&quot; or with &quot;external crates&quot;. For example, your second code works with <code>protobuf::CachedSize</code> instead of <code>u64</code> because it&#39;s a type that protobuf implements <code>Message</code> for. <i>the compiler is getting confused</i> \u2014 no, the orphan / coherence rules are <b>deliberate</b> design decisions, there&#39;s no confusion or accident or bug. You are correct that the point is that if you could write the code you attempted to, a future update of the <code>std</code> crate or <code>protobuf</code> crate would cause your code to choose a different path, and that&#39;s why it&#39;s disallowed."}], "owner": {"reputation": 21, "user_id": 6063272, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NOO4OD2teDU/AAAAAAAAAAI/AAAAAAAABlo/nNDUrWCw7LY/photo.jpg?sz=128", "display_name": "Colin Merkel", "link": "https://stackoverflow.com/users/6063272/colin-merkel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1705, "favorite_count": 1, "closed_date": 1503770263, "answer_count": 0, "score": 2, "last_activity_date": 1503770674, "creation_date": 1503769533, "last_edit_date": 1503770673, "question_id": 45898130, "link": "https://stackoverflow.com/questions/45898130/trait-specialization", "closed_reason": "Duplicate", "title": "Trait specialization", "body": "<p>I want to define a trait <code>A</code>. I can fulfill <code>A</code> on anything which is a <code>std::default::Default</code> but I want a special implementation for <code>u64</code>. The specialization feature is designed to do this, and the following code compiles fine:</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait A {}\nimpl&lt;T: std::default::Default&gt; A for T {}\nimpl A for u64 {}\n\nfn main() {}\n</code></pre>\n\n<p>Now I want to use a trait from another crate (<code>protobuf::Message</code>) instead of <code>std::default::Default</code>. The following code doesn't work:</p>\n\n<pre><code>#![feature(specialization)]\nextern crate protobuf;\n\ntrait A {}\nimpl&lt;T: protobuf::Message&gt; A for T {}\nimpl A for u64 {}\n\nfn main() {}\n</code></pre>\n\n<p>The compiler complains of conflicting implementations:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `A` for type `u64`:\n --&gt; src/main.rs:6:1\n  |\n5 | impl&lt;T: protobuf::Message&gt; A for T {}\n  | ------------------------------------- first implementation here\n6 | impl A for u64 {}\n  | ^^^^^^^^^^^^^^^^^ conflicting implementation for `u64`\n</code></pre>\n\n<p><code>protobuf::Message</code> is not implemented for <code>u64</code>, so there's no conflict, but that doesn't really seem relevant, because <code>std::default::Default</code> <em>is</em> defined for <code>u64</code>, and the specialization works fine for that case. </p>\n\n<p>Since I specified the implementation for a concrete type, I would expect that to override implementations via traits.</p>\n\n<p><strong>Follow-up</strong>: I believe this is not a duplicate of <a href=\"https://stackoverflow.com/questions/45873736\">Why do I get a conflicting implementations error when specializing a trait?</a>, because this code works for traits defined in the standard library and fails for traits defined in external crates. In the other question, the mistake was in insufficiently strict trait bound specification. Here, the specializing trait is a primitive type, so that solution cannot apply.</p>\n"}, {"tags": ["caching", "hash", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1503756756, "post_id": 45895552, "comment_id": 78751437, "body": "<code>let c = &amp;self.calculation; *self.values.entry(arg).or_insert_with(|| (c)(arg))</code>"}, {"owner": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "edited": false, "score": 0, "creation_date": 1505634767, "post_id": 45895552, "comment_id": 79486955, "body": "A more verbose way without introducng variable <code>c</code>: <code>use std::collections::hash_map::Entry;let v = match self.values.entry(arg) {              Entry::Occupied(o) =&gt; o.into_mut(),              Entry::Vacant(v) =&gt; v.insert( (self.computation)(arg) ),         };          *v</code>"}], "owner": {"reputation": 617, "user_id": 3473012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/goi2u.png?s=128&g=1", "display_name": "PEAR", "link": "https://stackoverflow.com/users/3473012/pear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 769, "favorite_count": 1, "closed_date": 1503754062, "answer_count": 0, "score": 6, "last_activity_date": 1503758865, "creation_date": 1503751763, "last_edit_date": 1503758865, "question_id": 45895552, "link": "https://stackoverflow.com/questions/45895552/more-elegant-way-to-match-after-hashmap-value-than-cloning-it", "closed_reason": "Duplicate", "title": "More elegant way to match after HashMap-value than cloning it", "body": "<p>I'm learning Rust using <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-00-introduction.html\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>. I'm working on the following task in the <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"noreferrer\">chapter dealing with closures</a>:</p>\n\n<blockquote>\n  <p>Try modifying <code>Cacher</code> to hold a hash map rather than a single value. The keys of the hash map will be the <code>arg</code> values that are passed in, and the values of the hash map will be the result of calling the closure on that key. Instead of looking at whether <code>self.value</code> directly has a <code>Some</code> or a <code>None</code> value, the value function will look up the <code>arg</code> in the hash map and return the value if it's present. If it's not present, the <code>Cacher</code> will call the closure and save the resulting value in the hash map associated with its <code>arg</code> value.</p>\n</blockquote>\n\n<p>This is my solution:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Cacher&lt;T&gt;\nwhere\n    T: Fn(i32) -&gt; i32,\n{\n    calculation: T,\n    values: HashMap&lt;i32, i32&gt;,\n}\n\nimpl&lt;T&gt; Cacher&lt;T&gt;\nwhere\n    T: Fn(i32) -&gt; i32,\n{\n    fn new(calculation: T) -&gt; Cacher&lt;T&gt; {\n        Cacher {\n            calculation,\n            values: HashMap::new(),\n        }\n    }\n    fn value(&amp;mut self, arg: i32) -&gt; i32 {\n        match self.values.get(&amp;arg) {\n            Some(v) =&gt; *v,\n            None =&gt; {\n                let v = (self.calculation)(arg);\n                self.values.insert(arg, v);\n                v\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self.values` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:26:17\n   |\n22 |         match self.values.get(&amp;arg) {\n   |               ----------- immutable borrow occurs here\n...\n26 |                 self.values.insert(arg, v);\n   |                 ^^^^^^^^^^^ mutable borrow occurs here\n...\n29 |         }\n   |         - immutable borrow ends here\n</code></pre>\n\n<p>I can solve this by using:</p>\n\n<pre><code>match self.values.clone().get(&amp;arg) { ...\n</code></pre>\n\n<p>Do I really need to clone the whole <code>HashMap</code> to use it in the match-statement and inserting a value afterwards?</p>\n"}, {"tags": ["hashmap", "rust"], "answers": [{"comments": [{"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 5, "creation_date": 1503749981, "post_id": 45894491, "comment_id": 78749401, "body": "for example... ?"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 0, "last_activity_date": 1503755171, "last_edit_date": 1503755171, "creation_date": 1503744089, "answer_id": 45894491, "question_id": 45894401, "link": "https://stackoverflow.com/questions/45894401/are-there-any-hashmap-implementations-with-consistent-ordering-between-program-r/45894491#45894491", "title": "Are there any HashMap implementations with consistent ordering between program runs?", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.with_hasher\" rel=\"nofollow noreferrer\"><code>HashMap::with_hasher()</code></a> with something other than the default <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\" rel=\"nofollow noreferrer\"><code>RandomState</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "is_accepted": true, "score": 2, "last_activity_date": 1503750188, "creation_date": 1503750188, "answer_id": 45895319, "question_id": 45894401, "link": "https://stackoverflow.com/questions/45894401/are-there-any-hashmap-implementations-with-consistent-ordering-between-program-r/45895319#45895319", "title": "Are there any HashMap implementations with consistent ordering between program runs?", "body": "<p>I believe <a href=\"https://github.com/contain-rs/linked-hash-map\" rel=\"nofollow noreferrer\">linked-hash-map</a> is the de facto crate for this.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1548431078, "post_id": 45896032, "comment_id": 95551065, "body": "Actually, the order of iteration in <code>indexmap</code> is not <i>strictly</i> the order of insertion. Why? Because when removing an element, the last inserted element is swapped with the element to be removed. It&#39;s still fully deterministic for a given sequence of insertions/removals."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1525202845, "last_edit_date": 1525202845, "creation_date": 1503754932, "answer_id": 45896032, "question_id": 45894401, "link": "https://stackoverflow.com/questions/45894401/are-there-any-hashmap-implementations-with-consistent-ordering-between-program-r/45896032#45896032", "title": "Are there any HashMap implementations with consistent ordering between program runs?", "body": "<blockquote>\n  <p>I've observed that <code>HashMap</code> has a different order of elements even with the same data on the next program start. </p>\n</blockquote>\n\n<p>You don't have to <em>observe</em> anything, this is <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><em>documented by <code>HashMap</code></em></a>:</p>\n\n<blockquote>\n  <p>By default, <code>HashMap</code> uses a hashing algorithm selected to provide resistance against HashDoS attacks. The algorithm is randomly seeded, and a reasonable best-effort is made to generate this seed from a high quality, secure source of randomness provided by the host without blocking the program.</p>\n</blockquote>\n\n<p>It's worth noting that this means that two <code>HashMap</code>s with the same set of inserted values in the <em>same program run</em> will likely have different ordering: </p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let a = (0..100).zip(100..200);\n\n    let hash_one: HashMap&lt;_, _&gt; = a.clone().collect();\n    let hash_two: HashMap&lt;_, _&gt; = a.clone().collect();\n\n    // prints \"false\", most of the time\n    println!(\"{}\", hash_one.into_iter().eq(hash_two));\n}\n</code></pre>\n\n<p>The documentation also tells you how to address the problem:</p>\n\n<blockquote>\n  <p>The hashing algorithm can be replaced on a per-<code>HashMap</code> basis using the <code>default</code>, <code>with_hasher</code>, and <code>with_capacity_and_hasher</code> methods. Many alternative algorithms are available on crates.io, such as the fnv crate.</p>\n</blockquote>\n\n<p>Since I worked on <a href=\"https://crates.io/crates/twox-hash\" rel=\"nofollow noreferrer\">twox-hash</a>, I'll show that as an example:</p>\n\n<pre><code>use std::hash::BuildHasherDefault;\nuse std::collections::HashMap;\nuse twox_hash::XxHash;\n\nlet mut hash: HashMap&lt;_, _, BuildHasherDefault&lt;XxHash&gt;&gt; = Default::default();\nhash.insert(42, \"the answer\");\nassert_eq!(hash.get(&amp;42), Some(&amp;\"the answer\"));\n</code></pre>\n\n<hr>\n\n<p>That being said, <em>relying on the order of a <code>HashMap</code></em> sounds like a bad idea. Perhaps you should use a different data structure, such as a <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\"><code>BTreeMap</code></a>.</p>\n\n<p>In other cases, you actually care about the order of <strong>insertion</strong>. For that, the <a href=\"https://crates.io/crates/indexmap\" rel=\"nofollow noreferrer\">indexmap crate</a> is appropriate.</p>\n"}, {"tags": [], "owner": {"reputation": 1550, "user_id": 947305, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/628c5700f0fbb20618f45ad5c512ba74?s=128&d=identicon&r=PG", "display_name": "Matt Woelk", "link": "https://stackoverflow.com/users/947305/matt-woelk"}, "is_accepted": false, "score": 0, "last_activity_date": 1618189342, "creation_date": 1618189342, "answer_id": 67051529, "question_id": 45894401, "link": "https://stackoverflow.com/questions/45894401/are-there-any-hashmap-implementations-with-consistent-ordering-between-program-r/67051529#67051529", "title": "Are there any HashMap implementations with consistent ordering between program runs?", "body": "<p>The built-in <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\">BTreeMap</a> is a great option for this.</p>\n<p>I was having a similar problem where the assert_eq! diff was in a random order each time, making debugging difficult for HashMap, but BTreeMap has sorted keys, so it doesn't have this problem.</p>\n<p>(source: <a href=\"https://users.rust-lang.org/t/sort-hashmap-data-by-keys/37095/2\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/sort-hashmap-data-by-keys/37095/2</a>)</p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1054, "favorite_count": 0, "accepted_answer_id": 45895319, "answer_count": 4, "score": 6, "last_activity_date": 1618189342, "creation_date": 1503743380, "last_edit_date": 1503754999, "question_id": 45894401, "link": "https://stackoverflow.com/questions/45894401/are-there-any-hashmap-implementations-with-consistent-ordering-between-program-r", "title": "Are there any HashMap implementations with consistent ordering between program runs?", "body": "<p>I've observed that <code>HashMap</code> has a different order of elements even with the same data on the next program start. It looks like <code>HashMap</code> uses some absolute addresses to sort elements. Is there any other <code>HashMap</code> implementation, which has the same behaviour if the same data was inserted?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 6086742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e67bcebf0147d4d5eb64d92d5f54b9aa?s=128&d=identicon&r=PG&f=1", "display_name": "hfukuda", "link": "https://stackoverflow.com/users/6086742/hfukuda"}, "edited": false, "score": 0, "creation_date": 1503741298, "post_id": 45893270, "comment_id": 78747183, "body": "Although this may not be a good question, do you know why rust does not support static variable with a generic parameter?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 135, "user_id": 6086742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e67bcebf0147d4d5eb64d92d5f54b9aa?s=128&d=identicon&r=PG&f=1", "display_name": "hfukuda", "link": "https://stackoverflow.com/users/6086742/hfukuda"}, "edited": false, "score": 1, "creation_date": 1503741508, "post_id": 45893270, "comment_id": 78747233, "body": "@hfukuda: Not really.  Probably because no one ever needed it badly enough."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 7, "last_activity_date": 1503734317, "creation_date": 1503734317, "answer_id": 45893270, "question_id": 45892973, "link": "https://stackoverflow.com/questions/45892973/is-it-possible-for-different-instances-of-a-generic-function-to-have-different-s/45893270#45893270", "title": "Is it possible for different instances of a generic function to have different static variables?", "body": "<p>No.  Rust doesn't support having static data tied to a generic parameter.</p>\n\n<p>The closest workaround I can think of would be to use something like the <a href=\"https://crates.io/crates/typemap\" rel=\"noreferrer\"><code>typemap</code></a> crate to store one entry per type.</p>\n\n<pre><code>/*!\nAdd to `Cargo.toml`:\n\n```cargo\n[dependencies]\nlazy_static = \"0.2.8\"\ntypemap = \"0.3.3\"\n```\n*/\n#[macro_use] extern crate lazy_static;\nextern crate typemap;\n\nfn main() {\n    foo::&lt;i64&gt;();\n    foo::&lt;i64&gt;();\n    foo::&lt;isize&gt;();\n}\n\nfn foo&lt;T: 'static&gt;() {\n    use std::marker::PhantomData;\n    use std::sync::Mutex;\n    use typemap::{ShareMap, TypeMap};\n\n    // Use `fn(T)` as it avoids having to require that `T` implement\n    // `Send + Sync`.\n    struct Key&lt;T&gt;(PhantomData&lt;fn(T)&gt;);\n\n    impl&lt;T: 'static&gt; typemap::Key for Key&lt;T&gt; {\n        type Value = ();\n    }\n\n    lazy_static! {\n        static ref INIT: Mutex&lt;ShareMap&gt; = Mutex::new(TypeMap::custom());\n    }\n\n    INIT.lock().unwrap().entry::&lt;Key&lt;T&gt;&gt;().or_insert_with(|| {\n        println!(\"Called\");\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 135, "user_id": 6086742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e67bcebf0147d4d5eb64d92d5f54b9aa?s=128&d=identicon&r=PG&f=1", "display_name": "hfukuda", "link": "https://stackoverflow.com/users/6086742/hfukuda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 572, "favorite_count": 0, "accepted_answer_id": 45893270, "answer_count": 1, "score": 10, "last_activity_date": 1503755289, "creation_date": 1503732214, "last_edit_date": 1503755289, "question_id": 45892973, "link": "https://stackoverflow.com/questions/45892973/is-it-possible-for-different-instances-of-a-generic-function-to-have-different-s", "title": "Is it possible for different instances of a generic function to have different static variables?", "body": "<p>When I use a static variable in generic functions, the entities of the variable in each instance of the generic function are all the same.</p>\n\n<p>For instance, in this code</p>\n\n<pre><code>fn foo&lt;T&gt;() {\n    use std::sync::{Once, ONCE_INIT};\n\n    static INIT: Once = ONCE_INIT;\n\n    INIT.call_once(|| {\n        // run initialization here\n        println!(\"Called\");\n    });\n}\n\nfn main() {\n    foo::&lt;i64&gt;();\n    foo::&lt;i64&gt;();\n    foo::&lt;isize&gt;();\n}\n</code></pre>\n\n<p><code>println!</code> is called just once.</p>\n\n<p>I had checked the assembly code using the Rust playground and saw that the <code>INIT</code> variable is independent of which type <code>T</code> actually is although <code>foo&lt;T&gt;</code> themselves are instantiated with different name.</p>\n\n<p>Is it possible for different instance of the generic function to have different static variables so that <code>println!</code> is called twice in the above example?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1503731119, "post_id": 45892717, "comment_id": 78744755, "body": "The values on the call stack have been popped off because the function returned. If it continued to reference the old addresses, it&#39;d be accessing uninitialized memory."}], "answers": [{"tags": [], "owner": {"reputation": 429, "user_id": 7330717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68889267ed07fb0862d54dee957e3865?s=128&d=identicon&r=PG&f=1", "display_name": "MSathieu", "link": "https://stackoverflow.com/users/7330717/msathieu"}, "is_accepted": false, "score": 1, "last_activity_date": 1503730373, "creation_date": 1503730373, "answer_id": 45892740, "question_id": 45892717, "link": "https://stackoverflow.com/questions/45892717/are-variables-in-a-scope-copied-to-a-different-memory-location-when-they-go-beyo/45892740#45892740", "title": "Are variables in a scope copied to a different memory location when they go beyond the scope?", "body": "<p>Yes, Rust passes variables by value. So if you return a variable it gets a different memory address.</p>\n"}, {"tags": [], "owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "is_accepted": false, "score": 0, "last_activity_date": 1503755446, "last_edit_date": 1503755446, "creation_date": 1503732268, "answer_id": 45892980, "question_id": 45892717, "link": "https://stackoverflow.com/questions/45892717/are-variables-in-a-scope-copied-to-a-different-memory-location-when-they-go-beyo/45892980#45892980", "title": "Are variables in a scope copied to a different memory location when they go beyond the scope?", "body": "<p>To add to <a href=\"https://stackoverflow.com/a/45892740/155423\">@MSathieu's answer</a>, the Rust values returned by value are <strong>moved</strong> to another location. If you have memory allocated in the heap and you print the value of the reference, they will remain the same:</p>\n\n<pre><code>fn main() {\n    let a = get_int();\n    address_of(&amp;(*a));\n}\nfn get_int() -&gt; Box&lt;i32&gt; {\n    let a = Box::new(10);\n    println!(\"{:p}\", a);\n    a\n}\nfn address_of&lt;A&gt;(a: &amp;A){\n    println!(\"{:p}\", a);\n}\n</code></pre>\n\n<p>prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x7fc9a6c1f008 \n0x7fc9a6c1f008\n</code></pre>\n\n<p>The <code>Box</code> itself was moved by value here, but the reference inside it remained the same :-)</p>\n"}], "owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1503755446, "creation_date": 1503730070, "last_edit_date": 1503755369, "question_id": 45892717, "link": "https://stackoverflow.com/questions/45892717/are-variables-in-a-scope-copied-to-a-different-memory-location-when-they-go-beyo", "title": "Are variables in a scope copied to a different memory location when they go beyond the scope?", "body": "<p>In the following code</p>\n\n<pre><code>fn main() {\n    let a = get_int();\n    address_of(&amp;a);\n}\nfn get_int() -&gt; i32 {\n    let a = 1;\n    println!(\"{:p}\", &amp;a);\n    a\n}\nfn address_of&lt;A&gt;(a: &amp;A){\n    println!(\"{:p}\", a);\n}\n</code></pre>\n\n<p>The output is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x7fff51d1ba94\n0x7fff51d1bb1c\n</code></pre>\n\n<p>Why is the memory address different when the same value is printed? Does this mean that a variable in a scope will be copied to a different memory location when it goes beyond the scope?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1503729147, "post_id": 45892541, "comment_id": 78744331, "body": "@AravindhS: It&#39;s right there.  **points at code example in answer**"}, {"owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "edited": false, "score": 0, "creation_date": 1503729272, "post_id": 45892541, "comment_id": 78744352, "body": "Oops. I missed it. Thank you."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1503755469, "last_edit_date": 1503755469, "creation_date": 1503728484, "answer_id": 45892541, "question_id": 45892476, "link": "https://stackoverflow.com/questions/45892476/why-are-the-address-two-different-values-the-same-when-printed-as-function-param/45892541#45892541", "title": "Why are the address two different values the same when printed as function parameters?", "body": "<p>Because you're printing the address of the parameter <code>a</code>, not the address of the thing it points to.</p>\n\n<pre><code>fn address_of&lt;A&gt;(a: &amp;A){\n    println!(\"{:p}\", a);\n}\n</code></pre>\n"}], "owner": {"reputation": 1055, "user_id": 4071245, "user_type": "registered", "accept_rate": 29, "profile_image": "https://i.stack.imgur.com/XCJqT.jpg?s=128&g=1", "display_name": "Aravindh S", "link": "https://stackoverflow.com/users/4071245/aravindh-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 32, "favorite_count": 0, "accepted_answer_id": 45892541, "answer_count": 1, "score": 2, "last_activity_date": 1503755492, "creation_date": 1503727887, "last_edit_date": 1503755492, "question_id": 45892476, "link": "https://stackoverflow.com/questions/45892476/why-are-the-address-two-different-values-the-same-when-printed-as-function-param", "title": "Why are the address two different values the same when printed as function parameters?", "body": "<pre><code>fn main() {\n    println!(\"{:p}\", &amp;\"aravindh\");\n    println!(\"{:p}\", &amp;\"test\");\n    address_of(&amp;\"aravindh\");\n    address_of(&amp;\"test\");\n}\n\nfn address_of&lt;A&gt;(a:&amp;A){\n    println!(\"{:p}\", &amp;a);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x10da08260\n0x10da08278\n0x7fff52231990\n0x7fff52231990\n</code></pre>\n\n<p>While the address of first two strings are different, why are they same when printed via the <code>address_of</code> function?</p>\n"}, {"tags": ["rust", "hyper", "nickel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503850284, "post_id": 45891879, "comment_id": 78772199, "body": "<i>since they work before processing the request</i> \u2014 what makes you think this? Looking at <a href=\"https://docs.rs/nickel/0.10.0/nickel/trait.Middleware.html\" rel=\"nofollow noreferrer\"><code>Middleware</code></a>, it seems like you are able to change the <code>Response</code> however you&#39;d like. Additionally, there appears to be <a href=\"https://docs.rs/nickel/0.10.0/nickel/trait.Responder.html\" rel=\"nofollow noreferrer\">built-in support for responding with JSON</a> and <a href=\"https://github.com/nickel-org/nickel.rs/blob/master/examples/json.rs\" rel=\"nofollow noreferrer\">examples</a>; does that not set the content length for you?"}, {"owner": {"reputation": 31, "user_id": 2108394, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/728a94a27a28e5a1e37f461d0610331d?s=128&d=identicon&r=PG", "display_name": "Ilya", "link": "https://stackoverflow.com/users/2108394/ilya"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503855558, "post_id": 45891879, "comment_id": 78773859, "body": "I think so because of this - <a href=\"https://github.com/nickel-org/nickel.rs/blob/d5b9271b18d22e858c9dc858ef52deef95d7f11a/src/nickel.rs#L109\" rel=\"nofollow noreferrer\">nickel.rs#L109</a>. Responder looks like what I need, but I do not understand how to use it. This was my first day learning this language. C:"}, {"owner": {"reputation": 31, "user_id": 2108394, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/728a94a27a28e5a1e37f461d0610331d?s=128&d=identicon&r=PG", "display_name": "Ilya", "link": "https://stackoverflow.com/users/2108394/ilya"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503856133, "post_id": 45891879, "comment_id": 78774047, "body": "I know about json support, but I don&#39;t know how use this knowledge for write content length. )"}], "owner": {"reputation": 31, "user_id": 2108394, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/728a94a27a28e5a1e37f461d0610331d?s=128&d=identicon&r=PG", "display_name": "Ilya", "link": "https://stackoverflow.com/users/2108394/ilya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1503849803, "creation_date": 1503720950, "last_edit_date": 1503849803, "question_id": 45891879, "link": "https://stackoverflow.com/questions/45891879/how-to-set-the-content-length-header-in-multiple-routes-using-nickel-middleware", "title": "How to set the Content-Length header in multiple routes using Nickel middleware?", "body": "<p>As I understand it, middleware handlers are not suitable for this since they work before processing the request. My current solution is:</p>\n\n<pre><code>router.get(\"/items/:id\", middleware! { |request, mut response|\n    // ...\n    let data = json::encode(&amp;data).unwrap();\n    response.set(ContentLength(data.len() as u64));\n    data\n});\n</code></pre>\n\n<p>I do not like this because I have many routes and I will have to insert this code in each of them. I would like a middleware which would be called after processing my routes. Is there another way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1503698078, "post_id": 45889784, "comment_id": 78739267, "body": "Your issue is quite similar to <a href=\"https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">Return local String as a slice (&amp;str)</a>, potentially a duplicate."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1503698248, "post_id": 45889784, "comment_id": 78739325, "body": "Your code contains many other issues and smells: you should iterate over the actual elements of a collection, not by index (e.g. <code>for s in cp_vec_tmp</code> instead of <code>for i in 0..cp_vec_tmp.len()</code>); You don&#39;t have to write <code>return</code> at the end of the function&#39;s body, <code>cp_vec</code> is sufficient; And see <a href=\"https://stackoverflow.com/q/40006219/1233251\">why you should avoid taking <code>Vec&lt;&amp;str&gt;</code> as a function argument</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503698475, "post_id": 45889784, "comment_id": 78739394, "body": "<i>my string is being created temporarily and will be destroyed when leaving the function</i> \u2014 absolutely correct, nicely reasoned! In Rust, a <code>String</code> <i>is</i> the &quot;some place&quot; you want to use to hold onto it. You may also be interested in <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1503702617, "post_id": 45889784, "comment_id": 78740482, "body": "Perhaps <a href=\"https://play.integer32.com/?gist=7983b10625ce507500b73f4773719f36&amp;version=stable\" rel=\"nofollow noreferrer\">something like this</a>."}, {"owner": {"reputation": 31, "user_id": 6780928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5939832726901f8f20e2c42d8c038bcf?s=128&d=identicon&r=PG&f=1", "display_name": "LHY_iS_Learning", "link": "https://stackoverflow.com/users/6780928/lhy-is-learning"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503703896, "post_id": 45889784, "comment_id": 78740723, "body": "@Shepmaster Thank you !  I&#39;m new to rust so the example you provided is super useful!!"}], "owner": {"reputation": 31, "user_id": 6780928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5939832726901f8f20e2c42d8c038bcf?s=128&d=identicon&r=PG&f=1", "display_name": "LHY_iS_Learning", "link": "https://stackoverflow.com/users/6780928/lhy-is-learning"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1503698392, "answer_count": 0, "score": 0, "last_activity_date": 1503698380, "creation_date": 1503697526, "last_edit_date": 1503698380, "question_id": 45889784, "link": "https://stackoverflow.com/questions/45889784/cannot-push-string-to-vecstr", "closed_reason": "Duplicate", "title": "Cannot push string to vec&lt;&amp;str&gt;", "body": "<p>My goal is to combine several items in a vector.</p>\n\n<p>For example, the origin vector has three items: <code>[echo, \"echo, aaa\"]</code>, I hope to get a new vector that combine the last two items and get: <code>[echo, \"echo aaa\"]</code>.</p>\n\n<p>My approach is to push every normal item on to new vector and whenever I found an item start with quote, I push it into a string to concatenate.</p>\n\n<p>The problem is I cannot push the string to the new vector since the compiler complains that the string does not live long enough.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>fn test(cp_vec_tmp: Vec&lt;&amp;str&gt;) -&gt; Vec&lt;&amp;str&gt; {\n    let mut multi_string = String::new();\n    let mut whether_has_quote = false;\n    let mut cp_vec: Vec&lt;&amp;str&gt; = Vec::new();\n    for index in 0..cp_vec_tmp.len() {\n        if cp_vec_tmp[index].starts_with(\"\\\"\") {\n            whether_has_quote = true;\n            multi_string = String::new();\n        }\n\n        if whether_has_quote {\n            multi_string.push_str(cp_vec_tmp[index]);\n        } else {\n            cp_vec.push(cp_vec_tmp[index]);\n        }\n\n        if cp_vec_tmp[index].ends_with(\"\\\"\") {\n            whether_has_quote = false;\n            cp_vec.push(&amp;multi_string);\n        }\n    }\n    return cp_vec;\n}\n</code></pre>\n\n<p>I'm thinking that it is because my string is being created temporarily and will be destroyed when leaving the function, so I have to store the string into some permanent place, but I don't know how...</p>\n"}, {"tags": ["logging", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1503670127, "last_edit_date": 1503670127, "creation_date": 1503669584, "answer_id": 45883096, "question_id": 45883045, "link": "https://stackoverflow.com/questions/45883045/is-it-possible-to-override-a-types-existing-debug-implementation/45883096#45883096", "title": "Is it possible to override a type&#39;s existing Debug implementation?", "body": "<blockquote>\n  <p>Is it possible to override it without making a wrapper?</p>\n</blockquote>\n\n<p>No, you need to make the wrapper. Remember that type aliases <strong>do not create new types</strong> \u2014 that's why they are called <em>aliases</em>. If you were able to redefine <code>Debug</code> here, you'd be affecting <em>every</em> <code>HashMap</code> (not a good idea).</p>\n\n<p>You only need the wrapper when printing, so you could have <code>println!(\"{:?}\", DebugWrapper(&amp;a_linear_value))</code>.</p>\n\n<hr>\n\n<p>You could be exceedingly fancy and make an extension trait to do the same thing:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fmt;\n\npub type Linear = HashMap&lt;i16, f64&gt;;\n\ntrait MyDebug&lt;'a&gt; {\n    type Debug: 'a;\n\n    fn my_debug(self) -&gt; Self::Debug;\n}\n\nimpl&lt;'a&gt; MyDebug&lt;'a&gt; for &amp;'a Linear {\n    type Debug = LinearDebug&lt;'a&gt;;\n\n    fn my_debug(self) -&gt; Self::Debug { LinearDebug(self) }\n}\n\nstruct LinearDebug&lt;'a&gt;(&amp;'a Linear);\n\nimpl&lt;'a&gt; fmt::Debug for LinearDebug&lt;'a&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"custom\")\n    }\n}\n\nfn main() {\n    let l = Linear::new();\n    println!(\"{:?}\", l);\n    println!(\"{:?}\", l.my_debug());\n}\n</code></pre>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 45883096, "answer_count": 1, "score": 3, "last_activity_date": 1503670127, "creation_date": 1503669431, "last_edit_date": 1503669600, "question_id": 45883045, "link": "https://stackoverflow.com/questions/45883045/is-it-possible-to-override-a-types-existing-debug-implementation", "title": "Is it possible to override a type&#39;s existing Debug implementation?", "body": "<p>I have typedef for a <code>HashMap</code>:</p>\n\n<pre><code>pub type Linear = HashMap&lt;i16, f64&gt;;\n\nimpl fmt::Debug for Linear {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n      // write!...\n    }\n}\n</code></pre>\n\n<p>I want custom printing for it, but it doesn't want to compile. Is it possible to override it without making a wrapper?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1064, "user_id": 291033, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/5921675bd44896010211f5a11695764b?s=128&d=identicon&r=PG", "display_name": "Huw Walters", "link": "https://stackoverflow.com/users/291033/huw-walters"}, "reply_to_user": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 14, "creation_date": 1546886838, "post_id": 45882329, "comment_id": 94993531, "body": "@Kroltan - Not so much; this page is now the top ranking entry according to a Google search on &quot;efficiently read lines from file in rust&quot;. (-:"}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "reply_to_user": {"reputation": 1064, "user_id": 291033, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/5921675bd44896010211f5a11695764b?s=128&d=identicon&r=PG", "display_name": "Huw Walters", "link": "https://stackoverflow.com/users/291033/huw-walters"}, "edited": false, "score": 0, "creation_date": 1546905175, "post_id": 45882329, "comment_id": 95000247, "body": "@HuwWalters It was not at the time of posting! Current readers will be directed to any of those duplicates. And I&#39;d dare say that SO posts still qualify as &quot;examples&quot; so the comment is still up-to-date (-:"}, {"owner": {"reputation": 1064, "user_id": 291033, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/5921675bd44896010211f5a11695764b?s=128&d=identicon&r=PG", "display_name": "Huw Walters", "link": "https://stackoverflow.com/users/291033/huw-walters"}, "edited": false, "score": 0, "creation_date": 1547009076, "post_id": 45882329, "comment_id": 95039268, "body": "That was my point; it&#39;s a useful page! (irony may have fallen a bit flat though)"}, {"owner": {"reputation": 1716, "user_id": 1267728, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/10a2031a6caf8671064b5b9e3be8c681?s=128&d=identicon&r=PG", "display_name": "Awalias", "link": "https://stackoverflow.com/users/1267728/awalias"}, "edited": false, "score": 7, "creation_date": 1566323781, "post_id": 45882329, "comment_id": 101618186, "body": "I don&#39;t agree that this question has already been answered on SO and certainly not by the links present. OP specifically requested a method for <i>very large</i> files where the file is too large to be read at once or read line-by-line, a more efficient method must exist, which makes this a valid question"}], "answers": [{"comments": [{"owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 2, "creation_date": 1503667749, "post_id": 45882510, "comment_id": 78723487, "body": "Note that a new-line is considered to be a LF or a CR followed by a LF."}, {"owner": {"reputation": 1716, "user_id": 1267728, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/10a2031a6caf8671064b5b9e3be8c681?s=128&d=identicon&r=PG", "display_name": "Awalias", "link": "https://stackoverflow.com/users/1267728/awalias"}, "edited": false, "score": 0, "creation_date": 1566323634, "post_id": 45882510, "comment_id": 101618131, "body": "this isn&#39;t necessarily the most efficient way if the file size is greater than the available memory"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1716, "user_id": 1267728, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/10a2031a6caf8671064b5b9e3be8c681?s=128&d=identicon&r=PG", "display_name": "Awalias", "link": "https://stackoverflow.com/users/1267728/awalias"}, "edited": false, "score": 1, "creation_date": 1566465684, "post_id": 45882510, "comment_id": 101667789, "body": "@Awalias I updated my answer to be clearer. If you don&#39;t understand something specific, please say me what."}, {"owner": {"reputation": 19495, "user_id": 775516, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/w0QpE.png?s=128&g=1", "display_name": "King Friday", "link": "https://stackoverflow.com/users/775516/king-friday"}, "edited": false, "score": 2, "creation_date": 1576865733, "post_id": 45882510, "comment_id": 105045273, "body": "starting to learn Rust and this was super helpful and informative"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 84, "last_activity_date": 1599202571, "last_edit_date": 1599202571, "creation_date": 1503667532, "answer_id": 45882510, "question_id": 45882329, "link": "https://stackoverflow.com/questions/45882329/read-large-files-line-by-line-in-rust/45882510#45882510", "title": "Read large files line by line in Rust", "body": "<p>You want to use the <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html\" rel=\"noreferrer\">buffered reader, <code>BufRead</code></a>, and specifically the function <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"noreferrer\"><code>BufReader.lines()</code></a>:</p>\n<pre><code>use std::fs::File;\nuse std::io::{self, prelude::*, BufReader};\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let file = File::open(&quot;foo.txt&quot;)?;\n    let reader = BufReader::new(file);\n\n    for line in reader.lines() {\n        println!(&quot;{}&quot;, line?);\n    }\n\n    Ok(())\n}\n</code></pre>\n<p>Note that you are <strong>not</strong> returned the linefeed, as said in the documentation.</p>\n<hr />\n<p>If you do not want to allocate a string for each line, here is an example to reuse the same buffer:</p>\n<pre><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut reader = my_reader::BufReader::open(&quot;Cargo.toml&quot;)?;\n    let mut buffer = String::new();\n\n    while let Some(line) = reader.read_line(&amp;mut buffer) {\n        println!(&quot;{}&quot;, line?.trim());\n    }\n\n    Ok(())\n}\n\nmod my_reader {\n    use std::{\n        fs::File,\n        io::{self, prelude::*},\n    };\n\n    pub struct BufReader {\n        reader: io::BufReader&lt;File&gt;,\n    }\n\n    impl BufReader {\n        pub fn open(path: impl AsRef&lt;std::path::Path&gt;) -&gt; io::Result&lt;Self&gt; {\n            let file = File::open(path)?;\n            let reader = io::BufReader::new(file);\n\n            Ok(Self { reader })\n        }\n\n        pub fn read_line&lt;'buf&gt;(\n            &amp;mut self,\n            buffer: &amp;'buf mut String,\n        ) -&gt; Option&lt;io::Result&lt;&amp;'buf mut String&gt;&gt; {\n            buffer.clear();\n\n            self.reader\n                .read_line(buffer)\n                .map(|u| if u == 0 { None } else { Some(buffer) })\n                .transpose()\n        }\n    }\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bd8c177e683929be24e4cb672392f7c3\" rel=\"noreferrer\">Playground</a></p>\n<p>Or if you prefer a standard iterator, you can use this <code>Rc</code> trick I shamelessly took <a href=\"https://www.reddit.com/r/rust/comments/d4rl3d/a_remarkably_simple_solution_to_the_problem_of/\" rel=\"noreferrer\">from Reddit</a>:</p>\n<pre><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n    for line in my_reader::BufReader::open(&quot;Cargo.toml&quot;)? {\n        println!(&quot;{}&quot;, line?.trim());\n    }\n\n    Ok(())\n}\n\nmod my_reader {\n    use std::{\n        fs::File,\n        io::{self, prelude::*},\n        rc::Rc,\n    };\n\n    pub struct BufReader {\n        reader: io::BufReader&lt;File&gt;,\n        buf: Rc&lt;String&gt;,\n    }\n    \n    fn new_buf() -&gt; Rc&lt;String&gt; {\n        Rc::new(String::with_capacity(1024)) // Tweakable capacity\n    }\n\n    impl BufReader {\n        pub fn open(path: impl AsRef&lt;std::path::Path&gt;) -&gt; io::Result&lt;Self&gt; {\n            let file = File::open(path)?;\n            let reader = io::BufReader::new(file);\n            let buf = new_buf();\n\n            Ok(Self { reader, buf })\n        }\n    }\n\n    impl Iterator for BufReader {\n        type Item = io::Result&lt;Rc&lt;String&gt;&gt;;\n\n        fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n            let buf = match Rc::get_mut(&amp;mut self.buf) {\n                Some(buf) =&gt; {\n                    buf.clear();\n                    buf\n                }\n                None =&gt; {\n                    self.buf = new_buf();\n                    Rc::make_mut(&amp;mut self.buf)\n                }\n            };\n\n            self.reader\n                .read_line(buf)\n                .map(|u| if u == 0 { None } else { Some(Rc::clone(&amp;self.buf)) })\n                .transpose()\n        }\n    }\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=58d67f799b7057e4d56f1de198c7e774\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 929, "user_id": 7855177, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-avNsBxd4mKE/AAAAAAAAAAI/AAAAAAAAABQ/dSTXwqwzagQ/photo.jpg?sz=128", "display_name": "Piwo", "link": "https://stackoverflow.com/users/7855177/piwo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 34342, "favorite_count": 11, "closed_date": 1503667906, "accepted_answer_id": 45882510, "answer_count": 1, "score": 36, "last_activity_date": 1599202571, "creation_date": 1503666941, "last_edit_date": 1503668170, "question_id": 45882329, "link": "https://stackoverflow.com/questions/45882329/read-large-files-line-by-line-in-rust", "closed_reason": "Duplicate", "title": "Read large files line by line in Rust", "body": "<p>My Rust program is intented to read a very large (up to several GB), simple text file line by line. The problem is, that this file is too large to be read at once, or to transfer all lines into a <code>Vec&lt;String&gt;</code>.</p>\n\n<p>What would be an idiomatic way to handle this in Rust?</p>\n"}, {"tags": ["rust", "libsodium"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503673068, "post_id": 45880481, "comment_id": 78727184, "body": "It may be worth checking with the sodiumoxide developers to see if converting to a slice was deliberate or if they could instead serialize the array directly."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1503666009, "creation_date": 1503666009, "answer_id": 45882036, "question_id": 45880481, "link": "https://stackoverflow.com/questions/45880481/why-do-rust-sodiumoxide-publickeys-get-prefixed-with-a-length-when-serialised/45882036#45882036", "title": "Why do Rust/sodiumoxide PublicKeys get prefixed with a length when serialised?", "body": "<p>It's up to the <a href=\"https://github.com/dnaq/sodiumoxide/blob/684ac7b5cc979a9c780548d884d4a9961c06969a/src/newtype_macros.rs#L41-L48\" rel=\"nofollow noreferrer\">implementation of the serialization</a>. sodiumoxide has chosen to implement <em>all</em> serialization by converting the types to a slice and then serializing that:</p>\n\n<pre><code>#[cfg(feature = \"serde\")]\nimpl ::serde::Serialize for $newtype {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: ::serde::Serializer\n    {\n        serializer.serialize_bytes(&amp;self[..])\n    }\n}\n</code></pre>\n\n<p>Since slices do not have a size known at compile time, serialization <em>must</em> include the length so that deserialization can occur.</p>\n\n<p>You can probably implement your own <a href=\"https://serde.rs/remote-derive.html\" rel=\"nofollow noreferrer\">serialization for a remote type</a> or even just serialize the inner field directly:</p>\n\n<pre><code>serialize(&amp;pk.0, Infinite)\n</code></pre>\n"}], "owner": {"reputation": 37702, "user_id": 129805, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/F1gxS.png?s=128&g=1", "display_name": "fadedbee", "link": "https://stackoverflow.com/users/129805/fadedbee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 45882036, "answer_count": 1, "score": 2, "last_activity_date": 1599022335, "creation_date": 1503660883, "last_edit_date": 1599022335, "question_id": 45880481, "link": "https://stackoverflow.com/questions/45880481/why-do-rust-sodiumoxide-publickeys-get-prefixed-with-a-length-when-serialised", "title": "Why do Rust/sodiumoxide PublicKeys get prefixed with a length when serialised?", "body": "<p>sodiumoxide <a href=\"https://github.com/dnaq/sodiumoxide/blob/684ac7b5cc979a9c780548d884d4a9961c06969a/src/crypto/sign/ed25519.rs#L43\" rel=\"nofollow noreferrer\">defines <code>PublicKey</code></a> as:</p>\n\n<pre><code>new_type! {\n    /// `PublicKey` for signatures\n    public PublicKey(PUBLICKEYBYTES);\n}\n</code></pre>\n\n<p><a href=\"https://github.com/dnaq/sodiumoxide/blob/684ac7b5cc979a9c780548d884d4a9961c06969a/src/newtype_macros.rs#L265\" rel=\"nofollow noreferrer\">The <code>new_type</code> macro</a> expands to:</p>\n\n<pre><code>pub struct $name(pub [u8; $bytes]);\n</code></pre>\n\n<p>Thus, <code>PublicKey</code> is defined as a simple wrapper of 32 bytes.</p>\n\n<p>When I define my own wrapper of 32 bytes (<code>MyPubKey</code>) it bincode serialises to 32 bytes.</p>\n\n<p>When I bincode serialise <code>PublicKey</code>, it is 40 bytes - the 32 bytes prefixed with a little-endian <code>u64</code> containing the length.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate bincode;\nextern crate sodiumoxide;\nuse sodiumoxide::crypto::{sign, box_};\nuse bincode::{serialize, deserialize, Infinite};\n\n#[derive(Serialize, Deserialize, PartialEq, Debug)]\npub struct MyPubKey(pub [u8; 32]);\n\nfn main() {\n    let (pk, sk) = sign::gen_keypair();\n    let arr: [u8; 32] = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n    let mpk = MyPubKey(arr);\n    let encoded_pk: Vec&lt;u8&gt; = serialize(&amp;pk, Infinite).unwrap();\n    let encoded_arr: Vec&lt;u8&gt; = serialize(&amp;arr, Infinite).unwrap();\n    let encoded_mpk: Vec&lt;u8&gt; = serialize(&amp;mpk, Infinite).unwrap();\n    println!(\"encoded_pk len:{:?} {:?}\", encoded_pk.len(), encoded_pk);\n    println!(\"encoded_arr len:{:?} {:?}\", encoded_arr.len(), encoded_arr);\n    println!(\"encoded_mpk len:{:?} {:?}\", encoded_mpk.len(), encoded_mpk);\n}\n</code></pre>\n\n<p>Results:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>encoded_pk len:40 [32, 0, 0, 0, 0, 0, 0, 0, 7, 199, 134, 217, 109, 46, 34, 155, 89, 232, 171, 185, 199, 190, 253, 88, 15, 202, 58, 211, 198, 49, 46, 225, 213, 233, 114, 253, 61, 182, 123, 181]\nencoded_arr len:32 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\nencoded_mpk len:32 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n</code></pre>\n\n<p>What is the difference between the <code>PublicKey</code> type, created with sodiumoxide's <code>new_type!</code> macro and the <code>MyPublicKey</code> type?</p>\n\n<p>How can I get the 32 bytes out of a <code>PublicKey</code> so that I can serialise them efficiently?</p>\n"}, {"tags": ["generics", "rust", "dynamic-dispatch"], "comments": [{"owner": {"reputation": 237, "user_id": 1703605, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7473d60face6b3c9cce5cd894978b58f?s=128&d=identicon&r=PG", "display_name": "Matt Kemp", "link": "https://stackoverflow.com/users/1703605/matt-kemp"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503668989, "post_id": 45880318, "comment_id": 78724324, "body": "Unless I&#39;m missing a trick here I don&#39;t think Any is what I want. The best part of this trick is that it preserves the types throughout - as I understand it Any is more akin to Object from .NET."}], "owner": {"reputation": 237, "user_id": 1703605, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7473d60face6b3c9cce5cd894978b58f?s=128&d=identicon&r=PG", "display_name": "Matt Kemp", "link": "https://stackoverflow.com/users/1703605/matt-kemp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 382, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1503666237, "creation_date": 1503660345, "last_edit_date": 1503666237, "question_id": 45880318, "link": "https://stackoverflow.com/questions/45880318/how-can-i-simulate-generic-dynamic-dispatch-in-rust", "title": "How can I simulate generic dynamic dispatch in Rust?", "body": "<p>I'm using a trick I've learnt in F# to simulate existential types, and I want to see if this works in Rust:</p>\n\n<pre><code>/*\nTo replicate:\ntype SuperArrow&lt;'a, 'b&gt; = \n    | Fn of (('a -&gt; 'b) * string)\n    | Compose of SuperArrowCompose&lt;'a,'b&gt;\nand SuperArrowCompose&lt;'a,'b&gt; = \n    abstract member eval : SuperArrowComposeEvaluator&lt;'a, 'b, 'r&gt; -&gt; 'r\nand SuperArrowComposeEvaluator&lt;'a, 'b, 'r&gt; = \n    abstract member apply&lt;'c&gt; : SuperArrow&lt;'a, 'c&gt; -&gt; SuperArrow&lt;'c, 'b&gt; -&gt; 'r\n*/\n\n//#[derive(Debug)]\nstruct MyFnWrapper&lt;A, B&gt; {\n    f: Box&lt;Fn(A) -&gt; B&gt;,\n    n: String,\n}\n\nimpl&lt;A, B&gt; MyFnWrapper&lt;A, B&gt; {\n    pub fn new&lt;F: 'static + Fn(A) -&gt; B&gt;(f: F, s: String) -&gt; Self {\n        MyFnWrapper {\n            f: Box::new(f),\n            n: s,\n        }\n    }\n}\n\ntrait SuperArrowComposeEval&lt;A, B, R&gt; {\n    fn apply&lt;C&gt;(&amp;self, &amp;SuperArrow&lt;A, C&gt;, &amp;SuperArrow&lt;C, B&gt;) -&gt; R;\n}\n\ntrait SuperArrowCompose&lt;A, B&gt; {\n    fn eval&lt;R, E: SuperArrowComposeEval&lt;A, B, R&gt;&gt;(&amp;self, &amp;E) -&gt; R;\n}\n\nstruct SuperArrowComposeImpl&lt;A, B, C&gt; {\n    fnA: Box&lt;SuperArrow&lt;A, C&gt;&gt;,\n    fnB: Box&lt;SuperArrow&lt;C, B&gt;&gt;,\n}\n\nimpl&lt;A, B, C&gt; SuperArrowComposeImpl&lt;A, B, C&gt; {\n    fn new(fnA: SuperArrow&lt;A, C&gt;, fnB: SuperArrow&lt;B, C&gt;) {\n        SuperArrowComposeImpl {\n            fnA: Box::new(fnA),\n            fnB: Box::new(fnB),\n        }\n    }\n}\n\nimpl&lt;A, B, C&gt; SuperArrowCompose&lt;A, B&gt; for SuperArrowComposeImpl&lt;A, B, C&gt; {\n    fn eval&lt;R, E: SuperArrowComposeEval&lt;A, B, R&gt;&gt;(&amp;self, evaler: &amp;E) -&gt; R {\n        evaler.eval::&lt;C&gt;(self.fnA, self.fnB)\n    }\n}\n\n//#[derive(Debug)]\nenum SuperArrow&lt;A, B&gt; {\n    Function(MyFnWrapper&lt;A, B&gt;),\n    Compose(Box&lt;SuperArrowCompose&lt;A, B&gt;&gt;),\n}\n</code></pre>\n\n<p>(<a href=\"https://gist.github.com/emcake/f85df38f583ce7939d8f3c1a1fdafd70\" rel=\"nofollow noreferrer\">gist</a>)</p>\n\n<p>The double-interface layer hides the intermediate <code>'c</code> existential type in the composition behind the first interface (<code>SuperArrowCompose&lt;'a,'b&gt;</code> in the comment at the top).</p>\n\n<p>The reason this works in F# is that it can dynamically generate the code needed for the <code>'r</code>-specific implementation at runtime. This clearly isn't possible in Rust and it won't allow me to have a trait with generic type parameters:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `SuperArrowCompose` cannot be made into an object\n  --&gt; existential.rs:57:13\n   |\n57 |     Compose(Box&lt;SuperArrowCompose&lt;A,B&gt;&gt;),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SuperArrowCompose` cannot be made into an object\n   |\n   = note: method `eval` has generic type parameters\n</code></pre>\n\n<p>It needs to be generic to allow it to be generic on the return type, but at the same time it needs to be dynamic to hide the specific <code>C</code> type that joins the two functions.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1503650299, "post_id": 45877098, "comment_id": 78713325, "body": "<a href=\"https://github.com/rust-lang/rfcs/issues/935\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/935</a>"}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503653148, "post_id": 45877098, "comment_id": 78714907, "body": "@interjay ah thanks, so it is just not implemented. The github issue does mention multiple patterns but then the discussion focuses on guards. For some reason (ugly resulting syntax?) I was less surprised that guards don&#39;t work with if let. Ranges working vs multiple patterns not working seems a bit less intuitive for me..."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 9, "last_activity_date": 1503665264, "last_edit_date": 1503665264, "creation_date": 1503650224, "answer_id": 45877476, "question_id": 45877098, "link": "https://stackoverflow.com/questions/45877098/multiple-patterns-not-working-with-if-let/45877476#45877476", "title": "Multiple patterns not working with if let", "body": "<p><code>if let</code> just doesn't support multiple patterns (see <a href=\"https://github.com/rust-lang/rfcs/issues/935\" rel=\"nofollow noreferrer\">RFC issue 935</a>).  Use <code>match</code> instead.</p>\n"}], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 987, "favorite_count": 0, "accepted_answer_id": 45877476, "answer_count": 1, "score": 8, "last_activity_date": 1503665264, "creation_date": 1503648867, "question_id": 45877098, "link": "https://stackoverflow.com/questions/45877098/multiple-patterns-not-working-with-if-let", "title": "Multiple patterns not working with if let", "body": "<p>You can use <code>if let</code> to pattern match on a range:</p>\n\n<pre><code>let n=1\nif let 1...3 = n { println!(\"found in range\") }\n</code></pre>\n\n<p>but I can't make it work on multiple patterns:</p>\n\n<pre><code>// this does not compile\nif let 1 | 2 | 3 = n { println!(\"found in pattern\") }\n//      -^ unexpected token\n</code></pre>\n\n<p>I thought the second <code>if let</code> desugared to:</p>\n\n<pre><code>// this does compile and work\nmatch n {\n    1 | 2 | 3 =&gt; println!(\"found in pattern\"),\n    _ =&gt; {}\n}\n</code></pre>\n\n<p>so what gives? Am I using the wrong syntax? Is my expectation that multiple patterns should work just misguided? Is this just not implemented?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9fe3df3ff2357d0e5f4e32757dc28641&amp;version=stable\" rel=\"noreferrer\">playground</a> </p>\n"}, {"tags": ["rust", "floating-point", "pattern-matching", "match"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 16, "last_activity_date": 1583351498, "last_edit_date": 1583351498, "creation_date": 1503640615, "answer_id": 45875227, "question_id": 45875142, "link": "https://stackoverflow.com/questions/45875142/what-are-the-alternatives-to-pattern-matching-floating-point-numbers/45875227#45875227", "title": "What are the alternatives to pattern-matching floating point numbers?", "body": "<p>You can use a match guard:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match point {\n    Point { x, y } if x == 5.0 =&gt; println!(\"y is {} when x is 5\", y),\n    _ =&gt; println!(\"x is not 5\"),\n}\n</code></pre>\n\n<p>This puts the responsibility back on to you, so it doesn't produce any sort of warning.</p>\n\n<p><a href=\"http://floating-point-gui.de/errors/comparison/\" rel=\"nofollow noreferrer\">Floating point equality is an interesting subject though</a>... so I would advise that you look further into it since it may be a source of bugs (which I imagine is the reason the Rust core team don't want to match against floating point values).</p>\n"}], "owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1400, "favorite_count": 0, "accepted_answer_id": 45875227, "answer_count": 1, "score": 10, "last_activity_date": 1583351498, "creation_date": 1503640120, "last_edit_date": 1583351455, "question_id": 45875142, "link": "https://stackoverflow.com/questions/45875142/what-are-the-alternatives-to-pattern-matching-floating-point-numbers", "title": "What are the alternatives to pattern-matching floating point numbers?", "body": "<p>Rust has decided to disallow float literals in patterns: <a href=\"https://github.com/rust-lang/rust/issues/41255\" rel=\"nofollow noreferrer\">Matching on floating-point literal values is totally allowed and shouldn't be #41255</a>. It is currently a warning but will be a hard error in a future release. </p>\n\n<p>How do I achieve a warning-free equivalent of the following code?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Point {\n    x: f64,\n    y: f64,\n}\n\nlet point = Point { x: 5.0, y: 4.0 };\n\nmatch point {\n    Point { x: 5.0, y } =&gt; println!(\"y is {} when x is 5\", y),\n    _ =&gt; println!(\"x is not 5\"),\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: floating-point types cannot be used in patterns\n  --&gt; src/main.rs:10:20\n   |\n10 |         Point { x: 5.0, y } =&gt; println!(\"y is {} when x is 5\", y),\n   |                    ^^^\n   |\n   = note: `#[warn(illegal_floating_point_literal_pattern)]` on by default\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #41620 &lt;https://github.com/rust-lang/rust/issues/41620&gt;\n</code></pre>\n\n<p>Is it now impossible? Do I need to change how I think about patterns? Is there another way of matching it?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 2, "last_activity_date": 1503665059, "last_edit_date": 1503665059, "creation_date": 1503648512, "answer_id": 45877010, "question_id": 45873736, "link": "https://stackoverflow.com/questions/45873736/why-do-i-get-a-conflicting-implementations-error-when-specializing-a-trait/45877010#45877010", "title": "Why do I get a conflicting implementations error when specializing a trait?", "body": "<p>The <code>Vectorizable</code> implementation is <em>not</em> more specific, for instance it does not mention anything about <code>T * T</code> being a valid operation, required by the general one.</p>\n\n<p>You need to add more bounds to the <code>Vectorizable</code> impl to match the general one:</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; Mul&lt;&amp;'b Matrix&lt;T, ColumnMajor&gt;&gt; for &amp;'a Matrix&lt;T, RowMajor&gt; \nwhere\n    T: Vectorizable + Mul + Clone,\n    T::Output: Add&lt;Output = T::Output&gt; + Clone + Default,\n{\n</code></pre>\n\n<p>Alternatively, you could add those bounds as the supertrait of <code>Vectorizable</code>:</p>\n\n<pre><code>trait Vectorizable: Mul&lt;Output=Self&gt; + Add&lt;Output = Self&gt; + Clone + Default {\n    // ...\n}\n\nimpl&lt;'a, 'b, T: Vectorizable&gt; Mul&lt;&amp;'b Matrix&lt;T, ColumnMajor&gt;&gt; for &amp;'a Matrix&lt;T, RowMajor&gt; {\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 344, "user_id": 1262369, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e4d513de6e4a123e369bcebfa21700?s=128&d=identicon&r=PG", "display_name": "dpzmick", "link": "https://stackoverflow.com/users/1262369/dpzmick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 853, "favorite_count": 0, "accepted_answer_id": 45877010, "answer_count": 1, "score": 0, "last_activity_date": 1503665059, "creation_date": 1503629631, "last_edit_date": 1503665008, "question_id": 45873736, "link": "https://stackoverflow.com/questions/45873736/why-do-i-get-a-conflicting-implementations-error-when-specializing-a-trait", "title": "Why do I get a conflicting implementations error when specializing a trait?", "body": "<p>I'm not sure that I understand why this code won't compile. It seems like the new \"vector\" <code>Mul</code> specialization is more specific than the default one, and I don't <em>think</em> that I'm relying on the <code>Vectorizable</code> trait not having been defined for a type external to my crate.</p>\n\n<pre><code>#![feature(cfg_target_feature)]\n#![feature(specialization)]\n\nuse std::marker::PhantomData;\nuse std::ops::{Mul, Add};\n\ntype Dimension = (usize, usize);\ntype Coordinate = (usize, usize);\n\npub trait Ordering {\n    // omitted\n}\n\npub struct RowMajor {}\nimpl Ordering for RowMajor {}\n\npub struct ColumnMajor {}\nimpl Ordering for ColumnMajor {}\n\n// NxM matrix\npub struct Matrix&lt;T, O: Ordering&gt; {\n    dim: Dimension,\n    values: Vec&lt;T&gt;,\n\n    // needed so that we can add type bound to struct\n    ordering: PhantomData&lt;O&gt;,\n}\n\ntrait VectorSize {}\n\nstruct V4x {}\nimpl VectorSize for V4x {}\n// others defined for other sizes\n\ntrait Vectorizable {\n    type SimdType; /*: simd::Simd */\n    type VectorSize: VectorSize;\n}\n\n#[cfg(target_feature = \"sse\")]\nimpl Vectorizable for f32 {\n    type SimdType = f32; /* simd::f32x4 */\n    type VectorSize = V4x;\n}\n\nimpl&lt;'a, 'b, T1, T2, O1: Ordering, O2: Ordering&gt;\n    Mul&lt;&amp;'b Matrix&lt;T2, O2&gt;&gt; for &amp;'a Matrix&lt;T1, O1&gt;\nwhere\n    T1: Mul&lt;T2&gt; + Clone,\n    T2: Clone,\n    &lt;T1 as Mul&lt;T2&gt;&gt;::Output: Add&lt;Output = &lt;T1 as Mul&lt;T2&gt;&gt;::Output&gt; + Clone + Default,\n{\n// always output row major because we compute in row major order\n    type Output = Matrix&lt;\n        &lt;T1 as Mul&lt;T2&gt;&gt;::Output\n        , RowMajor&gt;;\n\n// self is a &amp;'a\n    default fn mul(self, rhs: &amp;'b Matrix&lt;T2, O2&gt;) -&gt; Self::Output\n    {\n        unimplemented!();\n    }\n}\n\nimpl&lt;'a, 'b, T: Vectorizable&gt; Mul&lt;&amp;'b Matrix&lt;T, ColumnMajor&gt;&gt; for &amp;'a Matrix&lt;T, RowMajor&gt; {\n    fn mul(self, rhs: &amp;'b Matrix&lt;T, ColumnMajor&gt;) -&gt; Self::Output {\n        unimplemented!();\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=f373ba95e1e4e6af0ef4bbf954d224d0&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::ops::Mul&lt;&amp;Matrix&lt;_, ColumnMajor&gt;&gt;` for type `&amp;Matrix&lt;_, RowMajor&gt;`:\n  --&gt; src/main.rs:65:1\n   |\n46 | / impl&lt;'a, 'b, T1, T2, O1: Ordering, O2: Ordering&gt;\n47 | |     Mul&lt;&amp;'b Matrix&lt;T2, O2&gt;&gt; for &amp;'a Matrix&lt;T1, O1&gt;\n48 | | where\n49 | |     T1: Mul&lt;T2&gt; + Clone,\n...  |\n62 | |     }\n63 | | }\n   | |_- first implementation here\n64 | \n65 | / impl&lt;'a, 'b, T: Vectorizable&gt; Mul&lt;&amp;'b Matrix&lt;T, ColumnMajor&gt;&gt; for &amp;'a Matrix&lt;T, RowMajor&gt; {\n66 | |     fn mul(self, rhs: &amp;'b Matrix&lt;T, ColumnMajor&gt;) -&gt; Self::Output {\n67 | |         unimplemented!();\n68 | |     }\n69 | | }\n   | |_^ conflicting implementation for `&amp;Matrix&lt;_, RowMajor&gt;`\n</code></pre>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1503626599, "post_id": 45873160, "comment_id": 78705515, "body": "This question strongly feels like an <a href=\"https://meta.stackexchange.com/q/66377/281829\">XY problem</a>. You may wish to consider asking a new question concerning what you are actually trying to do."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1503626541, "creation_date": 1503626541, "answer_id": 45873346, "question_id": 45873160, "link": "https://stackoverflow.com/questions/45873160/how-can-i-get-the-public-elements-from-a-rust-module/45873346#45873346", "title": "How can I get the public elements from a Rust module?", "body": "<p>No, there is no way to do this. This level of introspection of compile-time information simply doesn't exist at runtime. The concept of a <em>module</em> doesn't even exist.</p>\n\n<p>If you are interested in compile-time information, you can do such things as build and view the docs (<code>cargo doc --open</code>) to see all the public items of the entire crate. You can probably also view the crate's documentation online before you use it. </p>\n\n<p>There are also tools like the <a href=\"https://github.com/rust-lang-nursery/rls\" rel=\"noreferrer\">Rust Language Server</a> which provide this type of information (and more) to editors and IDEs.</p>\n"}], "owner": {"reputation": 1876, "user_id": 6568784, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/Kk1s7.png?s=128&g=1", "display_name": "baranskistad", "link": "https://stackoverflow.com/users/6568784/baranskistad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 45873346, "answer_count": 1, "score": 4, "last_activity_date": 1503626541, "creation_date": 1503624978, "last_edit_date": 1503626467, "question_id": 45873160, "link": "https://stackoverflow.com/questions/45873160/how-can-i-get-the-public-elements-from-a-rust-module", "title": "How can I get the public elements from a Rust module?", "body": "<p>In Node.js, I could get an array of the objects in <code>foo</code> with</p>\n\n<pre><code>Object.keys(require(\"foo\"));\n</code></pre>\n\n<p>Is there any way I could do the same thing in Rust?</p>\n\n<pre><code>mod foo;\ngetobjs(foo);\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503595998, "post_id": 45867681, "comment_id": 78694180, "body": "You cannot implement <code>Hash</code> for <b><code>Dish</code></b> because <code>Dish</code> has a <code>HashSet</code>, which itself never implements <code>Hash</code> regardless of what type it contains."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503596203, "post_id": 45867681, "comment_id": 78694314, "body": "Shit, you are right, I first tried it with a Vec without a problem so I completely forgot that the collection should be hashable as well. Thanks!"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1190, "favorite_count": 0, "closed_date": 1503595956, "answer_count": 0, "score": 2, "last_activity_date": 1503596177, "creation_date": 1503595712, "last_edit_date": 1503596177, "question_id": 45867681, "link": "https://stackoverflow.com/questions/45867681/deriving-stdhashhash-for-enums", "closed_reason": "Duplicate", "title": "Deriving std::hash::Hash for enums", "body": "<p>I'm having problems auto-deriving the <code>Hash</code> trait for an enum. My code specifies <code>Hash</code> as a trait for my enum, but the compiler tells me I'm not implementing it.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::hash::Hash;\n\n#[derive(Hash, Eq, PartialEq, Debug, Clone)]\nenum DishCategory {\n    Green,\n    Carb,\n    Protein,\n}\n\n#[derive(Debug, Clone, PartialEq, Eq, Hash)]\nstruct Dish {\n    name: String,\n    ingredients: Vec&lt;String&gt;,\n    dish_type: HashSet&lt;DishCategory&gt;,\n}\n</code></pre>\n\n<p>The error given by the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::collections::HashSet&lt;DishCategory&gt;: std::hash::Hash` is not satisfied\n  --&gt; src/main.rs:15:5\n   |\n15 |     dish_type: HashSet&lt;DishCategory&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::hash::Hash` is not implemented for `std::collections::HashSet&lt;DishCategory&gt;`\n   |\n   = note: required by `std::hash::Hash::hash`\n</code></pre>\n\n<p>I'm using Rust 1.19.0 (<code>0ade33941 2017-07-17</code>)</p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1503586803, "post_id": 45864495, "comment_id": 78688265, "body": "@kennytm Thank you. But it says same thing.. and `  // Visible here: <code>m1</code>.  macro_rules! m3 // Visible here: <code>m1</code>, <code>m3</code>. ` means <code>panic!</code> should not be visible from <code>std_panic!</code> (Edit: Fixed typo. I expected enter to be &lt;br&gt;)"}], "answers": [{"comments": [{"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "edited": false, "score": 0, "creation_date": 1503588116, "post_id": 45865101, "comment_id": 78689296, "body": "Thank you for a detailed explanation. I changed name of macro to fail, and overrided <code>unreachble!</code> and <code>unimplemented!</code>. I&#39;m satisfied with this. Visibility is caculated from site of use, after expanding. It makes sense"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1588087650, "last_edit_date": 1588087650, "creation_date": 1503587284, "answer_id": 45865101, "question_id": 45864495, "link": "https://stackoverflow.com/questions/45864495/can-i-override-a-macro-from-the-standard-library-with-my-own-custom-macro/45865101#45865101", "title": "Can I override a macro from the standard library with my own custom macro?", "body": "<p><strong>Yes</strong>, you can override a macro from the standard library:</p>\n\n<pre><code>macro_rules! panic {\n    ($($arg:tt),*) =&gt; {};\n}\n\nfn main() {\n    panic!(\"Exit\");\n    println!(\"Or not...\");\n}\n</code></pre>\n\n<p><strong>No</strong>, you cannot then call the macro you just shadowed.</p>\n\n<p>Macros are expanded at the site of use. In your example, when you try to use <code>panic!</code>, it expands to <code>std_panic!</code> which in turn expands to <code>panic!</code>. At that point, your <em>own</em> <code>panic!</code> is the one in scope.</p>\n\n<p>This simpler example shows that a macro calls whatever <code>do_foo</code> happens to be in scope <em>where the macro is expanded</em>. Note that there isn't even a <code>do_foo</code> defined where the macro is:</p>\n\n<pre><code>macro_rules! foo {\n    () =&gt; {\n        do_foo()\n    };\n}\n\nfn main() {\n    {\n        fn do_foo() {\n            println!(\"1\")\n        }\n        foo!();\n    }\n    {\n        fn do_foo() {\n            println!(\"2\")\n        }\n        foo!();\n    }\n}\n</code></pre>\n\n<p>Instead, you will need to refer to the original macro via its complete path (available since <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1300-2018-10-25\" rel=\"nofollow noreferrer\">Rust 1.30</a>):</p>\n\n<pre><code>macro_rules! panic {\n    ($($args:tt)+) =&gt; {{\n        std::panic!(\"{}\\n --&gt; {}:{}:{}\", format_args!($($args)*), file!(), line!(), column!());\n    }};\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43254340/155423\">How to write a panic! like macro in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/45053381/155423\">Is it possible to change the whole panic message?</a></li>\n</ul>\n"}], "owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 0, "accepted_answer_id": 45865101, "answer_count": 1, "score": 5, "last_activity_date": 1588087650, "creation_date": 1503585562, "last_edit_date": 1503586841, "question_id": 45864495, "link": "https://stackoverflow.com/questions/45864495/can-i-override-a-macro-from-the-standard-library-with-my-own-custom-macro", "title": "Can I override a macro from the standard library with my own custom macro?", "body": "<p>I'm working on a procedural macro, and I found that compiler does not give information about proc-macro crates when the procedural macro panics. I tried to override <code>panic!</code> to print a location:</p>\n\n<pre><code>macro_rules! std_panic {\n    ($($args:tt)+) =&gt; {{\n        panic!($($args)*);\n    }};\n}\n\n/// panic! with location reporting.\nmacro_rules! panic {\n    ($($args:tt)+) =&gt; {{\n        std_panic!(\"{}\\n --&gt; {}:{}:{}\", format_args!($($args)*), file!(), line!(), column!());\n    }};\n}\n</code></pre>\n\n<p>But the compiler fails with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: recursion limit reached while expanding the macro `std_panic`\n  --&gt; src/lib.rs:30:9\n   |\n30 |         std_panic!(\"{}\\n --&gt; {}:{}:{}\", format_args!($($args)*), file!(), line!(), column!());\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   | \n54 |                         _ =&gt; unimplemented!(\"handling tuple struct\"),\nin this macro invocation\n   |\n   = help: consider adding a `#![recursion_limit=\"131072\"]` attribute to your crate\n</code></pre>\n\n<p>I set the limit to <code>65536</code> to prove that this is related to recursive expansion.</p>\n\n<p>According to <a href=\"https://doc.rust-lang.org/book/first-edition/macros.html#scoping-and-macro-importexport\" rel=\"noreferrer\">the macros chapter of <em>The Rust Programming Language</em>, first edition</a>, my own <code>panic!</code> is not visible to <code>std_panic!</code>, so it should use <code>panic!</code> from the standard library.</p>\n\n<p>I also tried</p>\n\n<pre><code>#![feature(no_std)]\n#![no_std]\n#[macro_use(panic)]\nextern crate std;\n</code></pre>\n\n<p>but it doesn't work.</p>\n"}, {"tags": ["rust", "ownership", "borrow-checker"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1503575168, "post_id": 45860077, "comment_id": 78679392, "body": "<code>ok()</code> returns <code>Option</code> and then you wrap it into <code>Some</code>. You end up with <code>Option&lt;Option&lt;...&gt;&gt;</code>. Remove <code>Some(...)</code> from <code>Some(entry.file_name().into_string().ok())</code>. It is not a complete answer, but at least it will allow you to get going."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503584158, "post_id": 45860077, "comment_id": 78686295, "body": "If your code works (I find it hard to tell from reading your question), then asking for a way to write it better is <a href=\"https://codereview.meta.stackexchange.com/q/5777/32521\">better suited for Code Review</a>."}, {"owner": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1503587203, "post_id": 45860077, "comment_id": 78688590, "body": "Thanks @Shepmaster, but my question was not so much about the piece of code, I only wrote that as an example. Instead I wanted to see what my general problem is that causes this code to be so crazy nested."}], "answers": [{"comments": [{"owner": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "edited": false, "score": 0, "creation_date": 1503576329, "post_id": 45861036, "comment_id": 78680214, "body": "Thanks a lot @Boiethios ! I saw that operator earlier but everytime I wanted to use it, it didn&#39;t work for me."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "edited": false, "score": 0, "creation_date": 1503576413, "post_id": 45861036, "comment_id": 78680284, "body": "Maybe because it was in nightly version only, before."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "edited": false, "score": 1, "creation_date": 1503577306, "post_id": 45861036, "comment_id": 78680983, "body": "@koehr Updated!"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1503577288, "last_edit_date": 1503577288, "creation_date": 1503575917, "answer_id": 45861036, "question_id": 45860077, "link": "https://stackoverflow.com/questions/45860077/in-rust-how-can-i-make-this-code-less-repetitive/45861036#45861036", "title": "In Rust, how can I make this code less repetitive?", "body": "<p>You can massively rely on <a href=\"https://m4rw3r.github.io/rust-questionmark-operator\" rel=\"nofollow noreferrer\"><code>?</code> operator</a>:</p>\n\n<pre><code>use std::fs;\nuse std::io::{Error, ErrorKind};\n\nfn list_files(path: &amp;str) -&gt; Result&lt;Vec&lt;String&gt;, Error&gt; {\n    let mut list = Vec::new();\n\n    for entry in fs::read_dir(path)? {\n        let entry = entry?;\n        if entry.file_type()?.is_file() {\n            list.push(entry.file_name().into_string().map_err(|_| {\n                Error::new(ErrorKind::InvalidData, \"Cannot convert file name\")\n            })?)\n        }\n    }\n\n    Ok(list)\n}\n</code></pre>\n\n<p>Do not forget that you can split your code into functions or implement your own <code>trait</code>s to simplify the final code:</p>\n\n<pre><code>use std::fs;\nuse std::io::{Error, ErrorKind};\n\ntrait CustomGetFileName {\n    fn get_file_name(self) -&gt; Result&lt;String, Error&gt;;\n}\n\nimpl CustomGetFileName for std::fs::DirEntry {\n    fn get_file_name(self) -&gt; Result&lt;String, Error&gt; {\n        Ok(self.file_name().into_string().map_err(|_|\n            Error::new(ErrorKind::InvalidData, \"Cannot convert file name\")\n        )?)\n    }\n}\n\nfn list_files(path: &amp;str) -&gt; Result&lt;Vec&lt;String&gt;, Error&gt; {\n    let mut list = Vec::new();\n\n    for entry in fs::read_dir(path)? {\n        let entry = entry?;\n        if entry.file_type()?.is_file() {\n            list.push(entry.get_file_name()?)\n        }\n    }\n\n    Ok(list)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "edited": false, "score": 0, "creation_date": 1503576881, "post_id": 45861266, "comment_id": 78680647, "body": "Thanks! How good is the Rust compiler in optimizing such things? Because I wouldn&#39;t like to iterate over and over again."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "reply_to_user": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "edited": false, "score": 0, "creation_date": 1503577141, "post_id": 45861266, "comment_id": 78680862, "body": "that&#39;s the beautiful thing about iterators, this is only one iteration as there is only one call to collect"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1503577425, "post_id": 45861266, "comment_id": 78681093, "body": "This answer is great! However, there is a difference with the OP&#39;s code because in your code, you do not return at first error. You only silently discard them."}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 1, "last_activity_date": 1503577161, "last_edit_date": 1503577161, "creation_date": 1503576604, "answer_id": 45861266, "question_id": 45860077, "link": "https://stackoverflow.com/questions/45860077/in-rust-how-can-i-make-this-code-less-repetitive/45861266#45861266", "title": "In Rust, how can I make this code less repetitive?", "body": "<p>An alternative answer with iterators, <a href=\"https://play.rust-lang.org/?gist=f2d8af11b5ead1fb362b161354dd238d&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>use std::fs;\nuse std::error::Error;\nuse std::path::PathBuf;\n\nfn list_files(path: &amp;str) -&gt; Result&lt;Vec&lt;PathBuf&gt;, Box&lt;Error&gt;&gt; {\n    let x = fs::read_dir(path)?\n        .filter_map(|e| e.ok())\n        .filter(|e| e.metadata().is_ok())\n        .filter(|e| e.metadata().unwrap().is_file())\n        .map(|e| e.path())\n        .collect();\n\n    Ok(x)\n}\n\nfn main() {\n    let path = \".\";\n    for res in list_files(path).unwrap() {\n        println!(\"{:#?}\", res);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "accepted_answer_id": 45861036, "answer_count": 2, "score": -2, "last_activity_date": 1537023355, "creation_date": 1503572976, "last_edit_date": 1537023355, "question_id": 45860077, "link": "https://stackoverflow.com/questions/45860077/in-rust-how-can-i-make-this-code-less-repetitive", "title": "In Rust, how can I make this code less repetitive?", "body": "<p>The goal is to write a function that gets two paths, <code>input_dir</code> and <code>output_dir</code>, and convertes all markdown files from <code>input_dir</code> to html files in <code>output_dir</code>.</p>\n\n<p>I finally managed to get it to run but it was rather frustrating. The parts that should be hard are super easy: the actual conversion from Markdown to HTML is effectively only one line. The seemingly easy parts are what took me the longest. Using a vector of paths and put all files into it is something I replaced with the <code>glob</code> crate. Not because I couldn't get it to work but it was a mess of <code>if let</code> and <code>unwrap</code>. A simple function that iterates over the list of elements and figures out which of them are actually files and not directories? Either I need four indentation levels if <code>if let</code> or I freak out over <code>match</code>es.</p>\n\n<p>What am I doing wrong?</p>\n\n<p>But lets start with some things I tried to get a list of items in a directory filtered to only contain actual files:</p>\n\n<pre><code>use std::fs;\nuse std::vec::Vec;\n\n\nfn list_files (path: &amp;str) -&gt; Result&lt;Vec&lt;&amp;str&gt;, &amp;str&gt; {\n    if let Ok(dir_list) = fs::read_dir(path) {\n        Ok(dir_list.filter_map(|e| {\n            match e {\n                Ok(entry) =&gt; match entry.file_type() {\n                    Ok(_) =&gt; entry.file_name().to_str(),\n                    _ =&gt; None\n                },\n                _ =&gt; None\n            }\n        }).collect())\n    } else {\n        Err(\"nope\")\n    }\n}\n\n\nfn main() {\n    let files = list_files(\"testdir\");\n    println!(\"{:?}\", files.unwrap_or(Vec::new()));\n}\n</code></pre>\n\n<p>So, this code doesn't build, because the file name in Line 10 doesn't live long enough. I guess I could somehow create an owned <code>String</code> but that would introduce another nesting level because <code>OsStr.to_string()</code> returns a <code>Result</code>.</p>\n\n<p>Now I looked through the code of the <code>glob</code> crate and they just use a mutable vector:</p>\n\n<pre><code>fn list_files (path: &amp;str) -&gt; Result&lt;Vec&lt;&amp;str&gt;, &amp;str&gt; {\n    let mut list = Vec::new();\n\n    if let Ok(dir_list) = fs::read_dir(path) {\n        for entry in dir_list {\n            if let Ok(entry) = entry {\n                if let Ok(file_type) = entry.file_type() {\n                    if file_type.is_file() {\n                        if let Some(name) = entry.file_name().to_str() {\n                            list.push(name)\n                        }\n                    }\n                }\n            }\n        }\n\n        Ok(list)\n    } else {\n        Err(\"nope\")\n    }\n}\n</code></pre>\n\n<p>This not only adds crazy nesting, it also fails with the same problem. If I change from <code>Vec&lt;&amp;str&gt;</code> to <code>Vec&lt;String&gt;</code>, it works:</p>\n\n<pre><code>fn list_files (path: &amp;str) -&gt; Result&lt;Vec&lt;String&gt;, &amp;str&gt; {\n    let mut list = Vec::new();\n\n    if let Ok(dir_list) = fs::read_dir(path) {\n        for entry in dir_list {\n            if let Ok(entry) = entry {\n                if let Ok(file_type) = entry.file_type() {\n                    if file_type.is_file() {\n                        if let Ok(name) = entry.file_name().into_string() {\n                            list.push(name)\n                        }\n                    }\n                }\n            }\n        }\n\n        Ok(list)\n    } else {\n        Err(\"nope\")\n    }\n}\n</code></pre>\n\n<p>Looks like I should apply that to my first try, right?</p>\n\n<pre><code>fn list_files (path: &amp;str) -&gt; Result&lt;Vec&lt;String&gt;, &amp;str&gt; {\n    if let Ok(dir_list) = fs::read_dir(path) {\n        Ok(dir_list.filter_map(|e| {\n            match e {\n                Ok(entry) =&gt; match entry.file_type() {\n                    Ok(_) =&gt; Some(entry.file_name().into_string().ok()),\n                    _ =&gt; None\n                },\n                _ =&gt; None\n            }\n        }).collect())\n    } else {\n        Err(\"nope\")\n    }\n}\n</code></pre>\n\n<p>At least a bit shorter\u2026 but it fails to compile because <strong>a collection of type <code>std::vec::Vec&lt;std::string::String&gt;</code> cannot be built from an iterator over elements of type <code>std::option::Option&lt;std::string::String&gt;</code></strong>.</p>\n\n<p>It is hard to stay patient here. Why does <code>.filter_map</code> return <code>Option</code>s instead of just using them to filter? Now I have to change line 15 from <code>}).collect())</code> to <code>}).map(|e| e.unwrap()).collect())</code> which iterates once more over the result set.</p>\n\n<p>That can't be right!</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503578149, "post_id": 45861268, "comment_id": 78681710, "body": "I don&#39;t know how you&#39;d do this in OP&#39;s case, because they are doing the immutable borrow once outside a loop, and the mutable borrow multiple times inside the loop."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1503579108, "post_id": 45861268, "comment_id": 78682411, "body": "@interjay, multiple mutable borrows are not required to do that if <code>get_mut_components</code> would be implemented for <code>HashMap&lt;TypedId, HashSet&lt;u64&gt;&gt;</code> or some wrapper type, mutable reference to which will be returned as a part of a result of <code>borrow_parts</code>."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 1, "last_activity_date": 1503577314, "last_edit_date": 1503577314, "creation_date": 1503576607, "answer_id": 45861268, "question_id": 45858859, "link": "https://stackoverflow.com/questions/45858859/is-it-possible-to-borrow-parts-of-a-struct-as-mutable-and-other-parts-as-immutab/45861268#45861268", "title": "Is it possible to borrow parts of a struct as mutable and other parts as immutable?", "body": "<p>No, a function cannot return a reference to a part of the structure and leave the structure partially borrowed. </p>\n\n<p>However you can return tuple of immutable and mutable borrows like this </p>\n\n<pre><code>#[derive(Debug)]\nstruct AB(u32, u32);\n\nimpl AB {\n    fn borrow_parts(&amp;mut self) -&gt; (&amp;u32, &amp;mut u32) {\n        (&amp;self.0, &amp;mut self.1)\n    }\n}\n\nfn main() {\n    let mut ab = AB(0, 2);\n    {\n        let (a, b) = ab.borrow_parts();\n        *b = *a;\n    }\n    println!(\"{:?}\", ab);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1109, "user_id": 1772476, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/bc3dd034928abd20bb22de44a4846c93?s=128&d=identicon&r=PG", "display_name": "Timidger", "link": "https://stackoverflow.com/users/1772476/timidger"}, "edited": false, "score": 3, "creation_date": 1503615446, "post_id": 45864481, "comment_id": 78703025, "body": "&quot;You can only borrow the entire struct as immutable or mutable, there is no concept of borrowing only parts of it.&quot;  To be pedantic, yes there is. You can do a partial borrow on a struct, but that won&#39;t work for the op because the fields are private. Here is an example: <a href=\"https://play.rust-lang.org/?gist=fcfcca700ba238287063143754e15c97&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": true, "score": 3, "last_activity_date": 1559958422, "last_edit_date": 1559958422, "creation_date": 1503585517, "answer_id": 45864481, "question_id": 45858859, "link": "https://stackoverflow.com/questions/45858859/is-it-possible-to-borrow-parts-of-a-struct-as-mutable-and-other-parts-as-immutab/45864481#45864481", "title": "Is it possible to borrow parts of a struct as mutable and other parts as immutable?", "body": "<p>You can only borrow the <strong>entire</strong> struct as immutable or mutable, there is no concept of borrowing only parts of it. When this becomes a problem, you can use <a href=\"https://doc.rust-lang.org/stable/book/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">interior mutability</a> in the form of a <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>:</p>\n\n<pre><code>pub struct EntityComponentSystem {\n    entities: RefCell&lt;HashMap&lt;u64, Entity&gt;&gt;,\n    entities_with_components: HashMap&lt;TypeId, HashSet&lt;u64&gt;&gt;,\n}\n</code></pre>\n\n<p>Now you can borrow the entire struct as immutable and borrow the contents of the <code>RefCell</code> independently as mutable:</p>\n\n<pre><code>pub fn get_mut_components(&amp;self, entity_id: u64) -&gt; &amp;mut TypeMap {\n    let mut entities = self.entities.borrow_mut();\n    let entity = entities.get_mut(&amp;entity_id).unwrap();\n    &amp;mut entity.components\n}\n</code></pre>\n"}], "owner": {"reputation": 137, "user_id": 3872464, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9e586fd4dd77f18a8db8ac69eea788c7?s=128&d=identicon&r=PG&f=1", "display_name": "Kim", "link": "https://stackoverflow.com/users/3872464/kim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2250, "favorite_count": 0, "accepted_answer_id": 45864481, "answer_count": 2, "score": 6, "last_activity_date": 1559958422, "creation_date": 1503569414, "last_edit_date": 1503585318, "question_id": 45858859, "link": "https://stackoverflow.com/questions/45858859/is-it-possible-to-borrow-parts-of-a-struct-as-mutable-and-other-parts-as-immutab", "title": "Is it possible to borrow parts of a struct as mutable and other parts as immutable?", "body": "<p>Is it possible to borrow parts of a struct as mutable, and another part as immutable - if the struct's fields are private.</p>\n\n<pre><code>fn main() {\n    let mut ecs = EntityComponentSystem::new();\n\n    for e_id in ecs.get_entities_with_component::&lt;Velocity&gt;().unwrap() {\n           let components = ecs.get_mut_components(e_id);\n           ...\n}\n\nimpl EntityComponentSystem {\n    ...\n    pub fn get_entities_with_component&lt;K: Key&gt;(&amp;self) -&gt; Option&lt;&amp;HashSet&lt;u64&gt;&gt; {\n        self.entities_with_components.get(&amp;TypeId::of::&lt;K&gt;())\n    }\n\n    pub fn get_mut_components(&amp;mut self, entity_id: u64) -&gt; &amp;mut TypeMap {\n        let entity = self.entities.get_mut(&amp;entity_id).unwrap();\n        &amp;mut entity.components\n    }\n}\n\npub struct EntityComponentSystem {\n    entities: HashMap&lt;u64, Entity&gt;,                     &lt;------- I would like to modify this.\n    entities_with_components: HashMap&lt;TypeId, HashSet&lt;u64&gt;&gt;,   &lt;---- while reading from this!\n}\n</code></pre>\n\n<p>The compiler is giving me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*ecs` as mutable because it is also borrowed as immutable\n  --&gt; physics.rs:19:26\n   |\n18 |     for e_id in ecs.get_entities_with_component::&lt;Velocity&gt;() {\n   |                 --- immutable borrow occurs here\n19 |         let components = ecs.get_mut_components(*e_id);\n   |                          ^^^ mutable borrow occurs here\n...\n26 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>What I'm not grasping, is how the <code>&amp;self</code> reference in <code>get_entities_with_component</code> is still borrowed after we've essentially returned a part of the <code>entities_with_components</code> field.</p>\n\n<p>Shouldn't just that part be borrowed? Is there any way to enforce this?</p>\n"}, {"tags": ["rust", "llvm", "lli"], "answers": [{"tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": false, "score": 5, "last_activity_date": 1507072043, "last_edit_date": 1507072043, "creation_date": 1503573005, "answer_id": 45860092, "question_id": 45854134, "link": "https://stackoverflow.com/questions/45854134/llvm-produced-by-rustc-gives-error-about-argument-type-of-main-when-run-with-lli/45860092#45860092", "title": "LLVM produced by rustc gives error about argument type of main when run with lli", "body": "<p>Rust marks its entry point (the function marked with <code>#[start]</code> attribute, by default the function <code>lang_start</code> in the standard library) as taking an argc parameter of type <code>isize</code>. <a href=\"https://github.com/rust-lang/rust/issues/29633\" rel=\"nofollow noreferrer\">This is a bug</a> because it should have the type of a C int, so it should be 32 bits on a 64-bit platform, but <code>isize</code> is 64 bits. However, due to the way 64-bit calling conventions work, this happens to still work correctly. The same issue also exists for the return type.</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/pull/44906\" rel=\"nofollow noreferrer\">A fix</a> for this has been committed on 2017-10-01 and should be present in Rust 1.22.</p>\n\n<p><code>lli</code> is apparently more strict about checking the type of <code>main</code> which is why it gives the error. But if you use <code>llc</code> instead, it should work correctly.</p>\n\n<p>To get the correct <code>main</code> signature, you can cancel the default <code>main</code> by putting <code>#![no_main]</code> at the top of the module, and provide your own <code>main</code> marked with <code>#[no_mangle]</code>. But note that this will skip the standard library's initialization.</p>\n\n<pre><code>#![no_main]\n\n#[no_mangle]\npub extern fn main(_argc: i32, _argv: *const *const u8) -&gt; i32 {\n    0\n}\n</code></pre>\n\n<p>See also: </p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/beta/unstable-book/language-features/lang-items.html\" rel=\"nofollow noreferrer\">documentation about <code>lang_items</code> and disabling <code>main</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/29633\" rel=\"nofollow noreferrer\">Tracking issue for <code>#[start]</code> feature</a>, where some people mention <code>isize</code> not being correct.</li>\n</ul>\n"}], "owner": {"reputation": 463, "user_id": 1654766, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/1195aa06aff1dde8de2eb16d4d402bbf?s=128&d=identicon&r=PG", "display_name": "Harry Braviner", "link": "https://stackoverflow.com/users/1654766/harry-braviner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1507072043, "creation_date": 1503554967, "last_edit_date": 1503584919, "question_id": 45854134, "link": "https://stackoverflow.com/questions/45854134/llvm-produced-by-rustc-gives-error-about-argument-type-of-main-when-run-with-lli", "title": "LLVM produced by rustc gives error about argument type of main when run with lli", "body": "<p>I'm trying to learn a little about the LLVM IR, particularly what exactly rustc outputs. I'm having a little bit of trouble running even a very simple case.</p>\n\n<p>I put the following in a source file <code>simple.rs</code>:</p>\n\n<pre><code>fn main() {\n    let x = 7u32;\n    let y = x + 2;\n}\n</code></pre>\n\n<p>and run <code>rustc --emit llvm-ir simple.rs</code> to get the file <code>simple.ll</code>, containing</p>\n\n<pre><code>; ModuleID = 'simple.cgu-0.rs'\nsource_filename = \"simple.cgu-0.rs\"\ntarget datalayout = \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n; Function Attrs: uwtable\ndefine internal void @_ZN6simple4main17h8ac50d7470339b75E() unnamed_addr #0 {\nstart:\n  br label %bb1\n\nbb1:                                              ; preds = %start\n  ret void\n}\n\ndefine i64 @main(i64, i8**) unnamed_addr {\ntop:\n  %2 = call i64 @_ZN3std2rt10lang_start17ha09816a4e25587eaE(void ()* @_ZN6simple4main17h8ac50d7470339b75E, i64 %0, i8** %1)\n  ret i64 %2\n}\n\ndeclare i64 @_ZN3std2rt10lang_start17ha09816a4e25587eaE(void ()*, i64, i8**) unnamed_addr\n\nattributes #0 = { uwtable }\n\n!llvm.module.flags = !{!0}\n\n!0 = !{i32 1, !\"PIE Level\", i32 2}\n</code></pre>\n\n<p>I then try to run this with the command</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>lli-3.9 -load ~/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/libstd-35ad9950c7e5074b.so simple.ll\n</code></pre>\n\n<p>but I get the error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>LLVM ERROR: Invalid type for first argument of main() supplied\n</code></pre>\n\n<p>I'm able to make a minimal reproduction of this as follows: I make a file called <code>s2.ll</code>, containing</p>\n\n<pre><code>define i32 @main(i64, i8**) {\n    ret i32 42\n}\n</code></pre>\n\n<p>and running <code>lli-3.9 s2.ll</code> gives the same error message. <em>But</em> if I change the contents of <code>s2.ll</code> to</p>\n\n<pre><code>define i32 @main(i32, i8**) {\n    ret i32 42\n}\n</code></pre>\n\n<p>(i.e. I've changed the type of <code>argc</code> in main) then <code>lli-3.9 s2.ll</code> runs, and <code>echo $?</code> reveals that it did indeed return <code>42</code>.</p>\n\n<p>I don't think I should have to pass in the <code>i64</code> explicitly - my argument list or C strings should be put into memory somewhere and the pointer and length passed to <code>main</code> automatically, right? Therefore I assume that I'm doing something wrong in the way in invoke <code>lli</code> - but I have no idea what.</p>\n"}, {"tags": ["arrays", "parallel-processing", "iterator", "rust", "combinations"], "comments": [{"owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "edited": false, "score": 0, "creation_date": 1503555815, "post_id": 45851561, "comment_id": 78666419, "body": "Are you expecting to create two iterators on the same <code>Combo</code> ?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1503556169, "post_id": 45851561, "comment_id": 78666601, "body": "This is more a mathematical problem than programming."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 0, "last_activity_date": 1503564073, "creation_date": 1503564073, "answer_id": 45856866, "question_id": 45851561, "link": "https://stackoverflow.com/questions/45851561/finding-the-midpoint-of-the-combinations-of-an-array/45856866#45856866", "title": "Finding the midpoint of the combinations of an array", "body": "<p>Just half the first value of the array to cut the operation in half, since the first value is the last to be incremented in your algorithm (the most significant):</p>\n\n<pre><code>[4, 3, 2, 1]\n</code></pre>\n\n<p>can be cut this way:</p>\n\n<pre><code>first part:  [0, 3, 2, 1] -&gt; [1, 3, 2, 1]\nsecond part: [2, 3, 2, 1] -&gt; [3, 3, 2, 1]\n</code></pre>\n\n<p>Therefore, this is very easy to cut in half your algorithm: call the first part with <code>[2, 3, 2, 1]</code> and the second with <code>[4, 3, 2, 1]</code> with this beginning: <code>[2, 0, 0, 0]</code>.</p>\n"}], "owner": {"reputation": 13, "user_id": 2977341, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87d92596989f269f5b5d45bc54064594?s=128&d=identicon&r=PG", "display_name": "stnma7e", "link": "https://stackoverflow.com/users/2977341/stnma7e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 45856866, "answer_count": 1, "score": 1, "last_activity_date": 1503564073, "creation_date": 1503537956, "question_id": 45851561, "link": "https://stackoverflow.com/questions/45851561/finding-the-midpoint-of-the-combinations-of-an-array", "title": "Finding the midpoint of the combinations of an array", "body": "<p>I have a struct which implements <code>Iterator</code> in Rust (though the question could apply to any language) to compute combinations of an array. The iterator is created with an initial array which defines the maximum value of each entry in the array. The actual code of the iterator is still a work in progress, so there's likely many places that could be improved.</p>\n\n<p>For example, if I create a <code>Combo</code> using the <code>Combo::new()</code> function, and I give the <code>set_max</code> array, <code>[4,3,2,1]</code>, then the iterator will produce all the combinations of an array of length 4, such that no entry exceeds the entry given in <code>set_max</code>.</p>\n\n<p>Thus, the first array that gets produced is <code>[0,0,0,1]</code>, followed by <code>[0,0,1,0]</code>, <code>[0,0,1,1]</code>, <code>[0,0,2,0]</code>, <code>[0,0,2,1]</code>, <code>[0,1,0,0]</code>, etc. Essentially, it increments a single entry at a time, until the entry is maxed-out. Then it resets it and begins incrementing two entries at a time.</p>\n\n<p>I would like this iterator to implement <code>rayon::ParallelIterator</code> at some point, but first, I believe I need a way to split the computation of the combinations in half.</p>\n\n<p>How do I find the halfway point of the iterator, so that I could split it into two pieces?</p>\n\n<p>After I found this midpoint, I have some ideas on implementing the split function: adding a set_min array that specifies a starting point from which to being incrementing the entries. But the main point of the question is how to find the midpoint in general.</p>\n\n<pre><code>#[derive(Clone)]\npub struct Combos {\n    pub set_max: Vec&lt;usize&gt;,\n    set_current: Vec&lt;usize&gt;,\n    size: usize,\n}\n\nimpl Combos {\n    pub fn new(set_max: Vec&lt;usize&gt;) -&gt; Combos {\n        Combos {\n            set_current: vec![0; set_max.len()],\n            size: set_max.iter().fold(1, |acc, x| (x + 1) * acc) - 1,\n            set_max: set_max,\n        }\n    }\n\n    fn increment_combo(&amp;self, length: usize, combo: &amp;[usize]) -&gt; Vec&lt;usize&gt; {\n        if let Some(last) = combo.last() {\n            if *last == self.set_max[length - 1] {\n                let mut v = self.increment_combo(length - 1, &amp;combo[..length - 1]);\n                v.push(0);\n                return v\n            } else {\n                let mut v = combo.to_vec();\n                v[length - 1] = last + 1;\n                return v\n            }\n        } else {\n            return Vec::new()\n        }\n    }\n}\n\nimpl Iterator for Combos {\n    type Item=Vec&lt;usize&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Vec&lt;usize&gt;&gt; {\n        if self.set_current == self.set_max {\n            return None\n        }\n\n        self.set_current = self.increment_combo(self.set_max.len(), &amp;self.set_current);\n        return Some(self.set_current.clone())\n    }\n}\n</code></pre>\n"}]