[{"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463609820, "post_id": 37310941, "comment_id": 62142937, "body": "If you don&#39;t specify a concrete type for <code>T</code> or <code>F</code>, then how much space should the Rust compiler allocate to store <code>Struct</code>?"}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1463615282, "post_id": 37310941, "comment_id": 62144422, "body": "@Shepmaster, in theory, if the compiler can determine that <code>F</code> is never used it can just write that field as size 0. The problem, of course, is that this sort of whole-program inference is really complicated."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1463615506, "post_id": 37310941, "comment_id": 62144482, "body": "@Jsor an interesting point, but as you mention, Rust doesn&#39;t do any inference beyond a single function boundary."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1463657877, "post_id": 37310941, "comment_id": 62163418, "body": "@Shepmaster can you elaborate or give some references about the affirmation &quot;Rust doesn&#39;t do any inference beyond a single function boundary&quot;?"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 7, "last_activity_date": 1463627433, "creation_date": 1463627433, "answer_id": 37313316, "question_id": 37310941, "link": "https://stackoverflow.com/questions/37310941/default-generic-parameter/37313316#37313316", "title": "Default generic parameter", "body": "<p>There's a way to solve this by changing the type of the builder as it evolves. Since <code>Struct::func</code> takes ownership of the builder and returns a new builder, we are free to change the result type.</p>\n\n<p>First, we need to specify an initial type for <code>F</code>. We could just choose any existing implementation for <code>Fn(T)</code>, but we can do better. I propose that we use an <a href=\"https://en.wikipedia.org/wiki/Bottom_type\" rel=\"noreferrer\">empty/void/uninhabited/bottom type</a>, so that it's clear that when <code>F</code> is that type, then the <code>Option</code> is <code>None</code> (you can't construct a <code>Some(x)</code> because there's no valid <code>x</code> for an empty type). One downside to this approach is that implementing <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code> for types (other than closures) is unstable and requires a nightly compiler.</p>\n\n<pre><code>#![feature(fn_traits)]\n#![feature(unboxed_closures)]\n\nenum Void {}\n\nimpl&lt;T&gt; FnOnce&lt;T&gt; for Void {\n    type Output = ();\n\n    extern \"rust-call\" fn call_once(self, _args: T) {\n        match self {}\n    }\n}\n\nimpl&lt;T&gt; FnMut&lt;T&gt; for Void {\n    extern \"rust-call\" fn call_mut(&amp;mut self, _args: T) {\n        match *self {}\n    }\n}\n\nimpl&lt;T&gt; Fn&lt;T&gt; for Void {\n    extern \"rust-call\" fn call(&amp;self, _args: T) {\n        match *self {}\n    }\n}\n</code></pre>\n\n<p>Next, let's move <code>Struct::new</code> to a different <code>impl</code> block:</p>\n\n<pre><code>impl&lt;T&gt; Struct&lt;T, Void&gt; {\n    fn new(value: T) -&gt; Struct&lt;T, Void&gt; {\n        Struct {\n            func: None,\n            value: value,\n        }\n    }\n}\n</code></pre>\n\n<p>This <code>impl</code> is <em>not</em> generic on <code>F</code>: <code>new</code> will only ever generate a <code>Struct</code> where <code>F = Void</code>. This avoids ambiguities in the case where <code>func</code> is never called.</p>\n\n<p>Finally, we need to make <code>func</code> change the type of the builder:</p>\n\n<pre><code>impl&lt;T, F0: Fn(T)&gt; Struct&lt;T, F0&gt; {\n    fn func&lt;F1: Fn(T)&gt;(self, func: F1) -&gt; Struct&lt;T, F1&gt; {\n        Struct {\n            func: Some(func),\n            value: self.value,\n        }\n    }\n}\n</code></pre>\n\n<p>This method needs to stay in an <code>impl</code> block that is generic over the <code>F</code> type parameter on <code>Struct&lt;T, F&gt;</code>, so that it can be used on a builder on which <code>func</code> was already called. However, <code>func</code> must also be generic itself so that it can receive any type of function (rather than a function matching the type of the builder). Then, instead of mutating <code>self</code>, we have to construct a new <code>Struct</code>, because we can't just coerce a <code>Struct&lt;T, F0&gt;</code> into a <code>Struct&lt;T, F1&gt;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1463692114, "post_id": 37313554, "comment_id": 62185990, "body": "In theory, a <code>Struct&lt;T, Void&gt;</code> could be even further optimized: since the <code>Some</code> variant of an <code>Option&lt;Void&gt;</code> cannot be instantiated, only the <code>None</code> variant remains. An enum with a single variant doesn&#39;t need a discriminant (though right now, it appears that there&#39;s still a discriminant for a unit enum), and since <code>None</code> doesn&#39;t hold any data, then the size of an <code>Option&lt;Void&gt;</code> could be zero. Thus, the size of a <code>Struct&lt;i32, Void&gt;</code> would be 4 rather than 8."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1463667075, "last_edit_date": 1495541330, "creation_date": 1463629129, "answer_id": 37313554, "question_id": 37310941, "link": "https://stackoverflow.com/questions/37310941/default-generic-parameter/37313554#37313554", "title": "Default generic parameter", "body": "<p>Following <a href=\"https://stackoverflow.com/a/37313316/155423\">Francis Gagn\u00e9's clever solution</a>, here's a similar idea that can work on stable Rust:</p>\n\n<pre><code>struct Struct&lt;T, F: Fn(T)&gt; {\n    func: Option&lt;F&gt;,\n    value: T,\n}\n\nenum Structs&lt;T, F: Fn(T)&gt; {\n    Struct1(T),\n    Struct2(T, F),\n}\n\nimpl&lt;T&gt; Struct&lt;T, fn(T)&gt; {\n    fn new(value: T) -&gt; Struct&lt;T, fn(T)&gt; {\n        Struct {\n            func: None,\n            value: value,\n        }\n    }\n}\n\nimpl&lt;T, F: Fn(T)&gt; Struct&lt;T, F&gt; {\n    fn func&lt;F2: Fn(T)&gt;(self, func: F2) -&gt; Struct&lt;T, F2&gt; {\n        Struct {\n            func: Some(func),\n            value: self.value,\n        }\n    }\n\n    fn build(self) -&gt; Structs&lt;T, F&gt; {\n        use Structs::*;\n\n        if let Some(func) = self.func {\n            Struct2(self.value, func)\n        } else {\n            Struct1(self.value)\n        }\n    }\n}\n\nfn main() {\n    let _strct = Struct::new(42)\n        .func(|n| {\n            println!(\"{}\", n);\n        })\n        .build();\n\n    let _strct = Struct::new(42).build();\n}\n</code></pre>\n\n<p>Instead of a clear <code>Void</code> type, we simply say that we return a struct that would be parameterized for a function pointer. You could likewise specify a reference trait object:</p>\n\n<pre><code>impl&lt;T&gt; Struct&lt;T, &amp;'static Fn(T)&gt; {\n    fn new(value: T) -&gt; Struct&lt;T, &amp;'static Fn(T)&gt; {\n</code></pre>\n\n<p>Answering my own question from a comment:</p>\n\n<blockquote>\n  <p>If you don't specify a concrete type for <code>T</code> or <code>F</code>, then how much space should the Rust compiler allocate to store <code>Struct</code>?</p>\n</blockquote>\n\n<p>The size of a <code>fn()</code> is 8 bytes on a 64-bit machine, leading to a total of 16 bytes for the entire structure:</p>\n\n<pre><code>std::mem::size_of::&lt;fn()&gt;();\nstd::mem::size_of_val(&amp;strct);\n</code></pre>\n\n<p>However, when you give it a concrete callback, the structure only takes 8 bytes! That's because the type will be monomorphized for the callback, which needs no state and can basically be inlined.</p>\n\n<p>Francis Gagn\u00e9's solution only requires 8 bytes in each case, as the <code>Void</code> type has a size of zero!</p>\n"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4724, "favorite_count": 2, "accepted_answer_id": 37313554, "answer_count": 2, "score": 7, "last_activity_date": 1463667075, "creation_date": 1463609514, "question_id": 37310941, "link": "https://stackoverflow.com/questions/37310941/default-generic-parameter", "title": "Default generic parameter", "body": "<p>I have a struct that we can construct with the builder pattern because there are some <code>Option</code>al fields.</p>\n\n<p>If I use the builder functions to specify these optional fields, I don't have to specify the generic parameters.</p>\n\n<p>But if I don't call these functions, I need to specify the generic parameters.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>use Structs::*;\n\nstruct Struct&lt;T, F: Fn(T)&gt; {\n    func: Option&lt;F&gt;,\n    value: T,\n}\n\nenum Structs&lt;T, F: Fn(T)&gt; {\n    Struct1(T),\n    Struct2(T, F),\n}\n\nimpl&lt;T, F: Fn(T)&gt; Struct&lt;T, F&gt; {\n    fn new(value: T) -&gt; Struct&lt;T, F&gt; {\n        Struct {\n            func: None,\n            value: value,\n        }\n    }\n\n    fn build(self) -&gt; Structs&lt;T, F&gt; {\n        if let Some(func) = self.func {\n            Struct2(self.value, func)\n        }\n        else {\n            Struct1(self.value)\n        }\n    }\n\n    fn func(mut self, func: F) -&gt; Struct&lt;T, F&gt; {\n        self.func = Some(func);\n        self\n    }\n}\n\nfn main() {\n    let _strct = Struct::new(42)\n        .func(|n| { println!(\"{}\", n); })\n        .build();\n\n    //let _strct = Struct::new(42).build(); // Does not compile.\n    let _strct = Struct::&lt;_, &amp;Fn(_)&gt;::new(42).build();\n}\n</code></pre>\n\n<p>I would like to omit the type annotation when the optional fields are not set, like so:</p>\n\n<pre><code>let _strct = Struct::new(42).build();\n</code></pre>\n\n<p>It should be specified that the <code>F</code> type depends on <code>T</code>.</p>\n\n<p>I tried specifying a default type parameter as such:</p>\n\n<pre><code>impl&lt;T, F: Fn(T) = Box&lt;Fn(T)&gt;&gt; Struct&lt;T, F&gt; {\n</code></pre>\n\n<p>but it does not solve the issue.</p>\n\n<p>So how can I avoid having to specify the type parameters in the <code>Struct::new()</code> call?</p>\n\n<p>If it is not possible to avoid this, is there any alternatives to the builder pattern that would allow me to omit the type annotation?</p>\n"}, {"tags": ["windows", "serial-port", "rust"], "answers": [{"tags": [], "owner": {"reputation": 819, "user_id": 2353008, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/pb5nr.jpg?s=128&g=1", "display_name": "Valarauca", "link": "https://stackoverflow.com/users/2353008/valarauca"}, "is_accepted": false, "score": 1, "last_activity_date": 1463661960, "creation_date": 1463661960, "answer_id": 37323633, "question_id": 37307559, "link": "https://stackoverflow.com/questions/37307559/windows-error-87-when-raising-dtr-line-serial/37323633#37323633", "title": "Windows Error 87 when raising DTR line (serial)", "body": "<p>The error resulted from the DTR line was not supported within the serial port emulation driver of the USB->RS232 converter. </p>\n"}], "owner": {"reputation": 819, "user_id": 2353008, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/pb5nr.jpg?s=128&g=1", "display_name": "Valarauca", "link": "https://stackoverflow.com/users/2353008/valarauca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1463661960, "creation_date": 1463596342, "last_edit_date": 1463597918, "question_id": 37307559, "link": "https://stackoverflow.com/questions/37307559/windows-error-87-when-raising-dtr-line-serial", "title": "Windows Error 87 when raising DTR line (serial)", "body": "<p>I am attempting to communicate with a serial device over a TTL->RS-232 converter. This converter requires power be sent on the DTR and RTS lines.</p>\n\n<pre><code>// imports\nextern crate serial; //see: https://dcuddeback.github.io/serial-rs/serial/index.html\nuse std::env;\nuse std::io;\nuse std::time::Duration;\nuse std::process::exit;\nuse std::io::prelude::*;\nuse serial::prelude::*;\nuse serial::{BaudRate, CharSize, Parity, StopBits, FlowControl, SystemPort, PortSettings, Error};\nuse std::mem;\n\n#[inline]\nfn display_error_message(err: &amp;Error, msg: &amp;str) -&gt; ! {\n    println!(\"{}\", msg);\n    println!(\"Error Code: {:?}\", err.raw_os_error());\n    println!(\"Error:  {:?}\", err);\n    exit(0);\n}\n\nfn main() {\n    // open port\n    let mut port = match serial::open(\"COM3\") {\n        Err(ref e) =&gt; display_error_message(e, \"Error opening serial port\"),\n        Ok(x) =&gt; x,\n    };\n    // push settings to stack\n    let settings = PortSettings {\n        baud_rate: BaudRate::Baud115200,\n        char_size: CharSize::Bits8,\n        parity: Parity::ParityNone,\n        stop_bits: StopBits::Stop1,\n        flow_control: FlowControl::FlowNone,\n    };\n    // configure port\n    match port.configure(&amp;settings) {\n        Ok(_) =&gt; {}\n        Err(ref e) =&gt; display_error_message(e, \"Error configuring serial port.\"),\n    };\n    // set rts\n    match port.set_rts(true) {\n        Ok(_) =&gt; {}\n        Err(ref e) =&gt; display_error_message(e, \"Error setting RTS line\"),\n    };\n    // set DTR\n    match port.set_dtr(true) {\n        Ok(_) =&gt; {}\n        Err(ref e) =&gt; display_error_message(e, \"Error setting DTR line\"),\n    };\n    // allocate readbuffer on stack\n    let mut rb: [u8; 1] = [0u8; 1];\n    // allocate buffer to hold output\n    let mut out: String = String::with_capacity(1024);\n    // loop while reading\n    loop {\n        match port.read(&amp;mut rb) {\n            Ok(_) =&gt; {}\n            Err(ref e) =&gt; {\n                println!(\"Error reading serial port.\");\n                println!(\"Error:  {:?}\", e);\n                exit(0);\n            }\n        };\n        match rb[0] {\n            // Linefeed\n            10 =&gt; {\n                println!(\"{}&lt;LF&gt;\", &amp;out);\n                out = String::with_capacity(1024);\n            }\n            // carriage return\n            13 =&gt; {\n                println!(\"{}&lt;CR&gt;\", &amp;out);\n                out = String::with_capacity(1024);\n            }\n            // normal chars\n            32...126 =&gt; {\n                let temp: u32 = rb[0].clone() as u32;\n                let ch: char = unsafe { mem::transmute(temp) };\n                out.push(ch);\n            }\n            // everything else\n            x =&gt; {\n                println!(\"Non standard character encountered\");\n                println!(\"Value:  {:?}\", x);\n                exit(0);\n            }\n        };\n    }\n}\n</code></pre>\n\n<p>The source code is also on the <a href=\"https://play.rust-lang.org/?gist=54b3ebb246d7ec0fd1a0c72cb7b5700a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Rust Playground</a> and <a href=\"https://gist.github.com/anonymous/54b3ebb246d7ec0fd1a0c72cb7b5700a\" rel=\"nofollow\">Github</a>.</p>\n\n<p>I am using the <a href=\"https://github.com/dcuddeback/serial-rs\" rel=\"nofollow\">serial-rs</a> library and Rust 1.8 (GNU ABI Windows 7 x64 Professional). </p>\n\n<p>My error occurs on line 46:</p>\n\n<pre><code> match port.set_dtr( true ) {\n     Ok(_) =&gt; { },\n     Err(ref e) =&gt; display_error_message(e,\"Error setting DTR line\")\n };\n</code></pre>\n\n<p>This returns error code 87 (on Windows 7). The standard <a href=\"https://github.com/dcuddeback/serial-rs\" rel=\"nofollow\">serial-rs</a> doesn't save the error code so I'm using <a href=\"https://github.com/valarauca/serial-rs\" rel=\"nofollow\">my own fork</a> (pending a PR).</p>\n\n<p>This error is from a malformed system call. Diving into <a href=\"https://github.com/dcuddeback/serial-rs\" rel=\"nofollow\">serial-rs</a> one will see <code>set_dtr(bool)</code> is just wrapping a call to <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa363254%28v=vs.85%29.aspx\" rel=\"nofollow\">EscapeCommFunction(2)</a> <a href=\"https://github.com/valarauca/serial-rs/blob/master/src/windows/com.rs#L190-197\" rel=\"nofollow\">first call</a>, <a href=\"https://github.com/valarauca/serial-rs/blob/master/src/windows/com.rs#L69-74\" rel=\"nofollow\">second call</a>, <a href=\"https://github.com/valarauca/serial-rs/blob/master/src/windows/ffi.rs#L173\" rel=\"nofollow\">third call</a>. The arguments codes appear <a href=\"https://github.com/valarauca/serial-rs/blob/master/src/windows/ffi.rs#L123-130\" rel=\"nofollow\">correct</a>. </p>\n\n<p>Compiling with the MSVC toolchain results in same error, placing the DTR call before RTS call results in same error.</p>\n\n<p>Raising DTR and RTS at the same time works in py-serial, but I can't write to the port while doing so. <a href=\"https://stackoverflow.com/questions/37284228/disable-rts-dsr-handshaking-while-keeping-lines-high-in-pyserial\">See other issue</a></p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": true, "score": 3, "last_activity_date": 1463579788, "last_edit_date": 1463579788, "creation_date": 1463578977, "answer_id": 37301450, "question_id": 37300411, "link": "https://stackoverflow.com/questions/37300411/borrowed-local-variable-in-nested-lambda/37301450#37301450", "title": "Borrowed local variable in nested lambda", "body": "<p>This is slightly finicky, but makes sense with Rust's rules. The closure passed to <code>flat_map</code> is a function that <strong>returns</strong> an iterator, which is then drained within the <code>flat_map</code> iterator. What's happening is that the iterator <code>decode</code> relies on a reference to <code>rdr</code> being alive, but <code>rdr</code> is dropped at the end of the closure!</p>\n\n<pre><code>|f| {\n        let mut rdr = csv::Reader::from_file(f).unwrap().has_headers(false);\n\n        rdr.decode()  // &lt;- decode() takes rdr by ref\n            .map(|r| {\n            let b: Value = r.unwrap();\n            b.id //takes some values\n        } // &lt;--- Returns this iterator, which requires &amp;'a mut rdr\n } // &lt;--- rdr dropped here\n // &lt;--- Uh oh, now we can't use the decoder, since rdr doesn't exist\n</code></pre>\n\n<p>The easiest workaround is:</p>\n\n<pre><code> let v: Vec&lt;_&gt; = rdr.decode().map(...).collect();\n v\n</code></pre>\n\n<p>This returns a vector, which is iterated over by <code>flat_map</code>. It's probably not the most performant solution, but it's simple.</p>\n\n<p>Another solution would be to write your own <code>struct</code> that takes <code>csv::Reader</code> by value, and implements <code>Iterator</code> like so:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;WhateverType&gt; {\n    self.rdr.decode().next().and_then(|v| {\n        v.unwrap().id\n    })\n}\n</code></pre>\n\n<p>Then you'd want to do  something like:</p>\n\n<pre><code>|f| {\n    let rdr = csv::Reader::from_file(f).unwrap().has_headers(false);\n\n    MyIterator::new(rdr)\n}\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 631980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8dd8d4a02558295ff9429c91d8423286?s=128&d=identicon&r=PG", "display_name": "antoine", "link": "https://stackoverflow.com/users/631980/antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 550, "favorite_count": 1, "accepted_answer_id": 37301450, "answer_count": 1, "score": 1, "last_activity_date": 1463579788, "creation_date": 1463576446, "last_edit_date": 1463577217, "question_id": 37300411, "link": "https://stackoverflow.com/questions/37300411/borrowed-local-variable-in-nested-lambda", "title": "Borrowed local variable in nested lambda", "body": "<p>I have a list of CSV files and I want to produce an iterator over the lines of all files. I'm thus using <code>flat_map()</code>:</p>\n\n<pre><code>extern crate csv;\nextern crate rustc_serialize;\nuse std::path::Path;\nuse std::fs;\n\n// simple struct used by the csv crate to deserialize the csv line into this Value\n#[derive(RustcDecodable, RustcEncodable)]\npub struct Value {\n    pub id: String,\n}\n\n// I have an iterator over some csv files, \n// I want an iterator of all the lines of all the files\nfn do_stuff&lt;I&gt;(files: I)\n    where I: Iterator&lt;Item = std::path::PathBuf&gt;\n{\n    let iter = files.flat_map(|f| {\n        let mut rdr = csv::Reader::from_file(f).unwrap().has_headers(false);\n\n        rdr.decode()  // &lt;- decode() takes rdr by ref\n            .map(|r| {\n            let b: Value = r.unwrap();\n            b.id //takes some values\n        })\n    });\n    // do stuff with iter\n}\n\nfn main() {\n    let paths: std::fs::ReadDir = fs::read_dir(\".\").unwrap();\n    do_stuff(paths.map(|p| p.unwrap().path()));\n}\n</code></pre>\n\n<p>However, the borrow checker is not happy with this:</p>\n\n<pre><code>error: `rdr` does not live long enough\nrdr.decode().map(|r| {\n^~~\nnote: reference must be valid for the block suffix following statement 0 at 22:7...\n});\n//do stuff with iter\n}\nnote: ...but borrowed value is only valid for the block suffix following statement 0 at 16:76\nlet mut rdr = csv::Reader::from_file(f).unwrap().has_headers(false);\n\nrdr.decode().map(|r| {\n   let b: Value = r.unwrap();\n   b.id\n})\n</code></pre>\n\n<p>The 2 used lambda (the one in <code>flat_map</code> and the one in <code>map</code>) do not capture other variables, I thus don't really understand why the local <code>rdr</code> needs to live that long.</p>\n\n<p>Well the <code>decode</code> function takes a ref on <code>rdr</code>, thus it seems <code>map</code> needs an owning ref to <code>rdr</code>...</p>\n"}, {"tags": ["rust", "numeric", "generic-programming", "traits"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 24, "creation_date": 1463570670, "post_id": 37296686, "comment_id": 62118907, "body": "@HosseinNoroozpour use dependencies. Rust is unlike many other languages in that package management is built in and strongly embraced. The canonical example is random number generation, which is provided in a crate and not the standard library."}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "reply_to_user": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 1, "creation_date": 1463620900, "post_id": 37296686, "comment_id": 62145794, "body": "@HosseinNoroozpour It is understandable to desire minimizing dependencies, but as Shepmaster said, Rust makes dependency management convenient to encourage people to use them. Plus, the <code>num</code> crate is very well maintained, it will not be abandoned."}, {"owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "reply_to_user": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 2, "creation_date": 1463635635, "post_id": 37296686, "comment_id": 62149437, "body": "@Kroltan I&#39;m coming from C++ background, in there adding every dependency was a scary decision. I can guess only those libraries that are bound to C libraries are the ones I should avoid to add, am I correct?"}], "tags": [], "owner": {"reputation": 21316, "user_id": 526217, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/db561d0fda29a204506bdadd6b802047?s=128&d=identicon&r=PG", "display_name": "evilone", "link": "https://stackoverflow.com/users/526217/evilone"}, "is_accepted": true, "score": 14, "last_activity_date": 1583165505, "last_edit_date": 1583165505, "creation_date": 1463566727, "answer_id": 37296686, "question_id": 37296351, "link": "https://stackoverflow.com/questions/37296351/is-there-any-trait-that-specifies-numeric-functionality/37296686#37296686", "title": "Is there any trait that specifies numeric functionality?", "body": "<p>You can use <a href=\"https://crates.io/crates/num\" rel=\"noreferrer\">num</a> or <a href=\"https://crates.io/crates/num-traits\" rel=\"noreferrer\">num-traits</a> crates and bound your generic function type with <a href=\"https://docs.rs/num/0.2.1/num/trait.Float.html\" rel=\"noreferrer\"><code>num::Float</code></a>, <a href=\"https://docs.rs/num/0.2.1/num/trait.Integer.html\" rel=\"noreferrer\"><code>num::Integer</code></a> or whatever relevant trait:</p>\n\n<pre><code>use num::Float; // 0.2.1\n\nfn main() {\n    let f1: f32 = 2.0;\n    let f2: f64 = 3.0;\n    let i1: i32 = 3;\n\n    println!(\"{:?}\", sqrt(f1));\n    println!(\"{:?}\", sqrt(f2));\n    println!(\"{:?}\", sqrt(i1)); // error\n}\n\nfn sqrt&lt;T: Float&gt;(input: T) -&gt; T {\n    input.sqrt()\n}\n</code></pre>\n"}], "owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11983, "favorite_count": 1, "accepted_answer_id": 37296686, "answer_count": 1, "score": 19, "last_activity_date": 1583165505, "creation_date": 1463565849, "last_edit_date": 1583165368, "question_id": 37296351, "link": "https://stackoverflow.com/questions/37296351/is-there-any-trait-that-specifies-numeric-functionality", "title": "Is there any trait that specifies numeric functionality?", "body": "<p>I'd like to use a trait to bound a generic type, like this hypothetical <code>HasSQRT</code>:</p>\n\n<pre><code>fn some_generic_function&lt;T&gt;(input: &amp;T)\nwhere\n    T: HasSQRT,\n{\n    // ...\n    input.sqrt()\n    // ...\n}\n</code></pre>\n"}, {"tags": ["csv", "rust", "slice", "allocation", "text-parsing"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1463555777, "post_id": 37290216, "comment_id": 62109150, "body": "I can&#39;t test because I am on the train.. but I am willing to bet its because your for loop is actually syntactic sugar for <code>r_chars.into_iter()</code>.. which will take ownership. If you instead explicitly use <code>for chara in r_chars.iter()</code>.. then it will return references."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463570879, "post_id": 37290216, "comment_id": 62119056, "body": "<b>Definitely</b> use the <a href=\"https://github.com/BurntSushi/rust-csv\" rel=\"nofollow noreferrer\">csv crate</a>. &quot;At the lowest level, the parser can decode CSV at about 200 MB/sec.&quot; And that entails zero allocations."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463576247, "post_id": 37290216, "comment_id": 62122956, "body": "<i>Since we can&#39;t index into strings in Rust,</i> \u2014 sure you can. You just have to use byte offsets that lie on UTF-8 character boundaries. There are even iterators like <a href=\"http://doc.rust-lang.org/std/primitive.str.html#method.char_indices\" rel=\"nofollow noreferrer\"><code>char_indices</code></a>."}, {"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463588442, "post_id": 37290216, "comment_id": 62131993, "body": "Thanks for the comments and insight.  @Shepmaster , the meta articles I found that explained in-line code didn&#39;t seem to work for me -- when I futzed with the pre and code tags, the preview only showed me the Vec portion and not the rest.  What is the correct markup that you used?"}, {"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463588824, "post_id": 37290216, "comment_id": 62132248, "body": "@Shepmaster thanks for the link to char_indexes.  I was going by the official Rust documentation on strings which states: &quot;Because strings are valid UTF-8, strings do not support indexing&quot; and gives an example of how attempting to do so witth square-brackets syntax fails.   I guess the doc could use some clarifying! <a href=\"https://doc.rust-lang.org/book/strings.html#indexing\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/strings.html#indexing</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463591261, "post_id": 37290216, "comment_id": 62133589, "body": "<i>What is the correct markup that you used?</i> you can review the <a href=\"http://stackoverflow.com/posts/37290216/revisions\">edit history</a> and also <a href=\"https://stackoverflow.com/posts/37290216/edit\">edit</a> the post again to see the current markdown (which I didn&#39;t fix, so that credit goes elsewhere ^_^). <i>strings do not support indexing</i> \u2014 ah, this is a nuanced point that I might have misrepresented. You can&#39;t do <code>some_string[2]</code>, but you <i>can</i> do <code>some_string[2..]</code> to get a substring (as long as <code>2</code> is a valid UTF-8 boundary). This means you can get a single UTF-8 character as a substring."}], "answers": [{"comments": [{"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1463588134, "post_id": 37295976, "comment_id": 62131783, "body": "Hey, I really like this solution.  Clearing an already-allocated string fits perfectly into the intent of my question.  I knew of str::split, but was rolling my own just to experiment with low-level processing.  For production, I&#39;m sure I&#39;ll use split."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 3, "last_activity_date": 1463576145, "last_edit_date": 1463576145, "creation_date": 1463564901, "answer_id": 37295976, "question_id": 37290216, "link": "https://stackoverflow.com/questions/37290216/how-to-assign-slices-while-iterating-over-a-vec-in-rust-without-copying/37295976#37295976", "title": "How To Assign Slices While Iterating Over a Vec in Rust without copying?", "body": "<p><a href=\"https://doc.rust-lang.org/stable/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow\"><code>BufReader::lines</code></a> returns a iterator that produces <code>Result&lt;String&gt;</code> items. When <code>unwrap</code> is called on such a item it will always allocates a new <code>String</code> (note that in <code>line.unwrap().to_string()</code>,  <code>to_string()</code> is redundant).</p>\n\n<p>If you want to minimize allocations, you can use <a href=\"https://doc.rust-lang.org/stable/std/io/trait.BufRead.html#method.read_line\" rel=\"nofollow\"><code>BufReader::read_line</code></a>.</p>\n\n<p>To split the fields of a CSV line you can use <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.split\" rel=\"nofollow\"><code>str::split</code></a>.</p>\n\n<p>Here is a simplified version of your code:</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::fs::File;\n\nfn main() {\n    let mut line = String::new();\n    let ms7_files = [\"file1.cvs\", \"file2.cvs\"];\n    for stored in &amp;ms7_files {\n        let mut reader = BufReader::new(File::open(stored).unwrap());\n        while reader.read_line(&amp;mut line).unwrap() &gt; 0 {\n            // creates a scope to the iterator, so we can call line.clear()\n            {\n                // does not allocate\n                let mut it = line.split(',');\n                // item_id, date and payload are string slices, that is &amp;str\n                let item_id = it.next().expect(\"no item_id fied\");\n                let date = it.next().expect(\"no date field\");\n                let payload = it.next().expect(\"no payload field\");\n                // process fields\n            }\n            // sets len of line to 0, but does not deallocate\n            line.clear()\n        }\n    }\n}\n</code></pre>\n\n<p>You may also want to take a look at <a href=\"https://crates.io/search?q=csv\" rel=\"nofollow\">various</a> crates to work with CSV files.</p>\n"}, {"comments": [{"owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "edited": false, "score": 0, "creation_date": 1463587903, "post_id": 37297705, "comment_id": 62131625, "body": "Thanks for code that fixes my original design flaw. I have control over the CSV layout, which doesn&#39;t include line breaks per record, so I&#39;m going to pursue the solution supplied by @malbarbo"}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 1, "last_activity_date": 1463569418, "creation_date": 1463569418, "answer_id": 37297705, "question_id": 37290216, "link": "https://stackoverflow.com/questions/37290216/how-to-assign-slices-while-iterating-over-a-vec-in-rust-without-copying/37297705#37297705", "title": "How To Assign Slices While Iterating Over a Vec in Rust without copying?", "body": "<p>For your question, as @Simon Whitehead answered, ownership of <code>r_chars</code> has already been transferred to build the <code>IntoIterator</code>, thus you cannot use this.</p>\n\n<p>Modifying your code using</p>\n\n<pre><code>for chara in &amp;r_chars\n// equivalent to\n// for chara in r_chars.iter()\n</code></pre>\n\n<p>AND copying <code>*chara</code> whenever you want (cheap) will probably fix it.</p>\n\n<p>For @malbarbo's answer, I would advise against using <code>BufReader::lines</code> if your csv contains text columns (which can itself contain line break).</p>\n\n<p>Looking at <a href=\"https://crates.io/search?q=csv\" rel=\"nofollow\">crates.io</a> I instead advise using either the battle tested <a href=\"https://crates.io/crates/csv\" rel=\"nofollow\">csv</a> or if you need slightly more performance but are ready for much less tested one <a href=\"https://crates.io/crates/quick-csv\" rel=\"nofollow\">quick-csv</a>.</p>\n"}], "owner": {"reputation": 138, "user_id": 2041635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nlgiD.jpg?s=128&g=1", "display_name": "ezekiel68", "link": "https://stackoverflow.com/users/2041635/ezekiel68"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 586, "favorite_count": 0, "accepted_answer_id": 37295976, "answer_count": 2, "score": 4, "last_activity_date": 1463576145, "creation_date": 1463545029, "last_edit_date": 1463576088, "question_id": 37290216, "link": "https://stackoverflow.com/questions/37290216/how-to-assign-slices-while-iterating-over-a-vec-in-rust-without-copying", "title": "How To Assign Slices While Iterating Over a Vec in Rust without copying?", "body": "<p>I am trying to efficiently parse CSV files line by line without unnecessary memory allocation.</p>\n\n<p>Since we can't index into strings in Rust, my idea was to create a struct for each line that has an owned <code>Vec&lt;char&gt;</code> of the line characters and several <code>&amp;[char]</code> slices representing the locations in that <code>Vec</code> of the fields that will require further processing. </p>\n\n<p>I am supporting English only, so there's no need for Unicode graphemes.</p>\n\n<p>I grab each line from the <code>BufReader</code>, collect it into my <code>Vec&lt;char&gt;</code> and then iterate over the characters to notice the correct offsets for each field slice:</p>\n\n<pre><code>let mut r_line: String;\nlet mut char_count: usize;\nlet mut comma_count: usize;\nlet mut payload_start: usize;\nfor stored in &amp;ms7_files {\n    let reader = BufReader::new(File::open(&amp;stored.as_path()).unwrap());\n    for line in reader.lines() {\n        r_line = line.unwrap().to_string();\n        let r_chars: Vec&lt;char&gt; = r_line.chars().collect();\n        char_count = 0;\n        comma_count = 0;\n        payload_start = 0;\n        for chara in r_chars {\n            char_count += 1;\n            if chara == ',' {\n                comma_count += 1;\n                if comma_count == 1 {\n                    let r_itemid = &amp;r_chars[0..char_count - 1];\n                    payload_start = char_count + 1;\n                } else if comma_count == 2 {\n                    let r_date = &amp;r_chars[payload_start..char_count - 1];\n                    let r_payload = &amp; r_chars[payload_start..r_line.len() - 1];\n                }\n            }\n        }\n        // Code omitted here to initialize a struct described in my\n        // text above and add it to a Vec for later processing\n    }\n}\n</code></pre>\n\n<p>All goes swimmingly until the code inside <code>if</code> tests on <code>comma_count</code> where I attempt to create char slices into the <code>Vec</code>.  When I attempt to compile, I get the dreaded:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>proc_sales.rs:87:23: 87:30 error: use of moved value: `r_chars` [E0382]\nproc_sales.rs:87                        let r_itemid = &amp;r_chars[0..char_count - 1];\n                                                        ^~~~~~\nproc_sales.rs:87:23: 87:30 help: run `rustc --explain E0382` to see a detailed explanation\nproc_sales.rs:82:17: 82:24 note: `r_chars` moved here because it has type `collections::vec::Vec&lt;char&gt;`, which is non-copyable\nproc_sales.rs:82            for chara in r_chars {\n                                     ^~~~~~~\n</code></pre>\n\n<p>for each of the attempts to create a slice. I can basically understand why the compiler is complaining. What I'm trying to figure out is a better strategy to collect and process this data without resorting to a lot of copying and cloning. Heck, if I could leave the original <code>String</code> (for each file line) owned by the <code>BufReader</code> and just hold on to slices into that, I would!</p>\n\n<p>Feel free to comment on fixing up the above code as well as suggestions for alternative approaches to this problem that limit unnecessary copying.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1463575671, "creation_date": 1463575671, "answer_id": 37300116, "question_id": 37288282, "link": "https://stackoverflow.com/questions/37288282/is-it-possible-to-deriverustcencodable-for-part-of-struct/37300116#37300116", "title": "Is it possible to derive(RustcEncodable) for part of struct?", "body": "<p>The short answer is \"no\". The rustc-serialize crate <sup>1</sup> does not provide that level of control on the automated implementations of traits like <code>Decodable</code> or <code>Encodable</code>.</p>\n\n<p>To do this, you would need to implement them yourself:</p>\n\n<pre><code>extern crate rustc_serialize;\n\nuse rustc_serialize::{Encodable, Encoder};\nuse rustc_serialize::json;\n\nstruct S {\n    data: i32,\n    fun: Box&lt;Fn()&gt;,\n}\n\nimpl Encodable for S {\n    fn encode&lt;S: Encoder&gt;(&amp;self, s: &amp;mut S) -&gt; Result&lt;(), S::Error&gt; {\n        s.emit_struct(\"S\", 1, |s| {\n            s.emit_struct_field(\"data\", 0, |s| {\n                s.emit_i32(self.data)\n            })\n        })\n    }\n}\n\nfn main() {\n    let thing = S { data: 42, fun: Box::new(|| println!(\"I am a function\")) };\n    let json = json::encode(&amp;thing).expect(\"Couldn't encode\");\n    println!(\"{}\", json);\n    (thing.fun)();\n}\n</code></pre>\n\n<p>If you aren't tied to rustc-serialize, you may be interested in <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow\">serde</a> which offers the <code>#[serde(skip_serializing)]</code> and <code>#[serde(skip_deserializing)]</code> annotations.</p>\n\n<hr>\n\n<p><strong>1</strong>: Technically, <code>#[derive(RustcEncodable, RustcDecodable)]</code> is provided <em>by the compiler</em>. This is why it has the <code>Rustc</code> prefix. It's also an ugly wart that wants to be removed but is waiting for stable support of compiler plugins.</p>\n"}, {"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 3, "last_activity_date": 1465106328, "last_edit_date": 1495540115, "creation_date": 1465106328, "answer_id": 37638941, "question_id": 37288282, "link": "https://stackoverflow.com/questions/37288282/is-it-possible-to-deriverustcencodable-for-part-of-struct/37638941#37638941", "title": "Is it possible to derive(RustcEncodable) for part of struct?", "body": "<p><a href=\"https://stackoverflow.com/questions/37288282/is-it-possible-to-deriverustcencodable-for-part-of-struct/37300116#37300116\">Shepmaster's answer</a> gives the RustcEncodable solution. For completeness, here is the equivalent <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow noreferrer\">Serde</a> code:</p>\n\n<pre><code>#![feature(custom_derive, plugin)]\n#![plugin(serde_macros)]\n\nextern crate serde_json;\n\n#[derive(Serialize, Deserialize)]\nstruct S {\n    data: i32,\n    #[serde(skip_serializing, skip_deserializing, default=\"empty_fun\")]\n    fun: Box&lt;Fn()&gt;,\n}\n\nfn empty_fun() -&gt; Box&lt;Fn()&gt; {\n    Box::new(|| {})\n}\n\nfn main() {\n    let s = S { data: 42, fun: Box::new(|| println!(\"I am a function\")) };\n\n    // prints {\"data\":42}\n    println!(\"{}\", serde_json::to_string(&amp;s).unwrap());\n}\n</code></pre>\n\n<p>The <code>skip_serializing</code> attribute means ignore the field when serializing the struct. Similarly, the <code>skip_deserializing</code> attribute means ignore the field when deserializing.</p>\n\n<p>The <code>default</code> attribute gives the value to use for the field when deserializing. Fields that implement <a href=\"https://doc.rust-lang.org/std/default/trait.Default.html\" rel=\"nofollow noreferrer\"><code>std::default::Default</code></a> do not need this as Serde is able to use the value of <code>Default::default()</code>.</p>\n"}], "owner": {"reputation": 325, "user_id": 170993, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/5b9b07a1e96b1b5acee26709f699c0d1?s=128&d=identicon&r=PG", "display_name": "nqe", "link": "https://stackoverflow.com/users/170993/nqe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 0, "accepted_answer_id": 37300116, "answer_count": 2, "score": 2, "last_activity_date": 1465106328, "creation_date": 1463531157, "last_edit_date": 1463533013, "question_id": 37288282, "link": "https://stackoverflow.com/questions/37288282/is-it-possible-to-deriverustcencodable-for-part-of-struct", "title": "Is it possible to derive(RustcEncodable) for part of struct?", "body": "<p>I have a struct like:</p>\n\n<pre><code>struct S {\n    data: i32,\n    fun: Box&lt;Fn()&gt;,\n}\n</code></pre>\n\n<p>and would like to serialize the data part using an encoder. To do that I use rustc_serialize and derive its traits like</p>\n\n<pre><code>#[derive(RustcEncodable, RustcDecodable)]\nstruct S {\n    data: i32,\n    fun: Box&lt;Fn()&gt;,\n}\n</code></pre>\n\n<p>The problem is that <code>fun</code> can't be serialized as it's a function. This is fine as I only want to serialize the plain <code>data</code> field. Is there a way to do that?</p>\n\n<p>The <code>data</code> field in my real use case is also a struct which can also have a <code>Fn</code> so I can't simply split the struct into two.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463594754, "post_id": 37286439, "comment_id": 62135521, "body": "<i>[do] not attempt to put these items in the same structure together</i> \u2014 seems like that would apply equally well for your case? What are your results from trying to use <a href=\"https://crates.io/crates/owning_ref\" rel=\"nofollow noreferrer\">owning_ref</a>?"}, {"owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463596111, "post_id": 37286439, "comment_id": 62136257, "body": "It actually doesn&#39;t say <i>do not attempt</i>. It says <i>The easiest and most recommended solution is to not attempt</i>.... The problem is that it really does not apply in my case, since I cannot change the external API. It&#39;s akin of an answer of &quot;it can&#39;t be done because that&#39;s not how rust works&quot; which would be fine, but it&#39;s still not the same question since my question still involves an external API."}, {"owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463596235, "post_id": 37286439, "comment_id": 62136329, "body": "<code>OwningRef</code> are close, but I realized (and I missed this in my question) that the CodedInputStream needs a mutable reference. AFAIU, OwningRef can only handle immutable values?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463596391, "post_id": 37286439, "comment_id": 62136425, "body": "I guess I don&#39;t see the difference. You are trying to create the struct <code>Connection</code>, correct? That means that you are able to &quot;refactor internal types in order to solve the problem&quot;, by splitting your internal type (<code>Connection</code>) into smaller parts (the two types you don&#39;t control). The fact that the type containing the reference and the type being referred to aren&#39;t under your control is orthogonal; you still cannot put them in the same struct."}, {"owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463597291, "post_id": 37286439, "comment_id": 62136908, "body": "I don&#39;t see how it is possible to &quot;split my internal type&quot; into smaller parts in a way that is helpful.  I need to construct a value A, together with another value B(from the external API) requiring a reference to A. I want to do it such that A and B shares lifetimes (or enforce that B:s lifetime is a slim subset of A), and can be treated as a single encapsulated value by the caller.  The solution proposed in the other question requires redesigning B such that referencing A is not necessary. I cannot do that, since I do not control the API of B."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1463597711, "post_id": 37286439, "comment_id": 62137119, "body": "<i>The solution proposed in the other question requires redesigning B such that referencing A is not necessary</i> \u2014 Maybe my other answer is overly confusing then; I wasn&#39;t suggesting that you split apart the external type at all. I&#39;m suggesting that you split apart the containing type, <code>Connection</code> in your code above. <i>[I want to create] a single encapsulated value</i> \u2014 right, you cannot do that when one of the encapsulated values references another. That&#39;s the entire point of the duplicate question."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1463659375, "post_id": 37286439, "comment_id": 62164511, "body": "How <code>Connection</code> will be used? Could <code>coded_stream</code> be created on demand, like <code>Connection::get_coded_stream()</code>?"}, {"owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "edited": false, "score": 0, "creation_date": 1463660037, "post_id": 37286439, "comment_id": 62165000, "body": "The idea would be to have <code>Connection</code> share lifetime with both the <code>TcpStream</code> and the related <code>coded_stream</code>. (To let the stream-decoder &quot;take over&quot; the stream). I&#39;m now considering either just what you propose although I think will still just move the problem to the caller, or skip the use of the external API completely and implement what I need myself instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1463668391, "post_id": 37286439, "comment_id": 62171874, "body": "FWIW, I don&#39;t know much about the protobuf library, but the <a href=\"https://github.com/stepancheg/rust-protobuf/blob/073d19aacb5299a48a25e01c575a082e1c15e9de/src/lib/stream.rs#L113-L117\" rel=\"nofollow noreferrer\"><code>InputSource</code></a> type seems inelegant. I would have expected <code>InputSource</code> to be a trait that you have to satisfy and perhaps there are built-in adapters for the 3 things in the enum. That would have cleared up the whole problem. Actually, <a href=\"https://github.com/stepancheg/rust-protobuf/pull/158\" rel=\"nofollow noreferrer\">someone else might agree that it should be changed</a>, although that&#39;s for output, not input."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 1, "last_activity_date": 1566516489, "creation_date": 1566516489, "answer_id": 57618140, "question_id": 37286439, "link": "https://stackoverflow.com/questions/37286439/how-can-i-take-ownership-of-a-value-passing-a-reference-to-an-external-api/57618140#57618140", "title": "How can I take ownership of a value, passing a reference to an external API?", "body": "<p>You can't do this, because it's not safe under Rust's ownership rules.</p>\n\n<p>It's a self-referential struct. There are two problems with self-referential structs:</p>\n\n<ul>\n<li><p>All owned types can be moved to another memory address at any time, and by design that's always as simple as <code>memcpy</code>, without any magic. In your case this means that as soon as you return <code>Connection</code>, the address of <code>stream</code> will change, and the reference in <code>coded_stream</code> will become dangling.</p></li>\n<li><p>The borrow checker allows struct fields to be overwritten/replaced individually. In your case it means it would allow <code>stream</code> to be overwritten with a new one, leaving <code>coded_stream</code> with use-after-free bug.</p></li>\n</ul>\n\n<p>So regular borrow checking rules can't express the special relationship between the two fields that are both owned and borrowed at the same time. </p>\n\n<p>There's <a href=\"https://lib.rs/rental\" rel=\"nofollow noreferrer\"><code>rental</code></a> crate that offers some workarounds for such situations.</p>\n"}], "owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566516489, "creation_date": 1463520086, "last_edit_date": 1495539844, "question_id": 37286439, "link": "https://stackoverflow.com/questions/37286439/how-can-i-take-ownership-of-a-value-passing-a-reference-to-an-external-api", "title": "How can I take ownership of a value, passing a reference to an external API?", "body": "<p>I have an external type (<code>protobuf:::CodedInputStream</code>) which expects a reference to a referenced trait-object (<code>TcpStream</code> as <code>&amp;mut Read</code>).</p>\n\n<p>I would like to make a type or function <code>Connection</code> wrap the <code>TcpStream</code> (taking ownership), together with a <code>CodedInputStream</code>, in order to use it's capabilities, encapsulating the use and ownership of the TcpStream as an internal detail.</p>\n\n<p>However, I can't figure out how. My naive attempt (in pseudo-rust)</p>\n\n<pre><code>struct Connection {\n    stream: TcpStream,\n    coded_stream: CodedInputStream,\n}\n\nfn new_connection(s: TcpStream) -&gt; Connection {\n    Connection {\n        stream: s,\n        // Invalid, `s` has been transferred to `stream` above\n        coded_stream: CodedInputStream::new(&amp;mut s),\n        // Invalid, `stream` is an unresolved symbol here\n        coded_stream: CodedInputStream::new(&amp;mut stream),\n        // Omitting and mutating fails, since `coded_stream`\n        // must have a value and there is no \"0\"-value.\n    }\n}\n</code></pre>\n\n<p>Am I missing something obvious? Is this generally a bad idea in Rust? Is there some other pattern for dealing with taking ownership and encapsulating a long-living object?</p>\n\n<p>In <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"Why can&#39;t I store a value and a reference to that value in the same struct?\">Why can't I store a value and a reference to that value in the same struct?</a> there is a similar question dealing with how to refactor internal types in order to solve the problem. Here, the <code>CodedInputStream</code> is outside my control, a different solution is required (I believe).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463681241, "post_id": 37285508, "comment_id": 62180335, "body": "This was <a href=\"https://www.reddit.com/r/rust/comments/4jsvsz/exercismio_rust_problem/\" rel=\"nofollow noreferrer\">cross-posted to Reddit</a>."}], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1463531129, "post_id": 37287966, "comment_id": 62101329, "body": "What you did was Kirk the test which I can&#39;t do. I put the first part to show how my function is called. I have to conform my public function to match the call in the test."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 2, "creation_date": 1463532895, "post_id": 37287966, "comment_id": 62101720, "body": "@macshaggy maybe my answer is poorly organized, but the last answer (the real one) is only a change to your implementation code, and does not involve any changes to the test."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1583871427, "last_edit_date": 1583871427, "creation_date": 1463528820, "answer_id": 37287966, "question_id": 37285508, "link": "https://stackoverflow.com/questions/37285508/how-do-i-pass-a-vector-and-return-a-vector-of-strings/37287966#37287966", "title": "How do I pass a vector and return a vector of strings?", "body": "<p>Let's look at the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:39\n  |\n4 |     assert_eq!(anagrams_for(\"diaper\", &amp;inputs), outputs);\n  |                                       ^^^^^^^\n  |                                       |\n  |                                       expected struct `std::vec::Vec`, found `&amp;[&amp;str; 4]`\n  |                                       help: try using a conversion method: `(&amp;inputs).to_vec()`\n  |\n  = note: expected struct `std::vec::Vec&lt;&amp;str&gt;`\n          found reference `&amp;[&amp;str; 4]`\n</code></pre>\n\n<p>See how the compiler points to where the error is occurring? The error message states that you should be passing a <code>Vec&lt;&amp;str&gt;</code> (a vector of string slices), but instead you are passing a <code>&amp;[&amp;str; 4]</code> (a reference to an array of length four containing string slices). These two types are not the same!</p>\n\n<p>To make your code work, you could transform the array into a vector:</p>\n\n<pre><code>anagrams_for(\"diaper\", inputs.to_vec());\n</code></pre>\n\n<p>Or you could construct a vector to start with:</p>\n\n<pre><code>let inputs = vec![\"hello\", \"world\", \"zombies\", \"pants\"];\nanagrams_for(\"diaper\", inputs);\n</code></pre>\n\n<p>But both of those are silly because you are allocating a vector and never using any of the power that it gives you. Instead, you really just want to accept a slice of string slices:</p>\n\n<pre><code>fn anagrams_for&lt;'a&gt;(word: &amp;str, inp: &amp;[&amp;'a str]) -&gt; Vec&lt;&amp;'a str&gt;\n</code></pre>\n\n<p>A reference to an array can be implicitly converted to a slice, as can a reference to a <code>Vec</code>, so accepting a slice is often the best choice, when it applies.</p>\n"}, {"comments": [{"owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1463596980, "post_id": 37288910, "comment_id": 62136749, "body": "That is what it was. I&#39;ve been reading the docs but couldn&#39;t figure out that the signature was &amp;[&amp;&#39;a str] to get at the vector correctly. Thanks I learned something about accessing the ptr. BIG THANKS!!"}], "tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 7, "last_activity_date": 1463536262, "creation_date": 1463536262, "answer_id": 37288910, "question_id": 37285508, "link": "https://stackoverflow.com/questions/37285508/how-do-i-pass-a-vector-and-return-a-vector-of-strings/37288910#37288910", "title": "How do I pass a vector and return a vector of strings?", "body": "<p>Just change your function signature from</p>\n\n<pre><code>pub fn anagrams_for&lt;'a&gt;(word: &amp;str, inp: Vec&lt;&amp;'a str&gt;) -&gt; Vec&lt;&amp;'a str&gt;\n</code></pre>\n\n<p>to </p>\n\n<pre><code>pub fn anagrams_for&lt;'a&gt;(word: &amp;str, inp: &amp;[&amp;'a str]) -&gt; Vec&lt;&amp;'a str&gt;\n</code></pre>\n\n<p><code>&amp;[T]</code> can accept both <code>v: Vec&lt;T&gt;</code> and <code>v: [T; n]</code> as arguments by using <code>&amp;v</code>.</p>\n"}], "owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12305, "favorite_count": 3, "accepted_answer_id": 37288910, "answer_count": 2, "score": 4, "last_activity_date": 1583871427, "creation_date": 1463516311, "last_edit_date": 1583871366, "question_id": 37285508, "link": "https://stackoverflow.com/questions/37285508/how-do-i-pass-a-vector-and-return-a-vector-of-strings", "title": "How do I pass a vector and return a vector of strings?", "body": "<p>I'm trying to figure out what I need to do to pass a vector and return a vector of strings in order to solve the anagram exercise on <a href=\"http://exercism.io\" rel=\"nofollow noreferrer\">exercism.io</a>.</p>\n\n<p>Here is the test that I'm trying to pass:</p>\n\n<pre><code>fn test_no_matches() {\n    let inputs = [\"hello\", \"world\", \"zombies\", \"pants\"];\n    let outputs: Vec&lt;&amp;str&gt; = vec![];\n    assert_eq!(anagrams_for(\"diaper\", &amp;inputs), outputs);\n}\n</code></pre>\n\n<p>and here is what I have written so far:</p>\n\n<pre><code>pub fn anagrams_for&lt;'a&gt;(word: &amp;str, inp: Vec&lt;&amp;'a str&gt;) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut out: Vec&lt;&amp;str&gt; = vec![];\n    let ref poss = *inp[1];\n    out.push(poss);\n    out\n}\n</code></pre>\n\n<p>But the test fails to compile at <code>&amp;inputs</code>, giving me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:39\n  |\n4 |     assert_eq!(anagrams_for(\"diaper\", &amp;inputs), outputs);\n  |                                       ^^^^^^^\n  |                                       |\n  |                                       expected struct `std::vec::Vec`, found `&amp;[&amp;str; 4]`\n  |                                       help: try using a conversion method: `(&amp;inputs).to_vec()`\n  |\n  = note: expected struct `std::vec::Vec&lt;&amp;str&gt;`\n          found reference `&amp;[&amp;str; 4]`\n</code></pre>\n\n<p>I've read about references, borrowing, and lifetimes. I can honestly say that I am a bit confused about passing references around. I thought about the return vector as just a <code>Vec&lt;String&gt;</code> but I think there was an issue about the input vectors reference to a str that was causing the problems.</p>\n\n<p>If anyone could push me in a better direction that would be appreciated as I don't want to Kirk the test.</p>\n"}, {"tags": ["rust", "cbor"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1463514353, "creation_date": 1463514353, "answer_id": 37285009, "question_id": 37284352, "link": "https://stackoverflow.com/questions/37284352/how-to-print-valid-cbor-using-serde-cbor/37285009#37285009", "title": "How to print valid CBOR using serde_cbor?", "body": "<p>Here's what your output and the correct output would be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a2 61 78 16 17 91\na2 61 78 01 61 79 01\n</code></pre>\n\n<p>Do you see the problem?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a2 61 78  1 61 79  1\na2 61 78 01 61 79 01\n</code></pre>\n\n<p>You are printing values out as hexadecimal, but not zero-padding them to 2 characters:</p>\n\n<pre><code>print!(\"{:02x}\", byte);\n</code></pre>\n"}], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 185, "favorite_count": 0, "accepted_answer_id": 37285009, "answer_count": 1, "score": 0, "last_activity_date": 1463514353, "creation_date": 1463511946, "last_edit_date": 1463513733, "question_id": 37284352, "link": "https://stackoverflow.com/questions/37284352/how-to-print-valid-cbor-using-serde-cbor", "title": "How to print valid CBOR using serde_cbor?", "body": "<p>I want to serialize a struct into CBOR and print it out, however I don't know how to validate that the printed value is correct. I used <a href=\"http://cbor.me\" rel=\"nofollow\">CBOR.me</a>, but every time I place the output in cbor.me it reports <code>Out of bytes to decode: 753 + 19 &gt; 753</code> where <code>753</code> is the number of bytes of CBOR provided, I get this error regardless of bytes. This happens regardless of whether I use <a href=\"https://pyfisch.github.io/cbor/serde_cbor/ser/fn.to_vec.html\" rel=\"nofollow\"><code>serde_cbor::to_vec</code></a>, or <a href=\"https://pyfisch.github.io/cbor/serde_cbor/ser/fn.to_vec_sd.html\" rel=\"nofollow\"><code>serde_cbor::to_vec_sd</code></a>.</p>\n\n<pre><code>#![feature(custom_derive, plugin)]\n#![plugin(serde_macros)]\n\nextern crate serde;\nextern crate serde_cbor;\n\n\n#[derive(Deserialize, Serialize)]\nstruct Points {\n    x: u8,\n    y: u8,\n}\n\n\nfn main() {\n    let points = Points {x: 1, y: 1};\n    let cbor = serde_cbor::to_vec(&amp;points);\n\n    for byte in cbor {\n        print!(\"{:x}\", byte);\n    }\n\n    println!(\"\");\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 0, "creation_date": 1463505588, "post_id": 37282009, "comment_id": 62090344, "body": "Did you placed <code>extern crate postgres;</code> in <code>lib.rs</code> or <code>main.rs</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1463553123, "post_id": 37283491, "comment_id": 62107647, "body": "One of the caveats here is that <code>use</code> is relative to the <code>root</code>, while other path is relative to <code>self</code>. This proves to be very confusing to new comers."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 3, "last_activity_date": 1463508836, "creation_date": 1463508836, "answer_id": 37283491, "question_id": 37282009, "link": "https://stackoverflow.com/questions/37282009/a-crate-is-exported-but-use-throws-compilation-errors/37283491#37283491", "title": "A crate is exported but &quot;use&quot; throws compilation errors", "body": "<p>While it is possible to put <code>extern crate</code> directives to any module, it is both more idiomatic and more convenient to put it to your <em>crate root</em>, usually <code>lib.rs</code> or <code>main.rs</code>. Then your <code>use</code> statements will work as they are now.</p>\n\n<p>The reason for this problem is that you have put <code>extern crate postgres</code> to one of submodules of the root crate:</p>\n\n<pre><code>mod submodule {\n    extern crate postgres;\n\n    use postgres::...;\n}\n</code></pre>\n\n<p>This means that the full path to <code>postgres</code> module would be <code>submodule::postgres</code>, not just <code>postgres</code> (remember, paths in <code>use</code> directives are by default absolute), so you should use either <code>use submodule::postgres::whatever;</code> or <code>use self::postgres::whatever;</code> (the latter form is an example of relative paths in <code>use</code> statement). However, as I said before, this is not idiomatic and should be avoided.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user266003"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 368, "favorite_count": 1, "accepted_answer_id": 37283491, "answer_count": 1, "score": 0, "last_activity_date": 1463927932, "creation_date": 1463503383, "last_edit_date": 1463927932, "question_id": 37282009, "link": "https://stackoverflow.com/questions/37282009/a-crate-is-exported-but-use-throws-compilation-errors", "title": "A crate is exported but &quot;use&quot; throws compilation errors", "body": "<p>In Cargo I have this:</p>\n\n<pre><code>postgres = \"0.11.7\"\n</code></pre>\n\n<p>And in a submodule *.rs</p>\n\n<pre><code>extern crate postgres;\n\nuse postgres::{Connection, Error, FromSql, SslMode};\nuse postgres::Result as PgResult;\n</code></pre>\n\n<p>And the compilation errors:</p>\n\n<pre><code>error: unresolved import `postgres::Connection`. Did you mean `self::postgres`? [E0432]\nunresolved import `postgres::Error`. Did you mean `self::postgres`? [E0432]\n\nerror: unresolved import `postgres::SslMode`. Did you mean `self::postgres`? [E0432]\n</code></pre>\n\n<p>And the similar ones.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463505265, "post_id": 37281981, "comment_id": 62090186, "body": "Can you tell me why you use <code>Error::description(err)</code>? I see this code a lot and it&#39;s really not idiomatic. I want to go find the source and correct it."}, {"owner": {"reputation": 2956, "user_id": 272689, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/d765f09f68f08a92a904571e7244fa87?s=128&d=identicon&r=PG", "display_name": "vimalloc", "link": "https://stackoverflow.com/users/272689/vimalloc"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463510833, "post_id": 37281981, "comment_id": 62093144, "body": "I was basing stuff from here: <a href=\"http://rustbyexample.com/std_misc/file/open.html\" rel=\"nofollow noreferrer\">rustbyexample.com/std_misc/file/open.html</a>. Would the idiomatic way be err.description()?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1513980460, "last_edit_date": 1513980460, "creation_date": 1463506565, "answer_id": 37282918, "question_id": 37281981, "link": "https://stackoverflow.com/questions/37281981/how-can-i-reduce-the-verbosity-of-matching-every-call-that-returns-a-result-or-o/37282918#37282918", "title": "How can I reduce the verbosity of matching every call that returns a Result or Option?", "body": "<p>You should peruse the <a href=\"http://doc.rust-lang.org/stable/book/error-handling.html\" rel=\"nofollow noreferrer\">error handling section of <em>The Rust Programming Language</em></a>. The easiest thing to do is to extract the core of the logic to another method and pervasively use <code>Result</code>.</p>\n\n<p>Become <strong>very familiar</strong> with the methods on <a href=\"http://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a> and <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a>. Methods like <code>map</code>, <code>map_err</code>, <code>ok_or</code>, are <em>extremely useful</em>. The lynchpin is the <code>?</code> operator (previously the <a href=\"http://doc.rust-lang.org/std/macro.try!.html\" rel=\"nofollow noreferrer\"><code>try!</code> macro</a>).</p>\n\n<pre><code>use std::env;\nuse std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\n\nextern crate toml;\n\nfn inner_main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let mut config_path = env::home_dir().ok_or(\"Could not find home directory\")?;\n\n    config_path.push(\".relay\");\n    config_path.set_extension(\"toml\");\n\n    let mut file = File::open(&amp;config_path)\n        .map_err(|e| format!(\"Could not open {}: {}\", config_path.display(), e))?;\n\n    let mut config_str = String::new();\n    file.read_to_string(&amp;mut config_str)\n        .map_err(|e| format!(\"Couldn't read {}: {}\", config_path.display(), e))?;\n\n    let config: toml::Value = config_str\n        .parse()\n        .map_err(|e| format!(\"Error parsing config file: {}\", e))?;\n\n    let relay = config.get(\"relay\").ok_or(\"[relay] block not found\")?;\n\n    let host = relay\n        .get(\"host\")\n        .ok_or(\"'host' option not found under [relay] block\")?;\n\n    let host = host.as_str()\n        .map(ToString::to_string)\n        .ok_or(\"'host' option is not a valid string\")?;\n\n    println!(\"{}\", host);\n\n    Ok(())\n}\n\nfn main() {\n    inner_main().expect(\"Error\")\n}\n</code></pre>\n\n<p>Check out crates like <a href=\"https://github.com/tailhook/quick-error\" rel=\"nofollow noreferrer\">quick-error</a> that allow you to easily make your own error enumerations.</p>\n"}], "owner": {"reputation": 2956, "user_id": 272689, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/d765f09f68f08a92a904571e7244fa87?s=128&d=identicon&r=PG", "display_name": "vimalloc", "link": "https://stackoverflow.com/users/272689/vimalloc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 0, "accepted_answer_id": 37282918, "answer_count": 1, "score": 2, "last_activity_date": 1513980460, "creation_date": 1463503260, "last_edit_date": 1463505038, "question_id": 37281981, "link": "https://stackoverflow.com/questions/37281981/how-can-i-reduce-the-verbosity-of-matching-every-call-that-returns-a-result-or-o", "title": "How can I reduce the verbosity of matching every call that returns a Result or Option?", "body": "<p>I have a case where I need to pull some data out of a TOML file. It's working just fine, but the vast majority of the code is matching <code>Result</code>s or <code>Option</code>s.</p>\n\n<pre><code>use std::env;\nuse std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::PathBuf;\nuse std::process::exit;\n\nextern crate toml;\n\nfn main() {\n    // Get the path of the config file\n    let homedir = match env::home_dir() {\n        Some(path) =&gt; path,\n        None       =&gt; {\n            println!(\"Error: Could not find home directory\");\n            exit(1);\n        }\n    };\n    let mut config_path = PathBuf::from(homedir);\n    config_path.push(\".relay\");\n    config_path.set_extension(\"toml\");\n\n    // Open the config file\n    let mut file = match File::open(&amp;config_path) {\n        Ok(file) =&gt; file,\n        Err(why) =&gt; {\n            println!(\"Error opening {}: {}\", config_path.display(),\n                                             Error::description(&amp;why));\n            exit(1);\n        },\n    };\n\n    // Read the contents of the config file into memory\n    let mut config_str = String::new();\n    match file.read_to_string(&amp;mut config_str) {\n        Ok(_)    =&gt; (),\n        Err(why) =&gt; {\n            println!(\"Couldn't read {}: {}\", config_path.display(),\n                                             Error::description(&amp;why));\n            exit(1);\n        }\n    }\n\n    // Parse the toml\n    let config: toml::Value = match config_str.parse() {\n        Ok(config) =&gt; config,\n        Err(errs)   =&gt; {\n            println!(\"Error Parsing config file:\");\n            for err in &amp;errs {\n                println!(\"  {}\", Error::description(err));\n            }\n            exit(1);\n        }\n    };\n\n    let host = match config.lookup(\"relay.host\") {\n        Some(host) =&gt; match host.as_str() {\n            Some(s) =&gt; s.to_string(),\n            None    =&gt; {\n                println!(\"Error: 'host' option is not a valid string\");\n                exit(1);\n            }\n        },\n        None       =&gt; {\n            println!(\"Error: 'host' option not found under [relay] block\");\n            exit(1);\n        }\n    };\n    println!(\"{}\", host);\n}\n</code></pre>\n\n<p>This seems quite verbose, and as I start pulling more data out of that files it's going to get worse. Is there something I'm missing that would make this cleaner? I know I could replace most of those match statements with <code>unwrap()</code> or <code>expect()</code>, but I would like to print some prettier error messages if something goes wrong, and avoid stuff like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread '&lt;main&gt;' panicked at '&lt;actual error message&gt;', ...\nnote: Run with `RUST_BACKTRACE=1` for a backtrace\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1465982307, "post_id": 37277027, "comment_id": 63123995, "body": "Is i686-unknown-linux-gnu working ?"}, {"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "reply_to_user": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1466072225, "post_id": 37277027, "comment_id": 63170514, "body": "As far as I know, it will not statically link libc."}], "answers": [{"comments": [{"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1468740791, "post_id": 37883870, "comment_id": 64244574, "body": "I did try it (with rust 1.10 as stable), but it created a dynamically linked binary. Am I missing something ? The compilation was OK, but when I ran ldd on it I saw it was dynamically linked."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1468865732, "post_id": 37883870, "comment_id": 64292291, "body": "@AndreiOprisan Updated the answer."}, {"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1469006329, "post_id": 37883870, "comment_id": 64356920, "body": "For a freshly generated project it works as you said, for a project with more dependencies it links dynamically. Should I paste the toml file ?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1469013184, "post_id": 37883870, "comment_id": 64361437, "body": "Should I paste the toml file? Yes, please."}, {"owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "edited": false, "score": 0, "creation_date": 1469100959, "post_id": 37883870, "comment_id": 64404974, "body": "Here is a minimal project which has the issue: <a href=\"https://github.com/aoprisan/static-rust\" rel=\"nofollow noreferrer\">github.com/aoprisan/static-rust</a> . I will try to remove them one by one to find the culprit."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 8, "last_activity_date": 1468865691, "last_edit_date": 1468865691, "creation_date": 1466172955, "answer_id": 37883870, "question_id": 37277027, "link": "https://stackoverflow.com/questions/37277027/how-to-build-a-32bit-static-binary-with-rust-and-rustup/37883870#37883870", "title": "How to build a 32bit static binary with Rust and rustup?", "body": "<p>The std binaries for <code>i686-unknown-linux-musl</code> is only available on <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#misc\" rel=\"noreferrer\">Rust 1.10</a> or newer. You can create a static binary for <code>i686</code> with the following commands:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup default stable # stable must at least 1.10\n$ rustup target add i686-unknown-linux-musl\n$ cargo build --target i686-unknown-linux-musl\n</code></pre>\n\n<p>The generated binaries can be found on <code>target/i686-unknown-linux-musl/debug/</code> or <code>target/i686-unknown-linux-musl/release/</code>.</p>\n\n<p>We can check that the generated binary is static linked with <code>ldd</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ldd target/i686-unknown-linux-musl/debug/main\nnot a dynamic executable\n</code></pre>\n"}], "owner": {"reputation": 388, "user_id": 318266, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/62b11eb300fb7aee53c229b0ffaa0bd5?s=128&d=identicon&r=PG", "display_name": "Andrei Oprisan", "link": "https://stackoverflow.com/users/318266/andrei-oprisan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3867, "favorite_count": 0, "accepted_answer_id": 37883870, "answer_count": 1, "score": 9, "last_activity_date": 1468865691, "creation_date": 1463490245, "last_edit_date": 1463490387, "question_id": 37277027, "link": "https://stackoverflow.com/questions/37277027/how-to-build-a-32bit-static-binary-with-rust-and-rustup", "title": "How to build a 32bit static binary with Rust and rustup?", "body": "<p>Using <a href=\"http://hermanradtke.com/2016/05/16/creating-a-basic-webservice-in-rust.html\"><em>Creating a basic webservice in Rust</em></a> and <a href=\"http://blog.rust-lang.org/2016/05/13/rustup.html\"><em>Taking Rust everywhere with rustup</em></a> as documentation, I have managed to successfully compile a 64 bit static binary with Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup target add x86_64-unknown-linux-musl\ncargo build --target=x86_64-unknown-linux-musl\n</code></pre>\n\n<p>But I can't seem to find out how to build a 32bit static binary. </p>\n\n<p>I did find a <code>i686-unknown-linux-musl</code> target when running <code>rustc --print target-list</code>, only to find out it is not available when running <code>rustup target list</code>. </p>\n\n<p>Am I missing something something or it is not possible yet?</p>\n"}, {"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 1, "creation_date": 1463466180, "post_id": 37267769, "comment_id": 62063303, "body": "Have you got it working in <code>C</code> first?"}, {"owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1463467761, "post_id": 37267769, "comment_id": 62064122, "body": "Do you mean C the programming language? I&#39;ve not."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 2, "creation_date": 1463472013, "post_id": 37267769, "comment_id": 62066726, "body": "I suggest you read the API documents of LLVM, and sometimes the source for the meaning of the return results: <a href=\"http://llvm.org/docs/doxygen/html/TargetMachineC_8cpp.html#ad9195990094524f9a0cfc80ef213e675\" rel=\"nofollow noreferrer\">llvm.org/docs/doxygen/html/&hellip;</a>  This may require some C/C++ knowledge."}, {"owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1463473831, "post_id": 37267769, "comment_id": 62067862, "body": "Ok, I think reading C/C++ isn&#39;t a problem for me."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1463476875, "post_id": 37267769, "comment_id": 62069815, "body": "make sure your llvm is compiled with assertions, it will make your life much easier"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1463490132, "last_edit_date": 1495535314, "creation_date": 1463490132, "answer_id": 37276990, "question_id": 37267769, "link": "https://stackoverflow.com/questions/37267769/how-can-i-figure-out-why-a-call-to-llvmtargetmachineemittofile-fails-when-called/37276990#37276990", "title": "How can I figure out why a call to LLVMTargetMachineEmitToFile fails when called using llvm-sys?", "body": "<p>As commenters have already said, to do what you want to do (write a compiler using LLVM), you are going to need to be able to read (and probably write) at the very least C and maybe C++.</p>\n\n<p>Even though you are compiling code with the Rust compiler, you aren't really writing any Rust yet. Your <em>entire</em> program is wrapped in <code>unsafe</code> blocks because you are calling the C functions exposed by LLVM (which is written in C++). This may be why some commenters are asking if you have gotten your code to work in C first.</p>\n\n<p>As in <a href=\"https://stackoverflow.com/q/37256726/155423\">your other question</a>, you are still calling the LLVM methods incorrectly. In this case, review <a href=\"http://llvm.org/docs/doxygen/html/TargetMachineC_8cpp.html#ad9195990094524f9a0cfc80ef213e675\" rel=\"nofollow noreferrer\">the documentation for <code>LLVMTargetMachineEmitToFile</code></a>:</p>\n\n<blockquote>\n<pre><code>LLVMBool LLVMTargetMachineEmitToFile(LLVMTargetMachineRef T,\n                                     LLVMModuleRef M,\n                                     char *Filename,\n                                     LLVMCodeGenFileType codegen,\n                                     char **ErrorMessage)\n</code></pre>\n  \n  <p>Returns any error in ErrorMessage. Use LLVMDisposeMessage to dispose the message.</p>\n</blockquote>\n\n<p>The method itself will tell you what is wrong, but you have to give it a place to store the error message. You should <strong>not</strong> provide an error string to it. I'm pretty sure that the current code is likely to generate some exciting memory errors when it tries to write to the string literal.</p>\n\n<p>If I rewrite your code to use the error message:</p>\n\n<pre><code>extern crate llvm_sys;\n\nuse llvm_sys::*;\nuse llvm_sys::prelude::*;\nuse llvm_sys::core::*;\n\nuse std::ptr;\nuse std::ffi::{CStr, CString};\n\npub fn emit(module: LLVMModuleRef) {\n    let cpu = CString::new(\"x86-64\").expect(\"invalid cpu\");\n    let feature = CString::new(\"\").expect(\"invalid feature\");\n    let output_file = CString::new(\"/tmp/output.o\").expect(\"invalid file\");\n\n    unsafe {\n        use llvm_sys::target::*;\n        use llvm_sys::target_machine::*;\n        let triple = LLVMGetDefaultTargetTriple();\n        LLVM_InitializeNativeTarget();\n        let target = LLVMGetFirstTarget();\n        let opt_level = LLVMCodeGenOptLevel::LLVMCodeGenLevelNone;\n        let reloc_mode = LLVMRelocMode::LLVMRelocDefault;\n        let code_model = LLVMCodeModel::LLVMCodeModelDefault;\n        let target_machine = LLVMCreateTargetMachine(target, triple, cpu.as_ptr(), feature.as_ptr(), opt_level, reloc_mode, code_model);\n        let file_type = LLVMCodeGenFileType::LLVMObjectFile;\n\n        let mut error_str = ptr::null_mut();\n        let res = LLVMTargetMachineEmitToFile(target_machine, module, output_file.as_ptr() as *mut i8, file_type, &amp;mut error_str);\n        if res == 1 {\n            let x = CStr::from_ptr(error_str);\n            panic!(\"It failed! {:?}\", x);\n            // TODO: Use LLVMDisposeMessage here\n        }\n    }\n}\n\nfn main() {\n    unsafe {\n        let module = LLVMModuleCreateWithName(\"Main\\0\".as_ptr() as *const i8);\n        emit(module);\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>TargetMachine can't emit a file of this type</p>\n</blockquote>\n\n<p>So that's your problem.</p>\n\n<p>Rust-wise, you may want to wrap up the work needed to handle the silly <code>LLVMBool</code> so you can reuse it. One way would be:</p>\n\n<pre><code>fn llvm_bool&lt;F&gt;(f: F) -&gt; Result&lt;(), String&gt;\n    where F: FnOnce(&amp;mut *mut i8) -&gt; i32\n{\n    let mut error_str = ptr::null_mut();\n    let res = f(&amp;mut error_str);\n    if res == 1 {\n        let err = unsafe { CStr::from_ptr(error_str) };\n        Err(err.to_string_lossy().into_owned())\n        //LLVMDisposeMessage(error_str);\n    } else {\n        Ok(())\n    }\n}\n\n// later\n\nllvm_bool(|error_str| LLVMTargetMachineEmitToFile(target_machine, module, output_file.as_ptr() as *mut i8, file_type, error_str)).expect(\"Couldn't output\");\n</code></pre>\n"}], "owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 501, "favorite_count": 0, "accepted_answer_id": 37276990, "answer_count": 1, "score": -1, "last_activity_date": 1463490132, "creation_date": 1463462682, "last_edit_date": 1463489547, "question_id": 37267769, "link": "https://stackoverflow.com/questions/37267769/how-can-i-figure-out-why-a-call-to-llvmtargetmachineemittofile-fails-when-called", "title": "How can I figure out why a call to LLVMTargetMachineEmitToFile fails when called using llvm-sys?", "body": "<pre><code>extern crate llvm_sys;\n\nuse llvm_sys::*;\nuse llvm_sys::prelude::*;\nuse llvm_sys::core::*;\n\npub fn emit(module: LLVMModuleRef) {\n    unsafe {\n        use llvm_sys::target::*;\n        use llvm_sys::target_machine::*;\n        let triple = LLVMGetDefaultTargetTriple();\n        LLVM_InitializeNativeTarget();\n        let target = LLVMGetFirstTarget();\n        let cpu = \"x86-64\\0\".as_ptr() as *const i8;\n        let feature = \"\\0\".as_ptr() as *const i8;\n        let opt_level = LLVMCodeGenOptLevel::LLVMCodeGenLevelNone;\n        let reloc_mode = LLVMRelocMode::LLVMRelocDefault;\n        let code_model = LLVMCodeModel::LLVMCodeModelDefault;\n        let target_machine = LLVMCreateTargetMachine(target, triple, cpu, feature, opt_level, reloc_mode, code_model);\n        let file_type = LLVMCodeGenFileType::LLVMObjectFile;\n        LLVMTargetMachineEmitToFile(target_machine, module, \"/Users/andyshiue/Desktop/main.o\\0\".as_ptr() as *mut i8, file_type, [\"Cannot generate file.\\0\".as_ptr()].as_mut_ptr() as *mut *mut i8);\n    }\n}\n</code></pre>\n\n<p>I'm writing a toy compiler and I want to generate object files, but the file LLVM outputs is empty.</p>\n\n<p>I found that <code>LLVMTargetMachineEmitToFile</code> returns 1, which means something I'm doing is wrong, but what am I doing wrong?</p>\n\n<p>It would be better if I can know how I can know what is wrong. Is there any way I can get some error message? I don't have any experience in C/C++.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 2, "creation_date": 1463465798, "post_id": 37267201, "comment_id": 62063132, "body": "If a limited lifetime item is included in the struct, the struct also has limited lifetime."}, {"owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1463495368, "post_id": 37267201, "comment_id": 62083366, "body": "@WiSaGaN What said anything about including a limited lifetime item in the struct? My first approach was to include an item that lives exactly as long as the struct would otherwise. But I think there&#39;s no way to express that lifetime, thus the self-referencing struct being impossible. Anyway, I&#39;m happy to find another way, as I said in the question..."}, {"owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1463495868, "post_id": 37267201, "comment_id": 62083769, "body": "Well, except that&#39;s not exactly true. At least in C++ terms, a class&#39;s members are constructed in order then destructed in inverse order, and I had a later member which refers to an earlier member. That&#39;s a safe thing to do, and I&#39;d be happy to do them in two separate heap allocations if that&#39;d help. But it seems like the lifetime still has to be passed through regardless..."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 5, "last_activity_date": 1463471073, "creation_date": 1463471073, "answer_id": 37270082, "question_id": 37267201, "link": "https://stackoverflow.com/questions/37267201/vecmytrait-without-n-heap-allocations/37270082#37270082", "title": "Vec&lt;MyTrait&gt; without N heap allocations?", "body": "<p>You can add a <code>User</code> variant to your <code>BasicSlice</code> enum, which takes a <code>Box&lt;SliceInfo&gt;</code>. This way only the specialized case of users will take the extra allocation, while the normal path is optimized.</p>\n"}], "owner": {"reputation": 1982, "user_id": 23584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7304771f4f4f40784b90d6d4f0855654?s=128&d=identicon&r=PG", "display_name": "Scott Lamb", "link": "https://stackoverflow.com/users/23584/scott-lamb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 1, "accepted_answer_id": 37270082, "answer_count": 1, "score": 2, "last_activity_date": 1463471073, "creation_date": 1463459679, "last_edit_date": 1495542633, "question_id": 37267201, "link": "https://stackoverflow.com/questions/37267201/vecmytrait-without-n-heap-allocations", "title": "Vec&lt;MyTrait&gt; without N heap allocations?", "body": "<p>I'm trying to port some C++ code to Rust. It composes a virtual (.mp4) file from a few kinds of slices (string reference, lazy-evaluated string reference, part of a physical file) and serves HTTP requests based on the result. (If you're curious, see <a href=\"https://github.com/scottlamb/moonfire-nvr/blob/master/src/mp4.cc\" rel=\"nofollow noreferrer\">Mp4File</a> which takes advantage of the <code>FileSlice</code> interface and its concrete implementations in <a href=\"https://github.com/scottlamb/moonfire-nvr/blob/master/src/http.h\" rel=\"nofollow noreferrer\">http.h</a>.) </p>\n\n<p>Here's the problem: I want require as few heap allocations as possible. Let's say I have a few implementations of <code>resource::Slice</code> that I can hopefully figure out on my own. Then I want to make the one that composes them all:</p>\n\n<pre><code>pub trait Slice : Send + Sync {\n    /// Returns the length of the slice in bytes.\n    fn len(&amp;self) -&gt; u64;\n\n    /// Writes bytes indicated by `range` to `out.`\n    fn write_to(&amp;self, range: &amp;ByteRange,\n                out: &amp;mut io::Write) -&gt; io::Result&lt;()&gt;;\n}\n\n// (used below)\nstruct SliceInfo&lt;'a&gt; {\n    range: ByteRange,\n    slice: &amp;'a Slice,\n}\n\n/// A `Slice` composed of other `Slice`s.    \npub struct Slices&lt;'a&gt; {\n    len: u64,\n    slices: Vec&lt;SliceInfo&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Slices&lt;'a&gt; {\n    pub fn new() -&gt; Slices&lt;'a&gt; { ... }\n    pub fn append(&amp;mut self, slice: &amp;'a resource::Slice) { ... }\n}\n\nimpl&lt;'a&gt; Slice for Slices&lt;'a&gt; { ... }\n</code></pre>\n\n<p>and use them to append lots and lots of slices with as few heap allocations as possible. Simplified, something like this:</p>\n\n<pre><code>struct ThingUsedWithinMp4Resource {\n    slice_a: resource::LazySlice,\n    slice_b: resource::LazySlice,\n    slice_c: resource::LazySlice,\n    slice_d: resource::FileSlice,\n}\n\nstruct Mp4Resource {\n    slice_a: resource::StringSlice,\n    slice_b: resource::LazySlice,\n    slice_c: resource::StringSlice,\n    slice_d: resource::LazySlice,\n    things: Vec&lt;ThingUsedWithinMp4Resource&gt;,\n    slices: resource::Slices\n}\n\nimpl Mp4Resource {\n    fn new() {\n        let mut f = Mp4Resource{slice_a: ...,\n                                slice_b: ...,\n                                slice_c: ...,\n                                slices: resource::Slices::new()};\n        // ...fill `things` with hundreds of things...\n        slices.append(&amp;f.slice_a);\n        for thing in f.things { slices.append(&amp;thing.slice_a); }\n        slices.append(&amp;f.slice_b);\n        for thing in f.things { slices.append(&amp;thing.slice_b); }\n        slices.append(&amp;f.slice_c);\n        for thing in f.things { slices.append(&amp;thing.slice_c); }\n        slices.append(&amp;f.slice_d);\n        for thing in f.things { slices.append(&amp;thing.slice_d); }\n        f;\n    }\n}\n</code></pre>\n\n<p>but this isn't working. The append lines cause errors \"f.slice_* does not live long enough\", \"reference must be valid for the lifetime 'a as defined on the block at ...\", \"...but borrowed value is only valid for the block suffix following statement\". I think this is similar to <a href=\"https://stackoverflow.com/questions/32579518/rust-lifetime-error-with-self-referencing-struct\">this question</a> about the self-referencing struct. That's basically what this is, with more indirection. And apparently it's impossible.</p>\n\n<p>So what can I do instead?</p>\n\n<p>I think I'd be happy to give ownership to the <code>resource::Slices</code> in <code>append</code>, but I can't put a <code>resource::Slice</code> in the <code>SliceInfo</code> used in <code>Vec&lt;SliceInfo&gt;</code> because <code>resource::Slice</code> is a trait, and traits are unsized. I could do a <code>Box&lt;resource::Slice&gt;</code> instead but that means a separate heap allocation for each slice. I'd like to avoid that. (There can be thousands of slices per Mp4Resource.) </p>\n\n<p>I'm thinking of doing an enum, something like:</p>\n\n<pre><code>enum BasicSlice {\n    String(StringSlice),\n    Lazy(LazySlice),\n    File(FileSlice)\n};\n</code></pre>\n\n<p>and using that in the <code>SliceInfo</code>. I think I can make this work. But it definitely limits the utility of my <code>resource::Slices</code> class. I want to allow it to be used easily in situations I didn't anticipate, preferably without having to define a new enum each time.</p>\n\n<p>Any other options?</p>\n"}, {"tags": ["rust", "match", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463486416, "post_id": 37267060, "comment_id": 62076447, "body": "Please completely read the error messages that the compiler provides. The message says &quot;help: to prevent the move, use <code>ref c1</code> or <code>ref mut c1</code> to capture value by reference&quot;. If you find the error messages too confusing, then <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">file an issue</a> describing what better phrasing or presentation of the errors would have made it clearer."}, {"owner": {"reputation": 381, "user_id": 5133242, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/7joIv.jpg?s=128&g=1", "display_name": "Liam", "link": "https://stackoverflow.com/users/5133242/liam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1463542141, "post_id": 37267060, "comment_id": 62103920, "body": "@Shepmaster I spent about 2 hours trying to figure this out. I knew it had to be something simple, but when I read <code>ref c1</code>, I, being newish to Rust, Immediately tried <code>&amp;c1</code>. Now that it&#39;s been mentioned, I do remember reading about <code>ref</code> in the documentation when I first went through it, but I recall not seeing any context where it was different from <code>&amp;</code> and promptly put it out of mind. This is one of those cases where I really didn&#39;t even know the right question to ask. Now that its been explained, I&#39;m kicking myself because the error message was perfectly helpful, I was just being dumb."}], "answers": [{"comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1464766747, "post_id": 37268185, "comment_id": 62612407, "body": "@Liam do you feel that this or the other answers your question? If so, could you accept one of the answer?"}], "tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 4, "last_activity_date": 1463464522, "creation_date": 1463464522, "answer_id": 37268185, "question_id": 37267060, "link": "https://stackoverflow.com/questions/37267060/reference-to-parameters-within-an-enum/37268185#37268185", "title": "Reference to parameters within an enum", "body": "<p>Change</p>\n\n<pre><code>....\nShape::Circle(c1) =&gt; ...\n....\nShape::Circle(c2) =&gt; ...\n....\n</code></pre>\n\n<p>to </p>\n\n<pre><code>....\nShape::Circle(ref c1) =&gt; ...\n....\nShape::Circle(ref c2) =&gt; ...\n....\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=7bdd77b6d46f05c71c3f76cd247d8381&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Playground</a></p>\n\n<p><code>let ref x = y;</code> is basically the pattern matching version of <code>let x = &amp;y;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": false, "score": 2, "last_activity_date": 1463481715, "last_edit_date": 1495542700, "creation_date": 1463481715, "answer_id": 37273833, "question_id": 37267060, "link": "https://stackoverflow.com/questions/37267060/reference-to-parameters-within-an-enum/37273833#37273833", "title": "Reference to parameters within an enum", "body": "<p>As pointed by <a href=\"https://stackoverflow.com/a/37268185/5189607\">WiSaGan</a>, you must use <code>ref</code> pattern to create a reference to the contained value. You can also simplify the code matching against the two shapes simultaneously:</p>\n\n<pre><code>impl Cookie {\n    fn has_same_radius(&amp;self, other: &amp;Cookie) -&gt; bool {\n        match (&amp;self.shape, &amp;other.shape) {\n            (&amp;Shape::Circle(ref c1), &amp;Shape::Circle(ref c2))  =&gt; c1.r == c2.r,\n            _ =&gt; false,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 381, "user_id": 5133242, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/7joIv.jpg?s=128&g=1", "display_name": "Liam", "link": "https://stackoverflow.com/users/5133242/liam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 888, "favorite_count": 1, "accepted_answer_id": 37268185, "answer_count": 2, "score": 3, "last_activity_date": 1463493379, "creation_date": 1463458831, "last_edit_date": 1463493379, "question_id": 37267060, "link": "https://stackoverflow.com/questions/37267060/reference-to-parameters-within-an-enum", "title": "Reference to parameters within an enum", "body": "<p>The code below gives the error \"cannot move out of borrowed content\". I know that there are already a lot of questions on here about this. I think that everyone using Rust finds themselves here at one point, trying to figure out exactly what is going on with ownership. I think I know what's going on here and how to fix it, I just don't know how to use a reference in this particular case. If there is a more idiomatic way to accomplish what I am trying, please let me know in the comments. </p>\n\n<p>I can see where I'm trying to take ownership, but I'm unsure how to use a reference instead.</p>\n\n<p>Let's look at a somewhat minimal example:</p>\n\n<pre><code>/* I define two shape structs. The main point here is that they\n are not default copyable, unlike most primitive types */\n\nstruct Circle {\n   center_x: f64,\n   center_y: f64,\n   r: f64,\n}\n\nstruct Square {\n    center_x: f64,\n    center_y: f64,\n    length: f64,\n}\n\n/* this enum will be a container for shapes because we don't know\n   which shape we might need. */\n\nenum Shape {\n    // these are scoped differently, so it's okay.\n    Circle(Circle),\n    Square(Square),\n}\n\n/* I'm making cookies, each cookie has a shape */\nstruct Cookie {\n    shape: Shape,\n}\n\n/* All of the above was setup, here is where we find errors */   \n\nimpl Cookie {\n\n    /* checks if two cookies have the same radius. squares -&gt; false */\n\n    fn has_same_radius(&amp;self, other_cookie: &amp;Cookie) -&gt; bool {\n    // fn has_same_radius(self, other_cookie: Cookie) -&gt; bool {\n\n    /* swapping the above two lines will remedy the error, \n       but I don't want this function to take ownership of either */\n\n        match self.shape {\n\n            /* As soon as I declare c1, I'm taking ownership of self.shape\n               and therefore self as well. This is in spite of the fact\n               that I never plan to alter anything. \n               How can I simply use a reference to c1&gt; */\n\n            Shape::Circle(c1) =&gt;  match other_cookie.shape {\n\n                /* same thing here with c2 */\n                Shape::Circle(c2) =&gt; {\n                    if c2.r == c1.r {\n                        return true;\n                    }\n                }\n                Shape::Square(_) =&gt; return false,\n\n            },\n            Shape::Square(_) =&gt; return false,\n        }\n        return false;\n\n    }\n\n}\n</code></pre>\n\n<p>When I match on the <code>Shape</code> enum, I only want to reference the parameter encapsulated in <code>Shape</code>, but since I am not using a reference, I am trying to take ownership of the entire Cookie struct. </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1513221974, "last_edit_date": 1513221974, "creation_date": 1463443096, "answer_id": 37265024, "question_id": 37264396, "link": "https://stackoverflow.com/questions/37264396/borrowed-value-does-not-live-long-enough-seems-to-blame-the-wrong-thing/37265024#37265024", "title": "&quot;borrowed value does not live long enough&quot; seems to blame the wrong thing", "body": "<blockquote>\n  <p>is pointing the blame at <code>l</code></p>\n</blockquote>\n\n<p>It's not, really. Review the error message again:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>     for w in l.unwrap().split_whitespace() {\n              ---------- temporary value created here\n</code></pre>\n\n<p>The error marker is pointing to the call of <code>unwrap</code> on <code>l</code>.</p>\n\n<blockquote>\n  <p>when the issue is <code>w</code></p>\n</blockquote>\n\n<p>It's not, really. <code>l</code> is of type <code>Result&lt;String&gt;</code>. When you call <code>unwrap</code>, you get a <code>String</code>, and then <code>split_whitespace</code> returns references to that string. These references live only as long as the string, but your code tries to put them into a hashmap that will live longer than the string. The problem is that the <em><code>l.unwrap()</code></em> doesn't live long enough, and <code>w</code> is just a reference to the thing that doesn't live long enough.</p>\n\n<p>Conceptually, it's the same problem as this code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut counts = HashMap::new();\n\n    {\n        let s = String::from(\"hello world\");\n        counts.insert(&amp;s, 0);\n    }\n\n    println!(\"{:?}\", counts);\n}\n</code></pre>\n\n<p>Which also points to <code>s</code> and says it doesn't live long enough (because it doesn't).</p>\n\n<p>The correct solution is to convert each word into an owned <code>String</code> which the <code>HashMap</code> can then hold:</p>\n\n<pre><code>for l in reader.lines() {\n    for w in l.unwrap().split_whitespace() {\n        counts.entry(w.to_string()).or_insert(0) += 1;\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": false, "score": 5, "last_activity_date": 1463443559, "last_edit_date": 1463443559, "creation_date": 1463443227, "answer_id": 37265038, "question_id": 37264396, "link": "https://stackoverflow.com/questions/37264396/borrowed-value-does-not-live-long-enough-seems-to-blame-the-wrong-thing/37265038#37265038", "title": "&quot;borrowed value does not live long enough&quot; seems to blame the wrong thing", "body": "<p>The error is both right and wrong here. <code>l</code> is blamed, because <code>w</code> lives only as long as <code>l</code> (and <code>l.unwrap()</code>) and <code>l</code> doesn't live long enough to put it in hashmap in a higher scope.</p>\n\n<p>In practice, you just have to look at what other variables depend on the lifetime of a variable the compiler complains about.</p>\n\n<p>But Rust is also working lately on improving error reporting, so I'd <a href=\"https://github.com/rust-lang/rust/\" rel=\"nofollow\">raise this case as potential bug</a>.</p>\n"}], "owner": {"reputation": 6960, "user_id": 79849, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5f986018993d9f078927fe29ee912cf2?s=128&d=identicon&r=PG", "display_name": "cflewis", "link": "https://stackoverflow.com/users/79849/cflewis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1277, "favorite_count": 2, "accepted_answer_id": 37265024, "answer_count": 2, "score": 5, "last_activity_date": 1513221974, "creation_date": 1463438522, "last_edit_date": 1513221886, "question_id": 37264396, "link": "https://stackoverflow.com/questions/37264396/borrowed-value-does-not-live-long-enough-seems-to-blame-the-wrong-thing", "title": "&quot;borrowed value does not live long enough&quot; seems to blame the wrong thing", "body": "<p>I am counting the number of times a word appears in Macbeth:</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::fs::File;\nuse std::collections::HashMap;\n\nfn main() {\n    let f = File::open(\"macbeth.txt\").unwrap();\n    let reader = BufReader::new(f);\n    let mut counts = HashMap::new();\n\n    for l in reader.lines() {\n        for w in l.unwrap().split_whitespace() {\n            let count = counts.entry(w).or_insert(0);\n            *count += 1;\n        }\n    }\n\n    println!(\"{:?}\", counts);\n}\n</code></pre>\n\n<p>Rust barfs on this, saying:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:14:9\n   |\n11 |         for w in l.unwrap().split_whitespace() {\n   |                  ---------- temporary value created here\n...\n14 |         }\n   |         ^ temporary value dropped here while still borrowed\n...\n18 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>The actual problem is that <code>w</code> is a reference, and so changing it to <code>w.to_string()</code> solves it. I don't get why the Rust compiler is pointing the blame at <code>l</code>, when the issue is <code>w</code>. How am I supposed to infer that <code>w</code> is the problem here?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 4, "last_activity_date": 1463415980, "creation_date": 1463415980, "answer_id": 37258709, "question_id": 37258508, "link": "https://stackoverflow.com/questions/37258508/unexpected-t-vs-t-as-type-parameter-in-rust/37258709#37258709", "title": "Unexpected T vs &amp;T as type parameter in Rust", "body": "<p>The problem seem to be here</p>\n\n<pre><code>let connected_nodes = explore_from(&amp;root, &amp;graph);\n</code></pre>\n\n<p><code>untested_nodes.iter().next()</code> returns <code>Option&lt;&amp;T&gt;</code>, so the match <code>Some(root)</code> makes <code>root: &amp;T</code>. This implies that <code>&amp;root</code> is <code>&amp;&amp;T</code>, and the inferred <code>T</code> in <code>explore_from</code> is <code>&amp;T</code> (<code>T</code> of <code>reducer</code>). I expect that removing the reference from <code>root</code> fix this:</p>\n\n<pre><code>let connected_nodes = explore_from(root, &amp;graph);\n</code></pre>\n"}], "owner": {"reputation": 594, "user_id": 1443481, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4dd92d46e793967128399d3af5357589?s=128&d=identicon&r=PG", "display_name": "Stuart", "link": "https://stackoverflow.com/users/1443481/stuart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 828, "favorite_count": 0, "accepted_answer_id": 37258709, "answer_count": 1, "score": 1, "last_activity_date": 1463415980, "creation_date": 1463415354, "question_id": 37258508, "link": "https://stackoverflow.com/questions/37258508/unexpected-t-vs-t-as-type-parameter-in-rust", "title": "Unexpected T vs &amp;T as type parameter in Rust", "body": "<p>I'm genericising a <code>Graph</code> that I wrote. Current signature is </p>\n\n<pre><code>#[derive(Debug)]\npub struct Graph&lt;T: Clone + Hash + Eq&gt; {\n    nodes: HashMap&lt;T, Node&lt;T&gt;&gt;,\n    edges: HashMap&lt;T, Vec&lt;Edge&lt;T&gt;&gt;&gt;\n}\n\n#[derive(PartialEq, Debug)]\npub struct Node&lt;T: Clone + Hash + Eq&gt; {\n    pub id: T,\n    pub x: f64,\n    pub y: f64\n}\n\n#[derive(PartialEq, Debug)]\npub struct Edge&lt;T: Clone + Hash + Eq&gt; {\n    pub id: T,\n    pub from_id: T,\n    pub to_id: T,\n    pub weight: i64\n}\n</code></pre>\n\n<p>I'm using it in a specific function and the calls to other functions are failing to compile.</p>\n\n<p>First, the use:</p>\n\n<pre><code>fn reducer&lt;T&gt;(graph: Graph&lt;T&gt;, untested_nodes: HashSet&lt;T&gt;, mut results: Vec&lt;HashSet&lt;T&gt;&gt;) -&gt; Graph&lt;T&gt;\n   where T: Clone + Hash + Eq {\n    match untested_nodes.iter().next() {\n        None =&gt; {\n            collapsed_graph(&amp;graph, &amp;results)\n        }\n        Some(root) =&gt; {\n            let connected_nodes = explore_from(&amp;root, &amp;graph);\n            let difference = untested_nodes.difference(&amp;connected_nodes)\n                                           .cloned()\n                                           .collect();\n            results.push(connected_nodes);\n            reducer(graph,\n                    difference,\n                    results\n                    )\n        }\n    }\n}\n</code></pre>\n\n<p>The signature of <code>explore_from</code></p>\n\n<pre><code>fn explore_from&lt;T: Clone + Hash + Eq&gt;(root: &amp;T, graph: &amp;Graph&lt;T&gt;) -&gt; HashSet&lt;T&gt; {\n</code></pre>\n\n<p>The compiler error:</p>\n\n<pre><code>   Compiling efficient_route_planning v0.1.0 (file:///Users/stuart/coding/efficient_route_planning)\nsrc/connected_component.rs:19:55: 19:61 error: mismatched types:\n expected `&amp;weighted_graph::Graph&lt;&amp;T&gt;`,\n    found `&amp;weighted_graph::Graph&lt;T&gt;`\n(expected &amp;-ptr,\n    found type parameter) [E0308]\nsrc/connected_component.rs:19             let connected_nodes = explore_from(&amp;root, &amp;graph);\n                                                                                    ^~~~~~\nsrc/connected_component.rs:19:55: 19:61 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/connected_component.rs:20:56: 20:72 error: mismatched types:\n expected `&amp;std::collections::hash::set::HashSet&lt;T&gt;`,\n    found `&amp;std::collections::hash::set::HashSet&lt;&amp;T&gt;`\n(expected type parameter,\n    found &amp;-ptr) [E0308]\nsrc/connected_component.rs:20             let difference = untested_nodes.difference(&amp;connected_nodes)\n                                                                                     ^~~~~~~~~~~~~~~~\nsrc/connected_component.rs:20:56: 20:72 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/connected_component.rs:23:26: 23:41 error: mismatched types:\n expected `std::collections::hash::set::HashSet&lt;T&gt;`,\n    found `std::collections::hash::set::HashSet&lt;&amp;T&gt;`\n(expected type parameter,\n    found &amp;-ptr) [E0308]\nsrc/connected_component.rs:23             results.push(connected_nodes);\n                                                       ^~~~~~~~~~~~~~~\nsrc/connected_component.rs:23:26: 23:41 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to 3 previous errors\nCould not compile `efficient_route_planning`.\n</code></pre>\n\n<p>The full code: <a href=\"https://github.com/shterrett/efficient_route_planning/blob/generic-graph/src/connected_component.rs#L19\" rel=\"nofollow\">https://github.com/shterrett/efficient_route_planning/blob/generic-graph/src/connected_component.rs#L19</a></p>\n\n<p>As far as I can tell, everything should be <code>&amp;Graph&lt;T&gt;</code>, not <code>&amp;Graph&lt;&amp;T&gt;</code>. I'm not sure where the error is.</p>\n\n<p>Versions:</p>\n\n<pre><code>% multirust show override\nmultirust: default toolchain: stable\nmultirust: default location: /Users/xxxxxx/.multirust/toolchains/stable\n\nrustc 1.8.0 (db2939409 2016-04-11)\ncargo 0.9.0-nightly (8fc3fd8 2016-02-29)\n</code></pre>\n"}, {"tags": ["segmentation-fault", "rust", "llvm"], "answers": [{"comments": [{"owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "edited": false, "score": 0, "creation_date": 1463457878, "post_id": 37259999, "comment_id": 62060304, "body": "How can I get my target then?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1463420622, "creation_date": 1463420622, "answer_id": 37259999, "question_id": 37256726, "link": "https://stackoverflow.com/questions/37256726/segfault-when-calling-llvm-sys-llvmcreatetargetmachine-to-generate-object-file/37259999#37259999", "title": "Segfault when calling llvm_sys&#39; LLVMCreateTargetMachine to generate object file in Rust", "body": "<p>You are misunderstaning how to call <code>LLVMGetTargetFromTriple</code>:</p>\n\n<pre><code>pub unsafe extern \"C\" fn LLVMGetTargetFromTriple(Triple: *const c_char,\n                                                 T: *mut LLVMTargetRef,\n                                                 ErrorMessage: *mut *mut c_char)\n                                                 -&gt; LLVMBool\n</code></pre>\n\n<p>This function accepts a pointer to a C-style string that will be filled in in case of error. The actual success of the method is reported by the result.</p>\n\n<p>According to <a href=\"http://llvm.org/docs/doxygen/html/c_2TargetMachine_8h.html#a7a746a65818e0b6bd86e5f00a568e301\" rel=\"nofollow\">the LLVM docs</a>:</p>\n\n<blockquote>\n  <p>Finds the target corresponding to the given triple and stores it in T.</p>\n  \n  <p><strong>Returns 0 on success</strong>. Optionally returns any error in ErrorMessage. Use LLVMDisposeMessage to dispose the message.</p>\n</blockquote>\n\n<p>(emphasis mine)</p>\n\n<p>Right now, that call is failing, thus the target ref is never initialized, thus you are trying to call methods on undefined code.</p>\n"}], "owner": {"reputation": 748, "user_id": 2128597, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/100000157613328/picture?type=large", "display_name": "\u76db\u5b89\u5b89", "link": "https://stackoverflow.com/users/2128597/%e7%9b%9b%e5%ae%89%e5%ae%89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "accepted_answer_id": 37259999, "answer_count": 1, "score": 1, "last_activity_date": 1463420691, "creation_date": 1463409992, "last_edit_date": 1463420691, "question_id": 37256726, "link": "https://stackoverflow.com/questions/37256726/segfault-when-calling-llvm-sys-llvmcreatetargetmachine-to-generate-object-file", "title": "Segfault when calling llvm_sys&#39; LLVMCreateTargetMachine to generate object file in Rust", "body": "<pre><code>extern crate llvm_sys;\n\nuse llvm_sys::*;\nuse llvm_sys::prelude::*;\nuse llvm_sys::core::*;\n\npub fn emit(module: LLVMModuleRef) {\n    unsafe {\n        use llvm_sys::target_machine::*;\n        let triple = LLVMGetDefaultTargetTriple();\n        let mut target: LLVMTargetRef = std::mem::uninitialized();\n        LLVMGetTargetFromTriple(triple, &amp;mut target, [\"Cannot get target.\\0\".as_ptr() as *mut i8].as_mut_ptr());\n        let cpu = \"x86\\0\".as_ptr() as *const i8;\n        let feature = \"\\0\".as_ptr() as *const i8;\n        let opt_level = LLVMCodeGenOptLevel::LLVMCodeGenLevelNone;\n        let reloc_mode = LLVMRelocMode::LLVMRelocDefault;\n        let code_model = LLVMCodeModel::LLVMCodeModelDefault;\n        let target_machine = LLVMCreateTargetMachine(target, triple, cpu, feature, opt_level, reloc_mode, code_model);\n\n        let file_type = LLVMCodeGenFileType::LLVMObjectFile;\n\n        // LLVMTargetMachineEmitToFile(target_machine, module, \"/Users/andyshiue/Desktop/main.o\\0\".as_ptr() as *mut i8, file_type, \"Cannot generate file.\\0\".as_ptr() as *mut *mut i8);\n    }\n}\n\npub fn main() {\n    use Term::*;\n\n    unsafe {\n        let module = LLVMModuleCreateWithName(\"Main\\0\".as_ptr() as *const i8);\n        emit(module);\n    }\n}\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>Process didn't exit successfully: `target/debug/ende` (signal: 11, SIGSEGV: invalid memory reference)\n</code></pre>\n\n<p>I'm writing my toy compiler, and now I want to generate object files.\nWhy is the code above producing segfault?\nHow do I know what I'm doing wrong?\nIs it possible to get a stack trace?\nI don't have experience with C/C++, so I don't know how to debug.\nDoes the problem have something to do with <code>target</code>?</p>\n"}, {"tags": ["rust", "traits", "higher-order-functions"], "answers": [{"comments": [{"owner": {"reputation": 8175, "user_id": 5123895, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9bacc8506650426ce32d14f161108978?s=128&d=identicon&r=PG&f=1", "display_name": "\u0141ukasz", "link": "https://stackoverflow.com/users/5123895/%c5%81ukasz"}, "edited": false, "score": 0, "creation_date": 1463397445, "post_id": 37251377, "comment_id": 62032784, "body": "Thank you, that helped. So I understand that I always have to return a concrete type, which trait ofc is not, so I need to build a template for any concrete type <code>W</code> that has implementation of <code>Write</code> trait. Am I right?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 8175, "user_id": 5123895, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9bacc8506650426ce32d14f161108978?s=128&d=identicon&r=PG&f=1", "display_name": "\u0141ukasz", "link": "https://stackoverflow.com/users/5123895/%c5%81ukasz"}, "edited": false, "score": 1, "creation_date": 1463410322, "post_id": 37251377, "comment_id": 62040666, "body": "@\u0141ukasz Right. Alternatively you could use a trait object e.g. <code>Box&lt;Write&gt;</code>, but that would require dynamic dispatch (more indirection)"}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 4, "last_activity_date": 1463393283, "creation_date": 1463393283, "answer_id": 37251377, "question_id": 37251254, "link": "https://stackoverflow.com/questions/37251254/the-trait-bound-stdiowrite-static-stdmarkersized-is-not-satisfied/37251377#37251377", "title": "the trait bound `std::io::Write + &#39;static: std::marker::Sized` is not satisfied, when passing closure", "body": "<p>You can't put an unsized variable (a trait) directly in a Result. Perhaps you mean this?</p>\n\n<pre><code>fn dowload_body&lt;F, W: Write&gt;(write_supplier: F) -&gt; Result&lt;()&gt;\n//                 ^\n  where F: Fn() -&gt; Result&lt;W&gt; \n//                        ^ create a template for the trait.\n{\n</code></pre>\n"}], "owner": {"reputation": 8175, "user_id": 5123895, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9bacc8506650426ce32d14f161108978?s=128&d=identicon&r=PG&f=1", "display_name": "\u0141ukasz", "link": "https://stackoverflow.com/users/5123895/%c5%81ukasz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1755, "favorite_count": 0, "accepted_answer_id": 37251377, "answer_count": 1, "score": 4, "last_activity_date": 1463393283, "creation_date": 1463392848, "question_id": 37251254, "link": "https://stackoverflow.com/questions/37251254/the-trait-bound-stdiowrite-static-stdmarkersized-is-not-satisfied", "title": "the trait bound `std::io::Write + &#39;static: std::marker::Sized` is not satisfied, when passing closure", "body": "<p>I am trying to get rid of some code duplication in my program and I decided to go with a function that will take a closure of type <code>Fn() -&gt; Result&lt;io::Write&gt;</code> that will supply for me an output stream when I ask for it.</p>\n\n<p>So here is this function:</p>\n\n<pre><code>fn dowload_body&lt;F&gt;(/* some params ommited */ write_supplier: F) -&gt; Result&lt;()&gt;\n  where F: Fn() -&gt; Result&lt;Write&gt; {\n  if ... {\n    let mut destination = try!(write_supplier());\n    // use this stream\n  }\n}\n</code></pre>\n\n<p>And I want to use it for example like this:</p>\n\n<pre><code>let destination_path = Path::new(\"some path\");\nlet result = Self::dowload_body(|| try_str!(OpenOptions::new().append(true).open(destination_path)));\n</code></pre>\n\n<p>I am getting following error:</p>\n\n<pre><code>src/http.rs:105:3: 121:4 error: the trait bound `std::io::Write + 'static: std::marker::Sized` is not satisfied [E0277]\nsrc/http.rs:105   fn dowload_body&lt;F&gt;(write_supplier: F) -&gt; Result&lt;()&gt;\n                  ^\n</code></pre>\n\n<p>I am new to rust and had no luck finding a solution.</p>\n"}, {"tags": ["fortran", "rust", "ffi"], "comments": [{"owner": {"reputation": 17025, "user_id": 2737715, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/600bf8722446680e50fbbb6ecbbe2b44?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Vogt", "link": "https://stackoverflow.com/users/2737715/alexander-vogt"}, "edited": false, "score": 3, "creation_date": 1463388982, "post_id": 37250095, "comment_id": 62028109, "body": "You must link against libgfortran."}, {"owner": {"reputation": 49888, "user_id": 721644, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/KSRQT.jpg?s=128&g=1", "display_name": "Vladimir F", "link": "https://stackoverflow.com/users/721644/vladimir-f"}, "edited": false, "score": 2, "creation_date": 1463396527, "post_id": 37250095, "comment_id": 62032219, "body": "See <a href=\"http://stackoverflow.com/questions/5663083/linking-fortran-and-c-binaries-using-gcc\" title=\"linking fortran and c binaries using gcc\">stackoverflow.com/questions/5663083/&hellip;</a> and adapt to Rust. Not closing as duplicate as Rust is not C++, but it is a duplicate in fact."}, {"owner": {"reputation": 305, "user_id": 2825707, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f10f8d778ac2097fc46202496199555?s=128&d=identicon&r=PG&f=1", "display_name": "noshusan", "link": "https://stackoverflow.com/users/2825707/noshusan"}, "reply_to_user": {"reputation": 17025, "user_id": 2737715, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/600bf8722446680e50fbbb6ecbbe2b44?s=128&d=identicon&r=PG&f=1", "display_name": "Alexander Vogt", "link": "https://stackoverflow.com/users/2737715/alexander-vogt"}, "edited": false, "score": 0, "creation_date": 1463410866, "post_id": 37250095, "comment_id": 62041046, "body": "thanks @AlexanderVogt , actually that was the problem. i didn&#39;t link it against libgfortran. Now everything is ok."}], "answers": [{"comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1463403422, "post_id": 37254346, "comment_id": 62036236, "body": "<code>*</code> dependencies should generally be avoided, something like <code>libc = &quot;0.2&quot;</code> is better."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1463403615, "post_id": 37254346, "comment_id": 62036369, "body": "@huon I agree with that for a <i>library</i>, but in a <i>binary</i> it doesn&#39;t matter; the <code>Cargo.lock</code> will prevent any accidental issues. For a binary, it&#39;s better to represent the intent of the programmer in <code>Cargo.toml</code> (which in this case is &quot;some libc crate&quot;)."}, {"owner": {"reputation": 49888, "user_id": 721644, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/KSRQT.jpg?s=128&g=1", "display_name": "Vladimir F", "link": "https://stackoverflow.com/users/721644/vladimir-f"}, "edited": false, "score": 1, "creation_date": 1463406312, "post_id": 37254346, "comment_id": 62038076, "body": "Yes, if you create a shared library in gfortran, the linker should load the dependencies when used I think. <a href=\"http://stackoverflow.com/questions/7508131/linking-dependencies-of-a-shared-library\" title=\"linking dependencies of a shared library\">stackoverflow.com/questions/7508131/&hellip;</a>"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1463437757, "post_id": 37254346, "comment_id": 62055233, "body": "@Shepmaster, the * dependencies do matter with binaries: it makes running cargo update in future more controlled, as a binary is still tied to the API of its dependencies, e.g. if libc has a reorganisation that moves types/functions around (for this specific code, it probably doesn&#39;t matter, but it will presumably be used as part of larger projects). You are right that avoiding <code>*</code> is more important for publishing a library, but it shouldn&#39;t just be ignored for binaries."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1463443355, "post_id": 37254346, "comment_id": 62056872, "body": "@huon but if the build fails after <code>cargo update</code>, you just <code>git reset</code> the changes to <code>Cargo.lock</code> and go about your day, update <i>just</i> the package you wanted to (<code>cargo update --package FOO</code>), or fix your calling code for the new API. There&#39;s not really a difference between that and putting the version in and remembering every few weeks / months to edit <code>Cargo.toml</code> to check to see if there&#39;s an update. It really comes down to preferred workflow for binaries."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1463419534, "last_edit_date": 1495539847, "creation_date": 1463403101, "answer_id": 37254346, "question_id": 37250095, "link": "https://stackoverflow.com/questions/37250095/undefined-reference-to-gfortran-cpu-time-4/37254346#37254346", "title": "Undefined reference to `_gfortran_cpu_time_4&#39;", "body": "<p>As the commenters said, you need to <a href=\"https://stackoverflow.com/questions/5663083/linking-fortran-and-c-binaries-using-gcc\">link to <code>libgfortran</code></a>.</p>\n\n<p>Specifically, in the Rust world, you should use (or create) a <a href=\"http://doc.crates.io/build-script.html#-sys-packages\" rel=\"nofollow noreferrer\"><code>*-sys</code> package</a> that details the appropriate linking steps and exposes the base API. Then build higher-level abstractions on top of that.</p>\n\n<hr>\n\n<p>However, I didn't <em>seem</em> to need to do any of that:</p>\n\n<p><strong>timer.f90</strong></p>\n\n<pre><code>subroutine timer(ttime)\n  double precision ttime\n  temp = sngl(ttime)\n  call cpu_time(temp)\n  ttime = dble(temp) \n\n  return\nend\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"woah\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\nbuild = \"build.rs\"\n\n[dependencies]\nlibc = \"*\"\n</code></pre>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-lib=dylib=timer\");\n    println!(\"cargo:rustc-link-search=native=/tmp/woah\");\n}\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>extern crate libc;\n\nuse libc::{c_double};\n\nextern \"C\" {\n    pub fn timer_(d: *mut c_double);\n}\n\nfn main() {\n    let mut value = 0.0;\n    unsafe { timer_(&amp;mut value); }\n    println!(\"The value was: {}\", value);\n}\n</code></pre>\n\n<p>And it's put together via</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ gfortran-4.2 -shared -o libtimer.dylib timer.f90\n$ cargo run\nThe value was: 0.0037589999847114086\n</code></pre>\n\n<p>Which seems to indicate that this shared library either doesn't need <code>libgfortran</code> or <a href=\"https://stackoverflow.com/questions/7508131/linking-dependencies-of-a-shared-library\">it's being automatically included</a>.</p>\n\n<p>If you create a static library instead (and link to it appropriately via <code>cargo:rustc-link-lib=dylib=timer</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ gfortran-4.2 -c -o timer.o timer.f90\n$ ar cr libtimer.a *.o\n$ cargo run\nnote: Undefined symbols for architecture x86_64:\n  \"__gfortran_cpu_time_4\", referenced from:\n      _timer_ in libtimer.a(timer.o)\n</code></pre>\n\n<p>In this case, adding <code>gfortran</code> allows the code to compile:</p>\n\n<pre><code>println!(\"cargo:rustc-link-lib=dylib=gfortran\");\n</code></pre>\n\n<p><em>Disclaimer</em>: I've never compiled Fortran before, so it's very likely I've done something silly.</p>\n"}], "owner": {"reputation": 305, "user_id": 2825707, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f10f8d778ac2097fc46202496199555?s=128&d=identicon&r=PG&f=1", "display_name": "noshusan", "link": "https://stackoverflow.com/users/2825707/noshusan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 1, "accepted_answer_id": 37254346, "answer_count": 1, "score": 1, "last_activity_date": 1463419534, "creation_date": 1463388885, "last_edit_date": 1463399976, "question_id": 37250095, "link": "https://stackoverflow.com/questions/37250095/undefined-reference-to-gfortran-cpu-time-4", "title": "Undefined reference to `_gfortran_cpu_time_4&#39;", "body": "<p>I am trying to call a <strong>Fortran</strong> function from <strong>Rust</strong> but I am getting this error: </p>\n\n<blockquote>\n<pre><code>/src/timer.f:4: undefined reference to `_gfortran_cpu_time_4'\n</code></pre>\n</blockquote>\n\n<p>I searched through the internet but can't find any solution to this. The <strong>Fortran code</strong> is:</p>\n\n<pre><code>subroutine timer(ttime)\n  double precision ttime\n  temp = sngl(ttime)\n  call cpu_time(temp)\n  ttime = dble(temp) \n\n  return\nend\n</code></pre>\n\n<p>And the <strong>Rust binding</strong> is:</p>\n\n<pre><code>use libc::{c_double};\n\nextern \"C\" {\n    pub fn timer_(d: *mut c_double);\n}\n</code></pre>\n\n<p>I don't know what I am doing wrong.</p>\n"}, {"tags": ["iterator", "rust", "lifetime", "borrow-checker", "mutability"], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 3, "last_activity_date": 1463381715, "last_edit_date": 1463381715, "creation_date": 1463381281, "answer_id": 37248195, "question_id": 37247657, "link": "https://stackoverflow.com/questions/37247657/how-to-extract-values-from-mut-iterator/37248195#37248195", "title": "How to extract values from &amp;mut iterator?", "body": "<p>The borrow checker uses lexical lifetime rules, so you can't have conflicting borrows in a single expression.  The solution is to extract getting the length into a separate <code>let</code> statement:</p>\n\n<pre><code>let int_sentence: Vec&lt;u32&gt; = sentence.into_iter()\n        .map(|x| *({let len = word_map.len() as u32;\n                    word_map.entry(x).or_insert(len)}))\n        .collect();\n</code></pre>\n\n<p>Such issues will hopefully go away when Rust supports <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/\" rel=\"nofollow\">non-lexical lifetimes</a>.</p>\n"}], "owner": {"reputation": 24298, "user_id": 85514, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/56586328ab69d46520cf729d2c46c58b?s=128&d=identicon&r=PG", "display_name": "Peter Smit", "link": "https://stackoverflow.com/users/85514/peter-smit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 37248195, "answer_count": 1, "score": 0, "last_activity_date": 1463403288, "creation_date": 1463378766, "last_edit_date": 1463403288, "question_id": 37247657, "link": "https://stackoverflow.com/questions/37247657/how-to-extract-values-from-mut-iterator", "title": "How to extract values from &amp;mut iterator?", "body": "<p>I am trying to make an iterator that maps a string to an integer:</p>\n\n<pre><code>fn main() {\n    use std::collections::HashMap;\n\n    let mut word_map = HashMap::new();\n\n    word_map.insert(\"world!\", 0u32);\n\n    let sentence: Vec&lt;&amp;str&gt; = vec![\"Hello\", \"world!\"];\n\n    let int_sentence: Vec&lt;u32&gt; = sentence.into_iter()\n        .map(|x| word_map.entry(x).or_insert(word_map.len() as u32))\n        .collect();\n\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=4f0c02873eb45b3e92c940961e5eebd4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Rust playground</a>)</p>\n\n<p>This fails with </p>\n\n<blockquote>\n  <p>the trait <code>core::iter::FromIterator&lt;&amp;mut u32&gt;</code> is not implemented for the type <code>collections::vec::Vec&lt;u32&gt;</code></p>\n</blockquote>\n\n<p>Adding a dereference operator around the <code>word_map.entry().or_insert()</code> expression does not work as it complains about borrowing which is surprising to me as I'm just trying to copy the value.</p>\n"}, {"tags": ["rust", "traits", "associated-types"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1463429094, "last_edit_date": 1463429094, "creation_date": 1463368508, "answer_id": 37246206, "question_id": 37246093, "link": "https://stackoverflow.com/questions/37246093/implementing-a-trait-that-has-associated-trait-types/37246206#37246206", "title": "Implementing a trait that has associated trait types", "body": "<blockquote>\n  <p>The intent here is to use associated types to make the <code>FooStore</code> trait not require the awkward and problematic syntax of <code>impl&lt;F:Fooer, T: FooStore&lt;F&gt;&gt; FooStore&lt;F&gt; for DB</code> because that often complains about <code>F</code> not being used.</p>\n</blockquote>\n\n<p>Your struct <code>DB</code> needs to assign a concrete type that implements <code>Fooer</code> to <code>FooStore::T</code>. <code>Fooer</code> is a trait, but can also be used as an unsized type. However, you can't use an unsized type here, because you can't pass an argument of an unsized type by value (which <code>FooStore::store_foo</code> requires).</p>\n\n<p>If you don't want <code>DB</code> to assign a particular type to <code>FooStore::T</code>, then you can make <code>DB</code> generic.</p>\n\n<pre><code>use std::marker::PhantomData;\n\n#[allow(dead_code)]\nstruct DB&lt;F: Fooer&gt; {\n    _phantom: PhantomData&lt;F&gt;,\n}\n\nimpl&lt;F: Fooer&gt; FooStore for DB&lt;F&gt; {\n    type T = F;\n\n    fn store_foo(&amp;self, _fooer: Self::T) {}\n}\n</code></pre>\n\n<p>Notice the use of <code>PhantomData</code>: we use it to force the parameter <code>T</code> to be used, and it also indicates that <code>DB&lt;T&gt;</code> conceptually owns objects of type <code>T</code>.</p>\n"}], "owner": {"reputation": 217, "user_id": 6189743, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/99f741f9304c500014cb55f92edca4d9?s=128&d=identicon&r=PG&f=1", "display_name": "FizzBazer", "link": "https://stackoverflow.com/users/6189743/fizzbazer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 37246206, "answer_count": 1, "score": 2, "last_activity_date": 1463429094, "creation_date": 1463367531, "last_edit_date": 1463403513, "question_id": 37246093, "link": "https://stackoverflow.com/questions/37246093/implementing-a-trait-that-has-associated-trait-types", "title": "Implementing a trait that has associated trait types", "body": "<p>I'm having trouble learning about associated types. My problem code:</p>\n\n<pre><code>trait Fooer {\n    fn foo(&amp;self);\n}\n\ntrait FooStore {\n    type T: Fooer;\n    fn store_foo(&amp;self, fooer: Self::T);\n}\n\n#[allow(dead_code)]\nstruct DB {}\n\nimpl FooStore for DB {\n    type T = Fooer;\n\n    fn store_foo(&amp;self, _fooer: Self::T) {}\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?code=%0A%0Atrait%20Fooer%20%7B%0A%20%20%20%20fn%20foo(%26self)%3B%0A%7D%0A%0Atrait%20FooStore%20%7B%0A%20%20%20%20type%20T%3A%20Fooer%3B%0A%20%20%20%20fn%20store_foo(%26self%2C%20fooer%3A%20Self%3A%3AT)%3B%0A%7D%0A%0A%23%5Ballow(dead_code)%5D%0Astruct%20DB%20%7B%0A%7D%0A%0Aimpl%20FooStore%20for%20DB%20%7B%0A%20%20%20%20type%20T%20%3D%20Fooer%3B%0A%0A%20%20%20%20fn%20store_foo(%26self%2C%20_fooer%3A%20Self%3A%3AT)%20%7B%7D%0A%7D%0A%0Afn%20main()%20%7B%7D%0A&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">Play link</a></p>\n\n<p>The intent here is to use associated types to make the <code>FooStore</code> trait not require the awkward and problematic syntax of <code>impl&lt;F:Fooer, T: FooStore&lt;F&gt;&gt; FooStore&lt;F&gt; for DB</code> because that often complains about <code>F</code> not being used.</p>\n\n<p>However, the <a href=\"https://doc.rust-lang.org/book/associated-types.html\" rel=\"nofollow\">official docs</a> on this feature show objects implementing the underlying associated type - but not traits. In this example, <code>DB</code> does not know what structs might be passed into <code>store_foo(..)</code>, so it needs to use a trait to solve this issue.</p>\n\n<p>With that said, how can I get an associated type to use a trait during <code>impl</code>? That is, how can I write <code>type T = Fooer;</code>? Or am I using this wrong somehow?</p>\n\n<p><strong>Note</strong>: I'm having some trouble constructing this example, I'm trying to correct this now. The error I was having is:</p>\n\n<pre><code>cargo: the trait `Fooer` cannot be made into an object [E0038]\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1463400081, "last_edit_date": 1463400081, "creation_date": 1463361382, "answer_id": 37245412, "question_id": 37244888, "link": "https://stackoverflow.com/questions/37244888/making-lower-level-crates-available-at-the-top-using-cargo/37245412#37245412", "title": "Making lower level crates available at the top using Cargo", "body": "<blockquote>\n  <p>I don't want to have to include the <code>point</code> crate <strong>because it is already  included in <code>sat</code></strong></p>\n</blockquote>\n\n<p>(emphasis mine)</p>\n\n<p>That doesn't really mean anything. It's entirely possible (and a desired feature) that the version of a crate that you use can be a different version of a crate that a dependency is using. This allows you to use features from a newer version while a dependency hasn't updated yet (or vice versa). This prevents one specific type of \"dependency hell\".</p>\n\n<p>Unfortunately, it introduces <em>another</em> kind of dependency hell where a public interface of crate A exposes a type from crate B (version 1) and we are trying to use crate A's public interface with crate B (version 2). This produces a range of confusing errors like \"expected <code>Foo</code>, found <code>Foo</code>\". These messages are being <a href=\"https://github.com/rust-lang/rust/issues/22750\" rel=\"nofollow\">actively worked on</a>.</p>\n\n<p>The key thing to realize is that <strong>by putting an external type in your public API, your public API is now affected by the external type</strong>. This means that when the external crate bumps versions, you need to bump your version to maintain semantic versioning!</p>\n\n<p>This latter case is what you are attempting to opt into.</p>\n\n<p>You have two options:</p>\n\n<ol>\n<li><a href=\"https://doc.rust-lang.org/book/crates-and-modules.html#re-exporting-with-pub-use\" rel=\"nofollow\">Re-export the types you need</a>.</li>\n<li>Document that people need to use the same crate and the same version.</li>\n</ol>\n\n<p>The first looks something like this:</p>\n\n<p><strong>point/src/lib.rs</strong></p>\n\n<pre><code>pub struct Point(pub u8, pub u8);\n</code></pre>\n\n<p><strong>sat/src/lib.rs</strong></p>\n\n<pre><code>extern crate point;\n\npub use point::Point;\n\npub struct Circle(pub point::Point);\n</code></pre>\n\n<p><strong>app/src/main.rs</strong></p>\n\n<pre><code>extern crate sat;\n\nuse sat::{Point, Circle};\n\nfn main() {\n    let p = Point(0, 0);\n    let c = Circle(p);\n}\n</code></pre>\n\n<p>This is probably the closest to what you were looking for. Otherwise, you need to explicitly add the dependent crate to both <code>sat</code> and <code>app</code>. This isn't unheard of, most of the crates that play with <code>hyper</code> do the same thing.</p>\n\n<hr>\n\n<blockquote>\n  <p>The reason I included point as a separate library, instead of as a module within sat, is that both the <code>circle</code> and <code>polygon</code> modules depend on <code>point</code>. I couldn't figure out a way to get <code>point</code> to work as a module in <code>sat</code> without repeating code.</p>\n</blockquote>\n\n<p>You should probably figure that out. Crates are great and you should certainly use them when you have a piece of reusable code, but they aren't the <em>only</em> way of reusing code:</p>\n\n<pre><code>pub mod point {\n    pub struct Point(pub u8, pub u8);\n}\n\npub mod square {\n    use point::Point;\n\n    pub struct Square(pub Point, pub Point);\n}\n\npub mod circle {\n    use point::Point;\n\n    pub struct Circle(pub Point);\n}\n\nfn main() {\n    let c = circle::Circle(point::Point(0, 0));\n    let s = square::Square(point::Point(0, 0), point::Point(1, 1));\n}\n</code></pre>\n"}], "owner": {"reputation": 381, "user_id": 5133242, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/7joIv.jpg?s=128&g=1", "display_name": "Liam", "link": "https://stackoverflow.com/users/5133242/liam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1463400081, "creation_date": 1463356236, "question_id": 37244888, "link": "https://stackoverflow.com/questions/37244888/making-lower-level-crates-available-at-the-top-using-cargo", "title": "Making lower level crates available at the top using Cargo", "body": "<p>Preface: I'm fairly certain that this should be something easy to figure out, but I haven't had any luck. I've actually been struggling in general with the Cargo manager, I keep wanting it to be like a simple <code>include</code> statement in <code>C</code>, but it is, of course, nothing so simple. If you have comments on how to structure this project better in general, please let share them.</p>\n\n<p>Lets say I have a library in Rust which is managed with Cargo. The crate is called <code>point</code> and the directory looks like this.</p>\n\n<pre><code>point/\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n \u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p>This crate has no dependencies. </p>\n\n<p>Now, I have built another library which will use this <code>point</code> crate. This library is called <code>sat</code> This library looks like this:</p>\n\n<pre><code>sat/\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n \u00a0\u00a0 \u251c\u2500\u2500 circle.rs\n \u00a0\u00a0 \u251c\u2500\u2500 lib.rs\n \u00a0\u00a0 \u251c\u2500\u2500 point/\n \u00a0\u00a0 \u2514\u2500\u2500 polygon.rs\n</code></pre>\n\n<p>Note that <code>point/</code> is the point directory mentioned above. The reason I included <code>point</code> as a separate library, instead of as a module within <code>sat</code>, is that both the <code>circle</code> and <code>polygon</code> modules depend on <code>point</code> (I couldn't figure out a way to get <code>point</code> to work as a module in <code>sat</code> without repeating code. This is not truly relevant to the question, but is relevant to idiomatic Rust library structures, so feel free to comment on better ways to set this up). </p>\n\n<p>Here is the <code>Cargo.toml</code> file for <code>sat/</code> </p>\n\n<pre><code>$ cat sat/Cargo.toml \n[package]\nname = \"sat\"\nversion = \"0.1.0\"\n\n[dependencies]\npoint = { path = \"src/point\" }\n</code></pre>\n\n<p>Now, all of this is well and good. But, let us say that I want to create an application that uses <code>sat</code> as an external crate. <strong>How can I access the <code>point</code> library in this application without having to include the <code>point</code> library itself?</strong></p>\n\n<p>Here is an example, the <code>point</code> library has a struct called <code>Point</code> in it. The <code>sat</code> library has a struct called <code>Circle</code> in it. Let's say my example source code looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>$ cat src/main.rs\n\nextern crate sat;\n\n// I don't want to have to include the point crate because it is already \n// included in sat\n// extern crate point;\n\nfn main() {\n\n    // declare a polygon\n    // structure is: crate::module::struct::staticFunction\n    let polygon = sat::polygon::Polygon::new( &lt;parameters&gt; );\n\n    // I cannot declare a Point, because point is not a module in sat\n    // this errors out.\n    // However, this is the sort of thing that I would like to do.\n    let point = sat::point::Point::new( &lt;parameters&gt; );\n\n}\n</code></pre>\n"}, {"tags": ["rust", "internals", "diagnostics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463361733, "post_id": 37243689, "comment_id": 62019658, "body": "I added some examples based on what I think you are asking; please change them if inappropriate. If the examples are correct, won&#39;t you always have the problem that there is human text embedded in the suggestion? For example, &quot;change <code>X</code> to <code>Y</code>&quot; would have to be parsed to ignore the &quot;change&quot; and &quot;to&quot; parts. This seems like a very different data structure than a string would be needed."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1463403983, "post_id": 37243689, "comment_id": 62036575, "body": "OK, I should probably clarify: <code>span_suggestion</code> gets a span to replace and the code to replace it. But sometimes we have only incomplete code, e.g. <code>if let Some(m) = too { .. }</code> where the <code>..</code> denotes the match arm."}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1463361635, "creation_date": 1463346485, "last_edit_date": 1463361635, "question_id": 37243689, "link": "https://stackoverflow.com/questions/37243689/is-there-a-way-to-declare-a-codesuggestion-to-be-incomplete-or-informal", "title": "Is there a way to declare a CodeSuggestion to be incomplete or informal?", "body": "<p>While improving <a href=\"https://github.com/Manishearth/rust-clippy\" rel=\"nofollow\">clippy</a> lints, I was asked if it's possible to tell if a lint's suggestion can be spliced into the code directly (\"change <code>X</code> to <code>Y</code>\"), or if it is incomplete / informal and should be implemented manually (\"consider renaming this variable\").</p>\n\n<p>Currently, clippy uses <code>span_suggestion(Span, &amp;str)</code>, but I don't see a way to inform the compiler about the type of suggestion being made. Is there some (planned) API to do this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "edited": false, "score": 0, "creation_date": 1463314303, "post_id": 37237967, "comment_id": 62005059, "body": "I tried what you said, namely removed the impl fmt::Display for Employee and extended Employee from fmt:Display but didn&#39;t work."}, {"owner": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "edited": false, "score": 0, "creation_date": 1463314436, "post_id": 37237967, "comment_id": 62005113, "body": "now i get =&gt; rustc /home/dastoor/rust_examples/polymorphic_display_trait.rs /home/dastoor/rust_examples/polymorphic_display_trait.rs:40:&zwnj;&#8203;12: 40:14 error: the trait <code>Employee</code> is not implemented for the type <code>TeamMember</code> [E0277] /home/dastoor/rust_examples/polymorphic_display_trait.rs:40     v.push(&amp;t);"}, {"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "reply_to_user": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "edited": false, "score": 0, "creation_date": 1463314675, "post_id": 37237967, "comment_id": 62005186, "body": "Those are an other issue. And the error message is rather explicit about what you need to do."}], "tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": false, "score": 0, "last_activity_date": 1463319681, "last_edit_date": 1463319681, "creation_date": 1463313263, "answer_id": 37237967, "question_id": 37237831, "link": "https://stackoverflow.com/questions/37237831/how-do-i-call-the-display-trait-on-its-polymorphic-types/37237967#37237967", "title": "How do I call the Display trait on its polymorphic types?", "body": "<p>When you write this:</p>\n\n<pre><code>write!(f, \"{}\", *self)\n</code></pre>\n\n<p>You assume the type of <code>*self</code> (ie. <code>Employee</code>) implements <code>Display</code>, which is not guaranteed by the type constraints. So you should do:</p>\n\n<pre><code>trait Employee: fmt::Display {}\n</code></pre>\n\n<p>which, as a side effect, allows you to remove your <code>impl fmt::Display for Employee</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "is_accepted": false, "score": 2, "last_activity_date": 1463319719, "last_edit_date": 1463319719, "creation_date": 1463315275, "answer_id": 37238292, "question_id": 37237831, "link": "https://stackoverflow.com/questions/37237831/how-do-i-call-the-display-trait-on-its-polymorphic-types/37238292#37238292", "title": "How do I call the Display trait on its polymorphic types?", "body": "<p>This finally worked, thanks:</p>\n\n<pre><code>use std::fmt;\n\nstruct TeamMember {\n    name: String,\n    age: u32,\n}\nstruct Manager {\n    name: String,\n    age: u32,\n}\n\nimpl fmt::Display for TeamMember {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"TeamMember!; name =&gt; {}, age =&gt; {}\", self.name, self.age)\n    }\n}\n\nimpl fmt::Display for Manager {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Manager!; name =&gt; {}, age =&gt; {}\", self.name, self.age)\n    }\n}\n\ntrait Employee: fmt::Display {}\nimpl Employee for TeamMember {}\nimpl Employee for Manager {}\n\nfn main() {\n    let t = TeamMember {\n        name: \"abc\".to_string(),\n        age: 23,\n    };\n    let t2 = Manager {\n        name: \"xyz\".to_string(),\n        age: 18,\n    };\n\n    let mut v: Vec&lt;&amp;Employee&gt; = Vec::new();\n    v.push(&amp;t);\n    v.push(&amp;t2);\n\n    for it in &amp;v {\n        println!(\"i am a {}\", *it);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "edited": false, "score": 0, "creation_date": 1463321922, "post_id": 37239066, "comment_id": 62007676, "body": "very interesting... thanks.. of course if Employee had other funcs in them, but i wanted to leverage the std::Display trait (without defining a new func in the trait to that effect), then i guess, that would be the way to go, right ?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1463325739, "last_edit_date": 1495542868, "creation_date": 1463320140, "answer_id": 37239066, "question_id": 37237831, "link": "https://stackoverflow.com/questions/37237831/how-do-i-call-the-display-trait-on-its-polymorphic-types/37239066#37239066", "title": "How do I call the Display trait on its polymorphic types?", "body": "<p>Since <code>Employee</code> has no methods, there's no need to create another trait. You can just use <code>Display</code> directly:</p>\n\n<pre><code>use std::fmt::Display;\n\nfn main() {\n    let t = TeamMember { name: \"abc\".to_string(), age: 23 };\n    let t2 = Manager { name: \"xyz\".to_string(), age: 18 };\n\n    let v = vec![&amp;t as &amp;Display, &amp;t2];\n    for it in &amp;v {\n        println!(\"i am a {}\", *it);\n    }\n}\n</code></pre>\n\n<p>If you wanted to have an <code>Employee</code> trait that <em>didn't</em> require <code>Display</code> to be implemented (as is required in <a href=\"https://stackoverflow.com/a/37237967/155423\">Valentin Lorentz' answer</a>), you could create another trait that requires both:</p>\n\n<pre><code>use std::fmt::Display;\n\ntrait Employee {}\nimpl Employee for TeamMember {}\nimpl Employee for Manager {}\n\ntrait PrintableEmployee: Employee + Display {}\nimpl&lt;T&gt; PrintableEmployee for T where T: Employee + Display {}\n\nfn main() {\n    let t = TeamMember { name: \"abc\".to_string(), age: 23 };\n    let t2 = Manager { name: \"xyz\".to_string(), age: 18 };\n\n    let v = vec![&amp;t as &amp;PrintableEmployee, &amp;t2];\n\n    for it in &amp;v {\n        println!(\"i am a {}\", *it);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 6275812, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebc8f67b7d61ef57ead4acff6a1ea5f2?s=128&d=identicon&r=PG&f=1", "display_name": "ddastoor", "link": "https://stackoverflow.com/users/6275812/ddastoor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 607, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1463330510, "creation_date": 1463312532, "last_edit_date": 1463330510, "question_id": 37237831, "link": "https://stackoverflow.com/questions/37237831/how-do-i-call-the-display-trait-on-its-polymorphic-types", "title": "How do I call the Display trait on its polymorphic types?", "body": "<p>I have:</p>\n\n<pre><code>use std::fmt;\nstruct TeamMember {\n    name: String,\n    age: u32,\n}\n\nstruct Manager {\n    name: String,\n    age: u32,\n}\n\nimpl fmt::Display for TeamMember {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result { \n         write!(f, \"TeamMember; name =&gt; {}, age =&gt; {}\", self.name, self.age)\n      }\n}\n\nimpl fmt::Display for Manager {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result { \n         write!(f, \"Manager; name =&gt; {}, age =&gt; {}\", self.name, self.age)\n      }\n}\n\ntrait Employee {}\n\nimpl fmt::Display for Employee {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result { \n         write!(f, \"{}\", *self)\n      }\n}\n\nfn main() {\n    let t = TeamMember { name: \"abc\".to_string(), age: 23 };\n    let t2 = Manager { name: \"xyz\".to_string(), age: 18 };\n\n    let mut v: Vec&lt;&amp;Employee&gt; = Vec::new();\n    v.push(&amp;t);\n    v.push(&amp;t2);\n\n    for it in &amp;v {\n        println!(\"i am a {}\", *it);\n    }\n}\n</code></pre>\n\n<p>I want to polymorphically call the displays of the 2 concrete types that the vector of trait objects references. I get the following compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;std macros&gt;:2:21: 2:52 error: the trait `core::marker::Sized` is not implemented for the type `Employee` [E0277]\n&lt;std macros&gt;:2 $ dst . write_fmt ( format_args ! ( $ ( $ arg ) * ) ) )\n                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:2:21: 2:52 note: in this expansion of format_args!\n</code></pre>\n\n<p>The vector iteration should call the <code>Display</code> function for the concrete types...</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1463260690, "post_id": 37231967, "comment_id": 61993620, "body": "And make sure that your <code>girara_statusbar_item_set_text </code> function doesn&#39;t keep a reference to that string beyond how long the <code>CString</code> lives...!"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1463267685, "post_id": 37231967, "comment_id": 61995293, "body": "Note that Clippy has <a href=\"https://github.com/Manishearth/rust-clippy/wiki#temporary_cstring_as_ptr\" rel=\"nofollow noreferrer\">a lint for that</a> (disclaimer: I\u2019m a Clippy contributor)."}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 2, "last_activity_date": 1463260629, "creation_date": 1463260629, "answer_id": 37231967, "question_id": 37231352, "link": "https://stackoverflow.com/questions/37231352/missing-first-character-from-c-string/37231967#37231967", "title": "Missing first character from C string", "body": "<p>This issue came by the fact that the <code>CString</code> was dropped before the pointer was sent to the ffi function (see <a href=\"https://users.rust-lang.org/t/scope-of-const-c-char-e-g-cstring-as-ptr/5469\" rel=\"nofollow\">here</a>).</p>\n\n<p>The solution is to bind the <code>CString</code> to a variable:</p>\n\n<pre><code>let text = CString::new(\"girara-left\").unwrap();\nunsafe { girara_statusbar_item_set_text(session, item, text.as_ptr()) };\n</code></pre>\n"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 37231967, "answer_count": 1, "score": 0, "last_activity_date": 1463260634, "creation_date": 1463256629, "last_edit_date": 1463260634, "question_id": 37231352, "link": "https://stackoverflow.com/questions/37231352/missing-first-character-from-c-string", "title": "Missing first character from C string", "body": "<p>I am writing a binding to the <code>girara</code> library and I have an issue with the statusbar item text: the first character is missing.</p>\n\n<p>Here is a part of my binding:</p>\n\n<pre><code>#[link(name=\"girara-gtk3\")]\nextern \"C\" {\n    // Statusbar.\n    pub fn girara_statusbar_item_add(session: *mut girara_session_t,\n                                     expand: bool,\n                                     fill: bool,\n                                     left: bool,\n                                     callback: girara_statusbar_event_t)\n                                     -&gt; *mut girara_statusbar_item_t;\n    pub fn girara_statusbar_item_set_text(session: *mut girara_session_t,\n                                          item: *mut girara_statusbar_item_t,\n                                          text: *const c_char);\n}\n</code></pre>\n\n<p>and here is how I call these functions:</p>\n\n<pre><code>let item = unsafe { girara_statusbar_item_add(session, true, true, true, None) };\nassert!(item != 0 as *mut _);\n\nlet text = CString::new(\"girara-left\").unwrap().as_ptr();\nunsafe { girara_statusbar_item_set_text(session, item, text) };\n</code></pre>\n\n<p>But instead of showing <code>girara-left</code>, I only see <code>irara-left</code>.</p>\n\n<p>Is using <code>CString</code> a good way to send <code>*const c_char</code> to a FFI?</p>\n\n<p>Why is the first character missing?</p>\n\n<p><strong>Update</strong></p>\n\n<p>There is something weird hapening here.</p>\n\n<p>If I change the code to:</p>\n\n<pre><code>let text = CString::new(\"girara-left\").unwrap().as_ptr();\nlet text2 = CString::new(\"hello World\").unwrap();\nunsafe { girara_statusbar_item_set_text(session, item, text) };\n</code></pre>\n\n<p>(where <code>text2</code> is unused), the text <code>hello World</code> is shown, which does not make sense. It seems the pointer does not point at the right place.</p>\n"}, {"tags": ["io", "rust", "traits", "downcast"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1463210062, "post_id": 37223741, "comment_id": 61977765, "body": "What operations do you need to <code>seek</code> the input? If you really need an arbitrary <code>seek</code> the only hope is read the whole stdin into a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463232015, "post_id": 37223741, "comment_id": 61984177, "body": "You obviously don&#39;t <b>need</b> to seek if you can handle reading from stdin."}], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": false, "score": 2, "last_activity_date": 1463595858, "last_edit_date": 1463595858, "creation_date": 1463220576, "answer_id": 37225299, "question_id": 37223741, "link": "https://stackoverflow.com/questions/37223741/how-can-i-take-input-from-either-stdin-or-a-file-if-i-cannot-seek-stdin/37225299#37225299", "title": "How can I take input from either stdin or a file if I cannot seek stdin?", "body": "<blockquote>\n  <p>Is it possible to wrap stdin or a file in the same sort of buffer so I could just use that type and not worry about the type of io?</p>\n</blockquote>\n\n<p>That's exactly what the trait <code>Read</code> does. It seems that what you want is an abstraction (trait) for <code>Stdin</code> and <code>File</code> that has optional support for <code>seek</code> and allows to query about this support. In the following code,  <code>OptionalSeekRead</code> trait is used to fulfill this intend:</p>\n\n<pre><code>use std::io::{Read, Seek, SeekFrom, Stdin};\nuse std::fs::File;\n\n// define a trait alias\npub trait SeekRead: Seek + Read {}\n\nimpl&lt;T: Seek + Read&gt; SeekRead for T {}\n\npub trait OptionSeekRead: Read {\n    fn get_seek_read(&amp;mut self) -&gt; Option&lt;&amp;mut SeekRead&gt;;\n}\n\nimpl OptionSeekRead for File {\n    fn get_seek_read(&amp;mut self) -&gt; Option&lt;&amp;mut SeekRead&gt; {\n        Some(self)\n    }\n}\n\nimpl OptionSeekRead for Stdin {\n    fn get_seek_read(&amp;mut self) -&gt; Option&lt;&amp;mut SeekRead&gt; {\n        None\n    }\n}\n\nstruct Handle {\n    read: Box&lt;OptionSeekRead&gt;,\n}\n\nimpl Handle {\n    fn f(&amp;mut self) {\n        if let Some(h) = self.read.get_seek_read() {\n            // h is Seek + Read\n            h.seek(SeekFrom::Start(42));\n        } else {\n            // without Seek\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1463221363, "creation_date": 1463221363, "answer_id": 37225416, "question_id": 37223741, "link": "https://stackoverflow.com/questions/37223741/how-can-i-take-input-from-either-stdin-or-a-file-if-i-cannot-seek-stdin/37225416#37225416", "title": "How can I take input from either stdin or a file if I cannot seek stdin?", "body": "<p>I know, you said you wanted something more elegant and without enums, but I think the enum-solution <em>is</em> fairly elegant. So here is one attempt:</p>\n\n<pre><code>use std::fs;\nuse std::io::{self, Read, Seek, SeekFrom};\n\nenum Input {\n    File(fs::File),\n    Stdin(io::Stdin),\n}\n\nimpl Read for Input {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n        match *self {\n            Input::File(ref mut file) =&gt; file.read(buf),\n            Input::Stdin(ref mut stdin) =&gt; stdin.read(buf),\n        }\n    }\n}\n\nimpl Seek for Input {\n    fn seek(&amp;mut self, pos: SeekFrom) -&gt; io::Result&lt;u64&gt; {\n        match *self {\n            Input::File(ref mut file) =&gt; file.seek(pos),\n            Input::Stdin(_) =&gt; {\n                Err(io::Error::new(\n                    io::ErrorKind::Other, \n                    \"not supported by stdin-input\",\n                ))\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Put code like that in some sub module of yours and don't worry about it too much  anymore. You can use an object of type <code>Input</code> just like you would use a <code>File</code>: you have to handle seek errors anyway, so handling the inability to seek by stdin should be super easy. An example:</p>\n\n<pre><code>let arg = std::env::args().nth(1).unwrap();\nlet mut input = if arg == \"--\" {\n    Input::Stdin(io::stdin())\n} else {\n    Input::File(fs::File::open(&amp;arg).expect(\"I should handle that..\"))\n};\n\nlet mut v = Vec::new();\nlet _idc = input.read_to_end(&amp;mut v);\n\nmatch input.seek(SeekFrom::End(0)) {\n    Err(_) =&gt; println!(\"oh noes :(\"),\n    Ok(bytes) =&gt; println!(\"yeah, input is {} long\", bytes),\n}\n</code></pre>\n"}], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 919, "favorite_count": 0, "accepted_answer_id": 37225416, "answer_count": 2, "score": 6, "last_activity_date": 1463595858, "creation_date": 1463209654, "last_edit_date": 1463231989, "question_id": 37223741, "link": "https://stackoverflow.com/questions/37223741/how-can-i-take-input-from-either-stdin-or-a-file-if-i-cannot-seek-stdin", "title": "How can I take input from either stdin or a file if I cannot seek stdin?", "body": "<p>I am porting some Python to Rust as a learning exercise and need to take input from either a file or stdin. I keep a handle to my input in a struct so I thought I'd just make a <code>Box&lt;io::Read&gt;</code> but I ran into a situation where I need to seek on the input, and <code>seek</code> isn't part of the <code>Read</code> trait. I know you can't seek in pipes, so I'm going ahead and assuming for now that this method only gets called when the input is a file, but my problem is that I can't check that and downcast in Rust.</p>\n\n<p>I know that I could use an enum for the two input types, but it seems like there should be a more elegant way to do this. And that's my question, how do you do this and not make a mess?</p>\n\n<p>Is it possible to wrap stdin or a file in the same sort of buffer so I could just use that type and not worry about the type of IO?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1463160670, "post_id": 37215739, "comment_id": 61963298, "body": "See also <a href=\"http://stackoverflow.com/q/34363984/155423\">What is Vec&lt;_&gt;?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 1, "creation_date": 1463162576, "post_id": 37215830, "comment_id": 61964255, "body": "Thanks for that. I prefer to be explicit about all types, because omitting types to me just makes code unreadable, which is why I always specify types in let bindings. I know this is seems like an anti pattern in Rust, but I waste too much time in figuring out the types of things, so I&#39;d rather be explicit."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 1, "creation_date": 1463162951, "post_id": 37215830, "comment_id": 61964433, "body": "@Zephilim: There&#39;s an interesting argument about type elision; some argue types are necessary for understanding, others that they clutter the real information. It&#39;s a very personal choice in the end :)"}, {"owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "edited": false, "score": 0, "creation_date": 1463163248, "post_id": 37215830, "comment_id": 61964579, "body": "Well you can guess what side of the argument I&#39;m on. It wouldn&#39;t be so bad if I had a decent IDE that could go to the definition of things, but thats not my setup at the moment. I&#39;m just using Atom as a text editor which can&#39;t do this. I tried VisualRust, but that&#39;s hopeless at the moment."}, {"owner": {"reputation": 2652, "user_id": 5445670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xrwS2.png?s=128&g=1", "display_name": "Solomon Ucko", "link": "https://stackoverflow.com/users/5445670/solomon-ucko"}, "edited": false, "score": 0, "creation_date": 1586834427, "post_id": 37215830, "comment_id": 108267124, "body": "FYI, for the turbofish, you could probably use <code>::&lt;Vec&lt;_&gt;&gt;</code> instead of <code>::&lt;Vec&lt;String&gt;&gt;</code>."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 19, "last_activity_date": 1463161318, "last_edit_date": 1463161318, "creation_date": 1463159847, "answer_id": 37215830, "question_id": 37215739, "link": "https://stackoverflow.com/questions/37215739/what-does-it-mean-to-instantiate-a-rust-generic-with-an-underscore/37215830#37215830", "title": "What does it mean to instantiate a Rust generic with an underscore?", "body": "<p>It's a placeholder. In this context, it means that there isn't enough information for the compiler to infer a type.</p>\n\n<p>You can use this in your code to make the compiler infer the type for you. For example: </p>\n\n<pre><code>pub fn main() {\n    let letters: Vec&lt;_&gt; = vec![\"a\", \"b\", \"c\"]; // Vec&lt;&amp;str&gt;\n}\n</code></pre>\n\n<p>This is particularly handy because in many cases you can avoid using the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\">\"turbofish operator\"</a>:</p>\n\n<pre><code>fn main() {\n    let bar = [1, 2, 3];\n    let foos = bar.iter()\n                  .map(|x| format!(\"{}\", x))\n                  .collect::&lt;Vec&lt;String&gt;&gt;(); // &lt;-- the turbofish\n}\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>fn main() {\n    let bar = [1, 2, 3];\n    let foos: Vec&lt;_&gt; = bar // &lt;-- specify a type and use '_' to make the compiler\n                           //     figure the element type out\n            .iter()\n            .map(|x| format!(\"{}\", x))\n            .collect(); // &lt;-- no more turbofish\n}\n</code></pre>\n"}], "owner": {"reputation": 2672, "user_id": 223936, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j58Xn.jpg?s=128&g=1", "display_name": "Plastikfan", "link": "https://stackoverflow.com/users/223936/plastikfan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3335, "favorite_count": 1, "accepted_answer_id": 37215830, "answer_count": 1, "score": 14, "last_activity_date": 1463161318, "creation_date": 1463159499, "last_edit_date": 1463159869, "question_id": 37215739, "link": "https://stackoverflow.com/questions/37215739/what-does-it-mean-to-instantiate-a-rust-generic-with-an-underscore", "title": "What does it mean to instantiate a Rust generic with an underscore?", "body": "<p>While working with serde_json for reading json documents, I wrote the following line of code to obtain the result of unwrapping the return value of <code>serde_json::from_str</code>:</p>\n\n<pre><code>fn get_json_content(content_s: &amp;str) -&gt; Option&lt;Value&gt; {\n    let ms: String = serde_json::from_str(content_s).unwrap; // &lt;--\n\n    match serde_json::from_str(content_s) {\n        Ok(some_value) =&gt; Some(some_value),\n        Err(_) =&gt; None\n    }\n}\n</code></pre>\n\n<p>As you can see, I forgot the <code>()</code> on the end of the call to <code>unwrap</code>, which resulted in the following error:</p>\n\n<blockquote>\n  <p>error: attempted to take value of method\n  <code>unwrap</code> on type <code>core::result::Result&lt;_, serde_json::error::Error&gt;</code></p>\n\n<pre><code>let ms: String = serde_json::from_str(content_s).unwrap;\n</code></pre>\n</blockquote>\n\n<p>But when I looked at this a bit further, the thing that struck me as odd was:</p>\n\n<pre><code>core::result::Result&lt;_, serde_json::error::Error&gt;\n</code></pre>\n\n<p>I understand what underscore means in a match context, but to instantiate a generic? So what does this mean? I couldn't find any answers in the Rust book, or reference, or a web search.</p>\n"}, {"tags": ["linux", "memory-leaks", "rust", "valgrind"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1557691807, "last_edit_date": 1557691807, "creation_date": 1463158996, "answer_id": 37215627, "question_id": 37215574, "link": "https://stackoverflow.com/questions/37215574/why-does-valgrind-show-no-allocations-for-a-rust-program/37215627#37215627", "title": "Why does Valgrind show no allocations for a Rust program?", "body": "<h1>Rust 1.32</h1>\n\n<p>As of Rust 1.32, the <em>default allocator</em> for an executable is <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17\" rel=\"nofollow noreferrer\">now the system allocator</a>, so you don't need to set anything by default.</p>\n\n<h1>Previous versions</h1>\n\n<p>Rust uses jemalloc as the allocator when you build a binary. The way that jemalloc is currently compiled <a href=\"https://github.com/rust-lang/rust/issues/28224\" rel=\"nofollow noreferrer\">does not contain the Valgrind hooks needed</a>.</p>\n\n<p>If you need the ability to track allocations with Valgrind, you can switch to the the system allocator if you are using nightly Rust.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51509314/155423\">Why does Valgrind not detect a memory leak in a Rust program using nightly 1.29.0?</a></li>\n</ul>\n"}], "owner": {"reputation": 775, "user_id": 5165589, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/Pkffz.jpg?s=128&g=1", "display_name": "Timofey", "link": "https://stackoverflow.com/users/5165589/timofey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1248, "favorite_count": 0, "accepted_answer_id": 37215627, "answer_count": 1, "score": 2, "last_activity_date": 1557691807, "creation_date": 1463158778, "last_edit_date": 1557691675, "question_id": 37215574, "link": "https://stackoverflow.com/questions/37215574/why-does-valgrind-show-no-allocations-for-a-rust-program", "title": "Why does Valgrind show no allocations for a Rust program?", "body": "<p>I'm learning Rust and I was playing with <code>Box</code>, so I tried checking leaks with <code>valgrind</code> but it shows that there are no allocations on the heap:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc -C opt-level=0 raii.rs\n$ valgrind ./raii\n==3850== Memcheck, a memory error detector\n==3850== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==3850== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info\n==3850== Command: ./raii\n==3850== \n5\nChanged:10\n==3850== \n==3850== HEAP SUMMARY:\n==3850==     in use at exit: 0 bytes in 0 blocks\n==3850==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==3850== \n==3850== All heap blocks were freed -- no leaks are possible\n==3850== \n==3850== For counts of detected and suppressed errors, rerun with: -v\n==3850== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n</code></pre>\n\n<p><code>valgrind --leak-check=full ./raii</code> shows exaclty the same result.</p>\n\n<p>Here's the Rust code:</p>\n\n<pre><code>fn main() {\n    let mut _box2 = Box::new(5i32);\n\n    println!(\"{}\", _box2);\n    *_box2 = 10i32;\n    println!(\"Changed:{}\", _box2);\n\n    {\n        let _box3 = Box::new(4i32);\n    }\n}\n</code></pre>\n\n<p>Some other info:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc -V\nrustc 1.8.0 (db2939409 2016-04-11)\n\n$ valgrind --version\nvalgrind-3.10.1\n\n$ uname -a\nLinux 3.19.0-59-generic #65~14.04.1-Ubuntu SMP Tue Apr 19 18:57:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre>\n\n<p>Why is that? I thought <code>Box</code> allocates the variable on the heap. Also, <a href=\"http://rustbyexample.com/scope/raii.html\" rel=\"nofollow noreferrer\">this example</a> shows almost the same code and Valgrind shows allocations there.</p>\n\n<p>If I add the following code:</p>\n\n<pre><code>let _stack = (1u64, 2u64, 3u64);\nlet _heap = Box::new((4u64, 5u64, 6u64));\nprintln!(\"Memory used by stack: {} bytes\", std::mem::size_of_val(&amp;_stack));\nprintln!(\"Memory used by heap: {} bytes\", std::mem::size_of_val(&amp;_heap));\n</code></pre>\n\n<p>It prints exactly what I expected:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./raii \nMemory used by stack: 24 bytes\nMemory used by heap: 8 bytes\n</code></pre>\n\n<ul>\n<li>In the second case, the tuple was placed on the heap and a pointer (8 bytes) was pushed to the stack.</li>\n<li>In the first case tuple was placed on the stack, so it takes 24 bytes.</li>\n</ul>\n\n<p>Valgrind seems to be able to count heap allocations from other programs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ valgrind echo \"test\"\n==4575== Memcheck, a memory error detector\n==4575== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4575== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info\n==4575== Command: echo test\n==4575== \ntest\n==4575== \n==4575== HEAP SUMMARY:\n==4575==     in use at exit: 0 bytes in 0 blocks\n==4575==   total heap usage: 30 allocs, 30 frees, 3,681 bytes allocated\n==4575== \n==4575== All heap blocks were freed -- no leaks are possible\n==4575== \n==4575== For counts of detected and suppressed errors, rerun with: -v\n==4575== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n</code></pre>\n"}, {"tags": ["iterator", "rust", "infinite"], "comments": [{"owner": {"reputation": 293, "user_id": 478658, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/357dd2bc31ed5785c639b641415c3db5?s=128&d=identicon&r=PG", "display_name": "Sebastian", "link": "https://stackoverflow.com/users/478658/sebastian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463155710, "post_id": 37211145, "comment_id": 61960606, "body": "Unfortunately, the IntoIterator trait is only defined for <code>[T; N]</code> if <code>N &lt;= 32</code>. So I believe it is not the same as comparing iterators."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463156631, "post_id": 37211145, "comment_id": 61961129, "body": "See also <a href=\"http://stackoverflow.com/q/30540822/155423\">Is there a built-in way to compare two Iterators?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463156885, "post_id": 37211145, "comment_id": 61961261, "body": "<code>IntoIterator</code> isn&#39;t implemented for <i>any</i> array, perhaps you meant something else? Either way, you <a href=\"https://play.rust-lang.org/?gist=253547197eb8e7d678a8395602442cf2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">can get an iterator of the expected values</a>."}], "answers": [{"comments": [{"owner": {"reputation": 293, "user_id": 478658, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/357dd2bc31ed5785c639b641415c3db5?s=128&d=identicon&r=PG", "display_name": "Sebastian", "link": "https://stackoverflow.com/users/478658/sebastian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463150887, "post_id": 37211474, "comment_id": 61957511, "body": "I prefer the answer on the duplicate, so I think I&#39;ll just use that one :)"}], "tags": [], "owner": {"reputation": 293, "user_id": 478658, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/357dd2bc31ed5785c639b641415c3db5?s=128&d=identicon&r=PG", "display_name": "Sebastian", "link": "https://stackoverflow.com/users/478658/sebastian"}, "is_accepted": false, "score": 1, "last_activity_date": 1463146585, "creation_date": 1463146585, "answer_id": 37211474, "question_id": 37211145, "link": "https://stackoverflow.com/questions/37211145/comparing-iterator-with-fixed-sized-array/37211474#37211474", "title": "Comparing iterator with (fixed sized) array", "body": "<p>Turns out I was really close, I believe this works:</p>\n\n<pre><code>#[test]\nfn first_thousand() {\n    assert_eq!(\n        FIRST_100_PRIMES[..],\n        Primes::new().take(100).collect::&lt;Vec&lt;_&gt;&gt;()[..]\n    );\n}\n</code></pre>\n\n<p>(Although I'm not sure if this is the rustacean way of doing it...)</p>\n"}, {"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": true, "score": 3, "last_activity_date": 1463146593, "creation_date": 1463146593, "answer_id": 37211475, "question_id": 37211145, "link": "https://stackoverflow.com/questions/37211145/comparing-iterator-with-fixed-sized-array/37211475#37211475", "title": "Comparing iterator with (fixed sized) array", "body": "<pre><code>let is_correct = Primes::new()\n    .zip(FIRST_100_PRIMES.iter())\n    .all(|(a, &amp;b)| a == b);\nassert!(is_correct);\n</code></pre>\n"}], "owner": {"reputation": 293, "user_id": 478658, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/357dd2bc31ed5785c639b641415c3db5?s=128&d=identicon&r=PG", "display_name": "Sebastian", "link": "https://stackoverflow.com/users/478658/sebastian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 37211475, "answer_count": 2, "score": 2, "last_activity_date": 1463156588, "creation_date": 1463145602, "question_id": 37211145, "link": "https://stackoverflow.com/questions/37211145/comparing-iterator-with-fixed-sized-array", "title": "Comparing iterator with (fixed sized) array", "body": "<p>I built an iterator that generates an infinite list of primes. The types look like this:</p>\n\n<pre><code>pub struct Primes { \u2026 }\n\nimpl Iterator for Primes {\n    type Item = u32;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; { \u2026 }\n}\n</code></pre>\n\n<p>Now I want to test if my iterator returns the correct values by comparing\nthe first 100 values against the correct ones:</p>\n\n<pre><code>#[test]\nfn first_thousand() {\n    assert_eq!(\n        Primes::new().take(100),\n        first_100_primes\n    );\n}\n\nconst first_100_primes: [u32; 100] = [2, 3, \u2026, 541];\n</code></pre>\n\n<p>I do not know how to compare these values. I tried creating a slice (<code>first_100_primes[..]</code>), collecting the iterator values, but I don't seem to be able to compare them.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 4, "creation_date": 1463111756, "post_id": 37200901, "comment_id": 61933977, "body": "You&#39;re intermixing <code>T</code> and <code>f32</code>. Note that your variables <code>l,t,r,b</code> all are set via methods that return <code>f32</code> (<code>top</code>, <code>left</code>, etc). So the &quot;genericness&quot; of your function no longer exists because it is <i>always</i> passed variables of type <code>f32</code>. Can provide a proper answer soon."}, {"owner": {"reputation": 411, "user_id": 6111891, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e38e4b42dfde2bf876b41a9bc3bd1ca6?s=128&d=identicon&r=PG&f=1", "display_name": "AUD_FOR_IUV", "link": "https://stackoverflow.com/users/6111891/aud-for-iuv"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1463112084, "post_id": 37200901, "comment_id": 61934058, "body": "Wow, what a dumb error. That seems to have been the problem though. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1463140338, "post_id": 37200901, "comment_id": 61949671, "body": "Did you &quot;run <code>rustc --explain E0308</code> to see a detailed explanation&quot; as suggested by the error message?"}], "owner": {"reputation": 411, "user_id": 6111891, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/e38e4b42dfde2bf876b41a9bc3bd1ca6?s=128&d=identicon&r=PG&f=1", "display_name": "AUD_FOR_IUV", "link": "https://stackoverflow.com/users/6111891/aud-for-iuv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 195, "favorite_count": 0, "closed_date": 1463140213, "answer_count": 0, "score": 0, "last_activity_date": 1463140315, "creation_date": 1463111294, "last_edit_date": 1463140315, "question_id": 37200901, "link": "https://stackoverflow.com/questions/37200901/mismatched-types-in-generic-trait", "closed_reason": "Duplicate", "title": "Mismatched Types in Generic Trait", "body": "<p>I'm new to Rust, coming from a C++ background, and I'm running into some trouble with implementing default behavior in a generic trait. The following sample trait for a generic <code>Rectangle</code> trait (for <code>i32</code> and <code>f32</code>):</p>\n\n<pre><code>trait Rectangle&lt;T: PartialOrd&gt; {\n    fn left(&amp;self)   -&gt; f32;\n    fn top(&amp;self)    -&gt; f32;\n    fn right(&amp;self)  -&gt; f32;\n    fn bottom(&amp;self) -&gt; f32;\n\n    fn x(&amp;self)      -&gt; f32 { self.left() }\n    fn y(&amp;self)      -&gt; f32 { self.top()  }\n    fn width(&amp;self)  -&gt; f32 { self.right()  - self.left() }\n    fn height(&amp;self) -&gt; f32 { self.bottom() - self.top()  }\n\n    fn is_empty(&amp;self) -&gt; bool {\n        self.left() &gt;= self.right() || self.top() &gt;= self.bottom()\n    }\n\n    fn set_ltrb(&amp;mut self, l: T, t: T, r: T, b: T);\n    fn set_xywh(&amp;mut self, x: T, y: T, w: T, h: T);\n    fn set_wh(&amp;mut self, w: T, h: T);\n\n    fn offset(&amp;mut self, dx: T, dy: T);\n\n    fn intersects(&amp;self, other: &amp;Rectangle&lt;T&gt;) -&gt; bool {\n        let l =  self.left().max(other.left());\n        let t =  self.top().max(other.top());\n        let r =  self.right().max(other.right());\n        let b =  self.bottom().max(other.bottom());\n\n        l &lt; r &amp;&amp; t &lt; b\n    }\n    fn intersect(&amp;mut self, other: &amp;Rectangle&lt;T&gt;) -&gt; bool {\n        let l =  self.left().max(other.left());\n        let t =  self.top().max(other.top());\n        let r =  self.right().max(other.right());\n        let b =  self.bottom().max(other.bottom());\n\n        if l &lt; r &amp;&amp; t &lt; b {\n            self.set_ltrb(l,t,r,b); // This is the offending line\n            true\n        } else {\n            false\n        }\n    }\n}\n\npub struct Rect&lt;T&gt; {\n    pub left:   T,\n    pub top:    T,\n    pub right:  T,\n    pub bottom: T,\n}\n\npub type IRect = Rect&lt;i32&gt;;\npub type FRect = Rect&lt;f32&gt;;\n</code></pre>\n\n<p>results in this error message:</p>\n\n<pre><code>   Compiling dinky v0.1.0 (file:///home/menozzi/Desktop/projects/dinky)\nsrc/rect.rs:37:27: 37:28 error: mismatched types:\n expected `T`,\n    found `f32`\n(expected type parameter,\n    found f32) [E0308]\nsrc/rect.rs:37             self.set_ltrb(l,t,r,b);\n                                         ^\nsrc/rect.rs:37:27: 37:28 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/rect.rs:37:29: 37:30 error: mismatched types:\n expected `T`,\n    found `f32`\n(expected type parameter,\n    found f32) [E0308]\nsrc/rect.rs:37             self.set_ltrb(l,t,r,b);\n                                           ^\nsrc/rect.rs:37:29: 37:30 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/rect.rs:37:31: 37:32 error: mismatched types:\n expected `T`,\n    found `f32`\n(expected type parameter,\n    found f32) [E0308]\nsrc/rect.rs:37             self.set_ltrb(l,t,r,b);\n                                             ^\nsrc/rect.rs:37:31: 37:32 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/rect.rs:37:33: 37:34 error: mismatched types:\n expected `T`,\n    found `f32`\n(expected type parameter,\n    found f32) [E0308]\nsrc/rect.rs:37             self.set_ltrb(l,t,r,b);\n                                               ^\nsrc/rect.rs:37:33: 37:34 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to 4 previous errors\nCould not compile `dinky`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Any idea why there's this type mismatch here?</p>\n"}, {"tags": ["vim", "rust", "vundle"], "comments": [{"owner": {"reputation": 156267, "user_id": 546861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SIhsx.png?s=128&g=1", "display_name": "romainl", "link": "https://stackoverflow.com/users/546861/romainl"}, "edited": false, "score": 0, "creation_date": 1463082541, "post_id": 37195272, "comment_id": 61924814, "body": "More importantly, why do you expect autocompletion in the first place?"}, {"owner": {"reputation": 331, "user_id": 4903810, "user_type": "registered", "profile_image": "https://graph.facebook.com/358054877738725/picture?type=large", "display_name": "soya666", "link": "https://stackoverflow.com/users/4903810/soya666"}, "reply_to_user": {"reputation": 156267, "user_id": 546861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SIhsx.png?s=128&g=1", "display_name": "romainl", "link": "https://stackoverflow.com/users/546861/romainl"}, "edited": false, "score": 0, "creation_date": 1463207139, "post_id": 37195272, "comment_id": 61976900, "body": "@romainl Because it helps to keep the time"}], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 7, "last_activity_date": 1463079849, "creation_date": 1463079849, "answer_id": 37195439, "question_id": 37195272, "link": "https://stackoverflow.com/questions/37195272/rust-autocomplete-doesnt-work-in-vim/37195439#37195439", "title": "Rust autocomplete doesn&#39;t work in Vim", "body": "<p>The Rust vim plugin doesn't support autocomplete. <a href=\"https://github.com/Valloric/YouCompleteMe\" rel=\"noreferrer\">YouCompleteMe</a> has autocomplete for <a href=\"https://github.com/Valloric/YouCompleteMe#rust-semantic-completion\" rel=\"noreferrer\">Rust</a> (powered by <a href=\"https://github.com/phildawes/racer\" rel=\"noreferrer\">racer</a>).</p>\n"}, {"comments": [{"owner": {"reputation": 1582, "user_id": 813000, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/44a0ef9f73d0d1b8bddf1ea468030002?s=128&d=identicon&r=PG", "display_name": "pesho hristov", "link": "https://stackoverflow.com/users/813000/pesho-hristov"}, "edited": false, "score": 0, "creation_date": 1580309203, "post_id": 51444042, "comment_id": 106055871, "body": "I installed this - after some struggling - but now when I do C-x C-o - I get the suggestions and the first one is inserted by default ... :O Which is super uncomfortable ... can we make the window appears and nothing is pre-selected?"}], "tags": [], "owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "is_accepted": false, "score": 4, "last_activity_date": 1532095339, "last_edit_date": 1532095339, "creation_date": 1532094587, "answer_id": 51444042, "question_id": 37195272, "link": "https://stackoverflow.com/questions/37195272/rust-autocomplete-doesnt-work-in-vim/51444042#51444042", "title": "Rust autocomplete doesn&#39;t work in Vim", "body": "<p>YouCompleteMe is a bit complicated to install and heavy, but is probably great if you have many languages you want to autocomplete. In my case, <a href=\"https://github.com/racer-rust/vim-racer\" rel=\"nofollow noreferrer\">VimRacer</a> really does the job! </p>\n\n<p>Here's how to install it:</p>\n\n<ol>\n<li>Install <a href=\"https://github.com/racer-rust/racer\" rel=\"nofollow noreferrer\">Racer</a>.  </li>\n<li>Execute <code>rustup component add rust-src</code> to get the Rust source code.</li>\n<li>Install <a href=\"https://github.com/racer-rust/vim-racer\" rel=\"nofollow noreferrer\">VimRacer</a> using the way you prefer (Vundle or other) and follow the README.</li>\n</ol>\n"}], "owner": {"reputation": 331, "user_id": 4903810, "user_type": "registered", "profile_image": "https://graph.facebook.com/358054877738725/picture?type=large", "display_name": "soya666", "link": "https://stackoverflow.com/users/4903810/soya666"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3782, "favorite_count": 0, "accepted_answer_id": 37195439, "answer_count": 2, "score": 9, "last_activity_date": 1532095339, "creation_date": 1463079286, "last_edit_date": 1463081540, "question_id": 37195272, "link": "https://stackoverflow.com/questions/37195272/rust-autocomplete-doesnt-work-in-vim", "title": "Rust autocomplete doesn&#39;t work in Vim", "body": "<p>I installed Rust and the <a href=\"https://github.com/rust-lang/rust.vim#using-vundle\" rel=\"noreferrer\">Rust vim plugin</a>, but autocomplete does not work.</p>\n\n<ul>\n<li>I'm using a nightly version of Rust (<code>rustc 1.10.0-dev (992bb1332 2016-05-12)</code>.</li>\n<li>I used Vundle to install the plugin</li>\n<li>I'm running Debian GNU/Linux sid</li>\n</ul>\n\n<p><strong>.vimrc</strong></p>\n\n<pre><code>set rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\nPlugin 'VundleVim/Vundle.vim'\nPlugin 'mattn/vim-particle'\nPlugin 'davidhalter/jedi-vim'\nPlugin 'rust-lang/rust.vim'\n\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n</code></pre>\n\n<p>Why is autocomplete not working?</p>\n"}, {"tags": ["string", "pointers", "rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 5, "last_activity_date": 1463050271, "last_edit_date": 1463050271, "creation_date": 1463049810, "answer_id": 37184585, "question_id": 37183823, "link": "https://stackoverflow.com/questions/37183823/get-string-as-a-value-in-formatted-output/37184585#37184585", "title": "Get string as a value in formatted output", "body": "<p>The problem is that <code>into_inter</code> takes the ownership of <code>data</code>, that is, is move out <code>data</code> from <code>self</code>, and that is not allowed (that is what the error says). To iterate in a vector without taking ownership, use <code>iter</code> method:</p>\n\n<pre><code>fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n    let output_data = self.data\n        // [[1, 2], [2, 3]] -&gt; [\"1, 2\", \"2, 3\"]\n        .iter()\n        .map(|row| {\n            row.into_iter()\n                .map(|value| value.to_string())\n                .collect::&lt;Vec&lt;String&gt;&gt;()\n                .join(\", \")\n        })\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        // [\"1, 2\", \"2, 3\"] -&gt; [\"(1, 2)\", \"(2, 3)\"]\n        .into_iter()\n        .map(|string_row| { format!(\"({})\", string_row) })\n        // [\"(1, 2)\", \"(2, 3)\"] -&gt; \"(1, 2),\\n(2, 3)\"\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        .join(\",\\n\");\n    write!(f, \"{}\", output_data)\n}\n</code></pre>\n\n<p>Take a look at <a href=\"https://doc.rust-lang.org/stable/std/fmt/struct.Formatter.html\" rel=\"noreferrer\">Formatter</a>. It has some methods to help write <code>fmt</code>. Here is a version that does not allocate intermediaries vectors and strings:</p>\n\n<pre><code>fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n    let mut sep = \"\";\n    for line in &amp;self.data { // this is like: for line in self.data.iter()\n        try!(f.write_str(sep));\n        let mut d = f.debug_tuple(\"\");\n        for row in line {\n            d.field(row);\n        }\n        try!(d.finish());\n        sep = \",\\n\";\n    }\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 710, "user_id": 2128615, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/eeg0I.gif?s=128&g=1", "display_name": "Relrin", "link": "https://stackoverflow.com/users/2128615/relrin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 37184585, "answer_count": 1, "score": 3, "last_activity_date": 1463057610, "creation_date": 1463047947, "last_edit_date": 1463057610, "question_id": 37183823, "link": "https://stackoverflow.com/questions/37183823/get-string-as-a-value-in-formatted-output", "title": "Get string as a value in formatted output", "body": "<p>I'm trying to pass the \"Tuple lessons\" on the <a href=\"http://rustbyexample.com/\" rel=\"nofollow\">Rust by Example website</a>, but I am stuck on the formatted output implementation. I have this code, which prints the passed matrix:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Matrix{\n  data: Vec&lt;Vec&lt;f64&gt;&gt;   // [[...], [...],] \n}\n\nimpl fmt::Display for Matrix {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let output_data = self.data\n            // [[1, 2], [2, 3]] -&gt; [\"1, 2\", \"2, 3\"]\n            .into_iter()\n            .map(|row| {\n                row.into_iter()\n                    .map(|value| value.to_string())\n                    .collect::&lt;Vec&lt;String&gt;&gt;()\n                    .join(\", \")\n            })\n            .collect::&lt;Vec&lt;String&gt;&gt;()\n            // [\"1, 2\", \"2, 3\"] -&gt; [\"(1, 2)\", \"(2, 3)\"]\n            .into_iter()\n            .map(|string_row| { format!(\"({})\", string_row) })\n            // [\"(1, 2)\", \"(2, 3)\"] -&gt; \"(1, 2),\\n(2, 3)\"\n            .collect::&lt;Vec&lt;String&gt;&gt;()\n            .join(\",\\n\");\n        write!(f, \"{}\", output_data)\n    }\n}\n</code></pre>\n\n<p>But the compiler prints the next message:</p>\n\n<pre><code>&lt;anon&gt;:21:40: 21:44 error: cannot move out of borrowed content [E0507]\n&lt;anon&gt;:21         let output_data = self.data\n                                    ^~~~\n&lt;anon&gt;:21:40: 21:44 help: see the detailed explanation for E0507\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n</code></pre>\n\n<p>I've tried to wrap <code>output_data</code>'s result into a <code>RefCell</code>, but the complier still prints this error. How can I fix this issue, so that the <code>write!</code> macro works correctly?</p>\n"}]