[{"tags": ["rust", "rust-cargo", "rust-actix"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537384390, "post_id": 52412704, "comment_id": 91769161, "body": "If you can, you should install Rust with <a href=\"https://rustup.rs/#\" rel=\"nofollow noreferrer\"><code>rustup</code></a>. It&#39;s much easier to make sure you have the latest toolchain with rustup."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537384642, "post_id": 52412704, "comment_id": 91769277, "body": "And I get the same errors with that combination of versions of <code>actix-web</code> and Rust."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1537386014, "last_edit_date": 1537386014, "creation_date": 1537384885, "answer_id": 52412902, "question_id": 52412704, "link": "https://stackoverflow.com/questions/52412704/cannot-build-actix-web-0-7-8-using-rust-1-25-on-the-windows-subsystem-for-linux/52412902#52412902", "title": "Cannot build actix-web 0.7.8 using Rust 1.25 on the Windows Subsystem for Linux", "body": "<p>According to <a href=\"https://crates.io/crates/actix-web\" rel=\"nofollow noreferrer\">Actix-web's crate page</a>, the latest version (0.7.8) requires Rust version 1.26.0 or higher. Based on your error message, it appears to be because they are taking advantage of some improvements made to <a href=\"https://blog.rust-lang.org/2018/05/10/Rust-1.26.html#nicer-match-bindings\" rel=\"nofollow noreferrer\">pattern matching ergonomics in Rust 1.26.0</a>.</p>\n\n<p>You <em>could</em> roll back to an older version of <code>actix-web</code> \u2014 version 0.6.15 appears to be the latest which works in Rust 1.25.0. However, you're likely to run into similar problems with other libraries and I'd definitely recommend updating Rust instead, so that you can take advantage of the improvements too.</p>\n\n<p>The easiest way to update the Rust toolchain, and keep it updated, is with <a href=\"https://rustup.rs/#\" rel=\"nofollow noreferrer\">Rustup</a>.</p>\n"}], "owner": {"reputation": 25, "user_id": 9597530, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-okI_igs2aoE/AAAAAAAAAAI/AAAAAAAAAho/KsvVfXz7Wpg/photo.jpg?sz=128", "display_name": "Gandalf42", "link": "https://stackoverflow.com/users/9597530/gandalf42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 52412902, "answer_count": 1, "score": 0, "last_activity_date": 1537387154, "creation_date": 1537384054, "last_edit_date": 1537387154, "question_id": 52412704, "link": "https://stackoverflow.com/questions/52412704/cannot-build-actix-web-0-7-8-using-rust-1-25-on-the-windows-subsystem-for-linux", "title": "Cannot build actix-web 0.7.8 using Rust 1.25 on the Windows Subsystem for Linux", "body": "<p>I'm trying to play around with the \"actix-web\" crate using Cargo. I'm using the WSL version of Ubuntu on Windows 10.</p>\n\n<p>Steps I ran:</p>\n\n<ul>\n<li>Install Cargo (and Rust with it) using <code>sudo apt install cargo</code></li>\n<li>Created a project using <code>cargo new hello</code></li>\n<li>Added <code>actix-web = \"0.7.8\"</code> under the <code>[dependencies]</code> in the <code>Cargo.toml</code> file</li>\n<li>Ran <code>cargo run</code> and got the following compile error:</li>\n</ul>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: non-reference pattern used to match a reference (see issue #42640)\n--&gt; /home/ash/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.2/build.rs:375:9\n    |\n375 |     let (_, _, perlasm_format) = ASM_TARGETS.iter().find(|entry| {\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: consider using a reference: `&amp;(_, _, perlasm_format)`\n\nerror[E0658]: non-reference pattern used to match a reference (see issue #42640)\n--&gt; /home/ash/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.2/build.rs:674:9\n    |\n674 |     for (src, dst) in src_dst {\n    |         ^^^^^^^^^^ help: consider using a reference: `&amp;(src, dst)`\n\nerror[E0658]: non-reference pattern used to match a reference (see issue #42640)\n--&gt; /home/ash/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.2/build.rs:737:35\n    |\n737 |             RING_SRCS.iter().any(|(_, f)| cmp(f)) ||\n    |                                   ^^^^^^ help: consider using a reference: `&amp;(_, f)`\n\nerror[E0658]: non-reference pattern used to match a reference (see issue #42640)\n--&gt; /home/ash/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.13.2/build.rs:741:35\n    |\n741 |             RING_SRCS.iter().any(|(_, f)| cmp(f)) ||\n    |                                   ^^^^^^ help: consider using a reference: `&amp;(_, f)`\n</code></pre>\n\n<p>I tried using a wildcard dependency but I could not get it to work.</p>\n\n<p><code>rustc</code> is version <code>1.25.0</code><br>\n<code>cargo</code> is version <code>0.26.0</code></p>\n"}, {"tags": ["generics", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537374859, "post_id": 52410415, "comment_id": 91764689, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52410415/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, What is <code>Foo</code>? Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537375141, "post_id": 52410415, "comment_id": 91764821, "body": "Potential duplicate of <a href=\"https://stackoverflow.com/q/42583027/155423\">Define a trait with a function that returns an associated type with the same lifetime as one parameter</a>."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1537375016, "creation_date": 1537375016, "answer_id": 52410533, "question_id": 52410415, "link": "https://stackoverflow.com/questions/52410415/lifetime-subtyping-and-generics-lifetime-parameter-not-allowed-error/52410533#52410533", "title": "Lifetime subtyping and generics: &quot;lifetime parameter not allowed&quot; error", "body": "<p><code>F</code> is a type variable, not a type and as such cannot have type or lifetime parameters of its own. If you need to constrain a type variable to only hold references that are bounded by a lifetime, you can use the lifetime as a bound:</p>\n\n<pre><code>struct Bar&lt;'a, 'f: 'a, F: Foo&lt;'f&gt; + 'f&gt; {\n    filter: &amp;'a FooRef&lt;'f, F&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 351, "user_id": 8666695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16724471de747f3d50d46cde0c47471a?s=128&d=identicon&r=PG&f=1", "display_name": "Emilien", "link": "https://stackoverflow.com/users/8666695/emilien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1537375016, "creation_date": 1537374514, "last_edit_date": 1537374896, "question_id": 52410415, "link": "https://stackoverflow.com/questions/52410415/lifetime-subtyping-and-generics-lifetime-parameter-not-allowed-error", "title": "Lifetime subtyping and generics: &quot;lifetime parameter not allowed&quot; error", "body": "<p>I tried to follow the <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html#ensuring-one-lifetime-outlives-another-with-lifetime-subtyping\" rel=\"nofollow noreferrer\">strategy described in the book</a> (and the compiler), but I'm stuck on the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>lifetime parameters are not allowed on this type: lifetime parameter not allowed\n</code></pre>\n\n<p>Here is the code snippet:</p>\n\n<pre><code>struct FooRef&lt;'a, F: 'a&gt;(&amp;'a F);\n\nstruct Bar&lt;'a, 'f: 'a, F: Foo&lt;'f&gt;&gt; {\n    filter: &amp;'a FooRef&lt;'f, F&lt;'f&gt;&gt;,\n}\n</code></pre>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1537370293, "post_id": 52408831, "comment_id": 91762041, "body": "Related: <a href=\"https://stackoverflow.com/questions/38571270/can-rust-optimise-away-the-bit-wise-copy-during-move-of-an-object-someday\">Can Rust optimise away the bit-wise copy during move of an object someday?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1537370577, "post_id": 52409020, "comment_id": 91762218, "body": "Ah, surely. So, just to confirm: any structure that has boxes inside, once moved, only copies the header (the constructor and fields of the enum); the boxed data itself isn&#39;t moved at all since it is just a pointer, and the enum owns the area it points to. Correct?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 3, "creation_date": 1537371029, "post_id": 52409020, "comment_id": 91762506, "body": "@MaiaVictor Yes this is why mutex use box."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1537370815, "last_edit_date": 1537370815, "creation_date": 1537369722, "answer_id": 52409020, "question_id": 52408831, "link": "https://stackoverflow.com/questions/52408831/can-i-move-a-vector-to-inside-a-struct-without-fully-copying-it/52409020#52409020", "title": "Can I move a vector to inside a struct without fully copying it?", "body": "<p>This operation only copies the <code>Vec</code> object, i.e. the pointer to its contents (but not the contents themself), capacity and length, so you shouldn't be concerned about the performance:</p>\n\n<pre><code>fn move_vec(v: Vec&lt;usize&gt;) -&gt; Vec&lt;usize&gt; {\n    v\n}\n\nfn main() {\n    let v1 = vec![1, 2, 3];\n    println!(\"{:p}\", &amp;v1[1]);\n\n    let v2 = move_vec(v1);\n    println!(\"{:p}\", &amp;v2[1]); // the same location as above\n}\n</code></pre>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 52409020, "answer_count": 1, "score": 2, "last_activity_date": 1537371946, "creation_date": 1537369176, "last_edit_date": 1537371946, "question_id": 52408831, "link": "https://stackoverflow.com/questions/52408831/can-i-move-a-vector-to-inside-a-struct-without-fully-copying-it", "title": "Can I move a vector to inside a struct without fully copying it?", "body": "<p>Mind the following code:</p>\n\n<pre><code>enum Store {\n    Place { val: Vec&lt;u8&gt; },\n}\n\nfn subst(val: Vec&lt;u8&gt;, store: &amp;mut Store) {\n    *store = Store::Place { val }\n}\n</code></pre>\n\n<p>If I understand correctly, here, <code>subst</code> will move <code>val</code> to inside <code>store</code>, which causes it to be copied. Is there any way to do so without copying the whole vector? By \"copy\" I mean a memory copy. My understanding is that, when a value is moved (such as <code>vec</code> when calling <code>subst(vec, ...)</code>, it requires a full copy to erase the data from the parent function's stack and allocate on the called function's stack. </p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537361940, "post_id": 52402653, "comment_id": 91756596, "body": "The existing <a href=\"https://crates.io/crates/aho-corasick\" rel=\"nofollow noreferrer\">aho-corasick</a> crate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537362354, "post_id": 52402653, "comment_id": 91756865, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/49143770/155423\">Efficiently mutate a vector while also iterating over the same vector</a>; <a href=\"https://stackoverflow.com/q/29322932/155423\">Is there an elegant solution to modifying a structure while iterating?</a>; <a href=\"https://stackoverflow.com/q/47338839/155423\">How do I modify a container while iterating over it?</a> and <b>many more</b>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52402653/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "is_accepted": false, "score": 5, "last_activity_date": 1537351375, "last_edit_date": 1537351375, "creation_date": 1537350979, "answer_id": 52403124, "question_id": 52402653, "link": "https://stackoverflow.com/questions/52402653/mutate-a-field-of-a-vecs-element-while-looping-over-a-field-of-another-element/52403124#52403124", "title": "Mutate a field of a Vec&#39;s element while looping over a field of another element in the same Vec", "body": "<p>Split the slice:</p>\n\n<pre><code>fn build_ac_automaton(nodes: &amp;mut Vec&lt;TrieNode&gt;) {\n    let mut q = VecDeque::new();\n    let (first, rest) = nodes.split_first_mut();\n    for &amp;i in first.next_ids.values() {\n        q.push_back(i);\n        if i == 0 {\n            first.fail_id = Some(0);\n        } else {\n            rest[i-1].fail_id = Some(0);\n        }\n    }\n    ...\n}\n</code></pre>\n\n<p>However it might be less costly to simply clone only the <code>next_ids</code>:</p>\n\n<pre><code>fn build_ac_automaton(nodes: &amp;mut Vec&lt;TrieNode&gt;) {\n    let mut q = VecDeque::new();\n    let ids: Vec&lt;_&gt; = nodes[0].next_ids.values().cloned().collect();\n    for &amp;i in ids {\n        q.push_back(i);\n        nodes[i].fail_id = Some(0);\n    }\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 5080604, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/164e732e11f5900dfd99da5adb7b6c40?s=128&d=identicon&r=PG&f=1", "display_name": "Hung Nguyen", "link": "https://stackoverflow.com/users/5080604/hung-nguyen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1537361981, "creation_date": 1537349555, "last_edit_date": 1537361981, "question_id": 52402653, "link": "https://stackoverflow.com/questions/52402653/mutate-a-field-of-a-vecs-element-while-looping-over-a-field-of-another-element", "title": "Mutate a field of a Vec&#39;s element while looping over a field of another element in the same Vec", "body": "<p>I'm writing a Trie data structure in Rust to implement the Aho-Corasick algorithm. The <code>TrieNode</code> struct respresents a node and looks like this:</p>\n\n<pre><code>use std::collections::{HashMap, HashSet, VecDeque};\n\nstruct TrieNode {\n    next_ids: HashMap&lt;char, usize&gt;,\n    kw_indices: HashSet&lt;usize&gt;,\n    fail_id: Option&lt;usize&gt;,\n}\n</code></pre>\n\n<p>I use the same strategy as a generational arena to implement the trie, where all the nodes are stored in one <code>Vec</code> and reference each other using their indices. When building the automaton after creating the all the nodes, I'm trying to get the following code work without using the <code>clone()</code> method:</p>\n\n<pre><code>fn build_ac_automaton(nodes: &amp;mut Vec&lt;TrieNode&gt;) {\n    let mut q = VecDeque::new();\n    for &amp;i in nodes[0].next_ids.values() {\n        q.push_back(i);\n        nodes[i].fail_id = Some(0);\n    }\n    // ...\n}\n</code></pre>\n\n<p>but the borrow checker is not very happy about it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*nodes` as mutable because it is also borrowed as immutable\n   |\n   |             for &amp;i in nodes[0].next_ids.values() {\n   |                       -----                    - immutable borrow ends here\n   |                       |\n   |                       immutable borrow occurs here\n   |                 q.push_back(i);\n   |                 nodes[i].fail_id = Some(0);\n   |                 ^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>What is another way (if any) to achieve the above without using the costly <code>clone()</code> method?</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 900, "user_id": 672760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da12f051730ce0461aba2502460dbfd7?s=128&d=identicon&r=PG", "display_name": "Martin", "link": "https://stackoverflow.com/users/672760/martin"}, "edited": false, "score": 0, "creation_date": 1537972645, "post_id": 52456947, "comment_id": 91980136, "body": "While i think this answer is really high quality too, I thought the accepted one shows an approach to achieve running futures in a harness, which is more valuable to me, and better targeted at the question. I was about to accept your answer, when I saw the other one come in, and it was a close call, because I do recognize that you answered first and correctly. I am sorry if this is a disappointment to you, and am really grateful for your response."}], "tags": [], "owner": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "is_accepted": false, "score": 4, "last_activity_date": 1537623595, "last_edit_date": 1537623595, "creation_date": 1537621609, "answer_id": 52456947, "question_id": 52402052, "link": "https://stackoverflow.com/questions/52402052/how-can-i-test-a-future-that-is-bound-to-a-tokio-tcpstream/52456947#52456947", "title": "How can I test a future that is bound to a tokio TcpStream?", "body": "<p>The issue is not with the test but with the implementation.</p>\n\n<p>This working test case based on yours has no custom future implementation and only calls <code>TcpStream::connect()</code>. It works as you expect it to.</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::net::Shutdown;\n    use std::net::SocketAddr;\n    use tokio::net::TcpStream;\n    use tokio::prelude::*;\n\n    #[test]\n    fn connect() {\n        let addr: SocketAddr = \"127.0.0.1:4222\".parse().unwrap();\n        let fut = TcpStream::connect(&amp;addr)\n            .and_then(|f| {\n                println!(\"connected\");\n                f.shutdown(Shutdown::Both)\n            }).map_err(|e| panic!(\"error: {:?}\", e));\n        tokio::run(fut)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=32fe325b2b81934f6c7728a93fec87c7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>You are connecting to the same endpoint over and over again in your <code>poll()</code> method. That's not how a future works. The <code>poll()</code> method will be called repeatedly, with the expectation that at some point it will return either <code>Ok(Async::Ready(..))</code> or <code>Err(..)</code>. </p>\n\n<p>If you initiate a new TCP connection every time <code>poll()</code> is called, it will be unlikely to complete in time.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=29c418f13af85f21c7a218cd0f795ae6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here is a modified example that does what you expect</a>:</p>\n\n<pre><code>#[macro_use(try_ready)]\nextern crate futures;\nextern crate tokio;\nuse std::io;\nuse std::net::SocketAddr;\nuse tokio::codec::{Framed, LinesCodec};\nuse tokio::net::{ConnectFuture, TcpStream};\nuse tokio::prelude::*;\n\nstruct MyFuture {\n    tcp: ConnectFuture,\n}\n\nimpl MyFuture {\n    fn new(addr: SocketAddr) -&gt; MyFuture {\n        MyFuture {\n            tcp: TcpStream::connect(&amp;addr),\n        }\n    }\n}\n\nimpl Future for MyFuture {\n    type Item = Framed&lt;TcpStream, LinesCodec&gt;;\n    type Error = io::Error;\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Framed&lt;TcpStream, LinesCodec&gt;&gt;, io::Error&gt; {\n        let strm = try_ready!(self.tcp.poll());\n        Ok(Async::Ready(Framed::new(strm, LinesCodec::new())))\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::net::Shutdown;\n\n    #[test]\n    fn connect() {\n        let addr: SocketAddr = \"127.0.0.1:4222\".parse().unwrap();\n        let fut = MyFuture::new(addr)\n            .and_then(|f| {\n                println!(\"connected\");\n                let cn = f.get_ref();\n                cn.shutdown(Shutdown::Both)\n            }).map_err(|e| panic!(\"error: {:?}\", e));\n        tokio::run(fut)\n    }\n}\n</code></pre>\n\n<p>I'm not certain what you intend your future to do, though; I can't comment if it's the right approach.</p>\n"}, {"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 5, "last_activity_date": 1537887592, "last_edit_date": 1537887592, "creation_date": 1537867135, "answer_id": 52494647, "question_id": 52402052, "link": "https://stackoverflow.com/questions/52402052/how-can-i-test-a-future-that-is-bound-to-a-tokio-tcpstream/52494647#52494647", "title": "How can I test a future that is bound to a tokio TcpStream?", "body": "<p>A simple way to test async code may be to use a dedicated runtime for each test: start it, wait for future completion and shutdown the runtime at the end of the test.</p>\n\n<pre><code>#[test]\nfn my_case() {\n\n    // setup future f\n    // ...\n\n    tokio::run(f);\n}\n</code></pre>\n\n<p>I don't know if there are consolidated patterns already in the Rust ecosystem; see <a href=\"https://github.com/rust-lang-nursery/futures-rs/issues/1169\" rel=\"nofollow noreferrer\">this discussion</a> about the evolution of testing support for future based code.</p>\n\n<h2>Why your code does not work as expected</h2>\n\n<p>When you invoke <code>poll()</code>, the future is queried to check if a value is available.</p>\n\n<p>If a value is not available, an interest is registered so that <code>poll()</code> will be invoked again when something happens that can resolve the future.  </p>\n\n<p>When your <code>MyFuture::poll()</code> is invoked:</p>\n\n<ol>\n<li><code>TcpStream::connect</code> creates a new future <code>TcpStreamNew</code> </li>\n<li><code>TcpStreamNew::poll</code> is invoked immediately only <strong>once</strong> on the future's creation at step 1.</li>\n<li>The future goes out of scope, so the next time you invoke <code>MyFuture::poll</code> you never resolve the previously created futures.</li>\n</ol>\n\n<p>You have registered an interest for a future that, if not resolved the first time you poll it, you never ask back again (poll) for a resolved value or for an error.</p>\n\n<p>The reason of the \"nondeterministic\" behavior is because the first <code>poll</code> sometimes resolve immediately with a <code>ConnectionRefused</code> error and sometimes it waits forever for a future connection event or a failure that it is never retrieved.</p>\n\n<p>Look at <code>mio::sys::unix::tcp::TcpStream</code> used by Tokio:</p>\n\n<pre><code> impl TcpStream {\n     pub fn connect(stream: net::TcpStream, addr: &amp;SocketAddr) -&gt; io::Result&lt;TcpStream&gt; {\n         set_nonblock(stream.as_raw_fd())?;\n\n         match stream.connect(addr) {\n             Ok(..) =&gt; {}\n             Err(ref e) if e.raw_os_error() == Some(libc::EINPROGRESS) =&gt; {}\n             Err(e) =&gt; return Err(e),\n         }\n\n         Ok(TcpStream {\n             inner: stream,\n         })\n     }\n</code></pre>\n\n<p>When you <a href=\"http://man7.org/linux/man-pages/man2/connect.2.html\" rel=\"nofollow noreferrer\"><code>connect</code></a> on a non-blocking socket, the system call may connect/fail immediately or return <code>EINPROGRESS</code>, in this last case a poll must be triggered for retrieving the value of the error.</p>\n"}, {"tags": [], "owner": {"reputation": 1961, "user_id": 132408, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/88d5f8f803895f9f22612570f6d1c363?s=128&d=identicon&r=PG", "display_name": "jsh", "link": "https://stackoverflow.com/users/132408/jsh"}, "is_accepted": false, "score": 1, "last_activity_date": 1604398598, "creation_date": 1604398598, "answer_id": 64660825, "question_id": 52402052, "link": "https://stackoverflow.com/questions/52402052/how-can-i-test-a-future-that-is-bound-to-a-tokio-tcpstream/64660825#64660825", "title": "How can I test a future that is bound to a tokio TcpStream?", "body": "<p>to some degree, you can drop in tokio's test library to make this easier; it supports async/await in unit tests.</p>\n<pre><code>#[tokio::test]\nasync fn my_future_test() {\n  let addr: SocketAddr = &quot;127.0.0.1:4222&quot;.parse().unwrap();\n  match MyFuture { addr }.poll().await {\n    Ok(f) =&gt; assert!(&quot;something good&quot;)\n    Err(e) =&gt; assert!(&quot;something bad&quot;)\n  }\n}\n</code></pre>\n<p><a href=\"https://docs.rs/tokio/0.3.3/tokio/attr.test.html\" rel=\"nofollow noreferrer\">https://docs.rs/tokio/0.3.3/tokio/attr.test.html</a></p>\n"}], "owner": {"reputation": 900, "user_id": 672760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da12f051730ce0461aba2502460dbfd7?s=128&d=identicon&r=PG", "display_name": "Martin", "link": "https://stackoverflow.com/users/672760/martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1941, "favorite_count": 0, "accepted_answer_id": 52494647, "answer_count": 3, "score": 6, "last_activity_date": 1604398598, "creation_date": 1537347794, "last_edit_date": 1537378167, "question_id": 52402052, "link": "https://stackoverflow.com/questions/52402052/how-can-i-test-a-future-that-is-bound-to-a-tokio-tcpstream", "title": "How can I test a future that is bound to a tokio TcpStream?", "body": "<p>I have a future which wraps a TCP stream in a <code>Framed</code> using the <code>LinesCodec</code>. </p>\n\n<p>When I try to wrap this in a test, I get the future blocking around 20% of the time, but because I have nothing listening on the socket I'm trying to connect to, I expect to always get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'tokio-runtime-worker-0' panicked at 'error: Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" }', src/lib.rs:35:24 note: Run with 'RUST_BACKTRACE=1' for a backtrace.\n</code></pre>\n\n<p>This is the test code I have used:</p>\n\n<pre><code>#[macro_use(try_ready)]\nextern crate futures; // 0.1.24\nextern crate tokio;   // 0.1.8\n\nuse std::io;\nuse std::net::SocketAddr;\nuse tokio::codec::{Framed, LinesCodec};\nuse tokio::net::TcpStream;\nuse tokio::prelude::*;\n\nstruct MyFuture {\n    addr: SocketAddr,\n}\n\nimpl Future for MyFuture {\n    type Item = Framed&lt;TcpStream, LinesCodec&gt;;\n    type Error = io::Error;\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Framed&lt;TcpStream, LinesCodec&gt;&gt;, io::Error&gt; {\n        let strm = try_ready!(TcpStream::connect(&amp;self.addr).poll());\n        Ok(Async::Ready(Framed::new(strm, LinesCodec::new())))\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::net::Shutdown;\n\n    #[test]\n    fn connect() {\n        let addr: SocketAddr = \"127.0.0.1:4222\".parse().unwrap();\n        let fut = MyFuture { addr: addr }\n            .and_then(|f| {\n                println!(\"connected\");\n                let cn = f.get_ref();\n                cn.shutdown(Shutdown::Both)\n            }).map_err(|e| panic!(\"error: {:?}\", e));\n        tokio::run(fut)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=6087d956493ffeb9087413db16ad4077&amp;version=stable&amp;mode=debug&amp;edition=2015%20link\" rel=\"noreferrer\">playground</a></p>\n\n<p>I have seen patterns in other languages where the test binary itself offers a mechanism to return results asynchronously, but haven't found a good way of using a similar mechanism in Rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1537353459, "post_id": 52398060, "comment_id": 91751507, "body": "@ljedrz I think this is a bit different. The linked question is specifically about pattern matching the box itself. This is more about matching the contents of the box."}], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 3, "last_activity_date": 1537362886, "last_edit_date": 1537362886, "creation_date": 1537333234, "answer_id": 52398389, "question_id": 52398060, "link": "https://stackoverflow.com/questions/52398060/how-to-pattern-match-a-box-to-get-a-structs-attribute/52398389#52398389", "title": "How to pattern match a Box to get a struct&#39;s attribute?", "body": "<p>You don't need to box the <code>enum</code>:</p>\n\n<pre><code>fn num(value: f64) -&gt; ArithExp {\n    ArithExp::Num { value }\n}\n</code></pre>\n\n<p>The error the compiler will give you will be about providing the rest of the <code>enum</code> variants in the <code>match</code> arms. You can either provide each one, or provide an <code>_</code> arm ... which means \"anything else\":</p>\n\n<pre><code>let mut number = num(1.0);\nmatch number {\n    ArithExp::Num { value } =&gt; println!(\"VALUE = {}\", value),\n    _ =&gt; (), // do nothing if its something else\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4af147a8ead10fce17f73e82c50f1b3e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here it is running on the playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 4, "last_activity_date": 1537361699, "last_edit_date": 1537361699, "creation_date": 1537338805, "answer_id": 52399528, "question_id": 52398060, "link": "https://stackoverflow.com/questions/52398060/how-to-pattern-match-a-box-to-get-a-structs-attribute/52399528#52399528", "title": "How to pattern match a Box to get a struct&#39;s attribute?", "body": "<p>You need to dereference the boxed value so that you can access what's inside the box:</p>\n\n<pre><code>match *number {\n    ArithExp::Num { value } =&gt; println!(\"VALUE = {}\", value),\n    _ =&gt; (),\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=66766b9141fee1659e77111d4b703c79&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 138, "user_id": 9870544, "user_type": "registered", "profile_image": "https://graph.facebook.com/1977276705631183/picture?type=large", "display_name": "Jo&#227;o Pedro S&#225; Medeiros", "link": "https://stackoverflow.com/users/9870544/jo%c3%a3o-pedro-s%c3%a1-medeiros"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3729, "favorite_count": 0, "accepted_answer_id": 52399528, "answer_count": 2, "score": 0, "last_activity_date": 1537362886, "creation_date": 1537331359, "last_edit_date": 1537361670, "question_id": 52398060, "link": "https://stackoverflow.com/questions/52398060/how-to-pattern-match-a-box-to-get-a-structs-attribute", "title": "How to pattern match a Box to get a struct&#39;s attribute?", "body": "<p>I'm trying to access an attribute of a boxed struct inside an enum but I can't figure out how to pattern-match with <code>std::boxed::Box</code></p>\n\n<pre><code>enum ArithExp {\n    Sum {\n        lhs: Box&lt;ArithExp&gt;,\n        rhs: Box&lt;ArithExp&gt;,\n    },\n    Mul {\n        lhs: Box&lt;ArithExp&gt;,\n        rhs: Box&lt;ArithExp&gt;,\n    },\n    Num {\n        value: f64,\n    },\n}\n\nfn num(value: f64) -&gt; std::boxed::Box&lt;ArithExp&gt; {\n    Box::new(ArithExp::Num { value })\n}\n\nlet mut number = num(1.0);\nmatch number {\n    ArithExp::Num { value } =&gt; println!(\"VALUE = {}\", value),\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:22:9\n   |\n22 |         ArithExp::Num { value } =&gt; println!(\"VALUE = {}\", value),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `main::ArithExp`\n   |\n   = note: expected type `std::boxed::Box&lt;main::ArithExp&gt;`\n              found type `main::ArithExp`\n</code></pre>\n\n<p>What is the correct way of accessing the attribute? </p>\n"}, {"tags": ["rust", "yaml", "hyper"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1537334956, "post_id": 52397544, "comment_id": 91741390, "body": "What is the point of your Arc ? <code>cfg_response</code> is a <code>&amp;str</code> so it&#39;s must live as long as your closure live so... forever ? That why compiler ask you static storage. You could transform the reference to a string. <code>let cfg_response = (&amp;cfg0)[&quot;response&quot;].as_str().unwrap().to_string();</code>"}, {"owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537339635, "post_id": 52397544, "comment_id": 91743423, "body": "Umm... no point ^^. I haven&#39;t fully grasp the <code>Rc</code> (my plan is instead of <code>move</code>, I&#39;ll try to counting-based borrow). I hope other parts is clear enough. Okay, I will try to transform it."}], "answers": [{"tags": [], "owner": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "is_accepted": false, "score": 0, "last_activity_date": 1537536027, "last_edit_date": 1537536027, "creation_date": 1537470783, "answer_id": 52431797, "question_id": 52397544, "link": "https://stackoverflow.com/questions/52397544/nested-closure-borrow-failed/52431797#52431797", "title": "Nested closure borrow failed", "body": "<p>The functions you pass the closure into - <a href=\"https://docs.rs/hyper/0.12.10/hyper/server/struct.Builder.html#method.serve\" rel=\"nofollow noreferrer\"><code>hyper::server::Builder::serve</code></a> and <a href=\"https://docs.rs/hyper/0.12.10/hyper/rt/fn.run.html\" rel=\"nofollow noreferrer\"><code>hyper::rt::run()</code></a> - require their arguments to be <code>'static</code>, rather than being bounded by any function.  <code>main</code> isn't considered special in this regard.</p>\n\n<p>The value bounding it, <code>cfg_response</code>, is captured by the outer closure, so the nested closure isn't necessary to get the error.\nHere's a very small program that has the same problem:</p>\n\n<pre><code>fn main() {\n    let cfg0 = String::from(\"hello world\");\n    let cfg_response: &amp;str = &amp;cfg0;\n\n    let handle = move || {\n        // this closure takes ownership of cfg_response, a reference to cfg0.  Since cfg0 will not\n        // outlive the function, neither can handle.  If it instead took ownership of cfg0 or a\n        // clone of it, it would have no outside references and could live forever.\n        return cfg_response.to_owned();\n    };\n\n    serve(handle);\n}\n\nfn serve&lt;F: Fn() -&gt; String + 'static&gt;(handle: F) {\n    loop {\n        println!(\"{}\", handle());\n    }\n}\n</code></pre>\n\n<p>As @Stargateur pointed out, this can be solved by making <code>cfg_response</code> owned.</p>\n\n<p>Alternatively, you could initialize <code>cfg0</code> in a lazy_static like so:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nlazy_static! {\n    static ref cfg0: String = String::from(\"hello world\");\n}\n</code></pre>\n\n<p>This way, you can still use a borrowed value because it meets the lifetime requirements.</p>\n"}], "owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 194, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1537536027, "creation_date": 1537327449, "last_edit_date": 1537535951, "question_id": 52397544, "link": "https://stackoverflow.com/questions/52397544/nested-closure-borrow-failed", "title": "Nested closure borrow failed", "body": "<p>I want to parse a YAML file and use the value inside a service for a HTTP request. Line 35 is the end of main function.</p>\n\n<pre><code>extern crate hyper;\nextern crate libc;\nextern crate yaml_rust;\n\nuse hyper::rt::Future;\nuse hyper::service::service_fn_ok;\nuse hyper::{Body, Response, Server};\nuse std::sync::Arc;\nuse yaml_rust::YamlLoader;\n\nfn main() {\n    let content: String = String::from(\"response: Hello world\");\n    let cfg = Arc::new(YamlLoader::load_from_str(content.as_str()).unwrap());\n    let cfg0 = (&amp;cfg[0]).clone();\n    let cfg_response = (&amp;cfg0)[\"response\"].as_str().unwrap();\n\n    // A `Service` is needed for every connection, so this\n    // creates on of our `hello_world` function.\n    let handle = move || {\n        let cfg_response = cfg_response.clone();\n\n        service_fn_ok(move |_| Response::new(Body::from(String::from(cfg_response.clone()))))\n    };\n\n    // Serve HTTP protocol\n    // This is our socket address...\n    let addr: std::net::SocketAddr = ([127, 0, 0, 1], 3000).into();\n\n    let server = Server::bind(&amp;addr)\n        .serve(handle)\n        .map_err(|e| eprintln!(\"server error: {}\", e));\n\n    // Run this server for... forever!\n    hyper::rt::run(server);\n}\n</code></pre>\n\n<p>Unfortunately, I encountered a nested closure leading to a strange borrow error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `cfg0` does not live long enough\n  --&gt; src/main.rs:15:26\n   |\n15 |     let cfg_response = (&amp;cfg0)[\"response\"].as_str().unwrap();\n   |                          ^^^^ borrowed value does not live long enough\n...\n35 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I tried to </p>\n\n<ol>\n<li>clone it before borrow</li>\n<li>use <code>Arc</code> to make it counter-based,</li>\n<li>modify assignment </li>\n</ol>\n\n<p>all to no avail</p>\n\n<p>Why does this happen? How do I solve this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537310672, "post_id": 52395279, "comment_id": 91736121, "body": "You are trying to implement <a href=\"https://github.com/rust-lang/rfcs/pull/2393\" rel=\"nofollow noreferrer\"><i>delegation</i></a>."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1537309619, "last_edit_date": 1592644375, "creation_date": 1537309619, "answer_id": 52395411, "question_id": 52395279, "link": "https://stackoverflow.com/questions/52395279/how-can-i-list-all-implemented-traits-for-a-given-type-during-compilation-in-a-m/52395411#52395411", "title": "How can I list all implemented traits for a given type during compilation in a macro?", "body": "<p>You can't.</p>\n<blockquote>\n<h1><a href=\"https://rust-lang-nursery.github.io/rustc-guide/rustc-driver.html\" rel=\"nofollow noreferrer\">The Rustc Driver</a>:</h1>\n<p>[\u2026] the main phases of the compiler are:</p>\n<ol>\n<li>Parse Input: Initial crate parsing</li>\n<li>Configure and Expand: Resolve <code>#[cfg]</code> attributes, name resolution, and <strong>expand macros</strong></li>\n<li>Run Analysis Passes: <strong>Run trait resolution, typechecking</strong>, region checking and other miscellaneous analysis passes on the crate</li>\n<li>Translate to LLVM: Translate to the in-memory form of LLVM IR and turn it into an executable/object files</li>\n</ol>\n</blockquote>\n<p>(emphasis is mine)</p>\n<p>Macros are expanded before trait resolution is done, so at the time your macro is expanded, type information is unknown.</p>\n"}], "owner": {"reputation": 126, "user_id": 4709888, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PslUe.png?s=128&g=1", "display_name": "dotPoozer", "link": "https://stackoverflow.com/users/4709888/dotpoozer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 39, "favorite_count": 1, "accepted_answer_id": 52395411, "answer_count": 1, "score": 0, "last_activity_date": 1537310609, "creation_date": 1537308784, "last_edit_date": 1537310609, "question_id": 52395279, "link": "https://stackoverflow.com/questions/52395279/how-can-i-list-all-implemented-traits-for-a-given-type-during-compilation-in-a-m", "title": "How can I list all implemented traits for a given type during compilation in a macro?", "body": "<p>I'm looking for a way to find all traits implemented for a given type, during compilation, for use within a macro.</p>\n\n<p>My use case is that I'd like to write a macro that creates newtype structs and implements all inner type traits, or at least a subset of them.</p>\n"}, {"tags": ["parallel-processing", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537310275, "post_id": 52395266, "comment_id": 91736016, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a> (answers cover more than I/O). If you disagree, please <a href=\"https://stackoverflow.com/posts/52395266/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537310464, "post_id": 52395266, "comment_id": 91736069, "body": "If it&#39;s not answered by that, please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52395266/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your situation on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537310543, "post_id": 52395266, "comment_id": 91736092, "body": "Providing a MCVE will also reduce the chances of this question being closed as <i>too broad</i>."}, {"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537354199, "post_id": 52395266, "comment_id": 91751955, "body": "@Shepmaster, I&#39;ve updated my question, clarifying what I could."}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 266, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1537354111, "creation_date": 1537308729, "last_edit_date": 1537354111, "question_id": 52395266, "link": "https://stackoverflow.com/questions/52395266/how-to-run-workload-in-the-background", "title": "How to run workload in the background?", "body": "<p>I've a GUI application that is based on a loop. The loop can run more often than every frame, so it needs to be lightweight. There's a heavy workload that needs to be done from time to time. I'm not sure how to implement that. I'm imagining something like:</p>\n\n<pre><code>extern crate tokio; // 0.1.7\nextern crate tokio_threadpool; // 0.1.2\n\nuse std::{thread, time::Duration};\nuse tokio::{prelude::*, runtime::Runtime};\n\nfn delay_for(\n    seconds: u64\n    ) -&gt; impl Future&lt;Item = u64, Error = tokio_threadpool::BlockingError&gt; \n{\n    future::poll_fn(move || {\n        tokio_threadpool::blocking(|| {\n            thread::sleep(Duration::from_secs(seconds));\n            seconds\n        })\n    })\n}\n\nfn render_frame(n: i8) {\n    println!(\"rendering frame {}\", n);\n    thread::sleep(Duration::from_millis(500));\n}\n\nfn send_processed_data_to_gui(n: i8) {\n    println!(\"view updated. result of background processing was {}\", n);\n}\n\nfn main() {\n    let mut frame_n = 0;\n    let frame_where_some_input_triggers_heavy_work = 2;\n    let mut parallel_work: Option&lt;BoxedFuture&gt; = None;\n    loop {\n        render_frame(frame_n);\n        if frame_n == frame_where_some_input_triggers_heavy_work {\n            parallel_work = Some(execute_in_background(delay_for(1)));\n        }\n\n        // check if there's parallel processing going on\n        // and handle result if it's finished\n        parallel_work\n            .take()\n            .map(|parallel_work| {\n                if parallel_work.done() {\n                    // giving result back to app\n                    send_processed_data_to_gui(parallel_work.result())\n                }\n            });\n\n        frame_n += 1;\n        if frame_n == 10 {\n            break;\n        }\n    }\n}\n\nfn execute_in_background(work: /* ... */) -&gt; BoxedFuture {\n    unimplemented!()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=693f3c62c133704f295eb66cb2fb0fdf&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>Above example is based on the <a href=\"https://stackoverflow.com/a/41937561/1714997\">linked answer's tokio-threadpool example</a>. That example has a data flow like this: </p>\n\n<pre><code>let a = delay_for(3);\nlet b = delay_for(1);\nlet sum = a.join(b).map(|(a, b)| a + b); \n</code></pre>\n\n<p>The main difference between that example and my case is that task <code>a</code> triggers task <code>b</code> and when <code>b</code> is finished <code>a</code> gets passed result of <code>b</code> and continues working. It will also repeat this any number of times.</p>\n\n<p>I feel like I'm trying to approach this in a way that is not idiomatic async programming in Rust.</p>\n\n<p>How to run that workload in the background? Or to rephrase in terms of the code sketch above: how do I execute the future in <code>parallel_work</code> in parallel? If my approach is indeed severely off-track, can you nudge me in the right direction?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537303462, "post_id": 52394099, "comment_id": 91733813, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>static COMMENT</code> instead, please."}], "answers": [{"comments": [{"owner": {"reputation": 2667, "user_id": 6078821, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/5fhDI.jpg?s=128&g=1", "display_name": "Andy Carlson", "link": "https://stackoverflow.com/users/6078821/andy-carlson"}, "edited": false, "score": 2, "creation_date": 1537382657, "post_id": 52394263, "comment_id": 91768369, "body": "Thanks for the recommendation regarding the docs. I&#39;m coming over from JS, which seldom has its objects well documented. So I&#39;m used to just introspecting in a REPL to find out what fields the objects have. I sort of brought that habit with me into Rust. But now, I&#39;ve been developing my Rust with the docs close at hand from now on, and it&#39;s a much better experience! Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1537374751, "last_edit_date": 1537374751, "creation_date": 1537303015, "answer_id": 52394263, "question_id": 52394099, "link": "https://stackoverflow.com/questions/52394099/why-is-stdborrowcow-apparently-required-when-mapping-over-strings-with-a-reg/52394263#52394263", "title": "Why is std::borrow::Cow apparently required when mapping over strings with a Regex?", "body": "<p>It is highly recommended to read the documentation for <em>all</em> of the types and methods you are using. For example, <a href=\"https://docs.rs/regex/1.0.5/regex/struct.Regex.html#method.replace_all\" rel=\"nofollow noreferrer\"><code>Regex::replace_all</code></a> is documented as:</p>\n\n<pre><code>pub fn replace_all&lt;'t, R: Replacer&gt;(\n    &amp;self, \n    text: &amp;'t str, \n    rep: R\n) -&gt; Cow&lt;'t, str&gt;\n//   ^^^^^^^^^^^^\n</code></pre>\n\n<p>That's where the <code>Cow</code> comes from.</p>\n\n<p>It is impossible to return an iterator of <code>&amp;str</code>s once you have allocated new strings; you will need to pick a new iterator type. Something like this seems possible, but since your code doesn't compile for reasons other than this lifetime issue, I cannot easily test it.</p>\n\n<pre><code>pub fn lines&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;dyn Iterator&lt;Item = Cow&lt;'a, str&gt;&gt; + 'a&gt;\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537374626, "post_id": 52410352, "comment_id": 91764566, "body": "To be blunt, this is a <i>terrible</i> suggestion. If the <code>replace_all</code> call never needs to be run (and thus never needs to return <code>Cow::Owned</code>), then <i>it shouldn&#39;t be there</i>. Presumably OP actually does need to remove comments for some reason, thus this will always panic. It&#39;s also not &quot;dangerous&quot; at all."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537374696, "post_id": 52410352, "comment_id": 91764602, "body": "I also disagree that returning <code>String</code>s is universally &quot;better&quot;; now you have to re-allocate for every line, which seems like a big waste of performance."}, {"owner": {"reputation": 2667, "user_id": 6078821, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/5fhDI.jpg?s=128&g=1", "display_name": "Andy Carlson", "link": "https://stackoverflow.com/users/6078821/andy-carlson"}, "edited": false, "score": 0, "creation_date": 1537382775, "post_id": 52410352, "comment_id": 91768429, "body": "Indeed, I only need to remove comments. Copies should not be necessary. I think <code>replace_all</code> was a poor method choice on my part. I posted an answer for a much better approach."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 0, "last_activity_date": 1537374512, "last_edit_date": 1537374512, "creation_date": 1537374268, "answer_id": 52410352, "question_id": 52394099, "link": "https://stackoverflow.com/questions/52394099/why-is-stdborrowcow-apparently-required-when-mapping-over-strings-with-a-reg/52410352#52410352", "title": "Why is std::borrow::Cow apparently required when mapping over strings with a Regex?", "body": "<p>As you have already discovered, <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a> comes from <a href=\"https://docs.rs/regex/1.0.5/regex/struct.Regex.html#method.replace_all\" rel=\"nofollow noreferrer\"><code>Regex::replace_all</code></a></p>\n\n<p>In your case, there is a <em>very dangerous and discouraged</em> way to get an iterator of <code>&amp;str</code>:</p>\n\n<pre><code>extern crate regex; // 1.0.5\n\nuse regex::Regex;\nuse std::borrow::Cow;\n\npub struct Parser {\n    code: String,\n}\n\nimpl Parser {\n    pub fn new(code: String) -&gt; Parser {\n        Parser { code }\n    }\n\n    pub fn lines&lt;'a&gt;(&amp;'a self, comment: Regex) -&gt; Box&lt;Iterator&lt;Item = &amp;'a str&gt; + 'a&gt; {\n        let lines = self\n            .code\n            .split(\"\\n\")\n            .map(move |line| comment.replace_all(line, \"\"))\n            .map(|cow| match cow {\n                Cow::Borrowed(sref) =&gt; sref,\n                Cow::Owned(_) =&gt; panic!(\"I hope never to be here\"),\n            });\n        Box::new(lines)\n    }\n}\n\nfn main() {\n    let comment: Regex = Regex::new(r\"//.*$\").unwrap();\n\n    let p = Parser::new(\"hello\\nworld\".to_string());\n\n    for item in p.lines(comment) {\n        println!(\"{:?}\", item);\n    }\n}\n</code></pre>\n\n<p>This works because there are no <code>Cow</code>s that allocate strings.</p>\n\n<p>A better way could be to return an iterator of <code>String</code>s:</p>\n\n<pre><code>pub fn lines&lt;'a&gt;(&amp;'a self, comment: Regex) -&gt; Box&lt;Iterator&lt;Item = String&gt; + 'a&gt; {\n    let lines = self\n        .code\n        .split(\"\\n\")\n        .map(move |line| comment.replace_all(line, \"\"))\n        .map(|cow| cow.into_owned());\n\n    Box::new(lines)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2667, "user_id": 6078821, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/5fhDI.jpg?s=128&g=1", "display_name": "Andy Carlson", "link": "https://stackoverflow.com/users/6078821/andy-carlson"}, "is_accepted": false, "score": 1, "last_activity_date": 1537382470, "creation_date": 1537382470, "answer_id": 52412323, "question_id": 52394099, "link": "https://stackoverflow.com/questions/52394099/why-is-stdborrowcow-apparently-required-when-mapping-over-strings-with-a-reg/52412323#52412323", "title": "Why is std::borrow::Cow apparently required when mapping over strings with a Regex?", "body": "<p>Here is the best solution for my case.</p>\n\n<p><code>replace_all</code> is not a good method for this use case. I just want to remove comments. I never need to insert anything into the string. If so, I should just be able to work with string slices. No need for the <code>Cow</code> type introduced by <code>replace_all</code>. Here is how I did it instead.</p>\n\n<pre><code>impl Parser {\n    pub fn lines&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;'a str&gt; + 'a&gt; {\n        let lines = self.code\n            .lines()\n            .map(|line| { line.split(\"//\").next().unwrap() })\n            .map(|line| line.trim())\n            .filter(|line| line.len() &gt; 0);\n\n        Box::new(lines)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2667, "user_id": 6078821, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/5fhDI.jpg?s=128&g=1", "display_name": "Andy Carlson", "link": "https://stackoverflow.com/users/6078821/andy-carlson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 787, "favorite_count": 0, "accepted_answer_id": 52394263, "answer_count": 3, "score": 0, "last_activity_date": 1537382470, "creation_date": 1537302268, "last_edit_date": 1537303203, "question_id": 52394099, "link": "https://stackoverflow.com/questions/52394099/why-is-stdborrowcow-apparently-required-when-mapping-over-strings-with-a-reg", "title": "Why is std::borrow::Cow apparently required when mapping over strings with a Regex?", "body": "<p>I'm implementing a code parser in a <code>Parser</code> struct. I am exposing a pub method <code>lines</code> to iterate over the lines of code with the comments removed. I want to return a <code>Box&lt;Iterator&gt;</code></p>\n\n<pre><code>extern crate regex; // 1.0.5\n\nuse regex::Regex;\n\npub struct Parser {\n    code: String,\n}\n\nstatic comment: Regex = Regex::new(r\"//.*$\").unwrap();\n\nimpl Parser {\n    pub fn new(code: String) -&gt; Parser {\n        Parser { code }\n    }\n\n    pub fn lines(&amp;self) -&gt; Box&lt;Iterator&lt;Item = &amp;str&gt;&gt; {\n        let lines = self\n            .code\n            .split(\"\\n\")\n            .map(|line| comment.replace_all(line, \"\"));\n        Box::new(lines)\n    }\n}\n</code></pre>\n\n<p>However, the compiler is giving <em>this error:</em></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;[closure@src/lib.rs:20:18: 20:54] as std::ops::FnOnce&lt;(&amp;str,)&gt;&gt;::Output == &amp;str`\n  --&gt; src/lib.rs:21:9\n   |\n21 |         Box::new(lines)\n   |         ^^^^^^^^^^^^^^^ expected enum `std::borrow::Cow`, found &amp;str\n   |\n   = note: expected type `std::borrow::Cow&lt;'_, str&gt;`\n              found type `&amp;str`\n   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Map&lt;std::str::Split&lt;'_, &amp;str&gt;, [closure@src/lib.rs:20:18: 20:54]&gt;`\n   = note: required for the cast to the object type `dyn std::iter::Iterator&lt;Item=&amp;str&gt;`\n</code></pre>\n\n<p>It wants me to use <code>std::borrow::Cow</code>, but I can't find anything in <a href=\"https://doc.rust-lang.org/std/iter/struct.Map.html#impl-Iterator\" rel=\"nofollow noreferrer\">the <code>Map</code> docs</a> mentioning this requirement. Why is this necessary? Can I avoid it?</p>\n"}, {"tags": ["data-structures", "rust", "iterator", "hashset"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537287861, "post_id": 52390801, "comment_id": 91726813, "body": "&quot;function that takes a list of numbers and a maximum value, and sums all multiples of the given numbers up to the maximum (duplicates are counted once only).&quot; please for this kind of thing do a exemple of input and output that cover all your need, because my head is already burning to trying to match what you said with your personal way of coding."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1537288655, "post_id": 52390801, "comment_id": 91727245, "body": "Extra pro-tips: (1) provide a link to the Playground (like <a href=\"https://play.rust-lang.org/?gist=8944be7f2b868489c25f12d09452df6d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this</a>) whenever possible; (2) <code>flatten</code> after <code>map</code> can be obtained with just a single <code>flat_map</code>."}], "answers": [{"comments": [{"owner": {"reputation": 554, "user_id": 5899686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1a39344e13f46e5cbaca48c0bee8704?s=128&d=identicon&r=PG&f=1", "display_name": "avy", "link": "https://stackoverflow.com/users/5899686/avy"}, "edited": false, "score": 0, "creation_date": 1537288720, "post_id": 52391012, "comment_id": 91727283, "body": "Ah yeah, so they join up consecutively.  I had it in my head rust still knew it was a set.  Thanks!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1537288261, "creation_date": 1537288261, "answer_id": 52391012, "question_id": 52390801, "link": "https://stackoverflow.com/questions/52390801/why-do-i-get-an-inconsistent-result-when-i-chain-iterators-instead-of-collecting/52391012#52391012", "title": "Why do I get an inconsistent result when I chain iterators instead of collecting to a temporary HashSet?", "body": "<p>You have removed the intermediate <code>HashSet</code>, which was actually serving a purpose, according to your original statement of requirements:</p>\n\n<blockquote>\n  <p>duplicates are counted once only</p>\n</blockquote>\n\n<p>Removing the step of storing the values in a <code>HashSet</code> means that duplicates will be counted each time they occur, which should explain the difference.</p>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1537290257, "post_id": 52391161, "comment_id": 91727989, "body": "Also, <code>itertools</code> provides a <a href=\"https://docs.rs/itertools/0.7.8/itertools/trait.Itertools.html#method.unique\" rel=\"nofollow noreferrer\"><code>unique</code></a> adaptor, which keeps track of unique values internally."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1537342213, "post_id": 52391161, "comment_id": 91744764, "body": "@E_net4: That being said, complexity wise, there&#39;s bond to be a <code>HashSet</code> or <code>BTreeSet</code> in there anyway; <code>itertools</code> just makes writing it easier."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 5, "last_activity_date": 1537295017, "last_edit_date": 1537295017, "creation_date": 1537288983, "answer_id": 52391161, "question_id": 52390801, "link": "https://stackoverflow.com/questions/52390801/why-do-i-get-an-inconsistent-result-when-i-chain-iterators-instead-of-collecting/52391161#52391161", "title": "Why do I get an inconsistent result when I chain iterators instead of collecting to a temporary HashSet?", "body": "<p>You didn't remove duplicates in your second snippet because you consume your iterator directly.</p>\n\n<blockquote>\n  <p>(I know merging <code>HashSet</code>s like this probably isn't the best solution).</p>\n</blockquote>\n\n<p>As you need temporary storage to remove duplicates, maybe you could use a <code>Vec</code> and then put it in a set, or instead of using a set, you could sort the <code>Vec</code> and filter duplicate values yourself, but this needs testing.</p>\n\n<blockquote>\n  <p>Also, <code>itertools</code> provides a <a href=\"https://docs.rs/itertools/0.7.8/itertools/trait.Itertools.html#method.unique\" rel=\"nofollow noreferrer\">unique</a> adaptor, which keeps track of unique values internally. \u2013 <a href=\"https://stackoverflow.com/users/1233251/e-net4\">E_net4</a></p>\n</blockquote>\n\n<p>This one should be tested too. This allows you to not worry about how it is implemented.</p>\n\n<p>Finally, you can write your function in one expression:</p>\n\n<pre><code>use std::collections::HashSet;\n\npub fn sum_of_multiples(limit: u32, factors: &amp;[u32]) -&gt; u32 {\n    factors\n        .iter()\n        .flat_map(|factor| {\n            let top = (limit - 1) / factor;\n\n            (1..=top).map(move |num| num * factor)\n        })\n        .collect::&lt;HashSet&lt;u32&gt;&gt;()\n        .iter()\n        .sum()\n}\n</code></pre>\n"}], "owner": {"reputation": 554, "user_id": 5899686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1a39344e13f46e5cbaca48c0bee8704?s=128&d=identicon&r=PG&f=1", "display_name": "avy", "link": "https://stackoverflow.com/users/5899686/avy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 52391012, "answer_count": 2, "score": 0, "last_activity_date": 1545502001, "creation_date": 1537287539, "last_edit_date": 1545502001, "question_id": 52390801, "link": "https://stackoverflow.com/questions/52390801/why-do-i-get-an-inconsistent-result-when-i-chain-iterators-instead-of-collecting", "title": "Why do I get an inconsistent result when I chain iterators instead of collecting to a temporary HashSet?", "body": "<p>I'm writing a Rust function that takes a list of numbers and a maximum value, and sums all multiples of the given numbers up to the maximum (duplicates are counted once only).  The first version of the function I wrote was</p>\n\n<pre><code>use std::collections::HashSet;\n\npub fn sum_of_multiples(limit: u32, factors: &amp;[u32]) -&gt; u32 {\n    let set: HashSet&lt;u32&gt; = factors\n        .iter()\n        .map(|factor| {\n            let top: u32 = (limit - 1) / factor;\n\n            (1..=top).map(move |num| num * factor)\n        }).flatten()\n        .collect();\n\n    set.iter().fold(0, |acc, num| acc + num)\n}\n</code></pre>\n\n<p>(I know merging <code>HashSets</code> like this probably isn't the best solution). This gives the expected result:</p>\n\n<pre><code>println!(\"{}\", sum_of_multiples(100, &amp;[3, 5])) // 2318\n</code></pre>\n\n<p>When I take out the call to <code>collect</code> in the middle and chain the last <code>fold</code>, I get a different answer:</p>\n\n<pre><code>pub fn sum_of_multiples(limit: u32, factors: &amp;[u32]) -&gt; u32 {\n    let val: u32 = factors\n        .iter()\n        .map(|factor| {\n            let top: u32 = (limit - 1) / factor;\n\n            (1..=top).map(move |num| num * factor)\n        }).flatten()\n        .fold(0, |acc, num| acc + num);\n\n    val\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>println!(\"{}\", sum_of_multiples(100, &amp;[3, 5])) // 2633\n</code></pre>\n\n<p>I know the iterators are evaluated lazily, but I assumed they are evaluated in sequence in the order that they are used.  Is this because of the behavior of <code>flatten</code> with <code>HashSet</code>s?  I don't understand why the results are different the second time round, or what the significance (if any) of 2633 is.</p>\n"}, {"tags": ["arrays", "rust", "dependent-type", "constant-expression"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537249923, "post_id": 52379284, "comment_id": 91703692, "body": "Your question is a little bit misleading. What do you mean by <i>&quot;without a concrete variable&quot;</i>? Can you please clarify your question?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1537260004, "post_id": 52379284, "comment_id": 91709068, "body": "To everybody who says &quot;just use <code>size_of(x)&#47;size_of(y)</code>, please try <code>size_of::&lt;[(); 3]&gt;() &#47; size_of::&lt;()&gt;()</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537261123, "post_id": 52379284, "comment_id": 91709677, "body": "@hellow They did not say <code>x</code> and <code>y</code> but <code>[i32; 3]</code> and <code>i32</code>, so that&#39;s totally fine."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537263174, "post_id": 52379284, "comment_id": 91710916, "body": "I would like to know why you need such feature."}, {"owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "edited": false, "score": 0, "creation_date": 1537270989, "post_id": 52379284, "comment_id": 91715728, "body": "I think he wants to know about const generics."}], "answers": [{"comments": [{"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 1, "creation_date": 1537264226, "post_id": 52380350, "comment_id": 91711566, "body": "Note that this is a divide by zero for <code>()</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537281532, "post_id": 52380350, "comment_id": 91722949, "body": "<code>size_of::&lt;&lt;Storage as Index&lt;usize&gt;&gt;::Output&gt;</code>, maybe?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537281902, "post_id": 52380350, "comment_id": 91723203, "body": "Nope, scratch that. Arrays depend on an unsized coercion to implement <code>Index</code>. I don&#39;t know of a way to express the item type."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 6, "last_activity_date": 1537276101, "last_edit_date": 1537276101, "creation_date": 1537252720, "answer_id": 52380350, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable/52380350#52380350", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p>In Rust, you can get the size of a type with <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>std::mem::size_of</code></a>, so you can get the length of your array type the same way as in C++:</p>\n\n<pre><code>use std::mem::size_of;\n\ntype Storage = [i32; 3];\n\nfn main() {\n    println!(\"Length: {}\", size_of::&lt;Storage&gt;() / size_of::&lt;i32&gt;());\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=924682f5b163f4ce5052efd4379fe481&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>However this requires knowing the type of items stored in the array. I don't know of a way to get that without instantiating a variable.</p>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537263291, "post_id": 52380388, "comment_id": 91710987, "body": "@Stargateur This could be used in generic code, though I can&#39;t really come up with an actual use case either."}], "tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": 2, "last_activity_date": 1537276059, "last_edit_date": 1537276059, "creation_date": 1537252861, "answer_id": 52380388, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable/52380388#52380388", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>mem::size_of</code></a>:</p>\n\n<pre><code>let storage_len = std::mem::size_of::&lt;[i32; 3]&gt;() / std::mem::size_of::&lt;i32&gt;();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1537259699, "post_id": 52382182, "comment_id": 91708862, "body": "You do not answer the question: the OP asks to have the result <i>without a concrete variable</i>."}], "tags": [], "owner": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "is_accepted": false, "score": -1, "last_activity_date": 1537259256, "creation_date": 1537259256, "answer_id": 52382182, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable/52382182#52382182", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">Arrays</a> coerce to <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"nofollow noreferrer\">slices</a>, so any method available on slices are also available on arrays. Like <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.len\" rel=\"nofollow noreferrer\"><code>len()</code></a>:</p>\n\n<pre><code>let v = [0u32; 128];\nassert_eq!(128, v.len());\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "is_accepted": true, "score": 8, "last_activity_date": 1616718234, "last_edit_date": 1616718234, "creation_date": 1537270353, "answer_id": 52385654, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable/52385654#52385654", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p>Rust now has support for const generics. I left the old answer so people have an idea why someone might have asked this in the first place.</p>\n<p><strong>New Answer since Rust 1.51</strong>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Length {\n    const LEN: usize;\n}\n\nimpl&lt;T, const LENGTH: usize&gt; Length for [T; LENGTH] {\n    const LEN: usize = LENGTH;\n}\n</code></pre>\n<p><strong>Old Answer</strong>:</p>\n<p>I understand that you want to retrieve the array length from the type information alone. Rust does not have built-in PI types (a.k.a. <em>const generics</em>). This means generic parameters which are <em>not</em> types (like an integer for an array length) are currently not supported by the language.</p>\n<p>There is <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">an issue tracking this</a> and we are likely to see support for it in the future, though not the near future.</p>\n<p>If you have to, you can work around that limitation by implementing a trait for each type:</p>\n<pre><code>trait GetLength {\n    fn len() -&gt; usize;\n}\n\nimpl&lt;T&gt; GetLength for [T; 0] {\n    fn len() -&gt; usize {\n        0\n    }\n}\n\nimpl&lt;T&gt; GetLength for [T; 1] {\n    fn len() -&gt; usize {\n        1\n    }\n}\n\n// ...\n\nfn main() {\n    println!(&quot;{}&quot;, &lt;[String; 1]&gt;::len());\n}\n</code></pre>\n<p>Macros can help prevent repetitive typing:</p>\n<pre><code>trait GetLength {\n    fn len() -&gt; usize;\n}\n\nmacro_rules! impl_get_length {\n    ($v:expr) =&gt; {\n        impl&lt;T&gt; GetLength for [T; $v] {\n            fn len() -&gt; usize {\n                $v\n            }\n        }\n    };\n}\n\nimpl_get_length!{ 0 }\nimpl_get_length!{ 1 }\n\n// ...\n\nfn main() {\n    println!(&quot;{}&quot;, &lt;[String; 1]&gt;::len());\n}\n</code></pre>\n<p>Crates like <a href=\"https://crates.io/crates/typenum\" rel=\"nofollow noreferrer\"><code>typenum</code></a> also help to provide some support for const generics within the existing language.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1537287285, "creation_date": 1537287285, "answer_id": 52390733, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable/52390733#52390733", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p>Just for fun:</p>\n\n<pre><code>use std::mem;\nuse std::ops::Deref;\n\nfn main() {\n    assert_eq!(5, num_elems::&lt;[i32; 5]&gt;());\n}\n\nfn num_elems&lt;T&gt;() -&gt; usize \nwhere \n    T: 'static, \n    &amp;'static T: IntoIterator,\n    &lt;&amp;'static T as IntoIterator&gt;::Item: Deref,\n    &lt;&lt;&amp;'static T as IntoIterator&gt;::Item as Deref&gt;::Target: Sized,\n{\n    fn inner&lt;S, I&gt;() -&gt; usize \n    where \n        I: Deref,\n        &lt;I as Deref&gt;::Target: Sized,\n    { \n        mem::size_of::&lt;S&gt;() / mem::size_of::&lt;I::Target&gt;()\n    }\n\n    inner::&lt;T, &lt;&amp;'static T as IntoIterator&gt;::Item&gt;()\n}\n</code></pre>\n\n<p>This will work for any array up to 32 elements, and will panic if the array element type is zero-sized. Also, you can use other things, besides array types, and I have no idea what it will do.</p>\n"}], "owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1731, "favorite_count": 2, "accepted_answer_id": 52385654, "answer_count": 5, "score": 3, "last_activity_date": 1616718234, "creation_date": 1537247070, "last_edit_date": 1551268951, "question_id": 52379284, "link": "https://stackoverflow.com/questions/52379284/can-i-get-a-rust-arrays-length-with-only-a-type-not-a-concrete-variable", "title": "Can I get a Rust array&#39;s length with only a type, not a concrete variable?", "body": "<p>I want to rewrite the following C++ code into Rust:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>using storage = array&lt;int, 3&gt;;\nconst size_t storage_len = sizeof(storage) / sizeof(storage::value_type);\n</code></pre>\n\n<p>How can I get that constant length value without a concrete variable?</p>\n\n<p>As motivation, although it may seem trivial, I want to print the array's element count without declaring a variable. I know I could use a constant value or declare a dummy variable, but I wonder how Rust can preserve C++ code.</p>\n\n<p>I admit <em>without a concrete variable</em> is not clear. I want to achieve the above C++ feature, but this explanation can be misleading. I'm curious if there is any way to get the array's element type.</p>\n"}, {"tags": ["import", "module", "rust", "unused-variables"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1537231729, "post_id": 52377418, "comment_id": 91699476, "body": "It seems like you should clarify your question. Is the issue <code>hello</code> or <code>bye</code>? Why are both included, if the question is about importing <code>bye</code>? The warning is expected because <code>bye</code> is never used right now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537232369, "post_id": 52377418, "comment_id": 91699636, "body": "Your second unrelated question is probably answered by <a href=\"https://stackoverflow.com/q/25877285/155423\">How to disable unused code warnings in Rust?</a> although the true answer for &quot;how do I get rid of unused code&quot; is to <i>delete that code</i>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1537264049, "post_id": 52377418, "comment_id": 91711449, "body": "In this particular case, if you have some reason to keep the unused function, you can get rid of the warning by making the module public: <code>pub mod module</code>.  Rust does not warn about public unused code by default, since the assumption is that these functions could be used by other projects depending on your code as a library."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1537231890, "creation_date": 1537231890, "answer_id": 52377465, "question_id": 52377418, "link": "https://stackoverflow.com/questions/52377418/how-can-i-import-a-single-function-from-a-module-in-rust/52377465#52377465", "title": "How can I import a single function from a module in Rust?", "body": "<p>There's nothing materially different from importing a module vs a type vs a function vs a trait:</p>\n\n<pre><code>use path::to::function;\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>mod foo {\n    pub fn bar() {}\n}\n\nuse foo::bar;\n\nfn main() {\n    bar();\n}\n</code></pre>\n"}], "owner": {"reputation": 2481, "user_id": 5535114, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vnLGQ.jpg?s=128&g=1", "display_name": "Edgar Ram&#237;rez Mondrag&#243;n", "link": "https://stackoverflow.com/users/5535114/edgar-ram%c3%adrez-mondrag%c3%b3n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 650, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1537232052, "creation_date": 1537231434, "last_edit_date": 1537232052, "question_id": 52377418, "link": "https://stackoverflow.com/questions/52377418/how-can-i-import-a-single-function-from-a-module-in-rust", "title": "How can I import a single function from a module in Rust?", "body": "<p>I'm fairly new to Rust and coming from Python there are some things that are done very differently. In Python, one can import a single function from a .py file by typing <code>from foo import bar</code>, but I still haven't found any equivalent in Rust.</p>\n\n<p>I have the following files:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 main.rs\n\u2514\u2500\u2500 module.rs\n</code></pre>\n\n<p>With the following contents:</p>\n\n<h3>main.rs</h3>\n\n<pre><code>mod module;\n\nfn main() {\n    module::hello();\n}\n</code></pre>\n\n<h3>module.rs</h3>\n\n<pre><code>pub fn hello() {\n    println!(\"Hello\");\n}\n\npub fn bye() {\n    println!(\"Bye\");\n}\n</code></pre>\n\n<p>How do I create my module or type my imports so that I don't get the following warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: function is never used: `bye`\n  --&gt; module.rs:5:1\n   |\n 5 |     pub fn bye() {\n   |     ^^^^^^^^^^^^\n   |\n   = note: #[warn(dead_code)] on by default\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537198893, "post_id": 52371306, "comment_id": 91687324, "body": "@Shepmaster the title is much better phrased that way, but wouldn&#39;t that avoid it being found by people searching for &quot;modify&quot; &quot;inside&quot; &quot;pattern-matching&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537198987, "post_id": 52371306, "comment_id": 91687365, "body": "I changed it because the original form sounds much more like you are asking if you modify something in the <code>&amp;mut Foo { ref mut x }</code> part, not the <code>=&gt; ...</code> part."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537199082, "post_id": 52371306, "comment_id": 91687418, "body": "That being said, your old title can replace your last sentence, which I&#39;ve now done."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537199585, "post_id": 52371306, "comment_id": 91687711, "body": "@Shepmaster I see you deleted your answer in favor of redirecting to another question, but I should point out that my question/code was much simpler and your answer was more straight-forward. The other one is quite complex and confusing. I&#39;m glad I&#39;ve seen it before your deletion. I wonder if S.O. has guidelines for redirecting duplicates even when the more recent thread is more pedagogical."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537199671, "post_id": 52371306, "comment_id": 91687765, "body": "I&#39;ve already updated my other answer to provide a simpler reproduction ;-) Thank you for taking the time to make a better MCVE than the existing question, however! I chose to duplicate because the existing answers have multiple solutions for working around the current limitation, which people tend to appreciate."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537199804, "post_id": 52371306, "comment_id": 91687841, "body": "@Shepmaster hmm yea, but I&#39;m thinking from the perspective of someone Googling, arriving to my question, then arriving to that other question, then seeing that chunk of code on OP and either thinking &quot;well this is someone&#39;s personal code that is probably not related to my problem&quot; and closing the tab, or reading through the whole thing just to get to your simplified answer. (In any case, if a future reader is having this problem, please click the link and skip directly to Shepmaster&#39;s answer.)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1537199859, "post_id": 52371306, "comment_id": 91687871, "body": "I&#39;d like to point out that although NLL fixes this problem, you are still moving out of a reference in <code>*x</code>, which means that <code>x</code> must be <code>Copy</code>. If <code>x</code> is <code>Copy</code>, you can delete the <code>ref mut</code> in the pattern and <a href=\"https://play.rust-lang.org/?gist=500f66210535a079d51eee27dbfb73b9&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">it will work in stable Rust</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537200068, "post_id": 52371306, "comment_id": 91687988, "body": "Related: <a href=\"https://stackoverflow.com/q/36557412/155423\">Change enum variant while moving the field to the new variant</a>"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1537199354, "answer_count": 0, "score": 3, "last_activity_date": 1537199059, "creation_date": 1537198554, "last_edit_date": 1537199059, "question_id": 52371306, "link": "https://stackoverflow.com/questions/52371306/is-it-possible-to-modify-a-value-that-is-being-pattern-matched-on", "closed_reason": "Duplicate", "title": "Is it possible to modify a value that is being pattern-matched on?", "body": "<p>In the following program, I attempt to create a <code>change</code> function which mutably modifies the constructor of a datatype:</p>\n\n<pre><code>enum Typ {\n    Foo { x: u32 },\n    Bar { x: u32 },\n}\nuse Typ::*;\n\nfn change(val: &amp;mut Typ) {\n    match val {\n        &amp;mut Foo { ref mut x } =&gt; *val = Bar { x: *x },\n        &amp;mut Bar { ref mut x } =&gt; *val = Foo { x: *x },\n    }\n}\n\nfn main() {\n    let mut val = Foo { x: 1 };\n    change(&amp;mut val);\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>That does not work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `*val` because it is borrowed\n --&gt; src/main.rs:9:35\n  |\n9 |         &amp;mut Foo { ref mut x } =&gt; *val = Bar { x: *x },\n  |                    ---------      ^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `*val` occurs here\n  |                    |\n  |                    borrow of `*val` occurs here\n\nerror[E0506]: cannot assign to `*val` because it is borrowed\n  --&gt; src/main.rs:10:35\n   |\n10 |         &amp;mut Bar { ref mut x } =&gt; *val = Foo { x: *x },\n   |                    ---------      ^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `*val` occurs here\n   |                    |\n   |                    borrow of `*val` occurs here\n</code></pre>\n\n<p>Is it possible to modify something inside its pattern-matching clause?</p>\n"}, {"tags": ["vector", "rust", "iteration", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537193033, "post_id": 52369237, "comment_id": 91683554, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52369237/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Make it <b>minimal</b> \u2014 does the question really need 3 nested data types when 2 or one would show the problem equally well? Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537193440, "post_id": 52369237, "comment_id": 91683814, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/49143770/155423\">Efficiently mutate a vector while also iterating over the same vector</a>; <a href=\"https://stackoverflow.com/q/29322932/155423\">Is there an elegant solution to modifying a structure while iterating?</a>; <a href=\"https://stackoverflow.com/q/47338839/155423\">How do I modify a container while iterating over it?</a> and <b>many more</b>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52369237/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "owner": {"reputation": 521, "user_id": 4547298, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004482454350/picture?type=large", "display_name": "Fallere", "link": "https://stackoverflow.com/users/4547298/fallere"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "closed_date": 1537362383, "answer_count": 0, "score": 0, "last_activity_date": 1537362438, "creation_date": 1537191923, "last_edit_date": 1537192977, "question_id": 52369237, "link": "https://stackoverflow.com/questions/52369237/complex-vector-manipulation-during-iteration", "closed_reason": "Duplicate", "title": "Complex vector manipulation during iteration", "body": "<p>I have a struct <code>GameLog</code> that holds a <code>Vec&lt;Steps&gt;</code>. <code>Steps</code> holds a <code>Vec&lt;FieldData&gt;</code> and <code>FieldData</code> consists only of basic data types.</p>\n\n<p>I create instances of these types using serde_json. After the deserialisation is done, I need to iterate over all the steps in the <code>GameData</code> and add to it the past version of the fields that are changed in the next turn it doesn't already contain.</p>\n\n<p>I have a working Java implementation I'm trying to port to Rust, but I just can't figure this out, probably because I  don't know enough about Rust's insides.</p>\n\n<p>The current code looks like this:</p>\n\n<pre><code>let data = load_data(\"Path/to/json\");\nlet mut gamelog: Vec&lt;Vec&lt;FieldData&gt;&gt; = Vec::with_capacity(data.steps.len() + 1);\ngamelog.push(Vec::with_capacity(data.init.fields.len()));\ngamelog[0] = data.init.fields;\nfor i in 1..(data.steps.len() - 1) {\n    gamelog.push(Vec::with_capacity(data.steps[i - 1].fields.len()));\n    gamelog[i] = data.steps[i - 1].fields.clone();\n    for future_field in &amp;data.steps[i + 1].fields {\n        let mut inside = false;\n        for current_field in &amp;data.steps[i].fields {\n            if current_field.x == future_field.x &amp;&amp; current_field.y == future_field.y {\n                inside = true;\n            }\n        }\n        if !inside {\n            for j in i..0 {\n                let mut insideb = false;\n                for past_field in &amp;data.steps[j].fields {\n                    if future_field.x == past_field.x &amp;&amp; future_field.y == past_field.y {\n                        gamelog[i].push(past_field.clone());\n                        insideb = true;\n                        break;\n                    }\n                }\n                if insideb {\n                    break;\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>However, this only works by creating copies of the vectors and fields and creates a new <code>Vec</code>.\nWhen I try to manipulate the <code>Vec</code> directly, I most often get a \"can't move out of borrow\" error on the <code>for .. in data.steps[?].fields</code> lines</p>\n\n<p>What would a proper (and possibly much more idiomatic) way of directly manipulating the <code>Vec</code>s in the struct?</p>\n"}, {"tags": ["docker", "rust", "discord"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537190942, "post_id": 52367742, "comment_id": 91682095, "body": "It&#39;s not a &quot;dummy&quot; question, but it is <i>off-topic</i> for Stack Overflow. Asking for &quot;the best&quot; solution is going to be opinion-based 99.9999% of the time, and that&#39;s assuming that there&#39;s even a single &quot;best&quot; answer to start with. For example, there&#39;s no &quot;best&quot; way to sort an array."}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537191013, "post_id": 52367742, "comment_id": 91682142, "body": "Fair push. Would it be better/ok to ask for a way to do it then @Shepmaster?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537193198, "post_id": 52367742, "comment_id": 91683656, "body": "You already know how to do it, you&#39;ve listed two possible ways (environment variable, JSON file). It seems like <a href=\"https://stackoverflow.com/questions/1078031/what-is-the-maximum-size-of-an-environment-variable-value\">environment variables can easily be 4 MB, maybe up to 100&#39;s of MB</a>, so saying it&#39;s &quot;too verbose&quot; seems misleading or incorrect."}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1537191430, "creation_date": 1537187221, "last_edit_date": 1537191430, "question_id": 52367742, "link": "https://stackoverflow.com/questions/52367742/how-to-access-google-service-account-credentials-in-docker", "title": "How to access Google service account credentials in Docker", "body": "<p>I have developed a Discord bot that I would like to push to AWS for a more persistent service than when running on my machine.</p>\n\n<p>That bot uses Google Service Account to access Google spreadsheet data that is currently sitting on my machine as a JSON file.</p>\n\n<p>What's the most secure way to package this as a Docker component (or more generally to move that to some AWS server if using Docker is not the best way to approach this)?</p>\n\n<p>I understand that for most credentials it's best to use environment variables. That would work for the Discord bot credentials but not for Google's which are too verbose.</p>\n\n<p>The bot is developed in Rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 0, "creation_date": 1537162286, "post_id": 52360464, "comment_id": 91666758, "body": "check <a href=\"https://doc.rust-lang.org/book/first-edition/generics.html#resolving-ambiguities\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/first-edition/&hellip;</a> and <a href=\"https://matematikaadit.github.io/posts/rust-turbofish.html\" rel=\"nofollow noreferrer\">matematikaadit.github.io/posts/rust-turbofish.html</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 13, "creation_date": 1537168431, "post_id": 52360464, "comment_id": 91669140, "body": "The most important link regarding this syntax: <a href=\"https://turbo.fish/\" rel=\"nofollow noreferrer\">turbo.fish</a>"}], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 4, "creation_date": 1537167147, "post_id": 52361559, "comment_id": 91668546, "body": "The reason that <code>::</code> is required in expressions is that it avoids a syntax ambiguity with the less-than and greater-than operators. This is different from types, where you write <code>Vec&lt;i32&gt;</code> and not <code>Vec::&lt;i32&gt;</code> (less-than and greater-than don&#39;t exist in the syntax for types)."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 4, "creation_date": 1537172063, "post_id": 52361559, "comment_id": 91670921, "body": "There&#39;s been several attempts to resolve the syntax ambiguity that starblue mentioned (and <a href=\"https://github.com/varkor/rfcs/pull/1\" rel=\"nofollow noreferrer\">some are still ongoing</a>), so it&#39;s possible you might be able to leave the <code>::</code> out some day. It&#39;s a <a href=\"https://github.com/rust-lang/rust/pull/53562\" rel=\"nofollow noreferrer\">trickier problem</a> than it might seem at first glance, though :)"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1537185842, "post_id": 52361559, "comment_id": 91678779, "body": "I prefere <code>c</code> because it&#39;s shorter"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537190795, "post_id": 52361559, "comment_id": 91682002, "body": "Neither <code>b</code> nor <code>c</code> are inherently better than the other. Each have times that they are useful and more succinct. Both are equally idiomatic."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 20, "last_activity_date": 1547451996, "last_edit_date": 1547451996, "creation_date": 1537164139, "answer_id": 52361559, "question_id": 52360464, "link": "https://stackoverflow.com/questions/52360464/what-is-the-syntax-instance-methodsomething/52361559#52361559", "title": "What is the syntax: `instance.method::&lt;SomeThing&gt;()`?", "body": "<p>This construct is called turbofish. If you search for this statement, you will discover its definition and its usage.</p>\n\n<p>Although the first edition of <em>The Rust Programming Language</em> is outdated, I feel that <a href=\"https://doc.rust-lang.org/1.27.0/book/first-edition/generics.html\" rel=\"noreferrer\">this particular section</a> is better than in the <a href=\"https://doc.rust-lang.org/book/second-edition/appendix-02-operators.html#non-operator-symbols\" rel=\"noreferrer\">second book</a>.</p>\n\n<p>Quoting the second edition:</p>\n\n<blockquote>\n  <p><code>path::&lt;...&gt;</code>, <code>method::&lt;...&gt;</code><br>\n  Specifies parameters to generic type, function, or method in an expression; often referred to as turbofish (e.g., <code>\"42\".parse::&lt;i32&gt;()</code>)</p>\n</blockquote>\n\n<p>You can use it in any kind of situation where the compiler is not able to deduce the type parameter, e.g.</p>\n\n<pre><code>fn main () {\n    let a = (0..255).sum();\n    let b = (0..255).sum::&lt;u32&gt;();\n    let c: u32 = (0..255).sum();\n}\n</code></pre>\n\n<p><code>a</code> does not work because it cannot deduce the variable type.<br>\n<code>b</code> does work because we specify the type parameter directly with the turbofish syntax.<br>\n<code>c</code> does work because we specify the type of <code>c</code> directly.</p>\n"}], "owner": {"reputation": 797, "user_id": 4803321, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/26ViJ.png?s=128&g=1", "display_name": "\u5468\u6c49\u6210", "link": "https://stackoverflow.com/users/4803321/%e5%91%a8%e6%b1%89%e6%88%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1409, "favorite_count": 5, "accepted_answer_id": 52361559, "answer_count": 1, "score": 8, "last_activity_date": 1547451996, "creation_date": 1537155805, "last_edit_date": 1537190616, "question_id": 52360464, "link": "https://stackoverflow.com/questions/52360464/what-is-the-syntax-instance-methodsomething", "title": "What is the syntax: `instance.method::&lt;SomeThing&gt;()`?", "body": "<p>I read the below syntax from <a href=\"https://docs.rs/byteorder/1.2.6/byteorder/\" rel=\"noreferrer\">byteorder</a>:</p>\n\n<pre><code>rdr.read_u16::&lt;BigEndian&gt;()\n</code></pre>\n\n<p>I can't find any documentation which explains the syntax <code>instance.method::&lt;SomeThing&gt;()</code> </p>\n"}, {"tags": ["rust", "rust-piston"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1537144977, "creation_date": 1537144977, "answer_id": 52359540, "question_id": 52359477, "link": "https://stackoverflow.com/questions/52359477/what-is-glyphcache-type-in-a-function-to-render-text-in-piston2d/52359540#52359540", "title": "What is GlyphCache type in a function to render text in Piston2d", "body": "<p>The problem is that you are passing a mutable reference to a mutable reference to the <code>GlyphCache</code> to <a href=\"https://docs.rs/piston2d-graphics/0.26.0/graphics/text/struct.Text.html#method.draw\" rel=\"nofollow noreferrer\"><code>draw()</code></a> (<code>render_text</code> receives a mutable reference, and you then create a mutable reference to <em>that</em>). Simply change <code>&amp;mut glyphs</code> to <code>glyphs</code> in the call to <code>draw()</code>.</p>\n\n<p><code>draw()</code> expects a mutable reference to a type that implements <code>Graphics&lt;Texture = &lt;C as CharacterCache&gt;::Texture&gt;</code>, and <code>GlyphCache&lt;GfxFactory, G2dTexture&gt;</code> does implement that trait, but <code>&amp;mut GlyphCache&lt;GfxFactory, G2dTexture&gt;</code> doesn't.</p>\n\n<p>When the type of a function parameter is a concrete type, the compiler will automatically dereference a reference to match the expected type (<a href=\"https://github.com/rust-lang-nursery/rust-clippy\" rel=\"nofollow noreferrer\">Clippy</a> has a lint to identify the places where unnecessary references are created). However, when the type of the function paramter is a generic type (as is the case here), the compiler will not try to do that.</p>\n"}], "owner": {"reputation": 516, "user_id": 5453127, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12ad31b90ff6a3001e6b88d8358dd896?s=128&d=identicon&r=PG&f=1", "display_name": "Samarth Hattangady", "link": "https://stackoverflow.com/users/5453127/samarth-hattangady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 557, "favorite_count": 1, "accepted_answer_id": 52359540, "answer_count": 1, "score": 2, "last_activity_date": 1537144977, "creation_date": 1537143988, "question_id": 52359477, "link": "https://stackoverflow.com/questions/52359477/what-is-glyphcache-type-in-a-function-to-render-text-in-piston2d", "title": "What is GlyphCache type in a function to render text in Piston2d", "body": "<p>I am trying to write a separate function to render text using piston2d. Taking the <a href=\"https://github.com/PistonDevelopers/piston-examples/blob/master/src/hello_world.rs\" rel=\"nofollow noreferrer\">hello_world.rs</a> example, I am trying to extend that to allow me to render text from within a function.</p>\n\n<p>Here is the code that I wrote:</p>\n\n<pre><code>extern crate piston_window;\nextern crate find_folder;\n\nuse piston_window::*;\n\nfn main() {\n    let mut window: PistonWindow = WindowSettings::new(\n            \"piston: try to render text\",\n            [200, 200]\n        )\n        .exit_on_esc(true)\n        .build()\n        .unwrap();\n\n    let assets = find_folder::Search::ParentsThenKids(3, 3)\n        .for_folder(\"assets\").unwrap();\n    println!(\"{:?}\", assets);\n    let ref font = assets.join(\"FiraSans-Regular.ttf\");\n    let factory = window.factory.clone();\n    let mut glyphs = Glyphs::new(font, factory, TextureSettings::new()).unwrap();\n\n    window.set_lazy(true);\n    while let Some(e) = window.next() {\n        window.draw_2d(&amp;e, |c, mut g| {\n            clear([0.0, 0.0, 0.0, 1.0], g);\n            render_text(10.0, 100.0, \"Hello World\", 32, c, &amp;mut g, &amp;mut glyphs);\n        });\n    }\n}\n\nfn render_text(x: f64, y: f64,\n               text: &amp;str, size: u32,\n               c: Context, g: &amp;mut G2d, \n               glyphs: &amp;mut glyph_cache::rusttype::GlyphCache&lt;GfxFactory, G2dTexture&gt;) {\n    text::Text::new(size).draw(\n           text,\n           &amp;mut glyphs,\n           &amp;c.draw_state,\n           c.transform.trans(x, y),\n           g\n        ).unwrap();\n} \n</code></pre>\n\n<p>When I try to run this code, I get the following error:</p>\n\n<pre><code>error[E0277]: the trait bound `&amp;mut piston_window::glyph_cache::rusttype::GlyphCache&lt;'_, gfx_device_gl::factory::Factory, piston_window::Texture&lt;gfx_device_gl::Resources&gt;&gt;: piston_window::character::CharacterCache` is not satisfied\n\nthe trait `piston_window::character::CharacterCache` is not implemented for `&amp;mut piston_window::glyph_cache::rusttype::GlyphCache&lt;'_, gfx_device_gl::factory::Factory, piston_window::Texture&lt;gfx_device_gl::Resources&gt;&gt;`\n</code></pre>\n\n<p>I have tried many different types for <code>glyphs</code>, and this was the farthest I could get.</p>\n\n<p>What should the type be?\nAny guidance is appreciated.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "edited": false, "score": 0, "creation_date": 1537118633, "post_id": 52356492, "comment_id": 91657745, "body": "Just one more clarification. <code>raw::git_buf</code> is the same as <code>libgit2_sys::git_buf</code>?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1537118714, "last_edit_date": 1537118714, "creation_date": 1537117649, "answer_id": 52356492, "question_id": 52356264, "link": "https://stackoverflow.com/questions/52356264/what-do-use-raw-and-raw-rawgit-buf-from-the-git2-rs-wrapper-mean/52356492#52356492", "title": "What do `use raw` and `raw: raw::git_buf` from the git2-rs wrapper mean?", "body": "<p><code>raw</code> is <a href=\"https://github.com/alexcrichton/git2-rs/blob/739ae40aefb292ec72daa11ad9f33ed458a2afa8/src/lib.rs#L73\" rel=\"nofollow noreferrer\">the identifier that git2-rs chooses to give to the libgit2_sys crate</a>:</p>\n\n<pre><code>extern crate libgit2_sys as raw;\n</code></pre>\n\n<p><code>use raw</code> is thus equivalent to <code>use libgit2_sys</code> and conceptually the same as <code>use regex</code> or <code>use itertools</code> \u2014 it simply brings the crate into scope in this module.</p>\n\n<p>Please re-read <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-03-importing-names-with-use.html\" rel=\"nofollow noreferrer\">Referring to Names in Different Modules</a> from <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> for a refresher on the <code>use</code> statement.</p>\n\n<p><code>raw: raw::git_buf</code> defines the field <code>raw</code> of the struct <code>Buf</code> to be of the type <code>raw::git_buf</code>. This is equivalent to <code>raw: libgit2_sys::git_buf</code> and conceptually the same as <code>raw: String</code> or <code>raw: i32</code>.</p>\n\n<p>Please re-read <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\" rel=\"nofollow noreferrer\">Defining and Instantiating Structs</a> for a refresher on how structs are defined.</p>\n"}], "owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 52356492, "answer_count": 1, "score": 0, "last_activity_date": 1537118810, "creation_date": 1537116182, "last_edit_date": 1537118810, "question_id": 52356264, "link": "https://stackoverflow.com/questions/52356264/what-do-use-raw-and-raw-rawgit-buf-from-the-git2-rs-wrapper-mean", "title": "What do `use raw` and `raw: raw::git_buf` from the git2-rs wrapper mean?", "body": "<p>I'm trying to build a safe wrapper over some native Rust-C bindings. I'm referencing the <a href=\"https://github.com/alexcrichton/git2-rs/blob/739ae40aefb292ec72daa11ad9f33ed458a2afa8/src/buf.rs\" rel=\"nofollow noreferrer\">git2-rs</a> codebase and I ran into the following usage:</p>\n\n<pre><code>use raw;\nuse util::Binding;\npub struct Buf {\n    raw: raw::git_buf,\n}\n</code></pre>\n\n<p>What are <code>use raw</code> and <code>raw: raw::git_buf</code> doing? I think this has to do with <code>std::raw</code>. </p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537111679, "post_id": 52355499, "comment_id": 91655807, "body": "The duplicate applied to this question: <code>&amp;Cons(10, &amp;Nil)</code> is promoted to a static lifetime, so it becomes an element of type <code>List&lt;&#39;static&gt;</code>. The same promotion is not possible in the second example because of the local variable <code>n</code>."}], "owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 70, "favorite_count": 0, "closed_date": 1537113386, "answer_count": 0, "score": 2, "last_activity_date": 1537111297, "creation_date": 1537110857, "last_edit_date": 1537111297, "question_id": 52355499, "link": "https://stackoverflow.com/questions/52355499/how-does-the-dropping-of-temporary-values-work-in-rust", "closed_reason": "Duplicate", "title": "How does the dropping of temporary values work in rust?", "body": "<h1>Introduction</h1>\n\n<p>I have tried to verify this statement from <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-04-rc.html#using-rct-to-share-data\" rel=\"nofollow noreferrer\">a chapter of the Rust book about Rc</a>:</p>\n\n<blockquote>\n  <p>We could change the definition of Cons to hold references instead, but then we would have to specify lifetime parameters. By specifying lifetime parameters, we would be specifying that every element in the list will live at least as long as the entire list. The borrow checker wouldn\u2019t let us compile let a = Cons(10, &amp;Nil); for example, because the temporary Nil value would be dropped before a could take a reference to it.</p>\n</blockquote>\n\n<h1>Verification of the statement</h1>\n\n<p>I have tried to implement and print an <code>enum List</code>. The borrow checker has allowed me to compile and execute it. Although the book describes the opposite behavior. </p>\n\n<pre><code>#[derive(Debug)]\nenum List&lt;'a&gt; {\n    Cons(i32, &amp;'a List&lt;'a&gt;),\n    Nil,\n}\n\nuse List::{Cons, Nil};\n\nfn main() {\n    let a = Cons(5, &amp;Cons(10, &amp;Nil));\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>Then i have separately defined the <code>Nil</code> value. This time, the borrow checker worked as the book described it.</p>\n\n<pre><code>fn main() {\n    let n = Nil;\n    let a = Cons(5, &amp;Cons(10, &amp;n));\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>11 |     let a = Cons(5, &amp;Cons(10, &amp;n));\n   |                      ^^^^^^^^^^^^ - temporary value dropped here while still borrowed\n   |                      |\n   |                      temporary value does not live long enough\n</code></pre>\n\n<h1>Questions</h1>\n\n<p>1) Why does the borrow checker allow to compile  <code>Cons(5, &amp;Cons(10, &amp;Nil))</code>? Is it a mistake in the book?</p>\n\n<p>2) Why does the borrow checker allow to compile <code>Cons(5, &amp;Cons(10, &amp;Nil));</code>, but not <code>Cons(5, &amp;Cons(10, &amp;n));</code>?</p>\n\n<p>3) Why does temporary <code>&amp;Cons(10, &amp;n)</code> would be dropped before next <code>Cons</code> could take a reference to it, but not after an execution process going out of the scope (In my case this scope is the main function)?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537117297, "post_id": 52355049, "comment_id": 91657371, "body": "You may also be interested in <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 482, "user_id": 1201945, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/953c11442115a18da0b9d841e17620c1?s=128&d=identicon&r=PG", "display_name": "hannu40k", "link": "https://stackoverflow.com/users/1201945/hannu40k"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537131447, "post_id": 52355049, "comment_id": 91661122, "body": "Great tip, thanks!"}], "owner": {"reputation": 482, "user_id": 1201945, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/953c11442115a18da0b9d841e17620c1?s=128&d=identicon&r=PG", "display_name": "hannu40k", "link": "https://stackoverflow.com/users/1201945/hannu40k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1537109456, "answer_count": 0, "score": 2, "last_activity_date": 1537107788, "creation_date": 1537107788, "question_id": 52355049, "link": "https://stackoverflow.com/questions/52355049/why-does-this-line-order-affect-borrowed-value-lifetime", "closed_reason": "Duplicate", "title": "Why does this line order affect borrowed value lifetime?", "body": "<p>Disclaimer: Learning Rust.</p>\n\n<p>I have the following function:</p>\n\n<pre><code>fn log_action(log_file: &amp;String, transferred_files_count: &amp;i32) -&gt; Result&lt;()&gt; {\n    let mut lines = Vec::new();\n    let count_as_string = transferred_files_count.to_string();\n    lines.push(&amp;count_as_string); // error\n    append_lines_to_file(log_file, &amp;lines)?;\n    Ok(())\n}\n</code></pre>\n\n<p>When trying to push <code>&amp;count_as_string</code> into the vector, I get the error <code>borrowed value does not live long enough</code>. By accident, I noticed when I swap the two top lines, the error disappears:</p>\n\n<pre><code>fn log_action(log_file: &amp;String, transferred_files_count: &amp;i32) -&gt; Result&lt;()&gt; {\n    let count_as_string = transferred_files_count.to_string();\n    let mut lines = Vec::new();\n    lines.push(&amp;count_as_string); // no error!\n    append_lines_to_file(log_file, &amp;lines)?;\n    Ok(())\n}\n</code></pre>\n\n<p>I am confused, in my opinion the order of those two lines should be irrelevant. Can someone explain the logic here?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537101929, "post_id": 52354215, "comment_id": 91653121, "body": "<i>&quot;it might have something to do with outdated compiler software&quot;</i> \u2014 what version of Rust are you using?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537102084, "post_id": 52354215, "comment_id": 91653159, "body": "How much memory does your VPS have? I&#39;d expect that you are running out of memory."}, {"owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "edited": false, "score": 0, "creation_date": 1537102325, "post_id": 52354215, "comment_id": 91653216, "body": "Rust version 1.29.0"}, {"owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "edited": false, "score": 0, "creation_date": 1537102416, "post_id": 52354215, "comment_id": 91653240, "body": "It&#39;s very low, 256MB. It&#39;s just a very minimal web server that I want to run on it."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 5, "creation_date": 1537108680, "post_id": 52354215, "comment_id": 91654913, "body": "Can you run this command: <code>dmesg | egrep -i &#39;killed process&#39;</code>? Does it show rustc being killed? If that&#39;s the case, then Shepmaster is right, the system is out of memory."}, {"owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "edited": false, "score": 0, "creation_date": 1537109081, "post_id": 52354215, "comment_id": 91655036, "body": "Yes sir: <code># dmesg | egrep -i &#39;killed process&#39;</code> [21567294.020606] Out of memory in UB 3063: OOM killed process 558 (rustc) score 0 vm:582256kB, rss:212384kB, swap:57060kB"}, {"owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "edited": false, "score": 0, "creation_date": 1537109183, "post_id": 52354215, "comment_id": 91655065, "body": "Anyways, I&#39;m working around it by building on a different server now"}], "owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 797, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1537102203, "creation_date": 1537101523, "last_edit_date": 1537102203, "question_id": 52354215, "link": "https://stackoverflow.com/questions/52354215/could-not-compile-http-process-didnt-exit-successfully-with-signal-9-sigki", "title": "Could not compile `http`: process didn&#39;t exit successfully with signal: 9, SIGKILL: kill", "body": "<p>When running my projects which has a dependency that requires http 0.1.13, cargo stops when trying to compile it.</p>\n\n<p>It was compiling just fine on my one computer, but when I went to run my project on another machine cargo exits with \"Could not compile `http`\":</p>\n\n<blockquote>\n  <p>process didn't exit successfully: <code>rustc --crate-name http /root/.cargo/registry/src/github.com-1ecc6299db9ec823/http-0.1.13/src/lib.rs --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=60ef54382f532dbf -C extra-filename=-60ef54382f532dbf --out-dir /root/server-coordinator/target/debug/deps -L dependency=/root/server-coordinator/target/debug/deps --extern bytes=/root/server-coordinator/target/debug/deps/libbytes-951afda431db1a1b.rlib --extern fnv=/root/server-coordinator/target/debug/deps/libfnv-140d1d3e6e17478d.rlib --extern itoa=/root/server-coordinator/target/debug/deps/libitoa-3473eacee051d37a.rlib --cap-lints allow</code> (signal: 9, SIGKILL: kill)</p>\n</blockquote>\n\n<p>How can I figure out what the problem is? I'm running it on a VPS and the Linux kernel is 2.6 so I'm thinking it might have something to do with outdated compiler software.</p>\n"}, {"tags": ["rust", "trait-objects"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537094553, "post_id": 52353085, "comment_id": 91651362, "body": "<code>A</code> implementing a trait does not mean that <code>&amp;A</code> does. It sometimes can seem like that&#39;s true because of Rust&#39;s auto-ref and auto-deref behaviour. For example, it will auto-deref a variable so you can type <code>foo.bar()</code> instead of <code>(*foo).bar()</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1537095232, "post_id": 52353085, "comment_id": 91651505, "body": "Why would want to return a <code>Box&lt;&amp;dyn A&gt;</code> anyway? Boxing a reference doesn&#39;t seem very useful."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537103172, "post_id": 52353085, "comment_id": 91653459, "body": "I noticed that <code>name: &amp;&#39;a str</code> is unnecessarily constrained here, because the returned reference is not tied to <code>name</code>. Maybe you have other implementations of <code>ProducerOrContainer</code> where the returned value is derived from <code>name</code>, but if not, getting rid of the <code>&#39;a</code> will be more flexible."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1537097483, "creation_date": 1537097483, "answer_id": 52353666, "question_id": 52353085, "link": "https://stackoverflow.com/questions/52353085/expected-trait-a-found-a-when-trying-to-box-a-trait-object/52353666#52353666", "title": "&quot;Expected trait A, found &amp;A&quot; when trying to box a trait object", "body": "<blockquote>\n  <p>...that can either retrieve (and return a reference to) a trait object of another trait, or create one (and return a boxed version of it).</p>\n</blockquote>\n\n<p>With this requirement, a <code>Box</code> will not work. A <code>Box</code> <em>owns</em> its data, but you sometimes have borrowed data, which you can't move.</p>\n\n<p>There is a type in the standard library called <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>, which is an abstraction over whether a value is borrowed or owned. However, it may not be quite suitable for you here because it won't let you own the data as a <code>Box</code> and it also requires that your data type must implement <code>ToOwned</code>.</p>\n\n<p>But we can take your requirement and model it directly as an <code>enum</code>:</p>\n\n<pre><code>enum BoxOrBorrow&lt;'a, T: 'a + ?Sized&gt; {\n    Boxed(Box&lt;T&gt;),\n    Borrowed(&amp;'a T),\n}\n</code></pre>\n\n<p>And make it ergonomic to use by implementing <code>Deref</code>:</p>\n\n<pre><code>use std::ops::Deref;\n\nimpl&lt;'a, T&gt; Deref for BoxOrBorrow&lt;'a, T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        match self {\n            BoxOrBorrow::Boxed(b) =&gt; &amp;b,\n            BoxOrBorrow::Borrowed(b) =&gt; &amp;b,\n        }\n    }\n}\n</code></pre>\n\n<p>This lets you treat the custom <code>BoxOrBorrow</code> type as any other reference - you can dereference it with <code>*</code> or pass it to any function that expects a reference to <code>T</code>.</p>\n\n<p>This is what your code would look like:</p>\n\n<pre><code>trait ProducerOrContainer {\n    fn get_a&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;BoxOrBorrow&lt;'a, dyn A + 'a&gt;&gt;;\n}\n\nimpl&lt;'b, B: Borrow&lt;dyn A&gt;&gt; ProducerOrContainer for HashMap&lt;&amp;'b str, B&gt; {\n    fn get_a&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;BoxOrBorrow&lt;'a, dyn A + 'a&gt;&gt; {\n        self.get(name)\n            .map(|b| BoxOrBorrow::Borrowed(b.borrow()))\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1537103071, "creation_date": 1537103071, "answer_id": 52354431, "question_id": 52353085, "link": "https://stackoverflow.com/questions/52353085/expected-trait-a-found-a-when-trying-to-box-a-trait-object/52354431#52354431", "title": "&quot;Expected trait A, found &amp;A&quot; when trying to box a trait object", "body": "<p>You can make the original code compile by implementing <code>A</code> for <code>&amp;'_ dyn A</code> and adding an explicit cast:</p>\n\n<pre><code>self.get(name).map(|borrow| Box::new(borrow.borrow()) as Box&lt;dyn A&gt;)\n</code></pre>\n\n<p>A closure is not a <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">coercion site</a>. The compiler looks at the contents of the closure to see what the return value is, and concludes that it returns <code>Box&lt;&amp;'a dyn A&gt;</code>. But the closure itself cannot be coerced from \"function returning <code>Box&lt;&amp;'a dyn A&gt;</code>\" to \"function returning <code>Box&lt;dyn A + 'a&gt;</code>\", because those types are structurally different. You add the cast to tell the compiler that you wanted the closure to return <code>Box&lt;dyn A&gt;</code> in the first place.</p>\n\n<p>But this is a bit silly. <code>Box</code>ing a reference is completely unnecessary here, and casting it to <code>Box&lt;dyn A&gt;</code> just adds another level of indirection for the caller. It would be better to return a type that encapsulates the idea of \"<em>either</em> a boxed trait object, <em>or</em> a reference to a trait object\", as <a href=\"https://stackoverflow.com/a/52353666/3650362\">Peter Hall's answer</a> describes.</p>\n\n<hr>\n\n<p>In a future version of Rust, with generic associated types (\"GATs\"), it will be possible to make the return type an associated type of <code>ProducerOrContainer</code>, something like the following:</p>\n\n<pre><code>trait ProducerOrContainer {\n    type Result&lt;'a&gt;: A;\n    fn get_a&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;Result&lt;'a&gt;&gt;;\n}\n</code></pre>\n\n<p>With this trait definition, each type that implements <code>ProducerOrContainer</code> can choose what type it returns, so you can pick <code>Box&lt;dyn A&gt;</code> for some <code>impl</code>s and <code>&amp;'a dyn A</code> for others. However, this is not possible in current Rust (1.29).</p>\n"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 508, "favorite_count": 0, "accepted_answer_id": 52353666, "answer_count": 2, "score": 1, "last_activity_date": 1545502314, "creation_date": 1537092987, "last_edit_date": 1545502314, "question_id": 52353085, "link": "https://stackoverflow.com/questions/52353085/expected-trait-a-found-a-when-trying-to-box-a-trait-object", "title": "&quot;Expected trait A, found &amp;A&quot; when trying to box a trait object", "body": "<p>I'm trying to make a trait that can either retrieve (and return a reference to) a trait object of another trait, or create one (and return a boxed version of it), leaving the choice to the implementor (which means I need to restrict the returned object's lifetime to that of the producer). However, I'm running into errors:</p>\n\n<pre><code>use std::borrow::Borrow;\nuse std::collections::HashMap;\n\ntrait A { \n    fn foobar(&amp;self) {\n        println!(\"!\"); \n    } \n}\n\ntrait ProducerOrContainer {\n    fn get_a&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;Box&lt;dyn A + 'a&gt;&gt;;\n}\n\nimpl&lt;'b, B: Borrow&lt;A&gt;&gt; ProducerOrContainer for HashMap&lt;&amp;'b str, B&gt; {\n    fn get_a&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;Box&lt;dyn A + 'a&gt;&gt; {\n        self.get(name).map(|borrow| Box::new(borrow.borrow()))\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:9\n   |\n20 |         self.get(name).map(|borrow| Box::new(borrow.borrow()))\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected trait A, found &amp;A\n   |\n   = note: expected type `std::option::Option&lt;std::boxed::Box&lt;dyn A + 'a&gt;&gt;`\n              found type `std::option::Option&lt;std::boxed::Box&lt;&amp;dyn A&gt;&gt;`\n</code></pre>\n\n<p>Which puzzles me, because I'd expect a <code>&amp;A</code> to be an <code>A</code> too. I've tried to <code>impl&lt;'a&gt; A for &amp;'a A</code>, but that doesn't help either. Is there any way to fix this?</p>\n"}, {"tags": ["javascript", "pointers", "rust", "webassembly"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1537098865, "post_id": 52352749, "comment_id": 91652413, "body": "I&#39;m not sure how the first example works. You are returning a pointer to a value which immediately goes out of scope. I haven&#39;t used wasm, but I guess the way to do this is to allocate a buffer in Javascript, and fill the buffer from Rust. That way, Javascript owns the data and it won&#39;t go out of scope."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537101099, "post_id": 52352749, "comment_id": 91652906, "body": "Please see <a href=\"https://stackoverflow.com/q/47529643/155423\">How to return a string (or similar) from Rust in WebAssembly?</a> to learn how to correctly return one <code>Vec</code>."}], "answers": [{"tags": [], "owner": {"reputation": 41, "user_id": 10370337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53b15f41ea74ee4fcf7d360422d8c0d1?s=128&d=identicon&r=PG&f=1", "display_name": "Johnni O.", "link": "https://stackoverflow.com/users/10370337/johnni-o"}, "is_accepted": true, "score": 1, "last_activity_date": 1537301131, "last_edit_date": 1537301131, "creation_date": 1537300934, "answer_id": 52393834, "question_id": 52352749, "link": "https://stackoverflow.com/questions/52352749/returning-a-rust-vecveci32-to-javascript-via-webassembly/52393834#52393834", "title": "Returning a Rust Vec&lt;Vec&lt;i32&gt;&gt; to JavaScript via WebAssembly", "body": "<p>Because the vectors in my vector are all the same length, I can use the lazy_static crate to initialize a static <code>Vec</code> wrapped in a <code>Mutex</code> (to be able to alter it later on). <code>LEN_VEC</code> is the length of the vector and <code>SIZE_INNER_VEC</code> the size of one vector in my static vector. </p>\n\n<p>I then add <code>i32</code> to the static vector and return the address of the <code>Vec</code> using <code>ARRAY.lock().unwrap().as_mut_ptr() as usize</code>. With <code>SIZE_INNER_VEC</code> and <code>LEN_VEC</code>, I can recreate the vectors in my vector in JavaScript.</p>\n\n<pre><code>static mut LEN_VEC: usize = 0;\nstatic mut SIZE_INNER_VEC: usize = 0;\n\nlazy_static! {\n    // Wrap in Mutex to change later on\n    static ref ARRAY: Mutex&lt;Vec&lt;i32&gt;&gt; = Mutex::new(vec![]);\n}\n\npub fn vector_in_vector() -&gt; usize {\n    //set LEN_VEC\n    //set SIZE_INNER_VEC\n\n    ARRAY.lock().unwrap().as_mut_ptr() as usize\n}\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 10370337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53b15f41ea74ee4fcf7d360422d8c0d1?s=128&d=identicon&r=PG&f=1", "display_name": "Johnni O.", "link": "https://stackoverflow.com/users/10370337/johnni-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 1, "accepted_answer_id": 52393834, "answer_count": 1, "score": 2, "last_activity_date": 1537301131, "creation_date": 1537090212, "last_edit_date": 1537101259, "question_id": 52352749, "link": "https://stackoverflow.com/questions/52352749/returning-a-rust-vecveci32-to-javascript-via-webassembly", "title": "Returning a Rust Vec&lt;Vec&lt;i32&gt;&gt; to JavaScript via WebAssembly", "body": "<p>I am working on a project involving Rust and WebAssembly using the \"wasm32-unknown-unknown\" target. It is no problem to return a <code>Vec&lt;i32&gt;</code> from my Rust code using this function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn calc_vector() -&gt; usize {\n    unsafe {\n        vec_len = 0;\n    }\n\n    let mut data: Vec&lt;i32&gt; = Vec::new();\n\n    for i in 0..1000 {\n        data.push(i);\n    }\n\n    unsafe {\n        vec_len = data.len();\n    }\n\n    data.as_mut_ptr() as usize\n}\n</code></pre>\n\n<p>This returns an offset and I call another function from JS to get the length of my <code>Vec</code>. I then build the Vector in JavaScript again (knowing that <code>i32</code> -> 4x <code>uint8</code>):</p>\n\n<pre><code>let vec_addr = exports.calc_vector();\nlet vec_len = exports.get_vec_len();\n\nwhile(arr.length &lt; vec_len) {\n    let numberUint8 = new DataView(view.buffer, vec_addr, 4);\n    let number = numberUint8.getInt32(0, true);\n    arr.push(number)\n\n    // move to next value in vector\n    vec_addr += 4;\n}\n</code></pre>\n\n<p>Using this, I want to create a Rust function that returns a <code>Vec&lt;Vec&lt;i32&gt;&gt;</code>, however, it just won't work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn calc_vector_in_vector() -&gt; usize {\n    unsafe {\n        vec_len = 0;\n        elements_in_vect = 0;\n    }\n\n    let mut outer_vec: Vec&lt;*mut i32&gt; = Vec::new();\n    let mut inner_vec: Vec&lt;i32&gt; = Vec::new();\n\n    for i in 0..100 {\n        inner_vec.push(i);\n        unsafe {\n            elements_in_vect += 1;\n        }\n    }\n\n    outer_vec.push(inner_vec.as_mut_ptr());\n\n    unsafe {\n        vec_len = outer_vec.len();\n    }\n\n    outer_vec.as_mut_ptr() as usize\n}\n</code></pre>\n\n<p>I thought that I could use the same logic as with a single <code>Vec</code>: at the address returned from <code>calc_vector_in_vector()</code> is the first entry of the outer vector, containing the address as <code>i32</code> of the first element of the inner vector (an actual number). However, on this address there seems to be nonsense. What I am doing wrong here? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537073725, "post_id": 52350857, "comment_id": 91647325, "body": "Also <a href=\"https://stackoverflow.com/questions/27415011/can-a-rust-macro-create-new-identifiers\">Can a Rust macro create new identifiers?</a>"}, {"owner": {"reputation": 6190, "user_id": 1944784, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/dd8b3d0343bf4c734ebbd7a18e2a9fe0?s=128&d=identicon&r=PG&f=1", "display_name": "4ae1e1", "link": "https://stackoverflow.com/users/1944784/4ae1e1"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537073799, "post_id": 52350857, "comment_id": 91647333, "body": "Thanks for referencing prior art. I wasn&#39;t able to find them. I guess the answer is no."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537073871, "post_id": 52350857, "comment_id": 91647346, "body": "It looks like the answer is no, but you can always namespace them instead (by putting them in a <code>mod</code>ule). <code>test_cases::fixture1</code> instead of <code>test_case_fixture1</code> etc."}, {"owner": {"reputation": 6190, "user_id": 1944784, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/dd8b3d0343bf4c734ebbd7a18e2a9fe0?s=128&d=identicon&r=PG&f=1", "display_name": "4ae1e1", "link": "https://stackoverflow.com/users/1944784/4ae1e1"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537073898, "post_id": 52350857, "comment_id": 91647350, "body": "Yeah, I suppose so."}], "owner": {"reputation": 6190, "user_id": 1944784, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/dd8b3d0343bf4c734ebbd7a18e2a9fe0?s=128&d=identicon&r=PG&f=1", "display_name": "4ae1e1", "link": "https://stackoverflow.com/users/1944784/4ae1e1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "closed_date": 1537073871, "answer_count": 0, "score": 2, "last_activity_date": 1537070638, "creation_date": 1537070638, "question_id": 52350857, "link": "https://stackoverflow.com/questions/52350857/identifier-interpolation-in-macro-definition", "closed_reason": "Duplicate", "title": "Identifier interpolation in macro definition", "body": "<p>Say I'd like to write a macro that takes an identifier and defines a function with the ident as part of its name:</p>\n\n<pre><code>macro_rules! defun {\n    ( $name:ident ) =&gt; {\n        fn fun_$name() { // This doesn't work, need to find a way\n                         // to convert \"foo\" into \"fun_foo\"\n            // ...\n        }\n    }\n}\n\ndefun!(foo);\n</code></pre>\n\n<p>Is this possible?</p>\n\n<p>P.S. My actual use case is more like</p>\n\n<pre><code>macro_rules! tests {\n    ( $( $name:ident ),* $(,)* ) =&gt; {\n        $(\n            #[test]\n            fn test_case_$name() {\n                // ...\n            }\n        )*\n    }\n}\n\ntests!{\n    fixture1,\n    fixture2,\n}\n</code></pre>\n\n<p>for a bunch of integration tests.</p>\n"}, {"tags": ["debugging", "rust", "undefined-behavior"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 5, "last_activity_date": 1537058510, "last_edit_date": 1537058510, "creation_date": 1537052854, "answer_id": 52349599, "question_id": 52348277, "link": "https://stackoverflow.com/questions/52348277/vector-is-empty-after-cloning-struct-with-uninitialized-member/52349599#52349599", "title": "Vector is empty after cloning struct with uninitialized member", "body": "<p>Rust 1.29.0 changed the definition of <code>ManuallyDrop</code>. It used to be a <code>union</code> (with a single member), but now it's a <code>struct</code> and a lang item. The role of the lang item in the compiler is to force the type to not have a destructor, even if it wraps a type that has once.</p>\n\n<p>I tried copying the old definition of <code>ManuallyDrop</code> (which requires nightly, unless a <code>T: Copy</code> bound is added) and using that instead of the one from <code>std</code>, and it avoids the issue (at least on the <a href=\"https://play.rust-lang.org/?gist=6fd4e29335e4ffca64cfbfc3d56d2e93&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>). I also tried dropping the second slot (<code>slots[1]</code>) instead of the first (<code>slots[0]</code>) and that also happens to work.</p>\n\n<p>Although I haven't been able to reproduce the problem natively on my system (running Arch Linux x86_64), I found something interesting by using <a href=\"https://github.com/solson/miri\" rel=\"nofollow noreferrer\">miri</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>francis@francis-arch /data/git/miri master\n$ MIRI_SYSROOT=~/.xargo/HOST cargo run -- /data/src/rust/so-manually-drop-1_29/src/main.rs\n    Finished dev [unoptimized + debuginfo] target(s) in 0.03s                                                                                                                                                                                \n     Running `target/debug/miri /data/src/rust/so-manually-drop-1_29/src/main.rs`\nerror[E0080]: constant evaluation error: attempted to read undefined bytes\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/vec.rs:1903:32\n     |\n1903 |                 for element in iterator {\n     |                                ^^^^^^^^ attempted to read undefined bytes\n     |\nnote: inside call to `&lt;std::vec::Vec&lt;T&gt; as std::vec::SpecExtend&lt;T, I&gt;&gt;&lt;MayContainValue&lt;CountDrop&gt;, std::iter::Cloned&lt;std::slice::Iter&lt;MayContainValue&lt;CountDrop&gt;&gt;&gt;&gt;::spec_extend`\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/vec.rs:1953:9\n     |\n1953 |         self.spec_extend(iterator.cloned())\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside call to `&lt;std::vec::Vec&lt;T&gt; as std::vec::SpecExtend&lt;&amp;'a T, I&gt;&gt;&lt;MayContainValue&lt;CountDrop&gt;, std::slice::Iter&lt;MayContainValue&lt;CountDrop&gt;&gt;&gt;::spec_extend`\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/vec.rs:1402:9\n     |\n1402 |         self.spec_extend(other.iter())\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside call to `&lt;std::vec::Vec&lt;T&gt;&gt;&lt;MayContainValue&lt;CountDrop&gt;&gt;::extend_from_slice`\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/slice.rs:168:9\n     |\n168  |         vector.extend_from_slice(s);\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside call to `std::slice::hack::to_vec::&lt;MayContainValue&lt;CountDrop&gt;&gt;`\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/slice.rs:369:9\n     |\n369  |         hack::to_vec(self)\n     |         ^^^^^^^^^^^^^^^^^^\nnote: inside call to `std::slice::&lt;impl [T]&gt;&lt;MayContainValue&lt;CountDrop&gt;&gt;::to_vec`\n    --&gt; /home/francis/.rustup/toolchains/nightly-2018-09-15-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/liballoc/vec.rs:1687:9\n     |\n1687 |         &lt;[T]&gt;::to_vec(&amp;**self)\n     |         ^^^^^^^^^^^^^^^^^^^^^^\nnote: inside call to `&lt;std::vec::Vec&lt;T&gt; as std::clone::Clone&gt;&lt;MayContainValue&lt;CountDrop&gt;&gt;::clone`\n    --&gt; /data/src/rust/so-manually-drop-1_29/src/main.rs:54:33\n     |\n54   |         assert_eq!(slots.len(), slots.clone().len());\n     |                                 ^^^^^^^^^^^^^\nnote: inside call to `tests::check_drops`\n    --&gt; /data/src/rust/so-manually-drop-1_29/src/main.rs:33:5\n     |\n33   |     tests::check_drops();\n     |     ^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0080`.\n</code></pre>\n\n<p>(Note: I can get the same error without using Xargo, but then miri doesn't show the source code for the stack frames in std.)</p>\n\n<p>If I do this again with the original definition of <code>ManuallyDrop</code>, then miri doesn't report any issue. This confirms that the new definition of <code>ManuallyDrop</code> causes your program to have <em>undefined behavior</em>.</p>\n\n<p>When I change <code>std::mem::uninitialized()</code> to <code>std::mem::zeroed()</code>, I can reliably reproduce the issue. When running natively, if it happens that the uninitialized memory <em>is</em> all zeroes, then you'll get the issue, otherwise you won't.</p>\n\n<p>By calling <code>std::mem::zeroed()</code>, I've made the program generate null references, which are <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">documented as undefined behavior in Rust</a>. When the vector is cloned, an iterator is used (as shown in miri's output above). <code>Iterator::next</code> returns an <code>Option&lt;T&gt;</code>; that <code>T</code> here has a reference in it (coming from <code>CountDrops</code>), which causes <code>Option</code>'s memory layout to be optimized: instead of having a discrete discriminant, it uses a null reference to represent its <code>None</code> value. Since I <em>am</em> generating null references, the iterator returns <code>None</code> on the first item and thus the vector ends up empty.</p>\n\n<p>What's interesting is that when <code>ManuallyDrop</code> was defined as a union, <code>Option</code>'s memory layout was <em>not</em> optimized.</p>\n\n<pre><code>println!(\"{}\", std::mem::size_of::&lt;Option&lt;std::mem::ManuallyDrop&lt;CountDrop&lt;'static&gt;&gt;&gt;&gt;());\n// prints 16 in Rust 1.28, but 8 in Rust 1.29\n</code></pre>\n\n<p>There is a discussion about this situation in <a href=\"https://github.com/rust-lang/rust/issues/52898\" rel=\"nofollow noreferrer\">#52898</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1537056426, "last_edit_date": 1537056426, "creation_date": 1537053493, "answer_id": 52349655, "question_id": 52348277, "link": "https://stackoverflow.com/questions/52348277/vector-is-empty-after-cloning-struct-with-uninitialized-member/52349655#52349655", "title": "Vector is empty after cloning struct with uninitialized member", "body": "<p>TL;DR: Yes, creating an uninitialized reference is always undefined behavior. You cannot use <code>mem::uninitialized</code> safely with generics. There is not currently a good workaround for your specific case.</p>\n\n<hr>\n\n<p>Running your code in valgrind reports 3 errors, each with the same stack trace:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>==741== Conditional jump or move depends on uninitialised value(s)\n==741==    at 0x11907F: &lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T, I&gt;&gt;::spec_extend (vec.rs:1892)\n==741==    by 0x11861C: &lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;'a T, I&gt;&gt;::spec_extend (vec.rs:1942)\n==741==    by 0x11895C: &lt;alloc::vec::Vec&lt;T&gt;&gt;::extend_from_slice (vec.rs:1396)\n==741==    by 0x11C1A2: alloc::slice::hack::to_vec (slice.rs:168)\n==741==    by 0x11C643: alloc::slice::&lt;impl [T]&gt;::to_vec (slice.rs:369)\n==741==    by 0x118C1E: &lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (vec.rs:1676)\n==741==    by 0x11AF89: md::tests::check_drops (main.rs:51)\n==741==    by 0x119D39: md::__test::TESTS::{{closure}} (main.rs:36)\n==741==    by 0x11935D: core::ops::function::FnOnce::call_once (function.rs:223)\n==741==    by 0x11F09E: {{closure}} (lib.rs:1451)\n==741==    by 0x11F09E: call_once&lt;closure,()&gt; (function.rs:223)\n==741==    by 0x11F09E: &lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box (boxed.rs:642)\n==741==    by 0x17B469: __rust_maybe_catch_panic (lib.rs:105)\n==741==    by 0x14044F: try&lt;(),std::panic::AssertUnwindSafe&lt;alloc::boxed::Box&lt;FnBox&lt;()&gt;&gt;&gt;&gt; (panicking.rs:289)\n==741==    by 0x14044F: catch_unwind&lt;std::panic::AssertUnwindSafe&lt;alloc::boxed::Box&lt;FnBox&lt;()&gt;&gt;&gt;,()&gt; (panic.rs:392)\n==741==    by 0x14044F: {{closure}} (lib.rs:1406)\n==741==    by 0x14044F: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)\n</code></pre>\n\n<p>Reducing while keeping the Valgrind error (or one extremely similar) leads to </p>\n\n<pre><code>use std::{iter, mem};\n\nfn main() {\n    let a = unsafe { mem::uninitialized::&lt;&amp;()&gt;() };\n    let mut b = iter::once(a);\n    let c = b.next();\n    let _d = match c {\n        Some(_) =&gt; 1,\n        None =&gt; 2,\n    };\n}\n</code></pre>\n\n<p>Running this smaller reproduction in Miri in the playground leads to this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error: attempted to read undefined bytes\n --&gt; src/main.rs:7:20\n  |\n7 |     let _d = match c {\n  |                    ^ attempted to read undefined bytes\n  |\nnote: inside call to `main`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:74:34\n  |\n74|     lang_start_internal(&amp;move || main().report(), argc, argv)\n  |                                  ^^^^^^\nnote: inside call to `closure`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:59:75\n  |\n59|             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\n  |                                                                           ^^^^^^\nnote: inside call to `closure`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/sys_common/backtrace.rs:136:5\n  |\n13|     f()\n  |     ^^^\nnote: inside call to `std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;[closure@DefId(1/1:1823 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]::{{closure}}[0]) 0:&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:59:13\n  |\n59|             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside call to `closure`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:310:40\n  |\n31|             ptr::write(&amp;mut (*data).r, f());\n  |                                        ^^^\nnote: inside call to `std::panicking::try::do_call::&lt;[closure@DefId(1/1:1822 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:306:5\n  |\n30| /     fn do_call&lt;F: FnOnce() -&gt; R, R&gt;(data: *mut u8) {\n30| |         unsafe {\n30| |             let data = data as *mut Data&lt;F, R&gt;;\n30| |             let f = ptr::read(&amp;mut (*data).f);\n31| |             ptr::write(&amp;mut (*data).r, f());\n31| |         }\n31| |     }\n  | |_____^\nnote: inside call to `std::panicking::try::&lt;i32, [closure@DefId(1/1:1822 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe]&gt;`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:392:9\n  |\n39|         panicking::try(f)\n  |         ^^^^^^^^^^^^^^^^^\nnote: inside call to `std::panic::catch_unwind::&lt;[closure@DefId(1/1:1822 ~ std[82ff]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&amp;&amp;dyn std::ops::Fn() -&gt; i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32&gt;`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:58:25\n  |\n58|           let exit_code = panic::catch_unwind(|| {\n  |  _________________________^\n59| |             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main())\n60| |         });\n  | |__________^\nnote: inside call to `std::rt::lang_start_internal`\n --&gt; /root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:74:5\n  |\n74|     lang_start_internal(&amp;move || main().report(), argc, argv)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>The short version is that <code>mem::uninitialized</code> creates a null pointer, which is being treated as a reference. That's the undefined behavior.</p>\n\n<p>In your original code, the <code>Vec::clone</code> is implemented by iterating over an iterator. <code>Iterator::next</code> returns an <code>Option&lt;T&gt;</code>, so you have an option of a reference, which causes the <a href=\"https://stackoverflow.com/q/46557608/155423\">null pointer optimization</a> to kick in. This counts as a <code>None</code>, which terminates the iteration early, resulting in your empty second vector.</p>\n\n<p>It turns out that having <code>mem::uninitialized</code>, a piece of code that gives you C-like semantics, is a giant footgun and is frequently misused (surprise!), so you aren't alone here. The main things you should follow as replacements are:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/53491\" rel=\"noreferrer\">Tracking issue for RFC 1892, \"Deprecate uninitialized in favor of a new MaybeUninit type\"</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/53508\" rel=\"noreferrer\">Implement <code>MaybeUninit</code></a></li>\n</ul>\n"}], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 52349655, "answer_count": 2, "score": 11, "last_activity_date": 1537058510, "creation_date": 1537040793, "last_edit_date": 1537044912, "question_id": 52348277, "link": "https://stackoverflow.com/questions/52348277/vector-is-empty-after-cloning-struct-with-uninitialized-member", "title": "Vector is empty after cloning struct with uninitialized member", "body": "<p>In Rust 1.29.0 one of my tests has started failing. I managed to get the strange bug down to this example:</p>\n\n<pre><code>#[derive(Clone, Debug)]\nstruct CountDrop&lt;'a&gt;(&amp;'a std::cell::RefCell&lt;usize&gt;);\n\nstruct MayContainValue&lt;T&gt; {\n    value: std::mem::ManuallyDrop&lt;T&gt;,\n    has_value: u32,\n}\n\nimpl&lt;T: Clone&gt; Clone for MayContainValue&lt;T&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Self {\n            value: if self.has_value &gt; 0 {\n                self.value.clone()\n            } else {\n                unsafe { std::mem::uninitialized() }\n            },\n            has_value: self.has_value,\n        }\n    }\n}\n\nimpl&lt;T&gt; Drop for MayContainValue&lt;T&gt; {\n    fn drop(&amp;mut self) {\n        if self.has_value &gt; 0 {\n            unsafe {\n                std::mem::ManuallyDrop::drop(&amp;mut self.value);\n            }\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    #[test]\n    fn check_drops() {\n        let n = 2000;\n        let drops = std::cell::RefCell::new(0usize);\n\n        let mut slots = Vec::new();\n        for _ in 0..n {\n            slots.push(MayContainValue {\n                value: std::mem::ManuallyDrop::new(CountDrop(&amp;drops)),\n                has_value: 1,\n            });\n        }\n\n        unsafe { std::mem::ManuallyDrop::drop(&amp;mut slots[0].value); }\n        slots[0].has_value = 0;\n\n        assert_eq!(slots.len(), slots.clone().len());\n    }\n}\n</code></pre>\n\n<p>I know the code looks strange; it is all ripped out of context. I reproduced this problem with <code>cargo test</code> on 64-bit Ubuntu on Rust 1.29.0. A friend could not reproduce on Windows with the same Rust version.</p>\n\n<p>Other things that stop reproduction:</p>\n\n<ul>\n<li>Lowering <code>n</code> below ~900.</li>\n<li>Not running the example from within <code>cargo test</code>.</li>\n<li>Replacing <code>CountDrop</code>'s member with <code>u64</code>.</li>\n<li>Using a Rust version before 1.29.0.</li>\n</ul>\n\n<p>What's going on here? Yes, <code>MayContainValue</code> can have an uninitialized member, but this is never used in any way.</p>\n\n<p>I also managed to reproduce this on <a href=\"https://play.rust-lang.org/?gist=a57790c56db72447196327cbf863a8f8&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">play.rust-lang.org</a>.</p>\n\n<hr>\n\n<p>I'm not interested in 'solutions' that involve re-engineering <code>MayContainValue</code> in some safe way with <code>Option</code> or <code>enum</code>, I'm using manual storage and occupied/vacant discrimination for a good reason. </p>\n"}, {"tags": ["macos", "process", "rust"], "comments": [{"owner": {"reputation": 43, "user_id": 10368429, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-l712ssXbPJ4/AAAAAAAAAAI/AAAAAAAAA3U/UZm0MgsKpIg/photo.jpg?sz=128", "display_name": "J. A. Kierstead", "link": "https://stackoverflow.com/users/10368429/j-a-kierstead"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537041533, "post_id": 52347313, "comment_id": 91642126, "body": "I want to state that I am not highschool educated let alone a CS student, so I am very likely missing alot of important parts that I have not been able to acquire just by working the tools until I have a functional project. I am trying to spread the passion for automation to others in similar situations, so I would appreciate any pointers to improve the code quality from the viewpoint of someone who is missing alot of CS context."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537044356, "post_id": 52347313, "comment_id": 91642797, "body": "I certainly hope that you won&#39;t find anyone here on Stack Overflow that treats you different due to a difference in formal education. We are equally strict on programmers of all backgrounds ;-)."}, {"owner": {"reputation": 43, "user_id": 10368429, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-l712ssXbPJ4/AAAAAAAAAAI/AAAAAAAAA3U/UZm0MgsKpIg/photo.jpg?sz=128", "display_name": "J. A. Kierstead", "link": "https://stackoverflow.com/users/10368429/j-a-kierstead"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537045865, "post_id": 52347313, "comment_id": 91643117, "body": "the condition file_path[len - 4..len - 1] == &quot;dmg&quot;.to_string() only evalulates to true if you have the StarUML installation dmg in your ~/Downloads directory on a mac. you can find the dmg at <a href=\"http://staruml.io/download\" rel=\"nofollow noreferrer\">staruml.io/download</a>, that should help that condition pass and let you see the error I get"}, {"owner": {"reputation": 43, "user_id": 10368429, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-l712ssXbPJ4/AAAAAAAAAAI/AAAAAAAAA3U/UZm0MgsKpIg/photo.jpg?sz=128", "display_name": "J. A. Kierstead", "link": "https://stackoverflow.com/users/10368429/j-a-kierstead"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537045969, "post_id": 52347313, "comment_id": 91643135, "body": "so far you guys have been extra helpful and I appreciate the fact that you guys have responded without prejudice (I never felt that you had at any time so far). I really want this code to build for you guys, so make sure you get the dmg mentioned in my comment above."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537057049, "post_id": 52347313, "comment_id": 91645028, "body": "Please don&#39;t include error messages as images. These are not accessible and cannot be indexed by search engines."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 10368429, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-l712ssXbPJ4/AAAAAAAAAAI/AAAAAAAAA3U/UZm0MgsKpIg/photo.jpg?sz=128", "display_name": "J. A. Kierstead", "link": "https://stackoverflow.com/users/10368429/j-a-kierstead"}, "edited": false, "score": 0, "creation_date": 1537060192, "post_id": 52349898, "comment_id": 91645522, "body": "thanks dude, that works for this example, I had added them because I was having trouble on the windows platform and Command was not adding them after the fact so the windows command interpreter was only using getting the string up to the unescaped space char. I will finish putting together the mac bits and try it again in windows, and if the behaviour is still the same, I will use a condition to set up the windows only filePATH with quotes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1537056932, "creation_date": 1537056932, "answer_id": 52349898, "question_id": 52347313, "link": "https://stackoverflow.com/questions/52347313/stdprocesscommand-cannot-run-hdiutil-on-macos-mount-failed-no-such-file-o/52349898#52349898", "title": "std::process::Command cannot run hdiutil on macOS (mount failed - No such file or directory) but the command works fine when run in the terminal", "body": "<p>Split your <code>Command</code> into a variable and print it using the debugging formatter after you have specified the arguments:</p>\n\n<pre><code>let mut c = Command::new(&amp;mount_command[0]);\n\nc\n    .arg(&amp;mount_command[1])\n    .arg(&amp;file_path);\n\n    println!(\"{:?}\", c);\n</code></pre>\n\n<p>This outputs</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"hdiutil\" \"mount\" \"\\'/Users/shep/Downloads/StarUML.dmg\\'\"\n</code></pre>\n\n<p>Note that <code>Command</code> automatically provides quoting for each argument, but you have added your own set of single quotes:</p>\n\n<pre><code>format!(\"'{}{}'\", &amp;downloads_path, &amp;file_name);\n//       ^    ^\n</code></pre>\n\n<p>Remove these single quotes.</p>\n"}], "owner": {"reputation": 43, "user_id": 10368429, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-l712ssXbPJ4/AAAAAAAAAAI/AAAAAAAAA3U/UZm0MgsKpIg/photo.jpg?sz=128", "display_name": "J. A. Kierstead", "link": "https://stackoverflow.com/users/10368429/j-a-kierstead"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "accepted_answer_id": 52349898, "answer_count": 1, "score": -2, "last_activity_date": 1537057011, "creation_date": 1537033536, "last_edit_date": 1537057011, "question_id": 52347313, "link": "https://stackoverflow.com/questions/52347313/stdprocesscommand-cannot-run-hdiutil-on-macos-mount-failed-no-such-file-o", "title": "std::process::Command cannot run hdiutil on macOS (mount failed - No such file or directory) but the command works fine when run in the terminal", "body": "<p><code>hdiutils</code>, when fed a correct path to a valid file, returns <code>error 2, no such file or directory</code>. When I join the indices of the command array with <code>\" \"</code>, print them, copy them and run the exact string in a terminal, it works fine. </p>\n\n<p>This is the function edited to contain only the relevant bits. In order to reproduce my error, you will need a disk image located at <code>~/Downloads/StarUML.dmg</code>.</p>\n\n<pre><code>use std::env;\nuse std::fs;\nuse std::process::Command;\n\nfn setup_downloads(download_name: &amp;str) {\n    let downloads_path: String = {\n        if cfg!(unix) {\n            //these both yield options to unwrap\n            let path = env::home_dir().unwrap();\n            let mut downloads_path = path.to_str().unwrap().to_owned();\n            downloads_path += \"/Downloads/\";\n            downloads_path\n        } else {\n            \"we currently only support Mac OS\".to_string()\n        }\n    };\n\n    let files_in_downloads =\n        fs::read_dir(&amp;downloads_path).expect(\"the read_dir that sets files_in_downloads broke\");\n    let mut file_path: String = \"None\".to_string();\n    for file_name in files_in_downloads {\n        let file_name: String = file_name\n            .expect(\"the pre string result which sets file_name has broken\")\n            .file_name()\n            .into_string()\n            .expect(\"the post string result which sets file_name has broken\")\n            .to_owned();\n\n        if file_name.contains(&amp;download_name) {\n            file_path = format!(\"'{}{}'\", &amp;downloads_path, &amp;file_name);\n        }\n    }\n\n    let len = file_path.len();\n\n    if file_path[len - 4..len - 1] == \"dmg\".to_string() {\n        let mount_command = [\"hdiutil\", \"mount\"];\n        let output = Command::new(&amp;mount_command[0])\n            .arg(&amp;mount_command[1])\n            .arg(&amp;file_path)\n            .output()\n            .expect(\"failed to execute mount cmd\");\n\n        if output.status.success() {\n            println!(\n                \"command successful, returns: {}\",\n                String::from_utf8_lossy(&amp;output.stderr).into_owned()\n            );\n        } else {\n            println!(\n                \"command failed, returns: {}\",\n                String::from_utf8_lossy(&amp;output.stderr).into_owned()\n            );\n        }\n    }\n}\n\nfn main() {\n    setup_downloads(&amp;\"StarUML\".to_string());\n}\n</code></pre>\n\n<p><img src=\"https://i.stack.imgur.com/felJL.png\" alt=\"if evaluates true when the correct file is detected in downloads\"></p>\n\n<p><img src=\"https://i.stack.imgur.com/IelwB.png\" alt=\"error response from process::Command\"></p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537031899, "post_id": 52346890, "comment_id": 91639600, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52346890/edit\">edit</a> your question to include it. We cannot tell what crates (and versions), types, traits, fields, etc. are present in the code. Showing all the imported types is important. Questions seeking debugging help must include <b>a specific error</b> and the <b>shortest code necessary to reproduce it</b>. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": true, "score": 2, "last_activity_date": 1537036723, "last_edit_date": 1537036723, "creation_date": 1537032748, "answer_id": 52347209, "question_id": 52346890, "link": "https://stackoverflow.com/questions/52346890/return-a-jsonvalue-object-from-an-actix-web-httprequest/52347209#52347209", "title": "Return a JsonValue object from an actix-web HttpRequest", "body": "<p>You have to convert <code>JsonValue</code> to a string or bytes, then you can set it as the <code>HttpResponse</code> body. You can not directly return a <code>JsonValue</code> instead of box because the request body reading process is asynchronous.</p>\n"}], "owner": {"reputation": 984, "user_id": 2889451, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/fWMAk.jpg?s=128&g=1", "display_name": "Simen Russnes", "link": "https://stackoverflow.com/users/2889451/simen-russnes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 810, "favorite_count": 0, "accepted_answer_id": 52347209, "answer_count": 1, "score": 0, "last_activity_date": 1537036723, "creation_date": 1537030617, "last_edit_date": 1537031825, "question_id": 52346890, "link": "https://stackoverflow.com/questions/52346890/return-a-jsonvalue-object-from-an-actix-web-httprequest", "title": "Return a JsonValue object from an actix-web HttpRequest", "body": "<p>I'm reading the examples of actix-web, but as I am quite new to Rust I am having some issues understanding how to adapt the code to my needs.</p>\n\n<p>Given an actix-web <code>HttpRequest</code>, I want to parse the payload and return a <code>JsonValue</code>. I can't figure out how to change this function to return the <code>JsonValue</code> rather than a <code>HttpResponse</code>.</p>\n\n<pre><code>fn index_mjsonrust(req: &amp;HttpRequest, ) -&gt; Box&lt;Future&lt;Item = HttpResponse, Error = Error&gt;&gt; {\n    req.payload()\n        .concat2()\n        .from_err()\n        .and_then(|body| {\n            // body is loaded, now we can deserialize json-rust\n            let result = json::parse(std::str::from_utf8(&amp;body).unwrap()); // return Result\n            let injson: JsonValue = match result {\n                Ok(v) =&gt; v,\n                Err(e) =&gt; object!{\"err\" =&gt; e.to_string() },\n            };\n            Ok(HttpResponse::Ok()\n                .content_type(\"application/json\")\n                .body(injson.dump()))\n        })\n        .responder()\n}\n</code></pre>\n\n<p>Would it be better to just return the <code>JsonValue</code> rather than a <code>Future</code>?</p>\n"}, {"tags": ["vector", "enums", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537012409, "post_id": 52344295, "comment_id": 91634790, "body": "Why does <code>value</code> need to be a <code>Cow</code> here?"}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537014002, "post_id": 52344295, "comment_id": 91635133, "body": "The reason is, that i provide functions like: fn to_vec(&amp;self), where it returns the original vector, if its a vector, or an empty vector if Value is for example a Float"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1537014445, "post_id": 52344295, "comment_id": 91635227, "body": "Add <code>#[derive(Clone)]</code> to all your structs and the enum. Then you get a different error (<code>error[E0275]: overflow evaluating the requirement &#39;Value&lt;&#39;a&gt;: std::marker::Sized&#39;</code>), which seems to me to be a compiler bug, carelessness w.r.t. recursive definitions."}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1537014617, "post_id": 52344295, "comment_id": 91635258, "body": "tried to explain why i&#39;m doing this, @starblue yes i tried that, same error message"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1537014703, "post_id": 52344295, "comment_id": 91635281, "body": "@Hellagot I believe you can have functions that return <code>Cow</code>s without having to <i>store</i> <code>Cow</code>s in <code>Value</code>. Using a <code>Cow</code> in a struct/enum lets you store either an owned or a borrowed value; do you really need that? What about using <code>Rc</code> or <code>Arc</code> instead?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1537014750, "post_id": 52344295, "comment_id": 91635294, "body": "@Hellagot <code>Cow&lt;&#39;a, Vec&lt;Value&lt;&#39;a&gt;&gt;&gt;</code> is a bit weird. You probably <i>want</i> Cow&lt;&#39;a, [Value&lt;&#39;a&gt;]&gt;<code>, which is a slice when borrowed and a </code>Vec` when owned."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1537015041, "post_id": 52344295, "comment_id": 91635361, "body": "The root of the issue though is that <code>Cow&lt;T&gt;</code> requires that <code>T: ToOwned</code> in order to create an owned variant. The reason it&#39;s suggesting <code>Clone</code> is because there is a blanket implementation of <code>ToOwned</code> for all types that are <code>Clone</code>. But this isn&#39;t necessarily what you want"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1537016471, "post_id": 52344295, "comment_id": 91635697, "body": "If you try to implement <code>ToOwned</code> for <code>Value</code> or <code>[Value]</code> yourself, you&#39;ll find yourself needing to make a clone somewhere."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1537017831, "post_id": 52344295, "comment_id": 91636047, "body": "Also, with a recursive type, you usually need to introduce some indirection via a <code>Box</code> or similar. <code>Cow</code> doesn&#39;t serve this purpose because it only <i>sometimes</i> provides indirection (when it&#39;s <code>Borrowed</code>)."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1537017883, "post_id": 52344295, "comment_id": 91636059, "body": "@PeterHall Don&#39;t <code>Vec</code> and <code>[]</code> provide that indirection here?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1537018043, "post_id": 52344295, "comment_id": 91636095, "body": "@FrancisGagn&#233; Oh yes, that&#39;s true."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537031045, "post_id": 52345216, "comment_id": 91639400, "body": "<code>Cow&lt;&#39;a, [Value&lt;&#39;a&gt;]&gt;</code> and <code>&amp;&#39;a [Value&lt;&#39;a&gt;]</code> are both a little weird here because they unnecessarily tie the lifetime of the returned reference to <code>&#39;a</code>. In both cases I would create a fresh lifetime, or allow the compiler to elide it: <code>fn to_vec(&amp;self) -&gt; Cow&lt;&#39;_, [Value&lt;&#39;a&gt;]&gt;</code> and <code>fn to_vec(&amp;self) -&gt; &amp;[Value&lt;&#39;a&gt;]</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537031436, "post_id": 52345216, "comment_id": 91639498, "body": "Although, I guess unifying the lifetimes could be intentional? It will work if everything&#39;s immutable."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537032652, "post_id": 52345216, "comment_id": 91639815, "body": "@trentcl No, it was just a bit lazy on my part."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537032758, "post_id": 52345216, "comment_id": 91639840, "body": "That could still be what OP wants. Hard to tell for sure. OP&#39;s <code>str_val</code> is suspicious for the same reason."}, {"owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537072813, "post_id": 52345216, "comment_id": 91647192, "body": "Thank you all, the slice version is what i was looking for, still learning. At the moment i want to keep the source values immutable, but i will try to remove the returned lifetimes where possible to let the compiler elide it, as suggested by @trentcl"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1537019016, "last_edit_date": 1537019016, "creation_date": 1537018645, "answer_id": 52345216, "question_id": 52344295, "link": "https://stackoverflow.com/questions/52344295/how-to-implement-an-enum-containing-a-cow-of-a-vector-of-itself/52345216#52345216", "title": "How to implement an enum containing a Cow of a vector of itself?", "body": "<blockquote>\n  <p>I want the same for a vector, which I assume would be like:</p>\n\n<pre><code>pub fn vec(&amp;'a self) -&gt; Vec&lt;Value&gt; {\nmatch self {\n        Value::Vector(v) =&gt; v.value,\n        _ =&gt; Cow::Owned(Vector { value: vec![] }),\n    }\n}\n</code></pre>\n</blockquote>\n\n<p>First of all, to return a <code>Cow</code> from a function doesn't mean you have to store your data as a <code>Cow</code>. You can do this:</p>\n\n<pre><code>pub struct Vector&lt;'a&gt; {\n    pub value: Vec&lt;Value&lt;'a&gt;&gt;,\n}\n\npub enum Value&lt;'a&gt; {\n    None,\n    Float(Float),\n    Text(Text&lt;'a&gt;),\n    Vector(Vector&lt;'a&gt;),\n}\n</code></pre>\n\n<p>And then your <code>to_vec</code> <em>would</em> look like this:</p>\n\n<pre><code>impl&lt;'a&gt; Value&lt;'a&gt; {\n    pub fn to_vec(&amp;'a self) -&gt; Cow&lt;'a, [Value&lt;'a&gt;]&gt; {\n        match self {\n            Value::Vector(v) =&gt; Cow::Borrowed(&amp;v.value),\n            _ =&gt; Cow::Owned(Vec::new()),\n        }\n    }\n}\n</code></pre>\n\n<p>Except that you still will have some problems with implementing <code>ToOwned</code> for <code>Value&lt;'a&gt;</code>, so this won't immediately work.</p>\n\n<p>However, I don't see why a <code>Cow</code> is necessary here anyway. <code>Cow</code> abstracts over a borrowed vs owned type, but your owned value is always empty, so what's the harm in returning a borrowed slice in both cases? It would look like this:</p>\n\n<pre><code>impl&lt;'a&gt; Value&lt;'a&gt; {\n    pub fn to_vec_slice(&amp;'a self) -&gt; &amp;'a [Value&lt;'a&gt;] {\n        match self {\n            Value::Vector(v) =&gt; &amp;v.value,\n            _ =&gt; &amp;[],\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 215, "user_id": 920950, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/e61beb2e9d96561e29adc76f37b9d6cd?s=128&d=identicon&r=PG", "display_name": "Hellagot", "link": "https://stackoverflow.com/users/920950/hellagot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1021, "favorite_count": 1, "accepted_answer_id": 52345216, "answer_count": 1, "score": 0, "last_activity_date": 1537019016, "creation_date": 1537011164, "last_edit_date": 1537015951, "question_id": 52344295, "link": "https://stackoverflow.com/questions/52344295/how-to-implement-an-enum-containing-a-cow-of-a-vector-of-itself", "title": "How to implement an enum containing a Cow of a vector of itself?", "body": "<p>I am <a href=\"https://stackoverflow.com/q/52281496/155423\">trying to implement a flexible type system at runtime in Rust</a>. This is what I have that works so far:</p>\n\n<pre><code>use std::borrow::Cow;\n\npub struct Float {\n    pub min: f64,\n    pub max: f64,\n    pub value: f64,\n}\n\npub struct Text&lt;'a&gt; {\n    pub value: Cow&lt;'a, str&gt;\n}\n\npub enum Value&lt;'a&gt; {\n    None,\n    Float(Float),\n    Text(Text&lt;'a&gt;),\n}\n</code></pre>\n\n<p>This works as I want it to, and now I want a vector of itself (and a map would be the next step), so I added:</p>\n\n<pre><code>pub struct Vector&lt;'a&gt; {\n    pub value: Cow&lt;'a, Vec&lt;Value&lt;'a&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>And extended the enum to:</p>\n\n<pre><code>pub enum Value&lt;'a&gt; {\n    None,\n    Float(Float),\n    Text(Text&lt;'a&gt;),\n    Vector(Vector&lt;'a&gt;),\n}\n</code></pre>\n\n<p>Now I get an error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Value&lt;'a&gt;: std::clone::Clone` is not satisfied\n  --&gt; src/lib.rs:14:5\n   |\n14 |     pub value: Cow&lt;'a, Vec&lt;Value&lt;'a&gt;&gt;&gt;,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Value&lt;'a&gt;`\n   |\n   = note: required because of the requirements on the impl of `std::clone::Clone` for `std::vec::Vec&lt;Value&lt;'a&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::borrow::ToOwned` for `std::vec::Vec&lt;Value&lt;'a&gt;&gt;`\n   = note: required by `std::borrow::Cow`\n\nerror[E0277]: the trait bound `Value&lt;'a&gt;: std::clone::Clone` is not satisfied\n  --&gt; src/lib.rs:21:12\n   |\n21 |     Vector(Vector&lt;'a&gt;),\n   |            ^^^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Value&lt;'a&gt;`\n   |\n   = note: required because of the requirements on the impl of `std::clone::Clone` for `std::vec::Vec&lt;Value&lt;'a&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::borrow::ToOwned` for `std::vec::Vec&lt;Value&lt;'a&gt;&gt;`\n   = note: required because it appears within the type `Vector&lt;'a&gt;`\n   = note: no field of an enum variant may have a dynamically sized type\n</code></pre>\n\n<p>I tried several ways to implement <code>Clone</code>, but as a beginner I just ended up with countless other error messages. How do I get a vector of <code>Value</code> into this system?</p>\n\n<p><strong>Why do I do this?</strong></p>\n\n<p>I have the following code to simplify the usage of <code>Value</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Value&lt;'a&gt; {\n    pub fn float_val(&amp;self) -&gt; f64 {\n        match self {\n            Value::None =&gt; 0.0,\n            Value::Float(f) =&gt; f.value,\n            Value::Text(t) =&gt; t.value.parse().unwrap_or(0.0),\n        }\n    }\n\n    pub fn str_val(&amp;'a self) -&gt; Cow&lt;'a, str&gt; {\n        match self {\n            Value::None =&gt; Cow::Owned(\"\".to_string()),\n            Value::Float(f) =&gt; Cow::Owned(f.value.to_string()),\n            Value::Text(t) =&gt; Cow::Borrowed(&amp;t.value),\n        }\n    }\n}\n</code></pre>\n\n<p>This allows me to use it in functions like:</p>\n\n<pre><code>fn append_string(s1: &amp;Value, s2: &amp;Value) {\n    Value::Text(Text {\n        value: format!(\"{}{}\", s1.str_val(), s2.str_val()),\n    })\n}\n</code></pre>\n\n<p>I want the same for a vector, which I assume would be like:</p>\n\n<pre><code>pub fn vec(&amp;'a self) -&gt; Vec&lt;Value&gt; {\n    match self {\n        Value::Vector(v) =&gt; v.value,\n        _ =&gt; Cow::Owned(Vector { value: vec![] }),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "move-semantics", "mutability"], "comments": [{"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1537010237, "post_id": 52344146, "comment_id": 91634211, "body": "My motivation is that I want to offload some option mutation into an explicit routine, but now it seems like I&#39;d need a macro for that. Am I right?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537012141, "post_id": 52344146, "comment_id": 91634716, "body": "Option implement Copy..."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1537010625, "creation_date": 1537010625, "answer_id": 52344238, "question_id": 52344146, "link": "https://stackoverflow.com/questions/52344146/why-does-mutating-a-passed-option-inside-a-function-not-propagate-to-the-option/52344238#52344238", "title": "Why does mutating a passed Option inside a function not propagate to the Option outside?", "body": "<p>When <code>T: Copy</code> then so is <code>Option&lt;T&gt;</code>. This means that, when you pass it as a function argument:</p>\n\n<pre><code>take_inner(opt2);\n</code></pre>\n\n<p>it actually will copy the data. If <code>T</code> was not <code>Copy</code> then none of this would even work because the value would instead be <em>moved</em>, so you could not even print it later.</p>\n\n<p>If you pass it as a mutable reference, then the function can change the original value:</p>\n\n<pre><code>fn take_inner(opt: &amp;mut Option&lt;u8&gt;) {\n    opt.take();\n};\n\ntake_inner(&amp;mut opt2);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": true, "score": 4, "last_activity_date": 1537015556, "last_edit_date": 1537015556, "creation_date": 1537010770, "answer_id": 52344262, "question_id": 52344146, "link": "https://stackoverflow.com/questions/52344146/why-does-mutating-a-passed-option-inside-a-function-not-propagate-to-the-option/52344262#52344262", "title": "Why does mutating a passed Option inside a function not propagate to the Option outside?", "body": "<p>Since <code>u8</code> is a copy type, and <code>Option</code> has</p>\n\n<pre><code>impl&lt;T&gt; Copy for Option&lt;T&gt;\nwhere\n    T: Copy,\n</code></pre>\n\n<p><code>take_inner</code> takes a copy of <code>opt2</code></p>\n\n<p>You can fix that by taking a mutable reference:</p>\n\n<pre><code>fn main() {\n    let mut opt1 = Some(1);\n    // compiler complains that opt2 doesn't have to be mutable\n    let mut opt2 = Some(1);\n\n    fn take_inner(opt: &amp;mut Option&lt;u8&gt;) {\n        opt.take();\n    };\n\n    opt1.take();\n    take_inner(&amp;mut opt2);\n\n    println!(\"opt1 {:?}\", opt1);\n    println!(\"opt2 {:?}\", opt2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4809b90b3fce0064b8f006ff006bcb57&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 52344262, "answer_count": 2, "score": 0, "last_activity_date": 1545399093, "creation_date": 1537009913, "last_edit_date": 1545399093, "question_id": 52344146, "link": "https://stackoverflow.com/questions/52344146/why-does-mutating-a-passed-option-inside-a-function-not-propagate-to-the-option", "title": "Why does mutating a passed Option inside a function not propagate to the Option outside?", "body": "<p>I've illustrated it thus:</p>\n\n<pre><code>fn main() {\n\n    let mut opt1 = Some(1);\n    // compiler complains that opt2 doesn't have to be mutable\n    let mut opt2 = Some(1);\n\n    fn take_inner(mut opt: Option&lt;u8&gt;) {\n        opt.take();\n    };\n\n    opt1.take();\n    take_inner(opt2);\n\n    println!(\"opt1 {:?}\", opt1); // prints \"opt1 None\"\n    println!(\"opt2 {:?}\", opt2); // prints \"opt2 Some(1)\"\n\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c59dea1a1c1f6eccdb0240d8338ed1fe&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Rust Playground link</a></p>\n\n<p>Why does calling <code>opt.take()</code> within a function have a different effect than calling it outside (relative to the main function's scope)?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1536993822, "post_id": 52341215, "comment_id": 91631077, "body": "Compare the outputs of build.rs and see the differences. It is located at <code>target&#47;debug&#47;build&#47;&lt;pkg&gt;&#47;output</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537012469, "post_id": 52341215, "comment_id": 91634808, "body": "&quot;This only happens when I build on an Amazon Linux instance.&quot; have you check that the version of the linked library are the same ? (not crate version)"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1537022770, "post_id": 52341215, "comment_id": 91637273, "body": "The output of build.rs looks identical. The versions of the linked libraries are the same, they are retrieved from <code>git</code> by cargo."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537031700, "post_id": 52346901, "comment_id": 91639551, "body": "<i>rustc has a minimum version requirement on libclang.so</i> \u2014 it does not. However, ffmpeg-sys uses bindgen, which <i>does</i> require clang to parse the C code."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537153330, "post_id": 52346901, "comment_id": 91664851, "body": "The error isn&#39;t coming from bindgen though, it is a rustc command that is failing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537153629, "post_id": 52346901, "comment_id": 91664896, "body": "yes, compilers like <code>rustc</code> report errors about the code you are compiling, I&#39;m not sure what your point is. In this case, you are compiling a build script that links to bindgen which links to libclang. The compiler reports an error because libclang is not present. If the compiler depended on a library that wasn&#39;t present, it wouldn&#39;t even  <i>start</i>."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537158191, "post_id": 52346901, "comment_id": 91665767, "body": "libclang was present, it just wasn&#39;t new enough. The error message doesn&#39;t mention libclang at all, only a missing symbol from ffmpeg."}], "tags": [], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "is_accepted": true, "score": 0, "last_activity_date": 1537030701, "creation_date": 1537030701, "answer_id": 52346901, "question_id": 52341215, "link": "https://stackoverflow.com/questions/52341215/statically-linking-ffmpeg-sys-on-amazon-linux-fails-with-undefined-references/52346901#52346901", "title": "Statically linking ffmpeg-sys on Amazon Linux fails with undefined references", "body": "<p>I solved this problem by building <code>llvm</code> 6.0.1 and then rebuilding with <code>LIBCLANG_PATH</code> set to point to the newer version.</p>\n\n<p>It would appear that <code>rustc</code> has a minimum version requirement on <code>libclang.so</code>, but I could not find an official source documenting that. The version installed on <code>amazon-linux</code> is 3.6.2 which is evidently too old.</p>\n"}], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 275, "favorite_count": 1, "accepted_answer_id": 52346901, "answer_count": 1, "score": 4, "last_activity_date": 1537030701, "creation_date": 1536980292, "last_edit_date": 1537016457, "question_id": 52341215, "link": "https://stackoverflow.com/questions/52341215/statically-linking-ffmpeg-sys-on-amazon-linux-fails-with-undefined-references", "title": "Statically linking ffmpeg-sys on Amazon Linux fails with undefined references", "body": "<p>My project depends on the <code>ffmpeg-sys</code> crate which is configured to build statically, as follows:</p>\n\n<pre><code>[dependencies.ffmpeg-sys]\nversion = \"3.4.1\"\ndefault-features = false\nfeatures = [\"avcodec\", \"avformat\", \"swresample\", \"build\", \"static\"]  \n</code></pre>\n\n<p>My project consists of a single simple file:</p>\n\n<pre><code>extern crate ffmpeg_sys;\n\nuse ffmpeg_sys::av_register_all;\n\nfn main() {\n    unsafe { av_register_all() };\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>When compiling with <code>cargo build</code> I get the following error:</p>\n\n<blockquote>\n  <p>Compiling sample v0.1.0 (file:///home/ec2-user/sample)<br>\n  error: linking with 'cc' failed: exit code: 1   |   = note: \"cc\"\n  \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\"</p>\n  \n  <p>[... elided for clarity ...]</p>\n  \n  <p>In function 'sample::main::hbbb19855251826d6':\n            /home/ec2-user/sample/src/main.rs:6: undefined reference to 'av_register_all'\n            collect2: error: ld returned 1 exit status</p>\n</blockquote>\n\n<p>The required static libraries, <code>libavformat.a</code> and friends, are found in the <code>target/build/debug</code> folder, showing that <code>ffmpeg-sys</code> successfully compiled the libraries.</p>\n\n<p>Here's the <code>rustc</code> command that is failing:</p>\n\n<blockquote>\n  <p>Caused by:   process didn't exit successfully: 'rustc --crate-name\n  sample src/main.rs --crate-type bin --emit=dep-info,link -C\n  debuginfo=2 -C metadata=250bf40eb277d05a -C\n  extra-filename=-250bf40eb277d05a --out-dir\n  /home/ec2-user/sample/target/debug/deps -C\n  incremental=/home/ec2-user/sample/target/debug/incremental -L\n  dependency=/home/ec2-user/sample/target/debug/deps --extern\n  ffmpeg_sys=/home/ec2-user/sample/target/debug/deps/libffmpeg_sys-fa3ff87f80f2d27e.rlib\n  -L native=/home/ec2-user/sample/target/debug/build/ffmpeg-sys-0b3c813f29a9a20e/out/dist/lib'\n  (exit code: 1)</p>\n</blockquote>\n\n<p><code>libffmpeg_sys-fa3ff87f80f2d27e.rlib</code> is 207M and I assume therefore contains all the statically compiled ffmpeg code.</p>\n\n<p>This only happens when I build on an Amazon Linux instance. Compiling on my regular Fedora 28 desktop results in a working binary.</p>\n\n<p>How would I go about figuring out the root cause of this error?</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536964047, "post_id": 52339851, "comment_id": 91626962, "body": "This appears fairly low effort... <a href=\"https://doc.rust-lang.org/std/index.html?search=enumerate\" rel=\"nofollow noreferrer\">searching the Rust docs for enumerate</a> points to <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>Iterator::enumerate</code></a> which seems to be about 95% of what you are asking. Assuming you did that research, what problems did you have when trying to use it?"}, {"owner": {"reputation": 23, "user_id": 10365946, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BJYQS95MCm4/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaPc9Qc3B6G4cwab_iDzaVTINqIstg/mo/photo.jpg?sz=128", "display_name": "James Hinshelwood", "link": "https://stackoverflow.com/users/10365946/james-hinshelwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536964423, "post_id": 52339851, "comment_id": 91627034, "body": "The problem is I want to enumerate over a 2D array <code>[[B; 10]; 10]</code>. Or rather, return an iterator which can iterate over a 2D array. If I call enumerate once, I will get an iterator over <code>(usize, [B; 10])</code>s. My question is what I can do next to get an iterator over <code>(usize, usize, B)</code>s."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 10365946, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BJYQS95MCm4/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaPc9Qc3B6G4cwab_iDzaVTINqIstg/mo/photo.jpg?sz=128", "display_name": "James Hinshelwood", "link": "https://stackoverflow.com/users/10365946/james-hinshelwood"}, "edited": false, "score": 0, "creation_date": 1536967312, "post_id": 52340214, "comment_id": 91627631, "body": "Great, thank you. This works perfectly for me. Could you possibly explain why <code>move</code> is needed?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 23, "user_id": 10365946, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BJYQS95MCm4/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaPc9Qc3B6G4cwab_iDzaVTINqIstg/mo/photo.jpg?sz=128", "display_name": "James Hinshelwood", "link": "https://stackoverflow.com/users/10365946/james-hinshelwood"}, "edited": false, "score": 0, "creation_date": 1536975601, "post_id": 52340214, "comment_id": 91628769, "body": "@JamesHinshelwood without it, the compiler assumes you want to place a reference to <code>x</code> in the tuple, instead of copying the value."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1536966643, "creation_date": 1536966643, "answer_id": 52340214, "question_id": 52339851, "link": "https://stackoverflow.com/questions/52339851/how-do-i-return-an-iterator-over-a-2d-array-with-the-enumeration-indices-include/52340214#52340214", "title": "How do I return an iterator over a 2D array with the enumeration indices included?", "body": "<blockquote>\n  <p>If I call <code>Iterator::enumerate</code> once, I will get an iterator over <code>(usize, [B; 10])</code>s. What I can do next to get an iterator over <code>(usize, usize, B)</code>s?</p>\n</blockquote>\n\n<p>Call <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>Iterator::enumerate</code></a> on the inner array in the same way, continuing to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>Iterator::flat_map</code></a> to combine them. Use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\"><code>Iterator::map</code></a> to add the outer index to the inner tuple.</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Block;\n\n#[derive(Debug, Default)]\nstruct World {\n    blocks: [[Block; 2]; 3],\n}\n\nimpl World {\n    fn blocks(&amp;self) -&gt; impl Iterator&lt;Item = (usize, usize, &amp;Block)&gt; {\n        self.blocks\n            .iter()\n            .enumerate()\n            .flat_map(|(x, v)| v.iter().enumerate().map(move |(y, v)| (x, y, v)))\n    }\n}\n\nfn main() {\n    let w = World::default();\n    for (x, y, v) in w.blocks() {\n        println!(\"{}, {}, {:?}\", x, y, v)\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>0, 0, Block\n0, 1, Block\n1, 0, Block\n1, 1, Block\n2, 0, Block\n2, 1, Block\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 10365946, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BJYQS95MCm4/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaPc9Qc3B6G4cwab_iDzaVTINqIstg/mo/photo.jpg?sz=128", "display_name": "James Hinshelwood", "link": "https://stackoverflow.com/users/10365946/james-hinshelwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 438, "favorite_count": 0, "accepted_answer_id": 52340214, "answer_count": 1, "score": 2, "last_activity_date": 1536966643, "creation_date": 1536963563, "last_edit_date": 1536966446, "question_id": 52339851, "link": "https://stackoverflow.com/questions/52339851/how-do-i-return-an-iterator-over-a-2d-array-with-the-enumeration-indices-include", "title": "How do I return an iterator over a 2D array with the enumeration indices included?", "body": "<p>I have a struct containing a 2D array:</p>\n\n<pre><code>struct Block;\n\nstruct World {\n    blocks: [[Block; 10]; 10],\n}\n</code></pre>\n\n<p>How could I write a function which returns an iterator over a 2D array, but with the enumeration indices included?</p>\n\n<pre><code>fn enumerate_blocks(&amp;self) -&gt; impl Iterator&lt;Item = (usize, usize, &amp;Block)&gt;\n</code></pre>\n\n<p>I managed to write an implementation of the function which just returns an iterator without enumeration indices:</p>\n\n<pre><code>fn blocks(&amp;self) -&gt; impl Iterator&lt;Item = &amp;Block&gt; {\n    self.blocks.iter().flat_map(|x| x.iter())\n}\n</code></pre>\n\n<p>If I call <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>Iterator::enumerate</code></a> once, I will get an iterator over <code>(usize, [B; 10])</code>s. What I can do next to get an iterator over <code>(usize, usize, B)</code>s?</p>\n\n<p>I know I could make the function return a custom struct then implement <code>Iterator</code>, like <code>image</code> does, but ideally I would like to avoid this.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 8552405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5fbe9032b46fa33ca6fdabd836763943?s=128&d=identicon&r=PG&f=1", "display_name": "Lukas E.", "link": "https://stackoverflow.com/users/8552405/lukas-e"}, "edited": false, "score": 0, "creation_date": 1536994871, "post_id": 52339887, "comment_id": 91631255, "body": "Thanks very much! Besides this unstable feature there is no way to make use of maybe some special Cow property? Or a specific trait."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1536963761, "creation_date": 1536963761, "answer_id": 52339887, "question_id": 52339735, "link": "https://stackoverflow.com/questions/52339735/how-can-i-implement-the-from-trait-for-all-types-implementing-a-trait-but-use-a/52339887#52339887", "title": "How can I implement the From trait for all types implementing a trait but use a specific implementation for certain types?", "body": "<p>Since <code>&amp;str</code> and <code>String</code> both implement <code>ToString</code>, you can use the unstable <a href=\"https://doc.rust-lang.org/unstable-book/language-features/specialization.html\" rel=\"nofollow noreferrer\"><em>specialization</em></a> feature:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse std::borrow::Cow;\n\npub struct Luhn&lt;'a&gt; {\n    code: Cow&lt;'a, str&gt;,\n}\n\nimpl&lt;'a, T: ToString&gt; From&lt;T&gt; for Luhn&lt;'a&gt; {\n    default fn from(input: T) -&gt; Self {\n//  ^^^^^^^\n        Luhn {\n            code: Cow::Owned(input.to_string()),\n        }\n    }\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for Luhn&lt;'a&gt; {\n    fn from(input: &amp;'a str) -&gt; Self {\n        Luhn {\n            code: Cow::Borrowed(input),\n        }\n    }\n}\n\nimpl&lt;'a&gt; From&lt;String&gt; for Luhn&lt;'a&gt; {\n    fn from(input: String) -&gt; Self {\n        Luhn {\n            code: Cow::Owned(input),\n        }\n    }\n}\n</code></pre>\n\n<p>That being said, you cannot implement <code>Display</code> for <code>Luhn</code> because you'd run into <a href=\"https://stackoverflow.com/q/37347311/155423\">How is there a conflicting implementation of `From` when using a generic type?</a></p>\n"}], "owner": {"reputation": 71, "user_id": 8552405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5fbe9032b46fa33ca6fdabd836763943?s=128&d=identicon&r=PG&f=1", "display_name": "Lukas E.", "link": "https://stackoverflow.com/users/8552405/lukas-e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1536963761, "creation_date": 1536962649, "last_edit_date": 1536963437, "question_id": 52339735, "link": "https://stackoverflow.com/questions/52339735/how-can-i-implement-the-from-trait-for-all-types-implementing-a-trait-but-use-a", "title": "How can I implement the From trait for all types implementing a trait but use a specific implementation for certain types?", "body": "<p>I am implementing the <code>std::convert::From</code> trait for a struct containing a <code>Cow&lt;str&gt;</code>. Is there a way to use the same implementation for all different kinds of integers (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>usize</code> and so on)? </p>\n\n<pre><code>use std::borrow::Cow;\n\npub struct Luhn&lt;'a&gt; {\n    code: Cow&lt;'a, str&gt;,\n}\n</code></pre>\n\n<p>I can easily implement code for all integers using a trait bound on the <code>ToString</code> trait, but then I cannot use a specific implementation for <code>str</code> and <code>String</code> - this way the benefits of <code>Cow</code> cannot be exploited. When I write specific implementations for <code>str</code> and <code>String</code>, I get a compile error:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::convert::From&lt;&amp;str&gt;` for type `Luhn&lt;'_&gt;`:\n  --&gt; src/lib.rs:23:1\n   |\n7  | impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Luhn&lt;'a&gt; {\n   | ----------------------------------- first implementation here\n...\n23 | impl&lt;'a, T: ToString&gt; From&lt;T&gt; for Luhn&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Luhn&lt;'_&gt;`\n</code></pre>\n</blockquote>\n\n<p>I understand that this is due to the fact that Rust does not offer function overloading. How could this be solved in an elegant way?</p>\n\n<pre><code>impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Luhn&lt;'a&gt; {\n    fn from(input: &amp;'a str) -&gt; Self {\n        Luhn {\n            code: Cow::Borrowed(input),\n        }\n    }\n}\n\nimpl&lt;'a&gt; From&lt;String&gt; for Luhn&lt;'a&gt; {\n    fn from(input: String) -&gt; Self {\n        Luhn {\n            code: Cow::Owned(input),\n        }\n    }\n}\n\nimpl&lt;'a, T: ToString&gt; From&lt;T&gt; for Luhn&lt;'a&gt; {\n    fn from(input: T) -&gt; Self {\n        Luhn {\n            code: Cow::Owned(input.to_string()),\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1536961681, "creation_date": 1536961681, "answer_id": 52339607, "question_id": 52339475, "link": "https://stackoverflow.com/questions/52339475/how-can-i-pass-flags-to-rustc-from-a-build-script-if-they-contain-a-space/52339607#52339607", "title": "How can I pass flags to rustc from a build script if they contain a space?", "body": "<p>It appears you cannot as of Rust 1.29. The <a href=\"https://github.com/rust-lang/cargo/blob/a5d82949485802abb45f888d5b8b7f23927f031d/src/cargo/core/compiler/custom_build.rs#L497-L499\" rel=\"nofollow noreferrer\">source code for the current master of Cargo</a>:</p>\n\n<blockquote>\n<pre><code>let mut flags_iter = value\n    .split(|c: char| c.is_whitespace())\n    .filter(|w| w.chars().any(|c| !c.is_whitespace()));\n</code></pre>\n</blockquote>\n\n<p>This naively splits the argument on any whitespace, regardless of where it occurs. This seems to be a bug or limitation of Cargo and you should look for an already-filed issue or file one yourself.</p>\n\n<hr>\n\n<p>That being said, if you use the more fit-for-purpose <code>rustc-link-lib</code> and <code>rustc-link-search</code> parameters, spaces work fine:</p>\n\n<pre><code>println!(r#\"cargo:rustc-link-search={}/target/sdsl/sdsl_install/lib\"#, \"some thing\");\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --verbose\n   Compiling xx v0.1.0 (file:///private/tmp/xx)\n     [...snip...]\n     Running `rustc [...snip...] -L 'some thing/target/sdsl/sdsl_install/lib'`\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 9431345, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OVOx5.jpg?s=128&g=1", "display_name": "Mateholiker", "link": "https://stackoverflow.com/users/9431345/mateholiker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 1, "accepted_answer_id": 52339607, "answer_count": 1, "score": 0, "last_activity_date": 1536961681, "creation_date": 1536960948, "last_edit_date": 1536961153, "question_id": 52339475, "link": "https://stackoverflow.com/questions/52339475/how-can-i-pass-flags-to-rustc-from-a-build-script-if-they-contain-a-space", "title": "How can I pass flags to rustc from a build script if they contain a space?", "body": "<p>I am writing a Rust program with some C integration so I'm using a custom build script. In this script, I pass <code>-L &lt;path to library&gt;</code> to <code>rustc</code>, but this works only if <code>&lt;path to library&gt;</code> does not contain a space. \nThe exact line in the <code>build.rs</code>:</p>\n\n<pre><code>println!(r\"cargo:rustc-flags= -L {}/target/sdsl/sdsl_install/lib -l sdsl -l divsufsort -l divsufsort64 -l stdc++\", current_dir);\n</code></pre>\n\n<p>If <code>current_dir</code> contains a space I get this error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: Only `-l` and `-L` flags are allowed in build script of `top_tree_compression v0.1.0 (file:///home/jan/Uni/Bachelorarbeit/Programme/Top_Tree%20Compression)`: `-L /home/jan/Uni/Bachelorarbeit/Programme/Top_Tree Compression/target/sdsl/sdsl_install/lib -l sdsl -l divsufsort -l divsufsort64 -l stdc++`\n</code></pre>\n\n<p>I tried to write a <code>\\</code> before the space to escape it but it gives me the same error. Then I tried to replace the space with <code>%20</code> because in the error message the space was replaced with this, but then I get a linking error because the path is not correct.</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 6, "creation_date": 1536919190, "post_id": 52329477, "comment_id": 91605846, "body": "<code>?</code> handles the error by immediately returning from the <i>enclosing function</i> and propagating the error upwards. This can&#39;t work if the enclosing function doesn&#39;t itself return a <code>Result</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536921921, "post_id": 52329477, "comment_id": 91607302, "body": "In this case your function must not return a <code>Result</code>, but instead an <code>Option</code> (or you provide a <code>Try</code> impl, so that you can convert an <code>Option</code> to a desired <code>Result</code>"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "closed_date": 1536926439, "answer_count": 0, "score": 0, "last_activity_date": 1536922003, "creation_date": 1536918897, "last_edit_date": 1536922003, "question_id": 52329477, "link": "https://stackoverflow.com/questions/52329477/why-cant-rust-compile-the-nth-call-using-the-keyword", "closed_reason": "Duplicate", "title": "Why can&#39;t rust compile the nth() call using the &quot;?&quot; keyword?", "body": "<p>I'm trying to understand the <code>?</code> keyword of Rust.</p>\n\n<p>For that, I've written the following sample</p>\n\n<pre><code>use std::env;\nfn main() {\n    let first = env::args().nth(1)?;\n    let n: i32 = first.parse()?;\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>I'm quite sure the <code>env::args.nth(1)</code> returns an <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a>, which implements the <code>Try</code> trait. When I try to compile, I get the following error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n--&gt; src\\main.rs:3:17\n|\n3 |     let first = env::args().nth(1)?;\n|                 ^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\n|\n= help: the trait `std::ops::Try` is not implemented for `()`\n= note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["generics", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1536915847, "post_id": 52328311, "comment_id": 91603764, "body": "I was so certain I had tried that!... Note however that, ideally, I&#39;d like to keep T rather than &amp;T, because the problem I encountered with iterators can occur with types that <i>contain</i> references but are not references themselves (e.g. Cow). But anyway, this already solves a large part of my use case, so I&#39;ll mark this as solution. Thanks a lot."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1536915117, "creation_date": 1536915117, "answer_id": 52328311, "question_id": 52327942, "link": "https://stackoverflow.com/questions/52327942/can-i-make-this-struct-more-generic/52328311#52328311", "title": "Can I make this struct more generic?", "body": "<p>Instead of <code>T</code>, use <code>&amp;T</code>. It's a more direct translation of the original <code>&amp;str</code> version, so you can be more sure it will work after making the change. And it does:</p>\n\n<pre><code>pub struct TransformedStream&lt;S, FT, T&gt;\nwhere\n    S: Iterator,\n    T: ?Sized,\n    FT: FnMut(S::Item, &amp;mut FnMut(&amp;T)),\n{\n    source: S,\n    transf: FT,\n    phantom: PhantomData&lt;*const T&gt;,\n}\n\nimpl&lt;S, FT, T&gt; TransformedStream&lt;S, FT, T&gt;\nwhere\n    S: Iterator,\n    T: ?Sized,\n    FT: FnMut(S::Item, &amp;mut FnMut(&amp;T)),\n{\n    pub fn for_each&lt;F&gt; (self, mut f: F) where F: FnMut(&amp;T) {\n        let source = self.source;\n        let mut transf = self.transf;\n        source.for_each(move |line| transf(line, &amp;mut f));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 52328311, "answer_count": 1, "score": 2, "last_activity_date": 1546960816, "creation_date": 1536913832, "last_edit_date": 1546960816, "question_id": 52327942, "link": "https://stackoverflow.com/questions/52327942/can-i-make-this-struct-more-generic", "title": "Can I make this struct more generic?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=f95fdef16e28591edf308092c8a7f1b0&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<h1>Context</h1>\n\n<p>I want to pre-process the lines of a text file before passing them to a function <code>f</code>. I can do it like this:</p>\n\n<pre><code>pub fn example0a&lt;B: BufRead, F: Fn(&amp;str)&gt;(bufread: B, f: F) {\n    let name = Regex::new(\"John Doe\").unwrap();\n\n    for line in bufread.lines() {\n        let line = line.unwrap();\n        let pre_processed_line = name.replace_all(&amp;line, \"XXX\");\n        f(&amp;pre_processed_line);\n    }\n}\n</code></pre>\n\n<p>but I need to produce an object, with a <code>for_each</code> method, to which I could pass <code>f</code> directly. My first idea was to produce an iterator using the <code>map</code> method:</p>\n\n<pre><code>// does not compile\npub fn example0b&lt;B: BufRead&gt;(bufread: B) -&gt; impl Iterator {\n    let name = Regex::new(\"John Doe\").unwrap();\n\n    bufread.lines().map(move |line| {\n        let line = line.unwrap();\n        let pre_processed_line = name.replace_all(&amp;line, \"XXX\");\n        &amp;pre_processed_line as &amp;str;\n    })\n}\n</code></pre>\n\n<p>This does not compile because <code>line</code> and hence <code>pre_processed_line</code> do not live long enough to be returned out of the iterator's <code>next</code> method. One option is to return <code>pre_processed_line.to_string()</code>, but that is not good, because it clones all the lines that have not been modified by <code>replace_all</code>, which I want to avoid.</p>\n\n<h1>My first struct</h1>\n\n<p>I decided to implement a struct containing the <code>BufRead</code> and the pre-processing function, and providing a <code>for_each</code> method. I aimed to make it as generic as possible, so in fact it accepts any iterator of any type, as long as that the pre-processing function can transform it to a <code>&amp;str</code>.</p>\n\n<pre><code>pub struct TransformedStrStream&lt;S, FT&gt;\nwhere\n    S: Iterator,\n    FT: FnMut(S::Item, &amp;mut FnMut(&amp;str)),\n{\n    source: S,\n    transf: FT,\n}\n\nimpl&lt;S, FT&gt; TransformedStrStream&lt;S, FT&gt;\nwhere\n    S: Iterator,\n    FT: FnMut(S::Item, &amp;mut FnMut(&amp;str)),\n{\n    pub fn for_each&lt;F&gt;(self, mut f: F)\n    where\n        F: FnMut(&amp;str),\n    {\n        let source = self.source;\n        let mut transf = self.transf;\n        source.for_each(move |line| transf(line, &amp;mut f));\n    }\n}\n</code></pre>\n\n<p>I can instantiate that struct in a way similar to the examples above:</p>\n\n<pre><code>pub fn example1&lt;B: BufRead&gt;(bufread: B, name: Regex) {\n    let _ = TransformedStrStream {\n        source: bufread.lines(),\n        transf: move |line, f| {\n            let line = line.unwrap();\n            let repl = name.replace_all(&amp;line, \"XXX\");\n            f(&amp;repl as &amp;str)\n        },\n    };\n}\n</code></pre>\n\n<h1>My problem</h1>\n\n<p>The struct above is, I think, a nice abstraction, and could be abstracted even further, to generate any type of value (rather than <code>&amp;str</code>).</p>\n\n<p>I tried to replace <code>&amp;str</code> by a type parameter <code>T</code>:</p>\n\n<pre><code>pub struct TransformedStream&lt;S, FT, T&gt;\nwhere\n    S: Iterator,\n    FT: FnMut(S::Item, &amp;mut FnMut(T)),\n{\n    source: S,\n    transf: FT,\n    phantom: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;S, FT, T&gt; TransformedStream&lt;S, FT, T&gt;\nwhere\n    S: Iterator,\n    FT: FnMut(S::Item, &amp;mut FnMut(T)),\n{\n    pub fn for_each&lt;F&gt;(self, mut f: F)\n    where\n        F: FnMut(T),\n    {\n        let source = self.source;\n        let mut transf = self.transf;\n        source.for_each(move |line| transf(line, &amp;mut f));\n    }\n}\n</code></pre>\n\n<p>Unfortunately, my example above does not compile anymore:</p>\n\n<pre><code>pub fn example2&lt;B: BufRead&gt;(bufread: B, name: Regex) {\n    let _ = TransformedStream {\n        source: bufread.lines(),\n        transf: move |line, f| {\n            let line = line.unwrap();\n            let repl = name.replace_all(&amp;line, \"XXX\");\n            f(&amp;repl as &amp;str)\n        },\n        phantom: PhantomData,\n    };\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `line` does not live long enough\n  --&gt; src/lib.rs:37:42\n   |\n37 |             let repl = name.replace_all(&amp;line, \"XXX\");\n   |                                          ^^^^ borrowed value does not live long enough\n38 |             f(&amp;repl as &amp;str)\n39 |         },\n   |         - `line` dropped here while still borrowed\n40 |         phantom: PhantomData,\n41 |     };\n   |     - borrowed value needs to live until here\n\nerror[E0597]: `repl` does not live long enough\n  --&gt; src/lib.rs:38:16\n   |\n38 |             f(&amp;repl as &amp;str)\n   |                ^^^^ borrowed value does not live long enough\n39 |         },\n   |         - `repl` dropped here while still borrowed\n40 |         phantom: PhantomData,\n41 |     };\n   |     - borrowed value needs to live until here\n</code></pre>\n\n<p>In my opinion, <code>line</code> and <code>repl</code> live long enough to be processed by <code>f</code>, just as in the <code>&amp;str</code> version. As for the iterator example above, using <code>repl.to_string()</code> satisfies the compiler, but I don't want to clone each and every line.</p>\n\n<p>My intuition is that the problem comes from the <code>PhantomData&lt;T&gt;</code> that I had to add to my struct to satisfy the compiler. Does it constrain the lifetime of <code>T</code> (to live as long as the containing struct), just as if I had a field with type <code>T</code>? I tried to replace it with <code>PhantomData&lt;*const T&gt;</code>, which I thought might not constrain the lifetime, but it does not solve my problem...</p>\n\n<p>Why does the second version not compile? How I could make it work?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1536898903, "creation_date": 1536898903, "answer_id": 52324945, "question_id": 52324443, "link": "https://stackoverflow.com/questions/52324443/rust-tt-muncher-has-infinite-recursion/52324945#52324945", "title": "Rust TT muncher has infinite recursion", "body": "<p>Because the first rule matches literally <em>anything</em>.  There's no way for it to <em>not</em> recurse.</p>\n\n<p>When writing macros, you need to write your rules from most-specific to least-specific.</p>\n"}], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 1, "accepted_answer_id": 52324945, "answer_count": 1, "score": 2, "last_activity_date": 1536898903, "creation_date": 1536894623, "question_id": 52324443, "link": "https://stackoverflow.com/questions/52324443/rust-tt-muncher-has-infinite-recursion", "title": "Rust TT muncher has infinite recursion", "body": "<p>I'm trying to use a TT muncher to create a nested hash map structure. The basic type definition is</p>\n\n<pre><code>type Object = HashMap&lt;String, Node&gt;;\n\nenum Node {\n    Terminal(String),\n    Nested(Object),\n}\n</code></pre>\n\n<p>I know that I can manually create these objects: </p>\n\n<pre><code>let mut x: Object = HashMap::new();\n\nx.insert(\"foo\".into(), Node::Terminal(\"bar\".into()));\nx.insert(\"bing\".into(), {\n    let mut bing = HashMap::new();\n    bing.insert(\"bar\".into(), Node::Terminal(\"baz\".into()));\n    Node::Nested(bing)\n});\n</code></pre>\n\n<p>And this does generate the expected structure</p>\n\n<pre><code>{\n    \"bing\": Nested(\n        {\n            \"bar\": Terminal(\n                \"baz\"\n            )\n        }\n    ),\n    \"foo\": Terminal(\n        \"bar\"\n    )\n}\n</code></pre>\n\n<p>But I have a few large literals in this format, and I'd prefer to use a less ugly syntax, so I'm trying to make a macro. Here's a minimum example of what I think should work:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntype Object = HashMap&lt;String, Node&gt;;\n\n\n#[derive(Debug)]\nenum Node {\n    Terminal(String),\n    Nested(Object),\n}\n\n\nmacro_rules! obj {\n    {\n        $($tt:tt)*\n    } =&gt; {\n        {\n            let map = ::std::collections::HashMap::new();\n\n            obj!(@parse; map; ($($tt)*));\n\n            map\n        }\n    };\n    (@parse; $name:ident; ()) =&gt; {};\n    (@parse; $name:ident; ($key:expr =&gt; $value:expr, $($tail:tt)*)) =&gt; {\n        $name.insert($key.into(), Node::Terminal($value.into()));\n        obj!(@parse; $name; ($($tail)*));\n    };\n    (@parse; $name:ident; ($key:expr =&gt; $value:block, $($tail:tt)*)) =&gt; {\n        $name.insert($key.into(), Node::Nested(obj!{$value}));\n        obj!(@parse; $name; ($($tail)*));\n    };\n}\n\nfn main() {\n    let x: Object = obj!{\n        \"foo\" =&gt; \"bar\",\n        \"bing\" =&gt; {\n            \"bar\" =&gt; \"baz\",\n        },\n    };\n\n    println!(\"{:#?}\", x);\n}\n</code></pre>\n\n<p>This does not work, I get a recursion error when I try to compile it:</p>\n\n<pre><code>error: recursion limit reached while expanding the macro `obj`\n  --&gt; src/main.rs:22:13\n   |\n22 |               obj!(@parse; map; ($($tt)*));\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n40 |       let x: Object = obj!{\n   |  _____________________-\n41 | |         \"foo\" =&gt; \"bar\",\n42 | |         \"bing\" =&gt; {\n43 | |             \"bar\" =&gt; \"baz\",\n44 | |         },\n45 | |     };\n   | |_____- in this macro invocation\n   |\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n</code></pre>\n\n<p>I've tried bumping the recursion limit way up, and it does not terminate. What am I missing in my macro?</p>\n"}, {"tags": ["rust", "vulkan"], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 10363955, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/659ded66298aa29376184f1af07ad8fe?s=128&d=identicon&r=PG", "display_name": "Nico", "link": "https://stackoverflow.com/users/10363955/nico"}, "is_accepted": true, "score": 3, "last_activity_date": 1536931694, "last_edit_date": 1536931694, "creation_date": 1536931592, "answer_id": 52333032, "question_id": 52324236, "link": "https://stackoverflow.com/questions/52324236/why-does-enabling-vk-khr-surface-cause-createinstance-to-fail/52333032#52333032", "title": "Why does enabling VK_KHR_SURFACE cause CreateInstance to fail?", "body": "<p>The way you try to use <code>&amp;str</code> for FFI does not work. You have to work with <code>std::ffi::CString</code>. Also take a look at how you should collect the pointers to the <code>CString</code>s:</p>\n\n<pre><code>extern crate shared_library;\nextern crate vk_sys as vk;\n\nuse std::mem;\nuse std::ffi::CString;\nuse std::os::raw::c_char;\nuse std::os::raw::c_void;\nuse std::ptr;\nuse std::path::Path;\n\nconst VK_KHR_SURFACE: &amp;'static str = \"VK_KHR_surface\"; // base surface that all platforms need\nconst VK_KHR_WIN32_SURFACE: &amp;'static str = \"VK_KHR_win32_surface\";\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L36\npub unsafe trait Loader {\n    fn get_instance_proc_addr(\n        &amp;self,\n        instance: vk::Instance,\n        name: *const c_char,\n    ) -&gt; extern \"system\" fn() -&gt; ();\n}\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L56\npub struct DynamicLibraryLoader {\n    vk_lib: shared_library::dynamic_library::DynamicLibrary,\n    get_proc_addr: extern \"system\" fn(instance: vk::Instance, pName: *const c_char)\n        -&gt; extern \"system\" fn() -&gt; (),\n}\n\n// removed error checking\n// https://github.com/vulkano-rs/vulkano/blob/71d90e562a63f2a9aee40abaa3b59949e909015d/vulkano/src/instance/loader.rs#L63\nimpl DynamicLibraryLoader {\n    pub unsafe fn new&lt;P&gt;(path: P) -&gt; DynamicLibraryLoader\n    where\n        P: AsRef&lt;Path&gt;,\n    {\n        let vk_lib =\n            shared_library::dynamic_library::DynamicLibrary::open(Some(path.as_ref())).unwrap();\n        let get_proc_addr = {\n            let ptr: *mut c_void = vk_lib.symbol(\"vkGetInstanceProcAddr\").unwrap();\n            mem::transmute(ptr)\n        };\n\n        DynamicLibraryLoader {\n            vk_lib,\n            get_proc_addr,\n        }\n    }\n}\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L94\nunsafe impl Loader for DynamicLibraryLoader {\n    #[inline]\n    fn get_instance_proc_addr(\n        &amp;self,\n        instance: vk::Instance,\n        name: *const c_char,\n    ) -&gt; extern \"system\" fn() -&gt; () {\n        (self.get_proc_addr)(instance, name)\n    }\n}\n\n// For Windows. For other OS, see:\n// https://github.com/vulkano-rs/vulkano/blob/71d90e562a63f2a9aee40abaa3b59949e909015d/vulkano/src/instance/loader.rs#L171\nfn get_path() -&gt; &amp;'static Path {\n    Path::new(\"libvulkan.dylib\")\n}\n\n// return codes: https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkResult\nfn check_result(msg: &amp;str, result: vk::Result) {\n    match result {\n        vk::SUCCESS =&gt; println!(\"{}: {}\", msg, \"SUCCESS\"),\n        vk::NOT_READY =&gt; println!(\"{}: {}\", msg, \"NOT_READY\"),\n        vk::TIMEOUT =&gt; println!(\"{}: {}\", msg, \"TIMEOUT\"),\n        vk::EVENT_SET =&gt; println!(\"{}: {}\", msg, \"EVENT_SET\"),\n        vk::EVENT_RESET =&gt; println!(\"{}: {}\", msg, \"EVENT_RESET\"),\n        vk::INCOMPLETE =&gt; println!(\"{}: {}\", msg, \"INCOMPLETE\"),\n        vk::ERROR_OUT_OF_HOST_MEMORY =&gt; println!(\"{}: {}\", msg, \"ERROR_OUT_OF_HOST_MEMORY\"),\n        vk::ERROR_OUT_OF_DEVICE_MEMORY =&gt; println!(\"{}: {}\", msg, \"ERROR_OUT_OF_DEVICE_MEMORY\"),\n        vk::ERROR_INITIALIZATION_FAILED =&gt; println!(\"{}: {}\", msg, \"ERROR_INITIALIZATION_FAILED\"),\n        vk::ERROR_DEVICE_LOST =&gt; println!(\"{}: {}\", msg, \"ERROR_DEVICE_LOST\"),\n        vk::ERROR_MEMORY_MAP_FAILED =&gt; println!(\"{}: {}\", msg, \"ERROR_MEMORY_MAP_FAILED\"),\n        vk::ERROR_LAYER_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_LAYER_NOT_PRESENT\"),\n        vk::ERROR_EXTENSION_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_EXTENSION_NOT_PRESENT\"),\n        vk::ERROR_FEATURE_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_FEATURE_NOT_PRESENT\"),\n        vk::ERROR_INCOMPATIBLE_DRIVER =&gt; println!(\"{}: {}\", msg, \"ERROR_INCOMPATIBLE_DRIVER\"),\n        vk::ERROR_TOO_MANY_OBJECTS =&gt; println!(\"{}: {}\", msg, \"ERROR_TOO_MANY_OBJECTS\"),\n        vk::ERROR_FORMAT_NOT_SUPPORTED =&gt; println!(\"{}: {}\", msg, \"ERROR_FORMAT_NOT_SUPPORTED\"),\n        // vk::ERROR_FRAGMENTED_POOL =&gt; println!(\"{}: {}\", msg, \"ERROR_FRAGMENTED_POOL\"),\n        _ =&gt; println!(\"VK_ERR: {:?}\", result),\n    };\n}\n\nfn main() {\n    //********************************************************************************************************** Instance Create Info\n    let mut extension_names: Vec&lt;CString&gt; = Vec::new();\n    extension_names.push(CString::new(VK_KHR_SURFACE).unwrap()); // uncomment to see error\n    extension_names.push(CString::new(VK_KHR_WIN32_SURFACE).unwrap());\n    println!(\"extension_names: {:?}\", extension_names);\n\n    let extension_names_ffi = extension_names.iter().map(|ext_name| ext_name.as_ptr() as *const i8).collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let instance_create_info = vk::InstanceCreateInfo {\n        sType: vk::STRUCTURE_TYPE_INSTANCE_CREATE_INFO,\n        pNext: ptr::null(),\n        flags: 0,\n        pApplicationInfo: ptr::null(),\n        enabledLayerCount: 0,\n        ppEnabledLayerNames: ptr::null(),\n        enabledExtensionCount: extension_names.len() as u32,\n        ppEnabledExtensionNames: extension_names_ffi.as_ptr(),\n    };\n\n    //********************************************************************************************************** Instance Creation\n    let mut instance: vk::Instance = unsafe {mem::uninitialized()};\n\n    let loader = unsafe { DynamicLibraryLoader::new(get_path()) };\n\n    let entry_points = vk::EntryPoints::load(|name| unsafe {\n        mem::transmute(loader.get_instance_proc_addr(instance, name.as_ptr()))\n    });\n\n    unsafe {\n        check_result(\"create instance\", entry_points.CreateInstance(&amp;instance_create_info, ptr::null(), &amp;mut instance));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 650, "user_id": 996314, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4d6f299c3fe907046a23f106f7b56995?s=128&d=identicon&r=PG&f=1", "display_name": "Rokit", "link": "https://stackoverflow.com/users/996314/rokit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 1, "accepted_answer_id": 52333032, "answer_count": 1, "score": 0, "last_activity_date": 1536931694, "creation_date": 1536892515, "question_id": 52324236, "link": "https://stackoverflow.com/questions/52324236/why-does-enabling-vk-khr-surface-cause-createinstance-to-fail", "title": "Why does enabling VK_KHR_SURFACE cause CreateInstance to fail?", "body": "<p>Uncommenting line 96:</p>\n\n<pre><code> // extension_names.push(String::from(VK_KHR_SURFACE)); // uncomment to see error\n</code></pre>\n\n<p>will cause <code>CreateInstance</code> on line 121 to fail.</p>\n\n<p>I'm following a <a href=\"https://vulkan.lunarg.com/doc/view/1.1.82.1/windows/tutorial/html/05-init_swapchain.html\" rel=\"nofollow noreferrer\">Vulkan tutorial</a> which mentions that extensions are activated by defining <code>VK_USE_PLATFORM_WIN32_KHR</code>. Well, I am using <code>vk-sys</code> (are there other Rust Vulkan bindings I should use instead?), which is a crate used by <a href=\"https://github.com/vulkano-rs/vulkano\" rel=\"nofollow noreferrer\">Vulkano</a>. I searched Vulkano's repository and there is no mention of <code>VK_USE_PLATFORM_WIN32_KHR</code>. It is also not in the <a href=\"https://docs.rs/vk-sys/0.3.3/vk_sys/index.html\" rel=\"nofollow noreferrer\">vk-sys docs</a>.</p>\n\n<p>Is there a way to define <code>VK_USE_PLATFORM_WIN32_KHR</code> in Rust or is that not needed? Or is there something else I need to do?</p>\n\n<pre><code>extern crate shared_library;\nextern crate vk_sys as vk;\n\nuse std::mem;\nuse std::os::raw::c_char;\nuse std::os::raw::c_void;\nuse std::ptr;\nuse std::path::Path;\n\nconst VK_KHR_SURFACE: &amp;'static str = \"VK_KHR_surface\\0\"; // base surface that all platforms need\nconst VK_KHR_WIN32_SURFACE: &amp;'static str = \"VK_KHR_win32_surface\\0\";\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L36\npub unsafe trait Loader {\n    fn get_instance_proc_addr(\n        &amp;self,\n        instance: vk::Instance,\n        name: *const c_char,\n    ) -&gt; extern \"system\" fn() -&gt; ();\n}\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L56\npub struct DynamicLibraryLoader {\n    vk_lib: shared_library::dynamic_library::DynamicLibrary,\n    get_proc_addr: extern \"system\" fn(instance: vk::Instance, pName: *const c_char)\n        -&gt; extern \"system\" fn() -&gt; (),\n}\n\n// removed error checking\n// https://github.com/vulkano-rs/vulkano/blob/71d90e562a63f2a9aee40abaa3b59949e909015d/vulkano/src/instance/loader.rs#L63\nimpl DynamicLibraryLoader {\n    pub unsafe fn new&lt;P&gt;(path: P) -&gt; DynamicLibraryLoader\n    where\n        P: AsRef&lt;Path&gt;,\n    {\n        let vk_lib =\n            shared_library::dynamic_library::DynamicLibrary::open(Some(path.as_ref())).unwrap();\n        let get_proc_addr = {\n            let ptr: *mut c_void = vk_lib.symbol(\"vkGetInstanceProcAddr\").unwrap();\n            mem::transmute(ptr)\n        };\n\n        DynamicLibraryLoader {\n            vk_lib,\n            get_proc_addr,\n        }\n    }\n}\n\n// https://github.com/vulkano-rs/vulkano/blob/f4f91f7ee1aace3062571bc1f678b702fbd020cd/vulkano/src/instance/loader.rs#L94\nunsafe impl Loader for DynamicLibraryLoader {\n    #[inline]\n    fn get_instance_proc_addr(\n        &amp;self,\n        instance: vk::Instance,\n        name: *const c_char,\n    ) -&gt; extern \"system\" fn() -&gt; () {\n        (self.get_proc_addr)(instance, name)\n    }\n}\n\n// For Windows. For other OS, see:\n// https://github.com/vulkano-rs/vulkano/blob/71d90e562a63f2a9aee40abaa3b59949e909015d/vulkano/src/instance/loader.rs#L171\nfn get_path() -&gt; &amp;'static Path {\n    Path::new(\"vulkan-1.dll\")\n}\n\n// return codes: https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkResult\nfn check_result(msg: &amp;str, result: vk::Result) {\n    match result {\n        vk::SUCCESS =&gt; println!(\"{}: {}\", msg, \"SUCCESS\"),\n        vk::NOT_READY =&gt; println!(\"{}: {}\", msg, \"NOT_READY\"),\n        vk::TIMEOUT =&gt; println!(\"{}: {}\", msg, \"TIMEOUT\"),\n        vk::EVENT_SET =&gt; println!(\"{}: {}\", msg, \"EVENT_SET\"),\n        vk::EVENT_RESET =&gt; println!(\"{}: {}\", msg, \"EVENT_RESET\"),\n        vk::INCOMPLETE =&gt; println!(\"{}: {}\", msg, \"INCOMPLETE\"),\n        vk::ERROR_OUT_OF_HOST_MEMORY =&gt; println!(\"{}: {}\", msg, \"ERROR_OUT_OF_HOST_MEMORY\"),\n        vk::ERROR_OUT_OF_DEVICE_MEMORY =&gt; println!(\"{}: {}\", msg, \"ERROR_OUT_OF_DEVICE_MEMORY\"),\n        vk::ERROR_INITIALIZATION_FAILED =&gt; println!(\"{}: {}\", msg, \"ERROR_INITIALIZATION_FAILED\"),\n        vk::ERROR_DEVICE_LOST =&gt; println!(\"{}: {}\", msg, \"ERROR_DEVICE_LOST\"),\n        vk::ERROR_MEMORY_MAP_FAILED =&gt; println!(\"{}: {}\", msg, \"ERROR_MEMORY_MAP_FAILED\"),\n        vk::ERROR_LAYER_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_LAYER_NOT_PRESENT\"),\n        vk::ERROR_EXTENSION_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_EXTENSION_NOT_PRESENT\"),\n        vk::ERROR_FEATURE_NOT_PRESENT =&gt; println!(\"{}: {}\", msg, \"ERROR_FEATURE_NOT_PRESENT\"),\n        vk::ERROR_INCOMPATIBLE_DRIVER =&gt; println!(\"{}: {}\", msg, \"ERROR_INCOMPATIBLE_DRIVER\"),\n        vk::ERROR_TOO_MANY_OBJECTS =&gt; println!(\"{}: {}\", msg, \"ERROR_TOO_MANY_OBJECTS\"),\n        vk::ERROR_FORMAT_NOT_SUPPORTED =&gt; println!(\"{}: {}\", msg, \"ERROR_FORMAT_NOT_SUPPORTED\"),\n        // vk::ERROR_FRAGMENTED_POOL =&gt; println!(\"{}: {}\", msg, \"ERROR_FRAGMENTED_POOL\"),\n        _ =&gt; println!(\"VK_ERR: {:?}\", result),\n    };\n}\n\nfn main() {\n    //********************************************************************************************************** Instance Create Info\n    let mut extension_names: Vec&lt;String&gt; = Vec::new();\n    // extension_names.push(String::from(VK_KHR_SURFACE)); // uncomment to see error\n    extension_names.push(String::from(VK_KHR_WIN32_SURFACE));\n    println!(\"extension_names: {:?}\", extension_names);\n\n    let instance_create_info = vk::InstanceCreateInfo {\n        sType: vk::STRUCTURE_TYPE_INSTANCE_CREATE_INFO,\n        pNext: ptr::null(),\n        flags: 0,\n        pApplicationInfo: ptr::null(),\n        enabledLayerCount: 0,\n        ppEnabledLayerNames: ptr::null(),\n        enabledExtensionCount: extension_names.len() as u32,\n        ppEnabledExtensionNames: extension_names.as_ptr() as *const *const i8,\n    };\n\n    //********************************************************************************************************** Instance Creation\n    let mut instance: vk::Instance = unsafe {mem::uninitialized()};\n\n    let loader = unsafe { DynamicLibraryLoader::new(get_path()) };\n\n    let entry_points = vk::EntryPoints::load(|name| unsafe {\n        mem::transmute(loader.get_instance_proc_addr(instance, name.as_ptr()))\n    });\n\n    unsafe {\n        check_result(\"create instance\", entry_points.CreateInstance(&amp;instance_create_info, ptr::null(), &amp;mut instance));\n    }\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\nvk-sys = \"*\"\nshared_library = \"*\"\n</code></pre>\n"}, {"tags": ["assembly", "optimization", "rust", "compiler-optimization", "llvm-codegen"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user743382"}, "edited": false, "score": 1, "creation_date": 1536886068, "post_id": 52322608, "comment_id": 91594314, "body": "&quot;I expected to generate code like this, which is the <code>Ok</code> arm from <code>Box::downcast</code>:&quot; -- Before the <code>Ok</code> arm, there is one call that you&#39;re omitting: <code>self.is::&lt;T&gt;()</code>. If you insert that call there, even if you discard the result (so <code>let value = any(); value.is::&lt;i32&gt;(); let raw: ...</code>), you&#39;ll get the same code. I don&#39;t know yet what specifically in its implementation it is that is difficult to optimise away."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1536907348, "post_id": 52322608, "comment_id": 91599432, "body": "@hvd   That&#39;s the statement which I know is true and expect the compiler to optimize away"}, {"owner": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "edited": false, "score": 0, "creation_date": 1537809987, "post_id": 52322608, "comment_id": 91910425, "body": "I think the virtual call to <code>any::get_type_id()</code> inside <code>self.is::&lt;T&gt;()</code> being preserved.  The compiler must not be able to see through it, and leaves it in in case it has side effects, along with an unwind block."}, {"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "reply_to_user": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "edited": false, "score": 0, "creation_date": 1547838499, "post_id": 52322608, "comment_id": 95344200, "body": "@wartmanm I just read your comment after researching and posting my answer... Would&#39;ve saved me a bunch of work :P"}], "answers": [{"tags": [], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "is_accepted": true, "score": 2, "last_activity_date": 1547838443, "creation_date": 1547838443, "answer_id": 54260069, "question_id": 52322608, "link": "https://stackoverflow.com/questions/52322608/why-can-the-rust-compiler-not-optimize-away-the-err-arm-of-boxdowncast/54260069#54260069", "title": "Why can the Rust compiler not optimize away the Err arm of Box::downcast?", "body": "<p>Let's try to optimize your code as good as we can manually. If we manually inline <code>downcast()</code> we get the following:</p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    let value = any();\n    if value.is::&lt;i32&gt;() {\n        let raw: *mut Any = Box::into_raw(value);\n        Box::from_raw(raw as *mut i32)\n    } else {\n        std::hint::unreachable_unchecked()\n    }\n}\n</code></pre>\n\n<p>We can transform this:</p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    let value = any();\n    value.is::&lt;i32&gt;();\n    let raw: *mut Any = Box::into_raw(value);\n    Box::from_raw(raw as *mut i32)\n}\n</code></pre>\n\n<p><code>value.is::&lt;i32&gt;()</code> is unused! Can we remove it? Here's lies the issue.</p>\n\n<p>The <code>is</code> method calls <code>get_type_id</code> on a <code>dyn Any</code> object. That method can only be determined at runtime. And <strong>it may have side effects</strong>. Thus it can <strong>not</strong> be removed.</p>\n\n<p>You can see the same lengthy assembly code as in your examples just from the following function:</p>\n\n<pre><code>#![feature(get_type_id)]\npub fn nop(any: Box&lt;dyn Any&gt;) {\n    any.get_type_id();\n}\n</code></pre>\n\n<hr>\n\n<p>Now you may argue that <code>Any::get_type_id</code> is universally defined by the compiler and can not be overridden, but the compiler isn't smart enough to realize that.</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 364, "favorite_count": 2, "accepted_answer_id": 54260069, "answer_count": 1, "score": 10, "last_activity_date": 1564862147, "creation_date": 1536878005, "last_edit_date": 1564862147, "question_id": 52322608, "link": "https://stackoverflow.com/questions/52322608/why-can-the-rust-compiler-not-optimize-away-the-err-arm-of-boxdowncast", "title": "Why can the Rust compiler not optimize away the Err arm of Box::downcast?", "body": "<p>I have a <code>Box&lt;dyn Any&gt;</code> and I know the underlying type so I want to optimize away the test in <a href=\"https://doc.rust-lang.org/nightly/std/boxed/struct.Box.html#method.downcast\" rel=\"nofollow noreferrer\"><code>Box::downcast()</code></a> (<a href=\"https://github.com/rust-lang/rust/blob/1.28.0/src/liballoc/boxed.rs#L471\" rel=\"nofollow noreferrer\">source</a>).</p>\n\n<p>First I tried with <a href=\"https://doc.rust-lang.org/nightly/std/hint/fn.unreachable_unchecked.html\" rel=\"nofollow noreferrer\"><code>std::hint::unreachable_unchecked()</code></a>:</p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    let value = any();\n    if let Ok(value) = value.downcast() {\n        value\n    } else {\n        std::hint::unreachable_unchecked()\n    }\n}\n</code></pre>\n\n<p>and </p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    any().downcast().map_err(|_| std::hint::unreachable_unchecked()).unwrap()\n}\n</code></pre>\n\n<p>with <code>rustc -C opt-level=3</code> both result in this (40 lines omitted):</p>\n\n<pre><code>example::downcast:\n        push    rbx\n        sub     rsp, 16\n        call    any@PLT\n        mov     rbx, rax\n        mov     qword ptr [rsp], rax\n        mov     qword ptr [rsp + 8], rdx\n        mov     rdi, rax\n        call    qword ptr [rdx + 24]\n        mov     rax, rbx\n        add     rsp, 16\n        pop     rbx\n        ret\n        mov     rbx, rax\n        mov     rdi, rsp\n        call    core::ptr::drop_in_place\n        mov     rdi, rbx\n        call    _Unwind_Resume@PLT\n        ud2\n</code></pre>\n\n<p>Since this is not the optimization I was looking for, I tried </p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    let value = any();\n    std::intrinsics::assume(value.is::&lt;i32&gt;());\n    value.downcast().unwrap()\n}\n</code></pre>\n\n<p>but this got even worse (118 lines omitted):</p>\n\n<pre><code>example::downcast:\n        push    r15\n        push    r14\n        push    rbx\n        sub     rsp, 32\n        call    any@PLT\n        mov     rbx, rax\n        mov     r14, rdx\n        mov     qword ptr [rsp], rax\n        mov     qword ptr [rsp + 8], rdx\n        mov     r15, qword ptr [rdx + 24]\n        mov     rdi, rax\n        call    r15\n        mov     qword ptr [rsp + 16], rbx\n        mov     qword ptr [rsp + 24], r14\n        mov     rdi, rbx\n        call    r15\n        movabs  rcx, -5015437470765251660     ;TypeId::of::&lt;i32&gt;()\n        cmp     rax, rcx\n        jne     .LBB5_7\n        mov     rax, rbx\n        add     rsp, 32\n        pop     rbx\n        pop     r14\n        pop     r15\n        ret\n.LBB5_7:\n        mov     rdi, rbx\n        mov     rsi, r14\n        call    core::result::unwrap_failed\n        ud2\n        mov     rbx, rax\n        lea     rdi, [rsp + 16]\n        call    core::ptr::drop_in_place\n        mov     rdi, rbx\n        call    _Unwind_Resume@PLT\n        ud2\n        mov     rbx, rax\n        mov     rdi, rsp\n        call    core::ptr::drop_in_place\n        mov     rdi, rbx\n        call    _Unwind_Resume@PLT\n        ud2\n</code></pre>\n\n<p>I expected to generate code like this, which is the <code>Ok</code> arm from <code>Box::downcast</code>:</p>\n\n<pre><code>pub unsafe fn downcast() -&gt; Box&lt;i32&gt; {\n    let value = any();\n    let raw: *mut dyn Any = Box::into_raw(value);\n    Box::from_raw(raw as *mut i32)\n}\n</code></pre>\n\n<p>which results in this (<strong>zero</strong> lines omitted):</p>\n\n<pre><code>example::downcast:\n        push    rax\n        call    any@PLT\n        pop     rcx\n        ret\n</code></pre>\n\n<p>Why can the compiler not optimize the code in such a way?</p>\n\n<p>All assembly <a href=\"https://godbolt.org/z/E49KP0\" rel=\"nofollow noreferrer\">generated by godbolt</a>.</p>\n"}, {"tags": ["rust", "conrod"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536904129, "post_id": 52320189, "comment_id": 91598126, "body": "What is conrod?"}, {"owner": {"reputation": 5029, "user_id": 273924, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/50c78d9d967c8a192aae64a618e521ab?s=128&d=identicon&r=PG", "display_name": "locka", "link": "https://stackoverflow.com/users/273924/locka"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536913527, "post_id": 52320189, "comment_id": 91602534, "body": "I&#39;ll edit to put a brief description"}], "owner": {"reputation": 5029, "user_id": 273924, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/50c78d9d967c8a192aae64a618e521ab?s=128&d=identicon&r=PG", "display_name": "locka", "link": "https://stackoverflow.com/users/273924/locka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 150, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1536913833, "creation_date": 1536865230, "last_edit_date": 1536913833, "question_id": 52320189, "link": "https://stackoverflow.com/questions/52320189/how-do-i-position-things-properly-in-conrod", "title": "How do I position things properly in Conrod", "body": "<p>I'm trying to write code using <a href=\"https://crates.io/crates/conrod\" rel=\"nofollow noreferrer\">conrod</a> with a winit/glium backend. Conrod is an intermediate mode graphical user interface library for Rust while wininit provides an event model and glium the OpenGL bindings.</p>\n\n<p>My code draws a grid of values onto a screen with a (row,col), i.e. \"text1\" at (0,0), \"text2\", (1,0), \"text3\" at (0,1) etc. where (row,col) is translated to an absolute (x,y) coordinate.</p>\n\n<p>Basic flow is this:</p>\n\n<ol>\n<li>For each value I want to render as text</li>\n<li>Calculate the column / row of the value, i.e. (idx % num_cols, idx / num_cols)</li>\n<li>Calculate an x and y from the column and row. i.e. (col * WIDTH, ROW * HEIGHT). </li>\n<li>Create a widget::Text at (x, y) containing the value</li>\n</ol>\n\n<p>The code that does this is shown below in a slightly simplified form. The entire file is online <a href=\"https://github.com/locka99/opcua/blob/master/samples/gfx-client/src/main.rs#L288\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>This should be simple code to implement but when I run it, the text boxes are not drawn from x=0, y=0 but instead somewhere but not exactly offset from the centre of the view in both axes. </p>\n\n<p>As far as I can tell this shouldn't happen because I am explicitly setting the absolute position and have confirmed the coordinates are correct. So I would expect them to render from the top left of the screen. I don't understand what causes the offset. </p>\n\n<p>Any ideas?</p>\n\n<p>The code that calculates position is this:</p>\n\n<pre><code>fn draw_ui(ui: &amp;mut Ui, model: &amp;mut UiModel) {\n    let ui = &amp;mut ui.set_widgets();\n\n    // Canvas is the backdrop to the view\n    widget::Canvas::new()\n        .color(BACKGROUND_COLOUR)\n        .set(model.static_ids.canvas, ui);\n\n    // Create text widgets for each value\n    let state = model.session_state.read().unwrap();\n\n    // Create / update the widgets\n    if state.values.is_empty() {\n        // ... removed\n    } else {\n        let num_cols: usize = 2;\n\n        state.values.iter().enumerate().for_each(|(i, v)| {\n            // Create / update the cell and its state\n            let (node_id, value) = v;\n            if let Some(id) = model.value_ids.get(node_id) {\n                let (col, row) = (i % num_cols, i / num_cols);\n                let valid = value.is_valid();\n                let value = if let Some(ref value) = value.value {\n                    value.to_string()\n                } else {\n                    \"None\".to_string()\n                };\n                // Turn the value into a string to render it\n                let (x, y) = (col as f64 * (CELL_WIDTH + PADDING), row as f64 * (CELL_HEIGHT + PADDING));\n                value_widget(&amp;value, valid, x, y, CELL_WIDTH, CELL_HEIGHT, model.static_ids.canvas)\n                    .set(*id, ui);\n            }\n        });\n    }\n}\n\nfn value_widget(value: &amp;str, valid: bool, x: f64, y: f64, w: f64, h: f64, canvas_id: conrod::widget::Id) -&gt; widget::Text {\n    let color = if valid { GOOD_COLOUR } else { BAD_COLOUR };\n    widget::Text::new(value)\n        .x_y(x, y)\n        .w(w).h(h)\n        .color(color)\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits", "terminology"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536858995, "post_id": 52318662, "comment_id": 91584769, "body": "Please do a complete <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1536859663, "post_id": 52318793, "comment_id": 91585086, "body": "Awesome, thank you very much! I think the documentation should be clearer; I assumed I was constraining <code>V</code> <i>sufficiently</i>; and concluded predicates must be something else. It didn&#39;t occur to me that what I was doing wasn&#39;t very helpful to the compiler."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1537667689, "last_edit_date": 1537667689, "creation_date": 1536859313, "answer_id": 52318793, "question_id": 52318662, "link": "https://stackoverflow.com/questions/52318662/what-is-a-predicate-in-rust/52318793#52318793", "title": "What is a predicate in Rust?", "body": "<p><code>V: VisibleElement</code> <em>is</em> a predicate in this context. The problem is that the predicate doesn't constrain the types sufficiently for <code>V</code> to be relevant in any way.</p>\n\n<p>The compiler sees <code>V</code> and also <code>V: VisibleElement</code>, and then it just throws them away because they have no impact on:</p>\n\n<ul>\n<li>which trait you are implementing (the <code>impl trait</code>)</li>\n<li>or the type for which you are implementing the trait (<code>self type</code>) </li>\n<li>or any of the constraints on either of those (the <code>predicates</code> or bounds).</li>\n</ul>\n\n<p>For example, if the predicate included a relationship between <code>V</code> and <code>S</code> then that would make sense, because it would add information about which implementations are being defined here. For example, that could be something like this:</p>\n\n<pre><code>impl&lt;S, V&gt; Storage for Database&lt;S&gt;\nwhere\n    S: StoredElement&lt;ChildType = V&gt;,\n    V: VisibleElement,\n</code></pre>\n\n<p>I've made up the types here, as I don't know where the actual types are from. This would be a meaningful usage of <code>V</code> because it is constraining <code>S</code> to not only <code>StoredElement</code> but to <code>StoredElement</code>s whose associated <code>ChildType</code> implements <code>VisibleElement</code>. This will only define the implementation of  <code>Storage</code> for <code>Database</code> where that condition (predicate) is met.</p>\n\n<p>The compiler is complaining because you've added a parameter that has no impact whatsoever and that is most likely to be a mistake on your part.</p>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 885, "favorite_count": 1, "accepted_answer_id": 52318793, "answer_count": 1, "score": 2, "last_activity_date": 1546960874, "creation_date": 1536858769, "last_edit_date": 1546960874, "question_id": 52318662, "link": "https://stackoverflow.com/questions/52318662/what-is-a-predicate-in-rust", "title": "What is a predicate in Rust?", "body": "<p>When I try to compile this code:</p>\n\n<pre><code>impl&lt;S, V&gt; Storage for Database&lt;S&gt;\nwhere\n    S: StoredElement,\n    V: VisibleElement,\n</code></pre>\n\n<p>The compiler complains</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the type parameter `V` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/main.rs:77:9\n   |\n77 | impl&lt;S, V&gt; Storage for Database&lt;S&gt;\n   |         ^ unconstrained type parameter\n</code></pre>\n\n<p>I assumed <code>V: VisibleElement</code> is a predicate, but apparently the compiler disagrees. </p>\n\n<p>So, in Rust, what exactly is a predicate?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1536859113, "post_id": 52317381, "comment_id": 91584820, "body": "bindgen and libloading doesn&#39;t do the same job, you can use both for the same library for exemple."}, {"owner": {"reputation": 555, "user_id": 2579927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JcYch.jpg?s=128&g=1", "display_name": "Ferrarezi", "link": "https://stackoverflow.com/users/2579927/ferrarezi"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536859830, "post_id": 52317381, "comment_id": 91585168, "body": "is the only difference that bindgen generates the ffi bindings? What if I do not use bindings?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536863259, "post_id": 52317381, "comment_id": 91586823, "body": "No they are completely different, there have nothing in commun, one load dynamic symbol into your program the other create binding for call function."}], "owner": {"reputation": 555, "user_id": 2579927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JcYch.jpg?s=128&g=1", "display_name": "Ferrarezi", "link": "https://stackoverflow.com/users/2579927/ferrarezi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 155, "favorite_count": 2, "answer_count": 0, "score": 3, "last_activity_date": 1536853840, "creation_date": 1536853717, "last_edit_date": 1536853840, "question_id": 52317381, "link": "https://stackoverflow.com/questions/52317381/when-should-i-use-the-bindgen-crate-instead-of-libloading", "title": "When should I use the bindgen crate instead of libloading?", "body": "<p>I want to consume a shared / dynamic library; what would be the best option?</p>\n\n<p>Is there a loss of runtime speed by using libloading?</p>\n"}, {"tags": ["rust", "lifetime", "copy-on-write"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1536847701, "post_id": 52315349, "comment_id": 91578306, "body": "See also <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536847933, "post_id": 52315349, "comment_id": 91578484, "body": "How do you expect this code to work? <code>msg</code> is destroyed at the end of <code>on_message</code>, but a reference to it could still be waiting in the channel. You&#39;d then have a reference to invalid memory. <b>Rust prevented you from introducing memory unsafety</b>, that&#39;s the point of Rust."}, {"owner": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536848248, "post_id": 52315349, "comment_id": 91578696, "body": "on_message method is from TCP handler trait. I have to work with Vec&lt;u8&gt;. But i also need Cow&lt;[u8]&gt; because it is generated serialization code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536848376, "post_id": 52315349, "comment_id": 91578768, "body": "Why are you using a reference to the <code>msg</code> instead of putting the owned value in the <code>Cow</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1536850392, "post_id": 52316312, "comment_id": 91580117, "body": "I think your <code>read_message</code> should be <code>-&gt; NetworkMessage&lt;&#39;static&gt;</code> for clarity."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536851157, "post_id": 52316312, "comment_id": 91580638, "body": "@Shepmaster I&#39;m thinking about it. In this case, <code>&#39;static</code> would indeed be equivalent. But if <code>NetworkMessage&lt;&#39;b&gt;</code> were invariant in <code>&#39;b</code>, returning <code>NetworkMessage&lt;&#39;static&gt;</code> would be more limiting."}, {"owner": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "edited": false, "score": 0, "creation_date": 1536859575, "post_id": 52316312, "comment_id": 91585045, "body": "Thank you for the detailed explanation. I will modify the serialization lib to my needs. Quick question, is there any way to bypass borrow checkier using unsafe blocks?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "edited": false, "score": 1, "creation_date": 1536861280, "post_id": 52316312, "comment_id": 91585918, "body": "@mikbal Sometimes, kind of? Instead of references, you can use raw pointers, which do not have lifetimes. But you still have to solve the <i>problem</i> of lifetimes, which is the same as in C or C++ without the handrails provided by the borrow checker.  For example, <a href=\"https://play.rust-lang.org/?gist=b31ade589371e7162771cdeb0911d2d3&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><i>don&#39;t do this</i></a>, because it compiles, but has undefined behavior, as Shepmaster pointed out in the question comments. To use <code>unsafe</code> correctly, you must be smarter than the compiler."}, {"owner": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "edited": false, "score": 0, "creation_date": 1536873301, "post_id": 52316312, "comment_id": 91591417, "body": "@trentcl So i can&#39;t call memcpy on &amp;msg and pass the copy to channel?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "edited": false, "score": 0, "creation_date": 1536878592, "post_id": 52316312, "comment_id": 91592903, "body": "@mikbal You can use <code>memcpy</code> (or its Rust equivalent <a href=\"https://doc.rust-lang.org/std/ptr/fn.copy.html\" rel=\"nofollow noreferrer\"><code>ptr::copy</code></a>), but that doesn&#39;t solve the problem. <code>memcpy</code> doesn&#39;t allocate, so you&#39;re going to have to get that destination buffer from somewhere. Is it local? It will be invalid as soon as <code>on_message</code> returns. Do you allocate it on the heap? That&#39;s essentially the same as cloning the <code>Vec</code>, so you may as well do it the (in Rust) normal, safe way."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536879171, "post_id": 52316312, "comment_id": 91593013, "body": "You can also safely write <code>read_message</code> so that it does the copy internally: <a href=\"https://play.rust-lang.org/?gist=a4ad22e5c213ab6bccb0c47e2e8d8733&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I would use <code>to_vec</code></a>. Notice that <code>bytes</code> no longer has a <code>&#39;a</code> in its type; that&#39;s how you tell the compiler that the output lifetime is meant to be independent of <code>bytes</code>. (And yes, that can also be written as <code>fn read_message(bytes: &amp;[u8]) -&gt; NetworkMessage&lt;&#39;static&gt;</code>.)"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1536852034, "last_edit_date": 1536852034, "creation_date": 1536850212, "answer_id": 52316312, "question_id": 52315349, "link": "https://stackoverflow.com/questions/52315349/variable-does-not-live-long-enough-to-send-over-channel/52316312#52316312", "title": "Variable does not live long enough to send over channel", "body": "<p>Here's a one-line change you can make to make this code correct:</p>\n\n<pre><code>fn on_message(&amp;mut self, msg: &amp;'a [u8])\n</code></pre>\n\n<p>Instead of taking a <code>Vec&lt;u8&gt;</code> by value, take a reference to a slice that is already guaranteed to live at least as long as <code>'a</code>. This makes it the <em>caller's</em> responsibility to ensure that whatever you pass to <code>on_message</code> will live long enough to be sent over the channel.</p>\n\n<hr>\n\n<p>But maybe you can't do that. Either the caller will have the same problem, and you can't push it up any farther, or the <code>Vec&lt;u8&gt;</code> is a required part of <code>on_message</code>'s signature. If that's the case, you will have to change <code>read_message</code>. Here's one possibility:</p>\n\n<pre><code>fn read_message&lt;'b&gt;(bytes: Vec&lt;u8&gt;) -&gt; NetworkMessage&lt;'b&gt; {\n    NetworkMessage::PlayerActionMessage(PlayerAction {\n        data: Cow::Owned(bytes),\n    })\n}\n\nimpl&lt;'a&gt; MessageHandler&lt;'a&gt; {\n    fn on_message(&amp;mut self, msg: Vec&lt;u8&gt;) {\n        let readm = read_message(msg);\n        self.connection_manager.channel.send(readm);\n    }\n}\n</code></pre>\n\n<p>Moving <code>msg</code> into <code>read_message</code> leaves the compiler free to pick any lifetime it wants for <code>'b</code>. In <code>on_message</code> it can just pick <code>'a</code> to make the code compile. The disadvantage of this approach is that you may have to <code>.clone()</code> the <code>Vec</code> if you need to use it again after sending it down the channel.</p>\n"}], "owner": {"reputation": 1048, "user_id": 1055536, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/efbe45ca9a9a0cbcd224a2fa6c30f8cd?s=128&d=identicon&r=PG", "display_name": "mikbal", "link": "https://stackoverflow.com/users/1055536/mikbal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 1, "accepted_answer_id": 52316312, "answer_count": 1, "score": 1, "last_activity_date": 1536852034, "creation_date": 1536847002, "last_edit_date": 1536847742, "question_id": 52315349, "link": "https://stackoverflow.com/questions/52315349/variable-does-not-live-long-enough-to-send-over-channel", "title": "Variable does not live long enough to send over channel", "body": "<p>I am trying to send a message containing <code>Cow&lt;[u8]&gt;</code> over a channel. However, the lifetime rules do not allow me to pass it over.</p>\n\n<pre><code>use std::borrow::Cow;\nuse std::sync::mpsc;\n\n#[derive(Debug, Default, PartialEq, Clone)]\npub struct PlayerAction&lt;'a&gt; {\n    pub data: Cow&lt;'a, [u8]&gt;,\n}\n\n#[derive(Debug, Clone)]\npub enum NetworkMessage&lt;'a&gt; {\n    PlayerActionMessage(PlayerAction&lt;'a&gt;),\n}\n\npub struct ConnectionsManager&lt;'a&gt; {\n    channel: mpsc::Sender&lt;NetworkMessage&lt;'a&gt;&gt;,\n}\n\npub struct MessageHandler&lt;'a&gt; {\n    pub connection_manager: ConnectionsManager&lt;'a&gt;,\n}\n\nfn read_message&lt;'a&gt;(bytes: &amp;'a Vec&lt;u8&gt;) -&gt; NetworkMessage {\n    NetworkMessage::PlayerActionMessage(PlayerAction {\n        data: Cow::Borrowed(&amp;bytes),\n    })\n}\n\nimpl&lt;'a&gt; MessageHandler&lt;'a&gt; {\n    fn on_message(&amp;mut self, msg: Vec&lt;u8&gt;) {\n        let readm = read_message(&amp;msg);\n        self.connection_manager.channel.send(readm);\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=248727d4e9149e3938164849e07bd938&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `msg` does not live long enough\n  --&gt; src/main.rs:30:35\n   |\n30 |         let readm = read_message(&amp;msg);\n   |                                   ^^^ borrowed value does not live long enough\n31 |         self.connection_manager.channel.send(readm);\n32 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 28:1...\n  --&gt; src/main.rs:28:1\n   |\n28 | impl&lt;'a&gt; MessageHandler&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><code>MessageHandler</code> outlives <code>Vec&lt;u8&gt;</code>, but I have no idea how to pass it any other way. </p>\n\n<p>Is there any way to pass <code>Vec&lt;u8&gt;</code> so that it can live longer than the <code>on_message</code> function?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536843241, "post_id": 52313031, "comment_id": 91575460, "body": "I think the way you want to go is <a href=\"https://github.com/rayon-rs/rayon\" rel=\"nofollow noreferrer\">rayon</a>"}], "answers": [{"tags": [], "owner": {"reputation": 68198, "user_id": 98038, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/716b5b6ad050ab528046c96e324bd0cd?s=128&d=identicon&r=PG", "display_name": "molf", "link": "https://stackoverflow.com/users/98038/molf"}, "is_accepted": true, "score": 6, "last_activity_date": 1536844552, "last_edit_date": 1536844552, "creation_date": 1536843396, "answer_id": 52314242, "question_id": 52313031, "link": "https://stackoverflow.com/questions/52313031/how-to-run-multiple-futures-that-call-threadsleep-in-parallel/52314242#52314242", "title": "How to run multiple futures that call thread::sleep in parallel?", "body": "<p>If you combine futures with <code>join()</code> they'll be transformed into a <strong>single task</strong>, running on a <strong>single thread</strong>.</p>\n\n<p>If the futures are well-behaved, they would run in parallel in an event-driven (asynchronous) manner. You would expect your application to sleep for 1 second.</p>\n\n<p>But unfortunately the future you implemented is <strong>not</strong> well-behaved. It blocks the current thread for one second, disallowing any other work to be done during this time. Because the futures are run on the same thread, they cannot run at the same time. Your application will sleep for 2 seconds.</p>\n\n<p>Note that if you change your example to the following, the futures will remain separate tasks and you can run them independently in parallel on your thread pool:</p>\n\n<pre><code>fn main() {\n    let fut1 = SlowComputation {};\n    let fut2 = SlowComputation {};\n\n    let mut pool = ThreadPoolBuilder::new()\n        .pool_size(5)\n        .create()\n        .expect(\"Failed to create threadpool\");\n\n    pool.spawn(fut1);\n    pool.run(fut2);\n}\n</code></pre>\n\n<p>Writing futures that block the main thread is <strong>highly</strong> discouraged and in a real application you should probably use timers provided by a library, for example <a href=\"https://docs.rs/tokio/0.1/tokio/timer/struct.Delay.html\" rel=\"nofollow noreferrer\"><code>tokio::timer::Delay</code></a> or <a href=\"https://docs.rs/tokio/0.1/tokio/timer/timeout/struct.Timeout.html\" rel=\"nofollow noreferrer\"><code>tokio::timer::timeout::Timeout</code></a>.</p>\n"}], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2197, "favorite_count": 1, "closed_date": 1536844403, "accepted_answer_id": 52314242, "answer_count": 1, "score": 5, "last_activity_date": 1580661071, "creation_date": 1536839072, "last_edit_date": 1580661071, "question_id": 52313031, "link": "https://stackoverflow.com/questions/52313031/how-to-run-multiple-futures-that-call-threadsleep-in-parallel", "closed_reason": "Duplicate", "title": "How to run multiple futures that call thread::sleep in parallel?", "body": "<p>I have a slow future that blocks for 1 second before running to completion.</p>\n\n<p>I've tried to use the <code>join</code> combinator but the composite future <code>my_app</code> executes the futures sequentially:</p>\n\n<pre><code>#![feature(pin, futures_api, arbitrary_self_types)]\n\nextern crate futures; // v0.3\n\nuse futures::prelude::*;\nuse futures::task::Context;\nuse std::pin::PinMut;\nuse std::{thread, time};\nuse futures::executor::ThreadPoolBuilder;\n\nstruct SlowComputation {}\n\nimpl Future for SlowComputation {\n    type Output = ();\n\n    fn poll(self: PinMut&lt;Self&gt;, _cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        let millis = time::Duration::from_millis(1000);\n        thread::sleep(millis);\n\n        Poll::Ready(())\n    }\n}\n\nfn main() {\n    let fut1 = SlowComputation {};\n    let fut2 = SlowComputation {};\n    let my_app = fut1.join(fut2);\n\n    ThreadPoolBuilder::new()\n        .pool_size(5)\n        .create()\n        .expect(\"Failed to create threadpool\")\n        .run(my_app);\n}\n</code></pre>\n\n<p>Why does <code>join</code> work like that? I expected the futures to be spawned on different threads.</p>\n\n<p>What is the right way to obtain my goal?</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\nfutures-preview = \"0.3.0-alfa.6\"\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ time target/debug/futures03\n\nreal    0m2.004s\nuser    0m0.000s\nsys 0m0.004s\n</code></pre>\n"}, {"tags": ["rust", "tostring"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1536799940, "post_id": 52305052, "comment_id": 91557873, "body": "What exactly is your question? What do you expect the program to output?"}, {"owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1536800738, "post_id": 52305052, "comment_id": 91557992, "body": "@TimDiekmann   I&#39;ve edited the question contents. How should I convert reader.read_line(&amp;mut buffer) which is a usize, into a String, without changing the contents of it into the length of it&#39;s contents?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536804690, "post_id": 52305052, "comment_id": 91558726, "body": "The best way to convert a <code>usize</code> to a <code>String</code> is via <code>to_string</code>, exactly as you are doing. What is your <i>real</i> question?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1536826576, "post_id": 52305052, "comment_id": 91565884, "body": "@Shepmaster The issue is a confusion over how <code>read_line</code> works. OP is expecting the function to return the line, but it actually returns the number of bytes read and mutates the provided buffer."}], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1536803118, "post_id": 52305330, "comment_id": 91558410, "body": "Apart from the incorrect usage of the <code>nickname</code> variable after its been removed (in your first snippet), this is correct. You also don&#39;t need to pass them by reference to the <code>println</code> macro as it&#39;ll not take ownership anyway."}, {"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1536804486, "post_id": 52305330, "comment_id": 91558673, "body": "@SimonWhitehead good catch! i actually mentally ignored that line by accident."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1536827576, "post_id": 52305330, "comment_id": 91566364, "body": "I think you could replace that last match with <code>reader.read_line(&amp;mut buffer).map(|_| buffer)</code>, if you wanted to be really terse :) Unless there&#39;s some weirdness with the closure move semantics that I&#39;ve not accounted for, that is!"}], "tags": [], "owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "is_accepted": true, "score": 6, "last_activity_date": 1536804466, "last_edit_date": 1536804466, "creation_date": 1536801165, "answer_id": 52305330, "question_id": 52305052, "link": "https://stackoverflow.com/questions/52305052/how-to-get-the-result-of-read-line-as-a-string-in-rust/52305330#52305330", "title": "How to get the result of read_line() as a String in Rust?", "body": "<p>Please see the <a href=\"https://doc.rust-lang.org/std/io/struct.Stdin.html#method.read_line\" rel=\"noreferrer\">documentation</a>, and you can see that <code>read_line</code> <em>mutates</em> the contents of its parameter (in your case, the empty string bound at <code>buffer</code>), putting the value read into it, and returns <em>the length read</em>. But you're unwrapping that result and converting that length to a string.</p>\n\n<p>Instead, your function should look like:</p>\n\n<pre><code>fn ask_nick() -&gt; String {\n    let reader = io::stdin();\n    let mut buffer: String = String::new();\n\n    reader.read_line(&amp;mut buffer)\n        .ok()\n        .expect(\"ERRMSG\");\n\n    println!(\"OK: Hello {}!\", buffer);\n    return buffer;\n}\n</code></pre>\n\n<p>Or, even more idiomatically, not panicking when invalid input is provided:</p>\n\n<pre><code>fn ask_nick() -&gt; Result&lt;String&gt; {\n    let reader = io::stdin();\n    let mut buffer: String = String::new();\n\n    match reader.read_line(&amp;mut buffer) {\n        Ok(_) =&gt; Ok(buffer),\n        Err(e) =&gt; Err(e),\n    }\n}\n</code></pre>\n\n<p>In this variant, the caller is the one that decides how to handle errors.</p>\n"}], "owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2148, "favorite_count": 0, "accepted_answer_id": 52305330, "answer_count": 1, "score": 1, "last_activity_date": 1536826470, "creation_date": 1536798209, "last_edit_date": 1536826470, "question_id": 52305052, "link": "https://stackoverflow.com/questions/52305052/how-to-get-the-result-of-read-line-as-a-string-in-rust", "title": "How to get the result of read_line() as a String in Rust?", "body": "<p>I'm trying to get a <code>String</code> from standard input: </p>\n\n<pre><code>use std::io;\n\nfn ask_nick() -&gt; String {\n    let reader = io::stdin();\n    let mut buffer: String = String::new();\n\n    let nickname: String = reader.read_line(&amp;mut buffer).ok()\n        .expect(\"ERRMSG\").to_string();\n\n        println!(\"OK: Hello {}!\", &amp;nickname);\n        return nickname;\n    }\n}\n\nfn main() {\n    let nickname: String = ask_nick();\n    println!(\"{}\", nickname);\n}\n</code></pre>\n\n<p>But conversion from <code>usize</code> to <code>String</code> seems to change contents to it's length:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          INPUT:= John\nEXPECTED OUTPUT:= OK: Hello John!\n                  John\n         OUTPUT:= OK: Hello 5!\n                  5\n\n          INPUT:= Doe\nEXPECTED OUTPUT:= OK: Hello Doe!\n                  Doe\n         OUTPUT:= OK: Hello 4!\n                  4\n</code></pre>\n"}]