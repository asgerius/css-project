[{"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 9461500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MQqYy.jpg?s=128&g=1", "display_name": "Fran&#231;ois de Mareschal", "link": "https://stackoverflow.com/users/9461500/fran%c3%a7ois-de-mareschal"}, "edited": false, "score": 0, "creation_date": 1568245872, "post_id": 57898019, "comment_id": 102216981, "body": "You are absolutely right, <code>read_line</code> appends the input to the previous string; the debugger showed me that at the second round - let&#39;s say, <code>1</code> then <code>2</code> - <code>guess</code> contains <code>&quot;1\\n2\\n&quot;</code>. <code>guess.clear()</code> just before the input solves the problem! Thank you!"}, {"owner": {"reputation": 943, "user_id": 6423998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ELwqByL1DRk/AAAAAAAAAAI/AAAAAAAACJA/iiaY9iDLjpE/photo.jpg?sz=128", "display_name": "Dylan McNamee", "link": "https://stackoverflow.com/users/6423998/dylan-mcnamee"}, "reply_to_user": {"reputation": 55, "user_id": 9461500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MQqYy.jpg?s=128&g=1", "display_name": "Fran&#231;ois de Mareschal", "link": "https://stackoverflow.com/users/9461500/fran%c3%a7ois-de-mareschal"}, "edited": false, "score": 0, "creation_date": 1568245932, "post_id": 57898019, "comment_id": 102216994, "body": "I edited my answer to include the fix: call guess.clear() before each read_line."}], "tags": [], "owner": {"reputation": 943, "user_id": 6423998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ELwqByL1DRk/AAAAAAAAAAI/AAAAAAAACJA/iiaY9iDLjpE/photo.jpg?sz=128", "display_name": "Dylan McNamee", "link": "https://stackoverflow.com/users/6423998/dylan-mcnamee"}, "is_accepted": true, "score": 3, "last_activity_date": 1568245741, "last_edit_date": 1568245741, "creation_date": 1568245298, "answer_id": 57898019, "question_id": 57897931, "link": "https://stackoverflow.com/questions/57897931/why-do-i-need-to-declare-a-variable-at-each-iteration-of-a-loop-to-use-it/57898019#57898019", "title": "Why do I need to declare a variable at each iteration of a loop to use it?", "body": "<p>Your code as-is compiles and runs fine on my setup (same version of rust). The panic must happen in the commented-out part of your code. Some comments, though: the scoping in your loop is tricky: <code>guess</code> at the top-half of the loop is the string declared outside the loop, and is the parsed integer in the second half. </p>\n\n<p>More importantly, multiple calls to <code>read_line</code> being passed the same string appends to the string, which probably isn't your intention given the way you're parsing the string. Sprinkling in <code>println!</code>'s of your guess variables should be illuminating. Your code will probably be fixed if you add a <code>guess.clear()</code> on the string after you've parsed the number, but to do that, you'll probably want to rename the u32 <code>guess</code>.</p>\n\n<p>As an aside, you might consider using a BufReader and the <code>for line in reader.lines())</code> pattern <a href=\"https://stackoverflow.com/questions/45882329/read-large-files-line-by-line-in-rust\">described here.</a> </p>\n"}], "owner": {"reputation": 55, "user_id": 9461500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MQqYy.jpg?s=128&g=1", "display_name": "Fran&#231;ois de Mareschal", "link": "https://stackoverflow.com/users/9461500/fran%c3%a7ois-de-mareschal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 57898019, "answer_count": 1, "score": 1, "last_activity_date": 1568246204, "creation_date": 1568244344, "last_edit_date": 1568246204, "question_id": 57897931, "link": "https://stackoverflow.com/questions/57897931/why-do-i-need-to-declare-a-variable-at-each-iteration-of-a-loop-to-use-it", "title": "Why do I need to declare a variable at each iteration of a loop to use it?", "body": "<p>I am learning Rust from <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">The Book</a> and I just finished the first exercise, the <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">guessing game</a>.</p>\n\n<p>I use <code>cargo</code> to build and run my little crate.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo --version\ncargo 1.37.0 (9edd08916 2019-08-02)\n$ rustc --version\nrustc 1.37.0 (eae3437df 2019-08-13)\n</code></pre>\n\n<p>Everything run fine, including <code>release</code> mode. Nevertheless, I do not understand a the following behaviour of Rust: I have to redeclare the variable which contains the user input at each iteration of the loop.</p>\n\n<p>Since the exercise is guided step-by-step, my code is the same that the one from the book. Nevertheless, the code from the book is the following:</p>\n\n<pre><code>loop {\n    // Some code to display instructions.\n\n    // Reallocate a new string at each iteration!\n    let mut guess = String::new();\n\n    io::stdin().read_line(&amp;mut guess)\n        .expect(\"Failed to read line\");\n\n    let guess: u32 = match guess.trim().parse() {\n        Ok(num) =&gt; num,\n        Err(_) =&gt; continue,\n    };\n\n    // Some code to check if the player found the secret number.\n}\n</code></pre>\n\n<p>Noticing this systematic reallocation, I moved the string declaration outside the loop:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Allocate the string once.\nlet mut guess = String::new();\n\nloop {\n    // Some code to display instructions.\n\n    io::stdin().read_line(&amp;mut guess)\n        .expect(\"Failed to read line\");\n\n    let guess: u32 = match guess.trim().parse() {\n        Ok(num) =&gt; num,\n        Err(_) =&gt; continue,\n    };\n\n    // Some code to check if the player found the secret number.\n}\n</code></pre>\n\n<p>However, Rust did not appreciate this: at the second iteration of the loop, it panics every time.</p>\n\n<p>Why can't I reuse the same mutable variable more than once? Do I not understand something?</p>\n\n<p>EDIT: <code>read_line</code> does <strong>not</strong> clear the content of the previous input, but appends to it the following one.\nLet's say the player enters <code>1</code> then <code>2</code>, the final value of guess will be <code>\"1\\n2\\n\"</code>.\nHowever, <code>trim()</code> removes the \"blank\" characters at the beginning and the end of the string, leaving a <code>\\n</code> in the middle: <code>parse()</code> panics!</p>\n"}, {"tags": ["rust", "embedded"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568229831, "post_id": 57895504, "comment_id": 102212544, "body": "Edit the code to remove the <code>unsafe</code>, then compile it. The compiler is your friend in static languages like Rust and it will point you to what needs the <code>unsafe</code> or that there&#39;s unneeded unsafe elsewhere. My <b>guess</b> is that the <code>unsafe</code> isn&#39;t needed and you can submit a PR removing it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 3, "creation_date": 1568230847, "post_id": 57895504, "comment_id": 102212941, "body": "Auto-generated code is prone to having inconsistencies like this, particularly as it comes from a really, <i>really</i> loose definition for what the registers can and cannot do (SVD). The reason the <code>unsafe</code> is there might be because of one such feature of it."}], "answers": [{"comments": [{"owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "edited": false, "score": 0, "creation_date": 1568297819, "post_id": 57902314, "comment_id": 102237276, "body": "I think you are right. They may have enumerated the values for some registers by editing the svd file and then generated the code: This makes sense : <a href=\"https://github.com/rust-embedded/svd2rust/blob/master/src/lib.rs#L332\" rel=\"nofollow noreferrer\">github.com/rust-embedded/svd2rust/blob/master/src/lib.rs#L33&zwnj;&#8203;2</a>"}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 1, "last_activity_date": 1568275474, "creation_date": 1568275474, "answer_id": 57902314, "question_id": 57895504, "link": "https://stackoverflow.com/questions/57895504/why-do-some-register-functions-generated-by-svd2rust-use-unsafe-while-others-do/57902314#57902314", "title": "Why do some register functions generated by svd2rust use unsafe while others do not?", "body": "<p>Peeking into the <a href=\"https://github.com/rust-embedded/svd2rust/blob/master/src/generate/register.rs\" rel=\"nofollow noreferrer\">codebase</a> for <code>svd2rust</code>, I found the function <a href=\"https://github.com/rust-embedded/svd2rust/blob/master/src/generate/register.rs#L583\" rel=\"nofollow noreferrer\"><code>unsafety</code></a> which appears to determine whether or not insert the <code>unsafe</code> keyword into the generated code.</p>\n\n<p>It looks as though it is trying to determine from the SVD file whether it is safe to write any value of the given size into the given register. This makes sense - sometimes registers have certain bit combinations that should not be used or might have undefined results.</p>\n\n<p>Note that the <code>unsafe</code> keyword here is applied to the function. According to the rust book:</p>\n\n<blockquote>\n  <p>The unsafe keyword in this context indicates the function has\n  requirements we need to uphold when we call this function, because\n  Rust can\u2019t guarantee we\u2019ve met these requirements. By calling an\n  unsafe function within an unsafe block, we\u2019re saying that we\u2019ve read\n  this function\u2019s documentation and take responsibility for upholding\n  the function\u2019s contracts.</p>\n</blockquote>\n\n<p>So, the rust code itself may not be unsafe, but calling it could be depending on the supplied arguments.</p>\n\n<p>I took a look at the svd file for the <code>stm32f30x</code> and I could not see how <code>svd2rust</code> came to this conclusion, perhaps someone else can enlighten us there.</p>\n"}], "owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1568275474, "creation_date": 1568229219, "last_edit_date": 1568229763, "question_id": 57895504, "link": "https://stackoverflow.com/questions/57895504/why-do-some-register-functions-generated-by-svd2rust-use-unsafe-while-others-do", "title": "Why do some register functions generated by svd2rust use unsafe while others do not?", "body": "<p>I am inspecting the use of Rust code in embedded systems in order to understand the use of unsafe in libraries. </p>\n\n<p>Specifically, I looked at the <code>stm32f30x</code> library that is generated by <code>svd2rust</code>. When I look at the functions that are associated with the <code>afrh</code> and <code>moder</code> registers of the <code>GPIOA</code> peripheral, the setting of bit values of the <code>afrh</code> register's fields requires unsafe code while it is not needed for the <code>moder</code> register's fields.</p>\n\n<p>This is the code extracted from <a href=\"https://github.com/japaric/stm32f30x/tree/master/src/gpioa/afrh/mod.rs\" rel=\"nofollow noreferrer\">afrh_register_functions</a> and <a href=\"https://github.com/japaric/stm32f30x/tree/master/src/gpioa/moder/mod.rs\" rel=\"nofollow noreferrer\">moder_register_functions</a></p>\n\n<p><em>for afrh register</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub unsafe fn bits(self, value: u8) -&gt; &amp;'a mut W {\n    const MASK: u8 = 15;\n    const OFFSET: u8 = 28;\n    self.w.bits &amp;= !((MASK as u32) &lt;&lt; OFFSET);\n    self.w.bits |= ((value &amp; MASK) as u32) &lt;&lt; OFFSET;\n    self.w\n}\n</code></pre>\n\n<p><em>for moder register</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn bits(self, value: u8) -&gt; &amp;'a mut W {\n    const MASK: u8 = 3;\n    const OFFSET: u8 = 22;\n    self.w.bits &amp;= !((MASK as u32) &lt;&lt; OFFSET);\n    self.w.bits |= ((value &amp; MASK) as u32) &lt;&lt; OFFSET;\n    self.w\n}\n</code></pre>\n"}, {"tags": ["date", "rust", "rfc2822", "rust-chrono"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1568221789, "post_id": 57893861, "comment_id": 102209139, "body": "Show some Rust code so that others can reproduce your problem."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1568222364, "post_id": 57893861, "comment_id": 102209384, "body": "<code>Mon, 06 Aug 2018 00:00:00 UTC</code> is most definitely <b>not</b> an RFC2822-formatted timestamp. The valid symbol for UTC in RFC2822, specified <a href=\"https://tools.ietf.org/html/rfc2822\" rel=\"nofollow noreferrer\">in the doc</a> (search for <code>obs-zone</code>) is <code>UT</code>, not <code>UTC</code>"}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568222842, "post_id": 57893861, "comment_id": 102209582, "body": "@S&#233;bastienRenauld Damn ... would it be a candidate for an extension to rfc822 sanitizer ?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1568222936, "post_id": 57893861, "comment_id": 102209624, "body": "Possibly. It&#39;s a known issue with people trying to roll their own datetime generator, tbh. They see &quot;GMT&quot; and they think it&#39;ll be &quot;UTC&quot;, when the reality is that the real timezone for universal time is, well, Universal Time. There&#39;s a lot of backstory about the name"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568222958, "post_id": 57893861, "comment_id": 102209632, "body": "Anyway. Try replacing &quot;UTC&quot; with &quot;UT&quot;, try again, and let me know if it works. If it does I&#39;ll write an answer with all the trivia"}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568223196, "post_id": 57893861, "comment_id": 102209740, "body": "@S&#233;bastienRenauld And indeed, it worked ... maybe this makes this question a duplicate ..."}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "edited": false, "score": 0, "creation_date": 1568223236, "post_id": 57893861, "comment_id": 102209752, "body": "Question has been made an issue in rfc822_sanitizer (<a href=\"https://gitlab.com/alatiera/rfc822_sanitizer/issues/1\" rel=\"nofollow noreferrer\">gitlab.com/alatiera/rfc822_sanitizer/issues/1</a>)"}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1568223642, "creation_date": 1568223642, "answer_id": 57894277, "question_id": 57893861, "link": "https://stackoverflow.com/questions/57893861/why-is-my-rfc-2822-date-not-parsed-by-chrono/57894277#57894277", "title": "Why is my RFC 2822 date not parsed by chrono?", "body": "<p>The <code>RFC2822</code> date/time format is very well codified in the RFC as the following format:</p>\n\n<pre><code>date-time       =       [ day-of-week \",\" ] date FWS time [CFWS]\nday-of-week     =       ([FWS] day-name) / obs-day-of-week\nday-name        =       \"Mon\" / \"Tue\" / \"Wed\" / \"Thu\" /\n                        \"Fri\" / \"Sat\" / \"Sun\"\ndate            =       day month year\nyear            =       4*DIGIT / obs-year\nmonth           =       (FWS month-name FWS) / obs-month\nmonth-name      =       \"Jan\" / \"Feb\" / \"Mar\" / \"Apr\" /\n                        \"May\" / \"Jun\" / \"Jul\" / \"Aug\" /\n                        \"Sep\" / \"Oct\" / \"Nov\" / \"Dec\"\nday             =       ([FWS] 1*2DIGIT) / obs-day\ntime            =       time-of-day FWS zone\ntime-of-day     =       hour \":\" minute [ \":\" second ]\nhour            =       2DIGIT / obs-hour\nminute          =       2DIGIT / obs-minute\nsecond          =       2DIGIT / obs-second\nzone            =       (( \"+\" / \"-\" ) 4DIGIT) / obs-zone\n</code></pre>\n\n<p>Where <code>obs-zone</code> is defined as follows:</p>\n\n<pre><code>obs-zone        =       \"UT\" / \"GMT\" /          ; Universal Time\n                                                ; North American UT\n                                                ; offsets\n                        \"EST\" / \"EDT\" /         ; Eastern:  - 5/ - 4\n                        \"CST\" / \"CDT\" /         ; Central:  - 6/ - 5\n                        \"MST\" / \"MDT\" /         ; Mountain: - 7/ - 6\n                        \"PST\" / \"PDT\" /         ; Pacific:  - 8/ - 7\n                        %d65-73 /               ; Military zones - \"A\"\n                        %d75-90 /               ; through \"I\" and \"K\"\n                        %d97-105 /              ; through \"Z\", both\n                        %d107-122               ; upper and lower case\n</code></pre>\n\n<p>Something a lot of people get wrong when rolling their own timestamp generation library is this particular point - how to properly label an <code>RFC2822</code> TZ offset. The reason <code>UT</code> is as it is is because <code>UTC</code> and <code>UT</code> are not exactly the same (one has additional seconds, the other has... four variants! And the RFC does not define which one is used; they're all subtly different).</p>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 57894277, "answer_count": 1, "score": 1, "last_activity_date": 1568223642, "creation_date": 1568221666, "last_edit_date": 1568222668, "question_id": 57893861, "link": "https://stackoverflow.com/questions/57893861/why-is-my-rfc-2822-date-not-parsed-by-chrono", "title": "Why is my RFC 2822 date not parsed by chrono?", "body": "<p>I'm writing some code to parse RSS feeds but I have trouble with the <a href=\"https://abstrusegoose.com/feed.xml\" rel=\"nofollow noreferrer\">Abstruse Goose RSS feed</a>.\nIf you look in that feed, dates are encoded as <code>Mon, 06 Aug 2018 00:00:00 UTC</code>. To me, it looks like RFC 2822. </p>\n\n<p>I tried to parse it using chrono's <code>DateTime::parse_from_rfc2822</code>, but I get <code>ParseError(NotEnough)</code>.</p>\n\n<pre><code>let pub_date = entry.pub_date().unwrap().to_owned();\nreturn rfc822_sanitizer::parse_from_rfc2822_with_fallback(&amp;pub_date)\n    .unwrap_or_else(|e| {\n        panic!(\n            \"pub_date for item {:?} (value is {:?}) can't be parsed due to error {:?}\",\n            &amp;entry, pub_date, e\n        )\n    })\n    .naive_utc();\n</code></pre>\n\n<p>Is there something I'm doing wrong? Do I have to hack it some way?</p>\n\n<p>I use <a href=\"https://gitlab.com/alatiera/rfc822_sanitizer\" rel=\"nofollow noreferrer\">rfc822_sanitizer</a> which does a good job at fixing bad writing errors (most of the time). I don't think it impacts the parsing ... but who knows?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568221964, "post_id": 57893814, "comment_id": 102209207, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/28005134/155423\">How do I implement the Add trait for a reference to a struct?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57893814/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568222144, "post_id": 57893814, "comment_id": 102209288, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6135557efef81ce47ab2cca60f9133c0\" rel=\"nofollow noreferrer\">The duplicate applied to your situation</a>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568222146, "post_id": 57893814, "comment_id": 102209289, "body": "It is particularly worth noting that, if something implements trait <code>T</code>, it does not follow automatically that trait <code>T</code> is also implemented for the reference version of the trait. Only in certain cases is that true. The duplicate suggestion by @Shepmaster covers the rest"}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568223425, "post_id": 57893814, "comment_id": 102209834, "body": "@Shepmaster Thanks for the fix on the playground.  Though this situation is similar to your link, it&#39;s slightly different due to the higher rank trait bound on <code>Real</code>, which was also throwing me off.  Anyway, if you want to post that code as an answer, I&#39;ll accept it.  If everyone truly thinks this is just a duplicate of multiple questions, we can close things out."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568223631, "post_id": 57893814, "comment_id": 102209925, "body": "@wyer33 it&#39;s a combination of the question you already found (HRTB for the requirements on <code>Real</code>) and implementing the trait for a reference (the Q&amp;A I added in a comment). Since SO allows for a question to be answered by multiple duplicates, that seems like a reasonable solution to me, but I&#39;m always open to well-reasoned discussion to change my mind."}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "edited": false, "score": 0, "creation_date": 1568224165, "post_id": 57893814, "comment_id": 102210126, "body": "We can leave it as a duplicate.  I made one final edit with the working code in case anyone runs across the same difficulty."}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1568222214, "answer_count": 0, "score": 0, "last_activity_date": 1568224118, "creation_date": 1568221475, "last_edit_date": 1568224118, "question_id": 57893814, "link": "https://stackoverflow.com/questions/57893814/how-do-i-overload-an-operator-using-higher-ranked-trait-bounds", "closed_reason": "Duplicate", "title": "How do I overload an operator using higher ranked trait bounds?", "body": "<p>Though this has been discussed before <a href=\"https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type\">here</a> and <a href=\"https://stackoverflow.com/questions/29184358/how-do-i-require-a-generic-type-implement-an-operation-like-add-sub-mul-or-di\">here</a>, I can't quite make a simple example work.  In the code</p>\n\n<pre><code>// Create some random type that we want to represent as a Real\nstruct Foo&lt;Real&gt; {\n    x: Real,\n    y: Real,\n}\n\n// Add the algebra for Foo\nimpl&lt;Real&gt; std::ops::Add for Foo&lt;Real&gt;\nwhere\n    Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n{\n    type Output = Self;\n    fn add(self, other: Self) -&gt; Self::Output {\n        Foo {\n            x: self.x + other.x,\n            y: self.y + other.y,\n        }\n    }\n}\n\nimpl&lt;Real&gt; std::ops::Mul for Foo&lt;Real&gt;\nwhere\n    Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n{\n    type Output = Self;\n    fn mul(self, other: Self) -&gt; Self::Output {\n        Foo {\n            x: self.x * other.x,\n            y: self.y * other.y,\n        }\n    }\n}\n\n// Compute a function on a slice of Reals\nfn foo&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\nwhere\n    for&lt;'a&gt; &amp;'a Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n{\n    &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n}\n\n// Run foo on two different types\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _x = foo::&lt;f64&gt;(&amp;x);\n    let y: Vec&lt;Foo&lt;f64&gt;&gt; = x.into_iter().map(|z| Foo { x: z, y: z + 1.0 }).collect();\n    let _y = foo::&lt;Foo&lt;f64&gt;&gt;(&amp;y);\n}\n</code></pre>\n\n<p>We get the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: cannot add `&amp;'a Foo&lt;f64&gt;` to `&amp;'a Foo&lt;f64&gt;`\n  --&gt; src/main.rs:47:14\n   |\n47 |     let _y = foo::&lt;Foo&lt;f64&gt;&gt;(&amp;y);\n   |              ^^^^^^^^^^^^^^^ no implementation for `&amp;'a Foo&lt;f64&gt; + &amp;'a Foo&lt;f64&gt;`\n   |\n   = help: the trait `std::ops::Add` is not implemented for `&amp;'a Foo&lt;f64&gt;`\nnote: required by `foo`\n  --&gt; src/main.rs:35:1\n   |\n35 | / fn foo&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\n36 | | where\n37 | |     for&lt;'a&gt; &amp;'a Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n38 | | {\n39 | |     &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n40 | | }\n   | |_^\n\nerror[E0277]: cannot multiply `&amp;'a Foo&lt;f64&gt;` to `&amp;'a Foo&lt;f64&gt;`\n  --&gt; src/main.rs:47:14\n   |\n47 |     let _y = foo::&lt;Foo&lt;f64&gt;&gt;(&amp;y);\n   |              ^^^^^^^^^^^^^^^ no implementation for `&amp;'a Foo&lt;f64&gt; * &amp;'a Foo&lt;f64&gt;`\n   |\n   = help: the trait `std::ops::Mul` is not implemented for `&amp;'a Foo&lt;f64&gt;`\nnote: required by `foo`\n  --&gt; src/main.rs:35:1\n   |\n35 | / fn foo&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\n36 | | where\n37 | |     for&lt;'a&gt; &amp;'a Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n38 | | {\n39 | |     &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n40 | | }\n   | |_^\n</code></pre>\n\n<p>This seems to imply that the definitions of <code>Add</code> and <code>Mul</code> are incorrect.  Is there an easy way to fix the definitions?  In case it makes a difference, it's my desire to have <code>Add</code> and <code>Mul</code> not take ownership of their arguments.  Rather, I'd like to have each operator allocate new memory and then give ownership of that variable to the calling function.</p>\n\n<hr>\n\n<h2>Edit 1</h2>\n\n<p>As pointed out, this is a duplicate of the following two questions combined</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/28005134/how-do-i-implement-the-add-trait-for-a-reference-to-a-struct\">How do I implement the Add trait for a reference to a struct?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type\">How to write a trait bound for adding two references of a generic type?</a></p></li>\n</ul>\n\n<p>For posterity's sake, here's a working code from @Shepmaster:</p>\n\n<pre><code>use std::ops::{Add, Mul};\n\n// Create some random type that we want to represent as a Real\nstruct Foo&lt;Real&gt; {\n    x: Real,\n    y: Real,\n}\n\n// Add the algebra for Foo\nimpl&lt;Real&gt; Add for &amp;'_ Foo&lt;Real&gt;\nwhere\n    for&lt;'a&gt; &amp;'a Real: Add&lt;Output = Real&gt; + Mul&lt;Output = Real&gt;,\n{\n    type Output = Foo&lt;Real&gt;;\n\n    fn add(self, other: Self) -&gt; Self::Output {\n        Foo {\n            x: &amp;self.x + &amp;other.x,\n            y: &amp;self.y + &amp;other.y,\n        }\n    }\n}\n\nimpl&lt;Real&gt; Mul for &amp;'_ Foo&lt;Real&gt;\nwhere\n    for&lt;'a&gt; &amp;'a Real: Add&lt;Output = Real&gt; + Mul&lt;Output = Real&gt;,\n{\n    type Output = Foo&lt;Real&gt;;\n\n    fn mul(self, other: Self) -&gt; Self::Output {\n        Foo {\n            x: &amp;self.x * &amp;other.x,\n            y: &amp;self.y * &amp;other.y,\n        }\n    }\n}\n\n// Compute a function on a slice of Reals\nfn foo&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\nwhere\n    for&lt;'a&gt; &amp;'a Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n{\n    &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n}\n\n// Run foo on two different types\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _x = foo::&lt;f64&gt;(&amp;x);\n    let y: Vec&lt;Foo&lt;f64&gt;&gt; = x.into_iter().map(|z| Foo { x: z, y: z + 1.0 }).collect();\n    let _y = foo::&lt;Foo&lt;f64&gt;&gt;(&amp;y);\n}\n</code></pre>\n"}, {"tags": ["string", "rust", "character", "ascii"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568221735, "post_id": 57893756, "comment_id": 102209119, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/54583399/155423\">How do I subtract one character from another in Rust?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57893756/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568222362, "post_id": 57893756, "comment_id": 102209380, "body": "The duplicate applied to your case: <code>let my_new_char = (&#39;a&#39; as u8 + 1) as char;</code> or <code>let my_new_char = (b&#39;a&#39; + 1) as char;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568223195, "post_id": 57893756, "comment_id": 102209739, "body": "And the usual warning: you <i>really</i> should not be incrementing / decrementing text except in very small usecases. Many cases where it seems useful, you should just have bytes (<code>u8</code>) instead of characters (<code>char</code>) and slices / Vecs of bytes instead of strings."}, {"owner": {"reputation": 47, "user_id": 8862937, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/T3fop.png?s=128&g=1", "display_name": "Slothie", "link": "https://stackoverflow.com/users/8862937/slothie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568226019, "post_id": 57893756, "comment_id": 102210840, "body": "Thank you for the help!  Apologies for the duplicate; I didn&#39;t run across that answer in my searches."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568225033, "post_id": 57894096, "comment_id": 102210455, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=888d40190a245d177ee88a115155f4fc\" rel=\"nofollow noreferrer\"><code>f(&#39;\u043e&#39;, 10) = &#39;H&#39;</code></a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568225300, "post_id": 57894096, "comment_id": 102210554, "body": "Even better, <code>f(&#39;\u014f&#39;, 0) = &#39;O&#39;</code>."}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568226021, "post_id": 57894096, "comment_id": 102210843, "body": "@trentcl Of course, we can also put a contract on the input. :)"}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568290503, "post_id": 57894096, "comment_id": 102232907, "body": "May the downvoter please explain his/her reasoning? Thank you!"}], "tags": [], "owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "is_accepted": false, "score": 0, "last_activity_date": 1568226036, "last_edit_date": 1568226036, "creation_date": 1568222798, "answer_id": 57894096, "question_id": 57893756, "link": "https://stackoverflow.com/questions/57893756/is-there-a-way-to-add-an-offset-to-a-character-in-rust/57894096#57894096", "title": "Is there a way to add an offset to a character in Rust?", "body": "<p>You can use something like this:</p>\n\n<pre><code>fn f(c: char, n: i8) -&gt; char {\n    debug_assert!(c.is_ascii_alphanumeric());\n    let ret = ((c as i8) + n) as u8 as char;\n    debug_assert!(ret.is_ascii_alphanumeric());\n    ret\n}\n</code></pre>\n\n<p>This allows both positive and negative offsets, plus makes sure both the input and output are in the <code>[a-zA-Z0-9]</code> range (which is <em>usually</em> what you want in this context).</p>\n"}], "owner": {"reputation": 47, "user_id": 8862937, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/T3fop.png?s=128&g=1", "display_name": "Slothie", "link": "https://stackoverflow.com/users/8862937/slothie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 201, "favorite_count": 0, "closed_date": 1568226495, "answer_count": 1, "score": 2, "last_activity_date": 1568226036, "creation_date": 1568221182, "last_edit_date": 1568221780, "question_id": 57893756, "link": "https://stackoverflow.com/questions/57893756/is-there-a-way-to-add-an-offset-to-a-character-in-rust", "closed_reason": "Duplicate", "title": "Is there a way to add an offset to a character in Rust?", "body": "<p>I come from a C/C++ background where ASCII bytes are easy to offset:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>char my_new_char = 'a' + some_offset;\n</code></pre>\n\n<p>It's my understanding that Rust uses UTF-8 for its <code>char</code>/<code>&amp;str</code>/<code>String</code>, so the offset is not possible for all ranges.  However, offsetting in this way should still be feasible for characters in the ASCII range, correct?  UTF-8 mirrors ASCII for the overlapping range.</p>\n\n<p>I was looking at the docs/searching around but I could not find a way to offset.  Is this possible in Rust?</p>\n"}, {"tags": ["server", "rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568217661, "post_id": 57892819, "comment_id": 102207245, "body": "Please paste the exact and entire error that you&#39;re getting \u2014 that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568217689, "post_id": 57892819, "comment_id": 102207255, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/51885745/155423\">How do I conditionally return different types of futures?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57892819/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 329, "user_id": 3843929, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8dac1c944cd1651e7aabc471a4e46ac?s=128&d=identicon&r=PG", "display_name": "MrBigglesworth", "link": "https://stackoverflow.com/users/3843929/mrbigglesworth"}, "edited": false, "score": 0, "creation_date": 1584284333, "post_id": 58070229, "comment_id": 107383366, "body": "See the docs here for an updated example: <a href=\"https://docs.rs/actix-web/2.0.0/actix_web/trait.FromRequest.html\" rel=\"nofollow noreferrer\">docs.rs/actix-web/2.0.0/actix_web/trait.FromRequest.html</a>"}, {"owner": {"reputation": 2126, "user_id": 3680466, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2a8e5869d77d8943cad4baaba68ceeca?s=128&d=identicon&r=PG&f=1", "display_name": "cloudsurfin", "link": "https://stackoverflow.com/users/3680466/cloudsurfin"}, "edited": false, "score": 1, "creation_date": 1598552331, "post_id": 58070229, "comment_id": 112504065, "body": "Has anyone achieved this using middleware? The Rust Cookbook (Packt 2019) has an outdated example using Eithers and the Actix page doesn&#39;t show how to break the service chain early. <a href=\"https://actix.rs/docs/middleware/\" rel=\"nofollow noreferrer\">actix.rs/docs/middleware</a>. Kinda stuck myself."}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": true, "score": 10, "last_activity_date": 1569272897, "creation_date": 1569272897, "answer_id": 58070229, "question_id": 57892819, "link": "https://stackoverflow.com/questions/57892819/how-to-return-an-early-response-from-an-actix-web-middleware/58070229#58070229", "title": "How to return an early response from an actix-web middleware?", "body": "<p>You can create your own type, <code>Authorized</code>, implement <a href=\"https://docs.rs/actix-web/1.0.7/actix_web/trait.FromRequest.html\" rel=\"noreferrer\"><code>FromRequest</code></a> for it and define <code>Authorized</code> as an argument in the handlers that should be checked for authorization.</p>\n\n<p>Simplified example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::dev::Payload;\nuse actix_web::error::ErrorUnauthorized;\nuse actix_web::{web, App, Error, FromRequest, HttpRequest, HttpResponse, HttpServer};\n\nfn main() {\n    HttpServer::new(move || App::new().route(\"/\", web::to(index)))\n        .bind(\"127.0.0.1:3000\")\n        .expect(\"Can not bind to '127.0.0.1:3000'\")\n        .run()\n        .unwrap();\n}\n\nfn index(_: Authorized) -&gt; HttpResponse {\n    HttpResponse::Ok().body(\"authorized\")\n}\n\nstruct Authorized;\n\nimpl FromRequest for Authorized {\n    type Error = Error;\n    type Future = Result&lt;Self, Error&gt;;\n    type Config = ();\n\n    fn from_request(req: &amp;HttpRequest, _: &amp;mut Payload) -&gt; Self::Future {\n        if is_authorized(req) {\n            Ok(Authorized)\n        } else {\n            Err(ErrorUnauthorized(\"not authorized\"))?\n        }\n    }\n}\n\nfn is_authorized(req: &amp;HttpRequest) -&gt; bool {\n    if let Some(value) = req.headers().get(\"authorized\") {\n        // actual implementation that checks header here\n        dbg!(value);\n        true\n    } else {\n        false\n    }\n}\n</code></pre>\n\n<p>This code yields:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ curl localhost:3000\nnot authorized\u23ce\n$ curl localhost:3000 -H 'Authorized: i am root'\nauthorized\u23ce\n</code></pre>\n\n<p>You could probably do something in the same lines with middlewares, but I have not got my head around the middleware abstraction. Also, you might want to provide useful information to the handlers, like username:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Authorized {\n    username: String\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 14597028, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1538ec1d7cd7d5660461a9431b38f6dd?s=128&d=identicon&r=PG&f=1", "display_name": "joshbenaron", "link": "https://stackoverflow.com/users/14597028/joshbenaron"}, "is_accepted": false, "score": 3, "last_activity_date": 1604772485, "creation_date": 1604772485, "answer_id": 64730855, "question_id": 57892819, "link": "https://stackoverflow.com/questions/57892819/how-to-return-an-early-response-from-an-actix-web-middleware/64730855#64730855", "title": "How to return an early response from an actix-web middleware?", "body": "<p>I'm kind of late to the party but the best way to do this from within Actix middleware is using <code>futures::future::Either</code>. You can see how it's used here: <a href=\"https://github.com/actix/examples/blob/master/middleware/src/redirect.rs\" rel=\"nofollow noreferrer\">https://github.com/actix/examples/blob/master/middleware/src/redirect.rs</a>.</p>\n<p>The left hand side of <code>Either</code> will be a Future which passes the response to the next stage in the chain. The right hand side will be a response (usually <code>HttpResponse</code>) if you wish to return the response early.</p>\n"}], "owner": {"reputation": 93, "user_id": 8291090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1451b8759e210583a1f96f976df4a9da?s=128&d=identicon&r=PG&f=1", "display_name": "ThinkPat", "link": "https://stackoverflow.com/users/8291090/thinkpat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2685, "favorite_count": 2, "accepted_answer_id": 58070229, "answer_count": 2, "score": 8, "last_activity_date": 1604772485, "creation_date": 1568217301, "last_edit_date": 1568833436, "question_id": 57892819, "link": "https://stackoverflow.com/questions/57892819/how-to-return-an-early-response-from-an-actix-web-middleware", "title": "How to return an early response from an actix-web middleware?", "body": "<p>My clients authorize through a token in the <code>Authorization</code> header which needs to be checked for each request. If this header is missing or I cannot find a corresponding user, I want to return the HTTP code <code>Unauthorized</code>, else I want to handle the request normally.</p>\n\n<p>Currently I have a lot of duplicate code because I am checking for this header in every request handler.\nThe <a href=\"https://actix.rs/docs/middleware/\" rel=\"noreferrer\">actix docs</a> suggest in the very first paragraph that it is possible to <code>halt request processing to return a response early</code>.\nHow can this be achieved?</p>\n\n<p>Since I have not found an example that implements this behavior I tried to come up with my own middleware function, but it won't compile.</p>\n\n<p>I have already boxed the return values in order to overcome the problem of returning two different types (<code>ServiceResponse</code> and <code>Map</code>), so the problem asked in <a href=\"https://stackoverflow.com/questions/51885745/how-do-i-conditionally-return-different-types-of-futures\">How do I conditionally return different types of futures?</a> is not the issue. It is more that I do not know which types with which trait implementations are exactly required as return value for this <code>wrap_fn</code> function. The ones I have right now do not work.</p>\n\n<pre><code>App::new()\n    .wrap(Cors::new().allowed_origin(\"http://localhost:8080\"))\n    .register_data(state.clone())\n    .service(\n        web::scope(\"/routing\")\n            .wrap_fn(|req, srv| {\n                let unauth: Box&lt;dyn IntoFuture&lt;Item = ServiceResponse&gt;&gt; = Box::new(ServiceResponse::new(req.into_parts().0, HttpResponse::Unauthorized().finish()));\n                let auth_header = req.headers().get(\"Authorization\");\n                match auth_header {\n                    None =&gt; unauth,\n                    Some(value) =&gt; {\n                        let token = value.to_str().unwrap();\n                        let mut users = state.users.lock().unwrap();\n                        let user_state = users.iter_mut().find(|x| x.auth.token == token);\n                        match user_state {\n                            None =&gt; unauth,\n                            Some(user) =&gt; {\n                                Box::new(srv.call(req).map(|res| res))\n                            }\n                        }\n                    }\n                }\n            })\n            .route(\"/closest\", web::get().to(routing::find_closest))\n            .route(\"/fsp\", web::post().to(routing::fsp))\n            .route(\"/preference\", web::get().to(routing::get_preference))\n            .route(\"/preference\", web::post().to(routing::set_preference))\n            .route(\"/find_preference\", web::post().to(routing::find_preference))\n            .route(\"/reset\", web::post().to(routing::reset_data)),\n    )\n    .bind(\"0.0.0.0:8000\")\n    .expect(\"Can not bind to port 8000\")\n    .run()\n    .expect(\"Could not start sever\");\n</code></pre>\n\n<p>There are two errors that I am getting upon compiling.</p>\n\n<p>1.</p>\n\n<pre><code>error[E0191]: the value of the associated types `Future` (from the trait `futures::future::IntoFuture`), `Error` (from the trait `futures::future::IntoFuture`) must be specified\n  --&gt; src/server/mod.rs:36:41\n   |\n36 |                         let unauth: Box&lt;dyn IntoFuture&lt;Item = ServiceResponse&gt;&gt; =\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |                                         |\n   |                                         associated type `Future` must be specified\n   |                                         associated type `Error` must be specified\n\n</code></pre>\n\n<p>2.</p>\n\n<pre><code>error[E0277]: the trait bound `dyn futures::future::IntoFuture&lt;Item = actix_web::service::ServiceResponse&gt;: futures::future::Future` is not satisfied\n  --&gt; src/server/mod.rs:35:22\n   |\n35 |                     .wrap_fn(|req, srv| {\n   |                      ^^^^^^^ the trait `futures::future::Future` is not implemented for `dyn futures::future::IntoFuture&lt;Item = actix_web::service::ServiceResponse&gt;`\n   |\n   = note: required because of the requirements on the impl of `futures::future::Future` for `std::boxed::Box&lt;dyn futures::future::IntoFuture&lt;Item = actix_web::service::ServiceResponse&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 1, "creation_date": 1568202533, "post_id": 57888454, "comment_id": 102198640, "body": "Your struct has to implement the <code>PartialEq</code> Trait, and it will work"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568210034, "post_id": 57888454, "comment_id": 102202960, "body": "Why cannot you use those functions?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568210570, "post_id": 57888454, "comment_id": 102203262, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21d28580f231a710ed185d6e526bebd9\" rel=\"nofollow noreferrer\">The duplicates applied to your question</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568211711, "post_id": 57888454, "comment_id": 102203879, "body": "Since you have a floating point number, you might be interested in <a href=\"https://stackoverflow.com/q/37127209/155423\">Using max_by_key on a vector of floats</a>; <a href=\"https://stackoverflow.com/q/28247990/155423\">How to do a binary search on a Vec of floats?</a>; <a href=\"https://stackoverflow.com/q/39638363/155423\">How can I use a HashMap with f64 as key in Rust?</a>."}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568212125, "post_id": 57888454, "comment_id": 102204143, "body": "@Shepmaster that doesn&#39;t work"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1568212151, "post_id": 57888454, "comment_id": 102204160, "body": "@tajara show me how it doesn&#39;t work"}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568215694, "post_id": 57888454, "comment_id": 102206179, "body": "@Shepmaster <code>^^^^^^^^^^ no implementation for </code>MyStruct == MyStruct``. That is, <code>PartialOrd</code> isn&#39;t implemented"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568216182, "post_id": 57888454, "comment_id": 102206459, "body": "@tajara that doesn&#39;t explain anything, unfortunately. The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21d28580f231a710ed185d6e526bebd9\" rel=\"nofollow noreferrer\">code I provided you</a> calls <code>dedup</code> on a vector of your structs, as you&#39;ve asked. It compiles successfully. <code>==</code> uses <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a>, not <code>PartialOrd</code>, so I don&#39;t follow your point. Perhaps you can use <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the Rust Playground</a> to <b>show me</b> how you have modified the working code to make it non-working?"}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568216842, "post_id": 57888454, "comment_id": 102206825, "body": "@Shepmaster from my project: <a href=\"https://i.postimg.cc/3NL1drsq/Captura-de-pantalla-2019-09-11-a-la-s-19-46-43.png\" rel=\"nofollow noreferrer\">i.postimg.cc/3NL1drsq/&hellip;</a>"}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568217149, "post_id": 57888454, "comment_id": 102206967, "body": "@Shepmaster <a href=\"https://i.postimg.cc/DwbVkRsh/Captura-de-pantalla-2019-09-11-a-la-s-19-51-41.png\" rel=\"nofollow noreferrer\">i.postimg.cc/DwbVkRsh/&hellip;</a>"}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "edited": false, "score": 0, "creation_date": 1568218306, "post_id": 57888454, "comment_id": 102207567, "body": "that is, why do you call &quot;dedup&quot; without calling &quot;sort&quot; first?"}, {"owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568264847, "post_id": 57888454, "comment_id": 102220690, "body": "@Shepmaster your cooooode won&#39;t wooooork"}], "answers": [{"comments": [{"owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "edited": false, "score": 0, "creation_date": 1611878304, "post_id": 57889826, "comment_id": 116599439, "body": "Nice <code>clear_duplicates</code> function! As an optimization, the <code>already_seen</code> vector could be constructed with <code>Vec::with_capacity(self.len())</code> to avoid resizing the vector while while processing. For vectors with a lot of duplicates this would increase memory overhead, but if there are few duplicates it should decrease CPU instructions from vector resizing."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1568207877, "last_edit_date": 1568207877, "creation_date": 1568206895, "answer_id": 57889826, "question_id": 57888454, "link": "https://stackoverflow.com/questions/57888454/how-to-remove-duplicates-from-a-vector-of-structures/57889826#57889826", "title": "How to remove duplicates from a vector of structures?", "body": "<p>the <code>dedup</code> family of functions will not help you without a ton of extra work, as they only clear <em>neighboring</em> duplicates. the <code>sort</code> family of functions requires <code>Ord</code> to function, which requires <code>Eq</code> as well. As such, you have three options open to you:</p>\n\n<ul>\n<li><p>You can implement <a href=\"https://doc.rust-lang.org/std/cmp/trait.Eq.html\" rel=\"nofollow noreferrer\"><code>Eq</code></a> (it can be used in <code>#[derive]</code>) and <a href=\"https://doc.rust-lang.org/std/hash/trait.Hash.html\" rel=\"nofollow noreferrer\"><code>Hash</code></a> (which can also be <code>#[derive]</code>d if all fields implement <code>Hash</code>) on your <code>struct</code> and then convert your <code>Vec</code> into a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#impl-FromIterator%3CT%3E\" rel=\"nofollow noreferrer\"><code>HashSet</code></a>. This allows you to get a very performant set primitive out of the box</p></li>\n<li><p>You can implement a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b369fc73f2978098d7f178624273490a\" rel=\"nofollow noreferrer\">naive filter (playground link)</a> with a memory and processing complexity of <code>O(N)</code>, which keeps an internal state of all the visited nodes and simply filters based on it. The only requirement for this method is <code>PartialEq</code>, which is easy to <code>#[derive]</code>. This can be optimized further. The current code is below, implemented as an extension trait to allow you to reuse it wherever you like:</p>\n\n<pre><code>trait Dedup&lt;T: PartialEq + Clone&gt; {\n    fn clear_duplicates(&amp;mut self);\n}\n\nimpl&lt;T: PartialEq + Clone&gt; Dedup&lt;T&gt; for Vec&lt;T&gt; {\n    fn clear_duplicates(&amp;mut self) {\n        let mut already_seen = vec![];\n        self.retain(|item| match already_seen.contains(item) {\n            true =&gt; false,\n            _ =&gt; {\n                already_seen.push(item.clone());\n                true\n            }\n        })\n    }\n}\n</code></pre></li>\n</ul>\n\n<p>There are other implementations/ways of doing it, but those are some of the quickest.</p>\n"}], "owner": {"reputation": 23, "user_id": 12030697, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55523cc1bc2e2919e100b17cf6141b79?s=128&d=identicon&r=PG&f=1", "display_name": "tajara", "link": "https://stackoverflow.com/users/12030697/tajara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 760, "favorite_count": 0, "closed_date": 1568210379, "answer_count": 1, "score": -3, "last_activity_date": 1568210552, "creation_date": 1568202354, "last_edit_date": 1568208632, "question_id": 57888454, "link": "https://stackoverflow.com/questions/57888454/how-to-remove-duplicates-from-a-vector-of-structures", "closed_reason": "Duplicate", "title": "How to remove duplicates from a vector of structures?", "body": "<p>I have a struct and a vector of them:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum MySize {\n    Big,\n    Small,\n    Medium,\n    Huge,\n}\n\nstruct MyStruct {\n    my_size: MySize,\n    field1: String,\n    field2: u64,\n    field3: f64,\n}\n\nlet mut my_structs: Vec&lt;MyStruct&gt; = get_data_with_duplicates();\n//how to remove duplicates from 'my_structs'?\n</code></pre>\n\n<p>I'm aware of <code>sort_by</code> and <code>dedup_by</code>, but I only know how to use them with the primitive types. In my case these methods can't be applied as are, right? </p>\n\n<p>How to remove duplicates then?</p>\n"}, {"tags": ["json", "rust", "serde", "json-ref"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568207765, "post_id": 57884060, "comment_id": 102201638, "body": "That is a <i>really</i> loaded question. I also do not think it is a good place to do that on the <code>Deserialize</code> step - it is probably better to do the fetching one step before, since by that point you&#39;ll have JSON objects (of whatever library you use) instead of a single <code>{ &quot;$ref&quot;: &quot;... }</code> key, which makes <code>Deserialize</code> work out of the box."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568208588, "post_id": 57884060, "comment_id": 102202115, "body": "You don&#39;t really know what references you want to load before the deserialization. In some schemas, not every single <code>{&quot;$ref&quot;}</code> would need to be resolved. Parsing with serde_json might be necessary to locate the exact references that need to be resolved."}], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1568186525, "creation_date": 1568186525, "question_id": 57884060, "link": "https://stackoverflow.com/questions/57884060/resolving-ref-in-serde-json-serde-yaml", "title": "Resolving &quot;$ref&quot; in serde_json/serde_yaml", "body": "<p>What is the best way to recursively resolve all <a href=\"https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03\" rel=\"nofollow noreferrer\">JSON <code>$ref</code></a> in JSON documents?</p>\n\n<p>A direct approach is to create a <code>Deserialize</code> implementation that accepts either a <code>{\"$ref\"}</code> object or a desired value, say an enum like this:</p>\n\n<pre><code>enum JRef&lt;T&gt; {\n    Value(T),\n    Ref(URI),\n}\n\nimpl&lt;'de, T&gt; Deserialize&lt;'de&gt; for JRef&lt;T&gt; { ... }\n</code></pre>\n\n<p>But this would require me to wrap all my types in <code>JRef&lt;T&gt;</code>, so my <code>derive(Deserialize)</code> schema struct is filled with the boilerplate:</p>\n\n<pre><code>#[derive(Deserialize)]\nstruct Foo {\n    a: JRef&lt;Bar&gt;,\n    b: JRef&lt;(JRef&lt;Qux&gt;, JRef&lt;Corge&gt;)&gt;,\n    ...\n}\n</code></pre>\n\n<p>In addition, the resolution of the reference is also boilerplate.</p>\n\n<p>I understand that the direct deserialization of a type should not depend on some external state, so it makes sense to first deserialize into a <code>JRef</code> and then resolve them later. But to prevent writing boilerplate code, the resolution performed later could be performed using a custom proc-macro that derives a JRef-free-type of the original type, which implement a trait that accepts a foreign function and resolves URIs using the foreign function.</p>\n\n<p>So far, I have dug deep into the dependency ecosystem in order to just resolve a single <code>$ref</code>. Do I really need to do all these, or is there a simpler solution I have missed?</p>\n"}, {"tags": ["rust", "documentation"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568185203, "post_id": 57882249, "comment_id": 102189951, "body": "Why don&#39;t you write those functions as <code>Response</code>&#39;s methods? Like <code>Response::new_empty</code>, <code>Response::new_permanent_redirect</code>, <code>Response::new</code>, etc."}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568186316, "post_id": 57882249, "comment_id": 102190444, "body": "@FrenchBoiethios I suppose that is a solution, though I&#39;m more looking for some solution that doesn&#39;t involve refactoring the code that much, for example when I want to generate some docs for other crates."}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1568176855, "creation_date": 1568176855, "question_id": 57882249, "link": "https://stackoverflow.com/questions/57882249/generate-module-function-documentation-like-struct-methods", "title": "Generate module function documentation like struct methods", "body": "<p>How can I generate documentation for module functions so that all the contents of the documentation is shown on the same page like struct methods?</p>\n\n<p>This is probably better described through some screenshots.</p>\n\n<p>Here are some module functions, notice how only the top line of the function documentation is shown on the same page, to see the rest you would have to click each function.\n<a href=\"https://i.stack.imgur.com/T2TvH.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/T2TvH.png\" alt=\"Module functions documentation page\"></a></p>\n\n<hr>\n\n<p>However, the methods inside a struct has all of their documentation on the same page.\n<a href=\"https://i.stack.imgur.com/3HpHx.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/3HpHx.png\" alt=\"Struct methods documentation page\"></a></p>\n\n<p>Question is how can I have functions generate documentation the same way as methods (i.e. all the documentation on one page).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568210409, "post_id": 57881882, "comment_id": 102203179, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type\">How to write a trait bound for adding two references of a generic type?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 6, "last_activity_date": 1568180398, "last_edit_date": 1568180398, "creation_date": 1568175647, "answer_id": 57882093, "question_id": 57881882, "link": "https://stackoverflow.com/questions/57881882/how-to-compute-arithmetic-operations-on-a-borrowed-vector-of-elements-that-lack/57882093#57882093", "title": "How to compute arithmetic operations on a borrowed vector of elements that lack Copy in Rust?", "body": "<p>You just have to use arcane magic call <a href=\"https://doc.rust-lang.org/stable/reference/trait-bounds.html#higher-ranked-trait-bounds\" rel=\"noreferrer\">\"Higher-ranked trait bounds\"</a>, once you learn this power you just have to use it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\nwhere\n    for&lt;'a&gt; &amp;'a Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt;,\n{\n    &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n}\n\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _y = foo::&lt;f64&gt;(&amp;x);\n}\n</code></pre>\n\n<p>As you can't see we just have to ask the <code>&amp;Read</code> implement <code>Add</code> and <code>Mul</code> but we need some sort of generic lifetime so we use <code>for&lt;'a&gt;</code> notation.</p>\n\n<p>See:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-o\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 1, "last_activity_date": 1568175967, "creation_date": 1568175967, "answer_id": 57882142, "question_id": 57881882, "link": "https://stackoverflow.com/questions/57881882/how-to-compute-arithmetic-operations-on-a-borrowed-vector-of-elements-that-lack/57882142#57882142", "title": "How to compute arithmetic operations on a borrowed vector of elements that lack Copy in Rust?", "body": "<p>If you only require <code>Real</code> to implement <code>Add</code> then you'll have to consume both <code>Real</code>s to add them. You'll need to require <code>Add</code> for <code>&amp;Real</code> if you want to add without consuming.</p>\n\n<p>Alternatively, you've added the trait bound <code>Clone</code> for <code>Real</code>, which means you can clone the <code>Real</code>s before adding them.</p>\n\n<pre><code>use std::ops::{Add, Mul};\n\n// You shouldn't ever use the type &amp;Vec&lt;T&gt; as an input,\n// since it's unnecessarily restrictive and introduces two layers of indirection\nfn foo_clone&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\nwhere\n    Real: Add&lt;Output = Real&gt; + Mul&lt;Output = Real&gt; + Clone,\n{\n    (x[0].clone() + x[1].clone()) * x[2].clone()\n}\n\n// This uses the higher-ranked trait bounds that Stargateur mentioned\n// It basically means that the implementation of `Add` for `Real`\n// can't restrict the lifetime.\nfn foo_ref_add&lt;Real&gt;(x: &amp;[Real]) -&gt; Real\nwhere\n    for &lt;'a&gt; &amp;'a Real: Add&lt;Output = Real&gt; + Mul&lt;Output = Real&gt;,\n{\n    &amp;(&amp;x[0] + &amp;x[1]) * &amp;x[2]\n}\n\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _y = foo_clone::&lt;f64&gt;(&amp;x);\n    let _z = foo_ref_add::&lt;f64&gt;(&amp;x);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3a9538410455c60bbc147f69cc6d76e7\" rel=\"nofollow noreferrer\">(playground)</a></p>\n"}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 57882093, "answer_count": 2, "score": 1, "last_activity_date": 1568180398, "creation_date": 1568173924, "last_edit_date": 1568175763, "question_id": 57881882, "link": "https://stackoverflow.com/questions/57881882/how-to-compute-arithmetic-operations-on-a-borrowed-vector-of-elements-that-lack", "title": "How to compute arithmetic operations on a borrowed vector of elements that lack Copy in Rust?", "body": "<p>What's the proper approach to compute arithmetic operations on a borrowed vector of elements that lack <code>Copy</code> in Rust?  In the following code, I'd like <code>foo</code> to borrow a vector <code>x</code> and then compute a short function.  The trick is that the elements in <code>x</code> necessarily lack the <code>Copy</code> trait.  Anyway, the code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;Real&gt;(x: &amp;Vec&lt;Real&gt;) -&gt; Real\nwhere\n    Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt; + Clone,\n{\n    (x[0] + x[1]) * x[2]\n}\n\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _y = foo::&lt;f64&gt;(&amp;x);\n}\n</code></pre>\n\n<p>Fails to compile with the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of index of `std::vec::Vec&lt;Real&gt;`\n --&gt; src/main.rs:5:6\n  |\n5 |     (x[0] + x[1]) * x[2]\n  |      ^^^^ move occurs because value has type `Real`, which does not implement the `Copy` trait\n\nerror[E0507]: cannot move out of index of `std::vec::Vec&lt;Real&gt;`\n --&gt; src/main.rs:5:13\n  |\n5 |     (x[0] + x[1]) * x[2]\n  |             ^^^^ move occurs because value has type `Real`, which does not implement the `Copy` trait\n\nerror[E0507]: cannot move out of index of `std::vec::Vec&lt;Real&gt;`\n --&gt; src/main.rs:5:21\n  |\n5 |     (x[0] + x[1]) * x[2]\n  |                     ^^^^ move occurs because value has type `Real`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>This makes sense.  The indexing attempts to move out borrowed content.  That said, if we try to borrow on the indices:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;Real&gt;(x: &amp;Vec&lt;Real&gt;) -&gt; Real\nwhere\n    Real: std::ops::Add&lt;Output = Real&gt; + std::ops::Mul&lt;Output = Real&gt; + Clone,\n{\n    (&amp;x[0] + &amp;x[1]) * &amp;x[2]\n}\n\nfn main() {\n    let x = vec![1.2, 2.3, 3.4];\n    let _y = foo::&lt;f64&gt;(&amp;x);\n}\n</code></pre>\n\n<p>Then, we get a new compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;Real`\n --&gt; src/main.rs:5:12\n  |\n5 |     (&amp;x[0] + &amp;x[1]) * &amp;x[2]\n  |      ----- ^ ----- &amp;Real\n  |      |\n  |      &amp;Real\n  |\n  = note: an implementation of `std::ops::Add` might be missing for `&amp;Real`\n</code></pre>\n\n<p>This also makes sense; the traits <code>Add</code> and <code>Mul</code> are on <code>Real</code> and not <code>&amp;Real</code>.  Nevertheless, I'm not sure how to resolve the error.  Is there a straightforward fix?</p>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "edited": false, "score": 0, "creation_date": 1568168462, "post_id": 57881048, "comment_id": 102185708, "body": "I should add that the program crashes with a Segmentation fault."}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "edited": false, "score": 0, "creation_date": 1568192283, "post_id": 57881048, "comment_id": 102193423, "body": "Ok I discovered that the <code>header_bar.set_show_close_button(true);</code> line is causing it to crash. I&#39;m going to open an issue in the gtk-rs issue tracker."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568193613, "post_id": 57881048, "comment_id": 102194089, "body": "What is displayed in the console before the crash?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568193645, "post_id": 57881048, "comment_id": 102194108, "body": "That&#39;s a bug. A code written in safe Rust shouldn&#39;t segfault."}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568240143, "post_id": 57881048, "comment_id": 102215775, "body": "Issue opened: <a href=\"https://github.com/gtk-rs/gtk/issues/891\" rel=\"nofollow noreferrer\">github.com/gtk-rs/gtk/issues/891</a>"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 100, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1568191221, "creation_date": 1568167182, "last_edit_date": 1568191221, "question_id": 57881048, "link": "https://stackoverflow.com/questions/57881048/gtk-rs-application-crashes-at-window-show-all-function", "title": "Gtk-rs application crashes at window.show_all() function", "body": "<p>My Gtk-rs application crashes whenever I try calling the <code>show_all()</code> function. </p>\n\n<p>In a simple application window, I have added a headerbar and a label. If I compile without adding the headerbar, the window works and shows the label as intended. However if I add the headerbar the window crashes.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use gio::prelude::*;\nuse gtk::{\n    prelude::*,\n    HeaderBarExt,\n    GtkWindowExt\n};\n\nfn gen_header_bar(subtitle: Option&lt;String&gt;) -&gt; gtk::HeaderBar {\n    let header_bar = gtk::HeaderBar::new();\n    header_bar.set_title(Some(crate::consts::APP_NAME));\n    header_bar.set_show_close_button(true);\n    match subtitle {\n        Some(subtitle) =&gt; {\n                header_bar.set_subtitle(Some(&amp;subtitle));\n            },\n        _ =&gt; {\n        }\n    }\n    header_bar\n}\n\n\npub fn build_application_window() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let application = gtk::Application::new(\n        Some(crate::consts::APP_ID),\n        gio::ApplicationFlags::FLAGS_NONE,\n    )?;\n\n    application.connect_activate(move |app| {\n        let window = gtk::ApplicationWindow::new(app);\n        window.set_title(crate::consts::APP_NAME);\n        window.set_default_size(32 * 10, 200); // golden ratio\n        window.set_position(gtk::WindowPosition::Center);\n        let header_bar = gen_header_bar(None);\n        window.set_titlebar(Some(&amp;header_bar));\n        window.add(&amp;{\n            let label = gtk::Label::new(Some(\"Welcome!\"));\n            label\n        });  \n        window.show_all(); // crashes here\n    });\n\n    application.run(&amp;std::env::args().collect::&lt;Vec&lt;_&gt;&gt;());\n\n    Ok(())\n}\n</code></pre>\n\n<p>What is causing this?</p>\n"}, {"tags": ["string", "rust", "unsafe"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568162594, "post_id": 57879433, "comment_id": 102183865, "body": "See also <a href=\"https://stackoverflow.com/q/24145823/155423\">How do I convert a C string into a Rust string and back via FFI?</a>; <a href=\"https://stackoverflow.com/q/52651264/155423\">C to Rust and back \u201cpointer being freed was not allocated\u201d on Rust side</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568162867, "post_id": 57879433, "comment_id": 102183915, "body": "Note that besides the allocator, <code>String::from_raw_parts</code> can only be safely called on a UTF-8 encoded string, while C strings may be encoded in many different ways. Even if you weren&#39;t concerned about potential allocator issues, you would probably still want a conversion layer to detect and handle transcoding errors."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1568168023, "post_id": 57879433, "comment_id": 102185623, "body": "no, you can&#39;t !"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 11, "last_activity_date": 1568162459, "creation_date": 1568162459, "answer_id": 57879688, "question_id": 57879433, "link": "https://stackoverflow.com/questions/57879433/is-is-safe-to-create-a-rust-string-using-a-malloced-string/57879688#57879688", "title": "Is is safe to create a Rust String using a malloced string?", "body": "<p>In general, it's <strong>not</strong> safe to create a <code>String</code> from a string that was not allocated from Rust.</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-0110-2014-07-02\" rel=\"noreferrer\">Rust 0.11.0</a> through 1.31.1 used jemalloc. <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17\" rel=\"noreferrer\">Rust 1.32.0</a> changed to use the system's default allocator.</p>\n\n<p>Additionally, <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1280-2018-08-02\" rel=\"noreferrer\">Rust 1.28.0</a> introduced a mechanism that applications can use to replace the global allocator with one of their choosing.</p>\n\n<p>It's important to note that, although Rust now uses the system's default allocator by default, that doesn't mean that C libraries use the same allocator, even if it's literally <code>malloc</code>. For example, on Windows, if you use a C library that's been compiled with Visual C++ 2008 while your Rust binary has been compiled with Visual Studio 2019 Build Tools, there will be <strong>two</strong> C runtime libraries loaded in your process: the C library will use <em>msvcr90.dll</em> while your Rust binary will use <em>ucrtbase.dll</em>. Each C runtime library manages its own heap, so memory allocated by one cannot be freed by the other.</p>\n\n<p>A well-designed C library ought to provide a function to free resources for each type of resource that the library may allocate itself. Functions that return pointers or handles to such allocations ought to document which function should be called to free the resource(s). <a href=\"https://stackoverflow.com/questions/31486519/how-do-i-free-a-char-allocated-via-ffi-in-rust\">See this other question regarding usage of LLVM's C API for an example of a well-designed API.</a></p>\n\n<p>Perhaps you don't <em>actually</em> need a <code>String</code>? Consider using <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CStr.html\" rel=\"noreferrer\"><code>CStr</code></a> instead, if that's possible. A <code>CStr</code> is akin to a <code>str</code>, so it's just a view into memory and it doesn't care how it was allocated, but it's more permissive than <code>str</code>. You can convert a <code>CStr</code> to a <code>str</code> using <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CStr.html#method.to_str\" rel=\"noreferrer\"><code>CStr::to_str</code></a> (the <code>CStr</code> must contain a UTF-8 string for the conversion to succeed).</p>\n\n<p>If there is indeed a function in the library to free the string, you might also want to write a wrapper struct that will handle deallocation automatically and will deref to <code>CStr</code>. This struct would represent an owned string, akin to <code>String</code> or <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CString.html\" rel=\"noreferrer\"><code>CString</code></a>, but with memory managed by the library instead of Rust's global allocator. For example:</p>\n\n<pre><code>extern crate libc; // 0.2.62\n\nuse std::ffi::CStr;\nuse std::ops::Deref;\n\nextern {\n    fn libfoo_free(string: *mut libc::c_char);\n}\n\nstruct LibfooString(*mut libc::c_char);\n\nimpl Drop for LibfooString {\n    fn drop(&amp;mut self) {\n        unsafe {\n            libfoo_free(self.0);\n        }\n    }\n}\n\nimpl Deref for LibfooString {\n    type Target = CStr;\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        unsafe {\n            CStr::from_ptr(self.0)\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 523, "user_id": 10998312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a629534f2e86430525c30c60a11d6a6?s=128&d=identicon&r=PG&f=1", "display_name": "KAction", "link": "https://stackoverflow.com/users/10998312/kaction"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 1, "accepted_answer_id": 57879688, "answer_count": 1, "score": 3, "last_activity_date": 1568162486, "creation_date": 1568159443, "last_edit_date": 1568162486, "question_id": 57879433, "link": "https://stackoverflow.com/questions/57879433/is-is-safe-to-create-a-rust-string-using-a-malloced-string", "title": "Is is safe to create a Rust String using a malloced string?", "body": "<p>I am working with a C API that returns a <code>malloc</code>ed string:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>char *foo(int arg);\n</code></pre>\n\n<p>Can I reuse that memory in Rust code without <code>O(n)</code> copying?</p>\n\n<pre><code>let p: *mut libc::c_char = foo(42);\nlet len = strlen(p);\nlet s: String = String.from_raw_parts(p, len, len);\n</code></pre>\n\n<p>The documentation says</p>\n\n<blockquote>\n  <p>The memory at <code>ptr</code> needs to have been previously allocated by the same allocator the standard library uses.</p>\n</blockquote>\n\n<p>I failed to find what allocator is used by standard library.</p>\n"}, {"tags": ["json", "rust", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "is_accepted": false, "score": 1, "last_activity_date": 1568220099, "last_edit_date": 1568220099, "creation_date": 1568218111, "answer_id": 57893057, "question_id": 57878917, "link": "https://stackoverflow.com/questions/57878917/why-does-an-actix-web-service-send-text-plain-instead-of-json-for-an-auth-error/57893057#57893057", "title": "Why does an actix-web service send text/plain instead of JSON for an auth error?", "body": "<p>It is necessary to override <a href=\"https://docs.rs/actix-http/0.2.3/src/actix_http/error.rs.html#66-75\" rel=\"nofollow noreferrer\"><code>render_response</code></a>:</p>\n\n<pre><code>impl ResponseError for ServiceError {\n    fn error_response(&amp;self) -&gt; HttpResponse {\n        match *self {\n            ServiceError::InternalServerError(ref message) =&gt; {\n                HttpResponse::InternalServerError().json(message)\n            }\n            ServiceError::BadRequest(ref message) =&gt; HttpResponse::BadRequest().json(message),\n            ServiceError::Unauthorized =&gt; HttpResponse::Unauthorized().json(\"Unauthorized\"),\n        }\n    }\n\n    fn render_response(&amp;self) -&gt; HttpResponse {\n        self.error_response()\n    }\n}\n</code></pre>\n\n<p>Thanks to <a href=\"https://www.reddit.com/r/rust/comments/d2e8hl/my_actix_service_refuse_to_send_back_json_for/ezw448v/\" rel=\"nofollow noreferrer\">ddboline on Reddit</a> for pointing to the solution.</p>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1568220099, "creation_date": 1568154403, "last_edit_date": 1568163030, "question_id": 57878917, "link": "https://stackoverflow.com/questions/57878917/why-does-an-actix-web-service-send-text-plain-instead-of-json-for-an-auth-error", "title": "Why does an actix-web service send text/plain instead of JSON for an auth error?", "body": "<p>I made a webservice with actix and I'm trying to implement the auth flow like in <a href=\"https://gill.net.in/posts/auth-microservice-rust-actix-web1.0-diesel-complete-tutorial/\" rel=\"nofollow noreferrer\">Auth Web Microservice with Rust using Actix-Web 1.0 - Complete Tutorial</a>:</p>\n\n<pre><code>use std::sync::Arc;\nuse std::sync::Mutex;\n\nuse actix_cors::Cors;\nuse actix_identity::{CookieIdentityPolicy, Identity, IdentityService};\n\nuse actix::prelude::*;\nuse actix::{Actor, SyncContext};\nuse actix_web::{\n    dev::Payload, error, guard, http::header, middleware, web, App, Error as AWError, FromRequest,\n    HttpRequest, HttpResponse, HttpServer, Responder, ResponseError,\n};\nuse derive_more::Display;\n\nuse serde::{Deserialize, Serialize};\n\n#[derive(Debug, Clone, Serialize, Deserialize)]\npub struct TokenResult {\n    pub company: String,\n    pub config: String,\n}\n\n#[derive(Debug, Display)]\npub enum ServiceError {\n    #[display(fmt = \"Internal Server Error\")]\n    InternalServerError(String),\n\n    #[display(fmt = \"BadRequest: {}\", _0)]\n    BadRequest(String),\n\n    #[display(fmt = \"Unauthorized\")]\n    Unauthorized,\n}\n\nimpl ResponseError for ServiceError {\n    fn error_response(&amp;self) -&gt; HttpResponse {\n        match *self {\n            ServiceError::InternalServerError(ref message) =&gt; {\n                HttpResponse::InternalServerError().json(message)\n            }\n            ServiceError::BadRequest(ref message) =&gt; HttpResponse::BadRequest().json(message),\n            ServiceError::Unauthorized =&gt; HttpResponse::Unauthorized().json(\"Unauthorized\"), //This is executed\n        }\n    }\n}\n\nimpl FromRequest for TokenResult {\n    type Error = AWError;\n    type Future = Result&lt;TokenResult, Self::Error&gt;;\n    type Config = ();\n\n    fn from_request(req: &amp;HttpRequest, pl: &amp;mut Payload) -&gt; Self::Future {\n        if let Some(identity) = Identity::from_request(req, pl)?.identity() {\n            let user: TokenResult = serde_json::from_str(&amp;identity)?;\n            return Ok(user);\n        }\n        //This is executed\n        Err(ServiceError::Unauthorized.into())\n    }\n}\n\nfn client_config(token: TokenResult) -&gt; HttpResponse {\n    HttpResponse::Ok().json(token.config)\n}\n\nfn main() -&gt; Result&lt;(), AWError&gt; {\n    let sys = actix_rt::System::new(\"Api\");\n\n    let mut server = HttpServer::new(move || {\n        App::new()\n            .wrap(IdentityService::new(\n                CookieIdentityPolicy::new(&amp;[0; 32])\n                    .name(\"auth-cookie\")\n                    .secure(false),\n            ))\n            .service(web::resource(\"/config\").to(client_config))\n    });\n\n    server = server.bind(\"127.0.0.1:8080\").unwrap();\n\n    server.start();\n    println!(\"Started http client: 127.0.0.1:8080\");\n    sys.run()?;\n    Ok(())\n}\n</code></pre>\n\n<p>When I test with httpie and others, I get text instead of JSON:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>http -v  POST http://localhost:8080/config\nPOST /config HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 0\nHost: localhost:8080\nUser-Agent: HTTPie/1.0.2\n\n\nHTTP/1.1 401 Unauthorized\ncontent-length: 12\ncontent-type: text/plain\ndate: Tue, 10 Sep 2019 20:41:46 GMT\n\nUnauthorized\n</code></pre>\n\n<p>All the other methods and errors except <code>TokenResult</code> return JSON.</p>\n\n<p>My dependencies:</p>\n\n<pre><code>[dependencies]\nactix = \"0.8.3\"\nactix-files = \"0.1.4\"\nactix-rt = \"0.2.5\"\nactix-identity = \"0.1.0\"\nactix-cors = \"0.1.0\"\nactix-web = {version = \"1.0.7\", features=[\"flate2-rust\"], default-features = false}\nderive_more = \"0.15.0\"\nfutures = \"0.1.29\"\njson = \"0.12.0\"\nserde = { version = \"1.0.100\", features = [\"derive\"] }\nserde_json = \"1.0.40\"\nsnafu = \"0.5.0\"\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1568145523, "post_id": 57877312, "comment_id": 102179691, "body": "Sounds like you&#39;ve missed some setup steps. <code>cargo readobj</code> is not a default subcommand (as the error message alludes). It was probably installed at some earlier step in the guide."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 2, "creation_date": 1568145996, "post_id": 57877312, "comment_id": 102179874, "body": "You may have forgotten to <code>cargo install cargo-binutils --vers 0.1.4</code> from <a href=\"https://docs.rust-embedded.org/discovery/03-setup/index.html\" rel=\"nofollow noreferrer\">docs.rust-embedded.org/discovery/03-setup/index.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 88, "user_id": 12039194, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-QC2gwQPhXLc/AAAAAAAAAAI/AAAAAAAAAJo/D2BPWLeTQqE/photo.jpg?sz=128", "display_name": "Abdur Rehman Siddiqui", "link": "https://stackoverflow.com/users/12039194/abdur-rehman-siddiqui"}, "is_accepted": true, "score": 5, "last_activity_date": 1568146589, "last_edit_date": 1568146589, "creation_date": 1568146484, "answer_id": 57877645, "question_id": 57877312, "link": "https://stackoverflow.com/questions/57877312/unable-to-verify-that-produced-executable-is-an-arm-binary-with-cargo-readobj/57877645#57877645", "title": "Unable to verify that produced executable is an ARM binary with `cargo readobj`: no such subcommand", "body": "<p>Before running these commands, you have to install the tools as <a href=\"https://docs.rust-embedded.org/discovery/03-setup/index.html\" rel=\"noreferrer\">described in chapter 3</a>. </p>\n\n<p>If you did that already, then make sure you are in the <code>src/05-led-roulette</code> directory.</p>\n"}, {"tags": [], "owner": {"reputation": 222, "user_id": 10846614, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LA8RIpBdeSY/AAAAAAAAAAI/AAAAAAAACik/440wHakbStc/photo.jpg?sz=128", "display_name": "Jawwad Turabi", "link": "https://stackoverflow.com/users/10846614/jawwad-turabi"}, "is_accepted": false, "score": 4, "last_activity_date": 1568147307, "last_edit_date": 1568147307, "creation_date": 1568146983, "answer_id": 57877748, "question_id": 57877312, "link": "https://stackoverflow.com/questions/57877312/unable-to-verify-that-produced-executable-is-an-arm-binary-with-cargo-readobj/57877748#57877748", "title": "Unable to verify that produced executable is an ARM binary with `cargo readobj`: no such subcommand", "body": "<p>The cargo package that we install by default doesn't provide the readobj subcommand, so you need to add this subcommand explicitly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo install cargo-binutils --vers 0.1.4\n</code></pre>\n"}], "owner": {"reputation": 337, "user_id": 10869513, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mWqRi.jpg?s=128&g=1", "display_name": "Muhammad Umer", "link": "https://stackoverflow.com/users/10869513/muhammad-umer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 670, "favorite_count": 0, "accepted_answer_id": 57877645, "answer_count": 2, "score": 5, "last_activity_date": 1568147307, "creation_date": 1568144700, "last_edit_date": 1568146155, "question_id": 57877312, "link": "https://stackoverflow.com/questions/57877312/unable-to-verify-that-produced-executable-is-an-arm-binary-with-cargo-readobj", "title": "Unable to verify that produced executable is an ARM binary with `cargo readobj`: no such subcommand", "body": "<p>I am learning embedded Rust. I've setup the environment and am now following the <a href=\"https://docs.rust-embedded.org/discovery/05-led-roulette/build-it.html\" rel=\"nofollow noreferrer\">Build It instructions</a>.</p>\n\n<p>When I verify that the produced executable is an ARM binary by running the  command </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo readobj --target thumbv7em-none-eabihf --bin led-roulette -- -file-headers\n</code></pre>\n\n<p>It generates an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no such subcommand: readobj\n</code></pre>\n\n<p>I've also tried the command</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo readelf -h target/thumbv7em-none-eabihf/debug/led-roulette \n</code></pre>\n\n<p>It generates the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no such subcommand: readelf\n</code></pre>\n"}, {"tags": ["arrays", "rust", "slice"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568143611, "post_id": 57877053, "comment_id": 102178917, "body": "<code>let piece: &amp;[u8; 3] = test_data[0..3].try_into().unwrap()</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568143752, "post_id": 57877053, "comment_id": 102178985, "body": "My &quot;challenge your assumptions&quot; follow up would be: <i>why do you require an array reference (<code>&amp;[u8; 3]</code>) instead of just accepting a slice (<code>&amp;[u8]</code>)?</i>"}, {"owner": {"reputation": 1050, "user_id": 2537322, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f72d4c37b7a4c7ede045f3bcb696df49?s=128&d=identicon&r=PG", "display_name": "meyer9", "link": "https://stackoverflow.com/users/2537322/meyer9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568143961, "post_id": 57877053, "comment_id": 102179077, "body": "Well, I need a [u8; 8] for u64::from_be_bytes @Shepmaster. I guess the .try_into().unwrap() method is probably fast enough."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568144167, "post_id": 57877053, "comment_id": 102179157, "body": "You may also want to look at <a href=\"https://stackoverflow.com/q/29307474/155423\">How can I convert a buffer of a slice of bytes (&amp;&#91;u8&#93;) to an integer?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568144237, "post_id": 57877053, "comment_id": 102179190, "body": "<i>probably fast enough</i> \u2014 yes, depending on exactly what you start with, that will be a free transformation (the panic from <code>unwrap</code> can even be removed in certain cases)."}, {"owner": {"reputation": 1050, "user_id": 2537322, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f72d4c37b7a4c7ede045f3bcb696df49?s=128&d=identicon&r=PG", "display_name": "meyer9", "link": "https://stackoverflow.com/users/2537322/meyer9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1568144409, "post_id": 57877053, "comment_id": 102179243, "body": "thanks for the help!"}], "owner": {"reputation": 1050, "user_id": 2537322, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f72d4c37b7a4c7ede045f3bcb696df49?s=128&d=identicon&r=PG", "display_name": "meyer9", "link": "https://stackoverflow.com/users/2537322/meyer9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1568143535, "answer_count": 0, "score": 1, "last_activity_date": 1568143656, "creation_date": 1568143386, "last_edit_date": 1568143656, "question_id": 57877053, "link": "https://stackoverflow.com/questions/57877053/how-to-get-a-reference-to-an-array-inside-another-array-in-rust", "closed_reason": "Duplicate", "title": "How to get a reference to an array inside another array in Rust?", "body": "<p>I have something like this:</p>\n\n<pre><code>let test_data: [u8; 6] = [0, 1, 2, 3, 4, 5];\n</code></pre>\n\n<p>How can I get a <code>&amp;[u8; 3]</code> pointing to the first three elements?</p>\n\n<p>I know I can do <code>test_data[0 .. 3]</code>, but that returns a slice <code>[u8]</code>. I'd also rather not convert the slice to an array if possible because I'm doing this with a ton of arrays and it needs to be as efficient as possible.</p>\n\n<p>I'm doing this so that I can parse information from a byte array, so if there's an easier way to do that than splitting the array up, I'm also interested in that.</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568142695, "post_id": 57876855, "comment_id": 102178577, "body": "How do you propose that your client &quot;asks for it&quot;?"}, {"owner": {"reputation": 27, "user_id": 11414906, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lWlT8JkFdYk/AAAAAAAAAAI/AAAAAAAAAVk/lSopxMy4oT8/photo.jpg?sz=128", "display_name": "Vikas Shetty", "link": "https://stackoverflow.com/users/11414906/vikas-shetty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568183127, "post_id": 57876855, "comment_id": 102189090, "body": "@Shepmaster I was just wondering if there was an existing library that can be used to handle this &quot;neatly&quot;."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568200166, "post_id": 57876855, "comment_id": 102197451, "body": "@VikasShetty Edited my answer with some plumbing to make it easier."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1568200155, "last_edit_date": 1568200155, "creation_date": 1568149210, "answer_id": 57878146, "question_id": 57876855, "link": "https://stackoverflow.com/questions/57876855/how-can-i-implement-a-pull-based-system-using-tokio/57878146#57878146", "title": "How can I implement a pull-based system using Tokio?", "body": "<p>Let's think back for a moment on the kind of events that could lead to this \"sending of data\". You can think of multiple ways:</p>\n\n<ul>\n<li>The client connects to the server. By contract, this is \"asking for data\". You've implemented this case</li>\n<li>The client sends an in-band message on the socket/pipe connecting the client and server. For that, you need to take the <code>AsyncRead</code> part of your <code>socket</code>, the <code>AsyncWrite</code> part that you've already used and build a duplex channel so you can read and talk at the same time</li>\n<li>The client sends an out-of-band message, typically on another proto-host-port triplet and using a different protocol. Your current server recognizes it, and sends the client that data. To do this, you need a reader for the other triplet, and you need a messaging structure in place to relay this to the one place having access to the <code>AsyncWrite</code> part of your socket</li>\n</ul>\n\n<p>The short answer is no, you cannot really act on an event that you're not listening for.</p>\n\n<hr>\n\n<blockquote>\n  <p>@Shepmaster I was just wondering if there was an existing library that can be used to handle this \"neatly\"</p>\n</blockquote>\n\n<p>There is, and then there isn't.</p>\n\n<p>Most libraries are centered around a specific problem. In your case, you've opted to work at the lowest possible level by having a TCP socket (implementing <code>AsyncRead + AsyncWrite</code>).</p>\n\n<p>To do anything, you're going to need to decide on:</p>\n\n<ol>\n<li>A transport format</li>\n<li>A protocol</li>\n</ol>\n\n<p>I tend to wrap code into this when I need a quick and dirty implementation of a duplex stream:</p>\n\n<pre><code>use futures::sync::mpsc::{UnboundedSender, unbounded};\nuse std::sync::{Arc};\nuse futures::{Sink, Stream, Future, future, stream};\nuse tokio::io::{AsyncRead, AsyncWrite};\nuse tokio::codec::{Framed, Encoder, Decoder};\nuse std::io;\nuse std::fmt::Debug;\nuse futures_locks::{RwLock as FutLock};\n\nenum Message&lt;T:Send+Debug+'static&gt; {\n    Content(T),\n    Done\n}\n\nimpl&lt;T: Send + Debug + 'static&gt; From&lt;T&gt; for Message&lt;T&gt; {\n    fn from(message:T) -&gt; Message&lt;T&gt; {\n        Message::Content(message)\n    }\n}\n\nstruct DuplexStream&lt;T:Send+Debug+'static&gt; {\n    writer: Arc&lt;FutLock&lt;UnboundedSender&lt;Message&lt;T&gt;&gt;&gt;&gt;,\n    handlers: Arc&lt;FutLock&lt;Option&lt;Box&lt;dyn Stream&lt;Item = Message&lt;T&gt;, Error = ()&gt; + Send&gt;&gt;&gt;&gt;\n}\n\nimpl&lt;T:Send+Debug+'static&gt; DuplexStream&lt;T&gt; {\n\n    pub fn from&lt;R,U&gt;(framed_socket: Framed&lt;R, U&gt;) -&gt; Arc&lt;DuplexStream&lt;T&gt;&gt;\n        where U: Send + Encoder&lt;Item = T&gt; + Decoder&lt;Item = T&gt; + 'static, R: Send + AsyncRead + AsyncWrite + 'static {\n\n        let (tx, rx) = framed_socket.split();\n\n        // Assemble the combined upstream stream\n        let (upstream_tx, upstream_rx) = unbounded();\n        let upstream = upstream_rx.take_while(|item| match item {\n            Message::Done =&gt; future::ok(false),\n            _ =&gt; future::ok(true)\n        }).fold(tx, |o, m| {\n            o.send(match m {\n                Message::Content(i) =&gt; i,\n                _ =&gt; unreachable!()\n            }).map_err(|_| {\n                ()\n            })\n        }).map(|e| {\n            Message::Done\n        }).into_stream();\n\n        // Assemble the downstream stream\n        let downstream = rx.map_err(|_| ()).map(|r| {\n            Message::Content(r)\n        }).chain(stream::once(Ok(Message::Done)));\n\n        Arc::new(DuplexStream {\n            writer: Arc::new(FutLock::new(upstream_tx)),\n            handlers: Arc::new(FutLock::new(Some(Box::new(upstream.select(downstream).take_while(|m| match m {\n                Message::Content(_) =&gt; {\n                    future::ok(true)\n                },\n                Message::Done =&gt; {\n                    future::ok(false)\n                }\n            })))))\n        })\n    }\n\n    pub fn start(self: Arc&lt;Self&gt;) -&gt; Box&lt;dyn Stream&lt;Item = T, Error = io::Error&gt; + Send&gt; {\n        Box::new(self.handlers\n            .write()\n            .map_err(|_| io::Error::new(io::ErrorKind::NotFound, \"Stream closed\"))\n            .map(|mut handler| -&gt; Box&lt;dyn Stream&lt;Item = T, Error = io::Error&gt; + Send&gt; {\n                match handler.take() {\n                    Some(e) =&gt; Box::new(e.map(|r| match r {\n                        Message::Content(i) =&gt; i,\n                        _ =&gt; unreachable!()\n                    }).map_err(|_| io::Error::new(io::ErrorKind::NotFound, \"Stream closed\"))),\n                    None =&gt; Box::new(stream::once(Err(io::Error::new(io::ErrorKind::AddrInUse, \"Handler already taken\"))))\n                }\n            }).into_stream().flatten()\n        )\n    }\n\n    pub fn close(self: Arc&lt;Self&gt;) -&gt; Box&lt;dyn Future&lt;Item = (), Error = io::Error&gt; + Send&gt; {\n        self.inner_send(Message::Done)\n    }\n    pub fn send(self: Arc&lt;Self&gt;, message: T) -&gt; Box&lt;dyn Future&lt;Item = (), Error = io::Error&gt; + Send&gt; {\n        self.inner_send(message.into())\n    }\n    pub fn inner_send(self: Arc&lt;Self&gt;, message: Message&lt;T&gt;) -&gt; Box&lt;dyn Future&lt;Item = (), Error = io::Error&gt; + Send&gt; {\n        Box::new(self.writer.write()\n            .map_err(|_| io::Error::new(io::ErrorKind::NotFound, \"The mutex has disappeared\")).and_then(|guard| {\n                future::result(guard.unbounded_send(message).map_err(|_| io::Error::new(io::ErrorKind::BrokenPipe, \"The sink has gone away\")))\n        }))\n    }\n}\n</code></pre>\n\n<p>This struct has a multitude of advantages, but a few drawbacks. The main advantage is that you can deal with the read and write part <em>on the same object</em> the same way you would in another language. The object itself implements <code>Clone</code> (since it's an <code>Arc</code>), every method is usable everywhere (particularly useful for old <code>futures</code> code) and as long as you keep a copy of it <em>somewhere</em> and don't call <code>close()</code> it'll keep running (as long as the underlying <code>AsyncRead + AsyncWrite</code> implementation is still there).</p>\n\n<p>This does not absolve you from points 1 and 2, but you can (and should) leverage <code>tokio::codec::Framed</code> for point 1, and implement point 2 as business logic.</p>\n\n<p>An example (it's actually a test ;-) ) of the usage:</p>\n\n<pre><code>#[test]\nfn it_writes() {\n    let stream = DuplexStream::from(make_w());\n    let stream_write = Arc::clone(&amp;stream);\n    let stream_read=  Arc::clone(&amp;stream);\n    let dup = Arc::clone(&amp;stream);\n    tokio::run(lazy(move || {\n        let stream_write = Arc::clone(&amp;stream_write);\n        stream_read.start().and_then(move |i| {\n            let stream_write = Arc::clone(&amp;stream_write);\n            stream_write.send(\"foo\".to_string()).map(|_| i)\n        }).collect().map(|r| {\n            assert_eq!(r, vec![\"foo\".to_string(), \"bar\".to_string(), \"bazfoo\".to_string(), \"foo\".to_string()])\n        }).map_err(|_| {\n            assert_eq!(true, false);\n        })\n    }));\n}\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 11414906, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lWlT8JkFdYk/AAAAAAAAAAI/AAAAAAAAAVk/lSopxMy4oT8/photo.jpg?sz=128", "display_name": "Vikas Shetty", "link": "https://stackoverflow.com/users/11414906/vikas-shetty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 57878146, "answer_count": 1, "score": 0, "last_activity_date": 1568200155, "creation_date": 1568142294, "last_edit_date": 1568147997, "question_id": 57876855, "link": "https://stackoverflow.com/questions/57876855/how-can-i-implement-a-pull-based-system-using-tokio", "title": "How can I implement a pull-based system using Tokio?", "body": "<p>I want to implement a pull-based system between a server and a client where the server will only push data when the client asks for it.</p>\n\n<p>I was playing with Tokio and was able to create a push-based system where I was able to push a string at an interval of 1ms.</p>\n\n<pre><code>let done = listener\n    .incoming()\n    .for_each(move |socket| {\n        let server_queue = _cqueue.clone();\n        let (reader, mut writer) = socket.split();\n        let sender = Interval::new_interval(std::time::Duration::from_millis(1))\n            .for_each(move |_| {\n                writer\n                    .poll_write(server_queue.pull().borrow())\n                    .map_err(|_| {\n                        tokio::timer::Error::shutdown();\n                    })\n                    .unwrap();\n                return Ok(());\n            })\n            .map_err(|e| println!(\"{}\", e));\n        ;\n        tokio::spawn(sender);\n        return Ok(());\n    })\n    .map_err(|e| println!(\"Future_error {}\", e));\n</code></pre>\n\n<p>Is there a way to send only when the client asks for it without having to use a reader?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568133695, "post_id": 57874994, "comment_id": 102175015, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/47698062/155423\">How to write documentation tests for an internal API?</a>; <a href=\"https://stackoverflow.com/q/49479854/155423\">How do I change a function&#39;s qualifiers via conditional compilation?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57874994/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568133749, "post_id": 57874994, "comment_id": 102175042, "body": "See also <a href=\"https://stackoverflow.com/q/47698194/155423\">Can I make an object public for integration tests and/or benchmarks only?</a>. <a href=\"https://stackoverflow.com/q/51884807/155423\">Conditional visibility for unit tests</a> appears to be the same and was marked as a duplicate of one of the earlier suggestions."}, {"owner": {"reputation": 6108, "user_id": 87207, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/677f6ada59932964b9150aba814fedd6?s=128&d=identicon&r=PG", "display_name": "Willi Ballenthin", "link": "https://stackoverflow.com/users/87207/willi-ballenthin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568133976, "post_id": 57874994, "comment_id": 102175157, "body": "@Shepmaster thanks for the links. I agree that these answers are probably sufficient to answer my question. Thanks!"}], "owner": {"reputation": 6108, "user_id": 87207, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/677f6ada59932964b9150aba814fedd6?s=128&d=identicon&r=PG", "display_name": "Willi Ballenthin", "link": "https://stackoverflow.com/users/87207/willi-ballenthin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1568134015, "answer_count": 0, "score": 0, "last_activity_date": 1568134109, "creation_date": 1568133302, "question_id": 57874994, "link": "https://stackoverflow.com/questions/57874994/how-can-i-mark-a-routine-as-pub-only-during-doc-tests", "closed_reason": "Duplicate", "title": "How can I mark a routine as pub only during doc tests?", "body": "<p>I use doc tests whenever reasonable for a number of reasons (locality, serves as an example, etc). I would like to use doc tests for functions and methods that are not marked <code>pub</code>. I figure this would probably involve using <code>#[cfg(test)]</code> in appropriate places, but I'm not sure.</p>\n\n<p>How would you mark functions and methods so that they can be used in doc tests?</p>\n"}, {"tags": ["rust", "hashmap"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568121897, "post_id": 57871693, "comment_id": 102168430, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/32401857/155423\">How can I keep a reference to a key after it has been inserted into a HashMap?</a>; <a href=\"https://stackoverflow.com/q/43681409\">How can I get a reference to the key and value immediately after inserting into a <code>HashMap</code>?</a>; <a href=\"https://stackoverflow.com/q/51542024/155423\">How do I use the Entry API with an expensive key that is only constructed if the Entry is Vacant?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57871693/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1474, "user_id": 2794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2tHkr.jpg?s=128&g=1", "display_name": "gavrie", "link": "https://stackoverflow.com/users/2794/gavrie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1568122787, "post_id": 57871693, "comment_id": 102168985, "body": "@Shepmaster thanks. My question is indeed answered by <a href=\"https://stackoverflow.com/questions/51542024/\">stackoverflow.com/questions/51542024</a> and <a href=\"https://stackoverflow.com/questions/43681409/\">stackoverflow.com/questions/43681409</a>, from which I gather that there is no better way with current stable Rust, but this may change in the future."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1568122864, "post_id": 57871693, "comment_id": 102169046, "body": "Your third (hypothetical) snippet seems no better than the second (working) one -- both call <code>to_owned</code> on the string, apparently unnecessarily. Does <code>e.insert(Schema::new(e.key()))</code> not work? If that falls foul of the borrow checker, what about <code>let value = Schema::new(e.key()); e.insert(value)</code>? It depends on what <code>Schema::new</code> does, I suppose, but if it takes a <code>&amp;str</code> you shouldn&#39;t need to make a <code>String</code> to call it."}, {"owner": {"reputation": 1474, "user_id": 2794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2tHkr.jpg?s=128&g=1", "display_name": "gavrie", "link": "https://stackoverflow.com/users/2794/gavrie"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568122934, "post_id": 57871693, "comment_id": 102169096, "body": "@trentcl I agree; it&#39;s just a bit more readable. Borrowing the key won&#39;t work in any case, since <code>e.insert</code> consumes <code>self</code> as I mentioned in the code comment."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568123003, "post_id": 57871693, "comment_id": 102169152, "body": "(And consequently, if you&#39;re cloning the string anyway, you might as well just call <code>entry(index.clone())</code> and then <code>or_insert_with</code> works fine as in the first snippet.)"}, {"owner": {"reputation": 1474, "user_id": 2794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2tHkr.jpg?s=128&g=1", "display_name": "gavrie", "link": "https://stackoverflow.com/users/2794/gavrie"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568123052, "post_id": 57871693, "comment_id": 102169188, "body": "@trentcl the point is to clone only when needed (in case the entry doesn&#39;t exist), and avoid it in the common path."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1568123517, "post_id": 57871693, "comment_id": 102169475, "body": "Yes, you have to pass an owned <code>String</code> to <code>entry</code>, so you would have to clone it if you wanted to use <code>index</code> again, but the snippets don&#39;t show that. You <i>don&#39;t</i> have to pass an owned <code>String</code> to <code>Schema::new</code>, so I don&#39;t understand why you <i>also</i> call <code>to_owned()</code> on <code>e.key()</code> in the working example. If you wanted to use <code>index</code> again afterwards, you would have to clone it a second time, which is why calling <code>entry(index.clone())</code> is no worse in that case."}], "owner": {"reputation": 1474, "user_id": 2794, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2tHkr.jpg?s=128&g=1", "display_name": "gavrie", "link": "https://stackoverflow.com/users/2794/gavrie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 182, "favorite_count": 0, "closed_date": 1568122865, "answer_count": 0, "score": 2, "last_activity_date": 1568122879, "creation_date": 1568121447, "last_edit_date": 1568121751, "question_id": 57871693, "link": "https://stackoverflow.com/questions/57871693/why-cant-hash-mapentryor-insert-with-access-the-entrys-key", "closed_reason": "Duplicate", "title": "Why can&#39;t hash_map::Entry::or_insert_with access the entry&#39;s key?", "body": "<p>I'm trying to efficiently look up or insert an item into a <code>HashMap</code> that owns both its keys and its values.</p>\n\n<p>According to <a href=\"https://stackoverflow.com/questions/28512394\">How to lookup from and insert into a HashMap efficiently?</a>, the <code>Entry</code> API is the way to do this.</p>\n\n<p>However, when inserting a new item, I also need access to the key.</p>\n\n<p>Since <code>HashMap::entry</code> consumes the key, I cannot do the following, which fails with <code>error[E0382]: borrow of moved value: 'index'</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut map: HashMap&lt;String, Schema&gt; = ...;\nlet index: String = ...;\n\nlet schema = map\n    .entry(index)\n    .or_insert_with(|| Schema::new(&amp;index));\n</code></pre>\n\n<p>The simplest way to get this working seems to be as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let schema = match map.entry(index) {\n    Entry::Occupied(e) =&gt; e.into_mut(),\n    Entry::Vacant(e) =&gt; {\n        // VacantEntry::insert consumes `self`,\n        // so we need to clone:\n        let index = e.key().to_owned();\n        e.insert(Schema::new(&amp;index))\n    }\n};\n</code></pre>\n\n<p>If only <code>or_insert_with</code> would pass the <code>Entry</code> to the closure that it calls, it would have been possible to write the above code like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let schema = map\n    .entry(index)\n    .or_insert_with_entry(|e| {\n        let index = e.key().to_owned();\n        Schema::new(&amp;index)\n    });\n</code></pre>\n\n<p>Did I overlook something? What would be the best way to write this code?</p>\n"}, {"tags": ["rust", "rust-cargo"], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1568123388, "creation_date": 1568120864, "last_edit_date": 1568123388, "question_id": 57871514, "link": "https://stackoverflow.com/questions/57871514/how-to-specify-a-username-and-password-to-download-a-crate-from-a-cargo-alternat", "title": "How to specify a username and password to download a crate from a Cargo alternative registry?", "body": "<p>I'm testing the <a href=\"https://doc.rust-lang.org/cargo/reference/registries.html\" rel=\"nofollow noreferrer\">alternative registry</a> feature. How I make Cargo be able to download a crate if this crate is behind HTTP basic authentication? </p>\n\n<p>According to the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2141-alternative-registries.md#registry-definition-specification\" rel=\"nofollow noreferrer\">Registry Definition Specifications</a>, I have to provide both in <em>.cargo/credentials</em> like this:</p>\n\n<pre><code>[registries.my-registry]\nuser = \"tim\"\npassword = \"topsecret\"\n</code></pre>\n\n<p>Testing it with curl works fine: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code># curl -u tim:topsecret https://my.registry/api/v1/crates/krate/0.1.0/download\nWarning: Binary output can mess up your terminal.\n</code></pre>\n\n<p>However, Cargo gets an <code>Authentication Required</code> response:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: failed to download from `https://my.registry/api/v1/crates/krate/0.1.0/download`\n\nCaused by:\n  failed to get 200 response from `https://my.registry/api/v1/crates/krate/0.1.0/download`, got 401\n</code></pre>\n"}, {"tags": ["rust", "middleware", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568118066, "post_id": 57870586, "comment_id": 102166216, "body": "No dice, sadly: error[E0599]: no method named <code>concat2</code> found for type <code>actix_http::payload::Payload&lt;()&gt;</code> in the current scope    --&gt; src/main.rs:209:26     | 209 |                         .concat2()     |                          ^^^^^^^"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568118157, "post_id": 57870586, "comment_id": 102166254, "body": "The error doesn&#39;t even tell you about importing a trait below it?"}, {"owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568118357, "post_id": 57870586, "comment_id": 102166371, "body": "Nope, I know those already and the compiler is helpful there. Sadly, I think the type that comes out of <code>take_payload()</code> is not, as I&#39;d expect, <code>Payload&lt;Stream&gt;</code>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568119058, "post_id": 57870586, "comment_id": 102166802, "body": "@Svenstaro Yeah, I thought <code>wrap_fn</code> would do more, but all it does is create a middleware and since the lowest common denominator for payload in that is <code>()</code>, you&#39;re stuck with <code>Payload&lt;()&gt;</code>. You need to explicitly define your service :-("}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1568119319, "post_id": 57870586, "comment_id": 102166971, "body": "<i>Payload implements Stream&lt;Item = Bytes, Error = _&gt;,</i> <code>Payload&lt;S&gt;</code> implements <code>Stream</code> only if  <code>S</code> implements <code>Stream</code>, in the case for OP <code>S</code> is <code>()</code> ,  <code>()</code> is not an implementor of <code>Stream</code>, <a href=\"https://docs.rs/futures/0.2.0/futures/stream/trait.Stream.html#implementors\" rel=\"nofollow noreferrer\">please see</a>"}, {"owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568121326, "post_id": 57870586, "comment_id": 102168104, "body": "Sadly, using the full middleware results in roughly the same error. Please check the updated answer. Thank you for your help so far."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568189976, "post_id": 57870586, "comment_id": 102192257, "body": "Checking in, I have not forgotten about your question and may have a solution, but it&#39;s a lot more complex due to the requirements on middlewares :-("}, {"owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "edited": false, "score": 0, "creation_date": 1568200610, "post_id": 57870586, "comment_id": 102197651, "body": "I believe I&#39;ve found a good fix. I&#39;ll post an answer for this and also create a new examples for the actix-examples repo so that other people may benefit."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1568200642, "post_id": 57870586, "comment_id": 102197662, "body": "Please do :-) I&#39;m still struggling to see how you could do it without destructuring <code>ServiceRequest</code> and reforming it after"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1568119410, "last_edit_date": 1568119410, "creation_date": 1568117642, "answer_id": 57870586, "question_id": 57870379, "link": "https://stackoverflow.com/questions/57870379/how-to-read-a-requests-body-in-an-actix-web-1-0-middleware/57870586#57870586", "title": "How to read a request&#39;s body in an actix-web 1.0 middleware?", "body": "<p><code>Payload</code> implements <code>Stream&lt;Item = Bytes, Error = _&gt;</code>, so there is no reason you cannot use the same trick as for other frameworks:</p>\n\n<pre><code>req_\n    .take_payload().concat2()\n    .and_then(|bytes| {\n         info!(\"request body: {:?}\", bytes);\n    });\n</code></pre>\n\n<p>That is, if you had a proper <code>Payload</code> from a POST/PUT request. Since you've used <code>wrap_fn()</code>, you've effectively set up a middleware. Those run across all requests, and do not allow you access to the <code>Payload</code> (partly because you can only take it once).</p>\n\n<p>As such, you're out of luck, I think.</p>\n"}, {"comments": [{"owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1569216680, "post_id": 57890157, "comment_id": 102509657, "body": "I tried this but it seems like the body gets consumed by the middleware. Do you know if it is possible to only read the body in the middleware while letting it pass through to the service?"}, {"owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "reply_to_user": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1569231417, "post_id": 57890157, "comment_id": 102516013, "body": "I believe this is not possible due to the way actix-web is designed. Basically, in order to read the body, you have to get it moved into you. You could try putting it back into the Request somehow."}, {"owner": {"reputation": 76, "user_id": 11948536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85cc87ca5ef8ca4ac795bbdb967fc7cb?s=128&d=identicon&r=PG&f=1", "display_name": "LoganSmith", "link": "https://stackoverflow.com/users/11948536/logansmith"}, "edited": false, "score": 0, "creation_date": 1569968008, "post_id": 57890157, "comment_id": 102765030, "body": "You can rebuild the payload and add it to the ServiceRequest"}], "tags": [], "owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "is_accepted": true, "score": 2, "last_activity_date": 1568207963, "creation_date": 1568207963, "answer_id": 57890157, "question_id": 57870379, "link": "https://stackoverflow.com/questions/57870379/how-to-read-a-requests-body-in-an-actix-web-1-0-middleware/57890157#57890157", "title": "How to read a request&#39;s body in an actix-web 1.0 middleware?", "body": "<p>With the help of the fine people in the actix-web Gitter channel, I came to this solution which I also made <a href=\"https://github.com/actix/examples/pull/170\" rel=\"nofollow noreferrer\">a PR</a> for.</p>\n\n<p>Full solution is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Logging;\n\nimpl&lt;S: 'static, B&gt; Transform&lt;S&gt; for Logging\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type InitError = ();\n    type Transform = LoggingMiddleware&lt;S&gt;;\n    type Future = FutureResult&lt;Self::Transform, Self::InitError&gt;;\n\n    fn new_transform(&amp;self, service: S) -&gt; Self::Future {\n        ok(LoggingMiddleware {\n            service: Rc::new(RefCell::new(service)),\n        })\n    }\n}\n\npub struct LoggingMiddleware&lt;S&gt; {\n    // This is special: We need this to avoid lifetime issues.\n    service: Rc&lt;RefCell&lt;S&gt;&gt;,\n}\n\nimpl&lt;S, B&gt; Service for LoggingMiddleware&lt;S&gt;\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;\n        + 'static,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type Future = Box&lt;dyn Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn poll_ready(&amp;mut self) -&gt; Poll&lt;(), Self::Error&gt; {\n        self.service.poll_ready()\n    }\n\n    fn call(&amp;mut self, mut req: ServiceRequest) -&gt; Self::Future {\n        let mut svc = self.service.clone();\n\n        Box::new(\n            req.take_payload()\n                .fold(BytesMut::new(), move |mut body, chunk| {\n                    body.extend_from_slice(&amp;chunk);\n                    Ok::&lt;_, PayloadError&gt;(body)\n                })\n                .map_err(|e| e.into())\n                .and_then(move |bytes| {\n                    println!(\"request body: {:?}\", bytes);\n                    svc.call(req).and_then(|res| Ok(res))\n                }),\n        )\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 76, "user_id": 11948536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85cc87ca5ef8ca4ac795bbdb967fc7cb?s=128&d=identicon&r=PG&f=1", "display_name": "LoganSmith", "link": "https://stackoverflow.com/users/11948536/logansmith"}, "is_accepted": false, "score": 1, "last_activity_date": 1569967963, "creation_date": 1569967963, "answer_id": 58192915, "question_id": 57870379, "link": "https://stackoverflow.com/questions/57870379/how-to-read-a-requests-body-in-an-actix-web-1-0-middleware/58192915#58192915", "title": "How to read a request&#39;s body in an actix-web 1.0 middleware?", "body": "<p>Building on svenstaro's solution you can do something like the following  to rebuild the request after cloning the stripped bytes.</p>\n\n<pre><code>    fn call(&amp;mut self, mut req: ServiceRequest) -&gt; Self::Future {\n        let mut svc = self.service.clone();\n\n        Box::new(\n            req.take_payload()\n                .fold(BytesMut::new(), move |mut body, chunk| {\n                    body.extend_from_slice(&amp;chunk);\n                    Ok::&lt;_, PayloadError&gt;(body)\n                })\n                .map_err(|e| e.into())\n                .and_then(move |bytes| {\n                    println!(\"request body: {:?}\", bytes);\n\n                    let mut payload = actix_http::h1::Payload::empty();\n                    payload.unread_data(bytes.into());\n                    req.set_payload(payload.into());\n\n                    svc.call(req).and_then(|res| Ok(res))\n                }),\n        )\n    }                      \n</code></pre>\n"}], "owner": {"reputation": 1651, "user_id": 161775, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8aa71bbce44d1fe9a26bacc7721f142d?s=128&d=identicon&r=PG", "display_name": "svenstaro", "link": "https://stackoverflow.com/users/161775/svenstaro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1146, "favorite_count": 2, "accepted_answer_id": 57890157, "answer_count": 3, "score": 3, "last_activity_date": 1569967963, "creation_date": 1568116851, "last_edit_date": 1568126775, "question_id": 57870379, "link": "https://stackoverflow.com/questions/57870379/how-to-read-a-requests-body-in-an-actix-web-1-0-middleware", "title": "How to read a request&#39;s body in an actix-web 1.0 middleware?", "body": "<p>I want to read out the body in a middleware in actix-web 1.0. I'm using the closure-style middleware using <code>wrap_fn</code>.</p>\n\n<p>My basic setup is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut server = HttpServer::new(move || {\n    ActixApp::new()\n        .wrap_fn(|req, srv| {\n            srv.call(req).map(|res| {\n                let req_ = res.request();\n                let body = req_.magical_body_read_function();\n                dbg!(body);\n                res\n            })\n        })\n});\n</code></pre>\n\n<p>I need that <code>magical_body_read_function()</code> which sadly doesn't exist.</p>\n\n<p>I hacked together something that looks like it could work by reading the examples and using <code>take_payload()</code> but it didn't work, sadly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut server = HttpServer::new(move || {\n    ActixApp::new()\n        .wrap_fn(|req, srv| {\n            srv.call(req).map(|res| {\n                let req_ = res.request();\n                req_.take_payload()\n                    .fold(BytesMut::new(), move |mut body, chunk| {\n                        body.extend_from_slice(&amp;chunk);\n                        Ok::&lt;_, PayloadError&gt;(body)\n                    })\n                    .and_then(|bytes| {\n                        info!(\"request body: {:?}\", bytes);\n                    });\n                res\n            })\n        })\n});\n</code></pre>\n\n<p>Gives me</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `fold` found for type `actix_http::payload::Payload&lt;()&gt;` in the current scope    --&gt; src/main.rs:209:26\n    | 209 |                         .fold(BytesMut::new(), move |mut body, chunk| {\n    |                          ^^^^\n    |\n    = note: the method `fold` exists but the following trait bounds were not satisfied:\n            `&amp;mut actix_http::payload::Payload&lt;()&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>I then tried an approach using the full middleware:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Logging;\n\nimpl&lt;S, B&gt; Transform&lt;S&gt; for Logging\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type InitError = ();\n    type Transform = LoggingMiddleware&lt;S&gt;;\n    type Future = FutureResult&lt;Self::Transform, Self::InitError&gt;;\n\n    fn new_transform(&amp;self, service: S) -&gt; Self::Future {\n        ok(LoggingMiddleware { service })\n    }\n}\n\npub struct LoggingMiddleware&lt;S&gt; {\n    service: S,\n}\n\nimpl&lt;S, B&gt; Service for LoggingMiddleware&lt;S&gt;\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type Future = Box&lt;dyn Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn poll_ready(&amp;mut self) -&gt; Poll&lt;(), Self::Error&gt; {\n        self.service.poll_ready()\n    }\n\n    fn call(&amp;mut self, req: ServiceRequest) -&gt; Self::Future {\n        Box::new(self.service.call(req).and_then(|res| {\n            let req_ = res.request();\n            req_.take_payload()\n                .fold(BytesMut::new(), move |mut body, chunk| {\n                    body.extend_from_slice(&amp;chunk);\n                    Ok::&lt;_, PayloadError&gt;(body)\n                })\n                .and_then(|bytes| {\n                    info!(\"request body: {:?}\", bytes);\n                });\n            Ok(res)\n        }))\n    }\n}\n</code></pre>\n\n<p>which sadly also resulted in the very similar looking error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `fold` found for type `actix_http::payload::Payload&lt;()&gt;` in the current scope\n   --&gt; src/main.rs:204:18\n    |\n204 |                 .fold(BytesMut::new(), move |mut body, chunk| {\n    |                  ^^^^\n    |\n    = note: the method `fold` exists but the following trait bounds were not satisfied:\n            `&amp;mut actix_http::payload::Payload&lt;()&gt; : futures::stream::Stream`\n            `&amp;mut actix_http::payload::Payload&lt;()&gt; : std::iter::Iterator`\n            `actix_http::payload::Payload&lt;()&gt; : futures::stream::Stream`\n</code></pre>\n"}, {"tags": ["rust", "hashmap", "ownership"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1568113139, "post_id": 57869177, "comment_id": 102163478, "body": "Hi there. I think your question is answered by <a href=\"https://stackoverflow.com/questions/28512394/how-to-lookup-from-and-insert-into-a-hashmap-efficiently\">this Q&amp;A</a>. Summary: use the <code>entry</code> API, i.e. <code>map.entry(key).or_insert_with(|| Value::new())</code>. Please let us know if this indeed answers your question!"}, {"owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1568117234, "post_id": 57869177, "comment_id": 102165753, "body": "@LukasKalbertodt thanks it seems like can be a nice solution, the only problem with  .entry() is that it requires key ownership even when the key already exists. <code>map.entry(key.to_owned()).or_insert_with(|| Value::new())</code>"}], "owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1568116119, "answer_count": 0, "score": 1, "last_activity_date": 1568114019, "creation_date": 1568112442, "last_edit_date": 1568114019, "question_id": 57869177, "link": "https://stackoverflow.com/questions/57869177/insert-value-into-hashmap-and-get-reference-to-that-value", "closed_reason": "Duplicate", "title": "Insert value into `HashMap` and get reference to that value", "body": "<p>We have a simple pattern of \"get or create\" which I was able to implement as shown below. However, we couldn't find an efficient way to avoid this <code>insert</code> followed by <code>get</code> of the value which we just created. Is there a way to write this in a more concise way?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let value = match map.get_mut(key) {\n    Some(v) =&gt; v,\n    None =&gt; {\n        let v = Value::new();\n        map.insert(key.to_owned(), v);\n        map.get_mut(key).unwrap()\n    }\n};\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1568112430, "post_id": 57868981, "comment_id": 102163110, "body": "<code>mpsc</code> is not meant for broadcasting, it is multiple producer single consumer(specific one), so it can do exactly what you want."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1568121244, "last_edit_date": 1568121244, "creation_date": 1568112608, "answer_id": 57869216, "question_id": 57868981, "link": "https://stackoverflow.com/questions/57868981/how-can-i-send-a-message-to-a-specific-thread/57869216#57869216", "title": "How can I send a message to a specific thread?", "body": "<p>MPSC stands for Multiple Producers, Single Consumer. As such, no, you cannot use that <em>by itself</em> to send a message to all threads, since for that you'd have to be able to duplicate the consumer. There <strong>are</strong> tools for this, but the choice of them requires a bit more info than just \"MPMC\" or \"SPMC\".</p>\n\n<p>Honestly, if you can rely on channels for messaging (there are cases where it'd be a bad idea), you can create a channel per thread, assign the ID outside of the thread, and keep a <code>HashMap</code> instead of a <code>Vec</code> with the IDs associated to the threads. <code>Receiver&lt;T&gt;</code> can be moved into the thread (it implements <code>Send</code> if <code>T</code> implements <code>Send</code>), so you can quite literally <code>move</code> it in.</p>\n\n<p>You then keep the <code>Sender</code> outside and send stuff to it :-)</p>\n"}], "owner": {"reputation": 488, "user_id": 4418333, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5b73935bb834bf63d997ad6c3e1d6207?s=128&d=identicon&r=PG&f=1", "display_name": "TalG", "link": "https://stackoverflow.com/users/4418333/talg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 57869216, "answer_count": 1, "score": 0, "last_activity_date": 1568121386, "creation_date": 1568111710, "last_edit_date": 1568121386, "question_id": 57868981, "link": "https://stackoverflow.com/questions/57868981/how-can-i-send-a-message-to-a-specific-thread", "title": "How can I send a message to a specific thread?", "body": "<p>I need to create some threads where some of them are going to run until their runner variable value has been changed. This is my minimal code.</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let mut log_runner = Arc::new(Mutex::new(true));\n    println!(\"{}\", *log_runner.lock().unwrap());\n    let mut threads = Vec::new();\n\n    {\n        let mut log_runner_ref = Arc::clone(&amp;log_runner);\n        // log runner thread\n        let handle = thread::spawn(move || {\n            while *log_runner_ref.lock().unwrap() == true {\n                // DO SOME THINGS CONTINUOUSLY\n                println!(\"I'm a separate thread!\");\n            }\n        });\n        threads.push(handle);\n    }\n\n    // let the main thread to sleep for x time\n    thread::sleep(Duration::from_millis(1));\n    // stop the log_runner thread\n    *log_runner.lock().unwrap() = false;\n    // join all threads\n    for handle in threads {\n        handle.join().unwrap();\n        println!(\"Thread joined!\");\n    }\n    println!(\"{}\", *log_runner.lock().unwrap());\n}\n</code></pre>\n\n<p>It looks like I'm able to set the <code>log_runner_ref</code> in the log runner thread after 1 second to <code>false</code>. Is there a way to mark the treads with some name / ID or something similar and send a message to a specific thread using its specific marker (name / ID)? </p>\n\n<p>If I understand it correctly, then the <code>let (tx, rx) = mpsc::channel();</code> can be used for sending messages to all the threads simultaneously rather than to a specific one. I could send some identifier with the messages and each thread will be looking for its own identifier for the decision if to act on received message or not, but I would like to avoid the broadcasting effect.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1568109195, "post_id": 57868048, "comment_id": 102161462, "body": "Because both implementation of <code>Service</code> and <code>Transform</code> needs those associated types independently."}], "answers": [{"comments": [{"owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1568113868, "post_id": 57868523, "comment_id": 102163877, "body": "Just do double check if I understand you. The line in my question says that the associated type (<code>Request</code> since there are several) of <code>Service</code> in this particular implementation is a <code>ServiceRequest</code>. The <code>type Request = ServiceRequest</code> in the impl block says that the associated type (<code>Request</code>) of <code>Transform</code> ALSO is a <code>ServiceRequest</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "edited": false, "score": 0, "creation_date": 1568113923, "post_id": 57868523, "comment_id": 102163909, "body": "@evading yup. That&#39;s about it."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1568110117, "creation_date": 1568110117, "answer_id": 57868523, "question_id": 57868048, "link": "https://stackoverflow.com/questions/57868048/how-should-i-understand-a-compilcated-where-clause-when-implementing-actix-middl/57868523#57868523", "title": "How should I understand a compilcated where clause when implementing actix middleware?", "body": "<blockquote>\n  <p>Is it saying that <code>S</code> is bound by the <code>Service</code> trait and in that trait there is a type named <code>Request</code> and in THIS case <code>Request</code> is actually a <code>ServiceRequest</code>?</p>\n</blockquote>\n\n<p>There are two traits, <code>Transform</code> and <code>Service</code> which both have an associated type called <code>Request</code>. These aren't related. </p>\n\n<blockquote>\n  <p>If so, why is there a need to specify <code>type Request = ServiceRequest;</code> in the block?</p>\n</blockquote>\n\n<p>By writing this implementation of <code>Transform</code> for <code>SayHi</code>, you are actually <em>creating</em> that relationship. You have defined what these associated type are, for an implementation that is only valid when all of the conditions in the <code>where</code> clause are met.</p>\n"}], "owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 57868523, "answer_count": 1, "score": 0, "last_activity_date": 1568122827, "creation_date": 1568108454, "last_edit_date": 1568122827, "question_id": 57868048, "link": "https://stackoverflow.com/questions/57868048/how-should-i-understand-a-compilcated-where-clause-when-implementing-actix-middl", "title": "How should I understand a compilcated where clause when implementing actix middleware?", "body": "<p>I'm looking at actix <a href=\"https://github.com/actix/examples/blob/master/middleware/src/simple.rs\" rel=\"nofollow noreferrer\">examples</a> for how to implement a middleware in actix_web. They implement a trait like:</p>\n\n<pre><code>impl&lt;S, B&gt; Transform&lt;S&gt; for SayHi\nwhere\n    S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse&lt;B&gt;;\n    type Error = Error;\n    type InitError = ();\n    type Transform = SayHiMiddleware&lt;S&gt;;\n    type Future = FutureResult&lt;Self::Transform, Self::InitError&gt;;\n\n    fn new_transform(&amp;self, service: S) -&gt; Self::Future {\n        ok(SayHiMiddleware { service })\n    }\n}\n</code></pre>\n\n<p>I'm having some trouble understanding the line:</p>\n\n<pre><code>S: Service&lt;Request = ServiceRequest, Response = ServiceResponse&lt;B&gt;, Error = Error&gt;\n</code></pre>\n\n<p>Is it saying that <code>S</code> is bound by the <code>Service</code> trait and in that trait there is a type named <code>Request</code> and in THIS case <code>Request</code> is actually a <code>ServiceRequest</code>?</p>\n\n<p>If so, why is there a need to specify <code>type Request = ServiceRequest;</code> in the block?</p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1568101315, "post_id": 57866072, "comment_id": 102157452, "body": "Could you please provide a simple example... there&#39;s very less online."}, {"owner": {"reputation": 3308, "user_id": 161250, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/74b00bbfe9ba0f647bb154ed5f923cb4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/161250/alex"}, "reply_to_user": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1568102488, "post_id": 57866072, "comment_id": 102158044, "body": "I have no idea what your <code>&lt;Data Structure&gt;</code> looks like, since you haven&#39;t provided it, but the <code>serde_urlencoded</code> crate only supports primitive types, so if you have more fancy things, you&#39;ll have to come up with your own transformation; <code>x-www-form-urlencoded</code> is just a set of <code>key=value</code> pairs. Anyway, here&#39;s a working sample: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d63d57d557c60210465bcc3d9722594d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3308, "user_id": 161250, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/74b00bbfe9ba0f647bb154ed5f923cb4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/161250/alex"}, "is_accepted": true, "score": 2, "last_activity_date": 1568121114, "last_edit_date": 1568121114, "creation_date": 1568100895, "answer_id": 57866072, "question_id": 57864976, "link": "https://stackoverflow.com/questions/57864976/sending-application-x-www-form-urlencoded-data-in-place-of-json-over-network/57866072#57866072", "title": "Sending &quot;application/x-www-form-urlencoded&quot; data in place of JSON over network", "body": "<p>You can most likely use the <a href=\"https://crates.io/crates/serde_urlencoded\" rel=\"nofollow noreferrer\">serde_urlencoded</a> crate in exactly the same way you did with the JSON.</p>\n\n<p>I have no idea what your <code>&lt;Data Structure&gt;</code> looks like, since you haven't provided it, but the serde_urlencoded crate only supports primitive types, so if you have more fancy things, you'll have to come up with your own transformation; x-www-form-urlencoded is just a set of <code>key=value</code> pairs. Anyway, here's a working sample:</p>\n\n<pre><code>use serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct NetworkData {\n    id: String,\n    status: String,\n    data: u32,\n}\n\nfn main() {\n    let data = NetworkData {\n        id: \"ID\".into(),\n        status: \"Status\".into(),\n        data: 42,\n    };\n    let data = serde_urlencoded::to_string(&amp;data).expect(\"serialize issue\");\n\n    println!(\"{}\", data);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d63d57d557c60210465bcc3d9722594d\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 1, "accepted_answer_id": 57866072, "answer_count": 1, "score": 1, "last_activity_date": 1598647654, "creation_date": 1568096120, "last_edit_date": 1598647654, "question_id": 57864976, "link": "https://stackoverflow.com/questions/57864976/sending-application-x-www-form-urlencoded-data-in-place-of-json-over-network", "title": "Sending &quot;application/x-www-form-urlencoded&quot; data in place of JSON over network", "body": "<p>The definition of struct which I use to serialize over network</p>\n\n<pre><code>pub struct NetworkData {\n    id: String,\n    status: String,\n    details: &lt;Data Structure&gt;,\n}\n</code></pre>\n\n<p>Now there's a function which accepts this structure, serializes it \nand sends over the network.</p>\n\n<pre><code>fn send_data(data: NetworkData ...) -&gt; ... {\n    let data = serde_json::to_string(&amp;data).expect(\"serialize issue\");\n\n    let mut request = Request::new(reqwest::Method::POST, url);\n    *request.body_mut() = Some(data.into());\n\n    self.inner\n        .execute(request)\n        ...\n}\n</code></pre>\n\n<p>Now I want to send \"x-www-form-urlencoded\" data over network which should\nchange this function as follows :-</p>\n\n<pre><code>fn send_data(data: NetworkData ...) -&gt; ... {\n    // How should I change this?????\n    //let data = serde_json::to_string(&amp;data).expect(\"serialize issue\");\n\n    let mut request = Request::new(reqwest::Method::POST, url);\n    let content_type = HeaderValue::from_str(&amp;format!(\"{}\", \"application/x-www-form-urlencoded\",))\n            .expect(\"Header value creation bug\");\n    request\n        .headers_mut()\n        .insert(header::CONTENT_TYPE, content_type);        \n    *request.body_mut() = Some(data.into());\n\n    self.inner\n        .execute(request)\n        ...\n}\n</code></pre>\n\n<p>But how should I organize my \"data\" to fit into this picture.</p>\n"}, {"tags": ["java", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 1, "last_activity_date": 1568120780, "last_edit_date": 1568120780, "creation_date": 1568093225, "answer_id": 57864489, "question_id": 57863919, "link": "https://stackoverflow.com/questions/57863919/how-to-iterate-over-an-enum-insert-it-into-a-vector-then-shuffle-it-in-rust/57864489#57864489", "title": "How to iterate over an enum, insert it into a vector, then shuffle it in Rust?", "body": "<p>The key points are:</p>\n\n<ul>\n<li>bring into scope the required traits for shuffling (<code>SliceRandom</code> for rand version 0.7). </li>\n<li>bring into scope the required types for the <code>enum::iter()</code></li>\n</ul>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"mcve\"\nversion = \"0.1.0\"\nauthors = [\"Svetlin Zarev &lt;svetlin.zarev@xxx.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\nstrum = \"0.15\"\nstrum_macros = \"0.15\"\nrand = \"0.7.0\"\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>use strum_macros::EnumIter; // etc.\nuse strum::IntoEnumIterator;\nuse rand::thread_rng;\nuse rand::seq::SliceRandom;\n\n#[derive(Debug, Copy, Clone,EnumIter)]\nenum Suit {\n    DIAMONDS,\n    HEARTS,\n    CLUBS,\n    SPADES,\n}\n\n#[derive(Debug, Copy, Clone, EnumIter)]\nenum Rank {\n    Ace,\n    King,\n    Queen,\n    Jack,\n}\n\n#[derive(Debug)]\nstruct Card {\n    suit: Suit,\n    rank: Rank,\n}\n\nimpl Card {\n    fn new(suit: Suit, rank: Rank) -&gt; Card {\n        Card { suit, rank }\n    }\n}\n\nfn main() {\n    let mut cards = Vec::&lt;Card&gt;::new();\n\n    for r in Rank::iter() {\n        for s in Suit::iter() {\n            cards.push(Card::new(s, r));\n        }\n    }\n\n    let mut rng = thread_rng();\n    cards.shuffle(&amp;mut rng);\n\n    println!(\"{:?}\", cards);\n}\n</code></pre>\n\n<p>As you can see, it's almost as if in Java. The only difference is that some methods do not come from the structs, but from the interfaces (in Rust these are called traits) and you have to import them in order to be able to use them.</p>\n"}], "owner": {"reputation": 31, "user_id": 11020830, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wXHbS.gif?s=128&g=1", "display_name": "spacecadetmatt", "link": "https://stackoverflow.com/users/11020830/spacecadetmatt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1162, "favorite_count": 0, "closed_date": 1568120981, "accepted_answer_id": 57864489, "answer_count": 1, "score": 0, "last_activity_date": 1568121040, "creation_date": 1568088379, "last_edit_date": 1568120920, "question_id": 57863919, "link": "https://stackoverflow.com/questions/57863919/how-to-iterate-over-an-enum-insert-it-into-a-vector-then-shuffle-it-in-rust", "closed_reason": "Duplicate", "title": "How to iterate over an enum, insert it into a vector, then shuffle it in Rust?", "body": "<p>I'm writing code to initialize a deck with 52 cards and shuffle them. In Java, I use an <code>ArrayList</code> and iterate through the <code>Suit</code> enum and the <code>Rank</code> enum, adding a <code>Card(suit,rank)</code> object as I go along. I then use <code>Collections.shuffle()</code>.</p>\n\n<p>I am trying to port this code to Rust, using vectors and structs. The problem is that I can't iterate enums like in Java. What is the Rust idiomatic way of trying to achieve this result?</p>\n\n<p>I have tried importing strum &amp; strum_macros to get enum iteration, but I am stuck with trying to push structs onto the <code>Vec</code> and then randomly shuffle it.</p>\n\n<p><strong>Java Code</strong></p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public class Deck {\n    private List &lt; Card &gt; aCards = new ArrayList &lt; &gt; ();\n\n    public Deck() {\n        shuffle();\n    }\n    public void shuffle() {\n        aCards.clear();\n        for (Suit suit: Suit.values()) {\n            for (Rank rank: Rank.values()) {\n                aCards.add(new Card(rank, suit));\n            }\n        }\n        Collections.shuffle(aCards);\n    }\n}\n</code></pre>\n\n<p><strong>Rust Attempt</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::card::Card;\nuse crate::rank::Rank;\nuse crate::suit::Suit;\nuse rand::{thread_rng, Rng};\nuse strum::IntoEnumIterator;\n\npub struct Deck {\n    cards: Vec&lt;Card&gt;,\n}\n\nimpl Deck {\n    pub fn shuffle(&amp;mut self) -&gt; () {\n        self.cards.clear();\n        for s in Suit::iter() {\n            for r in Rank::iter() {\n                self.cards.push(Card::new(s, r));\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><strong>struct for suit (rank is similar)</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use strum_macros::*;\n\n#[derive(EnumIter, Debug)]\npub enum Suit {\n    SPADES,\n    DIAMONDS,\n    CLUBS,\n    HEARTS,\n}\n</code></pre>\n\n<p><strong>card struct</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Card {\n    suit: Suit,\n    rank: Rank,\n}\nimpl Card {\n    pub fn new(psuit: Suit, prank: Rank) -&gt; Card {\n        Card {\n            suit: psuit,\n            rank: prank,\n        }\n    }\n}\n</code></pre>\n\n<p>I want to just simply iterate trough two sets of enum variants then shuffle output pairs but this is seemingly much more complicated! I suspect maybe there is a better way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1568085411, "post_id": 57863504, "comment_id": 102152835, "body": "Since you are returning a reference to <code>usize</code>, if your code worked as-is, it would extend the vector and reallocate the memory in the vector while the reference to the <code>usize</code> exists, which would lead to an invalid memory access. If you want to do this, you&#39;d need to return a <code>usize</code> instead of a reference, which means you can&#39;t use the <code>Index</code> trait."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1568107576, "post_id": 57863504, "comment_id": 102160615, "body": "The unsafe block is not sound. Adding to a vector could cause it to reallocate, so the reference could end up as a dangling pointer. This is one of the things that Rust protects you from when methods that mutate take <code>&amp;mut self</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1568108884, "post_id": 57863504, "comment_id": 102161258, "body": "Whatever you do here, it&#39;s going to get very complicated. This should be a hint that you are trying to something strange, and you should rethink why you even need this."}, {"owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "edited": false, "score": 0, "creation_date": 1568124460, "post_id": 57863504, "comment_id": 102170016, "body": "Oh man! Duh! So obvious now that you point it out. I was so focused on the way this is  supposed to be used in the real scenario  that I missed this obvious problem. (See comments to next answer)"}], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "edited": false, "score": 0, "creation_date": 1568124764, "post_id": 57869572, "comment_id": 102170197, "body": "Thanks all for the comments. Very sensible advice indeed. However, this is actually me trying to explain the problem in simpler terms. In reality this should be a proxy to large text data that sit on disk and don&#39;t need to be loaded in memory at once. I only need read-only access to a portion of it at any given time and I wasn&#39;t thinking about concurrent access (yet). Contrary to my simplification, in general I want references to slices of the text, not individual letters, and that&#39;s why I didn&#39;t want to return an owned copy of the elements as (rightfully) suggested in the first comment."}, {"owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "edited": false, "score": 0, "creation_date": 1568124781, "post_id": 57869572, "comment_id": 102170206, "body": "And very importantly, the whole point of my endeavour was to be able to used the Index trait and the syntactic sugar that comes with it. This would simplify things enormously and make the code sooo much nicer to read :( I begin to fear that this won&#39;t be possible... Cheers!"}, {"owner": {"reputation": 6367, "user_id": 6914441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbc12c764b93fa915b8e5384f521fe12?s=128&d=identicon&r=PG&f=1", "display_name": "jferard", "link": "https://stackoverflow.com/users/6914441/jferard"}, "reply_to_user": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "edited": false, "score": 0, "creation_date": 1568127450, "post_id": 57869572, "comment_id": 102171770, "body": "@Paulo So you want read access to slices of a big text by index? 1. Have you thought of memory mapped files (see <a href=\"https://en.wikipedia.org/wiki/Memory-mapped_file\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Memory-mapped_file</a> and <a href=\"https://stackoverflow.com/questions/28516996/how-to-create-and-write-to-memory-mapped-files\" title=\"how to create and write to memory mapped files\">stackoverflow.com/questions/28516996/&hellip;</a>)? The OS would take care for you of the lazy loading 2. Can you elaborate on &quot;simplify things enormously&quot;? Because it does not seem to me that the difference is so import (<code>[i]</code> vs <code>get_or_load(i)</code>)."}, {"owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "edited": false, "score": 0, "creation_date": 1568139468, "post_id": 57869572, "comment_id": 102177322, "body": "@jferad OK, &quot;enormously&quot; might be exaggerated but I mean being able to use the same code on any &quot;indexable&quot; text with subscript syntax would be great. I come from C where this would be like lazy_vec_get_or_load(v, i), so using simply v[i] instead would be neat. I think your suggested get_or_load is basically the get in my first version, which is OK if there is no better way. As for the memory mapped file, I&#39;d seen it, but it seems it doesn&#39;t implement the Index trait which, as I said, was very much the point. So I thought I could craft my own thing but apparently I was wrong. Thanks again!"}], "tags": [], "owner": {"reputation": 6367, "user_id": 6914441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbc12c764b93fa915b8e5384f521fe12?s=128&d=identicon&r=PG&f=1", "display_name": "jferard", "link": "https://stackoverflow.com/users/6914441/jferard"}, "is_accepted": false, "score": 0, "last_activity_date": 1568286327, "last_edit_date": 1568286327, "creation_date": 1568113849, "answer_id": 57869572, "question_id": 57863504, "link": "https://stackoverflow.com/questions/57863504/implementing-indexing-with-interior-mutability/57869572#57869572", "title": "Implementing indexing with interior mutability", "body": "<p><strong>EDIT</strong> Since you provided more info on your goal (lazy access to chunks of a huge file that lies on disk), I update my answer.</p>\n\n<p>You can use (as you tried) cells. I quote the <a href=\"https://doc.rust-lang.org/std/cell/index.html#when-to-choose-interior-mutability\" rel=\"nofollow noreferrer\">doc</a>:</p>\n\n<blockquote>\n  <p>Since cell types enable mutation where it would otherwise be disallowed though, there are occasions when interior mutability might be appropriate, or even must be used, e.g. [...] Implementation details of logically-immutable methods. [...]</p>\n</blockquote>\n\n<p>Here's a piece of code that does the job (note that's very close to what you wrote):</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::ops::Index;\n\n// This is your file\nconst DATA: &amp;str = \"Rust. A language empowering everyone to build reliable and efficient software.\";\n\n#[derive(Debug)]\nstruct LazyVector&lt;'a, 'b&gt; {\n    ref_v: RefCell&lt;&amp;'a mut Vec&lt;&amp;'b str&gt;&gt;\n}\n\nimpl&lt;'a, 'b&gt; LazyVector&lt;'a, 'b&gt; {\n    fn new(v: &amp;'a mut Vec&lt;&amp;'b str&gt;) -&gt; LazyVector&lt;'a, 'b&gt; {\n        LazyVector {\n            ref_v: RefCell::new(v)\n        }\n    }\n\n    /// get or load a chunk of two letters\n    fn get_or_load(&amp;self, i: usize) -&gt; &amp;'b str {\n        let mut v = self.ref_v.borrow_mut();\n        for k in v.len()..=i {\n            v.push(&amp;DATA[k * 2..k * 2 + 2]);\n        }\n        v[i]\n    }\n}\n\nimpl&lt;'a, 'b&gt; Index&lt;usize&gt; for LazyVector&lt;'a, 'b&gt; {\n    type Output = str;\n    fn index(&amp;self, i: usize) -&gt; &amp;Self::Output {\n        self.get_or_load(i)\n    }\n}\n\npub fn main() {\n    let mut v = vec![];\n    let lv = LazyVector::new(&amp;mut v);\n    println!(\"v[5]={}\", &amp;lv[5]); // v[5]=ng\n    println!(\"{:?}\", lv); // LazyVector { ref_v: RefCell { value: [\"Ru\", \"st\", \". \", \"A \", \"la\", \"ng\"] } }\n    println!(\"v[10]={}\", &amp;lv[10]); // v[10]=ow\n    println!(\"{:?}\", lv); // LazyVector { ref_v: RefCell { value: [\"Ru\", \"st\", \". \", \"A \", \"la\", \"ng\", \"ua\", \"ge\", \" e\", \"mp\", \"ow\"] } }\n}\n</code></pre>\n\n<p>The main difference with your try is that the underlying <code>Vec</code> is an external  mutable vector, and that <code>LazyVector</code> gets only a (mutable) ref on this vector. A <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\">RwLock</a> should be the way to handle concurrent access.</p>\n\n<p>However, I wouldn't recommend that solution:</p>\n\n<p>First, your underlying <code>Vec</code> will rapidly grow and become as huge as the file on disk. Hence, you'll need a map instead of a vector and to keep the number of chunks in that map under a given boundary. If you ask for a chunk that is not in memory, you'll have to choose a chunk to remove. That's simply <a href=\"https://en.wikipedia.org/wiki/Paging\" rel=\"nofollow noreferrer\">Paging</a> and the OS is generally better at this game than you (see <a href=\"https://en.wikipedia.org/wiki/Page_replacement_algorithm\" rel=\"nofollow noreferrer\">page replacement algorithm</a>). As I wrote in a comment, <a href=\"https://en.wikipedia.org/wiki/Memory-mapped_file\" rel=\"nofollow noreferrer\">memory mapped files</a> (and maybe <a href=\"https://en.wikipedia.org/wiki/Shared_memory\" rel=\"nofollow noreferrer\">shared memory</a> in case of \"heavy\" processes) would be more efficient: the OS handles the lazy loading of the file and the share of the read only data. R. Sedgewick remark in <em>Algorithms in C</em>, first edition, chapter 13, section \"An Easier Way\", explains why sorting a huge file (bigger than memory) may be easier than one thought:</p>\n\n<blockquote>\n  <p>In a good virtual-memory system, the programmer can address a very large amount of data, leaving to the system the responsibility of making sure that the adressed data is transferred from external to internal storage when needed.</p>\n</blockquote>\n\n<p>Second, see my previous answer below.</p>\n\n<p><strong>PREVIOUS ANSWER</strong></p>\n\n<p>I coded this kind of vector once... in Java. The use case was to represent a very sparse grid (many of\nthe rows where only a few cells wide, but the grid was supposed to have a width of 1024). To avoid\nto have to manually add cells when needed, I created a \"list\" that was doing roughly what you try to achieve (but there was only one default value).</p>\n\n<p>At first, I made my list implement the <code>List</code> interface, but I quickly realized that I had to make a lot of useless (and slow) code not to break the <a href=\"https://en.wikipedia.org/wiki/Liskov_substitution_principle\" rel=\"nofollow noreferrer\">Liskov substitution principle</a>. Worse, the behavior of some methods was misleading regarding to the usual lists (<code>ArrayList</code>, <code>LinkedList</code>, ...).</p>\n\n<p>It seems you are in the same situation: you would like your <code>LazyVector</code> to look like a usual <code>Vec</code>, and that's why you want to implement <code>Index</code> and maybe <code>IndexMut</code> traits. But you are looking for workarounds to achieve this (e.g. <code>unsafe</code> code to match the traits methods signatures).</p>\n\n<p>My advice is: do not try to make <code>LazyVector</code> look like a usual vector, but <em>make it clear that the <code>LazyVector</code> is not a usual vector</em>. This is the <a href=\"https://en.wikipedia.org/wiki/Principle_of_least_astonishment\" rel=\"nofollow noreferrer\">Principle of least astonishment</a>. E.g. replace <code>get</code> (expected to only read the data by the user in good faith) by <code>get_or_extend</code> that makes clear that either you get something, either you create it.\nIf you add a <code>get_or_extend_mut</code> function, you have something that is not very attractive but efficient and predictable:</p>\n\n<pre><code>impl LazyVector {\n    fn new() -&gt; LazyVector { ... }\n\n    fn get_or_extend(&amp;mut self, i: usize) -&gt; &amp;usize { ... }\n\n    fn get_or_extend_mut(&amp;mut self, i: usize) -&gt; &amp;mut usize { ... }\n}\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 140, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1568286327, "creation_date": 1568084768, "question_id": 57863504, "link": "https://stackoverflow.com/questions/57863504/implementing-indexing-with-interior-mutability", "title": "Implementing indexing with interior mutability", "body": "<p>Consider, for the sake of simplicity, that I want to implement an indexable Vector v with n consecutive elements 0,1,...,n-1, i.e. v[i] = i. This vector is supposed to be filled on demand, that is, if v[i] is used and currently the vector contains n &lt; i+1 elements, the values n+1,n+2,...,i are first pushed onto v, and then the reference to v[i] is returned.</p>\n\n<p>Code below works fine.</p>\n\n<pre><code>struct LazyVector {\n    data: Vec&lt;usize&gt;\n}\n\nimpl LazyVector {\n    fn new() -&gt; LazyVector {\n        LazyVector{\n            data: vec![] \n        }\n    }\n    fn get(&amp;mut self, i:usize) -&gt; &amp;usize {\n        for x in self.data.len()..=i {\n            self.data.push(i);\n        }\n        &amp;self.data[i]\n    }\n}\n\n\npub fn main() {\n    let mut v = LazyVector::new();\n    println!(\"v[5]={}\",v.get(5)); // prints v[5]=5\n}\n</code></pre>\n\n<p>However, the code above is just a mock-up of the actual structure I'm trying to implement. In addition to that, (1) I'd like  to be able to use the index operator and, (2) although the vector may actually be modified when accessing a position, I'd like that to be transparent to the user, that is, I'd like to be able to index any position even if I had an immutable reference to v. Immutable references are preferred to prevent other unwanted modifications.</p>\n\n<p>Requirement (1) could be achieved by implementing the Index trait, like so</p>\n\n<pre><code>impl std::ops::Index&lt;usize&gt; for LazyVector {\n    type Output = usize;\n    fn index(&amp;self, i: usize) -&gt; &amp;Self::Output {\n        self.get(i)\n    }\n}\n</code></pre>\n\n<p>However, this does not compile since we need a mutable reference in order to be able to call LazyVector::get. Because of requirement (2) we do not want to make this reference mutable, and even if we did, we couldn't do that since it would violate the interface of the Index trait. I figured that this would make the case for the interior mutability pattern through the RefCell smart pointer (as in Chapter 15 of The Rust Book). So I came up with something like</p>\n\n<pre><code>struct LazyVector {\n    data: std::cell::RefCell&lt;Vec&lt;usize&gt;&gt;\n}\n\nimpl LazyVector {\n    fn new() -&gt; LazyVector {\n        LazyVector{\n            data: std::cell::RefCell::new(vec![]) \n        }\n    }\n\n    fn get(&amp;self, i:usize) -&gt; &amp;usize {\n        let mut mutref = self.data.borrow_mut();\n        for x in mutref.len()..=i {\n            mutref.push(x)\n        }\n        &amp;self.data.borrow()[i] // error: cannot return value referencing a temporary value\n    }\n}\n</code></pre>\n\n<p>However this doesn't work because it tries to return a value referencing the Ref struct returned by borrow() that goes out of scope at the end of LazyVector::get. Finally, to circumvent that, I did something like</p>\n\n<pre><code>struct LazyVector {\n    data: std::cell::RefCell&lt;Vec&lt;usize&gt;&gt;\n}\n\n\nimpl LazyVector {\n    fn new() -&gt; LazyVector {\n        LazyVector{\n            data: std::cell::RefCell::new(vec![]) \n        }\n    }\n\n    fn get(&amp;self, i:usize) -&gt; &amp;usize {\n        let mut mutref = self.data.borrow_mut();\n        for x in mutref.len()..=i {\n            mutref.push(x)\n        }\n        unsafe { // Argh!\n            let ptr = self.data.as_ptr();\n            &amp;std::ops::Deref::deref(&amp;*ptr)[i]\n        }\n    }\n}\n\n\nimpl std::ops::Index&lt;usize&gt; for LazyVector {\n    type Output = usize;\n    fn index(&amp;self, i: usize) -&gt; &amp;Self::Output {\n        self.get(i)\n    }\n}\n\npub fn main() {\n    let v = LazyVector::new();    // Unmutable!\n    println!(\"v[5]={}\",v.get(5)); // prints v[5]=5\n}\n</code></pre>\n\n<p>Now it works as required but, as a newbie, I am not so sure about the unsafe block! I think I am effectively wrapping it with a safe interface, but I'm not sure. So my question is whether that is OK or if there is a better, totally safe way to achieve that.</p>\n\n<p>Thanks for any help.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1568067326, "post_id": 57861624, "comment_id": 102149699, "body": "&quot;Better way&quot; -- in which regard? Can you tell us a bit more about your requirements? I.e. is the size of the struct <code>Game</code> important? Is speed a concern? Or is it fine if each time <code>history</code> is accessed, we check if it&#39;s <code>None</code> first?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 3, "creation_date": 1568071453, "post_id": 57861624, "comment_id": 102150444, "body": "The number one rule of optimisation is that you should never guess about what to optimise.  (In most of the situations your guess will be completely wrong.)  Build your thing, profile it, and then based on your measurements find out 1. if you need to optimise anything at all, 2. if you do, what exactly you have to optimise, 3. if you find out what you need to optimise whether it make sense to solve it with conditional compilation (which is the behaviour you just described)."}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 3, "creation_date": 1568071466, "post_id": 57861624, "comment_id": 102150448, "body": "Are you looking for a compile-time option, or a runtime one?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1568075586, "post_id": 57861624, "comment_id": 102151175, "body": "<code>Option&lt;Vec&lt;T&gt;&gt;</code> takes the same amount of space as <code>Vec&lt;T&gt;</code> (<a href=\"https://stackoverflow.com/q/16504643/155423\">What is the overhead of Rust&#39;s Option type?</a>) and it&#39;s rare to see it because usually you don&#39;t need to distinguish between an empty <code>Vec</code> and a <code>Vec</code> that isn&#39;t present."}, {"owner": {"reputation": 35, "user_id": 6397904, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ujNMb.jpg?s=128&g=1", "display_name": "S. Blaise", "link": "https://stackoverflow.com/users/6397904/s-blaise"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1568103659, "post_id": 57861624, "comment_id": 102158567, "body": "@LukasKalbertodt A better way like <a href=\"https://softwareengineering.stackexchange.com/questions/356262/handling-optional-features\" title=\"handling optional features\">softwareengineering.stackexchange.com/questions/356262/&hellip;</a> where they propose the strategy pattern."}, {"owner": {"reputation": 35, "user_id": 6397904, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ujNMb.jpg?s=128&g=1", "display_name": "S. Blaise", "link": "https://stackoverflow.com/users/6397904/s-blaise"}, "reply_to_user": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 0, "creation_date": 1568103995, "post_id": 57861624, "comment_id": 102158731, "body": "@Acorn a compilation one."}, {"owner": {"reputation": 35, "user_id": 6397904, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ujNMb.jpg?s=128&g=1", "display_name": "S. Blaise", "link": "https://stackoverflow.com/users/6397904/s-blaise"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568104035, "post_id": 57861624, "comment_id": 102158756, "body": "@Shepmaster Good to know ! But for me it&#39;s more a way to distinguish if the &quot;feature&quot; is enabled or not."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568121672, "post_id": 57861624, "comment_id": 102168278, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/27632660/155423\">How do I use conditional compilation with <code>cfg</code> and Cargo?</a> and  If not, please <b><a href=\"https://stackoverflow.com/posts/57861624/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "is_accepted": true, "score": 1, "last_activity_date": 1568142973, "last_edit_date": 1568142973, "creation_date": 1568118676, "answer_id": 57870881, "question_id": 57861624, "link": "https://stackoverflow.com/questions/57861624/how-to-design-a-rust-struct-with-optional-features-decided-at-compile-time/57870881#57870881", "title": "How to design a Rust struct with optional features decided at compile time?", "body": "<p>Since you mentioned in the comments that you want a compile-time answer, you can simply compile the field whenever you choose:</p>\n\n<pre><code>struct Game {    \n    #[cfg(foo)]\n    history: Vec&lt;SomeType&gt;,\n\n    ...\n}\n</code></pre>\n\n<p>Similarly, you can compile out the code using the field.</p>\n"}], "owner": {"reputation": 35, "user_id": 6397904, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ujNMb.jpg?s=128&g=1", "display_name": "S. Blaise", "link": "https://stackoverflow.com/users/6397904/s-blaise"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 57870881, "answer_count": 1, "score": 1, "last_activity_date": 1568142973, "creation_date": 1568065889, "last_edit_date": 1568121544, "question_id": 57861624, "link": "https://stackoverflow.com/questions/57861624/how-to-design-a-rust-struct-with-optional-features-decided-at-compile-time", "title": "How to design a Rust struct with optional features decided at compile time?", "body": "<p>I have a structure <code>Game</code> and I want to be able to build an object but with the possibility to remove features at compile time, to optimize memory or processor cycles. </p>\n\n<pre><code>struct Game {\n    history: Vec&lt;SomeType&gt;,\n}\n\nimpl Game {\n    fn new() {}\n\n    fn new_opti() {}\n}\n</code></pre>\n\n<p>For example, in this structure the optimized version would have no history.  Here, I replaced <code>history</code> with an <code>Option&lt;Vec&lt;SomeType&gt;&gt;</code> and in the optimized version I put a <code>None</code> and I change the behavior of the history dependent methods, and I disable some methods. </p>\n\n<p>I think this is a hacky way, but what would be a better way? There is no need to keep only one struct.</p>\n"}, {"tags": ["rust", "shutdown-hook"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1568060769, "post_id": 57860613, "comment_id": 102147760, "body": "You should not be relying on a program terminating the way you want: the user might kill it, the computer might be powered off, etc. <code>shutdown_hooks</code> uses <code>atexit</code>, which is about as good as it gets on POSIX systems. It will run on most panics, but not on eg. segfaults."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1568098771, "last_edit_date": 1568098771, "creation_date": 1568060417, "answer_id": 57860708, "question_id": 57860613, "link": "https://stackoverflow.com/questions/57860613/how-to-add-a-shutdown-hook-to-a-rust-program/57860708#57860708", "title": "How to add a shutdown hook to a Rust program?", "body": "<p>In the general case, it's impossible. Even ignoring effects from outside of the program (as <a href=\"https://stackoverflow.com/questions/57860613/how-to-add-a-shutdown-hook-to-a-rust-program/57860708#comment102147760_57860613\">mentioned by mcarton</a>), whoever compiles the final binary can choose if a panic actually triggers stack unwinding or if it simply aborts the program. In the latter case, there's nothing you can do. </p>\n\n<p>In the case of unwinding panic or normal exit, you can implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\" rel=\"nofollow noreferrer\"><code>Drop</code></a> and use the conventional aspects of <a href=\"https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization\" rel=\"nofollow noreferrer\">RAII</a>:</p>\n\n<pre><code>struct Cleanup;\n\nimpl Drop for Cleanup {\n    fn drop(&amp;mut self) {\n        eprintln!(\"Doing some final cleanup\");\n    }\n}\n\nfn main() {\n    let _cleanup = Cleanup;\n\n    panic!(\"Oh no!\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'Oh no!', src/main.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nDoing some final cleanup\n</code></pre>\n\n<p>It appears that Java's shutdown hooks allow running multiple pieces of code in parallel in threads. You could do something similar with some small modifications:</p>\n\n<pre><code>use std::{\n    sync::{Arc, Condvar, Mutex},\n    thread,\n};\n\n#[derive(Debug, Default)]\nstruct Cleanup {\n    hooks: Vec&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    run: Arc&lt;Mutex&lt;bool&gt;&gt;,\n    go: Arc&lt;Condvar&gt;,\n}\n\nimpl Cleanup {\n    fn add(&amp;mut self, f: impl FnOnce() + Send + 'static) {\n        let run = self.run.clone();\n        let go = self.go.clone();\n\n        let t = thread::spawn(move || {\n            let mut run = run.lock().unwrap();\n\n            while !*run {\n                run = go.wait(run).unwrap();\n            }\n\n            f();\n        });\n        self.hooks.push(t);\n    }\n}\n\nimpl Drop for Cleanup {\n    fn drop(&amp;mut self) {\n        eprintln!(\"Starting final cleanup\");\n\n        *self.run.lock().unwrap() = true;\n        self.go.notify_all();\n\n        for h in self.hooks.drain(..) {\n            h.join().unwrap();\n        }\n\n        eprintln!(\"Final cleanup complete\");\n    }\n}\n\nfn main() {\n    let mut cleanup = Cleanup::default();\n\n    cleanup.add(|| {\n        eprintln!(\"Cleanup #1\");\n    });\n\n    cleanup.add(|| {\n        eprintln!(\"Cleanup #2\");\n    });\n\n    panic!(\"Oh no!\");\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43441047/155423\">What&#39;s the best way to register a function to run during an unexpected exit of a Rust program?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50081239/155423\">Is there a way to tell the Rust compiler to call drop on partially-initialized array elements when handling a panic?</a></li>\n</ul>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1068, "favorite_count": 0, "accepted_answer_id": 57860708, "answer_count": 1, "score": 2, "last_activity_date": 1568098771, "creation_date": 1568059789, "last_edit_date": 1568060191, "question_id": 57860613, "link": "https://stackoverflow.com/questions/57860613/how-to-add-a-shutdown-hook-to-a-rust-program", "title": "How to add a shutdown hook to a Rust program?", "body": "<p>I'm writing a Rust program which needs to save some data at the end of its execution, whatever happens.</p>\n\n<p>In the Java world, I would do that with a <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)\" rel=\"nofollow noreferrer\">shutdown hook</a>. There is a crate, aptly called <a href=\"https://docs.rs/shutdown_hooks/\" rel=\"nofollow noreferrer\">shutdown_hooks</a>, but it seems only able to register <code>extern \"C\"</code> functions (and I'm not totally sure it will run on <code>panic!(...)</code>).</p>\n\n<p>How can I implement a shutdown hook that triggers on normal exit as well on panic?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1568049825, "post_id": 57858548, "comment_id": 102143347, "body": "You want <code>if i &gt; 4</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568050023, "post_id": 57858548, "comment_id": 102143429, "body": "Having different types checked at compile time is the <i>entire purpose</i> of a statically typed language."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1568050152, "post_id": 57858548, "comment_id": 102143483, "body": "I agree with SvenMarnach; this is just a typo, and you meant <code>i</code> instead of <code>num_of_books</code>. I recommend shadowing the variable in this scenario: <code>match num_of_books.parse::&lt;u32&gt;() {         Ok(num_of_books) =&gt; {</code>"}, {"owner": {"reputation": 13, "user_id": 8998423, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48d2e742a90a2d05fa922d6bf3c46b46?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Gambrell", "link": "https://stackoverflow.com/users/8998423/chris-gambrell"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568052994, "post_id": 57858548, "comment_id": 102144652, "body": "Thanks for the prompt responses. I feel like a fool.  @Shepmaster And I knew that :P"}], "answers": [{"comments": [{"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 1, "creation_date": 1568071805, "post_id": 57859963, "comment_id": 102150502, "body": "&quot;<i>Rust has pointed out what would be a runtime error in C++ at compile time.</i>&quot; No. Any statically typed language (including C++) reports the error at compile-time."}, {"owner": {"reputation": 191, "user_id": 2480129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/681cf17a49fa99ff9aa2289734aafac2?s=128&d=identicon&r=PG", "display_name": "Alex Hansen", "link": "https://stackoverflow.com/users/2480129/alex-hansen"}, "reply_to_user": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 0, "creation_date": 1568072954, "post_id": 57859963, "comment_id": 102150712, "body": "This is true, it has been a while since I used c++.  Such overloaded comparisons are now forbidden with the message: <code>ISO C++ forbids comparison between pointer and integer</code>"}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 0, "creation_date": 1568073535, "post_id": 57859963, "comment_id": 102150806, "body": "Note that in C++ you would be using <code>std::string</code>, <code>std::string_view</code> and the like, not a pointer."}, {"owner": {"reputation": 13, "user_id": 8998423, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48d2e742a90a2d05fa922d6bf3c46b46?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Gambrell", "link": "https://stackoverflow.com/users/8998423/chris-gambrell"}, "edited": false, "score": 0, "creation_date": 1568134032, "post_id": 57859963, "comment_id": 102175187, "body": "Marking yours as correct since they other guys didnt write out an answer"}], "tags": [], "owner": {"reputation": 191, "user_id": 2480129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/681cf17a49fa99ff9aa2289734aafac2?s=128&d=identicon&r=PG", "display_name": "Alex Hansen", "link": "https://stackoverflow.com/users/2480129/alex-hansen"}, "is_accepted": true, "score": 1, "last_activity_date": 1568073029, "last_edit_date": 1568073029, "creation_date": 1568056453, "answer_id": 57859963, "question_id": 57858548, "link": "https://stackoverflow.com/questions/57858548/why-is-there-a-mismatched-types-error-when-comparing-a-value-after-parsing-it-fr/57859963#57859963", "title": "Why is there a mismatched types error when comparing a value after parsing it from a string?", "body": "<p>Your problem is actually due to using the wrong variable in your match branches. This would be a compile-time error in any statically typed language.</p>\n\n<p>When you pattern match on <code>Ok(i)</code> you are saying \"there is some variable wrapped within an <code>Ok</code> -- I am going to call this variable <code>i</code> and do something with it inside of this match branch scope.\"</p>\n\n<p>What you want is:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut input_text = String::new();\n    io::stdin()\n        .read_line(&amp;mut input_text)\n        .expect(\"Failed to read line\");\n\n    let num_of_books = input_text.trim();\n    match num_of_books.parse::&lt;u32&gt;() {\n        Ok(i) =&gt; {\n            if i &gt; 4 {\n                println!(\"Wow, you read a lot!\");\n            } else {\n                println!(\"You're not an avid reader!\");\n            }\n        }\n        Err(..) =&gt; println!(\"This was not an integer.\"),\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=929ca9defbff58e771e8d9131a7d9555\" rel=\"nofollow noreferrer\">playground link</a></p>\n"}], "owner": {"reputation": 13, "user_id": 8998423, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48d2e742a90a2d05fa922d6bf3c46b46?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Gambrell", "link": "https://stackoverflow.com/users/8998423/chris-gambrell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 57859963, "answer_count": 1, "score": 0, "last_activity_date": 1568073029, "creation_date": 1568049655, "last_edit_date": 1568049992, "question_id": 57858548, "link": "https://stackoverflow.com/questions/57858548/why-is-there-a-mismatched-types-error-when-comparing-a-value-after-parsing-it-fr", "title": "Why is there a mismatched types error when comparing a value after parsing it from a string?", "body": "<p>I don't understand why I get a type mismatch error when comparing two values after a successful parse. Most of my work has been done using dynamic languages so maybe this is throwing me off. Would this happen in another language such a C++ or C#?</p>\n\n<p>This code is invalid.</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut input_text = String::new();\n    io::stdin()\n        .read_line(&amp;mut input_text)\n        .expect(\"Failed to read line\");\n\n    let num_of_books = input_text.trim();\n    match num_of_books.parse::&lt;u32&gt;() {\n        Ok(i) =&gt; {\n            if num_of_books &gt; 4 {\n                println!(\"Wow, you read a lot!\");\n            } else {\n                println!(\"You're not an avid reader!\");\n            }\n        }\n        Err(..) =&gt; println!(\"This was not an integer.\"),\n    };\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:31\n   |\n12 |             if num_of_books &gt; 4 {\n   |                               ^ expected &amp;str, found integer\n   |\n   = note: expected type `&amp;str`\n              found type `{integer}`\n</code></pre>\n\n<p>While this code is valid.</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut input_text = String::new();\n    io::stdin()\n        .read_line(&amp;mut input_text)\n        .expect(\"Failed to read line\");\n\n    let num_of_books = input_text.trim();\n    match num_of_books.parse::&lt;u32&gt;() {\n        Ok(i) =&gt; {\n            if num_of_books &gt; \"4\" {\n                println!(\"Wow, you read a lot!\");\n            } else {\n                println!(\"You're not an avid reader!\");\n            }\n        }\n        Err(..) =&gt; println!(\"This was not an integer.\"),\n    };\n}\n</code></pre>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1568053084, "post_id": 57858151, "comment_id": 102144686, "body": "<code>String</code> doesn&#39;t have a lifetime, so it would just work. What errors did you have when you tried?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568053930, "post_id": 57858151, "comment_id": 102145074, "body": "Please note how I&#39;ve edited your question to <i>show</i> the code you&#39;ve tried, as well as copying in the <i>entire error message</i>. Please take care to provide information in similar ways for all future questions as it&#39;s a very effective way to communicate."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1568056436, "last_edit_date": 1568056436, "creation_date": 1568054304, "answer_id": 57859548, "question_id": 57858151, "link": "https://stackoverflow.com/questions/57858151/how-do-i-perform-a-replacement-using-a-formatted-string-from-a-regex-capture-gro/57859548#57859548", "title": "How do I perform a replacement using a formatted string from a regex capture group?", "body": "<p>Note in the error message:</p>\n\n<blockquote>\n  <p>expected <code>&amp;str</code></p>\n</blockquote>\n\n<p>It expects a <code>&amp;str</code> because that's the first type returned by your closure:</p>\n\n<blockquote>\n<pre><code>return \" \";\n</code></pre>\n</blockquote>\n\n<p>A closure / function can have only one return type, not two.</p>\n\n<p>The simplest fix is to return a <code>String</code> in both cases:</p>\n\n<pre><code>let res = rgx.replace_all(string, |caps: &amp;Captures| {\n    if caps.get(1).is_some() {\n        return String::from(\" \");\n    }\n    let m = caps.get(2).unwrap();\n    format!(\"cmd: {}\", m.as_str())\n});\n</code></pre>\n\n<p>To be slightly more efficient, you can avoid the <code>String</code> allocation for the space character:</p>\n\n<pre><code>use std::borrow::Cow;\n</code></pre>\n\n<pre><code>let res = rgx.replace_all(string, |caps: &amp;Captures| {\n    if caps.get(1).is_some() {\n        return Cow::from(\" \");\n    }\n    let m = caps.get(2).unwrap();\n    Cow::from(format!(\"cmd: {}\", m.as_str()))\n});\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dba4289e1630fa2d9b6f9f76b7750ed8\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I've also replaced the <code>match</code> with the <code>=&gt; ()</code> arm paired with the <code>unreachable!</code> with the shorter <code>unwrap</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39135477/155423\">Cannot use `replace_all` from the regex crate: expected (), found String</a></li>\n<li><a href=\"https://stackoverflow.com/q/31240091/155423\">Using str and String interchangably</a></li>\n<li><a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a></li>\n</ul>\n"}], "owner": {"reputation": 248, "user_id": 6722004, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aceadeca7fb91acde4c78669fe7706f0?s=128&d=identicon&r=PG&f=1", "display_name": "ruser9575ba6f", "link": "https://stackoverflow.com/users/6722004/ruser9575ba6f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 57859548, "answer_count": 1, "score": 0, "last_activity_date": 1568056436, "creation_date": 1568047680, "last_edit_date": 1568055918, "question_id": 57858151, "link": "https://stackoverflow.com/questions/57858151/how-do-i-perform-a-replacement-using-a-formatted-string-from-a-regex-capture-gro", "title": "How do I perform a replacement using a formatted string from a regex capture group?", "body": "<p>I am doing multiple replacements at once using the regex crate:</p>\n\n<pre><code>extern crate regex;\n\nuse regex::{Captures, Regex};\n\nfn transform(string: &amp;str) {\n    let rgx = Regex::new(r\"(\\n)|(/\\w+)\").unwrap();\n    let res = rgx.replace_all(string, |caps: &amp;Captures| {\n        if caps.get(1).is_some() {\n            return \" \";\n        }\n        match caps.get(2).map(|m: regex::Match| m.as_str()) {\n            Some(z) =&gt; return \"nope\", // how to return formatted z instead?\n            None =&gt; (),\n        }\n        unreachable!();\n    });\n    println!(\"{}\", res);\n}\n\nfn main() {\n    transform(\"no errors\");\n    transform(\"big\\nbad\\n/string\");\n}\n</code></pre>\n\n<p>Output as expected:</p>\n\n<pre><code>no errors\nbig bad nope\n</code></pre>\n\n<p>Instead of \"nope\", I would like to return <code>z</code> formatted in some way instead. <code>format!</code> doesn't seem like it can be used here due to <code>String</code> / lifetime issues:</p>\n\n<pre><code>match caps.get(2).map(|m: regex::Match| m.as_str()) {\n    Some(z) =&gt; return format!(\"cmd: {}\", z),\n    None =&gt; (),\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:12:31\n   |\n12 |             Some(z) =&gt; return format!(\"cmd: {}\", z),\n   |                               ^^^^^^^^^^^^^^^^^^^^^ expected &amp;str, found struct `std::string::String`\n   |\n   = note: expected type `&amp;str`\n              found type `std::string::String`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>What should be done instead?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568046341, "post_id": 57857832, "comment_id": 102141860, "body": "You cannot do like that. Use <code>Vec&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;</code>"}, {"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568046533, "post_id": 57857832, "comment_id": 102141941, "body": "@FrenchBoiethios - thanks - as the <code>Graph</code> type or the <code>edges</code> type? Or should they both have that type?"}, {"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568046874, "post_id": 57857832, "comment_id": 102142105, "body": "And any way without going to <code>RefCell</code>, which I believe loses the safety guarantees I&#39;d like from Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568051581, "post_id": 57857832, "comment_id": 102144072, "body": "See also <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1568051620, "post_id": 57857832, "comment_id": 102144088, "body": "@NeilMitchell <code>RefCell</code> does not lose the safety guarantees, but it does move them from compile time to run time."}], "answers": [{"comments": [{"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "edited": false, "score": 0, "creation_date": 1568054338, "post_id": 57858056, "comment_id": 102145237, "body": "That&#39;s a great link!"}], "tags": [], "owner": {"reputation": 943, "user_id": 6423998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ELwqByL1DRk/AAAAAAAAAAI/AAAAAAAACJA/iiaY9iDLjpE/photo.jpg?sz=128", "display_name": "Dylan McNamee", "link": "https://stackoverflow.com/users/6423998/dylan-mcnamee"}, "is_accepted": false, "score": 1, "last_activity_date": 1568047196, "creation_date": 1568047196, "answer_id": 57858056, "question_id": 57857832, "link": "https://stackoverflow.com/questions/57857832/implement-a-graph-structure-in-rust/57858056#57858056", "title": "Implement a graph structure in Rust", "body": "<p>As soon as more than one structure can point to one of your Nodes, you'll lose the \"one owner\" world of Rust's memory guarantees, and you'll either need something like an Rc, or more esoterically, a weakref. I totally suggest reading <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">https://rust-unofficial.github.io/too-many-lists/</a> to learn the many ins and outs of this territory. </p>\n"}], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 497, "favorite_count": 0, "closed_date": 1568047752, "answer_count": 1, "score": 0, "last_activity_date": 1568047812, "creation_date": 1568046254, "question_id": 57857832, "link": "https://stackoverflow.com/questions/57857832/implement-a-graph-structure-in-rust", "closed_reason": "Duplicate", "title": "Implement a graph structure in Rust", "body": "<p>I'm trying to represent a graph in Rust using the type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;'a&gt; {\n    edges: Vec&lt;&amp;'a Node&lt;'a&gt;&gt;,\n}\ntype Graph&lt;'a&gt; = Vec&lt;Node&lt;'a&gt;&gt;;\n</code></pre>\n\n<p>A <code>Graph</code> has the constraint that all the nodes point at other nodes in the same vector. I can create a singleton graph:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn createSingleton&lt;'a&gt;() -&gt; Graph&lt;'a&gt; {\n    let mut items: Graph&lt;'a&gt; = Vec::new();\n    items.push(Node { edges: Vec::new() });\n    return items;\n}\n</code></pre>\n\n<p>But when I try and create a graph with two nodes, where one points at the other:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn createLink&lt;'a&gt;() -&gt; Graph&lt;'a&gt; {\n    let mut items: Graph&lt;'a&gt; = Vec::new();\n    items.push(Node { edges: Vec::new() });\n    items.push(Node { edges: vec![&amp;items[0]] });\n    return items;\n}\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre><code>cannot borrow `items` as mutable because it is also borrowed as immutable\n</code></pre>\n\n<p>In particular the <code>&amp;items[0]</code> is an immutable borrow, and the second <code>items.push</code> seems to be a mutable borrow. Is it possible to construct the memory layout I desire? If so, how?</p>\n"}, {"tags": ["rust", "traits", "rc", "refcell"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1568040923, "post_id": 57856047, "comment_id": 102139277, "body": "Related, but perhaps not quite duplicates: <a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a> and <a href=\"https://stackoverflow.com/questions/51349577/how-to-borrow-the-t-from-a-refcellt-as-a-reference\">How to borrow the T from a RefCell&lt;T&gt; as a reference?</a>. Note that both of these are solved by a method that <i>returns a smart pointer</i> implementing <code>Deref</code>, not by simply implementing <code>Deref</code> for the main type (<code>ShyObject</code> in your case)."}], "answers": [{"comments": [{"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1568040508, "post_id": 57856338, "comment_id": 102138997, "body": "Is there an alternate way to use Deref to facilitate delegation? Some magic with lifetimes?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 2, "creation_date": 1568040672, "post_id": 57856338, "comment_id": 102139116, "body": "@PaulChernoch Lifetime annotations don&#39;t change how long things live - they just describe to the compiler what lifetime constraints you want. If you want impossible constraints then no annotations will help."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 1, "creation_date": 1568040676, "post_id": 57856338, "comment_id": 102139120, "body": "@PaulChernoch Nope, by definition you cannot."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1568040747, "last_edit_date": 1568040747, "creation_date": 1568040310, "answer_id": 57856338, "question_id": 57856047, "link": "https://stackoverflow.com/questions/57856047/how-can-i-implement-deref-for-a-struct-that-holds-an-rcrefcelltrait/57856338#57856338", "title": "How can I implement Deref for a struct that holds an Rc&lt;Refcell&lt;Trait&gt;&gt;?", "body": "<p>You cannot do that. <code>borrow</code> creates <a href=\"https://doc.rust-lang.org/std/cell/struct.Ref.html\" rel=\"nofollow noreferrer\">a new struct</a> that allows <code>RefCell</code> to track the borrow. You're then not allowed to return a borrow to this <code>Ref</code>, because it is a local variable.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1568041751, "last_edit_date": 1568041751, "creation_date": 1568040545, "answer_id": 57856417, "question_id": 57856047, "link": "https://stackoverflow.com/questions/57856047/how-can-i-implement-deref-for-a-struct-that-holds-an-rcrefcelltrait/57856417#57856417", "title": "How can I implement Deref for a struct that holds an Rc&lt;Refcell&lt;Trait&gt;&gt;?", "body": "<p>You can't. <code>RefCell::borrow</code> returns a <code>Ref&lt;T&gt;</code>, not a <code>&amp;T</code>. If you try to do this in a method then you will need to first borrow the <code>Ref&lt;T&gt;</code> but it will go out of scope.</p>\n\n<p>Instead of implementing <code>Deref</code>, you could have a method that returns something that does:</p>\n\n<pre><code>impl ShyObject {\n    fn as_deref(&amp;self) -&gt; impl Deref&lt;Target = dyn Display&gt; {\n        self.association.borrow()\n    }\n}\n</code></pre>\n\n<p>Otherwise, since you only want to expose the <code>Display</code> implementation of the inner data anyway, you can workaround it by actually dereferencing a different type which delegates:</p>\n\n<pre><code>pub struct ShyObject {\n    association: Assocation&lt;dyn Display&gt;,\n}\n\nstruct Assocation&lt;T: ?Sized&gt;(Rc&lt;RefCell&lt;T&gt;&gt;);\n\nimpl&lt;T: Display + ?Sized&gt; fmt::Display for Assocation&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.0.borrow())\n    }\n}\n\nimpl Deref for ShyObject {\n    type Target = dyn Display + 'static;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;self.association\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 536, "favorite_count": 0, "accepted_answer_id": 57856417, "answer_count": 2, "score": 3, "last_activity_date": 1568041751, "creation_date": 1568039367, "last_edit_date": 1568040719, "question_id": 57856047, "link": "https://stackoverflow.com/questions/57856047/how-can-i-implement-deref-for-a-struct-that-holds-an-rcrefcelltrait", "title": "How can I implement Deref for a struct that holds an Rc&lt;Refcell&lt;Trait&gt;&gt;?", "body": "<p>My goal is to delegate method calls against my struct to a Trait's methods, where the Trait object is inside an <code>Rc</code> of <code>RefCell</code>.</p>\n\n<p>I tried to follow the advice from this question:\n<a href=\"https://stackoverflow.com/questions/52124007/how-can-i-obtain-an-a-reference-from-a-rcrefcella?rq=1\">How can I obtain an &amp;A reference from a Rc&lt;RefCell&lt;A&gt;&gt;?</a></p>\n\n<p>I get a compile error.</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\nuse std::fmt::*;\nuse std::ops::Deref;\n\npub struct ShyObject {\n    pub association: Rc&lt;RefCell&lt;dyn Display&gt;&gt;\n}\n\nimpl Deref for ShyObject {\n    type Target = dyn Display;\n    fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;(dyn Display + 'static) {\n        &amp;*self.association.borrow()\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Here is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing temporary value\n  --&gt; src/main.rs:13:9\n   |\n13 |         &amp;*self.association.borrow()\n   |         ^^-------------------------\n   |         | |\n   |         | temporary value created here\n   |         returns a value referencing data owned by the current function\n</code></pre>\n\n<p>My example uses <code>Display</code> as the trait; in reality I have a Trait with a dozen methods. I am trying to avoid the boilerplate of having to implement all those methods and just burrow down to the Trait object in each call.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 481, "user_id": 535315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9c0bac3779514546847f9e4405d6300?s=128&d=identicon&r=PG", "display_name": "Juan Vidal", "link": "https://stackoverflow.com/users/535315/juan-vidal"}, "is_accepted": false, "score": 0, "last_activity_date": 1579562429, "last_edit_date": 1579562429, "creation_date": 1578491627, "answer_id": 59647393, "question_id": 57855858, "link": "https://stackoverflow.com/questions/57855858/maxminddb-rust-get-value-of-country-for-certain-language/59647393#59647393", "title": "maxminddb-rust, get value of country for certain language", "body": "<p>You could have a look at how the tests are written and it will give you some idea how to extract the information you are looking for:</p>\n\n<p><a href=\"https://github.com/oschwald/maxminddb-rust/blob/master/src/maxminddb/reader_test.rs\" rel=\"nofollow noreferrer\">https://github.com/oschwald/maxminddb-rust/blob/master/src/maxminddb/reader_test.rs</a></p>\n\n<p>(<em>actually, after looking at the tests I didn't find any example extracting what you are looking for</em>)</p>\n\n<p>That should return what you expect:</p>\n\n<pre><code>let country_name = geoip2_country.country\n                    .and_then(|cy| cy.names)\n                    .and_then(|n| n.get(\"en\")\n                    .map(String::from));\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 12041889, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ff0ee778fee0e3a83e620e9c07d0d?s=128&d=identicon&r=PG&f=1", "display_name": "George Wilson", "link": "https://stackoverflow.com/users/12041889/george-wilson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1579562429, "creation_date": 1568038665, "question_id": 57855858, "link": "https://stackoverflow.com/questions/57855858/maxminddb-rust-get-value-of-country-for-certain-language", "title": "maxminddb-rust, get value of country for certain language", "body": "<p>I decided to start learning Rust, I haven't finished their book yet but I am trying to build and run other projects so I can learn from the source code. I am now interested in maxmind-rust crate and specifically I want to retrieve country, city and asn values from the .mmdb file.</p>\n\n<p>I tried to convert struct <code>maxmind::geoip2::Country</code> to string and use json crate but resulted in errors that I couldn't fix myself.</p>\n\n<p>The code used:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use maxminddb::geoip2;\n\nuse std::net::IpAddr;\nuse std::str::FromStr;\n\nfn main()\n{\n    let mmdb_file = maxminddb::Reader::open(\"C:\\\\path\\\\to\\\\GeoLite2-City.mmdb\").unwrap();\n    let ip_addr: IpAddr = FromStr::from_str(\"8.8.8.8\").unwrap();\n    let geoip2_country: geoip2::Country = mmdb_file.lookup(ip_addr).unwrap();\n    println!(\"{:?}\", geoip2_country);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>Country\n{\n    continent: Some(Continent\n    {\n        code: Some(\"NA\"),\n        geoname_id: Some(6255149),\n        names: Some(\n        {\n            \"de\": \"Nordamerika\",\n            \"en\": \"North America\",\n            \"es\": \"Norteam?rica\",\n            \"fr\": \"Am?rique du Nord\",\n            \"ja\": \"?????\",\n            \"pt-BR\": \"Am?rica do Norte\",\n            \"ru\": \"???????? ???????\",\n            \"zh-CN\": \"???\"\n        })\n    }),\n    country: Some(Country\n    {\n        geoname_id: Some(6252001),\n        iso_code: Some(\"US\"),\n        names: Some(\n        {\n            \"de\": \"USA\",\n            \"en\": \"United States\",\n            \"es\": \"Estados Unidos\",\n            \"fr\": \"?tats-Unis\",\n            \"ja\": \"???????\",\n            \"pt-BR\": \"Estados Unidos\",\n            \"ru\": \"???\",\n            \"zh-CN\": \"??\"\n        })\n    }),\n    registered_country: Some(Country\n    {\n        geoname_id: Some(6252001),\n        iso_code: Some(\"US\"),\n        names: Some(\n        {\n            \"de\": \"USA\",\n            \"en\": \"United States\",\n            \"es\": \"Estados Unidos\",\n            \"fr\": \"?tats-Unis\",\n            \"ja\": \"???????\",\n            \"pt-BR\": \"Estados Unidos\",\n            \"ru\": \"???\",\n            \"zh-CN\": \"??\"\n        })\n    }),\n    represented_country: None,\n    traits: None\n}\n</code></pre>\n\n<p>which is the maxminddb::geoip2::Country struct (<a href=\"http://oschwald.github.io/maxminddb-rust/maxminddb/geoip2/struct.Country.html\" rel=\"nofollow noreferrer\">http://oschwald.github.io/maxminddb-rust/maxminddb/geoip2/struct.Country.html</a>)</p>\n\n<p>Changing the last line of code to </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"{:?}\", geoip2_country.country);\n</code></pre>\n\n<p>outputs only the <code>country</code> field:</p>\n\n<pre><code>country: Some(Country\n{\n    geoname_id: Some(6252001),\n    iso_code: Some(\"US\"),\n    names: Some(\n    {\n        \"de\": \"USA\",\n        \"en\": \"United States\",\n        \"es\": \"Estados Unidos\",\n        \"fr\": \"?tats-Unis\",\n        \"ja\": \"???????\",\n        \"pt-BR\": \"Estados Unidos\",\n        \"ru\": \"???\",\n        \"zh-CN\": \"??\"\n    })\n}),\n</code></pre>\n\n<p>But looking at the structure of maxminddb::geoip2::model::Country (<a href=\"http://oschwald.github.io/maxminddb-rust/maxminddb/geoip2/model/struct.Country.html\" rel=\"nofollow noreferrer\">http://oschwald.github.io/maxminddb-rust/maxminddb/geoip2/model/struct.Country.html</a>), I am very confused as to how I can retrieve from this struct and its pair (language_code, country_name) if I wanted to get the name of country for \"en\" key.</p>\n"}, {"tags": ["error-handling", "rust", "type-conversion", "traits"], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": false, "score": 4, "last_activity_date": 1568031844, "last_edit_date": 1568031844, "creation_date": 1568031155, "answer_id": 57853827, "question_id": 57853503, "link": "https://stackoverflow.com/questions/57853503/how-does-the-operator-interact-with-the-from-trait/57853827#57853827", "title": "How does the ? operator interact with the From trait?", "body": "<p>The magic is in the <code>?</code> operator.</p>\n\n<pre><code>let mut file = File::create(\"foo.txt\")?;\n</code></pre>\n\n<p>expands to something like (<a href=\"https://m4rw3r.github.io/rust-questionmark-operator\" rel=\"nofollow noreferrer\">source</a>)</p>\n\n<pre><code>let mut file = match File::create(\"foo.txt\") {\n    Ok(t)  =&gt; t,\n    Err(e) =&gt; return Err(e.into()),\n};\n</code></pre>\n\n<p>This uses the <code>Into</code> trait, which is the counterpart to the <code>From</code> trait: <code>e.into()</code> is equivalent to <code>T::from(e)</code>. Here you have the explicit conversion.</p>\n\n<p>(<a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html#implementors\" rel=\"nofollow noreferrer\">There is an automatic <code>impl&lt;T, U&gt; Into&lt;U&gt; for T</code> for every <code>impl&lt;T, U&gt; From&lt;T&gt; for U</code></a>, which is why implementing <code>From</code> is enough.)</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1568031284, "creation_date": 1568031284, "answer_id": 57853873, "question_id": 57853503, "link": "https://stackoverflow.com/questions/57853503/how-does-the-operator-interact-with-the-from-trait/57853873#57853873", "title": "How does the ? operator interact with the From trait?", "body": "<p>The difference is stated in <a href=\"https://doc.rust-lang.org/stable/book/ch09-02-recoverable-errors-with-result.html#a-shortcut-for-propagating-errors-the--operator\" rel=\"nofollow noreferrer\">The Rust Programming Language, chapter 9, section 2</a>, when talking about the <code>?</code> operator:</p>\n\n<blockquote>\n  <p>Error values that have the\u00a0<code>?</code>\u00a0operator called on them go through the\u00a0from\u00a0function, defined in the\u00a0<code>From</code>\u00a0trait in the standard library, which is used to convert errors from one type into another. When the\u00a0<code>?</code>\u00a0operator calls the\u00a0<code>from</code>\u00a0function, the error type received is converted into the error type defined in the return type of the current function. This is useful when a function returns one error type to represent all the ways a function might fail, even if parts might fail for many different reasons. <strong>As long as each error type implements the\u00a0<code>from</code>\u00a0function to define how to convert itself to the returned error type, the\u00a0<code>?</code>\u00a0operator takes care of the conversion automatically.</strong></p>\n</blockquote>\n\n<p>You have provided this implementation of <code>From&lt;std::io::Error&gt;</code> for that error type, therefore the code will work and convert values of this type automatically.</p>\n"}], "owner": {"reputation": 2932, "user_id": 7212809, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VlOyJEUeeSc/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jExBae7iJ2ALFtcMj_6BCoHGTMgw/mo/photo.jpg?sz=128", "display_name": "nz_21", "link": "https://stackoverflow.com/users/7212809/nz-21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1568035670, "creation_date": 1568029906, "last_edit_date": 1568035670, "question_id": 57853503, "link": "https://stackoverflow.com/questions/57853503/how-does-the-operator-interact-with-the-from-trait", "title": "How does the ? operator interact with the From trait?", "body": "<p>Say I have the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\n\nimpl From&lt;i32&gt; for Blah {\n\n    fn from(b:i32) -&gt; Blah {\n        Blah {}\n    }\n}\n\nfn main() {}\n\nenum MyError {\n    ParseError,\n}\n\nimpl From&lt;std::io::Error&gt; for MyError {\n    fn from(_:std::io::Error) -&gt; Self {\n        MyError::ParseError\n    }\n}\n\nfn get_result() -&gt; Result&lt;Blah, MyError&gt; {\n    let mut file = File::create(\"foo.txt\")?;\n}\n</code></pre>\n\n<p>This compiles fine. I don't understand how. </p>\n\n<p><code>File::create</code> throws an <code>std::io::error</code>, which we're trying to wrap in a <code>MyError</code>. But we never explicitly call <code>from</code> anywhere!? How does it compile?</p>\n\n<p>As the comments from this answer <a href=\"https://stackoverflow.com/questions/57853235/rust-understanding-from-trait\">Rust understanding From trait</a> indicate, you do have to explicitly call <code>from</code>. </p>\n\n<p>So, how is the above snippet compiling?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1568026809, "post_id": 57852563, "comment_id": 102131642, "body": "How about using an <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">Rc</a>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1568035059, "post_id": 57852563, "comment_id": 102135851, "body": "Take an additional closure parameter, and return a <code>Result</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 6652, "user_id": 2721139, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/8beJH.jpg?s=128&g=1", "display_name": "Bartosz Sypytkowski", "link": "https://stackoverflow.com/users/2721139/bartosz-sypytkowski"}, "edited": false, "score": 0, "creation_date": 1568032834, "post_id": 57853077, "comment_id": 102134685, "body": "While this is interesting answer, it&#39;s not complete - as the <code>nearest</code> name suggests, the goal is not to return an element, that matches the path, but when none matches, return the closest one - please read the example I&#39;ve attached at the beginning."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 6652, "user_id": 2721139, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/8beJH.jpg?s=128&g=1", "display_name": "Bartosz Sypytkowski", "link": "https://stackoverflow.com/users/2721139/bartosz-sypytkowski"}, "edited": false, "score": 0, "creation_date": 1568036225, "post_id": 57853077, "comment_id": 102136530, "body": "@BartoszSypytkowski Edited with an apology and some new code. Thank you for pointing it out, I completely missed it"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1568036208, "last_edit_date": 1568036208, "creation_date": 1568028403, "answer_id": 57853077, "question_id": 57852563, "link": "https://stackoverflow.com/questions/57852563/borrowing-the-mutable-member-used-inside-the-loop/57853077#57853077", "title": "Borrowing the mutable member used inside the loop", "body": "<p>I completely misread your question and I owe you an apology.</p>\n\n<p>You cannot do it in one pass - you're going to need to do a read-only pass to find the nearest path (or exact path), and then a read-write pass to actually extract the reference, or pass a mutator function in the form of a closure.</p>\n\n<p>I've <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3f3059f46c0f83bcae1714c7cfab29b4\" rel=\"nofollow noreferrer\">implemented</a> the two-pass method for you. Do note that it is still pretty performant:</p>\n\n<pre><code>fn nearest_mut&lt;'a, 'b&gt;(obj: &amp;'a mut Json, path: Vec&lt;&amp;'b str&gt;) -&gt; Pointer&lt;'a, 'b&gt; {\n    let valid_path = nearest_path(obj, path);\n    exact_mut(obj, valid_path).unwrap()\n}\nfn exact_mut&lt;'a, 'b&gt;(obj: &amp;'a mut Json, path: Vec&lt;&amp;'b str&gt;) -&gt; Option&lt;Pointer&lt;'a, 'b&gt;&gt; {\n    let mut i = 0;\n    let mut target = obj;\n    for token in path.iter() {\n        i += 1;\n        // borrow checker gets confused about `target` being mutably borrowed too many times because of the loop\n        // this once-per-loop binding makes the scope clearer and circumvents the error\n        let target_once = target;\n        let target_opt = match *target_once {\n            Json::Object(ref mut map) =&gt; map.get_mut(*token),\n            Json::Array(ref mut list) =&gt; match token.parse::&lt;usize&gt;() {\n                Ok(t) =&gt; list.get_mut(t),\n                Err(_) =&gt; None,\n            },\n            _ =&gt; None,\n        };\n        if let Some(t) = target_opt {\n            target = t;\n        } else {\n            return None;\n        }\n    }\n    Some(Pointer {\n        path,\n        position: i,\n        value: target,\n    })\n}\n/// Return a mutable pointer to JSON element having shared\n/// the nearest common path with provided JSON.\nfn nearest_path&lt;'a, 'b&gt;(obj: &amp;'a Json, path: Vec&lt;&amp;'b str&gt;) -&gt; Vec&lt;&amp;'b str&gt; {\n    let mut i = 0;\n    let mut target = obj;\n    let mut valid_paths = vec![];\n    for token in path.iter() {\n        // borrow checker gets confused about `target` being mutably borrowed too many times because of the loop\n        // this once-per-loop binding makes the scope clearer and circumvents the error\n        let target_opt = match *target {\n            Json::Object(ref map) =&gt; map.get(*token),\n            Json::Array(ref list) =&gt; match token.parse::&lt;usize&gt;() {\n                Ok(t) =&gt; list.get(t),\n                Err(_) =&gt; None,\n            },\n            _ =&gt; None,\n        };\n        if let Some(t) = target_opt {\n            target = t;\n            valid_paths.push(*token)\n        } else {\n            return valid_paths;\n        }\n    }\n    return valid_paths\n}\n</code></pre>\n\n<p>The principle is simple - I reused the method I wrote in my initial question in order to get the nearest valid path (or exact path).</p>\n\n<p>From there, I feed that straight into the function that I had in my original answer, and since I am certain the path is valid (from the prior function call) I can safely <code>unwrap()</code> :-)</p>\n"}], "owner": {"reputation": 6652, "user_id": 2721139, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/8beJH.jpg?s=128&g=1", "display_name": "Bartosz Sypytkowski", "link": "https://stackoverflow.com/users/2721139/bartosz-sypytkowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 57853077, "answer_count": 1, "score": 0, "last_activity_date": 1568036208, "creation_date": 1568026424, "question_id": 57852563, "link": "https://stackoverflow.com/questions/57852563/borrowing-the-mutable-member-used-inside-the-loop", "title": "Borrowing the mutable member used inside the loop", "body": "<p>The problem I want to solve is:</p>\n\n<blockquote>\n  <p>Given the recursively nested data structure, eg. a JSON tree, and a path pointing to (possibly non-existent) element inside it, return the mutable reference of the element, that's the closest to given path.</p>\n</blockquote>\n\n<p>Example: if we have JSON document in form <code>{ a: { b: { c: \"foo\" } } }</code> and a path <code>a.b.d</code>, we want to have a mutable pointer to value stored under key \"b\".</p>\n\n<p>This is a code snippet, what I've got so far:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nenum Json {\n    Number(i64),\n    Bool(bool),\n    String(String),\n    Array(Vec&lt;Json&gt;),\n    Object(HashMap&lt;String, Json&gt;)\n}\n\nstruct Pointer&lt;'a, 'b&gt; {\n    value: &amp;'a mut Json,\n    path: Vec&lt;&amp;'b str&gt;,\n    position: usize\n}\n\n/// Return a mutable pointer to JSON element having shared \n/// the nearest common path with provided JSON. \nfn nearest_mut&lt;'a,'b&gt;(obj: &amp;'a mut Json, path: Vec&lt;&amp;'b str&gt;) -&gt; Pointer&lt;'a,'b&gt; {\n    let mut i = 0;\n    let mut current = obj;\n    for &amp;key in path.iter() {\n        match current {\n            Json::Array(array) =&gt; {\n                match key.parse::&lt;usize&gt;() {\n                    Ok(index) =&gt; {\n                        match array.get_mut(index) {\n                            Some(inner) =&gt; current = inner,\n                            None =&gt; break,\n                        }\n                    },\n                    _ =&gt; break,\n                }\n            } ,\n            Json::Object(map) =&gt; {\n                match map.get_mut(key) {\n                    Some(inner) =&gt; current = inner,\n                    None =&gt; break\n                }\n            },\n            _ =&gt; break,\n        };\n        i += 1;\n    }\n    Pointer { path, position: i, value: current }\n}\n</code></pre>\n\n<p>The problem is that this doesn't pass through Rust's borrow checker, as <code>current</code> is borrowed as mutable reference twice, once inside match statement and once at the end of the function, when constructing the pointer method.</p>\n\n<p>I've tried a different approaches, but not figured out how to achieve the goal (maybe going the unsafe path).</p>\n"}, {"tags": ["java", "android", "rust", "swig", "dynamic-library"], "comments": [{"owner": {"reputation": 81653, "user_id": 168175, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/qxeUf.jpg?s=128&g=1", "display_name": "Flexo", "link": "https://stackoverflow.com/users/168175/flexo"}, "edited": false, "score": 0, "creation_date": 1568015536, "post_id": 57849013, "comment_id": 102126372, "body": "Guessing here, but is log part of the rust runtime?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568022179, "post_id": 57849013, "comment_id": 102129541, "body": "Not related, but you can use <a href=\"https://doc.rust-lang.org/std/ptr/struct.NonNull.html\" rel=\"nofollow noreferrer\"><code>NonNull</code></a>, for example, in <code>release</code>: <code>let _ = NonNull::new(ptr).map(|p| unsafe { Box::from_raw(p.as_ptr()) });</code>"}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "reply_to_user": {"reputation": 81653, "user_id": 168175, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/qxeUf.jpg?s=128&g=1", "display_name": "Flexo", "link": "https://stackoverflow.com/users/168175/flexo"}, "edited": false, "score": 0, "creation_date": 1568024217, "post_id": 57849013, "comment_id": 102130482, "body": "@flexo there&#39;s a log crate in std (<a href=\"https://docs.rs/log/0.4.6/log/\" rel=\"nofollow noreferrer\">docs.rs/log/0.4.6/log</a>), but I don&#39;t call it explicitly. Do I need to link in a Rust runtime library?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1568024851, "post_id": 57849013, "comment_id": 102130773, "body": "Can you add <code>-lm</code> when linking your <code>simpleswig</code> library?"}, {"owner": {"reputation": 81653, "user_id": 168175, "user_type": "moderator", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/qxeUf.jpg?s=128&g=1", "display_name": "Flexo", "link": "https://stackoverflow.com/users/168175/flexo"}, "edited": false, "score": 0, "creation_date": 1568045821, "post_id": 57849013, "comment_id": 102141634, "body": "@MartinEllison that&#39;s my hunch, because otherwise I can&#39;t see where you&#39;ll be getting one from when java loads your library."}, {"owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1568295149, "post_id": 57849013, "comment_id": 102235584, "body": "@Jmb That fixed it thanks (once I put the <code>-lm</code> <i>before</i> the <code>-o ...</code>). Sorry for the delay in replying but I have been away."}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1568024762, "creation_date": 1568011578, "last_edit_date": 1568024762, "question_id": 57849013, "link": "https://stackoverflow.com/questions/57849013/swig-wrapped-rust-code-called-by-android-java-expects-uncoded-symbol-log", "title": "Swig-wrapped Rust code called by Android Java expects uncoded symbol &quot;log&quot;", "body": "<p>I'm trying to write an Android app which calls some Rust code via swig. I have written a simple test for the linkages. A version that has an ordinary Java main program works fine. My Android version fails with an error: </p>\n\n<blockquote>\n  <p>java.lang.UnsatisfiedLinkError: dlopen failed: cannot locate symbol\n  \"log\" referenced by\n  \"/data/app/hk.jennyemily.work.try3-1/lib/x86_64/libsimpleswig.so\"...\n          at java.lang.Runtime.loadLibrary0(Runtime.java:989)</p>\n</blockquote>\n\n<p>My Rust code does not import \"log\". </p>\n\n<p>So what do I do to fix this?</p>\n\n<p>The Android Java basically only does the following so far (I have not yet coded the calls to the library):</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>static {\n    System.loadLibrary(\"simpleswig\");\n}\n</code></pre>\n\n<p>Here is my Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ffi::CString;\nuse std::os::raw::c_char;\n\npub struct SimpleData {\n    pub str: CString,\n}\n\n#[no_mangle]\npub extern \"C\" fn newSimpleData() -&gt; *mut SimpleData {\n    Box::into_raw(Box::new(SimpleData {\n        str: CString::new(\"hello\").unwrap(),\n    }))\n}\n#[no_mangle]\npub extern \"C\" fn say(ptr: *mut SimpleData) -&gt; *const c_char {\n    let sd = unsafe {\n        assert!(!ptr.is_null());\n        &amp;mut *ptr\n    };\n    sd.str.as_ptr()\n}\n#[no_mangle]\npub extern \"C\" fn release(ptr: *mut SimpleData) {\n    if ptr.is_null() {\n        return;\n    }\n    unsafe {\n        let _ = Box::from_raw(ptr);\n    }\n}\n</code></pre>\n\n<p>There is also the basic Swig code for wrapping the Rust code.</p>\n\n<p>The Swig and Rust code is linked into a dynamic library (.so). </p>\n\n<p><em>Edit: the actual C compile and link line is:</em>\n  <code>$CC -shared $SIMPDIR/simple_wrap.c $SIMPDIR/libsimple.a -o $SIMPDIR/libsimpleswig.so -I\"${JAVALOC}/include\" -I\"${JAVALOC}/include/linux\"</code></p>\n\n<p>Here is the stand-alone Java main program, which works without any problems with the same Rust and Swig code.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public class test {\n    static {\n        System.loadLibrary(\"simpleswig\");\n    }\n\n    public static void main(String argv[]) {\n        System.out.println(\"starting...\");\n        simpleswig.SWIGTYPE_p_SimpleData sd = simpleswig.simpleswig.newSimpleData();\n        System.out.println( simpleswig.simpleswig.say(sd));\n        System.out.println(\"releasing...\");\n        simpleswig.simpleswig.release(sd);\n        System.out.println(\"done.\");\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "macros", "traits"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1568032750, "post_id": 57848209, "comment_id": 102134632, "body": "With the <code>NumericTrait</code> approach, you can add a generic implementation for all <code>T</code> that satisfy the trait bounds. This requires to write the trait bounds a second time, but that&#39;s acceptable in my opinion."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1568034361, "post_id": 57848209, "comment_id": 102135518, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26983355/is-there-a-way-to-combine-multiple-traits-in-order-to-define-a-new-trait\">Is there a way to combine multiple traits in order to define a new trait?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2291, "user_id": 2696950, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f099454d3702202560c4615feb093e61?s=128&d=identicon&r=PG&f=1", "display_name": "Hurricane Development", "link": "https://stackoverflow.com/users/2696950/hurricane-development"}, "edited": false, "score": 0, "creation_date": 1568013247, "post_id": 57848887, "comment_id": 102125427, "body": "This is what I tried (albeit without a macro) in my first example above. This doesn&#39;t work for me because num does not actually implement the <code>NumericFloatTrait</code>. It implements all of the sub-traits only..."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 2291, "user_id": 2696950, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f099454d3702202560c4615feb093e61?s=128&d=identicon&r=PG&f=1", "display_name": "Hurricane Development", "link": "https://stackoverflow.com/users/2696950/hurricane-development"}, "edited": false, "score": 0, "creation_date": 1568013716, "post_id": 57848887, "comment_id": 102125616, "body": "Since we have declared <code>NumericFloatTrait</code> it is expected that num does not implement that trait. I do not understand what you commented out. Can you please explain it more or edit the question in the comprehensive way"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 2291, "user_id": 2696950, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f099454d3702202560c4615feb093e61?s=128&d=identicon&r=PG&f=1", "display_name": "Hurricane Development", "link": "https://stackoverflow.com/users/2696950/hurricane-development"}, "edited": false, "score": 0, "creation_date": 1568015678, "post_id": 57848887, "comment_id": 102126423, "body": "@HurricaneDevelopment, Updated the answer as your needs. Please check again"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1568017083, "post_id": 57848887, "comment_id": 102127026, "body": "@Websterix at least you have to make sure you use <code>::std::marker::Copy</code>, <code>::std::clone::Clone</code>, etc. in your macro otherwise the usage of this macro will lead to undesired consequences (i.e. locally defined <code>Copy</code> or <code>Clone</code>).  Moreover, you could use a custom syntax in your matching, like: <code>(trait $trait_name:ident: $trait_type: ident) =&gt; { ... }</code> which could be used as: <code>declare_trait!{ trait NumericFloatTrait: Float }</code> which IMO is a slightly bit more self explanatory.  But you could come up with a better syntax."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1568033051, "post_id": 57848887, "comment_id": 102134793, "body": "!!! <code>std</code> could still be redefined !!! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c32578def81c4b5fd4b4837c8151c9b2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 2291, "user_id": 2696950, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f099454d3702202560c4615feb093e61?s=128&d=identicon&r=PG&f=1", "display_name": "Hurricane Development", "link": "https://stackoverflow.com/users/2696950/hurricane-development"}, "edited": false, "score": 0, "creation_date": 1568045077, "post_id": 57848887, "comment_id": 102141305, "body": "Your second example is more along the lines of what I am trying to do, however it is a bit more restricting than I would like. For example, if I want to have additional generics. For the first solution, the issue is that in implementation, T does not actually implement <code>$type_name</code>, rather it implements all of the subtraits."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1568091369, "last_edit_date": 1568091369, "creation_date": 1568010870, "answer_id": 57848887, "question_id": 57848209, "link": "https://stackoverflow.com/questions/57848209/rust-use-macros-for-long-trait-constraint-chains/57848887#57848887", "title": "Rust use macros for long Trait constraint chains", "body": "<p>You can declare the macro that creates a trait you wanted like following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! declare_trait {\n    ($trait_type:ident,$trait_name:ident) =&gt; {\n        trait $trait_name:\n            $trait_type\n            + num::FromPrimitive\n            + num::ToPrimitive\n            + alga::general::RealField\n            + ::std::marker::Copy\n            + ::std::clone::Clone\n            + ::std::fmt::Debug\n            + 'static\n        {\n        }\n\n}\n</code></pre>\n\n<p>In your macro you need to define the implementation of any T that has the following traits given:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; $trait_name for T where\n    T: $trait_type\n      + num::FromPrimitive\n      + num::ToPrimitive\n      + alga::general::RealField\n      + ::std::marker::Copy\n      + ::std::clone::Clone\n      + ::std::fmt::Debug\n      + 'static\n{\n}\n</code></pre>\n\n<p>Now you only need to call this macro to declare the trait as you desire:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>declare_trait!(Float, NumericFloatTrait); // Float is type and NumericFloatTrait is the name here\n</code></pre>\n\n<p>After you declare your trait you can use it anywhere you like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct SomeStruct;\n\nimpl SomeStruct {\n    fn do_things_with_float&lt;T: NumericFloatTrait&gt;(num: T) {\n        println!(\"I got this float {:?}\", num);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=79595d9e6e33f61af2cca3736aef97b2\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 2291, "user_id": 2696950, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/f099454d3702202560c4615feb093e61?s=128&d=identicon&r=PG&f=1", "display_name": "Hurricane Development", "link": "https://stackoverflow.com/users/2696950/hurricane-development"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 226, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1568091369, "creation_date": 1568006202, "question_id": 57848209, "link": "https://stackoverflow.com/questions/57848209/rust-use-macros-for-long-trait-constraint-chains", "title": "Rust use macros for long Trait constraint chains", "body": "<p>I have a lot of lengthy and repetitive trait constraint chains in my implementations that I want to replace. Type aliasing for traits looks great but <a href=\"https://github.com/rust-lang/rust/issues/41517\" rel=\"nofollow noreferrer\">it is still an unstable feature</a>.</p>\n\n<p>I tried using something like this</p>\n\n<pre><code>trait NumericTrait : Float + FromPrimitive + ToPrimitive + RealField + Copy + Clone + Debug + 'static {}\n</code></pre>\n\n<p>However this leads to issues since <code>NumericTrait</code> is not explicitly implemented for the types I am concerned with. Rather, all of the base traits are.</p>\n\n<p>I am now thinking macros is the way to go, so I tried the following:</p>\n\n<pre><code>macro_rules! numeric_float_trait {\n    () =&gt; {\n        Float + FromPrimitive + ToPrimitive + RealField + Copy + Clone + Debug + 'static\n    };\n}\n\nstruct SomeStruct;\n\nimpl&lt;T&gt; SomeStruct \nwhere\n    T: numeric_float_trait!()\n{\n    fn do_things(num: T) {\n        println!(\"I got this num {:?}\", num);\n    }\n}\n</code></pre>\n\n<p>However the syntax is incorrect and the compiler will not accept it. How do I achieve this desired functionality of essentially pasting a list of traits via a macro?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1568005912, "post_id": 57848114, "comment_id": 102123176, "body": "You already know the third one, so there&#39;s nothing to explain. Arrays and slices are explained in the book: <a href=\"https://doc.rust-lang.org/rust-by-example/primitives/array.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/rust-by-example/primitives/array.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 185, "user_id": 5586781, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f2b4942946dbb26e852c38eaf0bb8fab?s=128&d=identicon&r=PG&f=1", "display_name": "taiyebur", "link": "https://stackoverflow.com/users/5586781/taiyebur"}, "edited": false, "score": 1, "creation_date": 1568008474, "post_id": 57848340, "comment_id": 102123813, "body": "Hi, thanks for your nice explanation. I am reading the &quot;Rust Programming Book&quot;. Most examples in that book used string slices. So, I forgot about what other kind of slice looked like. Still learning."}], "tags": [], "owner": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "is_accepted": true, "score": 12, "last_activity_date": 1593026185, "last_edit_date": 1593026185, "creation_date": 1568007127, "answer_id": 57848340, "question_id": 57848114, "link": "https://stackoverflow.com/questions/57848114/what-are-the-differences-between-and-vec/57848340#57848340", "title": "What are the differences between [], &amp;[], and vec![]?", "body": "<p>Although this is basic information you should find as soon as you start reading Rust docs or The Rust Book, here's some quick explanation:</p>\n<ol>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">Array</a></li>\n</ol>\n<p><code>let a = [1, 2, 3]</code> is array of 3 elements that resides completely in the stack</p>\n<pre class=\"lang-none prettyprint-override\"><code>stack:\n\n+-----------+\n| 1 | 2 | 3 |\n+-----------+\n</code></pre>\n<ol start=\"2\">\n<li><a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"nofollow noreferrer\">Slice</a></li>\n</ol>\n<p><code>let b = &amp;[1, 2, 3]</code> is a reference to an array of 3 elements also in the stack:</p>\n<pre class=\"lang-none prettyprint-override\"><code>         stack:\n                 +-----------+\n                 | 1 | 2 | 3 |\n                 +-----------+\n                 ^\n         +---+   |\npointer: | * |---|\n         +---+\n</code></pre>\n<p>If you change it to <code>let b: &amp;[u32] = &amp;[1, 2, 3]</code>, <code>b</code> won't be just a reference to an array, but a <em>slice</em> because Rust will perform a <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/deref-coercions.html\" rel=\"nofollow noreferrer\">Deref coercion</a>. Slices are references that also store the length of what they point to (these kind of references are known as <strong>fat-pointers</strong>):</p>\n<pre class=\"lang-none prettyprint-override\"><code>         stack:\n                 +-----------+\n                 | 1 | 2 | 3 |\n                 +-----------+\n                 ^\n         +---+   |\npointer: | * |---|\n         +---+\nlength:  | 3 |\n         +---+\n</code></pre>\n<ol start=\"3\">\n<li><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">Vec</a></li>\n</ol>\n<p><code>let c = vec![1, 2, 3]</code> is a dynamically allocated vector, that is, its data will reside in the heap in order to be able to change its size during runtime, but in the stack it will store the reference to the heap data, the length and the capacity of the vector:</p>\n<pre class=\"lang-none prettyprint-override\"><code>            stack:       heap:\n            +---+     +-----------+---+\npointer:    | * |----&gt;| 1 | 2 | 3 |...|\n            +---+     +-----------+---+\nlength:     | 3 |\n            +---+\ncapacity:   | 4 |\n            +---+\n</code></pre>\n"}], "owner": {"reputation": 185, "user_id": 5586781, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f2b4942946dbb26e852c38eaf0bb8fab?s=128&d=identicon&r=PG&f=1", "display_name": "taiyebur", "link": "https://stackoverflow.com/users/5586781/taiyebur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 1, "accepted_answer_id": 57848340, "answer_count": 1, "score": 4, "last_activity_date": 1593026185, "creation_date": 1568005399, "last_edit_date": 1593025817, "question_id": 57848114, "link": "https://stackoverflow.com/questions/57848114/what-are-the-differences-between-and-vec", "title": "What are the differences between [], &amp;[], and vec![]?", "body": "<p>What are the differences between the following three declarations?</p>\n<pre><code>let a = [1, 2, 3];\nlet b = &amp;[1, 2, 3];\nlet c = vec![1, 2, 3];\n</code></pre>\n<p>I understand what <code>vec![]</code> does, but when should <code>[]</code> and <code>&amp;[]</code> be used?</p>\n"}, {"tags": ["rust", "phantom-types"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567970410, "post_id": 57844962, "comment_id": 102117248, "body": "is this an auto-generated HAL crate done using <code>svd2rust</code>?"}, {"owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567973132, "post_id": 57844962, "comment_id": 102117997, "body": "Yes that&#39;s right"}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 6, "last_activity_date": 1567980401, "creation_date": 1567980401, "answer_id": 57846101, "question_id": 57844962, "link": "https://stackoverflow.com/questions/57844962/phantomdata-type-usage-in-rust/57846101#57846101", "title": "PhantomData type usage in rust", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"noreferrer\"><code>PhantomData</code></a> struct is meant to signal to the compiler that a type or lifetime is being used in some way that is transparent to the compiler. </p>\n\n<p>To quote the docs:</p>\n\n<blockquote>\n  <p>Adding a PhantomData field to your type tells the compiler that your type acts as though it stores a value of type <code>T</code>, even though it doesn't really. This information is used when computing certain safety properties.</p>\n</blockquote>\n\n<p>For example, if we look at the iterator type for a slice <code>[T]</code>: <a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"noreferrer\"><code>std::slice::Iter&lt;'a, T&gt;</code></a> and <a href=\"https://doc.rust-lang.org/src/core/slice/mod.rs.html#3318-3324\" rel=\"noreferrer\">its declaration using the <kbd>src</kbd> button</a> we'll see that it's actually declared as such:</p>\n\n<pre><code>struct Iter&lt;'a, T: 'a&gt; {\n    start: *const T,\n    end: *const T,\n    _phantom: PhantomData&lt;&amp;'a T&gt;,\n}\n</code></pre>\n\n<p><code>std</code> makes frequent use of pointer arithmetic to make optimizations more readily available (Although that is <strong>not</strong> to endorse the usage of pointer arithmetic in user code). In this case, we need to assure ourselves that the data that is pointed to by the two raw pointers (Which carry no lifetimes) outlive the struct, <em>so</em> we keep a <code>PhantomData&lt;&amp;'a T&gt;</code> to tell the compiler to act like as if <code>Iter</code> owned a <code>&amp;'a T</code> therefore enforcing lifetime rules for it.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1568033631, "post_id": 57850655, "comment_id": 102135118, "body": "I&#39;ve written an example code in <a href=\"https://codereview.stackexchange.com/questions/223355/an-asynchronous-logger/223808#223808\">codereview</a>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1568019090, "creation_date": 1568019090, "answer_id": 57850655, "question_id": 57844962, "link": "https://stackoverflow.com/questions/57844962/phantomdata-type-usage-in-rust/57850655#57850655", "title": "PhantomData type usage in rust", "body": "<p>In addition to the other answer, I'd like to add an example. As said in the other answer, <code>PhantomData</code> allows to add an arbitrary lifetime dependence between 2 structure.</p>\n\n<p>Suppose that you have a struct that manages a logging tool with a message receiver, and a struct that represents an actual logger that sends messages to the manager. Although the logger does not directly depends on the manager, the manager must outlive the logger to prevent send errors.</p>\n\n<p>The naive code does not create any dependency between the 2 structs:</p>\n\n<pre><code>struct LogManager {\n    // ...\n}\n\nimpl LogManager {\n    fn logger(&amp;self) -&gt; Logger {\n        // returns a fresh `Logger` that holds no reference to `LogManager`...\n    }\n}\n\nstruct Logger {\n    // ...\n}\n</code></pre>\n\n<p>Now, if the <code>Logger</code> holds a phantom reference, we can force a dependency between the 2 structs:</p>\n\n<pre><code>struct Logger&lt;'a&gt; {\n    // ...\n    _marker: PhantomData&lt;'a ()&gt;,\n}\n</code></pre>\n\n<p>and in the impl block:</p>\n\n<pre><code>impl LogManager {\n    fn logger(&amp;self) -&gt; Logger {\n        Logger {\n            // ...\n            // Here, `Logger` will have a lifetime dependent of the `LogManager`'s\n            // lifetime due to `PhantomData`:\n            _marker: PhantomData,\n        }\n    }\n}\n</code></pre>\n\n<p>Now, no instance of <code>Logger</code> can outlive the <code>LogManager</code> where it comes from.</p>\n"}], "owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 0, "accepted_answer_id": 57846101, "answer_count": 2, "score": 4, "last_activity_date": 1568019396, "creation_date": 1567969575, "last_edit_date": 1568019396, "question_id": 57844962, "link": "https://stackoverflow.com/questions/57844962/phantomdata-type-usage-in-rust", "title": "PhantomData type usage in rust", "body": "<p>I was going through some rust source code and I found a data type called <code>PhantomData</code>. I was going through the rust documentation and searched through the internet a lot. However, I couldn't understand the actual use of this data type with rust. If possible, could somebody please explain me this in simple manner?</p>\n\n<pre><code>pub struct GPIOD {\n   _marker: PhantomData&lt;*const ()&gt;,\n}\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1568015912, "post_id": 57844870, "comment_id": 102126507, "body": "As a note: <b>always</b> make sure, that your error message matches the code you wrote."}, {"owner": {"reputation": 3758, "user_id": 826938, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/1f5fa15f4142e9ec9ade8ea8142a030a?s=128&d=identicon&r=PG", "display_name": "BigONotation", "link": "https://stackoverflow.com/users/826938/bigonotation"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1568017380, "post_id": 57844870, "comment_id": 102127171, "body": "@hellow Not sure what you mean"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1568182817, "post_id": 57844870, "comment_id": 102188981, "body": "<a href=\"https://stackoverflow.com/revisions/57844870/3\">stackoverflow.com/revisions/57844870/3</a> I had to correct your error message, because it didn&#39;t fit the code you post."}, {"owner": {"reputation": 3758, "user_id": 826938, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/1f5fa15f4142e9ec9ade8ea8142a030a?s=128&d=identicon&r=PG", "display_name": "BigONotation", "link": "https://stackoverflow.com/users/826938/bigonotation"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1568201419, "post_id": 57844870, "comment_id": 102198044, "body": "OK sorry about that"}], "answers": [{"comments": [{"owner": {"reputation": 3758, "user_id": 826938, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/1f5fa15f4142e9ec9ade8ea8142a030a?s=128&d=identicon&r=PG", "display_name": "BigONotation", "link": "https://stackoverflow.com/users/826938/bigonotation"}, "edited": false, "score": 0, "creation_date": 1567979809, "post_id": 57846023, "comment_id": 102119266, "body": "thanks a lot for taking the time to explain all of this."}], "tags": [], "owner": {"reputation": 311, "user_id": 4741735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf5743715a1342ce13d780d0a457f5cb?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Braun", "link": "https://stackoverflow.com/users/4741735/florian-braun"}, "is_accepted": true, "score": 4, "last_activity_date": 1567979499, "creation_date": 1567979499, "answer_id": 57846023, "question_id": 57844870, "link": "https://stackoverflow.com/questions/57844870/parsing-yaml-in-rust-using-serde-yaml/57846023#57846023", "title": "Parsing yaml in Rust using serde_yaml", "body": "<p>Your problem is that <code>serde_yaml::from_str(&amp;s)</code> does not return a Dependency struct directly as you expect, but a Result struct. </p>\n\n<p>Result structs are rust's way of error handling. Results are either <code>Ok(value)</code> or an <code>Err</code> and you need to check which one it is. Typically in a <code>match</code> expression.\nIn your case the parsed dependency is wrapped in <code>Ok(project)</code> if parsing the string is successful.</p>\n\n<p>I could get your code to compile with the following match expression:</p>\n\n<pre><code>let project_result : Result&lt;Project, _&gt; = serde_yaml::from_str(&amp;s);\n\nmatch project_result {\n    Ok(project) =&gt; println!(\"dependencies = {:?}\", project),\n    Err(_) =&gt; println!(\"Error!\")\n}\n</code></pre>\n\n<p>The next problem however is that your string seemed not proper yaml, at least not as expected from serde, and I do get \"Error!\" from the program.</p>\n\n<p>I changed your string to the following to get some useful output. I don't know if that is your intended yaml though.</p>\n\n<pre><code>let s = \"---\\ndependencies:\\n - {url: http://test1, tag: tag1}\\n - {url: http://test2, tag: tag2}\\n\";\n</code></pre>\n"}], "owner": {"reputation": 3758, "user_id": 826938, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/1f5fa15f4142e9ec9ade8ea8142a030a?s=128&d=identicon&r=PG", "display_name": "BigONotation", "link": "https://stackoverflow.com/users/826938/bigonotation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 0, "accepted_answer_id": 57846023, "answer_count": 1, "score": 1, "last_activity_date": 1568017903, "creation_date": 1567968675, "last_edit_date": 1568017903, "question_id": 57844870, "link": "https://stackoverflow.com/questions/57844870/parsing-yaml-in-rust-using-serde-yaml", "title": "Parsing yaml in Rust using serde_yaml", "body": "<p>I am new to Rust. I am trying to parse yaml in Rust using <code>serde_yaml</code>, but can't make the code compile:</p>\n\n<p>My <code>Cargo.toml</code>:</p>\n\n<pre><code>[package]\nname = \"apmdeps\"\nversion = \"0.1.0\"\nauthors = [\"Roger Rabbit\"]\nedition = \"2018\"\n\n[dependencies]\ngit2 = \"0.10\"\nserde = { version = \"1.0\", features = [\"derive\"] }\nserde_yaml = \"0.8\"\n</code></pre>\n\n<p>I tried to adapt the code sample found on the <a href=\"https://github.com/dtolnay/serde-yaml\" rel=\"nofollow noreferrer\">serde_yaml website</a>, to no avail:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{Deserialize, Serialize};\n\n#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct Dependency {\n    url: String,\n    tag: String,\n}\n\n#[derive(Debug, PartialEq, Serialize, Deserialize)]\nstruct Project {\n    dependencies: Vec&lt;Dependency&gt;,\n}\n\nfn main() {\n    let s = \"---\\ndependencies:\\n--url:http://test1\\ntag:tag1\\n--url:http://test2\\ntag:tag2\";\n\n    let project: Project = serde_yaml::from_str(&amp;s);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:28\n   |\n17 |     let project: Project = serde_yaml::from_str(&amp;s);\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `Project`, found enum `std::result::Result`\n   |\n   = note: expected type `Project`\n              found type `std::result::Result&lt;_, serde_yaml::error::Error&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1567980689, "post_id": 57844631, "comment_id": 102119434, "body": "Please take a look at a <a href=\"https://docs.rs/streaming-iterator/0.1.4/streaming_iterator/\" rel=\"nofollow noreferrer\">Streaming Iterator</a>."}], "answers": [{"comments": [{"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "edited": false, "score": 0, "creation_date": 1567970736, "post_id": 57844892, "comment_id": 102117350, "body": "Thanks! Does that mean that I can&#39;t implement an iterator which returns an item which is backed by a mutable buffer referenced by the iterator?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "edited": false, "score": 0, "creation_date": 1567972101, "post_id": 57844892, "comment_id": 102117721, "body": "@Shmoopy: AIUI, it is impossible because it would allow to alias the mutable reference. To do that you&#39;d need somehow to keep the iterator borrowed when calling <code>next()</code> (<code>fn next&lt;&#39;s&gt;(&amp;&#39;s self) -&gt; Option&lt;&amp;&#39;s T&gt;</code>), but that is not how the trait is defined."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1567980736, "post_id": 57844892, "comment_id": 102119439, "body": "Iterators in rust generally can&#39;t return items which borrow from themselves. There&#39;s a crate called <a href=\"https://docs.rs/streaming-iterator/0.1.4/streaming_iterator/\" rel=\"nofollow noreferrer\"><code>streaming_iterator</code></a> which solves this though."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1567972327, "last_edit_date": 1567972327, "creation_date": 1567968917, "answer_id": 57844892, "question_id": 57844631, "link": "https://stackoverflow.com/questions/57844631/why-does-changing-a-field-from-a-u8-to-a-mut-u8-cause-a-lifetime-err/57844892#57844892", "title": "Why does changing a field from `&amp;&#39;a [u8]` to `&amp;&#39;a mut [u8]` cause a lifetime error?", "body": "<p>I think that what is misleading you is that your code has a collapsed reference.</p>\n\n<p>Your <code>next</code> function is basically equivalent to this code:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;&amp;'a [u8]&gt; {\n    let result: &amp;&amp;'a [u8] = &amp;self.buf_ref.buf;\n    Some(result)\n}\n</code></pre>\n\n<p>This works because the double reference collapses to a single reference. In this case the double reference only obfuscates the code. Just write:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    Some(self.buf_ref.buf)\n}\n</code></pre>\n\n<p>And this works because references are always <code>Copy</code>.</p>\n\n<p>But now what happens when you change your definition to <code>&amp;'a mut</code>? You are probably guessing right now... mutable references are <em>not</em> <code>Copy</code>, so the same simple code will give you an easy-to-read error message:</p>\n\n<blockquote>\n  <p>cannot move out of <code>self.buf_ref.buf</code> which is behind a mutable reference</p>\n</blockquote>\n\n<p>Naturally, you can reborrow a mutable ref as a const one, and then try to return it, but unfortunately this will not work because the the re-borrow cannot use the same lifetime as the mutable variable, it must be strictly smaller (or you could alias the pointed values). The compiler assigns the lifetime of this re-borrow as that of the <code>next</code> function, but now you cannot return this borrow, because it is a local reference!</p>\n\n<p>Unfortunately, I don't know of any safe way to make your code compile. In fact I'm quite sure that it would create an unsound API. That is, if you managed to compile your code, then this safe code would create undefined behavior:</p>\n\n<pre><code>fn main() {\n    let mut buf = vec![1,2,3];\n    let buf_ref = BufRef { buf: &amp;mut buf };\n    let mut foo = Foo { buf_ref };\n    let x: &amp;[u8] = foo.next().unwrap();\n    //note that x's lifetime is that of buf, foo is not borrowed\n    //x and foo.buf_ref.buf alias the same memory!\n    //but the latter is mutable    \n    println!(\"{}\", x[0]); //prints 1\n    foo.buf_ref.buf[0] = 4;\n    println!(\"{}\", x[0]); //prints what?\n}\n</code></pre>\n"}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 57844892, "answer_count": 1, "score": 6, "last_activity_date": 1567978542, "creation_date": 1567966844, "last_edit_date": 1567978542, "question_id": 57844631, "link": "https://stackoverflow.com/questions/57844631/why-does-changing-a-field-from-a-u8-to-a-mut-u8-cause-a-lifetime-err", "title": "Why does changing a field from `&amp;&#39;a [u8]` to `&amp;&#39;a mut [u8]` cause a lifetime error?", "body": "<p>This code compiles:</p>\n\n<pre><code>struct BufRef&lt;'a&gt; {\n    buf: &amp;'a [u8],\n}\n\nstruct Foo&lt;'a&gt; {\n    buf_ref: BufRef&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for Foo&lt;'a&gt; {\n    type Item = &amp;'a [u8];\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let result = &amp;self.buf_ref.buf;\n        Some(result)\n    }\n}\n</code></pre>\n\n<p>However, if I change <code>BufRef</code> to:</p>\n\n<pre><code>struct BufRef&lt;'a&gt; {\n    buf: &amp;'a mut [u8],\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src\\main.rs:13:16\n   |\n13 |         let result = &amp;self.buf_ref.buf;\n   |                      ^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 12:5...\n  --&gt; src\\main.rs:12:5\n   |\n12 | /     fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n13 | |         let result = &amp;self.buf_ref.buf;\n14 | |         Some(result)\n15 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src\\main.rs:13:16\n   |\n13 |         let result = &amp;self.buf_ref.buf;\n   |                      ^^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 9:6...\n  --&gt; src\\main.rs:9:6\n   |\n9  | impl&lt;'a&gt; Iterator for Foo&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected std::iter::Iterator\n              found std::iter::Iterator\n</code></pre>\n\n<p>Why does changing the field to <code>&amp;'a mut [u8]</code> cause the error?</p>\n\n<p>Also, what does the compiler mean by this:</p>\n\n<pre><code>...so that the types are compatible:\n               expected std::iter::Iterator\n                  found std::iter::Iterator\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1567962667, "post_id": 57844021, "comment_id": 102115385, "body": "As in C/C++, variable resolution and expression typing happens at compile-time, <i>before</i> any code execution occurs. (ie,"}, {"owner": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "reply_to_user": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1567967742, "post_id": 57844021, "comment_id": 102116607, "body": "@user2864740 can you elaborate? In the example code, it feels that shadowing actually creates two variables underneath. Otherwise, it is hard for me to understand after the first execution of the <code>match</code> statement, <code>read_line</code> can be called and the <code>guess</code> string still holds the previous content."}, {"owner": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1567968118, "post_id": 57844021, "comment_id": 102116696, "body": "That comment was to point out that one of the hypothesis presented (&quot;..is shadowed from a String to an integer before the next time it is called as a..&quot;) is not correct as the &#39;next time&#39; is a run-time execution artifact occurring <i>after</i> compilation. Or maybe I was reading that sentence wrong <i>shrug</i>."}], "answers": [{"comments": [{"owner": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "edited": false, "score": 0, "creation_date": 1567982629, "post_id": 57844702, "comment_id": 102119718, "body": "Assuming the execution stayed in the <code>loop</code> after line <code>4</code>, which variable does <code>guess</code> refer to when the code executes line <code>2</code> again? It seems it falls back to referring the variable defined in line <code>1</code>. why? Also, because of the behavior of <code>read_line</code>, <code>guess.clear()</code> can only be called in the beginning of the loop since after line <code>3</code>, <code>guess</code> cannot be referred as a string any more. Does this make the whole code less elegant?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "edited": false, "score": 0, "creation_date": 1567982908, "post_id": 57844702, "comment_id": 102119754, "body": "As I said, this is a syntactic matter: line 2 always refers to the variable in line 1, it just cannot change."}, {"owner": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "edited": false, "score": 1, "creation_date": 1567983360, "post_id": 57844702, "comment_id": 102119818, "body": "I think the better explanation goes like the following: during compile time, <code>guess</code> variable in line 2 is bound to definition in line 1, since at that time, only line 1&#39;s definition is in scope. Then every reference of <code>guess</code> in the loop after line 3 will be bound to the definition of <code>guess</code> in line 3. In this specific case, using shadow variable made things uglier (at least to me) since you now have to call <code>guess.clear()</code> at the beginning of the loop (i.e. before <code>read_line</code>) which makes the code look bad a confusing."}, {"owner": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "edited": false, "score": 0, "creation_date": 1567983677, "post_id": 57844702, "comment_id": 102119873, "body": "The merit of the story <i>don&#39;t use shadowing if the shadowed variable needs further processing down the road</i>."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 4, "last_activity_date": 1567967494, "creation_date": 1567967494, "answer_id": 57844702, "question_id": 57844021, "link": "https://stackoverflow.com/questions/57844021/how-does-rust-handle-shadowed-variables/57844702#57844702", "title": "How does Rust handle shadowed variables?", "body": "<p>Shadowing is a purely syntactic phenomenon. It has no effect in the generated code, that is the generated code would be identical if you chose a different name for each variable. It is just that the shadowed variable cannot be referenced by name.</p>\n\n<p>In particular, in your code:</p>\n\n<pre><code>    let mut guess = String::new(); //1\n    ...    \n    loop {\n        io::stdin().read_line(&amp;mut guess)... //2\n        let guess: u32 =  match guess.trim()... ; //3\n        match guess.cmp(...) // 4\n    }\n    //5\n</code></pre>\n\n<p>The usages in line 2 and 3 refer to the declared variable in line 1, while the usage in line 4 refers to the declaration in line 3. There is no change in the type of the variable, nor there is any change in lifetimes. Simply they are two different variables that happen to have the same name, so that it will be impossible for your program to access the variable in line 1 from line 4.</p>\n\n<p>In fact, after the loop finises, in line 5, the name <code>guess</code> will again refer to the variable in line 1, because the other one went out of scope.</p>\n"}], "owner": {"reputation": 143, "user_id": 2426660, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d352f542e6b42ca249f9198673af4c?s=128&d=identicon&r=PG", "display_name": "gwang", "link": "https://stackoverflow.com/users/2426660/gwang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1567967494, "creation_date": 1567962287, "question_id": 57844021, "link": "https://stackoverflow.com/questions/57844021/how-does-rust-handle-shadowed-variables", "title": "How does Rust handle shadowed variables?", "body": "<p>I have strong C/C++ background and am learning Rust these days. Got puzzled by how Rust handles shadowing variables. Particularly, I was expecting that the following code segment shall run without problem because <code>guess</code> is shadowed from a String to an integer before the next time it is called as a String in <code>read_line</code>. </p>\n\n<p>Reading the API document, I understand <code>read_line</code> would append the next input to <code>guess</code>. But after the shadowing, should <code>guess</code> be considered as an integer and such appending be invalid? Please help.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let secret_number = 10;\n    let mut guess = String::new();\n\n    loop {\n        //guess.clear(); // uncomment this line will make it work. \n        println!(\"Please input your guess:\");\n        io::stdin()\n            .read_line(&amp;mut guess)\n            .expect(\"Failed to read guess.\");\n        let guess: u32 = match guess.trim().parse() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; continue,\n        };\n        match guess.cmp(&amp;secret_number) {\n            Ordering::Less =&gt; println!(\"Too small!\"),\n            Ordering::Greater =&gt; println!(\"Too big!\"),\n            Ordering::Equal =&gt; {\n                println!(\"You win!\");\n                break;\n            }\n        };\n    }\n}\n</code></pre>\n"}, {"tags": ["enums", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 0, "creation_date": 1567941173, "post_id": 57841105, "comment_id": 102110465, "body": "The compiler may complain, but in theory, what I was trying to do <i>should be safe</i>. Also, copy is not an option, because my structs are very large. I was hoping to avoid lifetime identifiers, so I think <code>Rc</code> will be my option."}, {"owner": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 0, "creation_date": 1567941295, "post_id": 57841105, "comment_id": 102110500, "body": "Also, I noticed that I can automatically borrow the enum data when I <code>match &amp;value</code>, so I figured the same thing could have been done vice versa."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 2, "creation_date": 1567941325, "post_id": 57841105, "comment_id": 102110505, "body": "This one isn&#39;t about the safety of <i>this</i>, but the safety of <i>what can come afterwards</i>. If you duplicate the struct (via <code>Rc</code> or <code>Copy</code> or <code>Clone</code>) you effectively have two independent entities in memory (<code>Rc</code> is a special case), all of them immutable. What if you then want to mutate this data?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 1, "creation_date": 1567941368, "post_id": 57841105, "comment_id": 102110521, "body": "In the case of <code>Copy</code> or <code>Clone</code>, you can, but you won&#39;t touch the other structs. In the case of <code>Rc</code> you cannot, <b>period</b>, and you then need to wrap this <code>Rc</code> around <code>RefCell</code> to have interior mutability"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 1, "creation_date": 1567941450, "post_id": 57841105, "comment_id": 102110547, "body": "The crux of this is down to what you actually want to achieve overall. Do you just want an immutable copy of the data, even when the enum is owned? <code>Rc</code>. Do you want to pass a reference around and can guarantee your object lifetime restrictions fit? <code>&amp;</code>. Is your case the <a href=\"https://en.wikipedia.org/wiki/Flyweight_pattern\" rel=\"nofollow noreferrer\">flyweight pattern</a>? <code>Copy</code>/<code>Clone</code> is fine."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 1, "creation_date": 1567941732, "post_id": 57841105, "comment_id": 102110608, "body": "Also, there is no real reason to be afraid of references. If you write your code in a sane fashion you only really see the definitions of them on the definition of structs, traits and enums; in actual business logic, most of them get elided and/or simplified by the compiler. The real crux of this is really that there are three solutions to solve your problem, and they all depend with what you do with your data <b>after</b> the snippet you showed us :-)"}, {"owner": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 0, "creation_date": 1567941734, "post_id": 57841105, "comment_id": 102110609, "body": "I&#39;d never want to mutate these values. The names I gave in the example imply they may change (customer name, etc). However, in my actual scenario, these enums describe events that don&#39;t change."}, {"owner": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 0, "creation_date": 1567941895, "post_id": 57841105, "comment_id": 102110646, "body": "I&#39;m new to rust (obviously), but my enums may be contained within error types, and I don&#39;t think error types should have lifetime identifiers."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "edited": false, "score": 2, "creation_date": 1567942031, "post_id": 57841105, "comment_id": 102110663, "body": "That rules out references in 99% of cases. Since you mentioned yourself that <code>Clone</code>/<code>Copy</code> isn&#39;t an option due to size, this means you answered your own question with <code>Rc</code> :-) Do note as well that <code>Rc::new()</code> calls aren&#39;t actually necessary. <code>Rc&lt;T&gt;</code> implements <a href=\"https://doc.rust-lang.org/src/alloc/rc.rs.html#1162-1166\" rel=\"nofollow noreferrer\"><code>From&lt;T&gt;</code></a>, which means that wherever you need a <code>Rc&lt;T&gt;</code> you can simply call <code>into()</code>"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1567938636, "creation_date": 1567938636, "answer_id": 57841105, "question_id": 57841038, "link": "https://stackoverflow.com/questions/57841038/rust-passing-borrowed-struct-to-a-borrowed-enum/57841105#57841105", "title": "Rust: Passing borrowed struct to a borrowed enum?", "body": "<p>You have misidentified the problem and the compiler was spot-on on its error comments. </p>\n\n<p>You defined your enum like so:</p>\n\n<pre><code>pub enum Person {\n    Customer(CustomerData),\n    Employee(EmployeeData)\n}\n</code></pre>\n\n<p>But then you decide that your enum member should be <code>Person::Customer(&amp;CustomerData)</code>:</p>\n\n<pre><code>fn do_something_with_customer(customer: &amp;CustomerData) {\n    let person = &amp;Person::Customer(customer);\n</code></pre>\n\n<p>References are not transitive. Because <code>&amp;CustomerData</code> is a reference does not mean that the entire enum will be a reference to real data (i.e. <code>&amp;Person::Customer(CustomerData)</code>).</p>\n\n<p>There are two ways to fix it; the obvious is to see if <code>CustomerData</code> implements <code>Copy</code>. If it does, you can just dereference (and therefore implicitly copy):</p>\n\n<pre><code>fn do_something_with_customer(customer: &amp;CustomerData) {\n    let person = Person::Customer(*customer);\n</code></pre>\n\n<p>(This is what the compiler suggested, so I'm pretty sure your type implements <code>Copy</code>)</p>\n\n<p>The other option is to <code>#[derive(Clone)]</code> on the type and call <code>customer.clone()</code>. Again, at the cost of an extra allocation.</p>\n\n<p>If you really want the reference in the enum, you need to change the enum definition to:</p>\n\n<pre><code>pub enum Person&lt;'a&gt; {\n    Customer(&amp;'a CustomerData),\n    Employee(&amp;'a EmployeeData)\n}\n</code></pre>\n\n<p>And handle the fact that the object property is now a reference, with all the problems associated.</p>\n"}], "owner": {"reputation": 8903, "user_id": 96140, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/57371bcaddaa3fc46e2095bf947b2cb4?s=128&d=identicon&r=PG", "display_name": "Paul Knopf", "link": "https://stackoverflow.com/users/96140/paul-knopf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "accepted_answer_id": 57841105, "answer_count": 1, "score": 0, "last_activity_date": 1567938636, "creation_date": 1567938031, "question_id": 57841038, "link": "https://stackoverflow.com/questions/57841038/rust-passing-borrowed-struct-to-a-borrowed-enum", "title": "Rust: Passing borrowed struct to a borrowed enum?", "body": "<p>I'm trying to pass a borrowed struct into a borrowed enum.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Copy, Clone)]\npub struct CustomerData {\n    // Many fields about customers\n}\n\n#[derive(Copy, Clone)]\npub struct EmployeeData {\n    // Many fields about employees\n}\n\npub enum Person {\n    Customer(CustomerData),\n    Employee(EmployeeData)\n}\n\nfn do_something_with_customer(customer: &amp;CustomerData) {\n    let person = &amp;Person::Customer(customer);\n\n    // This would work, but this can be a large struct.\n    // let person = &amp;Person::Customer(customer.clone());\n\n    general_method(person);\n}\n\nfn do_something_with_employee(employee: &amp;EmployeeData) {\n    let person = &amp;Person::Employee(employee);\n\n    // This would work, but this can be a large struct.\n    // let person = &amp;Person::Employee(employee.clone());\n\n    general_method(person);\n}\n\nfn general_method(person: &amp;Person) {\n\n}\n\nfn main() {\n    let person = Person::Customer(CustomerData { });\n\n    match &amp;person {\n        Person::Customer(data) =&gt; {\n            do_something_with_customer(data);\n        }\n        Person::Employee(data) =&gt; {\n            do_something_with_employee(data);\n        }\n    }\n}\n</code></pre>\n\n<p>Compiling gives me the result:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:19:36\n   |\n19 |     let person = &amp;Person::Customer(customer);\n   |                                    ^^^^^^^^\n   |                                    |\n   |                                    expected struct `CustomerData`, found reference\n   |                                    help: consider dereferencing the borrow: `*customer`\n   |\n   = note: expected type `CustomerData`\n              found type `&amp;CustomerData`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:28:36\n   |\n28 |     let person = &amp;Person::Employee(employee);\n   |                                    ^^^^^^^^\n   |                                    |\n   |                                    expected struct `EmployeeData`, found reference\n   |                                    help: consider dereferencing the borrow: `*employee`\n   |\n   = note: expected type `EmployeeData`\n              found type `&amp;EmployeeData`\n</code></pre>\n\n<p>I get that the Rust compiler isn't allowing me to do this, but I feel like I should be able to, considering the enum I'm passing my structs to is borrowed as well.</p>\n\n<p>Is there a pattern/workaround for this scenario? Maybe using the <code>Rc</code> type? I'd hate to litter my code with it for this scenario.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\n#[derive(Copy, Clone)]\npub struct CustomerData {\n    // Many fields about customers\n}\n\n#[derive(Copy, Clone)]\npub struct EmployeeData {\n    // Many fields about employees\n}\n\npub enum Person {\n    Customer(Rc&lt;CustomerData&gt;),\n    Employee(Rc&lt;EmployeeData&gt;)\n}\n\nfn do_something_with_customer(customer: Rc&lt;CustomerData&gt;) {\n    let person = &amp;Person::Customer(customer);\n\n    // This would work, but this can be a large struct.\n    // let person = &amp;Person::Customer(customer.clone());\n\n    general_method(person);\n}\n\nfn do_something_with_employee(employee: Rc&lt;EmployeeData&gt;) {\n    let person = &amp;Person::Employee(employee);\n\n    // This would work, but this can be a large struct.\n    // let person = &amp;Person::Employee(employee.clone());\n\n    general_method(person);\n}\n\nfn general_method(person: &amp;Person) {\n\n}\n\nfn main() {\n    let person = Person::Customer(Rc::new(CustomerData { }));\n\n    match &amp;person {\n        Person::Customer(data) =&gt; {\n            do_something_with_customer(data.clone());\n        }\n        Person::Employee(data) =&gt; {\n            do_something_with_employee(data.clone());\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "dllexport"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567938213, "post_id": 57840984, "comment_id": 102109897, "body": "Did you get a <code>.def</code> file with this when you compiled everything?"}, {"owner": {"reputation": 303, "user_id": 10039586, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u042e\u0440\u0438\u0439 \u0411\u0430\u0440\u0438\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/10039586/%d0%ae%d1%80%d0%b8%d0%b9-%d0%91%d0%b0%d1%80%d0%b8%d0%bd%d0%be%d0%b2"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567939733, "post_id": 57840984, "comment_id": 102110189, "body": "In my release folder I don&#39;t see any def files. May be it exists in any other folder I don&#39;t know."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567939781, "post_id": 57840984, "comment_id": 102110201, "body": "The reason I was asking is because, depending on the compiler you&#39;ll use, you&#39;ll get mangling of function names under windows. There&#39;s a table of compatibility somewhere, let me see if I can find it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567940314, "post_id": 57840984, "comment_id": 102110314, "body": "Actually, tell you what. Add <code>#[export_name=&quot;\\x01_exported_stdmethod&quot;]</code> before your definition and tell me if the symbol list changes"}, {"owner": {"reputation": 303, "user_id": 10039586, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u042e\u0440\u0438\u0439 \u0411\u0430\u0440\u0438\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/10039586/%d0%ae%d1%80%d0%b8%d0%b9-%d0%91%d0%b0%d1%80%d0%b8%d0%bd%d0%be%d0%b2"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567941557, "post_id": 57840984, "comment_id": 102110573, "body": "Yeah I did it before and it doesn&#39;t help. And as far as I know this workaround is about @ postfix.   And I&#39;m sorry but generating def file at link-time is more complicated than I thought. I can generate def file if it really necessary or I can give you full output of dumpbin."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1567941632, "post_id": 57840984, "comment_id": 102110590, "body": "the <code>.def</code> wasn&#39;t for me, it was because <a href=\"https://github.com/rust-lang/rust/issues/17806\" rel=\"nofollow noreferrer\">most windows compilers mangle the method names for <code>stdcall</code> exports</a> ;-) I&#39;m out of solutions for you if <code>export_name</code> didn&#39;t help, however. You&#39;re hitting an issue at the LLVM-rust boundary, basically"}], "answers": [{"tags": [], "owner": {"reputation": 303, "user_id": 10039586, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u042e\u0440\u0438\u0439 \u0411\u0430\u0440\u0438\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/10039586/%d0%ae%d1%80%d0%b8%d0%b9-%d0%91%d0%b0%d1%80%d0%b8%d0%bd%d0%be%d0%b2"}, "is_accepted": true, "score": 1, "last_activity_date": 1568032714, "creation_date": 1568032714, "answer_id": 57854240, "question_id": 57840984, "link": "https://stackoverflow.com/questions/57840984/cant-export-stdcall-method/57854240#57854240", "title": "Can&#39;t export stdcall method", "body": "<p>So I figured out how to fix this issue.<br>\nI used gnu toolchain with MinGW and it was a mistake. I just downloaded MSVC toolchain with microsoft sdk and it solved my problem.  </p>\n"}], "owner": {"reputation": 303, "user_id": 10039586, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u042e\u0440\u0438\u0439 \u0411\u0430\u0440\u0438\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/10039586/%d0%ae%d1%80%d0%b8%d0%b9-%d0%91%d0%b0%d1%80%d0%b8%d0%bd%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 57854240, "answer_count": 1, "score": 1, "last_activity_date": 1568032714, "creation_date": 1567937475, "question_id": 57840984, "link": "https://stackoverflow.com/questions/57840984/cant-export-stdcall-method", "title": "Can&#39;t export stdcall method", "body": "<p>I'm writing some code that use jni. My target platform is Windows. So my jni functions have to use stdcall calling convention but Rust exports functions only with cdecl calling convention.<br>\nI use MinGW(may be it important)</p>\n\n<p>I wrote 2 functions:</p>\n\n<pre><code>#[no_mangle]\npub unsafe extern \"C\" fn exported_cmethod(env: &amp;JNIEnv, obj: jobject, path: jstring) {\n    // Some jni staff\n}\n</code></pre>\n\n<p>And</p>\n\n<pre><code>#[no_mangle]\npub unsafe extern \"stdcall\" fn exported_stdmethod(env: &amp;JNIEnv, obj: jobject, path: jstring) {\n    // Some jni staff\n}\n</code></pre>\n\n<p>And than I used dumpbin to see exports table</p>\n\n<pre><code>dumpbin /exports acc_check.dll | findstr exported\n2094  82D 000014A0 exported_cmethod = __ZN4core3fmt5Write10write_char17h774b1da469bdbfa3E\n</code></pre>\n\n<p>So as you can see Rust exported C method but didn't export stdcall method</p>\n\n<p>What I do wrong?</p>\n"}, {"tags": ["rust", "factorial"], "comments": [{"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1567934958, "post_id": 57840696, "comment_id": 102109243, "body": "Trait is not a keyword in your code, but a Type or Trait, so the compiler searches for it"}], "answers": [{"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567935627, "post_id": 57840734, "comment_id": 102109374, "body": "A slightly less dependent-on-value-of-one example may be to import <code>num::bigint::ToBigUint</code> and then call <code>1.to_biguint()</code>"}, {"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "edited": false, "score": 0, "creation_date": 1567962972, "post_id": 57840734, "comment_id": 102115463, "body": "That would work but, its in a mod.rs file and I need to call it into a variable that is using the <code>use fraction::{Decimal, Fraction};</code> which accepts a <code>u64</code> type and not a <code>BigUint</code>. so I want to type cast the input as a <code>BigUint</code> but I want the output to be <code>u64</code> when you call <code>n</code> in the <code>Decimal::from_fraction(Fration::new(f, factorial_iterative(n)))</code>."}, {"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "edited": false, "score": 0, "creation_date": 1567963041, "post_id": 57840734, "comment_id": 102115479, "body": "otherwise I&#39;m absolutely sure that your answer would work."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1567963283, "post_id": 57840734, "comment_id": 102115548, "body": "You can convert any u64 into BigUint, by <code>to_biguint</code>. the reverse does not make any sense. If your output would fit into a u64, there would be no need for BigUint"}, {"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "edited": false, "score": 0, "creation_date": 1567964565, "post_id": 57840734, "comment_id": 102115896, "body": "when I put in <code>1.to_biguint</code> it has an error and says to try changing it to <code>1_i32</code>. it then says there is no <code>to_biguint</code> method."}], "tags": [], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "is_accepted": true, "score": 3, "last_activity_date": 1618128783, "last_edit_date": 1618128783, "creation_date": 1567935152, "answer_id": 57840734, "question_id": 57840696, "link": "https://stackoverflow.com/questions/57840696/failing-to-resolve-as-trait-in-rust-in-a-factorial-function/57840734#57840734", "title": "failing to resolve as Trait in Rust in a factorial function", "body": "<p>The correct way to get a 1 would be</p>\n<pre><code>use num::BigUint;\nuse num::One;\n\npub fn factorial_iterative(n: u64) -&gt; BigUint {\n    (1..=n).fold(BigUint::one(), |p, n| p*n)\n}\n</code></pre>\n<p>You can't do ranges with the BigUint, so you have to use u64 ranges. You can use the <code>..=</code> to get inclusive ranges.<code>use crate::num::One;</code> is needed to use <code>::one()</code> because its implemented in the <code>One</code> Trait which needs to be in scope.</p>\n"}, {"comments": [{"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "edited": false, "score": 0, "creation_date": 1567972340, "post_id": 57844506, "comment_id": 102117792, "body": "I had to fix all the rest of my program to use BigUint and all that is left is that <code>n|</code> needs a type annotation. I&#39;ve tried looking it up but, I can&#39;t figure out what needs to be done do that."}, {"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "edited": false, "score": 0, "creation_date": 1567972585, "post_id": 57844506, "comment_id": 102117855, "body": "if someone wants me to post the entirety of the program file tree let me know."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1568104998, "post_id": 57844506, "comment_id": 102159261, "body": "Can you post the exact compiler message?"}, {"owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "reply_to_user": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1568276630, "post_id": 57844506, "comment_id": 102225381, "body": "<code>pub fn factorial_iterative(n: u64) -&gt; u64 {     (1..n+1).fold(1, |p, n| p*n) } </code> This is the code that it is based on."}], "tags": [], "owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "is_accepted": false, "score": 0, "last_activity_date": 1567965835, "creation_date": 1567965835, "answer_id": 57844506, "question_id": 57840696, "link": "https://stackoverflow.com/questions/57840696/failing-to-resolve-as-trait-in-rust-in-a-factorial-function/57844506#57844506", "title": "failing to resolve as Trait in Rust in a factorial function", "body": "<p><a href=\"https://stackoverflow.com/users/5878876/unlikus\">@Unlikus</a> almost had it right. The way I was able to correct the function was:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num::one;\nuse num::{BigUint, One};\n\npub fn factorial_iterative(n: BigUint) -&gt; BigUint {\n    (one()..n+one()).fold(BigUint::one(), |p, n| p*n)\n}\n</code></pre>\n\n<p>Thank you. You were able to help me find the right trait to correct my code.</p>\n"}], "owner": {"reputation": 547, "user_id": 3314953, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/778e3c82f0182e355f5a51c26ed47a55?s=128&d=identicon&r=PG&f=1", "display_name": "Whitequill Riclo", "link": "https://stackoverflow.com/users/3314953/whitequill-riclo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 57840734, "answer_count": 2, "score": 3, "last_activity_date": 1618128783, "creation_date": 1567934745, "question_id": 57840696, "link": "https://stackoverflow.com/questions/57840696/failing-to-resolve-as-trait-in-rust-in-a-factorial-function", "title": "failing to resolve as Trait in Rust in a factorial function", "body": "<p>In case the reader doesn't' know the factorial function is written to take a u64 type and I'm trying to use a BigUint instead to get bigger numbers with the factorial function.</p>\n\n<p>I'm trying to cast an integer into a BigUint in Rust this is the code I'm trying to change:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn factorial_iterative(n: u64) -&gt; u64 {\n    (1..n+1).fold(1, |p, n| p*n)\n}\n</code></pre>\n\n<p>I've just been following rust's handy auto correction and I've come up with this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate num;\nuse num::BigUint;\n\npub fn factorial_iterative(n: BigUint) -&gt; BigUint {\n    (1..n+1).fold(1 as &lt;num::BigUint as Trait&gt;::to_u64, |p, n| p*n)\n}\n</code></pre>\n\n<p>but now its throwing me the error: <code>failed to resolve use of undeclared type or module Trait</code></p>\n\n<p>What do I need to add or change to make this work?</p>\n"}, {"tags": ["rust", "move-semantics"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 2, "creation_date": 1567929446, "post_id": 57840075, "comment_id": 102108272, "body": "<i>if I really want to change a value of the variable, then I should use &quot;&amp;mut&quot;</i> -- What do you mean? <code>let mut two = 2; two += 1;</code> will work just fine."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567929575, "post_id": 57840075, "comment_id": 102108304, "body": "<code>&amp;mut</code> is needed when you want to pass a reference, for example when you want to ask a function to change your variable&#39;s content. In your examples, you can just use <code>mut</code>."}, {"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1567930391, "post_id": 57840075, "comment_id": 102108433, "body": "@BenjaminLindley I&#39;m Sorry. My question was not clear. I mean &quot;I want to change the value of the variable two indirectly through t having mutable reference to the variable.&quot;"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1567930575, "post_id": 57840075, "comment_id": 102108457, "body": "@snow Still not clear. I don&#39;t understand then why you are confused about why you can write to  <code>user1.email</code>."}, {"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567930691, "post_id": 57840075, "comment_id": 102108482, "body": "@DenysS&#233;guret Thanks for your comment. I thought my question was messed up. The point I wanted to ask is why I can change the value of user1.email not the value of user1."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567931055, "post_id": 57840075, "comment_id": 102108550, "body": "There&#39;s no mutability <i>per field</i>. If a field isn&#39;t private, and you can mutate the struct, then you can mutate the field. This model is simpler than in some other language and is made possible by the ownership model. Does that answer your question ?"}, {"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1567933305, "post_id": 57840075, "comment_id": 102108950, "body": "@DenysS&#233;guret Thank you so much. I was just confused with other languages. I&#39;ll get along with Rust more."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567934738, "post_id": 57840551, "comment_id": 102109203, "body": "Thanks for gentle and funny explanation :-) I don&#39;t want to lend my car&#39;s mutable reference to the naughty attendant. But, actually, I got confused about another point. I didn&#39;t understand mutability of members of some mutable structs. According to the comments by  Denys S&#233;guret, there is no mutability per fields in Rust."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567934814, "post_id": 57840551, "comment_id": 102109222, "body": "That&#39;s the naughty attendant example - I gave it to him to fuel it up, but he also painted it (that&#39;s a second field in the struct). You either can mutate <i>the entire struct</i> or you can mutate <i>nothing at all</i>. This is enforced by contract."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567934870, "post_id": 57840551, "comment_id": 102109230, "body": "In practice, this isn&#39;t entirely true, however. There are ways to get interior mutability on specific fields from an immutable borrow, but it&#39;s not something you should default to (as it defeats the entire purpose of reference checking, the main advantage of rust). If you&#39;re interested, <code>Cell</code> and <code>RefCell</code> are the tools to accomplish this"}, {"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567937669, "post_id": 57840551, "comment_id": 102109784, "body": "I see. Thanks. I understood the naughty attendant example is caused by the lack of field level mutability; however I still do not understand your example on the URL. In that case, I think the naughty attendant also cannot fuel, am I right?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567937763, "post_id": 57840551, "comment_id": 102109799, "body": "Correct. While the <code>Guard</code> watches the car (and has an immutable borrow to it), it is impossible to grab a mutable reference. And, since the guard has not been given the keys (his borrow is immutable), he cannot do anything to it. You&#39;d need to dismiss the guard to do that. The beauty of this analogy is that it matches real-life almost perfectly :-)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567937906, "post_id": 57840551, "comment_id": 102109826, "body": "(Dismissing the guard is as simple as writing a method for <code>Guard</code> that consumes <code>self</code>, i.e. <code>pub fn dismiss(self) {}</code>. I&#39;ve done it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8df200f5e5484ca4a6edc5976ace82f6\" rel=\"nofollow noreferrer\">here</a> to highlight this. Once the guard is dismissed, you can grab the car again and do whatever you want to it)"}, {"owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "edited": false, "score": 0, "creation_date": 1567940103, "post_id": 57840551, "comment_id": 102110270, "body": "I see. Thanks again. This is really interesting pattern."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1567937680, "last_edit_date": 1567937680, "creation_date": 1567933591, "answer_id": 57840551, "question_id": 57840075, "link": "https://stackoverflow.com/questions/57840075/is-that-move-of-ownership-or-just-copy-of-the-value/57840551#57840551", "title": "Is that &quot;move&quot; of ownership or just &quot;copy&quot; of the value?", "body": "<p>I think your issue stems from a small confusion around <code>mut</code> as a keyword, and an analogy might help.</p>\n\n<p>Imagine that I own a car. Actually, let's first define what a car is:</p>\n\n<pre><code>pub struct Car {\n    fuel: usize,\n    pub color: String,\n    pub wheel_count: u8\n}\n</code></pre>\n\n<h1>Mutable definitions</h1>\n\n<p>Let's define my car</p>\n\n<pre><code>let mut my_car:Car = Car { fuel: 100, color: \"Green\".to_string(), wheel_count: 4 };\n</code></pre>\n\n<p>This is my car. I've defined it as a changeable entity (<code>let mut</code>), so if I want to, I can fuel it up and turn it blue</p>\n\n<pre><code>my_car.fuel += 20;\nmy_car.color = \"Blue\".to_string();\n</code></pre>\n\n<p>This is down to the definition of the variable itself. If I had just <code>let</code> my car, I wouldn't have been able to do this. Assigning a variable with <code>let mut</code> indicates that it can be modified, across all fields, by whoever has either:</p>\n\n<ul>\n<li>The owned object</li>\n<li>A mutable borrow to it</li>\n</ul>\n\n<h1>References/Borrows</h1>\n\n<p>I then decide to go to the fuel station to fuel it up. I lend my car to the attendant so they can do it for me:</p>\n\n<pre><code>pub fn lend_car_to_attendant(target_car: &amp;mut Car) {\n  target_car.fuel += 20;\n}\n</code></pre>\n\n<p>He could, if he had wanted, have driven to the paint shop and changed the color of the car, as the <strong>entire car</strong> is temporarily his. It is also worth noting that while he has the car, <em>I cannot do anything with it</em>. I lent it to him, and until he returns the <code>borrow</code>, it is his.</p>\n\n<p>Now, of course, outside of the time he has the car, anybody can peek at my car and admire its color (or the number of wheels it has). All public attributes of <code>my_car</code> are publicly inspectable by anybody with an immutable borrow.</p>\n\n<p>I then decide to try another fuel station, and it turns out to be pretty dishonest:</p>\n\n<pre><code>pub fn lend_car_to_naughty_attendant(target_car: &amp;mut Car) {\n    target_car.fuel += 20;\n    lend_car_to_paint_shop(target_car);\n}\npub fn lend_car_to_paint_shop(target_car: &amp;mut Car) {\n    target_car.color = \"Bubblegum Pink\".to_string();\n}\n</code></pre>\n\n<p>My car came back bubblegum pink!</p>\n\n<p>We could have avoided this by having somebody watch over the car. If we give somebody an immutable borrow to <code>&amp;my_car</code>, and then try to go to that terrible fuel station again, the program will not compile at all (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7e1b5b6aa0aac2d7b574420a68b96a1\" rel=\"nofollow noreferrer\">example here</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 2964, "user_id": 7134134, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fzCCW.jpg?s=128&g=1", "display_name": "snnsnn", "link": "https://stackoverflow.com/users/7134134/snnsnn"}, "is_accepted": false, "score": 0, "last_activity_date": 1568222255, "last_edit_date": 1568222255, "creation_date": 1568219962, "answer_id": 57893499, "question_id": 57840075, "link": "https://stackoverflow.com/questions/57840075/is-that-move-of-ownership-or-just-copy-of-the-value/57893499#57893499", "title": "Is that &quot;move&quot; of ownership or just &quot;copy&quot; of the value?", "body": "<p>I think you are confused about how variables work. Variables are like cups that can store data, for strongly typed languages like rust they can hold only one type of data.</p>\n\n<p>So when you declare a value basically you are instructing the computer to allocate some space in the memory:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x: u32;\n</code></pre>\n\n<p>In above example, basically you are saying \"computer, give me a cup big enough to hold u32 data <a href=\"https://doc.rust-lang.org/book/ch03-02-data-types.html\" rel=\"nofollow noreferrer\">(32 bits)</a>\". </p>\n\n<p>Then computer gives you that cup, in our case x is the owner. <code>x</code> is how you hold onto that cup, in other words owner of the memory space.</p>\n\n<p>Now lets fill that cup with a proper data:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>x = 42;\n</code></pre>\n\n<p>Once mighty computer reserves that cup for x, it belongs to x until x relinquishes the ownership:</p>\n\n<ul>\n<li>by passing it to another variable (rust calls it move),</li>\n<li>or by calling drop on it</li>\n<li>or x falls off the scope.</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>{\n  let x: u32 = 42;\n  let y = x;\n}\n\n{\n  let x: u32 = 42;\n  drop(x);\n}\n\n{\n  let x: u32 = 42;\n}\n // x is dropped here\n</code></pre>\n\n<p>Once memory space is released, computer can give it to other variables.</p>\n\n<p>You can check the address of the memory space as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"address of var: {:p}\", &amp;x);\n</code></pre>\n\n<p>Computer gives you that memory space when you initialize x. This is Resource Acquisition Is Initialization (RAII) at work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let x: u32;\n    println!(\"address of x: {:p}\", &amp;x);\n    x = 12;\n    println!(\"{}\", x);\n}\n</code></pre>\n\n<p>You get compiler error:</p>\n\n<pre><code>12 |     println!(\"address of x: {:p}\", &amp;x);\n   |                                      ^^ use of possibly uninitialized `x`\n</code></pre>\n\n<p>But if you check the adress after the initialization, it compiles without any error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let x: u32;\n    x = 12;\n    println!(\"address of x: {:p}\", &amp;x); // address of x: 0x7ffc8183402c\n}\n</code></pre>\n\n<p>When declaring a variable you have a contract with the compiler. <code>mut</code> is one of the terms of that contract.</p>\n\n<p>By not using <code>mut</code> keyword, you are simply saying I will never change what is in the cup (in memory space x points) once I fill it (initialize a variable). Once you fill your cup, it stays that way.</p>\n\n<p>But if you use <code>mut</code> keyword, your contract says you can put any value in that memory space, as long as it is correct type.</p>\n\n<p>In both cases owner of that memory space is x. Mutability has nothing to do with ownership.</p>\n\n<p>Now, about your example:</p>\n\n<pre><code>let mut two = 2;\nlet t = &amp;mut two;\n*t += 1;\n</code></pre>\n\n<p>In second line, you are taking a mutable reference to variable <code>two</code>. In other words t borrows what x points to. In the next line, you are filling the cup with 3. Since you are using mutable reference, you had to dereference in the following line <code>*t += 1;</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut two = 2;\nprintln!(\"address of &amp;two: {:p}\", &amp;two);\nlet t = &amp;mut two;\n*t += 1;\nprintln!(\"address of t: {:p}\", t);\n</code></pre>\n\n<p>This prints:</p>\n\n<pre><code>address of &amp;two: 0x7ffc5869c9c4\naddress of t  : 0x7ffc5869c9c4\n</code></pre>\n\n<p><code>two</code> is the owner, t just borrows:</p>\n\n<pre><code>let mut two = 2;\n{\n  let t = &amp;mut two;\n  *t += 1;\n  println!(\"{:?}\", t);\n}\n\ntwo += 10;\nprintln!(\"{:?}\", two);\n</code></pre>\n\n<p>Again mutability has nothing to do with ownership, Rust puts constrains on borrowing mutable values to eliminate confusion since it is easy to loose control of who does what when multiple variable can change what is in your cup.</p>\n\n<p>In case of User type, if you initialize <code>user1</code> value as mutable, you can change what you store in its properties. It is just like cup holding other cups, or pointer to other cups stored in the heap.</p>\n"}], "owner": {"reputation": 11, "user_id": 12036730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c9d063840b309299fba36a2ad87de6f?s=128&d=identicon&r=PG&f=1", "display_name": "snow", "link": "https://stackoverflow.com/users/12036730/snow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 540, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1568222255, "creation_date": 1567929057, "question_id": 57840075, "link": "https://stackoverflow.com/questions/57840075/is-that-move-of-ownership-or-just-copy-of-the-value", "title": "Is that &quot;move&quot; of ownership or just &quot;copy&quot; of the value?", "body": "<p>I have a question related to move semantics in Rust.\nIn my understanding, \"mut\" keyword in Rust is to make some variables\nmutable, i.e., mutable variables can be bound to another values again; however this mutability is just for bindings. So, if I really want to change a value of the variable, then I should use \"&amp;mut\" keyword like this:</p>\n\n<pre><code>let mut two = 2;\nlet t = &amp;mut two;\n*t += 1;// update the value of two, not only bind t to another values\nprint!(\"{}\", t); // here, t is 3\n</code></pre>\n\n<p>However, in a case with using structs, it does's not seems like this.</p>\n\n<p>Here, this is an example code (<a href=\"https://doc.rust-lang.org/book/ch05-01-defining-structs.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch05-01-defining-structs.html</a>):</p>\n\n<pre><code>let mut user1 = User {\n    email: String::from(\"someone@example.com\"),\n    username: String::from(\"someusername123\"),\n    active: true,\n    sign_in_count: 1,\n};\n\nuser1.email = String::from(\"anotheremail@example.com\");\n</code></pre>\n\n<p>Why can I rewrite the field \"email\" of user1?\nIt does not seem like a re-binding of user1.</p>\n"}, {"tags": ["function", "vector", "reference", "rust", "borrowing"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1567924415, "post_id": 57839662, "comment_id": 102107555, "body": "Why do you want to return it if it&#39;s the same vector ? Why not just <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a84ce230c3cdb44d00b363952fa4eeae\" rel=\"nofollow noreferrer\">this</a> ?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567934074, "post_id": 57839662, "comment_id": 102109092, "body": "Hi there! The cause of the error messages is a typo: you wrote <code>vec</code> but should have written <code>Vec</code> (uppercase). It really makes sense to completely read the error message, as this already suggests exactly this. I would propose to close this question since &quot;fix the typo&quot; isn&#39;t really a useful answer. But with the typo fixed, your code still does not compile. I&#39;d ask you to create another question with the typo fixed -- then we can answer the new one easily! Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "is_accepted": false, "score": 0, "last_activity_date": 1567934311, "creation_date": 1567934311, "answer_id": 57840637, "question_id": 57839662, "link": "https://stackoverflow.com/questions/57839662/i-want-to-pass-reference-of-a-vector-to-a-function-then-modify-it-there-and-retu/57840637#57840637", "title": "I want to pass reference of a vector to a function then modify it there and return as vector", "body": "<p>You can just take the Vector by value, modify it and then return it:</p>\n\n<pre><code>fn change_vector(mut new_vector: Vec&lt;i64&gt;) -&gt; Vec&lt;i64&gt; {\n    new_vector.push(11);\n    new_vector\n}\n</code></pre>\n\n<p>This does not copy the contents of the vector, it just does a move (only copies the internal pointer of the vector and it's length)</p>\n\n<p>Another possibility would taking the vector as mutable reference:</p>\n\n<pre><code>fn change_vector(new_vector: &amp;mut Vec&lt;i64&gt;) {\n    new_vector.push(11);\n}\n</code></pre>\n\n<p>Your code (With capitalized Vec)</p>\n\n<pre><code>fn change_vector(new_vector: &amp;[Vec&lt;i64&gt;]) -&gt; Vec&lt;i64&gt; {\n    new_vector.push(11);\n    new_vector\n}\n</code></pre>\n\n<p>accepts a slice of vectors of i64, which is probably not what you want</p>\n"}, {"comments": [{"owner": {"reputation": 3, "user_id": 11354623, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Afzal Ahmed", "link": "https://stackoverflow.com/users/11354623/afzal-ahmed"}, "edited": false, "score": 0, "creation_date": 1567938483, "post_id": 57840678, "comment_id": 102109948, "body": "My code had bugs other than typo which you and others correctly pointed out. Thank you so much for the rectification part. It was a big favor. Thanks and Regards."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 3, "user_id": 11354623, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Afzal Ahmed", "link": "https://stackoverflow.com/users/11354623/afzal-ahmed"}, "edited": false, "score": 0, "creation_date": 1567938525, "post_id": 57840678, "comment_id": 102109962, "body": "Anytime! I guess you&#39;re coming from C/C++ from the mistakes you made; don&#39;t hesitate to ask more stuff, I&#39;m sure others and I will be happy to help you out"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 0, "last_activity_date": 1567934625, "creation_date": 1567934625, "answer_id": 57840678, "question_id": 57839662, "link": "https://stackoverflow.com/questions/57839662/i-want-to-pass-reference-of-a-vector-to-a-function-then-modify-it-there-and-retu/57840678#57840678", "title": "I want to pass reference of a vector to a function then modify it there and return as vector", "body": "<p>There are a bunch of issues with your code stemming from incorrect syntax and goals. Let's go through them one by one:</p>\n\n<pre><code>let mut my_vector: Vec&lt;i64&gt; = Vec::new();\nmy_vector.push(11);\nmy_vector.push(12);\nmy_vector.push(13);\nprintln!(\"{:?}\", my_vector);\n</code></pre>\n\n<p>This is fine. <code>my_vector</code> contains <code>[11, 12, 13]</code>.</p>\n\n<pre><code>let vec_ref: &amp;[vec&lt;i64&gt;] = &amp;my_vector;\n</code></pre>\n\n<p>This is not fine. A reference to <code>Vec&lt;i64&gt;</code> is <code>&amp;Vec&lt;i64&gt;</code>, not a slice. Change this to <code>let vec_ref:&amp;Vec&lt;i64&gt; = &amp;my_vector;</code>. You also do not need this line and if you decide to use this reference later, your code will stop compiling due to a later decision, which we are about to get to...</p>\n\n<pre><code>let v2 = change_vector(&amp;mut vec_ref);\n</code></pre>\n\n<p>This is not fine. You cannot take a mutable reference of an immutable reference. It stands to reason.\n<code>change_vector(&amp;mut my_vector)</code> is fine syntactically, but combined with the previous assignment, is a minefield. You've acquired an immutable reference as <code>vec_ref</code> on the line above; if you do not use <code>vec_ref</code> the compiler will drop it entirely for you; however, if you do decide to use it your code will not compile due to you not being able to hold an immutable <em>and</em> a mutable borrow at the same time.</p>\n\n<pre><code>fn change_vector(new_vector: &amp;[vec&lt;i64&gt;]) -&gt; Vec&lt;i64&gt; {\n</code></pre>\n\n<p>This is not fine, for reasons above. It should be <code>fn change_vector(new_vector: &amp;mut Vec&lt;i64&gt;) {</code>.</p>\n\n<p>The reason the return type changed is that you cannot return an owned <code>Vec</code> from a reference without allocation. If you did want to allocate, then obviously this should be different.</p>\n\n<pre><code>new_vector.push(11);\n</code></pre>\n\n<p>This is fine.</p>\n\n<pre><code>new_vec\n</code></pre>\n\n<p>With the new return signature, this line is superfluous.</p>\n\n<p>The corrected code is visible <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=406a4b75d5baa29bd02240b7dbe18dba\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 3, "user_id": 11354623, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Afzal Ahmed", "link": "https://stackoverflow.com/users/11354623/afzal-ahmed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 1, "accepted_answer_id": 57840678, "answer_count": 2, "score": 0, "last_activity_date": 1567934625, "creation_date": 1567924146, "last_edit_date": 1567933868, "question_id": 57839662, "link": "https://stackoverflow.com/questions/57839662/i-want-to-pass-reference-of-a-vector-to-a-function-then-modify-it-there-and-retu", "title": "I want to pass reference of a vector to a function then modify it there and return as vector", "body": "<p>I want to pass address of a vector that contains <code>i64</code> values to a function as argument, then I want my function to modify the vector at its original location and return the modified vector as <code>i64</code>.</p>\n\n<p>I tried to pass mutable reference of the vector to the function and tried to modified it but compiler showing error: a struct with a similar name exists and error: expected type found macro etc.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut my_vector: Vec&lt;i64&gt; = Vec::new();\n    my_vector.push(11);\n    my_vector.push(12);\n    my_vector.push(13);\n    println!(\"{:?}\", my_vector);\n    let vec_ref: &amp;[vec&lt;i64&gt;] = &amp;my_vector;\n    let v2 = change_vector(&amp;mut vec_ref);\n    println!(\"{:?}\", v2);\n    println!(\"{:?}\", my_vector);\n}\n\nfn change_vector(new_vector: &amp;[vec&lt;i64&gt;]) -&gt; Vec&lt;i64&gt; {\n    new_vector.push(11);\n    new_vector\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4f219c3f711d35a57824ff471894f687\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>I expect my function <code>change_vector()</code> to receive reference of the location of <code>my_vector</code>, modify it and then return it as vector. Its not happening, compiler showing errors and aborting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0573]: expected type, found macro `vec`\n --&gt; src/main.rs:7:20\n  |\n7 |     let vec_ref: &amp;[vec&lt;i64&gt;] = &amp;my_vector;\n  |                    ^^^^^^^^\nhelp: a struct with a similar name exists\n  |\n7 |     let vec_ref: &amp;[Vec&lt;i64&gt;] = &amp;my_vector;\n  |                    ^^^\nhelp: use `!` to invoke the macro\n  |\n7 |     let vec_ref: &amp;[vec!] = &amp;my_vector;\n  |                    ^^^^\n\nerror[E0573]: expected type, found macro `vec`\n  --&gt; src/main.rs:13:32\n   |\n13 | fn change_vector(new_vector: &amp;[vec&lt;i64&gt;]) -&gt; Vec&lt;i64&gt; {\n   |                                ^^^^^^^^\nhelp: a struct with a similar name exists\n   |\n13 | fn change_vector(new_vector: &amp;[Vec&lt;i64&gt;]) -&gt; Vec&lt;i64&gt; {\n   |                                ^^^\nhelp: use `!` to invoke the macro\n   |\n13 | fn change_vector(new_vector: &amp;[vec!]) -&gt; Vec&lt;i64&gt; {\n   |                                ^^^^\n</code></pre>\n\n<p>I would be grateful for any help.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "edited": false, "score": 0, "creation_date": 1567925256, "post_id": 57839569, "comment_id": 102107677, "body": "Thank you! Those type annotations in the documentation make a lot more sense after reading your answer."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1593027173, "last_edit_date": 1593027173, "creation_date": 1567922654, "answer_id": 57839569, "question_id": 57839231, "link": "https://stackoverflow.com/questions/57839231/why-cant-i-call-next-back-on-a-split/57839569#57839569", "title": "Why can&#39;t I call next_back() on a Split?", "body": "<h1>Solution</h1>\n<p>Replace</p>\n<pre><code>file_name.split(&quot;.&quot;)\n</code></pre>\n<p>with</p>\n<pre><code>file_name.split('.')\n</code></pre>\n<h1>Explanation</h1>\n<p>Here's the trait implementation declaration:</p>\n<pre><code>impl&lt;'a, P&gt; DoubleEndedIterator for Split&lt;'a, P&gt;\nwhere\n    P: Pattern&lt;'a&gt;,\n    &lt;P as Pattern&lt;'a&gt;&gt;::Searcher: DoubleEndedSearcher&lt;'a&gt;, \n</code></pre>\n<p>The missing trait bound here is</p>\n<pre><code>&lt;P as Pattern&lt;'a&gt;&gt;::Searcher: DoubleEndedSearcher&lt;'a&gt;,\n</code></pre>\n<p>This trait bound is implemented for the searcher of <code>char</code> but not for <code>&amp;str</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.DoubleEndedSearcher.html\" rel=\"nofollow noreferrer\"><code>DoubleEndedSearcher</code></a></p>\n<blockquote>\n<p><code>char::Searcher</code> is a <code>DoubleEndedSearcher</code> because searching for a <code>char</code>\nonly requires looking at one at a time, which behaves the same from\nboth ends.</p>\n<p><code>(&amp;str)::Searcher</code> is not a <code>DoubleEndedSearcher</code> because the pattern <code>&quot;aa&quot;</code>\nin the haystack <code>&quot;aaa&quot;</code> matches as either <code>&quot;[aa]a&quot;</code> or <code>&quot;a[aa]&quot;</code>, depending\nfrom which side it is searched.</p>\n</blockquote>\n<p>Said otherwise: Not all patterns allow double ended search. A <code>char</code> allows it but not a string.</p>\n"}], "owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 1, "closed_date": 1593027221, "accepted_answer_id": 57839569, "answer_count": 1, "score": 2, "last_activity_date": 1593027173, "creation_date": 1567917646, "last_edit_date": 1593027078, "question_id": 57839231, "link": "https://stackoverflow.com/questions/57839231/why-cant-i-call-next-back-on-a-split", "closed_reason": "Duplicate", "title": "Why can&#39;t I call next_back() on a Split?", "body": "<p>The documentation for <a href=\"https://doc.rust-lang.org/std/str/struct.Split.html\" rel=\"nofollow noreferrer\"><code>Split</code></a> says that it implements <a href=\"https://doc.rust-lang.org/std/iter/trait.DoubleEndedIterator.html\" rel=\"nofollow noreferrer\"><code>DoubleEndedIterator</code></a> which is supposed to have a <a href=\"https://doc.rust-lang.org/std/iter/trait.DoubleEndedIterator.html#tymethod.next_back\" rel=\"nofollow noreferrer\"><code>next_back()</code></a> method which gets the last element.</p>\n<p>But when I do this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_file_ext(file_name: &amp;str) -&gt; Option&lt;String&gt; {\n    if let Some(ext) = file_name.split(&quot;.&quot;).next_back() {\n        return Some(ext.to_owned());\n    }\n    None\n}\n</code></pre>\n<p>I get this error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `next_back` found for struct `std::str::Split&lt;'_, &amp;str&gt;` in the current scope\n   --&gt; src/lib.rs:2:45\n    |\n2   |       if let Some(ext) = file_name.split(&quot;.&quot;).next_back() {\n    |                                               ^^^^^^^^^ method not found in `std::str::Split&lt;'_, &amp;str&gt;`\n    |\n    = note: the method `next_back` exists but the following trait bounds were not satisfied:\n            `std::str::pattern::StrSearcher&lt;'_, '_&gt;: std::str::pattern::DoubleEndedSearcher&lt;'_&gt;`\n            which is required by `std::str::Split&lt;'_, &amp;str&gt;: std::iter::DoubleEndedIterator`\n</code></pre>\n<p>What does it mean by <code>&quot;the following trait bounds were not satisfied&quot;</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 2, "last_activity_date": 1567924431, "last_edit_date": 1567924431, "creation_date": 1567923391, "answer_id": 57839609, "question_id": 57839166, "link": "https://stackoverflow.com/questions/57839166/how-to-manage-lifetime-of-cstring-in-a-vec/57839609#57839609", "title": "How to manage lifetime of CString in a Vec?", "body": "<p>You can just store the actual CString objects:</p>\n\n<pre><code>let a = vec![\n    CString::new(\"VK_LAYER_LUNARG_standard_validation\").expect(\"CString err A\")\n];\n</code></pre>\n\n<p>And if what you actually need is a contiguous array of pointers, perhaps for passing to a C function that is expecting that sort of thing, you can create a second vector holding the pointers from the strings in the first.</p>\n\n<pre><code>let b: Vec&lt;*const c_char&gt; = a.iter().map(|cstr| {\n    cstr.as_ptr()\n}).collect();\n</code></pre>\n\n<p>The first vector will outlive the second, and it will properly drop the contained CString objects when it is dropped itself.</p>\n"}], "owner": {"reputation": 183, "user_id": 6052784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6853c86794c5e26577e65a4fe1fe36d9?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew Lentvorski", "link": "https://stackoverflow.com/users/6052784/andrew-lentvorski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 57839609, "answer_count": 1, "score": 1, "last_activity_date": 1593028140, "creation_date": 1567916507, "last_edit_date": 1593028140, "question_id": 57839166, "link": "https://stackoverflow.com/questions/57839166/how-to-manage-lifetime-of-cstring-in-a-vec", "title": "How to manage lifetime of CString in a Vec?", "body": "<p>Is there a better or more idiomatic way to handle the lifetime of a <code>CString</code> in a <code>Vec</code> other than using <code>into_raw()</code>?</p>\n<p>Here's my code:</p>\n<pre><code>// This fails because the CString gets dropped and then what is pointed to is invalid and invalidates required_layers\nlet required_layers: Vec&lt;*const c_char&gt; = vec!(\n    CString::new(&quot;VK_LAYER_LUNARG_standard_validation&quot;).expect(&quot;CString err A&quot;).as_ptr(),\n);\n\n// This works because ss0 stays alive, but is going to be error-prone as dropping ss0 somewhere invalidates required_layers\nlet ss0 = CString::new(&quot;VK_LAYER_LUNARG_standard_validation&quot;).expect(&quot;CString err A&quot;);\nlet required_layers: Vec&lt;*const c_char&gt; = vec!(\n    ss0.as_ptr(),\n);\n\n// This works, but now requires from_raw() to retake ownership to avoid leaks\nlet required_layers: Vec&lt;*const c_char&gt; = vec!(\n    CString::new(&quot;VK_LAYER_LUNARG_standard_validation&quot;).expect(&quot;CString err A&quot;).into_raw(),\n);\n</code></pre>\n"}, {"tags": ["mysql", "rust", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 1027, "user_id": 372118, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/457a100a8c61d5f5a33fe3ec0ccfa727?s=128&d=identicon&r=PG", "display_name": "richb01", "link": "https://stackoverflow.com/users/372118/richb01"}, "edited": false, "score": 0, "creation_date": 1567882843, "post_id": 57836542, "comment_id": 102101673, "body": "You might be right. Especially considering that this is just a &quot;I feel like learning wasm&quot; project. (This was never going to go into release.) The good news is that this is part of the learning experience!"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1027, "user_id": 372118, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/457a100a8c61d5f5a33fe3ec0ccfa727?s=128&d=identicon&r=PG", "display_name": "richb01", "link": "https://stackoverflow.com/users/372118/richb01"}, "edited": false, "score": 0, "creation_date": 1567882958, "post_id": 57836542, "comment_id": 102101689, "body": "FWIW there&#39;d be another problem, you would need a bridge in between; this may have changed since but last time I had a proper look at webassembly the only methods of communication available were webRTC, websockets and HTTP(S). So, you&#39;d have been SOL one step further."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1027, "user_id": 372118, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/457a100a8c61d5f5a33fe3ec0ccfa727?s=128&d=identicon&r=PG", "display_name": "richb01", "link": "https://stackoverflow.com/users/372118/richb01"}, "edited": false, "score": 0, "creation_date": 1567882974, "post_id": 57836542, "comment_id": 102101692, "body": "As for learning, the real learning experience is the journey, not the destination :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1567881814, "creation_date": 1567881814, "answer_id": 57836542, "question_id": 57836226, "link": "https://stackoverflow.com/questions/57836226/importing-mysql-gives-many-errors-when-running-wasm-pack/57836542#57836542", "title": "Importing mysql gives many errors when running wasm-pack", "body": "<p>That's a pretty big difference; by doing so, you're adding, from the highest layer to the lowest:</p>\n\n<ul>\n<li>Libraries to deal with mysql</li>\n<li>Libraries to deal with the various compression mechanisms MySQL can use</li>\n<li>Libraries to deal with TLS</li>\n<li>Libraries to deal with sockets (where your errors are coming from)</li>\n</ul>\n\n<p>If the entire chain was known to work with <code>wasm</code>, this would be fine. The problem is, it's not; as you can tell from the <a href=\"https://docs.rs/crate/mysql/16.1.0/source/Cargo.toml\" rel=\"nofollow noreferrer\">Cargo.toml</a> file for that library, it \"knows\" windows, macOS or linux as targets. In your case, <code>wasm</code> is neither of those three, and so it tries <code>net2</code> for networking, which depends on <code>libc</code>, which requires all those symbols that are suddenly missing.</p>\n\n<p>You're going to go down a very, very deep rabbit hole if you decide to push this forward. If you do, mention in the comments and I'll give you pointers. However, before you do, consider the following: if this is for a <code>wasm</code> worker, anybody with the code will be able to know the triplet (proto, host, port) to access the MySQL server you'll be using, along with the credentials. This may also open serious infrastructure issues as you will not necessarily know what is a trusted client, and what isn't.</p>\n\n<p>(I'm not going to lie to you, it's also going to be a <strong>lot</strong> of work, and most of it will not be easy. For instance, I wouldn't go down that hole)</p>\n"}], "owner": {"reputation": 1027, "user_id": 372118, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/457a100a8c61d5f5a33fe3ec0ccfa727?s=128&d=identicon&r=PG", "display_name": "richb01", "link": "https://stackoverflow.com/users/372118/richb01"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "accepted_answer_id": 57836542, "answer_count": 1, "score": 2, "last_activity_date": 1567881814, "creation_date": 1567879186, "question_id": 57836226, "link": "https://stackoverflow.com/questions/57836226/importing-mysql-gives-many-errors-when-running-wasm-pack", "title": "Importing mysql gives many errors when running wasm-pack", "body": "<p>I'm very new to rust and Web Assembly and have a simple sample site. So far, it's just been very simple stuff and it's all working fine. Next I want to see about connecting to MySQL.</p>\n\n<p>To Cargo.toml, I added:</p>\n\n<pre><code>    [dependencies]\n    wasm-bindgen = \"0.2.50\"\n    mysql = \"*\"\n</code></pre>\n\n<p>Everything compiles fine without the mysql part. Once I add <code>mysql=\"*\"</code>, I get many (317) errors.</p>\n\n<p>Some error samples:</p>\n\n<pre><code>[INFO]: Checking for the Wasm target...\n[INFO]: Compiling to Wasm...\n   Compiling net2 v0.2.33\n   Compiling libc v0.2.62\nerror[E0432]: unresolved import `sys`\n  --&gt; /home/rich/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src\n/tcp.rs:18:5\n   |\n18 | use sys::c;\n   |     ^^^ maybe a missing `extern crate sys;`?\n</code></pre>\n\n<p>and</p>\n\n<pre><code>error[E0425]: cannot find value `timeout2ms` in this scope\n    --&gt; /home/rich/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs:1145:18\n     |\n1145 |             .map(timeout2ms)\n     |                  ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `SOL_SOCKET` in this scope\n    --&gt; /home/rich/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs:1149:33\n     |\n1149 |         set_opt(self.as_sock(), SOL_SOCKET, SO_SNDTIMEO,\n     |                                 ^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `SO_SNDTIMEO` in this scope\n    --&gt; /home/rich/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs:1149:45\n     |\n1149 |         set_opt(self.as_sock(), SOL_SOCKET, SO_SNDTIMEO,\n     |                                             ^^^^^^^^^^^ not found in this scope\n</code></pre>\n\n<p>So far, I haven't added any code to actually connect to the database. I'm only trying to build the project. The <strong>only</strong> difference is adding the mysql dependency. </p>\n\n<p>I'm using this site info on using MySQL: <a href=\"https://docs.rs/mysql/15.1.0/mysql/\" rel=\"nofollow noreferrer\">mysql - Rust</a></p>\n\n<p>Given I'm new to Rust, I'm not sure what other info might be needed to help. </p>\n\n<p>Edit: I've been googling for many of these errors without luck. </p>\n"}, {"tags": ["string", "rust", "ascii"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1567876205, "last_edit_date": 1567876205, "creation_date": 1567875874, "answer_id": 57835812, "question_id": 57835391, "link": "https://stackoverflow.com/questions/57835391/match-string-with-charis-ascii-alphanumeric-fails-whereas-charis-alphanu/57835812#57835812", "title": "Match string with `char::is_ascii_alphanumeric` fails, whereas `char::is_alphanumeric` compiles", "body": "<blockquote>\n  <p>why it works for one function but not the other?</p>\n</blockquote>\n\n<p>Let's take a look at the signatures:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn       is_alphanumeric( self) -&gt; bool\nfn is_ascii_alphanumeric(&amp;self) -&gt; bool\n</code></pre>\n\n<p>One function takes <code>&amp;self</code> (a reference) and the other takes <code>self</code> (by value) as argument. This is an important difference in this case. Now let's check the error again:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n --&gt; src/main.rs:3:9\n  |\n3 |     \"s\".matches(char::is_ascii_alphanumeric).collect(); // Doesn't work\n  |         ^^^^^^^\n  |         |\n  |         expected signature of `fn(char) -&gt; _`\n  |         found signature of `for&lt;'r&gt; fn(&amp;'r char) -&gt; _`\n</code></pre>\n\n<p>Especially the last part (aligned by me):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  |         expected signature of `        fn(    char) -&gt; _`\n  |         found signature of    `for&lt;'r&gt; fn(&amp;'r char) -&gt; _`\n</code></pre>\n\n<p>It shows that a function taking <code>char</code> as argument is expected, but a function taking <code>&amp;'r char</code> as argument was found. Ignore the <code>for&lt;'r&gt;</code> and <code>'r</code> here, they are not important in this case.</p>\n\n<p>Why is <code>fn(char)</code> expected? Well, looking at <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.matches\" rel=\"nofollow noreferrer\"><code>str::matches</code></a> it shows that it accepts anything that implements <a href=\"https://doc.rust-lang.org/stable/std/str/pattern/trait.Pattern.html\" rel=\"nofollow noreferrer\"><code>Pattern</code></a>. Among the implementors of <code>Pattern</code>, we find:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, F&gt; Pattern&lt;'a&gt; for F\nwhere\n    F: FnMut(char) -&gt; bool,\n</code></pre>\n\n<p>And that's the reason why a function taking <code>char</code> by value and <em>not</em> by reference was expected.</p>\n\n<p>How can you fix it? You can always provide a closure and just call the method with the value referenced. This is likely to not have any runtime overhead as the closure can easily be inlined by the optimizer.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\"s\".matches(|c| char::is_ascii_alphanumeric(&amp;c))\n</code></pre>\n\n<hr>\n\n<p>A few additional things:</p>\n\n<ul>\n<li>The second error message is just a result of the first. It goes away after applying the fix.</li>\n<li>You still need to specify the type of the collection you want to collect the iterator into. For example <code>Vec&lt;_&gt;</code>:\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x: Vec&lt;_&gt; = \"s\".matches(|c| char::is_ascii_alphanumeric(&amp;c)).collect();\n</code></pre></li>\n<li><p>Why do these two methods of <code>char</code> have different signatures?! This seems strange, and indeed taking <code>self</code> by value would be preferred for both. Coincidentally, I was the one who added <code>is_ascii_alphanumeric</code> to <code>char</code> directly in <a href=\"https://github.com/rust-lang/rust/pull/44042\" rel=\"nofollow noreferrer\">this PR</a>. This in inconsistency was <a href=\"https://github.com/rust-lang/rust/pull/44042#issuecomment-370365365\" rel=\"nofollow noreferrer\">brought up</a> and I explained the reason for this strangeness <a href=\"https://github.com/rust-lang/rust/pull/44042#issuecomment-370399951\" rel=\"nofollow noreferrer\">here</a>. </p>\n\n<p>The reason is simply that the method was just moved from an old <code>AsciiExt</code> trait. This trait is deprecated now. Sadly, the method in question was already stabilized as taking <code>&amp;self</code>. Moving the method to <code>char</code> is fine, but adding the signature would break code. So the <code>&amp;self</code> signature was kept. Short answer: <strong>backwards compatibility</strong>. I also found <a href=\"https://github.com/rust-lang/rust/issues/57307\" rel=\"nofollow noreferrer\">this issue</a> where someone tried almost the same as you did.</p></li>\n</ul>\n"}], "owner": {"reputation": 623, "user_id": 1513178, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tV1vY.jpg?s=128&g=1", "display_name": "Tobs.Core", "link": "https://stackoverflow.com/users/1513178/tobs-core"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "accepted_answer_id": 57835812, "answer_count": 1, "score": 2, "last_activity_date": 1567876205, "creation_date": 1567872416, "last_edit_date": 1567874924, "question_id": 57835391, "link": "https://stackoverflow.com/questions/57835391/match-string-with-charis-ascii-alphanumeric-fails-whereas-charis-alphanu", "title": "Match string with `char::is_ascii_alphanumeric` fails, whereas `char::is_alphanumeric` compiles", "body": "<p>I want to match only alphanumeric ascii characters of a string, but the <code>matches</code> function only only works with <code>is_alphanumeric</code>. The following example should clarify. I also put it on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=89db7ae1eda9cb48d32bd29a2f1002bf\" rel=\"nofollow noreferrer\">Rust playground</a>, for easy reproducibility.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    \"s\".matches(char::is_alphanumeric).collect(); // Works\n    \"s\".matches(char::is_ascii_alphanumeric).collect(); // Doesn't work\n}\n</code></pre>\n\n<p>Two errors are produced, the second depends on the first, I think. The error message states: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n --&gt; src/main.rs:3:9\n  |\n3 |     \"s\".matches(char::is_ascii_alphanumeric).collect(); // Doesn't work\n  |         ^^^^^^^\n  |         |\n  |         expected signature of `fn(char) -&gt; _`\n  |         found signature of `for&lt;'r&gt; fn(&amp;'r char) -&gt; _`\n  |\n  = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `for&lt;'r&gt; fn(&amp;'r char) -&gt; bool {std::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric}`\n\nerror[E0599]: no method named `collect` found for type `std::str::Matches&lt;'_, for&lt;'r&gt; fn(&amp;'r char) -&gt; bool {std::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric}&gt;` in the current scope\n --&gt; src/main.rs:3:46\n  |\n3 |     \"s\".matches(char::is_ascii_alphanumeric).collect(); // Doesn't work\n  |                                              ^^^^^^^\n  |\n  = note: the method `collect` exists but the following trait bounds were not satisfied:\n          `&amp;mut std::str::Matches&lt;'_, for&lt;'r&gt; fn(&amp;'r char) -&gt; bool {std::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric}&gt; : std::iter::Iterator`\n          `std::str::Matches&lt;'_, for&lt;'r&gt; fn(&amp;'r char) -&gt; bool {std::char::methods::&lt;impl char&gt;::is_ascii_alphanumeric}&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>Can anyone explain to me, what this error means and why it works for one function but not the other? I looked at the type signature of both functions, but they look the same to me:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric\" rel=\"nofollow noreferrer\">is_alphanumeric</a> </li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_ascii_alphanumeric\" rel=\"nofollow noreferrer\">is_ascii_alphanumeric</a></li>\n</ul>\n\n<p>I use Rust v1.37.0</p>\n"}, {"tags": ["string", "memory", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1567878775, "post_id": 57835026, "comment_id": 102100716, "body": "In general, if something is unsafe in Rust then it won&#39;t compile. You have to use the <code>unsafe</code> keyword to cause yourself any major problems - especially around memory safety."}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1567889567, "last_edit_date": 1567889567, "creation_date": 1567870182, "answer_id": 57835122, "question_id": 57835026, "link": "https://stackoverflow.com/questions/57835026/is-it-safe-to-clear-then-push-strastring-in-rust/57835122#57835122", "title": "Is it safe to .clear() then .push_str(aString) in Rust?", "body": "<p>Step by step:</p>\n\n<ul>\n<li><code>String::clear()</code> is perfectly safe and sets the internal <code>Vec</code> (because that's what is behind <code>String</code>) to having a size (Not capacity) of zero</li>\n<li><code>String::push_str()</code> then appends whatever you fed it to the end of that zero-size <code>Vec</code>, making sure to reallocate enough space should it overflow. Because the type itself is <code>&amp;str</code> you can be pretty sure it'll work.</li>\n</ul>\n\n<p>The only possible case is as follows: since <code>String</code> is an owned type and <code>&amp;str</code> is an immutable borrow, your memory usage after <code>push_str()</code> will go up by the size of the <code>&amp;str</code> you fed it unless your <code>String</code> was backed by a <code>Vec</code> with a capacity greater than that of the <code>&amp;str</code>. That's to be expected. If you don't have that, your code will (evidently) trigger OOM.</p>\n\n<p>So, yes, it is perfectly safe, and, honestly, the best way if you actually have <code>&amp;mut String</code> and not the <code>String</code> itself :-)</p>\n"}], "owner": {"reputation": 469, "user_id": 5270231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jtPOh.png?s=128&g=1", "display_name": "Peter Warrington", "link": "https://stackoverflow.com/users/5270231/peter-warrington"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "accepted_answer_id": 57835122, "answer_count": 1, "score": 0, "last_activity_date": 1567889567, "creation_date": 1567869570, "question_id": 57835026, "link": "https://stackoverflow.com/questions/57835026/is-it-safe-to-clear-then-push-strastring-in-rust", "title": "Is it safe to .clear() then .push_str(aString) in Rust?", "body": "<p>I'm a bit of a beginner to Rust and am trying to get my head around the <code>String</code> type. </p>\n\n<p>I was just wondering if it is safe to do a <code>.clear()</code> before a <code>.push_str()</code> to push a larger string, IE: Can I guarantee that everytime the system will be able to increase the capacity despite using the same pointer? And is there (which there probably is) a better, possibly safer, way to overwrite a string with a larger one?</p>\n"}, {"tags": ["loops", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567869042, "post_id": 57834477, "comment_id": 102098383, "body": "<code>BufRead</code> isn&#39;t useful for <code>fill_buf</code> - <code>BufRead</code> is useful for <code>lines()</code>, <code>read_line()</code> and <code>read_until()</code>, which it enables."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 2, "creation_date": 1567869533, "post_id": 57834477, "comment_id": 102098536, "body": "So you&#39;re telling me that there is a purpose in reading a single arbitrarily-sized chunk of bytes from a <code>BufRead</code> without subsequently <code>consume</code>ing it, when even <code>Read</code> provides <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#tymethod.read\" rel=\"nofollow noreferrer\">this very behavior</a> on <code>read()</code> without requiring a recursive reference to an internal buffer, to the point that you need a <code>BufRead</code> and <code>unsafe</code> to implement <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=828129ffd4acdd2ea201405db486b37e\" rel=\"nofollow noreferrer\">this</a>?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 6, "creation_date": 1567869717, "post_id": 57834477, "comment_id": 102098602, "body": "There are places for <code>BufRead</code>. This is evidently not one of them."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567870744, "post_id": 57834477, "comment_id": 102098861, "body": "Let me get this straight. You take a <code>BufRead</code>, you <code>fill_buf()</code> <i>once</i> with an arbitrary amount of data from a <i>single</i> internal read (because, once it succeeds, you break the loop without even checking if <code>buf.len()</code> &gt; old length), retrying if you get <code>Interrupted</code>, and then you reassemble the slice. That&#39;s your code, correct?"}, {"owner": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567874235, "post_id": 57834477, "comment_id": 102099587, "body": "Correct. It is just <code>fill_buf()</code> which never returns <code>Interrupted</code> error."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567875331, "post_id": 57834477, "comment_id": 102099828, "body": "so... how is that different to the <code>Read</code> code snippet?"}, {"owner": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567878332, "post_id": 57834477, "comment_id": 102100596, "body": "Uh... But that they have in common? Completely different signature, completely different behavior. <code>fill_buf()</code> does not consume a single byte from reader, but <code>read()</code> does."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567879974, "post_id": 57834477, "comment_id": 102101007, "body": "One thing at a time. Regarding signature, which part of <code>pub trait BufRead: Read</code> did you miss?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "edited": false, "score": 0, "creation_date": 1567880020, "post_id": 57834477, "comment_id": 102101017, "body": "Regarding <code>fill_buf()</code> not consuming anything yet returning a reference to it without doing the appropriate housekeeping without <code>consume()</code>, how is that something you would <i>want</i> in an implementation of a function? Plus, that&#39;s not even true. <code>BufRead</code> itself consumes bytes from the inner reader and allocates to itself."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 7, "last_activity_date": 1568051703, "last_edit_date": 1568051703, "creation_date": 1567865582, "answer_id": 57834477, "question_id": 57832526, "link": "https://stackoverflow.com/questions/57832526/is-it-possible-to-write-a-function-that-calls-bufreadfill-buf-until-an-interru/57834477#57834477", "title": "Is it possible to write a function that calls BufRead::fill_buf until an interrupted error no longer occurs without using unsafe?", "body": "<p>You cannot, and neither should you want to for reasons highlighted below (they have nothing to do with the reference return or <code>unsafe</code>). <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html\" rel=\"nofollow noreferrer\"><code>fill_buf</code></a> does not work the way you think it does, due to one important caveat from the doc:</p>\n\n<blockquote>\n  <p>Returns the contents of the internal buffer, filling it with more data\n  from the inner reader <strong>if it is empty</strong>.</p>\n</blockquote>\n\n<p>In other words, a subsequent call to <code>fill_buf</code> without <code>consume</code> will be a no-op if the trait is implemented properly and follows the contract stated in the doc. As such, doing one without the other is fraught with risk if you forget that requirement anywhere in anything that calls <code>fill_buf</code>.</p>\n\n<p>Two solutions:</p>\n\n<ul>\n<li>If you're reading to the end of a stream (which is what a <code>BufReader</code> does in quite a few other languages), just <code>BufRead::read_to_end()</code>, <code>BufRead::read_line()</code> or <code>BufRead::read_until()</code>. If you can identify a delimiter, <code>read_until</code> can be easily be worked into an iterable structure</li>\n<li>If you are trying to <strong>peek</strong> at the data and possibly wait for more, you'll need to implement your own trait. This is not a frequent need as most people trying to peek into a stream are looking for a <code>Pattern</code> or a single byte, which <code>BufRead</code> covers.</li>\n</ul>\n\n<p>As a quick summary, <code>fill_buf</code> does not do what you think it does, and you should not need to call it more than once without consuming the internal state of the buffer. If you are not trying to do this, then the lower-level methods of <code>BufRead</code> are not the tool for the job.</p>\n"}, {"tags": [], "owner": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "is_accepted": true, "score": -3, "last_activity_date": 1567868309, "creation_date": 1567868309, "answer_id": 57834830, "question_id": 57832526, "link": "https://stackoverflow.com/questions/57832526/is-it-possible-to-write-a-function-that-calls-bufreadfill-buf-until-an-interru/57834830#57834830", "title": "Is it possible to write a function that calls BufRead::fill_buf until an interrupted error no longer occurs without using unsafe?", "body": "<p>I have found the answer here: <a href=\"https://stackoverflow.com/questions/44104519/rust-lifetime-issue-in-loop/44108401#44108401\">Rust lifetime issue in loop</a></p>\n\n<blockquote>\n  <p>Rustc can't \"deal\" with conditional borrowing returns</p>\n</blockquote>\n\n<p>So, for now, unsafe in such case is the only answer.</p>\n"}], "owner": {"reputation": 207, "user_id": 7438093, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1a28b69ef76dce1119a1ffe9f8c3bb4?s=128&d=identicon&r=PG&f=1", "display_name": "warlock", "link": "https://stackoverflow.com/users/7438093/warlock"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 709, "favorite_count": 1, "accepted_answer_id": 57834830, "answer_count": 2, "score": 0, "last_activity_date": 1568051703, "creation_date": 1567849628, "last_edit_date": 1568048912, "question_id": 57832526, "link": "https://stackoverflow.com/questions/57832526/is-it-possible-to-write-a-function-that-calls-bufreadfill-buf-until-an-interru", "title": "Is it possible to write a function that calls BufRead::fill_buf until an interrupted error no longer occurs without using unsafe?", "body": "<p>Is it possible to write a function that calls <code>BufRead::fill_buf</code> until <a href=\"https://doc.rust-lang.org/std/io/enum.ErrorKind.html#variant.Interrupted\" rel=\"nofollow noreferrer\"><code>io::ErrorKind::Interrupted</code></a> no longer occurs without using unsafe?</p>\n\n<p>With unsafe code, it is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    io::{self, BufRead},\n    slice,\n};\n\nfn fill_buf_and_ignore_interrupts(reader: &amp;mut impl BufRead) -&gt; io::Result&lt;&amp;[u8]&gt; {\n    let (buf_ptr, buf_len) = loop {\n        match reader.fill_buf() {\n            Ok(buf) =&gt; (buf.as_ptr(), buf.len()),\n            Err(e) =&gt; {\n                if e.kind() != io::ErrorKind::Interrupted {\n                    return Err(e);\n                }\n            }\n        }\n    };\n    Ok(unsafe { slice::from_raw_parts(buf_ptr, buf_len) })\n}\n</code></pre>\n\n<p>If I try to <code>return</code> or <code>break</code> <code>Ok(buf)</code>, I get an error from the borrow checker:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*reader` as mutable more than once at a time\n --&gt; src/lib.rs:8:15\n  |\n6 | fn fill_buf_and_ignore_interrupts(reader: &amp;mut impl BufRead) -&gt; io::Result&lt;&amp;[u8]&gt; {\n  |                                           - let's call the lifetime of this reference `'1`\n7 |     let (buf_ptr, buf_len) = loop {\n8 |         match reader.fill_buf() {\n  |               ^^^^^^ mutable borrow starts here in previous iteration of loop\n9 |             Ok(buf) =&gt; return Ok(buf),\n  |                               ------- returning this value requires that `*reader` is borrowed for `'1`\n</code></pre>\n\n<p>I have tried to replace the loop with recursion, but the error stays. I have also tried to use <code>#![feature(nll)]</code>, but it does not work either.</p>\n"}, {"tags": ["datetime", "encoding", "rust", "runtime-error"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 3, "creation_date": 1567847368, "post_id": 57832200, "comment_id": 102093734, "body": "Not a valid RFC2822 time, simple as that. The issue is that <code>+00:00</code> isn&#39;t a valid timezone descriptor for this format; <code>+0000</code> would be."}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1567887121, "post_id": 57832200, "comment_id": 102102553, "body": "@S&#233;bastienRenauld you should set that as an answer, cause it was the correct answer ..."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567887322, "post_id": 57832200, "comment_id": 102102594, "body": "I wasn&#39;t sure if it would really be that simple. Wrote the answer :-)"}], "answers": [{"comments": [{"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "edited": false, "score": 0, "creation_date": 1568059523, "post_id": 57837149, "comment_id": 102147310, "body": "Please note that there is a crate (<a href=\"https://docs.rs/rfc822_sanitizer/\" rel=\"nofollow noreferrer\">rfc822_sanitizer</a>) that can auto-fix (at the obvious price of consumed cpu time) that can auto-fix rfc822 datetimes ... and it solved the bug !"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 0, "last_activity_date": 1567887311, "creation_date": 1567887311, "answer_id": 57837149, "question_id": 57832200, "link": "https://stackoverflow.com/questions/57832200/why-parsing-my-date-succeeds-when-using-request-but-fails-when-using-reqwests/57837149#57837149", "title": "Why parsing my date succeeds when using request, but fails when using reqwests?", "body": "<p>Turns out that the answer was a simple RFC2282 non-compliance: the source was sending <code>2015-07-05T11:02:25+00:00</code>. As the RFC states, timezone information is without the <code>:</code> in this format.</p>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57837149, "answer_count": 1, "score": 0, "last_activity_date": 1567887311, "creation_date": 1567846723, "question_id": 57832200, "link": "https://stackoverflow.com/questions/57832200/why-parsing-my-date-succeeds-when-using-request-but-fails-when-using-reqwests", "title": "Why parsing my date succeeds when using request, but fails when using reqwests?", "body": "<p>I have a string containing the following date <code>2015-07-05T11:02:25+00:00</code>.</p>\n\n<p>I use the following code to parse it (using chrono crate)</p>\n\n<pre><code>    let pub_date = str::replace(entry.pub_date().unwrap(), \"-0000\", \"+0000\");\n    return DateTime::parse_from_rfc2822(&amp;pub_date)\n        .unwrap_or_else(|e| {\n            panic!(\n                \"pub_date for item {:?} (value is {:?}) can't be parsed. {:?}\",\n                &amp;entry, pub_date, e\n            )\n        })\n        .naive_utc();\n</code></pre>\n\n<p>When I get that content using request crate, the date is correctly parsed.\nBut when I use the reqwests crate, it fails with the error message</p>\n\n<pre><code>[2019-09-07 10:48:45.472951 +02:00] INFO [rrss2imap::feed] src\\feed.rs:152: There should be new entries, parsing HTML content\nthread 'main' panicked at 'pub_date for item Item { title: Some(\"[Avis/BD] Capitaine Tr\u00e8fle\"), link: Some(\"https://fr.rec.arts.fantasy.narkive.com/Z2rKs6RJ/avis-bd-capitaine-trefle\"), description: None, author: None, categories: [], comments: None, enclosure: None,\nguid: None, pub_date: Some(\"2015-07-05T11:02:25+00:00\"), source: None, content: None, extensions: {}, itunes_ext: None, dublin_core_ext: None } (value is \"2015-07-05T11:02:25+00:00\") can't be parsed. ParseError(Invalid)', src\\feed.rs:236:17\n</code></pre>\n\n<p>If I debug (using VSCode Rust debugger), the error value simply contains <code>Invalid (3 '\\x3')</code>. But I don't understand where it come from ... (I suppose it can be some kind of encoding issue, but it puzzles me, as the whole object seems totally correct).</p>\n\n<p>And I don't understand what is going wrong. Has anybody any idea ?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1567847296, "post_id": 57832145, "comment_id": 102093724, "body": "Hi there! I closed this as dupe as this question has been asked a bunch of time already. In short: yes <code>&amp;x</code> is part of a destructure and is equivalent to dereferencing (only works for <code>Copy</code> types). If you don&#39;t think the duplicates are correct as they don&#39;t answer your question, please let us know!"}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 2, "last_activity_date": 1567847094, "last_edit_date": 1592644375, "creation_date": 1567847094, "answer_id": 57832245, "question_id": 57832145, "link": "https://stackoverflow.com/questions/57832145/dereference-a-closure-parameter/57832245#57832245", "title": "Dereference a closure parameter", "body": "<p>This is called <a href=\"https://doc.rust-lang.org/reference/patterns.html#reference-patterns\" rel=\"nofollow noreferrer\">reference pattern</a>:</p>\n<blockquote>\n<p><em>ReferencePattern</em> :</p>\n<p>(<code>&amp;</code>|<code>&amp;&amp;</code>) <code>mut</code>? <em>Pattern</em></p>\n<p>Reference patterns dereference the pointers that are being matched and, thus, borrow them.</p>\n</blockquote>\n<p>So yes, they are equivalent.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "closed_date": 1567847192, "accepted_answer_id": 57832245, "answer_count": 1, "score": 5, "last_activity_date": 1567847234, "creation_date": 1567846253, "question_id": 57832145, "link": "https://stackoverflow.com/questions/57832145/dereference-a-closure-parameter", "closed_reason": "Duplicate", "title": "Dereference a closure parameter", "body": "<p>The title might not be appropriate, be here is an example:</p>\n\n<pre><code>fn foo(impl Fn(&amp;u32) -&gt; bool) { ... }\n\nfoo(|x| *x &lt; 100);\nfoo(|&amp;x| x &lt; 100);\n</code></pre>\n\n<p>Are the two closures passed to <code>foo</code> equivalent? I saw people use the second form in some places, but I couldn't find it in the official book. Is the <code>&amp;x</code> part a destructure...?</p>\n"}, {"tags": ["reference", "rust", "type-conversion", "slice"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1567847599, "post_id": 57831928, "comment_id": 102093766, "body": "<a href=\"https://stackoverflow.com/questions/29847928/when-to-use-boxvec-or-vecbox\"><code>Vec&lt;Box&lt;T&gt;&gt;</code> should only be used in very specific situations</a>, such as when <code>T</code> is unsized. Otherwise, you may consider not using an extra layer of references. You may also consider not converting the boxes and simply returning <code>&amp;[Box&lt;Foo&gt;]</code>, which is much easier to get in this situation."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567847710, "post_id": 57831928, "comment_id": 102093785, "body": "You cannot do this without an allocation - you&#39;re either going to have to need an intermediate mapping step to turn <code>Box&lt;Foo&gt;</code> into <code>&amp;Foo</code> (and even then this is risky, because you&#39;re implying Foo:Sized` by doing so in order to then have <code>Vec&lt;&amp;Foo&gt;</code> and can call <code>as_slice()</code>, or you&#39;ll need to keep <code>&amp;[Box&lt;Foo&gt;]</code> and allocate each element from there. What is your goal, though?"}, {"owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567850108, "post_id": 57831928, "comment_id": 102094271, "body": "@S&#233;bastienRenauld In this case Foo is a trait object, meaning I have to wrap it in a box. I feel like using Vec&lt;&amp;Foo&gt; for the return type would redundantly return an owned vector since it is conceptually just an immutable view of some existing data."}, {"owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1567850213, "post_id": 57831928, "comment_id": 102094294, "body": "@SCappella Unfortunately Foo is indeed unsized, hence the box. Also I believe that returning &amp;[Box&lt;Foo&gt;] implies ownership of each element which would not work."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1567850572, "post_id": 57831928, "comment_id": 102094400, "body": "@LLewVallis It&#39;s a <i>reference</i> to owned data. That doesn&#39;t imply ownership."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1567850755, "post_id": 57831928, "comment_id": 102094439, "body": "The <code>&amp;</code> in <code>&amp;[]</code> is indeed not there for esthetic reasons. It is not an owned structure."}, {"owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "edited": false, "score": 0, "creation_date": 1567851322, "post_id": 57831928, "comment_id": 102094602, "body": "Ok, I realized that a slice was not mutable as a collection (adding, removing, etc) but I didn&#39;t realize it implied that its elements were only accessible as references."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "edited": false, "score": 0, "creation_date": 1567850509, "post_id": 57832603, "comment_id": 102094380, "body": "This works, but this doesn&#39;t really seem like a good idea. Conceptually I am just returning an immutable view over a collection of owned, unsized data. Is there something more idiomatic than returning a &amp;[&amp;Foo] that should be used? I feel like a Vec&lt;&amp;Foo&gt; is a bit heavy since it would require shallow copying the vector for what is conceptually a borrow."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "edited": false, "score": 1, "creation_date": 1567854097, "post_id": 57832603, "comment_id": 102095116, "body": "@Llew <code>&amp;[Box&lt;Foo&gt;]</code> is just that: an immutable view over a collection of owned data. <code>&amp;[&amp;Foo]</code> would be a view over a collection of references to data, which you don&#39;t have. Since you don&#39;t have a <code>Vec&lt;&amp;Foo&gt;</code>, you can&#39;t borrow a <code>&amp;[&amp;Foo]</code> without unsafe code (although as Peter points out, the use of <code>unsafe</code> here is sound)."}, {"owner": {"reputation": 397, "user_id": 4131596, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-dUHeMDfE0xw/AAAAAAAAAAI/AAAAAAAAANE/y-2iUXIrmU4/photo.jpg?sz=128", "display_name": "Ryan", "link": "https://stackoverflow.com/users/4131596/ryan"}, "reply_to_user": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "edited": false, "score": 0, "creation_date": 1567879750, "post_id": 57832603, "comment_id": 102100956, "body": "@LlewVallis <code>&amp;Foo</code> is a reference to a <code>Foo</code> anywhere on the stack or heap, it doesn&#39;t matter. <code>Box&lt;Foo&gt;</code> is specifically a reference to a <code>Foo</code> on the heap. So both <code>&amp;[&amp;Foo]</code> and <code>&amp;[Box&lt;Foo&gt;]</code> are slices of pointers (fat pointers in this case).  So what is the advantage to the first form over the second?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1567855904, "last_edit_date": 1567855904, "creation_date": 1567850218, "answer_id": 57832603, "question_id": 57831928, "link": "https://stackoverflow.com/questions/57831928/convert-vecboxfoo-to-foo-in-rust/57832603#57832603", "title": "Convert Vec&lt;Box&lt;Foo&gt;&gt; to &amp;[&amp;Foo] in Rust", "body": "<p>You can do it with an <code>unsafe</code> coercion:</p>\n\n<pre><code>pub fn buzz(&amp;self) -&gt; &amp;[&amp;Foo] {\n    unsafe {\n        std::slice::from_raw_parts(self.baz.as_ptr() as *const _, self.baz.len())\n    }\n}\n</code></pre>\n\n<p>This is sound because:</p>\n\n<ol>\n<li>If <code>Foo</code> is dynamically sized, then <code>Box&lt;Foo&gt;</code> is a fat pointer. But then so is <code>&amp;Foo</code>, so they always have the same layout.</li>\n<li>The function signature enforces that the lifetime of the borrow cannot outlive the borrow of <code>&amp;self</code>, so it is not possible for the boxes to be dropped while borrowed.</li>\n</ol>\n\n<p>As others have hinted in comments, if you find yourself needing unsafe code for ostensibly simple cases, not catered for by <code>std</code>, then you may be working around a bad design decision in your own codebase. Avoid <code>unsafe</code> wherever possible and look critically at the entire design of your application before considering using it.</p>\n"}], "owner": {"reputation": 25, "user_id": 11350245, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RfVdi1yX0d4/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQPQvfK5zvlWCV6oJaMY8uSnct4-BA/mo/photo.jpg?sz=128", "display_name": "Llew Vallis", "link": "https://stackoverflow.com/users/11350245/llew-vallis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 1, "accepted_answer_id": 57832603, "answer_count": 1, "score": 1, "last_activity_date": 1567855904, "creation_date": 1567844207, "last_edit_date": 1567851282, "question_id": 57831928, "link": "https://stackoverflow.com/questions/57831928/convert-vecboxfoo-to-foo-in-rust", "title": "Convert Vec&lt;Box&lt;Foo&gt;&gt; to &amp;[&amp;Foo] in Rust", "body": "<p>I am implementing a method on a struct which should return a <code>&amp;[&amp;Foo]</code> by borrowing a <code>Vec&lt;Box&lt;Foo&gt;&gt;</code> field. How would I implement this?</p>\n\n<p>I have tried to do the conversion by mapping the <code>Vec&lt;Box&lt;Foo&gt;&gt;</code> into a <code>Vec&lt;&amp;Foo&gt;</code>, however this is then allocated on the stack meaning a slice of it cannot be returned.</p>\n\n<p>Here is an example of the problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Bar {\n    baz: Vec&lt;Box&lt;Foo&gt;&gt;,\n}\n\nimpl Bar {\n    pub fn buzz(&amp;self) -&gt; &amp;[&amp;Foo] {\n        // How do I implement this to return\n        // the data that is in self.baz?\n    }\n}\n</code></pre>\n"}, {"tags": ["vector", "input", "rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1567843927, "post_id": 57831497, "comment_id": 102093061, "body": "The way <code>read_values</code> is written, it&#39;s meant to take multiple values in one line. e.g. <code>4 5 6 7 8</code>. Did you try that?"}], "owner": {"reputation": 11, "user_id": 12033618, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBC6AZyZIsVuucZfiENNT0vcBxgjHJm8cKlwvT7=k-s128", "display_name": "Syed Aashir", "link": "https://stackoverflow.com/users/12033618/syed-aashir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 428, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1567842115, "creation_date": 1567840133, "last_edit_date": 1567842115, "question_id": 57831497, "link": "https://stackoverflow.com/questions/57831497/how-to-take-input-from-user-in-vector-in-rust", "title": "how to take input from user in vector in rust", "body": "<p>i want to take input from user in vector form and print it using loop and then reverse the vector through iteration</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\nuse std::str::FromStr;\n\nfn main() {\n    let i = read_values::&lt;f64&gt;().unwrap();\n\n    for a in i.iter().rev() {\n        print!(\"{} \", a);\n    }\n}\n\nfn read_values&lt;T: FromStr&gt;() -&gt; Result&lt;Vec&lt;T&gt;, T::Err&gt; {\n    let mut s = String::new();\n    io::stdin()\n        .read_line(&amp;mut s)\n        .expect(\"could not read from stdin\");\n    s.trim()\n        .split_whitespace()\n        .map(|word| word.parse())\n        .collect()\n}\n</code></pre>\n\n<pre><code>4\n4 \n</code></pre>\n\n<p>it just take only 1 input but i want to take more than one and then reverse it</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 1, "last_activity_date": 1567840856, "creation_date": 1567840856, "answer_id": 57831583, "question_id": 57831428, "link": "https://stackoverflow.com/questions/57831428/how-to-run-different-threads-concurrently-in-rust/57831583#57831583", "title": "How to run different threads concurrently in Rust?", "body": "<p>Why do you think the threads are not running concurrently ?\nFor easily passing data between threads you can use the MPSC channel from the std library:</p>\n\n<pre><code>use std::time::Duration;\n\nfn main() {\n    let (sender, receiver) = std::sync::mpsc::channel();\n\n    let sending_thread = std::thread::spawn(move || {\n        for i in 0..10 {\n            println!(\"[{:?}] Sending: {}\", std::thread::current().id(), i);\n            sender.send(i).unwrap();\n            std::thread::sleep(Duration::from_secs(1));\n        }\n    });\n\n    let receiving_thread = std::thread::spawn(move || {\n        for i in receiver {\n            println!(\"[{:?}] Received: {}\", std::thread::current().id(), i);\n        }\n    });\n\n    let _ = sending_thread.join();\n    let _ = receiving_thread.join();\n    println!(\"Done\");\n}\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 11414906, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lWlT8JkFdYk/AAAAAAAAAAI/AAAAAAAAAVk/lSopxMy4oT8/photo.jpg?sz=128", "display_name": "Vikas Shetty", "link": "https://stackoverflow.com/users/11414906/vikas-shetty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "accepted_answer_id": 57831583, "answer_count": 1, "score": 1, "last_activity_date": 1567840856, "creation_date": 1567839330, "question_id": 57831428, "link": "https://stackoverflow.com/questions/57831428/how-to-run-different-threads-concurrently-in-rust", "title": "How to run different threads concurrently in Rust?", "body": "<p>Let's say I have two threads that have different intent (T1, T2). T1 is responsible for pushing messages into a queue and T2 is responsible for popping messages. How do I implement a way to run T1 and T2 together? </p>\n\n<p>I tried looking at existing multithreaded implementations and examples in rust but most of them are about spawning multiple threads for the same job.</p>\n\n<pre><code>//using an Arc object of an ArrayQueue\nlet handle1 = thread::spawn( move || {\n//clone arc object\n//push\n});\n\nlet handle2 = thread::spawn( move || {\n//clone arc object\n//pop\n});```\n</code></pre>\n"}, {"tags": ["unit-testing", "rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1567835402, "post_id": 57830617, "comment_id": 102091626, "body": "You have a problem in assert_eq because of the missing Debug trait but there&#39;s no problem testing function equality (which is the comparison of the pointers). You can check <code>println!(&quot;{}&quot;, pick_a_function(1) == add);</code>. Do you use a old rustc (you might have to cast to usize if so)?"}, {"owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1567863880, "post_id": 57830617, "comment_id": 102097169, "body": "@DenysS&#233;guret After digging into it more last night I realized that functions do implement <code>PartialEq</code>, but only if they aren&#39;t attached to a lifetime. One the arguments that they all take is a mutable struct reference, which implicitly attaches a lifetime to the functions, preventing them from being <code>PartialEq</code>. Casting the function as a usize seems to fix this."}], "answers": [{"comments": [{"owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "edited": false, "score": 0, "creation_date": 1567831076, "post_id": 57830679, "comment_id": 102091035, "body": "The functions being returned don&#39;t actually return a result, they mutate a struct that they take as an argument, and initializing one of those structs is really expensive. I just thought including all of that in the code sample was a little over complicated."}, {"owner": {"user_type": "does_not_exist", "display_name": "user11667416"}, "reply_to_user": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "edited": false, "score": 0, "creation_date": 1567831736, "post_id": 57830679, "comment_id": 102091127, "body": "Well,then compare the structs.I know that two closures with equal body and signatures are not the same type.The same must be for functions."}, {"owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "edited": false, "score": 0, "creation_date": 1567831943, "post_id": 57830679, "comment_id": 102091166, "body": "I&#39;m really looking for a way to compare the functions directly. I don&#39;t want to deal with comparing two structs that are both several megabytes in size and require a lot of initialization work."}, {"owner": {"user_type": "does_not_exist", "display_name": "user11667416"}, "reply_to_user": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "edited": false, "score": 0, "creation_date": 1567832697, "post_id": 57830679, "comment_id": 102091261, "body": "You can try adding a sprecific return to each function and then compare them as I told.Or making a procedural macro attribute that takes the function as items and implements a method that return their source code in string form.The way you see more optimal."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user11667416"}, "is_accepted": true, "score": 0, "last_activity_date": 1567830465, "creation_date": 1567830465, "answer_id": 57830679, "question_id": 57830617, "link": "https://stackoverflow.com/questions/57830617/comparing-functions-for-equality-in-rust/57830679#57830679", "title": "Comparing functions for equality in Rust", "body": "<p>You should compare the result instead of the function,for example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\nmod tests {\n    use super::*;\n\n    fn picks_correct_function() {\n      let add_picked = pick_a_function(1);\n      assert_eq!(add_picked(1,2), add(1,2));\n    }\n}\n</code></pre>\n\n<p>Or in more complex scenarios you can compare the inputs making a function that takes one parameter and another that takes two,try to call any of them and see if you get a compiler error.</p>\n"}, {"tags": [], "owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "is_accepted": false, "score": 0, "last_activity_date": 1567864263, "creation_date": 1567864263, "answer_id": 57834304, "question_id": 57830617, "link": "https://stackoverflow.com/questions/57830617/comparing-functions-for-equality-in-rust/57834304#57834304", "title": "Comparing functions for equality in Rust", "body": "<p>So it turns of that functions in Rust actually do implement <code>PartialEq</code> as long as there is not a lifetime attached, and as long as the function takes less than 10 arguments. This restriction is because each form of function signature has to have the traits implemented directly, because the compiler considers all of them to be completely unrelated types.</p>\n\n<p>The functions I was returning took a mutable reference to a struct, which implicitly gives the function a lifetime, so they no longer had a type signature which implemented <code>PartialEq</code>. All that rust really does internally to compare function equality though is cast both of them to pointers and then compare, so we can actually just do the same thing.</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use super::*;\n\n    fn picks_correct_function() {\n        assert_eq!(\n            pick_a_function(1) as usize,\n            add as usize\n        );\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 1, "accepted_answer_id": 57830679, "answer_count": 2, "score": 1, "last_activity_date": 1567864924, "creation_date": 1567829564, "last_edit_date": 1567864924, "question_id": 57830617, "link": "https://stackoverflow.com/questions/57830617/comparing-functions-for-equality-in-rust", "title": "Comparing functions for equality in Rust", "body": "<p>I have a function which takes a number as an argument, and then returns a function based on the number. Depending on many different things, it might return any of ~50 functions, and the cases for which one it should return get pretty complicated. As such, I want to build some tests to make sure the proper functions are being returned. What I have so far looks roughly like this.</p>\n\n<pre><code>fn pick_a_function(decider: u32) -&gt; fn(&amp;mut SomeStruct) {\n    match decider {\n        1 =&gt; add,\n        2 =&gt; sub,\n        _ =&gt; zero,\n    }\n}\n\nfn add(x: &amp;mut SomeStruct) {\n    x.a += x.b;\n}\n\nfn sub(x: &amp;mut SomeStruct) {\n    x.a -= x.b;\n}\n\nfn zero(_x: &amp;mut SomeStruct) {\n    x.a = 0;\n}\n\nfn main() {\n    let mut x = SomeStruct { a: 2, b: 3 };\n    pick_a_function(1)(&amp;mut x);\n\n    println!(\"2 + 3 = {}\", x.a);\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    fn picks_correct_function() {\n        assert_eq!(pick_a_function(1), add);\n    }\n}\n</code></pre>\n\n<p>The problem is that the functions don't seem to implement the <code>Eq</code> or <code>PartialEq</code> traits, so <code>assert_eq!</code> just says that it can't compare them. What options do I have for comparing the returned function to the correct function?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 6428, "user_id": 612367, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/vxu47.jpg?s=128&g=1", "display_name": "McKayla", "link": "https://stackoverflow.com/users/612367/mckayla"}, "is_accepted": false, "score": 0, "last_activity_date": 1567830075, "creation_date": 1567830075, "answer_id": 57830652, "question_id": 57830601, "link": "https://stackoverflow.com/questions/57830601/how-to-add-the-proper-type-annotations-when-converting-an-integer-to-a-float/57830652#57830652", "title": "How to add the proper type annotations when converting an integer to a float?", "body": "<p>Some functions in Rust like <code>value_into</code> and <code>try_into</code> have to be called when assigning to directly to a typed variable.</p>\n\n<p>To answer your question directly, the proper way to add type annotations is by assigning it into a temporary variable (like you did with <code>bar</code> and <code>p</code>) before using the value.</p>\n"}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1593024004, "creation_date": 1567829377, "last_edit_date": 1593024004, "question_id": 57830601, "link": "https://stackoverflow.com/questions/57830601/how-to-add-the-proper-type-annotations-when-converting-an-integer-to-a-float", "title": "How to add the proper type annotations when converting an integer to a float?", "body": "<p>What's the proper type annotation in the following code to convert an integer to a float?</p>\n<pre><code>use conv::{ValueInto, errors::PosOverflow};\n                                  \nfn run_me() -&gt; Result &lt;f32, PosOverflow&lt;usize&gt;&gt; {                                 \n    let m: f32 = 21.3;                                                          \n    let n: usize = 23;                                                          \n    let p: f32 = n.value_into()?;                                               \n    let bar = m * p;                                                             \n    let baz = m * (n.value_into()?);  // Compiler error here                                           \n    Ok(baz)                                                             \n}\n                                                                       \nfn main() {                                                                      \n    run_me();                                                                     \n} \n</code></pre>\n<p>Which fails with:</p>\n<pre><code>error[E0277]: cannot multiply `()` to `f32`\n --&gt; src/main.rs:7:17\n  |\n7 |     let baz = m * (n.value_into()?);\n  |                 ^ no implementation for `f32 * ()`\n  |\n  = help: the trait `std::ops::Mul&lt;()&gt;` is not implemented for `f32`\n\nerror[E0277]: the trait bound `(): conv::ValueFrom&lt;usize&gt;` is not satisfied\n --&gt; src/main.rs:7:22\n  |\n7 |     let baz = m * (n.value_into()?);\n  |                      ^^^^^^^^^^ the trait `conv::ValueFrom&lt;usize&gt;` is not implemented for `()`\n  |\n  = note: required because of the requirements on the impl of `conv::ValueInto&lt;()&gt;` for `usize`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `tmp3`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n<p>Basically, a conversion from <code>usize</code> to <code>f32</code> could fail, so we have the <code>conv</code> package to handle the details.  In the following code, the <code>bar</code> computes just fine, but <code>baz</code> does not.  I'd like a one liner like <code>baz</code> to work directly because more complicated examples will need to chain together multiple conversions.</p>\n<hr />\n<h1>Edit 1</h1>\n<p>Ok, so I can force what I want by adding a trait to <code>usize</code>.  Is there a problem with this approach or can the original call to <code>value_into</code> be fixed?</p>\n<pre><code>use conv::{ValueFrom, ValueInto, errors::PosOverflow};\n\ntrait ToF32 {\n    fn to_f32(self) -&gt; Result&lt;f32, PosOverflow&lt;usize&gt;&gt;;\n}\n\nimpl ToF32 for usize {\n    fn to_f32(self) -&gt; Result&lt;f32, PosOverflow&lt;usize&gt;&gt; {                    \n        f32::value_from(self)   \n    }\n}\n\nfn run_me() -&gt; Result &lt;f32, PosOverflow&lt;usize&gt;&gt; {\n    let m: f32 = 21.3;\n    let n: usize = 23;\n    let p: f32 = n.value_into()?;\n    let bar = m * p;\n    let baz = m * n.to_f32()?;            \n    // let buz = m * n.value_into()?;\n    Ok(baz)\n}\n\nfn main() {\n    run_me();\n}\n</code></pre>\n"}, {"tags": ["xml", "rust", "serde"], "comments": [{"owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "edited": false, "score": 1, "creation_date": 1567834423, "post_id": 57830005, "comment_id": 102091494, "body": "I&#39;m not familiar with serde&#39;s xml requirements, but I&#39;m pretty darn sure you can&#39;t parse a <code>&lt;pets &#47;&gt;</code> with multiple <code>&lt;pet &#47;&gt;</code> nodes as a single <code>Pet</code>."}], "answers": [{"comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 141, "user_id": 3150815, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b1a5a39866336945f484d034d11770cc?s=128&d=identicon&r=PG&f=1", "display_name": "ghoetker", "link": "https://stackoverflow.com/users/3150815/ghoetker"}, "edited": false, "score": 0, "creation_date": 1567841608, "post_id": 57831079, "comment_id": 102092609, "body": "@ghoetker don&#39;t be discouraged, you got almost everything right. <code>rust</code> is a strong typed language, minding the types will get you a long way."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1567836908, "last_edit_date": 1567836908, "creation_date": 1567835595, "answer_id": 57831079, "question_id": 57830005, "link": "https://stackoverflow.com/questions/57830005/parsing-file-returns-error-thread-main-panicked/57831079#57831079", "title": "Parsing file returns error &quot;thread &#39;main&#39; panicked&quot;", "body": "<p>It is a very simple error indeed. You just need to use <code>Pets</code> type instead of <code>Pet</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    ...\n\n    let pets: Pets = from_str(&amp;src).unwrap();\n    println!(\"{:#?}\", pets);\n}\n\n</code></pre>\n"}], "owner": {"reputation": 141, "user_id": 3150815, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b1a5a39866336945f484d034d11770cc?s=128&d=identicon&r=PG&f=1", "display_name": "ghoetker", "link": "https://stackoverflow.com/users/3150815/ghoetker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 57831079, "answer_count": 1, "score": 0, "last_activity_date": 1567838405, "creation_date": 1567819505, "last_edit_date": 1567838405, "question_id": 57830005, "link": "https://stackoverflow.com/questions/57830005/parsing-file-returns-error-thread-main-panicked", "title": "Parsing file returns error &quot;thread &#39;main&#39; panicked&quot;", "body": "<p>I'm struggling with serde-xml-rs and hope someone can help me out. I've been able to parse a single \"pet\" from the sample XML below. But, when I try to parse a file with two \"pet\" entries under \"pets\", as illustrated below, I get the error \"thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Error(Custom(\"missing field <code>species</code>\"), State { next_error: None, backtrace: Some(stack backtrace:...\"</p>\n\n<p>Fairly new to both Rust and wrestling with XML, so I hope it's a simple error or misunderstanding somewhere.  Pointers most appreciated.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\nextern crate serde_xml_rs;\n#[macro_use]\nextern crate serde_derive;\n\nuse serde_xml_rs::{from_str, to_string};\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\nstruct Pets {\n    #[serde(rename = \"pet\")]\n    pets: Vec&lt;Pet&gt;,\n}\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\nstruct Pet {\n    species: String,\n    name: String,\n}\n\nfn main() {\n    let src = r##\"&lt;?xml version=\"1.0\"?&gt;\n        &lt;pets&gt;\n        &lt;pet&gt;\n        &lt;species&gt;cat&lt;/species&gt;\n        &lt;name&gt;Leroy&lt;/name&gt;\n        &lt;/pet&gt;\n        &lt;pet&gt;\n        &lt;species&gt;dog&lt;/species&gt;\n        &lt;name&gt;Rowdy&lt;/name&gt;\n        &lt;/pet&gt;\n        &lt;/pets&gt;\n        \"##;\n\n    let pet: Pet = from_str(&amp;src).unwrap();\n    //println!(\"{:#?}\",pet);\n}\n</code></pre>\n"}, {"tags": ["rust", "sample"], "answers": [{"tags": [], "owner": {"reputation": 583, "user_id": 2809176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c7b7bad63e38333d41b18f0960b2573?s=128&d=identicon&r=PG&f=1", "display_name": "user2809176", "link": "https://stackoverflow.com/users/2809176/user2809176"}, "is_accepted": true, "score": 1, "last_activity_date": 1585748675, "last_edit_date": 1585748675, "creation_date": 1567812886, "answer_id": 57829550, "question_id": 57829511, "link": "https://stackoverflow.com/questions/57829511/how-to-create-a-random-sample-from-a-vector-of-elements/57829550#57829550", "title": "How to create a random sample from a vector of elements?", "body": "<p>Sounds like you can use a permutation from the <a href=\"https://docs.rs/permutate/0.3.2/permutate/\" rel=\"nofollow noreferrer\">permutate</a> crate:</p>\n\n<pre><code>extern crate permutate; // 0.3.2\n\nuse permutate::Permutator;\nuse std::io::{self, Write};\n\nfn main() {\n    let stdout = io::stdout();\n    let mut stdout = stdout.lock();\n    let list: &amp;[&amp;str] = &amp;[\"one\", \"two\", \"three\", \"four\"];\n    let list = [list];\n    let mut permutator = Permutator::new(&amp;list[..]);\n\n    if let Some(mut permutation) = permutator.next() {\n        for element in &amp;permutation {\n            let _ = stdout.write(element.as_bytes());\n        }\n        let _ = stdout.write(b\"\\n\");\n        while permutator.next_with_buffer(&amp;mut permutation) {\n            for element in &amp;permutation {\n                let _ = stdout.write(element.as_bytes());\n            }\n            let _ = stdout.write(b\"\\n\");\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "edited": false, "score": 0, "creation_date": 1586595079, "post_id": 60967892, "comment_id": 108187245, "body": "The word <code>choose_multiple</code> is a bit confusing. Does this sample with or without replacement? &quot;multiple&quot; suggests it is sampling with replacement, but the docs don&#39;t mention anything about it. Just a case of lack of overloading (semantically it is the same as <code>choose</code>?) forces to use a function name that can be interpreted wrongly?"}, {"owner": {"reputation": 470, "user_id": 63696, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd5b8649a4e2d5913c1d2981dc691c79?s=128&d=identicon&r=PG", "display_name": "Mossa", "link": "https://stackoverflow.com/users/63696/mossa"}, "edited": false, "score": 0, "creation_date": 1589453712, "post_id": 60967892, "comment_id": 109303292, "body": "AFAIK, <code>choose_multiple</code> doesn&#39;t sample with replacement."}], "tags": [], "owner": {"reputation": 18483, "user_id": 497600, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/9d2bd51b0d7a3e483cb42919119d2e8d?s=128&d=identicon&r=PG", "display_name": "lhk", "link": "https://stackoverflow.com/users/497600/lhk"}, "is_accepted": false, "score": 4, "last_activity_date": 1585748720, "last_edit_date": 1585748720, "creation_date": 1585734021, "answer_id": 60967892, "question_id": 57829511, "link": "https://stackoverflow.com/questions/57829511/how-to-create-a-random-sample-from-a-vector-of-elements/60967892#60967892", "title": "How to create a random sample from a vector of elements?", "body": "<p>You can use <a href=\"https://docs.rs/rand/0.6.1/rand/seq/trait.IteratorRandom.html\" rel=\"nofollow noreferrer\"><code>IteratorRandom</code></a> to get a much shorter solution. This is an extension trait for iterators, it offers convenience functions such as <a href=\"https://docs.rs/rand/0.6.1/rand/seq/trait.IteratorRandom.html#method.choose_multiple\" rel=\"nofollow noreferrer\"><code>choose_multiple</code></a> and <a href=\"https://docs.rs/rand/0.6.1/rand/seq/trait.IteratorRandom.html#method.choose_multiple_fill\" rel=\"nofollow noreferrer\"><code>choose_multiple_fill</code></a>:</p>\n\n<pre><code>use rand::{seq::IteratorRandom, thread_rng}; // 0.6.1\n\nfn main() {\n    let mut rng = thread_rng();\n    let v = vec![1, 2, 3, 4, 5];\n    let sample = v.iter().choose_multiple(&amp;mut rng, 2);\n\n    println!(\"{:?}\", sample);\n}\n</code></pre>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 939, "favorite_count": 0, "accepted_answer_id": 57829550, "answer_count": 2, "score": 2, "last_activity_date": 1585748720, "creation_date": 1567812359, "last_edit_date": 1585748398, "question_id": 57829511, "link": "https://stackoverflow.com/questions/57829511/how-to-create-a-random-sample-from-a-vector-of-elements", "title": "How to create a random sample from a vector of elements?", "body": "<p>I used this code to create a random sample for the numbers 0 to 49. Now I want to create a random sample for a custom set of values. For example: select a sample of 5 from <code>[1, 2, 3, 4, 9, 10, 11, 14, 16, 22, 32, 45]</code>. How can I do this?</p>\n\n<pre><code>use rand::{seq, thread_rng}; // 0.7.3\n\nfn main() {\n    let mut rng = thread_rng();\n    let sample = seq::index::sample(&amp;mut rng, 50, 5);\n}\n</code></pre>\n"}, {"tags": ["sorting", "random", "rust", "sample"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1567810038, "creation_date": 1567810038, "answer_id": 57829292, "question_id": 57829042, "link": "https://stackoverflow.com/questions/57829042/rust-error-when-using-sort-with-seqindexsample/57829292#57829292", "title": "Rust error when using sort with seq::index::sample", "body": "<p><a href=\"https://rust-random.github.io/rand/rand/seq/index/fn.sample.html\" rel=\"nofollow noreferrer\"><code>rand::seq::index::sample</code></a> returns an <a href=\"https://rust-random.github.io/rand/rand/seq/index/enum.IndexVec.html\" rel=\"nofollow noreferrer\"><code>rand::seq::index::IndexVec</code></a> rather than a regular <code>Vec</code>. This type seems to be mostly intended to be iterated and does not have many methods. In particular, it has no <code>sort</code> method.</p>\n\n<p>You can use <a href=\"https://rust-random.github.io/rand/rand/seq/index/enum.IndexVec.html#method.into_vec\" rel=\"nofollow noreferrer\"><code>into_vec</code></a> to get a normal <code>Vec</code>, which is <code>sort</code>able.</p>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "accepted_answer_id": 57829292, "answer_count": 1, "score": 0, "last_activity_date": 1567810038, "creation_date": 1567807862, "last_edit_date": 1567809870, "question_id": 57829042, "link": "https://stackoverflow.com/questions/57829042/rust-error-when-using-sort-with-seqindexsample", "title": "Rust error when using sort with seq::index::sample", "body": "<p>So I was trying to generate a sample of 5 numbers with:</p>\n\n<pre><code>use rand::{thread_rng, seq};\nuse std::time::SystemTime;\n\nfn main(){\n    let mut rng = thread_rng();\n\n    let mut sample = seq::index::sample(&amp;mut rng, 50, 5);\n}\n</code></pre>\n\n<p>But when I try to sort it with:</p>\n\n<pre><code>sample.sort();\n</code></pre>\n\n<p>It gives me the following error:</p>\n\n<blockquote>\n  <p>error[E0599]: no method named <code>sort</code> found for type\n  <code>rand::seq::index::IndexVec</code> in the current scope   -->\n  src/main.rs:12:16    </p>\n</blockquote>\n\n<p>How can I sort a random sample of numbers?</p>\n"}, {"tags": ["winapi", "rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1567810283, "creation_date": 1567810283, "answer_id": 57829316, "question_id": 57829001, "link": "https://stackoverflow.com/questions/57829001/some-troubles-with-filecreate/57829316#57829316", "title": "Some troubles with FileCreate", "body": "<p>Your <code>c</code> macro gets a pointer to a temporary variable. This causes undefined behaviour.</p>\n"}], "owner": {"reputation": 303, "user_id": 10039586, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u042e\u0440\u0438\u0439 \u0411\u0430\u0440\u0438\u043d\u043e\u0432", "link": "https://stackoverflow.com/users/10039586/%d0%ae%d1%80%d0%b8%d0%b9-%d0%91%d0%b0%d1%80%d0%b8%d0%bd%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57829316, "answer_count": 1, "score": 0, "last_activity_date": 1567810283, "creation_date": 1567807480, "question_id": 57829001, "link": "https://stackoverflow.com/questions/57829001/some-troubles-with-filecreate", "title": "Some troubles with FileCreate", "body": "<p>I use winapi crate to get handle of the file. But I have troubles with encoding or something like that when I try to use absolute file path. So windows always returns error 3 (path not found).</p>\n\n<p>When I was trying to debug this problem I was using <code>GetFullPathNameW</code> to resolve full path. \nFor example path like <code>a.txt</code> and even <code>\\\\a.txt</code> work well but when I use path like <code>foo\\\\bar\\\\baaaaz.txt</code> after resolving it I receive something like <code>C:\\Users\\Path\\To\\Project\\\u92e8\f\u99e8\ffoo\\baaaaz.txt</code></p>\n\n<p>Macro that expands my strings</p>\n\n<pre><code>macro_rules! c {\n    ($str: expr) =&gt; {\n        unsafe {\n        let v: Vec&lt;u16&gt; = OsStr::new($str).encode_wide().chain(Some(0).into_iter()).collect();\n        v.as_ptr()\n    }\n    };\n}\n</code></pre>\n\n<p>Method that should opens handle of the file</p>\n\n<pre><code>fn open_file_handle(name: &amp;str) -&gt; Result&lt;HANDLE, u32&gt; {\n\n\n    let handle: HANDLE = unsafe {\n        CreateFileW(\n            c!(name),\n            FILE_READ_ATTRIBUTES | FILE_READ_DATA | SYNCHRONIZE,\n            FILE_SHARE_READ,\n            NULL as LPSECURITY_ATTRIBUTES,\n            OPEN_EXISTING,\n            FILE_ATTRIBUTE_NORMAL,\n            NULL\n        )\n    };\n\n   if handle == INVALID_HANDLE_VALUE {\n       let error = unsafe { GetLastError() };\n       Err(error)\n   } else {\n       Ok(handle)\n   }\n\n</code></pre>\n\n<p>And method that I use to resolve full names </p>\n\n<pre><code>fn resolve(name: &amp;str) -&gt; String {\n\n   unsafe {\n       let result = GetFullPathNameW(\n            c!(name),\n            512,\n            buffer.as_mut_ptr(),\n            NULL as *mut LPWSTR\n        );\n       buffer.set_len(result as usize);\n    }\n\n    String::from_utf16_lossy(buffer.as_slice())\n}\n</code></pre>\n\n<p>What I do wrong?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1567810384, "post_id": 57828952, "comment_id": 102088595, "body": "Welcome to Stack Overflow! As it is your question is not answerable because you haven&#39;t stated your problem. Please edit it to include the expected behaviour and the current behaviour."}], "owner": {"reputation": 19, "user_id": 12032642, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-lak0DYmTCcw/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdqm9WzRnuyCUPxuFfsCwGWfgnNrg/photo.jpg?sz=128", "display_name": "Nikita Kalchenko", "link": "https://stackoverflow.com/users/12032642/nikita-kalchenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1567807110, "creation_date": 1567807110, "question_id": 57828952, "link": "https://stackoverflow.com/questions/57828952/deserialize-json-starting-with-array-to-use-with-restson", "title": "Deserialize JSON starting with array to use with restson", "body": "<p>I have a struct:</p>\n\n<pre><code>#[derive(Serialize,Deserialize,Debug)]\nstruct Post {\n    #[serde(rename(deserialize = \"userId\"))]\n    user_id: i32,\n    id: i32,\n    title: String,\n    body: String,\n}\n</code></pre>\n\n<p>I need to deserialize JSON to <code>Vec&lt;Post&gt;</code>:</p>\n\n<pre><code>extern crate restson;\nextern crate serde;\nextern crate serde_derive;\n\nuse std::fs;\nuse std::path::Path;\nuse restson::{RestClient, RestPath, Error};\nuse serde_derive::{Serialize, Deserialize};\n\nconst URI: &amp;str =\"https://jsonplaceholder.typicode.com/\";\nimpl RestPath&lt;()&gt; for Vec&lt;Post&gt; {\n    fn get_path(_: ()) -&gt; Result&lt;String, Error&gt; {\n        Ok(String::from(\"posts\"))\n    }\n}\n\nfn main() {\n    let mut client = RestClient::new(URI).unwrap();\n\n    let posts: Vec&lt;Post&gt; = client.get(()).unwrap();\n    println!(\"{:?}\", posts.len());\n}\n</code></pre>\n\n<p>I'm totally new, so please help me.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1567806097, "post_id": 57828602, "comment_id": 102087688, "body": "I think that the compiler is going crazy trying to decide whether to use <code>Index</code> or <code>IndexMut</code> while deciding the override of <code>PartialEq::lt</code> to use. You can workaround with a couple of temporary variables such as <code>let a = &amp;collection[j]; let b = &amp;collection[least_element]; if a &lt; b ...</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1567806255, "post_id": 57828602, "comment_id": 102087719, "body": "Or you can <code>use std::ops::Index;</code> and write <code>if collection.index(j) &lt; collection.index[least_element] ...</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1567806467, "post_id": 57828602, "comment_id": 102087771, "body": "Or simply <code>if collection[j].lt(&amp;collection[least_element]) ...</code>. I&#39;m starting to think that you may have found a compiler bug..."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1567807264, "post_id": 57828602, "comment_id": 102087938, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f554107d08ff7e0ff09b96b37f87a951\" rel=\"nofollow noreferrer\"><code>&amp;collection[j] &lt; &amp;collection[least_element]</code></a> also works. Don&#39;t know why though."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1567807337, "post_id": 57828602, "comment_id": 102087956, "body": "So does <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6c66ed3b946e73005b1f1e241ad54d48\" rel=\"nofollow noreferrer\"><code>*collection[j] &lt; *collection[least_element]</code></a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1567810831, "post_id": 57828602, "comment_id": 102088684, "body": "<a href=\"https://stackoverflow.com/questions/52989901/why-can-i-not-call-borrow-mut-after-indexing-into-an-immutable-vecrefcell\">Why can I not call borrow_mut() after indexing into an immutable Vec&lt;RefCell&gt;?</a> seems to be about the same issue, although it&#39;s less clear to me why your example doesn&#39;t work. The only thing they obviously have in common is the incorrect choice of <code>IndexMut</code> where <code>Index</code> would suffice."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1567874307, "post_id": 57828602, "comment_id": 102099605, "body": "Couldn&#39;t find an existing bug, so I filed this <a href=\"https://github.com/rust-lang/rust/issues/64261\" rel=\"nofollow noreferrer\">ticket</a>."}, {"owner": {"reputation": 4300, "user_id": 4513509, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/MAkrs.png?s=128&g=1", "display_name": "NonCreature0714", "link": "https://stackoverflow.com/users/4513509/noncreature0714"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1567890788, "post_id": 57828602, "comment_id": 102103206, "body": "@edwardw Thanks for filing the issue :) I went to do it but couldn&#39;t get the right words for it."}], "answers": [{"tags": [], "owner": {"reputation": 84, "user_id": 12006518, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBGNrILhdG16KoQeOr69hoQyrIZxha1x9c8DEREdg=k-s128", "display_name": "Andrea Proone", "link": "https://stackoverflow.com/users/12006518/andrea-proone"}, "is_accepted": true, "score": 2, "last_activity_date": 1570629187, "last_edit_date": 1570629187, "creation_date": 1570628889, "answer_id": 58305683, "question_id": 57828602, "link": "https://stackoverflow.com/questions/57828602/what-is-rusts-borrow-checker-really-complaining-about-here/58305683#58305683", "title": "What is Rust&#39;s borrow checker really complaining about here?", "body": "<p>When you try to access <code>collection[j]</code>, the compiler returns a <code>&amp;mut String</code> because that's the type of the vector's elements. When you try to access <code>collection[least_element]</code>, the borrow checker doesn't know if <code>least_element != j</code>, and having two mutable references of the same element would be undefined behavior. You can either use <code>std::ops::Index</code> which returns a <code>&amp;&amp;mut String</code> (and it's safe to have two immutable references to the same mutable reference), directly borrowing the elements (<code>&amp;collection[j] &lt; &amp;collection[least_element]</code>) or, if possible, changing the type of collection to <code>Vec&lt;&amp;String&gt;</code> or <code>Vec&lt;String&gt;</code>.</p>\n"}], "owner": {"reputation": 4300, "user_id": 4513509, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/MAkrs.png?s=128&g=1", "display_name": "NonCreature0714", "link": "https://stackoverflow.com/users/4513509/noncreature0714"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 1, "accepted_answer_id": 58305683, "answer_count": 1, "score": 8, "last_activity_date": 1570629187, "creation_date": 1567804347, "last_edit_date": 1570629113, "question_id": 57828602, "link": "https://stackoverflow.com/questions/57828602/what-is-rusts-borrow-checker-really-complaining-about-here", "title": "What is Rust&#39;s borrow checker really complaining about here?", "body": "<p>Consider a simple selection sort on a <code>&amp;mut Vec&lt;&amp;mut String&gt;</code>: </p>\n\n<pre><code>fn selection_sort(collection: &amp;mut Vec&lt;&amp;mut String&gt;) {\n    for i in 0..collection.len() {\n        let mut least_element = i;\n        for j in (i + 1)..collection.len() {\n            if collection[j] &lt; collection[least_element] {\n                least_element = j;\n            }\n        }\n\n        collection.swap(least_element, i);\n    }\n}\n</code></pre>\n\n<p>This loop should work, based on <a href=\"https://medium.com/@spyr1014/sorting-in-rust-selection-insertion-and-counting-sort-2c4d3575e364\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://codereview.stackexchange.com/questions/122790/selection-sort-algorithm-in-rust/122799\">that</a> \u2013 yet the borrow throws this error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow data in a `&amp;` reference as mutable\n  --&gt; src/main.rs:58:28\n   |\n58 |             if chunks[j] &lt; chunks[least_element] {\n   |                            ^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n   |\n   = help: trait `IndexMut` is required to modify indexed content\n</code></pre>\n\n<p>Or in newer versions of Rust:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow data in an index of `std::vec::Vec&lt;&amp;mut std::string::String&gt;` as mutable\n --&gt; src/lib.rs:5:32\n  |\n5 |             if collection[j] &lt; collection[least_element] {\n  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n  |\n  = help: trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::vec::Vec&lt;&amp;mut std::string::String&gt;`\n</code></pre>\n\n<p>Wouldn't it make more sense to have a <code>&amp;</code> reference be mutable?</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\"><code>IndexMut</code> documentation</a> doesn't use an example I understand well and has a pretty large example that doesn't seem to clearly demonstrate how to use <code>IndexMut</code>, especially in the context of a selection sort, or swapping elements.</p>\n\n<p><a href=\"https://doc.rust-lang.org/error-index.html#E0596\" rel=\"nofollow noreferrer\">Error 0596</a> explains it occurs when trying to borrow from an immutable value, yet <code>least_element</code> is mutable. If <code>i</code> is changed to <code>mut i</code> this also does compile (and the compiler recommends removing <code>mut</code> from <code>i</code>).</p>\n\n<p>Is there a Rustacean who can illuminate this?</p>\n"}, {"tags": ["json", "rust", "rust-actix", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": false, "score": 0, "last_activity_date": 1569182458, "creation_date": 1569182458, "answer_id": 58052958, "question_id": 57827669, "link": "https://stackoverflow.com/questions/57827669/how-do-i-extract-path-parameters-and-parse-json-body-from-the-same-request-using/58052958#58052958", "title": "How do I extract path parameters and parse JSON body from the same request using Actix-Web", "body": "<p>Actix uses <a href=\"https://actix.rs/docs/extractors/\" rel=\"nofollow noreferrer\">extractors</a> for this. Define what you want extracted in the handler:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize, Serialize)] // &lt;-- Note the Serialize for the json echo response\nstruct Thing {\n    //...\n}\n\ntype JsonThing = Json&lt;Thing&gt;;\n\nfn handle(thing: JsonThing) -&gt; impl Reponse {\n    let id = req.match_info().query(\"id\").parse::&lt;usize&gt;().unwrap();\n\n    // echo the body back\n    HttpResponse::Ok().json(thing)\n}\n</code></pre>\n\n<p>You could do the same  with the <code>id</code>, using <a href=\"https://docs.rs/actix-web/1.0.7/actix_web/web/struct.Query.html\" rel=\"nofollow noreferrer\"><code>web::Query</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 1359, "user_id": 98107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56fd29c23037380981369ca0857f7fe2?s=128&d=identicon&r=PG", "display_name": "Neopallium", "link": "https://stackoverflow.com/users/98107/neopallium"}, "is_accepted": false, "score": 0, "last_activity_date": 1608195442, "creation_date": 1608195442, "answer_id": 65337448, "question_id": 57827669, "link": "https://stackoverflow.com/questions/57827669/how-do-i-extract-path-parameters-and-parse-json-body-from-the-same-request-using/65337448#65337448", "title": "How do I extract path parameters and parse JSON body from the same request using Actix-Web", "body": "<p>You will want to use the <code>web::Path</code> extractor to get <code>id</code> from the path.  Multiple extractors can be used in the same handler function.  The example below will work with <code>actix-web</code> &gt;= 3.0.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::{error, web, App, HttpResponse, HttpServer, Responder};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Thing {\n    name: String, // required string member.  This must exist in the request body's json.\n    some_value: Option&lt;String&gt;, // optional member, can be missing from the request body.\n    // ...\n}\n\n/// deserialize `Thing` from request's body and get `id` from path.\n#[put(&quot;/{id:\\\\d+}/path&quot;)]\nasync fn handle(\n  web::Path(id): web::Path&lt;usize&gt;, // web::Path extractor for 'id'\n  web::Json(thing): web::Json&lt;Thing&gt; // web::Json extractor for json body.\n) -&gt; impl IntoFuture {\n    // `web::Path(id)` uses Rust's pattern matching to &quot;unwrap&quot; the `id` value, so `id` is type `usize` here.\n    // `web::Json(thing)` does the same &quot;unwrapping&quot;, so `thing` is of type `Thing` here.\n\n    // TODO: use 'id' and 'thing'\n    HttpResponse::Ok().finish()\n}\n\n#[actix_web::main]\nasync fn main() -&gt; std::io::Result&lt;()&gt; {\n    let address = String::from(&quot;127.0.0.1:8080&quot;);\n    HttpServer::new(|| {\n        App::new()\n          .service(handle)\n    })\n    .bind(address)?\n    .run()\n    .await\n}\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 6933595, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-IshgrZJNbiQ/AAAAAAAAAAI/AAAAAAAAAsk/quOGNfzjTf8/photo.jpg?sz=128", "display_name": "Mindaugas \u010celkys", "link": "https://stackoverflow.com/users/6933595/mindaugas-%c4%8celkys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1351, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1608195442, "creation_date": 1567798652, "last_edit_date": 1567851470, "question_id": 57827669, "link": "https://stackoverflow.com/questions/57827669/how-do-i-extract-path-parameters-and-parse-json-body-from-the-same-request-using", "title": "How do I extract path parameters and parse JSON body from the same request using Actix-Web", "body": "<p>I'm writing a web application in Rust using Actix-Web v1.0.7. I'm trying to create a route handler that could access a path parameter and also parse the JSON body of the request. However, so far I've failed to do so.</p>\n\n<p>I tried declaring a handler function that would accept <code>actix_web::HttpRequest</code> as a parameter. This gives me access to the path parameter using <code>match_info</code> method without any problems. I then tried parsing the JSON body by using <code>actix_web::web::Json::from_request</code> method (from <code>actix_web::FromRequest</code> trait implementation), which requires 2 arguments:</p>\n\n<ol>\n<li><code>&amp;actix_web::HttpRequest</code></li>\n<li><code>&amp;mut actix_web::dev::Payload</code></li>\n</ol>\n\n<p>My problem is getting the <code>actix_web::dev::Payload</code>. I tried using the <code>actix_web::HttpRequest::take_payload</code> method (from <code>actix_web::HttpMessage</code> trait implementation) but the trait implementation declares a unit value as the <code>Stream</code> inside the payload, which means I'm stuck. I assume this is due to the asynchronous nature of the framework, and perhaps the request body has not yet been received when the handler is invoked. However, that's just an assumption.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\nstruct Thing {\n    // ...\n}\n\ntype JsonThing = Json&lt;Thing&gt;;\n\nfn handle(req: HttpRequest) -&gt; impl IntoFuture {\n    let id = req.match_info().query(\"id\").parse::&lt;usize&gt;().unwrap();\n    let mut payload = req.take_payload();\n    JsonThing::from_request(&amp;req, &amp;mut payload)\n        .and_then(|thing| {\n            // ... \n            HttpResponse::Ok().finish()\n        })\n}\n\nfn main() {\n    let address = String::from(\"127.0.0.1:8080\");\n    let scope = web::scope(\"/scope\")\n        .route(\"/{id:\\\\d+}/path\", web::put().to_async(handle));\n    HttpServer::new(|| App::new().service(scope))\n        .bind(address)\n        .unwrap()\n        .run()\n        .unwrap();\n}\n</code></pre>\n\n<p>I know that the snippet above does not compile and contains other issues, however it conveys the general idea. I expect there is a way to get the value of ID parameter from the path and to also be able to parse the JSON body of the same request, but so far I didn't find one.</p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 0, "last_activity_date": 1567805012, "creation_date": 1567805012, "answer_id": 57828686, "question_id": 57827371, "link": "https://stackoverflow.com/questions/57827371/rocket-failing-to-compile/57828686#57828686", "title": "Rocket failing to compile", "body": "<p>It would help if you would provide a little more information.  Rocket compiles fine with nightly-2019-09-05 -- just confirmed.</p>\n\n<pre><code>git clone https://github.com/SergioBenitez/Rocket\ncd Rocket\ngit checkout v0.4.2\ncd examples/hello_world\ncargo run\n</code></pre>\n\n<p>This works with the latest rocket 0.4.2 and the latest nightly.</p>\n\n<p>You seem to be attempting to use rocket_codegen.  Confirm that the above works before adding in rocket_codegen.</p>\n\n<p>Once the above works, you may want to try the following:</p>\n\n<pre><code>echo 'rocket_codegen = \"0.4.2\"' &gt;&gt; Cargo.toml\ncargo build\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 12032162, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4da7980ab22529042c656d8bf9960df2?s=128&d=identicon&r=PG&f=1", "display_name": "mcroxide", "link": "https://stackoverflow.com/users/12032162/mcroxide"}, "is_accepted": false, "score": 3, "last_activity_date": 1568195773, "creation_date": 1568195773, "answer_id": 57886604, "question_id": 57827371, "link": "https://stackoverflow.com/questions/57827371/rocket-failing-to-compile/57886604#57886604", "title": "Rocket failing to compile", "body": "<p>First thanks to @Gardener for the response above. It prompted me to look at the latest examples from Rocket. </p>\n\n<p>Its not a problem with the versions, but the macros have changed.  I record it here to help others.</p>\n\n<p>Old code (which yields error reported):</p>\n\n<pre><code>#![plugin(rocket_codegen)]\n\nextern crate rocket;\n</code></pre>\n\n<p>Is replaced by new macros:</p>\n\n<pre><code>#[macro_use] extern crate rocket;\n</code></pre>\n"}], "owner": {"reputation": 51, "user_id": 12032162, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4da7980ab22529042c656d8bf9960df2?s=128&d=identicon&r=PG&f=1", "display_name": "mcroxide", "link": "https://stackoverflow.com/users/12032162/mcroxide"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1568195773, "creation_date": 1567796806, "last_edit_date": 1567815087, "question_id": 57827371, "link": "https://stackoverflow.com/questions/57827371/rocket-failing-to-compile", "title": "Rocket failing to compile", "body": "<p>I am attempting to try out Rocket web framework with a very small example. However, Rocket (0.4.2) wont compile with the nightly rustc. (Using Ubuntu linux.)  </p>\n\n<p>I am building using nightly rustc (2019-09-05). Just did a rustup to try the latest rustc. I am using these versions:</p>\n\n<ul>\n<li>nightly-x86_64-unknown-linux-gnu (directory override for '/work/cd/rusty/cdbackend')</li>\n<li>rustc 1.39.0-nightly (618768492 2019-09-05)</li>\n<li>Rocket 0.4.2</li>\n</ul>\n\n<p>I get the following error:</p>\n\n<pre><code>error: /work/cd/rusty/cdbackend/target/debug/deps/librocket_codegen-33108ba93258cfa7.so: undefined symbol: __rustc_plugin_registrar_a555dc3e7aee69391ac43d72ccd8fe72__\n --&gt; src/main.rs:2:11\n  |\n2 | #![plugin(rocket_codegen)]\n  |           ^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Any ideas on what version will compile?</p>\n"}, {"tags": ["multithreading", "rust", "closures", "share", "mutex"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1567803905, "post_id": 57825509, "comment_id": 102087161, "body": "The <code>Box</code> seems unnecessary."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1567804324, "post_id": 57825509, "comment_id": 102087269, "body": "The <code>Option::is_some() + .unwrap()</code> is anti-idomatic. use <code>Option::unwrap_or</code>, <code>Option::unwrap_or_else</code> or even a plain old <code>match</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1567805057, "post_id": 57825509, "comment_id": 102087445, "body": "<code>Arc</code> is always cloneable, even if the underlying is not. If you make <code>LibThreaded::new</code> take a <code>Option&lt;Callback&gt;</code> you won&#39;t need the <code>Clone</code> restriction in the function itself."}, {"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1567841259, "post_id": 57825509, "comment_id": 102092529, "body": "@trentcl: This appears to work. I post an edited version above."}, {"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567842654, "post_id": 57825509, "comment_id": 102092801, "body": "@rodrigo regarding is_some. I&#39;d like to use your suggestion, but if I use <code>let c = callback.unwrap_or(|_,_| {});     LibThreaded { something_threaded: &quot;I am in a thread: &quot;.to_string(), callback: Arc::new(Mutex::new(c)) }</code> I get the error <code>type parameter expected, found closure</code>. How can I solve this?"}, {"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567842970, "post_id": 57825509, "comment_id": 102092855, "body": "@rodrigo regarding clone. Yes, I can make LibThreaded take Option&lt;Callback&gt;, but then I still have to use clone in set_callback because it is cloned for self.callback."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567854343, "post_id": 57825509, "comment_id": 102095160, "body": "@DanielSchaadt: Not if in <code>set_callback</code> you first wrap it in an <code>Arc</code>, something like <code>let callback = callback.map(|f| Arc::new(Mutex::new(f)))</code>. Then you will be cloning the <code>Arc</code>, not the <code>Fn</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1567884649, "post_id": 57825509, "comment_id": 102102060, "body": "@DanielSchaadt: Your error from the comment above is because <code>unwrap_or()</code> requires the value to be the same type as that inside the <code>Option</code>; your <code>Option</code> contains a <code>Callback</code>, that is an <code>Arc&lt;...&gt;</code> but you are passing a closure. See my answer below for a complete solution."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1567884377, "creation_date": 1567884377, "answer_id": 57836846, "question_id": 57825509, "link": "https://stackoverflow.com/questions/57825509/is-this-the-idiomatic-way-to-share-a-closure-callback-among-threads-in-rust/57836846#57836846", "title": "Is this the idiomatic way to share a closure callback among threads in rust?", "body": "<p>Let me rewrite the interesting pieces of code, as I understand the idiomatic Rust:</p>\n\n<p>First, the <code>LibThreaded::new</code> can be easily rewritten with a call to <code>unwrap_or_else</code>:</p>\n\n<pre><code>pub fn new(callback: Option&lt;Callback&gt;) -&gt; LibThreaded {\n    LibThreaded {\n        something_threaded: \"I am in a thread: \".to_string(),\n        callback: callback.unwrap_or_else(|| Arc::new(Mutex::new(|_,_| {})))\n    }\n}\n</code></pre>\n\n<p>You could also use <code>Option::unwrap_or</code>, but this way is nicer because you allocate the <code>Mutex</code> lazily, that is if <code>Option</code> is <code>Some</code> it will cost you nothing.</p>\n\n<p>Then the <code>Lib::set_callback</code> can be improved with a few changes: first remove the <code>Clone</code> requirement; then use <code>if let Some(...)</code> instead of <code>is_some()</code>; finally convert the callback into a <code>Callback</code> soon so it can be cloned:</p>\n\n<pre><code>pub async fn set_callback(&amp;mut self, callback: Option&lt;impl FnMut(String, String) + Send + Sync + 'static&gt;) {\n    let callback = callback.map(|cb| Arc::new(Mutex::new(cb)) as Callback); //line 1\n    if let Some(cb) = &amp;callback {  //line 2\n        self.callback = cb.clone();\n        let c = &amp;mut *self.callback.lock().unwrap();\n        (c)(self.something.clone(), \"hello world\".to_string());\n    }\n    let mut t = LibThreaded::new(callback);\n\n    //...\n}\n</code></pre>\n\n<p>There are a couple of lines that deserve additional comments:</p>\n\n<p>Line 1: The value inside an <code>Option</code> is replaced using <code>Option::map</code>. If we do it naively, <code>callback.map(|cb| Arc::new(Mutex::new(cb)));</code> we would get an <code>Option&lt;impl FnMut...&gt;</code> instead of a <code>Option&lt;dyn FnMut&gt;</code>. Fortunately we can coerce an <code>Arc&lt;impl T&gt;</code> into a <code>Arc&lt;dyn T&gt;</code> so we do just that with help of the handy type alias.</p>\n\n<p>Line 2: You can do this in several ways. You could also write <code>if let Some(cb) = callback.clone()</code> (<code>Option&lt;T:Clone&gt;</code> is also <code>Clone</code>) or <code>if let Some(ref cb) = callback</code>. Personally I prefer the way I wrote it. The idea is not to consume <code>callback</code> in this block, so that it can be reused later.</p>\n"}], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 786, "favorite_count": 1, "accepted_answer_id": 57836846, "answer_count": 1, "score": 2, "last_activity_date": 1567945476, "creation_date": 1567786575, "last_edit_date": 1567945476, "question_id": 57825509, "link": "https://stackoverflow.com/questions/57825509/is-this-the-idiomatic-way-to-share-a-closure-callback-among-threads-in-rust", "title": "Is this the idiomatic way to share a closure callback among threads in rust?", "body": "<p>I'd like to pass a callback function <code>do_something</code> to a function <code>new</code> which in turn creates several threads that need the callback (here by calling a function in <code>LibThreaded</code>). For instance such a situation occurs if I have a lib that receives socket messages in a thread and then calls the callback to do something with them. The callback may itself call code from another lib <code>OtherLib</code>, for which the <code>Clone</code>trait must be implement so far. </p>\n\n<p>I came up with a version that appears to work but it looks overly complex. Is this really the correct/best way to share the callback? Would it be possible to lift the <code>Clone</code>trait requirement on the <code>do_something</code> function in some other way?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await)]\n#![warn(rust_2018_idioms)]\nuse std::sync::{Arc, Mutex};\nuse std::error::Error;\nuse tokio::{runtime::Runtime};\n\n#[derive(Clone)]\nstruct OtherLib { }\n\nimpl OtherLib {\n    pub fn do_something(&amp;self, text1: String, text2: String) {\n        println!(\"doing something in other lib: {} + {}\", text1, text2);\n    }\n}\n\ntype Callback = Arc&lt;Mutex&lt;Box&lt;dyn 'static + FnMut(String, String) + Send + Sync&gt;&gt;&gt;;\n\nstruct LibThreaded {\n    something_threaded: String,\n    callback: Callback,\n}\n\nimpl LibThreaded {\n    pub fn new(callback: Option&lt;impl 'static + FnMut(String, String) + Send + Sync + Clone&gt;) -&gt; LibThreaded {\n        if callback.is_some() {\n            LibThreaded { something_threaded: \"I am in a thread: \".to_string(), callback: Arc::new(Mutex::new(Box::new(callback.unwrap()))) }\n        } else {\n            LibThreaded { something_threaded: \"I am in a thread: \".to_string(), callback: Arc::new(Mutex::new(Box::new(|_,_| {}))) }\n        }\n\n    }\n\n    async fn receiving(&amp;mut self) {\n        println!(\"in receiving loop\");\n            let c = &amp;mut *self.callback.lock().unwrap();\n            (c)(self.something_threaded.clone(), \"hello world\".to_string());\n    }\n}\n\nstruct Lib {\n    something: String,\n    callback: Callback,\n}\n\nimpl Lib {\n    pub fn new() -&gt; Lib {\n        Lib { something: \"I am lib: \".to_string(), callback: Arc::new(Mutex::new(Box::new(|_, _| {}))) }\n    }\n\n    pub fn set_callback(&amp;mut self, callback: Option&lt;impl 'static + FnMut(String, String) + Send + Sync + Clone&gt;) {\n        println!(\"in lib2\");\n        if callback.is_some() {\n            self.callback = Arc::new(Mutex::new(Box::new(callback.clone().unwrap())));\n            let c = &amp;mut *self.callback.lock().unwrap();\n            (c)(self.something.clone(), \"hello world\".to_string());\n        }\n        let mut t = LibThreaded::new(callback);\n\n        tokio::spawn(async move {\n            t.receiving().await;\n        });\n    }\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let ol = OtherLib {};\n\n    let callback = move |text1: String, text2: String| {\n            ol.do_something(text1, text2);\n    };\n\n    let rt = Runtime::new()?;\n    rt.block_on(async {\n        let mut lib = Lib::new();\n        lib.set_callback(Some(callback));\n    });\n    rt.shutdown_on_idle();\n    Ok(())\n}\n</code></pre>\n\n<p>Using the program above, I get the correct output:</p>\n\n<pre><code>in lib2\ndoing something in other lib: I am lib:  + hello world\nin receiving loop\ndoing something in other lib: I am in a thread:  + hello world\n</code></pre>\n\n<p>I am wondering if there is an easier solution without <code>Arc&lt;Mutex&lt;Box...</code> that does not impose additional requirements on <code>fn do_something</code>. Thanks for your help!</p>\n\n<p><strong>Edited version:</strong>\nThanks to the help from the comments/answers below, I have the following working code (see comments for line 1 and 2 in answer by rodrigo):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await)]\n#![warn(rust_2018_idioms)]\nuse std::sync::{Arc, Mutex};\nuse std::error::Error;\nuse tokio::{runtime::Runtime};\n\n#[derive(Clone)]\nstruct OtherLib { }\n\nimpl OtherLib {\n    pub fn do_something(&amp;self, text1: String, text2: String) {\n        println!(\"doing something in other lib: {} + {}\", text1, text2);\n    }\n}\n\ntype Callback = Arc&lt;Mutex&lt;dyn 'static + FnMut(String, String) + Send + Sync&gt;&gt;;\n\nstruct LibThreaded {\n    something_threaded: String,\n    callback: Callback,\n}\n\nimpl LibThreaded {\n    pub fn new(callback: Option&lt;Callback&gt;) -&gt; LibThreaded {\n        LibThreaded {\n            something_threaded: \"I am in a thread: \".to_string(),\n            callback: callback.unwrap_or_else(|| Arc::new(Mutex::new(|_,_| {})))\n        }\n    }\n\n    async fn receiving(&amp;mut self) {\n        println!(\"in receiving loop\");\n            let c = &amp;mut *self.callback.lock().unwrap();\n            (c)(self.something_threaded.clone(), \"hello world\".to_string());\n    }\n}\n\nstruct Lib {\n    something: String,\n    callback: Callback,\n}\n\nimpl Lib {\n    pub fn new() -&gt; Lib {\n        Lib { something: \"I am lib: \".to_string(), callback: Arc::new(Mutex::new(|_, _| {})) }\n    }\n\n    pub async fn set_callback(&amp;mut self, callback: Option&lt;impl 'static + FnMut(String, String) + Send + Sync&gt;) {\n        println!(\"in lib2\");\n        let callback = callback.map(|cb| Arc::new(Mutex::new(cb)) as Callback); //line 1\n        if let Some(cb) = &amp;callback {  //line 2\n            self.callback = cb.clone();\n            let c = &amp;mut *self.callback.lock().unwrap();\n            (c)(self.something.clone(), \"hello world\".to_string());\n        }\n        let mut t = LibThreaded::new(callback);\n\n        tokio::spawn(async move {\n            t.receiving().await;\n        });\n    }\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let ol = OtherLib {};\n\n    let callback = move |text1: String, text2: String| {\n            ol.do_something(text1, text2);\n    };\n\n    let rt = Runtime::new()?;\n    rt.block_on(async {\n        let mut lib = Lib::new();\n        lib.set_callback(Some(callback)).await;\n    });\n    rt.shutdown_on_idle();\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 8648854, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KbXrG.png?s=128&g=1", "display_name": "Sartor", "link": "https://stackoverflow.com/users/8648854/sartor"}, "edited": false, "score": 0, "creation_date": 1568016745, "post_id": 57825434, "comment_id": 102126854, "body": "Thank you for response. Your first example doesn&#39;t compile. I tried to change save_to_db(chan: &amp;str) to String type, but then another error appeared. Another problem that in my real code i need to check if second, third... parts exists or match some string"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 25, "user_id": 8648854, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KbXrG.png?s=128&g=1", "display_name": "Sartor", "link": "https://stackoverflow.com/users/8648854/sartor"}, "edited": false, "score": 0, "creation_date": 1568016905, "post_id": 57825434, "comment_id": 102126936, "body": "@Sartor Sorry, that was due to an edit from someone else. It works now. <code>save_to_db</code> needs a <code>&amp;str</code>, so <code>channel</code> must be borrowed."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1568016839, "last_edit_date": 1568016839, "creation_date": 1567786151, "answer_id": 57825434, "question_id": 57825375, "link": "https://stackoverflow.com/questions/57825375/how-to-pass-through-str-lifetime-to-boxdyn-fn/57825434#57825434", "title": "How to pass through &amp;str lifetime to Box&lt;dyn Fn()&gt;", "body": "<p><code>split</code> does not allocate anything, it only iterates over the initial string, keeping a reference to it. You need to own the string and move it into the closure:</p>\n\n<pre><code>pub enum Answer {\n    DbCommand(Box&lt;dyn Fn()&gt;),\n}\n\npub fn process(question: &amp;str) -&gt; Answer {\n    let channel = question.split(\" \").nth(1).unwrap().to_owned();\n\n    Answer::DbCommand(Box::new(move || save_to_db(&amp;channel)))\n}\n\npub fn save_to_db(chan: &amp;str) {\n    // Saving to db\n}\n</code></pre>\n\n<p>By the way, you do not need to collect anything in this case.</p>\n\n<p>If you really don't want to allocate a string, you can make your struct generic over a lifetime, but I think that this would add an unneeded complexity.:</p>\n\n<pre><code>pub enum Answer&lt;'a&gt; {\n    DbCommand(Box&lt;dyn Fn() + 'a&gt;),\n}\n\npub fn process(question: &amp;str) -&gt; Answer {\n    let channel = question.split(\" \").nth(1).unwrap();\n\n    Answer::DbCommand(Box::new(move || save_to_db(channel)))\n}\n\npub fn save_to_db(chan: &amp;str) {\n    // Saving to db\n}\n</code></pre>\n\n<p>That's because a trait object has an implicit <code>'static</code> lifetime by default.</p>\n"}, {"tags": [], "owner": {"reputation": 25, "user_id": 8648854, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KbXrG.png?s=128&g=1", "display_name": "Sartor", "link": "https://stackoverflow.com/users/8648854/sartor"}, "is_accepted": false, "score": 0, "last_activity_date": 1568116554, "creation_date": 1568116554, "answer_id": 57870279, "question_id": 57825375, "link": "https://stackoverflow.com/questions/57825375/how-to-pass-through-str-lifetime-to-boxdyn-fn/57870279#57870279", "title": "How to pass through &amp;str lifetime to Box&lt;dyn Fn()&gt;", "body": "<p>My final code looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Answer&lt;'a&gt; {\n    Text(String),\n    DbCommand(Box&lt;dyn Fn() -&gt; Result&lt;String, Error&gt; + 'a&gt;),\n}\n\npub fn process(question: &amp;str) -&gt; Answer {\n    let mut parts = question\n        .split(\" \")\n        .map(str::trim)\n        .filter(|s| !s.is_empty());\n\n    let command = parts.next();\n\n    match command {\n        //...\n        Some(\"/subscribe\") =&gt; {\n            match parts.next() {\n                Some(channel) =&gt; {\n                    Answer::DbCommand(Box::new(move || {\n                        db::subscribe_to_channel(&amp;channel)\n                        //...\n                    }))\n                },\n                None =&gt; Answer::Text(\"Provide channel name\".into()),\n            }\n        },\n        _ =&gt; Answer::Text(\"Invalid command.\".into()),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 8648854, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KbXrG.png?s=128&g=1", "display_name": "Sartor", "link": "https://stackoverflow.com/users/8648854/sartor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57825434, "answer_count": 2, "score": 1, "last_activity_date": 1568116554, "creation_date": 1567785943, "last_edit_date": 1567786198, "question_id": 57825375, "link": "https://stackoverflow.com/questions/57825375/how-to-pass-through-str-lifetime-to-boxdyn-fn", "title": "How to pass through &amp;str lifetime to Box&lt;dyn Fn()&gt;", "body": "<p>I am trying to do simple telegram bot. I have to response some answer for provided questions.</p>\n\n<p>Problem is that I can't use borrowed parts of question (string) to pass through it to db save function.</p>\n\n<p>I've cut my code as mush as possible:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Answer {\n    DbCommand(Box&lt;dyn Fn()&gt;),\n}\n\npub fn process(question: &amp;str) -&gt; Answer {\n    let parts: Vec&lt;&amp;str&gt; = question\n        .split(\" \")\n        .collect();\n\n    let channel = parts.get(1).unwrap();\n\n    Answer::DbCommand(Box::new(|| {\n        save_to_db(channel)\n    }))\n}\n\npub fn save_to_db(chan: &amp;str) {\n    // Saving to db\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=190c2eb1d8ae1760178b5e855bb2d510\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `question`\n  --&gt; src/lib.rs:12:23\n   |\n5  |   pub fn process(question: &amp;str) -&gt; Answer {\n   |                            ---- help: add explicit lifetime `'static` to the type of `question`: `&amp;'static str`\n...\n12 |       Answer::DbCommand(Box::new(|| {\n   |  _______________________^\n13 | |         save_to_db(channel)\n14 | |     }))\n   | |______^ lifetime `'static` required\n</code></pre>\n\n<p>If I add some function lifetime, then I get error E0495. There's not much information on it</p>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1567783190, "post_id": 57824584, "comment_id": 102079567, "body": "If you want to build a <code>struct</code> without let the user bother about the generic types, you should use the builder pattern."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 4, "creation_date": 1567783910, "post_id": 57824584, "comment_id": 102079884, "body": "The compiler here fails to determine the type of T is the default one because it tries to infer the type from the right part. You can help it with this simple hint: ` let c:C = C { t: None };`"}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1567785506, "post_id": 57824992, "comment_id": 102080646, "body": "I&#39;m quite sure this is not a bug. In a realistic setting (ie where <code>c</code> is actually used) this is less likely to happen."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1567785575, "post_id": 57824992, "comment_id": 102080679, "body": "@PeterHall I also tend to think that &quot;fixing&quot; it would fuss the logic and also make it harder for humans to decipher the code in less trivial cases."}, {"owner": {"reputation": 497, "user_id": 189911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/297315539d718f4bcd9efe78e08c5225?s=128&d=identicon&r=PG", "display_name": "Michael Ilyin", "link": "https://stackoverflow.com/users/189911/michael-ilyin"}, "edited": false, "score": 0, "creation_date": 1567803534, "post_id": 57824992, "comment_id": 102087057, "body": "Thank you! Though tt&#39;s still unclear why compiler can infer T=A in left expression, but can&#39;t do it in right"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1567842647, "last_edit_date": 1567842647, "creation_date": 1567784383, "answer_id": 57824992, "question_id": 57824584, "link": "https://stackoverflow.com/questions/57824584/why-rust-dont-use-default-generic-parameter-type/57824992#57824992", "title": "Why Rust don&#39;t use default generic parameter type", "body": "<p>When you don't precise a type in a variable binding (left of the assignment), the compiler must infer it.</p>\n\n<p>Here, the value isn't precise enough (<code>None</code> could be anything).</p>\n\n<p>A solution is to declare a type in the binding. You don't have to give a  type to <code>T</code>, if you write just <code>C</code>, the default type for <code>T</code> is applied:</p>\n\n<pre><code>let c:C = C { t: None };\n</code></pre>\n\n<p>It's debatable</p>\n\n<ul>\n<li>whether it's a compiler bug or not (I don't think it is but it can be argued that a human sees no ambiguity here)</li>\n<li>whether it should be fixed or not (I don't think it should as more complex cases could be ambiguous or hard to decipher when there are multiple inference locations)</li>\n</ul>\n\n<p>Note that in <code>c:C</code>, there's no type inference at all: Omitting <code>&lt;_&gt;</code> or <code>&lt;SomeType&gt;</code> means the default type applies.</p>\n"}], "owner": {"reputation": 497, "user_id": 189911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/297315539d718f4bcd9efe78e08c5225?s=128&d=identicon&r=PG", "display_name": "Michael Ilyin", "link": "https://stackoverflow.com/users/189911/michael-ilyin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 822, "favorite_count": 1, "accepted_answer_id": 57824992, "answer_count": 1, "score": 8, "last_activity_date": 1567842647, "creation_date": 1567782600, "last_edit_date": 1567783084, "question_id": 57824584, "link": "https://stackoverflow.com/questions/57824584/why-rust-dont-use-default-generic-parameter-type", "title": "Why Rust don&#39;t use default generic parameter type", "body": "<p>I want to create generic structure with default type. But Rust compiler still requires me to specify explicit type when creating my structure.</p>\n\n<pre><code>struct A {}\n\nstruct C&lt;T = A&gt; {\n    t: Option&lt;T&gt;\n}\n\nfn main() {\n    let c = C { t: None };\n}\n</code></pre>\n\n<p>Rust compiler shows this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed for `C&lt;T&gt;`\n --&gt; src/main.rs:8:9\n  |\n8 | let c = C { t: None };\n  |     -   ^ cannot infer type for `T`\n  |     |\n  |     consider giving `c` the explicit type `C&lt;T&gt;`, where the type parameter `T` is specified\n</code></pre>\n\n<p>How can I allow user of my code to omit generic parameter?</p>\n"}, {"tags": ["rust", "gtk-rs"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1567763509, "post_id": 57819514, "comment_id": 102069631, "body": "Your <code>Some(fallback_message.unwrap_or(&quot;Hello world&quot;))</code> can be written: <code>fallback_message.or(Some(&quot;Hello world&quot;))</code>"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1567771186, "post_id": 57819514, "comment_id": 102073222, "body": "This should probably be raised as an issue in gtk-rs - you should never be able to cause a segfault from within safe Rust code. Admittedly the line is a little fuzzy here since it&#39;s happening in an external library, but still!"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1567763929, "post_id": 57819757, "comment_id": 102069866, "body": "Also, <a href=\"http://gtk-rs.org/docs/gio/prelude/trait.ApplicationExtManual.html#tymethod.run\" rel=\"nofollow noreferrer\">from the doc</a>: <i>Much like <code>glib::MainLoop::run</code>, this function will acquire the main context for the duration that the application is running.</i> That can only be done once."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1567763800, "creation_date": 1567763800, "answer_id": 57819757, "question_id": 57819514, "link": "https://stackoverflow.com/questions/57819514/assertion-fails-in-g-application-parse-command-line-whenever-gtk-application-run/57819757#57819757", "title": "Assertion fails in g_application_parse_command_line whenever gtk application run multiple times", "body": "<p>The issue is a simple misunderstanding in what happens and the hierarchy of objects in GTK.</p>\n\n<p>GTK's object tree starts with an <code>Application</code>, which you have in your case. It then has 1 or more <code>ApplicationWindow</code>s, which are the \"windows\" themselves. From there, all your components live under that.</p>\n\n<p>You've done this hierarchy properly - you create your <code>ApplicationWindow</code>s under the <code>Application</code> as you should. However, you then decide to <code>run()</code> this application four times, and there is a check inside the library to see if the arguments were parsed before. As it is the same (recycled) application, they are, and it errors out.</p>\n\n<p>Consider recreating <code>Application</code> every time; it follows the natural GTK lifecycle as well.</p>\n"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 57819757, "answer_count": 1, "score": 1, "last_activity_date": 1567763800, "creation_date": 1567762915, "question_id": 57819514, "link": "https://stackoverflow.com/questions/57819514/assertion-fails-in-g-application-parse-command-line-whenever-gtk-application-run", "title": "Assertion fails in g_application_parse_command_line whenever gtk application run multiple times", "body": "<p>My Gtk-rs program crashes if I want to run a gtk application multiple times. </p>\n\n<pre><code>use gio::prelude::*;\nuse gtk::prelude::*;\n\nstatic APP_ID: &amp;'static str = \"com.localserver.app\";\n\nfn build_ui(app: &amp;gtk::Application, fallback_message: Option&lt;&amp;'static str&gt;) {\n    {\n        let window = gtk::ApplicationWindow::new(app);\n        window.set_title(\"App\");\n        window.set_position(gtk::WindowPosition::Center);\n        window.set_default_size(350, 70);\n\n        window.add(&amp;gtk::Label::new(Some(\n            fallback_message.unwrap_or(\"Hello world\"),\n        )));\n\n        window\n    }\n    .show_all();\n}\n\nfn main() {\n    let args = std::env::args().collect::&lt;Vec&lt;_&gt;&gt;();\n    let application: gtk::Application =\n        gtk::Application::new(Some(APP_ID), Default::default()).unwrap();\n    application.connect_activate(|app| build_ui(&amp;app, None));\n\n    for n in 1 .. 4 {\n        application.run(&amp;args);\n        println!(\"Window loaded {} times.\", n);\n    }\n}\n</code></pre>\n\n<p>When ran, it goes thorough the first iteration in the for loop at the end but crashes the next time:</p>\n\n<pre><code>(dbustest_rs:9805): GLib-GIO-CRITICAL **: 19:23:51.883: g_application_parse_command_line: assertion '!application-&gt;priv-&gt;options_parsed' failed\nSegmentation fault (core dumped)\n</code></pre>\n\n<p>What's causing this and how can I prevent it?</p>\n"}, {"tags": ["rust", "trait-objects"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 8, "last_activity_date": 1591643823, "last_edit_date": 1591643823, "creation_date": 1567787347, "answer_id": 57825657, "question_id": 57817405, "link": "https://stackoverflow.com/questions/57817405/why-can-a-str-not-be-passed-to-a-function-accepting-a-dyn-display-trait-object/57825657#57825657", "title": "Why can a &amp;str not be passed to a function accepting a &amp;dyn Display trait object?", "body": "<p><code>str</code> does implement <code>Display</code>, but it is not possible to coerce a <code>&amp;str</code> to a <code>&amp;dyn Display</code> because the implementation of <code>Display</code> for <code>str</code> may (and does) use the string's length. Length is part of the type <code>&amp;str</code> but not part of the type <code>&amp;dyn Display</code>, and you can't discard the length because that would make it impossible to implement <code>Display</code> at all.</p>\n\n<p>Another way to look at this is that a vtable (virtual method table) does not exist for the implementation of <code>Display</code> for <code>str</code>, because vtables may only contain functions that accept thin <code>self</code> pointers, but in <code>impl Display for str</code>, <code>&amp;self</code> is a fat pointer. See also <a href=\"https://stackoverflow.com/questions/57398118/why-cant-sized-trait-be-casted-to-dyn-trait\">Why can&#39;t `&amp;(?Sized + Trait)` be cast to `&amp;dyn Trait`?</a></p>\n\n<p>However, <code>&amp;str</code> itself also implements <code>Display</code>, so you can make <code>test</code> work by simply adding another layer of indirection:</p>\n\n<pre><code>fn main() {\n    test(&amp;\"hello\");\n}\n</code></pre>\n"}], "owner": {"reputation": 714, "user_id": 653157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62a73f3cd5a324fb02065a00c1b9e3f2?s=128&d=identicon&r=PG", "display_name": "osamu", "link": "https://stackoverflow.com/users/653157/osamu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1591646070, "creation_date": 1567754264, "last_edit_date": 1591643772, "question_id": 57817405, "link": "https://stackoverflow.com/questions/57817405/why-can-a-str-not-be-passed-to-a-function-accepting-a-dyn-display-trait-object", "title": "Why can a &amp;str not be passed to a function accepting a &amp;dyn Display trait object?", "body": "<p>I'm reading a Rust book and I am confused by this example:</p>\n\n<pre><code>use std::fmt::Display;\n\nfn main() {\n    test(\"hello\");\n    test2(\"hello\")\n}\n\nfn test(s: &amp;dyn Display) {\n    println!(\"{}\", s);\n}\n\nfn test2(s: &amp;str) {\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>Passing <code>&amp;'static str</code> as a trait object fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `str` cannot be known at compilation time\n --&gt; src/main.rs:4:10\n  |\n4 |     test(\"hello\");\n  |          ^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `str`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required for the cast to the object type `dyn std::fmt::Display`\n</code></pre>\n\n<p>Why does this fail and the second call work?</p>\n"}, {"tags": ["model-view-controller", "rust", "frontend", "lang", "yew"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567757541, "post_id": 57816515, "comment_id": 102066832, "body": "The scope of this question is probably a bit too broad; is there a chance you can condense your code down a bit into a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">MCVE</a>, attempting to remove the bits of the code that, you know, work?"}], "answers": [{"tags": [], "owner": {"reputation": 29, "user_id": 4602323, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/019fd245686fb0c4b85042d8688fcf6f?s=128&d=identicon&r=PG", "display_name": "Robust Systems 8472-1488", "link": "https://stackoverflow.com/users/4602323/robust-systems-8472-1488"}, "is_accepted": false, "score": 0, "last_activity_date": 1591786112, "last_edit_date": 1591786112, "creation_date": 1568003239, "answer_id": 57847875, "question_id": 57816515, "link": "https://stackoverflow.com/questions/57816515/how-to-implement-a-stateful-app-navigation-using-rust-and-the-yew-crate/57847875#57847875", "title": "How to implement a Stateful App Navigation using Rust and the Yew Crate?", "body": "<h1>Answer from Yew Gitter;</h1>\n\n<p>@robust-systems (without looking at the other source code provided, just the code visible in the SO post) My suggestion would be to to emit a Message containing an enum representing which page you want tab you want to be selected instead of running toggle_tab. You can handle this Message in update and store the enum as part of your Model, indicating which is active.\nFrom there, back in view, one way to utilize this state in the Model is to create small html snippets that you stitch together.\neg like:</p>\n\n<pre><code>let welcome_button = if let Tab::Welcome = self.active_tab {\n    html!{\n        &lt;button class=\"tablinks brand-logo welcome active \" onclick=self.link.callback(|_| Message::ChangeTab(Tab::Welcome))&gt;{\"Welcome\"}&lt;/button&gt;\n    }\n} else {\n    html!{\n        &lt;button class=\"tablinks brand-logo welcome \" onclick=self.link.callback(|_| Message::ChangeTab(Tab::Welcome))&gt;{\"Welcome\"}&lt;/button&gt;\n    }\n};\n</code></pre>\n\n<p>Then in your large html! block, you insert the `welcome button like </p>\n\n<pre><code>&lt;ul class=\"row\"&gt;\n    &lt;div class=\"col s1\" &gt;\n    {welcome_button}\n   ...\n</code></pre>\n\n<h1>Thoughts</h1>\n\n<p>How to now emit the msg and to where, i will hack up the <a href=\"https://github.com/yewstack/yew/tree/master/examples/custom_components\" rel=\"nofollow noreferrer\">Custom-Components</a> example on the yew github page. *will edit this answer once the application is fully stateful.</p>\n\n<h1>Update</h1>\n\n<p>I finally got it fully stateful! Here is the resulting code for anyone who happens to find it useful.</p>\n\n<p>I had to match a ChangeTab(Tab) Message and save the active_tab field in Model to Local Storage, then use an if let to restore the active_tab.</p>\n\n<pre><code>use crate::button_welcome::WelcomeButton;\nuse crate::button_home::HomeButton;\nuse crate::button_comming_soon::CommingSoon;\nuse crate::button_debug_panel::DebugButton;\n\nuse serde_derive::{Deserialize, Serialize};\n\nuse yew::prelude::*;\nuse yew::services::storage::{StorageService, Area};\nuse yew::format::Json;\nuse crate::tab_navigation::Tab::Home;\nuse std::sync::atomic::Ordering::AcqRel;\n\nconst RESTORE_KEY: &amp;'static str = \"tab_navigation\";\n\npub struct TabNavigation {\n    active_tab: Tab,\n    storage: StorageService,\n}\n\npub enum Msg {\n    ChangeTab(Tab),\n}\n\n#[derive(Serialize, Deserialize)]\npub enum Tab {\n    Welcome,\n    Home,\n    CommingSoon,\n    Debug,\n}\n\nimpl Default for Tab {\n    fn default() -&gt; Self {\n        Tab::Home\n    }\n}\n\nimpl Component for TabNavigation {\n    type Message = Msg;\n    type Properties = ();\n\n    fn create(props: Self::Properties, _: ComponentLink&lt;Self&gt;) -&gt; Self {\n        let storage = StorageService::new(Area::Local);\n        let active_tab: Tab = {\n            if let Json(Ok(active_tab)) = storage.restore(RESTORE_KEY) {\n                active_tab\n            } else {\n                Tab::Home\n            }\n        };\n\n        TabNavigation {\n            storage: storage,\n            active_tab: active_tab,\n        }\n    }\n\n    fn update(&amp;mut self, msg: Self::Message) -&gt; ShouldRender {\n        match msg {\n            // active tab enum\n            Msg::ChangeTab(tab_to_activate) =&gt; {\n                match tab_to_activate {\n                    Tab::Welcome =&gt; {\n                        self.active_tab = Tab::Welcome\n                    },\n                    Tab::Home =&gt; {\n                        self.active_tab = Tab::Home\n                    },\n                    Tab::CommingSoon =&gt; {\n                        self.active_tab = Tab::CommingSoon\n                    },\n                    Tab::Debug =&gt; {\n                        self.active_tab = Tab::Debug\n                    }\n                }\n            }\n        }\n        self.storage.store(RESTORE_KEY, Json(&amp;self.active_tab));\n        true\n    }\n\n    fn change(&amp;mut self, props: Self::Properties) -&gt; ShouldRender {\n//        if self.active_tab == Tab::Home\n        true\n    }\n}\n\nimpl Renderable&lt;TabNavigation&gt; for TabNavigation {\n    fn view(&amp;self) -&gt; Html&lt;Self&gt; {\n        html! {\n            // WELCOME\n            let welcome_button = if let Tab::Welcome = self.active_tab {\n                html! {\n                    &lt;WelcomeButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Welcome)) title=\"Welcome\" class=\"active\" /&gt;\n                    // INSERT SECTION HERE\n                }\n            } else {\n                html! {\n                    &lt;WelcomeButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Welcome)) title=\"Welcome\" class=\"not-active\" /&gt;\n                }\n            };\n            // HOME\n            let home_button = if let Tab::Home = self.active_tab {\n                html! {\n                    &lt;HomeButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Home)) title=\"Home\" class=\"active\" /&gt;\n                }\n            } else {\n                html! {\n                    &lt;HomeButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Home)) title=\"Home\" class=\"not-active\" /&gt;\n                }\n            };\n            // COMMING SOON\n            let comming_soon_button = if let Tab::CommingSoon = self.active_tab {\n                html! {\n                    &lt;CommingSoon onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::CommingSoon)) title=\"Comming Soon\" class=\"active\" /&gt;\n                }\n            } else {\n                html! {\n                    &lt;CommingSoon onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::CommingSoon)) title=\"Comming Soon\" class=\"not-active\" /&gt;\n                }\n            };\n            // DEBUG\n            let debug_button = if let Tab::Debug = self.active_tab {\n                html! {\n                    &lt;DebugButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Debug)) title=\"Debug\" class=\"active\" /&gt;\n                }\n            } else {\n                html! {\n                    &lt;DebugButton onsignal=self.link.callback(|_| Msg::ChangeTab(Tab::Debug)) title=\"Debug\" class=\"not-active\" /&gt;\n                }\n            };\n\n            html! {\n            &lt;&gt;\n                {welcome_button}\n                {home_button}\n                {comming_soon_button}\n                {debug_button}\n            &lt;/&gt;\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 4602323, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/019fd245686fb0c4b85042d8688fcf6f?s=128&d=identicon&r=PG", "display_name": "Robust Systems 8472-1488", "link": "https://stackoverflow.com/users/4602323/robust-systems-8472-1488"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 518, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1591786112, "creation_date": 1567749726, "last_edit_date": 1567760423, "question_id": 57816515, "link": "https://stackoverflow.com/questions/57816515/how-to-implement-a-stateful-app-navigation-using-rust-and-the-yew-crate", "title": "How to implement a Stateful App Navigation using Rust and the Yew Crate?", "body": "<p>I'm trying to build an app with navigation tabs and trying to use the best way to give state to the entire app. Currently the tabs are functional, but I am struggling to implement a way to both map and restore tab navigation via state in rust using the Yew frontent single page app framework. How do I link these tabs  and their respective context sections to state? </p>\n\n<p><a href=\"https://github.com/robust-systems/Rust_MVC\" rel=\"nofollow noreferrer\">Source files on github:</a></p>\n\n<p>My goal is to:  </p>\n\n<p><strong>Implement stateful tab navigation using Rust and the Yew crate.</strong></p>\n\n<p>I've setup a toggle_tab function which uses the STDweb library to iterate over the existing HTML via class of <code>tabcontent</code>, <code>set attribute (\"style\", \"display: none;\")</code> . Then I match based on a unique class name (input via function and called from an <code>onclick</code> from exiting HTML) . </p>\n\n<p>From the <a href=\"https://github.com/yewstack/yew/blob/master/examples/todomvc/src/lib.rs\" rel=\"nofollow noreferrer\">Yew Examples on Github</a>, I know I may need to implement <a href=\"https://docs.rs/yew/0.8.0/yew/services/storage/struct.StorageService.html\" rel=\"nofollow noreferrer\">storage</a> into state and state into Model. What is a good way to implement app navigation with Yew &amp; Rust? </p>\n\n<p>HTML and Toggle Function:</p>\n\n<pre><code>impl Renderable&lt;Model&gt; for Model {\n    fn view(&amp;self) -&gt; Html&lt;Self&gt; {\n        html! {\n    &lt;&gt;\n        &lt;nav class=\"tab grey lighten-2\"&gt;\n            &lt;div class=\"nav-wrapper\"&gt;\n                // BUTTONS\n                &lt;ul class=\"row\"&gt;\n                    &lt;div class=\"col s1\" &gt;\n                    &lt;button class=\"tablinks brand-logo welcome \" onclick=|e| toggle_tab(e, \".welcome\")&gt;{\"Welcome\"}&lt;/button&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"col s1 push-s1\" &gt;\n                    &lt;button class=\"tablinks brand-logo home active\" onclick=|e| toggle_tab(e, \".home\")&gt;{\"Home\"}&lt;/button&gt;\n                    &lt;/div&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/nav&gt;\n        //SNIPPETS\n        &lt;div class=\"tabcontent white welcome content\" &gt;\n                &lt;Welcome/&gt;\n        &lt;/div&gt;\n        &lt;div class=\"tabcontent white home content\" style=\"display: block;\"&gt;\n//        &lt;HomeTabs/&gt;\n        &lt;/div&gt;\n    &lt;/&gt;\n                        }\n    }\n}\n\n\nfn toggle_tab(event: ClickEvent, tab_unique_class_name: &amp;str) {\n    use crate::stdweb::web::{IElement, IParentNode, INonElementParentNode};\n\n    // Get all elements with class=\"tabcontent\" and hide them\n    for tab in document().query_selector_all(\".tabcontent\").unwrap() {\n        let tab: Element = tab.try_into().unwrap();\n        tab.set_attribute(\"style\", \"display: none;\").unwrap();\n    }\n\n    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n    for tab in document().query_selector_all(\".tablinks\").unwrap() {\n        let tab: Element = tab.try_into().unwrap();\n        tab.class_list().remove(\"active\");\n    }\n\n    let matching_tabs = document().query_selector_all(tab_unique_class_name).unwrap();\n\n    match tab_unique_class_name {\n        \".welcome\" =&gt; {\n            for elem in matching_tabs.iter() {\n                let elem: Element = elem.try_into().unwrap();\n                elem.class_list().add(\"active\");\n                elem.set_attribute(\"style\", \"display: block\");\n            }\n        }\n        \".home\" =&gt; {\n            for elem in matching_tabs.iter() {\n                let elem: Element = elem.try_into().unwrap();\n                elem.class_list().add(\"active\");\n                elem.set_attribute(\"style\", \"display: block\");\n                document().get_element_by_id(\"dashboard\").unwrap().set_attribute(\"style\", \"display: block;\");\n            }\n        }\n        \".campaign\" =&gt; {\n            for elem in matching_tabs.iter() {\n                let elem: Element = elem.try_into().unwrap();\n                elem.class_list().add(\"active\");\n                elem.set_attribute(\"style\", \"display: block\");\n            }\n        }\n        \".comming_soon\" =&gt; {\n            for elem in matching_tabs.iter() {\n                let elem: Element = elem.try_into().unwrap();\n                elem.class_list().add(\"active\");\n                elem.set_attribute(\"style\", \"display: block\");\n            }\n        }\n        _ =&gt; alert(\"Catchall WHoahw!\"),\n    }\n}\n</code></pre>\n\n<h1>Source code</h1>\n\n<p>If seeing more code helps, I uploaded the current source code here <a href=\"https://github.com/robust-systems/Rust_MVC/blob/master/src/components/tabs_level_1.rs\" rel=\"nofollow noreferrer\">https://github.com/robust-systems/Rust_MVC/blob/master/src/components/tabs_level_1.rs</a></p>\n\n<p>This is quite important and any guidance from you is very much appreciated.</p>\n\n<p><a href=\"https://i.stack.imgur.com/XZpZY.png\" rel=\"nofollow noreferrer\">app appearance</a></p>\n\n<p><a href=\"https://i.stack.imgur.com/LmzKA.png\" rel=\"nofollow noreferrer\">toggle tab function</a></p>\n\n<p><a href=\"https://i.stack.imgur.com/kNknw.png\" rel=\"nofollow noreferrer\">Html code</a></p>\n\n<p><a href=\"https://i.stack.imgur.com/gD4U4.png\" rel=\"nofollow noreferrer\">Model, State, Msg, Filter</a></p>\n\n<p>I realize that this is quite an abstract &amp; verbose question so If any progress is made I will update it here. </p>\n"}, {"tags": ["struct", "rust", "initialization", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1567754323, "post_id": 57815212, "comment_id": 102065477, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\">Why can I return a reference to a local literal but not a variable?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1567763077, "post_id": 57815378, "comment_id": 102069415, "body": "Worth mentioning: the term for this behavior is &quot;static promotion&quot; <a href=\"https://github.com/rust-lang/rust/issues/38865\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/38865</a>"}], "tags": [], "owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "is_accepted": true, "score": 7, "last_activity_date": 1567740906, "creation_date": 1567740906, "answer_id": 57815378, "question_id": 57815212, "link": "https://stackoverflow.com/questions/57815212/why-returning-a-reference-owned-by-the-current-function-is-allowed-in-rust/57815378#57815378", "title": "Why returning a reference owned by the current function is allowed in Rust?", "body": "<p>In the line <code>let cheapest_book = &amp;Book {price: 0};</code>, the <code>Book</code> is <em>not</em> a \"new\" instance of the <code>Book</code> type. Every time this function is called it will return a reference to the <em>same</em> instance of the <code>Book</code> type, which will be stored in the read-only data section of the executable (or, technically, the data section if it contains a <code>Cell</code> or <code>AtomicUsize</code> or the like).</p>\n\n<p>We can in this instance \"expand\" the code into something a little more explicit:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static GLOBAL_BOOK: Book = Book { price: 0 };\n\nfn choose_cheaper&lt;'a&gt;(b1: &amp;'a Book) -&gt; &amp;'a Book {\n    if b1.price &lt; 15 {\n        b1\n    } else {\n        let cheapest_book = &amp;GLOBAL_BOOK;\n        cheapest_book\n    }\n}\n</code></pre>\n\n<p>Note that the reference to <code>GLOBAL_BOOK</code> could actually be a <code>&amp;'static Book</code>, but <code>&amp;'a Book</code> is a supertype of that so it's okay to return the static reference as if it were an <code>'a</code> reference.</p>\n\n<p>If this seems weird, consider that this is exactly what happens with string literals; they just don't have the explicit <code>&amp;</code> character: After <code>let foo = \"string!\";</code>, <code>foo</code> is a <code>&amp;'static str</code> referencing some data in the read-only section of the executable, not a local object. So you can also write <code>return \"string!\";</code> in functions returning <code>&amp;'a str</code> for any <code>'a</code>.</p>\n\n<p>The rule for whether rust will make this transformation is whenever you \"construct\" an object (using tuple syntax, or struct or enum or union initialization syntax, or numeric or string literals, or any combinations thereof - <strong>not</strong> function calls to <code>new()</code> or any other function) behind a <code>&amp;</code>, they'll become an anonymous static. So in fact <code>&amp;&amp;1_u32</code> is a <code>'static</code> reference to a static <code>'static</code> reference to a static <code>u32</code>.</p>\n"}], "owner": {"reputation": 7225, "user_id": 84540, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8425457b7317576680146aa8149be472?s=128&d=identicon&r=PG", "display_name": "nybon", "link": "https://stackoverflow.com/users/84540/nybon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 705, "favorite_count": 0, "accepted_answer_id": 57815378, "answer_count": 1, "score": 3, "last_activity_date": 1568002189, "creation_date": 1567739397, "last_edit_date": 1568002189, "question_id": 57815212, "link": "https://stackoverflow.com/questions/57815212/why-returning-a-reference-owned-by-the-current-function-is-allowed-in-rust", "title": "Why returning a reference owned by the current function is allowed in Rust?", "body": "<p>I am learning Rust's lifetime/ownership concepts, and would like to explain the following behavior in Rust (rustc 1.37.0).</p>\n\n<p>For a program like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Book {\n    price: i32,\n}\n\nfn main() {\n    let book1 = Book {price: 12};\n    let cheaper_book = choose_cheaper(&amp;book1);\n    println!(\"{:?}\", cheaper_book);\n}\n\nfn choose_cheaper(b1: &amp;Book) -&gt; &amp;Book {\n    if b1.price &lt; 15 {\n        b1\n    } else {\n        let cheapest_book = Book {price: 0};\n        &amp;cheapest_book\n    }\n}\n</code></pre>\n\n<p>Rust reports:</p>\n\n<pre><code>17 |   &amp;cheapest_book\n   |   ^^^^^^^^^^^^^^ returns a reference to data owned by the current function\n</code></pre>\n\n<p>And I can understand this error and it is because variable <code>cheapest_book</code> is the owner of the Book with price 0, and it will be dropped at the end of this function, so the returned reference will become invalid after that. But it is hard for me to explain why the following is allowed if I change the <code>choose_cheaper</code> function to be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn choose_cheaper(b1: &amp;Book) -&gt; &amp;Book {\n    if b1.price &lt; 15 {\n        b1\n    } else {\n        let cheapest_book = &amp;Book {price: 0};\n        cheapest_book\n    }\n}\n</code></pre>\n\n<p>Could some one shed me some light on it? Thanks.</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1567725781, "post_id": 57813951, "comment_id": 102059140, "body": "Is it actually an array or is it a <code>Vec</code>?"}, {"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 1, "creation_date": 1567725830, "post_id": 57813951, "comment_id": 102059152, "body": "You&#39;re going to need to show some Rust code for context here."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9773683"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1567729256, "post_id": 57813951, "comment_id": 102059766, "body": "@jhpratt It is, as mentioned in the question, an array."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1567730370, "post_id": 57813951, "comment_id": 102059953, "body": "Yes, but lots of times people will say array when they are actually using a vector. Your clarification with the addition of the actual type is helpful, though."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1567750889, "post_id": 57815298, "comment_id": 102064070, "body": "Note that this is for a 1D vector, but the OP is using a 2D array, so he will need to iterate over the rows of his array and call <code>position_max</code> for each row."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1567755939, "post_id": 57815298, "comment_id": 102066175, "body": "For the one-dimensional case, another option is <code>(0..slice.len()).max_by_key(|i| &amp;slice[i])</code>. (I did not test this, but it should work regardless of whether <code>T: Copy</code>.)"}, {"owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "edited": false, "score": 0, "creation_date": 1567817525, "post_id": 57815298, "comment_id": 102089657, "body": "Yes, that&#39;s probably easier to understand TBH. The issue with <code>max_by_key</code> for <code>T: !Copy</code> is that it (implicitly) requires the return type to be <code>Ord + &#39;static</code>; I&#39;m not sure if that&#39;s actually necessary for the algorithm or maybe an oversight."}], "tags": [], "owner": {"reputation": 348, "user_id": 3561221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e94b4ecf7d3e654e2aa017a7e8e21ec7?s=128&d=identicon&r=PG&f=1", "display_name": "David A", "link": "https://stackoverflow.com/users/3561221/david-a"}, "is_accepted": false, "score": 4, "last_activity_date": 1567740121, "creation_date": 1567740121, "answer_id": 57815298, "question_id": 57813951, "link": "https://stackoverflow.com/questions/57813951/whats-the-fastest-way-of-finding-the-index-of-the-maximum-value-in-an-array/57815298#57815298", "title": "What&#39;s the fastest way of finding the index of the maximum value in an array?", "body": "<p>Consider the easy case of a general <code>Ord</code> type: The answer will differ slightly depending on whether you know the values are <code>Copy</code> or not, but here's the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn position_max_copy&lt;T: Ord + Copy&gt;(slice: &amp;[T]) -&gt; Option&lt;usize&gt; {\n    slice.iter().enumerate().max_by_key(|(_, &amp;value)| value).map(|(idx, _)| idx)\n}\n\nfn position_max&lt;T: Ord&gt;(slice: &amp;[T]) -&gt; Option&lt;usize&gt; {\n    slice.iter().enumerate().max_by(|(_, value0), (_, value1)| value0.cmp(value1)).map(|(idx, _)| idx)\n}\n</code></pre>\n\n<p>The basic idea is that we pair [a reference to] each item in the array (really, a slice - it doesn't matter if it's a Vec or an array or something more exotic) with its index, use <code>std::iter::Iterator</code> functions to find the maximum value according to the value only (not the index), then return just the index. If the slice is empty <code>None</code> will be returned. Per the documentation, the rightmost index will be returned; if you need the leftmost, do <code>rev()</code> <em>after</em> <code>enumerate()</code>.</p>\n\n<p><code>rev()</code>, <code>enumerate()</code>, <code>max_by_key()</code>, and <code>max_by()</code> are documented <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\">here</a>; <code>slice::iter()</code> is documented <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter\" rel=\"nofollow noreferrer\">here</a> (but that one needs to be on your shortlist of things to recall without documentation as a rust dev); <code>map</code> is <code>Option::map()</code> documented <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map\" rel=\"nofollow noreferrer\">here</a> (ditto). Oh, and <code>cmp</code> is <code>Ord::cmp</code> but most of the time you can use the <code>Copy</code> version which doesn't need it (e.g. if you're comparing integers).</p>\n\n<hr>\n\n<p>Now here's the catch: <code>f32</code> isn't <code>Ord</code> because of the way IEEE floats work. Most languages ignore this and have subtly wrong algorithms. The most popular crate to provide a total order on <code>Ord</code> (by declaring all NaN to be equal, and greater than all numbers) seems to be <a href=\"https://docs.rs/ordered-float/1.0.2/ordered_float/struct.OrderedFloat.html\" rel=\"nofollow noreferrer\">ordered-float</a>. Assuming it's implemented correctly it should be very very lightweight. It does pull in <code>num_traits</code> but this is part of the most popular numerics library so might well be pulled in by other dependencies already.</p>\n\n<p>You'd use it in this case by mapping <code>ordered_float::OrderedFloat</code> (the \"constructor\" of the tuple type) over the slice iter (<code>slice.iter().map(ordered_float::OrderedFloat)</code>). Since you only want the position of the maximum element, no need to extract the f32 afterward.</p>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user9773683"}, "is_accepted": true, "score": 1, "last_activity_date": 1568666447, "last_edit_date": 1568666447, "creation_date": 1568664313, "answer_id": 57963733, "question_id": 57813951, "link": "https://stackoverflow.com/questions/57813951/whats-the-fastest-way-of-finding-the-index-of-the-maximum-value-in-an-array/57963733#57963733", "title": "What&#39;s the fastest way of finding the index of the maximum value in an array?", "body": "<p>The <a href=\"https://stackoverflow.com/a/57815298/155423\">approach from @David A</a> is cool, but as mentioned, there's a catch: <code>f32</code> &amp; <code>f64</code> do not implement <code>Ord::cmp</code>. (Which is really a pain in your-know-where.)</p>\n\n<p>There are multiple ways of solving that: You can implement <code>cmp</code> yourself, or you can use <code>ordered-float</code>, etc..</p>\n\n<p>In my case, this is a part of a bigger project and we are very careful about using external packages. Besides, I am pretty sure we don't have any <code>NaN</code> values. Therefore I would prefer using <code>fold</code>, which, if you take a close look at the <code>max_by_key</code> source code, is what they have been using too.</p>\n\n<pre><code>for (i, row) in matrix.axis_iter(Axis(1)).enumerate() {\n    let (max_idx, max_val) =\n        row.iter()\n            .enumerate()\n            .fold((0, row[0]), |(idx_max, val_max), (idx, val)| {\n                if &amp;val_max &gt; val {\n                    (idx_max, val_max)\n                } else {\n                    (idx, *val)\n                }\n            });\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9773683"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1657, "favorite_count": 0, "accepted_answer_id": 57963733, "answer_count": 2, "score": 4, "last_activity_date": 1568666447, "creation_date": 1567725106, "last_edit_date": 1568666325, "question_id": 57813951, "link": "https://stackoverflow.com/questions/57813951/whats-the-fastest-way-of-finding-the-index-of-the-maximum-value-in-an-array", "title": "What&#39;s the fastest way of finding the index of the maximum value in an array?", "body": "<p>I have a 2D array of type <code>f32</code> (from <code>ndarray::ArrayView2</code>) and I want to find the index of the maximum value in each row, and put the index value into another array.</p>\n\n<p>The equivalent in Python is something like:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import numpy as np\n\nfor i in range (0, max_val, batch_size):\n   sims = xp.dot(batch, vectors.T) \n   # sims is the dot product of batch and vectors.T\n   # the shape is, for example, (1024, 10000)\n\n   best_rows[i: i+batch_size] = sims.argmax(axis = 1)\n</code></pre>\n\n<p>In Python, the function <code>.argmax</code> is very fast, but I don't see any function like that in Rust. What's the fastest way of doing so?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567719723, "post_id": 57813239, "comment_id": 102057866, "body": "Small correction; if you reverse the order of operations you don&#39;t even need the explicit cast!"}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "edited": false, "score": 0, "creation_date": 1567721927, "post_id": 57813239, "comment_id": 102058365, "body": "Looks good.  Thanks!  For anyone else looking at this, Sebastien is referring to the order of operations for things like <code>4.0*a*c</code>.  When written as <code>a*c*4.0.into()</code>, type inference allows Rust to determine the correct type for <code>4.0</code>&#39;s conversion.  This is not true for <code>4.0.into()*a*c</code>, which gives the compiler error, &quot;cannot infer type for T.&quot;"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1567720392, "last_edit_date": 1567720392, "creation_date": 1567719262, "answer_id": 57813239, "question_id": 57813022, "link": "https://stackoverflow.com/questions/57813022/how-to-minimize-the-amount-of-boilerplate-when-using-the-numfloat-trait-and/57813239#57813239", "title": "How to minimize the amount of boilerplate when using the `num::Float` trait and interacting with primitive types in Rust", "body": "<p>The reason you are hitting this roadblock is because you are expecting <code>num::Float</code> to be an implemented trait. <strong>It isn't</strong>. Its purpose is as an <a href=\"http://xion.io/post/code/rust-extension-traits.html\" rel=\"nofollow noreferrer\">extension trait</a>.</p>\n\n<p>It is implemented for both <code>f32</code> and <code>f64</code> and allows you to use all the methods it implements on those types without implementing them in the type itself.</p>\n\n<p>That, however, doesn't mean that you can magically add a <code>T: Float</code> bound and be out of the woods, however, as your operations require multiplication and subtraction. As such, your constants (as you found out by yourself) need to implement <code>Sub&lt;X&gt;</code> and <code>Mul&lt;X&gt;</code>, where <code>X</code> is the type you have chosen for your constants.</p>\n\n<p>There is, however, a trick. If you know the type of your constants... you can require <code>From&lt;X&gt;</code> (where X is the type of your constants). This means you can, at the cost of requiring a <em>lower bound</em> on the size of the floats, easily fix this mess.</p>\n\n<p>This lower bound requirement isn't a problem in your case as you are dependent on the <code>powi</code> method declared on <code>num::Float</code>, and this trait is only implemented for two primitive types: <code>f32</code> and <code>f64</code>. If you ever wanted to use, say, <code>half::f16</code>, you'd need to get rid of the call to <code>powi</code>. As such, requiring <code>f32</code> as a lower bound is perfectly acceptable.</p>\n\n<pre><code>fn myquad&lt;T:Float + From&lt;f32&gt;&gt;(a : T, b: T, c: T) -&gt; Option&lt;(T, T)&gt;\n{\n    let mysqrt = (b.powi(2) - a * c * (4.0.into())).sqrt();\n    let r1 = (-b+mysqrt)/(a * 2.0.into());\n    let r2 = (-b-mysqrt)/(a * 2.0.into());\n    Some((r1,r2))\n}\n</code></pre>\n\n<p>I think that's about as far down as you can go in terms of boilerplate.</p>\n"}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 1, "accepted_answer_id": 57813239, "answer_count": 1, "score": 0, "last_activity_date": 1567720392, "creation_date": 1567717833, "question_id": 57813022, "link": "https://stackoverflow.com/questions/57813022/how-to-minimize-the-amount-of-boilerplate-when-using-the-numfloat-trait-and", "title": "How to minimize the amount of boilerplate when using the `num::Float` trait and interacting with primitive types in Rust", "body": "<p>Is there a good methodology for minimizing the amount of boilerplate when using the <code>num::Float</code> trait and interacting with primitive types in Rust?  As an example, consider a poorly written quadratic equation solver</p>\n\n<pre><code>// External libraries\nuse num::Float;\n\n// Poorly written quadratic formula solver for a x^2 + bx + c\nfn myquad &lt;Real&gt; (a : Real, b : Real, c : Real) -&gt; Option&lt;(Real,Real)&gt;\nwhere\n    Real : Float\n{\n    let mysqrt = Real::sqrt(b.powi(2)-Real::from(4.0)?*a*c);\n    let r1 = (-b+mysqrt)/(Real::from(2.0)?*a);\n    let r2 = (-b-mysqrt)/(Real::from(2.0)?*a);\n    Some((r1,r2))\n}\n\n// Write a couple of tests\nfn main() {\n    let r1 = myquad::&lt;f32&gt; (1.0,1.0,-6.0).unwrap();\n    println!(\"Roots of (x-2) (x+3):  ({},{})\",r1.0,r1.1);\n    let r2 = myquad::&lt;f64&gt; (6.0,5.0,-4.0).unwrap();\n    println!(\"Roots of (2x-1) (3x+4):  ({},{})\",r2.0,r2.1);\n}\n</code></pre>\n\n<p>I would like the <code>myquad</code> routine to work for a variety of floating point types beyond <code>f32</code> and <code>f64</code>, but also work for them as well.  That said, there's a repeated set of wrappers of the form <code>Real::from(x)?</code> where x is a primitive floating point type.  While I understand the need for type consistency, this is somewhat verbose and I have concerns about the manageability of these wrappers for more complicated routines with a lot of primitives.  Is there a better way to handle these conversions or have them work implicitly?  To be sure, the answer may be no, but I'd like to understand this cost before working on more complicated routines.</p>\n"}, {"tags": ["rust", "rust-cargo", "lld"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1567751440, "post_id": 57812916, "comment_id": 102064266, "body": "What happens if you put <code>clang</code> as the linker?"}], "answers": [{"tags": [], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "is_accepted": true, "score": 13, "last_activity_date": 1588336934, "last_edit_date": 1588336934, "creation_date": 1567756295, "answer_id": 57817848, "question_id": 57812916, "link": "https://stackoverflow.com/questions/57812916/how-do-i-change-the-default-rustc-cargo-linker/57817848#57817848", "title": "How do I change the default rustc / Cargo linker?", "body": "<p>Thanks to @Jmb comment, I found a solution. Turns out that the default linker that <code>rustc</code> uses is actually <code>cc</code> (which makes sense - it supplies all the needed defaults to compile/link C code, which also work for Rust). We can pass an argument to <code>cc</code> to make it link with <code>lld</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[target.x86_64-unknown-linux-gnu]\nrustflags = [\n    \"-C\", \"link-arg=-fuse-ld=lld\",\n]\n</code></pre>\n\n<p>Now <code>cargo build</code> links with <code>lld</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 5746870, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/342y5.jpg?s=128&g=1", "display_name": "Rin", "link": "https://stackoverflow.com/users/5746870/rin"}, "is_accepted": false, "score": 1, "last_activity_date": 1615439578, "creation_date": 1615439578, "answer_id": 66576847, "question_id": 57812916, "link": "https://stackoverflow.com/questions/57812916/how-do-i-change-the-default-rustc-cargo-linker/66576847#66576847", "title": "How do I change the default rustc / Cargo linker?", "body": "<p>This also works and is what I think @Jmb actually asked.</p>\n<pre><code>rustflags = [\n  &quot;-C&quot;, &quot;linker=clang-12&quot;,  # change the version as needed\n]\n</code></pre>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5004, "favorite_count": 1, "accepted_answer_id": 57817848, "answer_count": 2, "score": 15, "last_activity_date": 1615439578, "creation_date": 1567717187, "last_edit_date": 1608746224, "question_id": 57812916, "link": "https://stackoverflow.com/questions/57812916/how-do-i-change-the-default-rustc-cargo-linker", "title": "How do I change the default rustc / Cargo linker?", "body": "<p>I would like to make rustc use <code>lld</code> as a linker instead of <code>ld</code> in a particular crate. So I create <code>.cargo/config</code> in my project directory with the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[target.x86_64-unknown-linux-gnu]                                                                   \nlinker = \"ld.lld\"\n</code></pre>\n\n<p>Which leads to linker errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n...\n  = note: ld.lld: error: unable to find library -ldl\n          ld.lld: error: unable to find library -lrt\n          ld.lld: error: unable to find library -lpthread\n          ld.lld: error: unable to find library -lgcc_s\n          ld.lld: error: unable to find library -lc\n          ld.lld: error: unable to find library -lm\n          ld.lld: error: unable to find library -lrt\n          ld.lld: error: unable to find library -lpthread\n          ld.lld: error: unable to find library -lutil\n          ld.lld: error: unable to find library -lutil\n</code></pre>\n\n<p>Same thing with <code>rust-lld</code>. If I set <code>linker = \"ld\"</code> (which should be the default, right?), I just get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  = note: ld: cannot find -lgcc_s\n</code></pre>\n\n<p>I tried to resolve all the missing libraries manually (with <code>-C link-arg=--library-path=/usr/lib/x86_64-linux-gnu</code> and the like), but it only lead to wrong linkage and a segfaulting binary.</p>\n\n<p>Interestingly enough, if I replace <code>/usr/bin/ld</code> with a symlink to <code>/usr/bin/ld.lld</code>, it works great (no errors, and from the compiled binary I see that it was indeed linked with <code>lld</code>). However, I don't want to make <code>lld</code> my system-wide linker, I just want to use it in a particular Rust crate.</p>\n\n<p>So what is the proper way to change the default rustc linker?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1567718219, "post_id": 57812234, "comment_id": 102057467, "body": "<code>Sized</code> is a default bound for generics; you don&#39;t need to write it explicitly."}], "answers": [{"comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1567717136, "post_id": 57812388, "comment_id": 102057131, "body": "Is there more info available on what it means for a type to have a lifetime? Or what it means for a type to be ephemeral? I assumed <code>+&#39;static</code> meant that any references that an instance of <code>T</code> might contain have to be valid for the lifetime of the program."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1567717292, "post_id": 57812388, "comment_id": 102057188, "body": "I can certainly find you a ton of <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0599-default-object-bound.md\" rel=\"nofollow noreferrer\">issues</a> where this caused problems. Let&#39;s see if I can find you the doc for where it is actually fully described."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1567717565, "post_id": 57812388, "comment_id": 102057257, "body": "<a href=\"https://doc.rust-lang.org/stable/rust-by-example/scope/lifetime/lifetime_bounds.html\" rel=\"nofollow noreferrer\">Found it</a>. The exact condition imposed by <code>&#39;static</code> in this case is that all references inside type T must outlive <code>&#39;static</code> (which makes sense, as it&#39;ll cross thread boundaries)"}, {"owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "edited": false, "score": 0, "creation_date": 1567754288, "post_id": 57812388, "comment_id": 102065463, "body": "so does a i32 have a &#39;static lifetime to?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567754310, "post_id": 57812388, "comment_id": 102065468, "body": "An <code>i32</code> contains no reference."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567754335, "post_id": 57812388, "comment_id": 102065485, "body": "That&#39;s the important thing, the <code>&#39;static</code> lifetime on a trait means that everything in the trait <b>needs to live as long as that</b>."}, {"owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "edited": false, "score": 0, "creation_date": 1567755431, "post_id": 57812388, "comment_id": 102065950, "body": "so does a i32 type has the &#39;static lifetime to? I mean the i32 that is stored inside thisworks fn. Thank you for the clarification <b>&quot;This does not mean that the object itself must have a &#39;static lifetime, just the type.&quot;</b> ... which implies, that Types can be created at runtime (there are types, which have not a &#39;static lifetime, e.g. closures)?"}, {"owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "edited": false, "score": 0, "creation_date": 1567755667, "post_id": 57812388, "comment_id": 102066058, "body": "you said <b>An i32 contains no reference</b>. can i define a genric type T that has the same trait as i32 in this case and is guaranteed to contain no reference by trait bounds?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567755907, "post_id": 57812388, "comment_id": 102066159, "body": "I knew I was going to get in trouble for mentioning this one day ;-) the short answer is I don&#39;t think you can. I certainly don&#39;t think I&#39;ve ever felt the need to."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567756040, "post_id": 57812388, "comment_id": 102066204, "body": "Regarding the <i>no inner reference lasting less than</i> rule, all primitive types are <code>&#39;static</code>. All fully-owned types are <code>&#39;static</code>. Anything with a reference in it can be <code>&#39;static</code> if the reference is also <code>&#39;static</code> (which practically never happens). It&#39;s the same rules as lifetimes, just applied generally to anything in the trait."}, {"owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "edited": false, "score": 0, "creation_date": 1567759571, "post_id": 57812388, "comment_id": 102067716, "body": "If I can only send data with the type T: Send+&#39;static over channels, why isn&#39;t any type that implements Send automatically &#39;static too?"}, {"owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "edited": false, "score": 0, "creation_date": 1567759742, "post_id": 57812388, "comment_id": 102067794, "body": "<a href=\"https://doc.rust-lang.org/nomicon/send-and-sync.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nomicon/send-and-sync.html</a> ... only because unsafe impl of Send is possible too, right?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1567760516, "post_id": 57812388, "comment_id": 102068126, "body": "The requirement for <code>&#39;static</code> in your case isn&#39;t due to <code>Send</code>, it is due to <code>thread::spawn</code>. If you had used, say, <a href=\"https://doc.rust-lang.org/1.1.0/std/thread/fn.scoped.html\" rel=\"nofollow noreferrer\"><code>thread::scoped</code></a> the lifetime requirement would&#39;ve different."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 0, "last_activity_date": 1567714196, "creation_date": 1567714196, "answer_id": 57812388, "question_id": 57812234, "link": "https://stackoverflow.com/questions/57812234/rustlang-sending-generic-data-with-channel-which-traits-markers-have-to-be-imp/57812388#57812388", "title": "Rustlang sending generic data with channel? Which traits/ markers have to be implemented to do that?", "body": "<p>It's not about the type, it's about the lifetime of the type.</p>\n\n<p>The compiler error was spot-on. The only change you require is this line:</p>\n\n<pre><code>fn error&lt;T: Send+Sized+'static&gt;(mut data: Vec&lt;T&gt;)-&gt;Receiver&lt;T&gt;{\n</code></pre>\n\n<p>This addition of <code>'static</code> is an additional requirement that the type must not be ephemeral; i.e. it must be defined for the lifetime of the program. This does not mean that the object <strong>itself</strong> must have a <code>'static</code> lifetime, just the type.</p>\n"}], "owner": {"reputation": 3, "user_id": 12023945, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-rNsk6rfa27c/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3retQcMb9xBfy-e5geiM8dwppG3BCQ/photo.jpg?sz=128", "display_name": "snake_case_name", "link": "https://stackoverflow.com/users/12023945/snake-case-name"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "accepted_answer_id": 57812388, "answer_count": 1, "score": 0, "last_activity_date": 1567714196, "creation_date": 1567713383, "question_id": 57812234, "link": "https://stackoverflow.com/questions/57812234/rustlang-sending-generic-data-with-channel-which-traits-markers-have-to-be-imp", "title": "Rustlang sending generic data with channel? Which traits/ markers have to be implemented to do that?", "body": "<p>Which traits and markers have to be implemented on a generic type T so that it could be send over channels? The Type T shall not contain any references and own all its contents its 'pure' from any reference (so it is guaranteed to be owned by its scope only). The same is true for all of T's nested fields. So that no lifetime specifier would be required, to transfer ownership. Which traits does i32 implement, that my genric type T does not implement to prevent the error fn from compiling?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn error&lt;T: Send+Sized&gt;(mut data: Vec&lt;T&gt;)-&gt;Receiver&lt;T&gt;{\n    let (s, r) = channel();\n    std::thread::spawn(move ||{\n        while let Some(nextthing) = data.pop(){\n            s.send(nextthing);\n        }\n    });\n    r\n}\n</code></pre>\n\n<p>as opposed to </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn thisworks(mut data: Vec&lt;i32&gt;)-&gt;Receiver&lt;i32&gt;{\n    let (s, r) = channel();\n    std::thread::spawn(move ||{\n        while let Some(nextthing) = data.pop(){\n            s.send(nextthing);\n        }\n    });\n    r    \n}\n</code></pre>\n\n<p>Error: i just want it to  work like for i32: The ownership is just cleanly transferred without questions for lifetimes (maybe has something to do with the Primitive type and i32's copy trait?)</p>\n\n<pre><code>rror[E0310]: the parameter type `T` may not live long enough\n --&gt; src/main.rs:7:5\n  |\n5 | fn error&lt;T: Send+Sized&gt;(mut data: Vec&lt;T&gt;)-&gt;Receiver&lt;T&gt;{\n  |          -- help: consider adding an explicit lifetime bound `T: 'static`...\n6 |     let (s, r) = channel();\n7 |     std::thread::spawn(move ||{\n  |     ^^^^^^^^^^^^^^^^^^\n  |\nnote: ...so that the type `[closure@src/main.rs:7:24: 11:6 data:std::vec::Vec&lt;T&gt;, s:std::sync::mpsc::Sender&lt;T&gt;]` will meet its required lifetime bounds\n --&gt; src/main.rs:7:5\n  |\n7 |     std::thread::spawn(move ||{\n  |     ^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0310`.\nerror: Could not compile `playground`.\n</code></pre>\n\n<p>The playground link is <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=117113384490f15bb33ff8f749661769\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=117113384490f15bb33ff8f749661769</a></p>\n"}, {"tags": ["rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 0, "creation_date": 1567888365, "post_id": 57812661, "comment_id": 102102786, "body": "Thanks! Not answering my question as you say, but definitely the correct way to do it :)"}], "tags": [], "owner": {"reputation": 1970, "user_id": 15526, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WqTIm.png?s=128&g=1", "display_name": "Steve", "link": "https://stackoverflow.com/users/15526/steve"}, "is_accepted": false, "score": 1, "last_activity_date": 1567715736, "creation_date": 1567715736, "answer_id": 57812661, "question_id": 57812043, "link": "https://stackoverflow.com/questions/57812043/how-to-use-nom-take-while-and-is-digit-for-a-str-input/57812661#57812661", "title": "How to use nom take_while and is_digit for a &amp;str input", "body": "<p>I know it doesn't directly answer your question because it doesn't directly use <code>take_while</code> but you could use the <code>digit1</code> parser in <code>character::complete::digit1</code>.</p>\n\n<p>It takes an <code>&amp;str</code> and consumes 1 or more digits in [0..9] and returns an <code>&amp;str</code></p>\n"}, {"comments": [{"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 1, "creation_date": 1567888309, "post_id": 57812665, "comment_id": 102102777, "body": "That looks like a nifty technique. Does it have any perfomance implications?"}, {"owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "reply_to_user": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 1, "creation_date": 1567888576, "post_id": 57812665, "comment_id": 102102825, "body": "Not particularly, as long as you inline it. If you want it to be faster, you can directly compare using <code>char.is_digit</code>, which should be slightly faster (or <code>is_dec_digit</code>, since it means fewer comparisons. In fact, this pretty much how nom does it (using is_dec_digit): <a href=\"https://docs.rs/nom/4.0.0/src/nom/nom.rs.html#216\" rel=\"nofollow noreferrer\">docs.rs/nom/4.0.0/src/nom/nom.rs.html#216</a>"}], "tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": true, "score": 1, "last_activity_date": 1567715757, "creation_date": 1567715757, "answer_id": 57812665, "question_id": 57812043, "link": "https://stackoverflow.com/questions/57812043/how-to-use-nom-take-while-and-is-digit-for-a-str-input/57812665#57812665", "title": "How to use nom take_while and is_digit for a &amp;str input", "body": "<p>You can easily adapt <code>is_digit</code> to a <code>char</code>. First, all digits are valid ASCII, so we should check first if the character is ASCII. If it's ASCII, we can safely convert to <code>u8</code>.</p>\n\n<pre><code>// pub fn is_digit(chr: u8) -&gt; bool;\n\npub fn is_char_digit(chr: char) -&gt; bool {\n    return chr.is_ascii() &amp;&amp; is_digit(chr as u8)\n}\n</code></pre>\n\n<p>You could also use the trait method <a href=\"https://docs.rs/nom/4.0.0/nom/trait.AsChar.html#tymethod.is_dec_digit\" rel=\"nofollow noreferrer\">is_dec_digit</a>, which is just a wrapper for <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_digit\" rel=\"nofollow noreferrer\">char.is_digit</a>.</p>\n"}], "owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 609, "favorite_count": 0, "accepted_answer_id": 57812665, "answer_count": 2, "score": 2, "last_activity_date": 1567715757, "creation_date": 1567712490, "question_id": 57812043, "link": "https://stackoverflow.com/questions/57812043/how-to-use-nom-take-while-and-is-digit-for-a-str-input", "title": "How to use nom take_while and is_digit for a &amp;str input", "body": "<p>I'm trying to learn nom and have a problem where <code>take_while</code> does not accept <code>is_digit</code> or any other <code>is_xxxx</code>.</p>\n\n<p>I have rows that I want to parse that looks like this</p>\n\n<pre><code>#123 = ABCDEF (...);\n</code></pre>\n\n<p>where I want to get the '123' part (and eventually the ABCDEF and the (...) parts as well. But one thing at the time I guess).</p>\n\n<p>My parser currently looks like this</p>\n\n<pre><code>use nom::{\n  bytes::complete::take_while,\n  character::is_digit,\n  error::ParseError,\n  IResult\n};\n\n// Get row id\nfn id&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, E&gt; {\n    take_while(is_digit)(i)\n}\n</code></pre>\n\n<p>The <code>is_digit</code> definition looks like this</p>\n\n<pre><code>pub fn is_digit(chr: u8) -&gt; bool\n</code></pre>\n\n<p>And since the <code>id</code> parser takes a <code>&amp;str</code> it will complain about the mismatch in types. But is it possible somehow to use the is_digit anyway? Can I do a type conversion somewhere without having to allocate anything. I really want this to be as efficient as possible.</p>\n\n<p>It feels like the provided <code>is_xxxx</code> functions should be used in these kinds of situations, but I might be wrong about it.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["rust", "rusoto"], "answers": [{"comments": [{"owner": {"reputation": 3685, "user_id": 5812238, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/b99072b57c3ba6f1c4049e21767571cb?s=128&d=identicon&r=PG&f=1", "display_name": "diralik", "link": "https://stackoverflow.com/users/5812238/diralik"}, "edited": false, "score": 1, "creation_date": 1569095327, "post_id": 57812269, "comment_id": 102487432, "body": "Thanks! I just have to replace <code>.map(|r| r.as_ref().to_vec())</code> to <code>.map(|r| r.freeze())</code>, because <code>rusoto</code> need <code>impl Stream&lt;Item = Bytes&gt;</code> (not <code>impl Stream&lt;Item = Vec&lt;u8&gt;&gt;</code>) (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6b81ff36d7acaa63b48d87364e1f11fa\" rel=\"nofollow noreferrer\">playground</a>)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 3685, "user_id": 5812238, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/b99072b57c3ba6f1c4049e21767571cb?s=128&d=identicon&r=PG&f=1", "display_name": "diralik", "link": "https://stackoverflow.com/users/5812238/diralik"}, "edited": false, "score": 0, "creation_date": 1569095406, "post_id": 57812269, "comment_id": 102487452, "body": "Glad it helped :-) I wasn&#39;t sure from the doc, so I went with the extra-crate-less possible choice"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 18, "last_activity_date": 1589144691, "last_edit_date": 1589144691, "creation_date": 1567713556, "answer_id": 57812269, "question_id": 57810173, "link": "https://stackoverflow.com/questions/57810173/streamed-upload-to-s3-with-rusoto/57812269#57812269", "title": "Streamed upload to s3 with rusoto", "body": "<p>Okay. Strap yourself in, this is a fun one.</p>\n\n<p><code>StreamingBody</code> is an alias for <a href=\"https://rusoto.github.io/rusoto/rusoto_core/struct.ByteStream.html\" rel=\"noreferrer\"><code>ByteStream</code></a>, which itself takes a parameter type <code>S: Stream&lt;Item = Bytes, Error = Error&gt; + Send + 'static</code>. In short, it needs to be a stream of bytes.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html\" rel=\"noreferrer\"><code>BufReader</code></a>, evidently, does not implement this trait, as it predates futures and streams by a long while. There is also no easy conversion to <code>Stream&lt;Item = Bytes&gt;</code> that you can use to implicitly convert into this.</p>\n\n<p>The reason the first (commented) example works is because <code>String::into_bytes().into()</code> will follow the typecast chain: <code>String</code> -> <code>Vec&lt;u8&gt;</code> -> <code>ByteStream</code> thanks to the implementation of <code>From&lt;Vec&lt;u8&gt;&gt;</code> on <a href=\"https://rusoto.github.io/rusoto/rusoto_core/struct.ByteStream.html\" rel=\"noreferrer\"><code>ByteStream</code></a>.</p>\n\n<p>Now that we know why this doesn't work, we can fix it. There is a fast way, and then there is a right way. I'll show you both.</p>\n\n<h1>The fast way</h1>\n\n<p>The fast (but not optimal) way is simply to call <code>File::read_to_end()</code>. This will fill up a <code>Vec&lt;u8&gt;</code>, which you can then use like you did before:</p>\n\n<pre><code> let mut buf:Vec&lt;u8&gt; = vec![];\n file.read_to_end(&amp;mut buf)?;\n // buf now contains the entire file\n</code></pre>\n\n<p>This is inefficient and suboptimal for two reasons:</p>\n\n<ul>\n<li><code>read_to_end()</code> is a blocking call. Based on where you are reading the file from, this blocking time may prove unreasonable</li>\n<li>You are required to have more free RAM than you have bytes in your file (+ either 64 or 128 bits for the <code>Vec</code> definition + some extra we don't really care about)</li>\n</ul>\n\n<h1>The good way</h1>\n\n<p>The good way turns your file into a structure implementing <a href=\"https://docs.rs/tokio/0.2.20/tokio/prelude/trait.AsyncRead.html\" rel=\"noreferrer\"><code>AsyncRead</code></a>. From this, we can then form a <code>Stream</code>.</p>\n\n<p>Since you already have a <code>std::fs::File</code>, we will first convert it into a <code>tokio::fs::File</code>. This implements <code>AsyncRead</code>, which is very important for later:</p>\n\n<pre><code>let tokio_file = tokio::fs::File::from_std(file);\n</code></pre>\n\n<p>From this, we sadly need to do some pipework to get it into a <code>Stream</code>. Multiple crates have implemented it; the way to do so from scratch is the following:</p>\n\n<pre><code>use tokio_util::codec;\nlet byte_stream = codec::FramedRead::new(tokio_file, codec::BytesCodec::new())\n   .map(|r| r.as_ref().to_vec());\n</code></pre>\n\n<p><code>byte_stream</code> is an instance of <code>tokio_util::codec::FramedRead</code> which <a href=\"https://docs.rs/tokio-util/0.3.1/tokio_util/codec/struct.FramedRead.html#impl-Stream\" rel=\"noreferrer\">implements <code>Stream</code></a> with a specific item based on our decoder. As our decoder is <a href=\"https://docs.rs/tokio-util/0.3.1/tokio_util/codec/struct.BytesCodec.html\" rel=\"noreferrer\"><code>BytesCodec</code></a>, your stream is therefore <code>Stream&lt;Item = BytesMut&gt;</code>.</p>\n\n<p>As the playground doesn't know <code>rusoto_core</code>, I cannot show you the full flow. I can, however, show you that you can generate a <code>Stream&lt;Item = Vec&lt;u8&gt;, Error = io::Error&gt;</code>, which is the crux of this: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38e4ae8be0d70abd134b5331d6bf4133\" rel=\"noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=38e4ae8be0d70abd134b5331d6bf4133</a></p>\n"}, {"tags": [], "owner": {"reputation": 658, "user_id": 457116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/840a3abaf67e9fef8c58225d2e20608a?s=128&d=identicon&r=PG", "display_name": "brainstorm", "link": "https://stackoverflow.com/users/457116/brainstorm"}, "is_accepted": false, "score": 5, "last_activity_date": 1579801797, "last_edit_date": 1579801797, "creation_date": 1579800901, "answer_id": 59884256, "question_id": 57810173, "link": "https://stackoverflow.com/questions/57810173/streamed-upload-to-s3-with-rusoto/59884256#59884256", "title": "Streamed upload to s3 with rusoto", "body": "<p>Here's a version with the upcoming Rusoto async-await syntax (for getObject although should be straightforward to tweak for upload)... possibly out for public consumption in Rusoto 0.4.3:</p>\n\n<p><a href=\"https://github.com/brainstorm/rusoto-s3-async-await\" rel=\"noreferrer\">https://github.com/brainstorm/rusoto-s3-async-await</a></p>\n\n<p>Namely:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub async fn bucket_obj_bytes(client: S3Client, bucket: String, _prefix: String, object: String) {\n    let get_req = GetObjectRequest {\n        bucket,\n        key: object,\n        ..Default::default()\n    };\n\n    let result = client\n        .get_object(get_req)\n        .await\n        .expect(\"Couldn't GET object\");\n    println!(\"get object result: {:#?}\", result);\n\n    let stream = result.body.unwrap();\n    let body = stream.map_ok(|b| BytesMut::from(&amp;b[..])).try_concat().await.unwrap();\n\n    assert!(body.len() &gt; 0);\n    dbg!(body);\n}\n</code></pre>\n\n<p>Which is essentially borrowed from the <a href=\"https://github.com/rusoto/rusoto/blob/6365d2cc9c5c3c98a6ef455275ac50772f49dc19/integration_tests/tests/s3.rs#L887\" rel=\"noreferrer\">integration testsuite itself</a>, where you can find <a href=\"https://github.com/rusoto/rusoto/blob/6365d2cc9c5c3c98a6ef455275ac50772f49dc19/integration_tests/tests/s3.rs#L625\" rel=\"noreferrer\">snippets of the upload version too</a>.</p>\n"}], "owner": {"reputation": 3685, "user_id": 5812238, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/b99072b57c3ba6f1c4049e21767571cb?s=128&d=identicon&r=PG&f=1", "display_name": "diralik", "link": "https://stackoverflow.com/users/5812238/diralik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1749, "favorite_count": 6, "accepted_answer_id": 57812269, "answer_count": 2, "score": 8, "last_activity_date": 1589144691, "creation_date": 1567703503, "question_id": 57810173, "link": "https://stackoverflow.com/questions/57810173/streamed-upload-to-s3-with-rusoto", "title": "Streamed upload to s3 with rusoto", "body": "<p>How can I upload file to s3 using <a href=\"https://github.com/rusoto/rusoto\" rel=\"noreferrer\">rusoto</a>, without reading file content to memory (streamed)?</p>\n\n<hr>\n\n<p>With this code:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::BufReader;\n\nuse rusoto_core::Region;\nuse rusoto_s3::{PutObjectRequest, S3, S3Client, StreamingBody};\n\nfn main() {\n    let file = File::open(\"input.txt\").unwrap();\n    let mut reader = BufReader::new(file);\n\n    let s3_client = S3Client::new(Region::UsEast1);\n    let result = s3_client.put_object(PutObjectRequest {\n        bucket: String::from(\"example_bucket\"),\n        key: \"example_filename\".to_string(),\n//        this works:\n//      body: Some(\"example string\".to_owned().into_bytes().into()),\n//        this doesn't:\n        body: Some(StreamingBody::new(reader)),\n        ..Default::default()\n    }).sync().expect(\"could not upload\");\n}\n</code></pre>\n\n<p>I receive the following error:</p>\n\n<blockquote>\n<pre><code>error[E0277]: the trait bound `std::io::BufReader&lt;std::fs::File&gt;: futures::stream::Stream` is not satisfied\n  --&gt; src/bin/example.rs:18:20\n   |\n18 |         body: Some(StreamingBody::new(reader)),\n   |                    ^^^^^^^^^^^^^^^^^^ the trait `futures::stream::Stream` is not implemented for `std::io::BufReader&lt;std::fs::File&gt;`\n   |\n   = note: required by `rusoto_core::stream::ByteStream::new`\n</code></pre>\n</blockquote>\n"}, {"tags": ["arrays", "rust", "slice"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1567698447, "post_id": 57808948, "comment_id": 102049621, "body": "simple, <code>let a = [1, 2, 3, 4, 5];</code> is not a <code>[T]</code>, it&#39;s an array <code>[T; 5]</code>. you can&#39;t construct a <code>[T]</code>"}, {"owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567698651, "post_id": 57808948, "comment_id": 102049723, "body": "Hey ! Thanks for your comment. I understood the array types (<code>[T, n]</code>). My question is really about the the slice types."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1567698950, "post_id": 57808948, "comment_id": 102049878, "body": "and my comment is about slice - - <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html#other-slices\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch04-03-slices.html#other-slices</a>"}, {"owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567699238, "post_id": 57808948, "comment_id": 102050035, "body": "Thanks, but you just relinked the article I initially provided in my post. AFAIK, <code>[T]</code> is a valid type in Rust, and this is the purpose of my thread: I&#39;m interested to know its difference with <code>&amp;[T]</code>. I edited my question to make it clear that I knew that the value <code>a</code> was effectively an array and not a <code>[T]</code>."}, {"owner": {"reputation": 47633, "user_id": 3889449, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/eb07e0f09deb982a1a0deedca7a5c002?s=128&d=identicon&r=PG", "display_name": "Marco Bonelli", "link": "https://stackoverflow.com/users/3889449/marco-bonelli"}, "edited": false, "score": 0, "creation_date": 1567699469, "post_id": 57808948, "comment_id": 102050128, "body": "<i>&quot;<code>&amp;[T]</code> is a sized fat pointer&quot;</i> I did <i>not</i> know they could be called like that, thanks for the laugh haha"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1567699619, "post_id": 57808948, "comment_id": 102050193, "body": "put it simply, both are slice, but you can&#39;t construct a <code>[T]</code> because it doesn&#39;t have a size. To have an usable slice you need indirection somewhere <code>&amp;[T]</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1567700444, "post_id": 57808948, "comment_id": 102050561, "body": "People don&#39;t tend to call <code>[T]</code> by any name, because it is almost never useful by itself."}], "answers": [{"comments": [{"owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "edited": false, "score": 1, "creation_date": 1567708473, "post_id": 57809666, "comment_id": 102053787, "body": "Thanks for your explanation! I have now a better visualisation of what is behind <code>[T]</code>. <i><code>[T]</code> is a block of contiguous memory</i> has been helpful to understand what is behind the type. When thinking about an applied case of those two types, I would say that in the case of a string (compiled with the executable), <code>[T]</code> would correspond to the raw string characters stored in the read-only segment of the program, while <code>&amp;[T]</code> is a fat pointer that contains a pointer to the sequence of characters and its length (while in reality, Rust handles strings using <code>str</code> for <code>[T]</code> and <code>&amp;str</code> for <code>&amp;[T]</code>)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1567709984, "post_id": 57809666, "comment_id": 102054374, "body": "<a href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\" rel=\"nofollow noreferrer\">The Rust documentation uses the term &quot;slice&quot; for the dynamically sized type <code>[T]</code></a>, but I agree that it is also often used for <code>&amp;[T]</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1567711457, "post_id": 57809666, "comment_id": 102055015, "body": "I suggest using &quot;bare slice&quot; for <code>[T]</code> to distinguish it from <code>&amp;[T]</code>, since both are commonly called &quot;slices&quot;."}, {"owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1567721256, "post_id": 57809666, "comment_id": 102058238, "body": "Hey @SvenMarnach and @trentcl, thanks for your feedbacks. Interestingly, the link you provided defines slices as <i>a view into a block of memory represented as a pointer and a length</i>, which corresponds to the fat pointer <code>&amp;[T]</code> (<code>[T]</code> is unsized). Also, the documentation states: <i>The <b>shared slice</b> type is <code>&amp;[T]</code>, while the <b>mutable slice</b> type is <code>&amp;mut [T]</code></i>, which is the standard convention for calling references in Rust. Using the term <i>bare slice</i> for <code>[T]</code> would makes those names non ambiguous."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1567701624, "last_edit_date": 1567701624, "creation_date": 1567701087, "answer_id": 57809666, "question_id": 57808948, "link": "https://stackoverflow.com/questions/57808948/confusion-between-t-and-t/57809666#57809666", "title": "Confusion between [T] and &amp;[T]", "body": "<blockquote>\n  <p>What's the name of the item <code>[T]</code> so ? What is the usage of <code>[T]</code> exactly ?</p>\n</blockquote>\n\n<p><code>[T]</code> is a block of contiguous memory, filled with items of type <code>T</code>. It is rarely referred to by name directly because it needs to be behind a pointer to be useful. That is usually a <code>&amp;[T]</code>, commonly referred to as a slice, but could also be other pointer types.</p>\n\n<p>The term \"slice\" is overloaded, but it is not usually a cause of confusion since it really doesn't come up much. In general, if the word \"slice\" is used by itself then it means <code>&amp;[T]</code>. If it has some other modifier, then it probably refers to a different pointer type. For example <code>Box&lt;[T]&gt;</code> is a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"noreferrer\">\"boxed slice\"</a> and <code>Rc&lt;[T]&gt;</code> might be called a \"ref-counted slice\".</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1567723052, "post_id": 57811006, "comment_id": 102058646, "body": "&quot;A slice is a piece of information stored on the stack that references data.&quot;, a slice can be boxed without problem, there is not requirement to be on the stack."}, {"owner": {"reputation": 1, "user_id": 11717690, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MVfbw.jpg?s=128&g=1", "display_name": "julio-cabdu", "link": "https://stackoverflow.com/users/11717690/julio-cabdu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1589503085, "post_id": 57811006, "comment_id": 109328257, "body": "@Stargateur I meant that since slices are references, the slice itself &amp;[T] is located on the stack pointing to the storage in the heap. When you have Box&lt;[T]&gt;, the [T] is a block of contiguous memory, not a slice."}], "tags": [], "owner": {"reputation": 1, "user_id": 11717690, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MVfbw.jpg?s=128&g=1", "display_name": "julio-cabdu", "link": "https://stackoverflow.com/users/11717690/julio-cabdu"}, "is_accepted": false, "score": 0, "last_activity_date": 1589503371, "last_edit_date": 1589503371, "creation_date": 1567707335, "answer_id": 57811006, "question_id": 57808948, "link": "https://stackoverflow.com/questions/57808948/confusion-between-t-and-t/57811006#57811006", "title": "Confusion between [T] and &amp;[T]", "body": "<p>Regarding slices:</p>\n\n<p>E.g. string literals are slices of type &amp;str. But slices of Strings (of type String) are also of type &amp;str such as <code>slice: &amp;str = &amp;String [0..n-1]</code>.</p>\n\n<p>Furthermore, slice: &amp;[T] in:</p>\n\n<ul>\n<li><p>Arrays like <code>array: [T; n]</code> - if you want a piece of it, you can take a <code>slice = &amp;array [1..n-1]</code> which means that slice is of type &amp;[T].</p></li>\n<li><p>Vectors such as <code>vector: Vec&lt;T&gt;</code> you can take a part of it as a slice: &amp;[T].</p></li>\n</ul>\n"}], "owner": {"reputation": 5683, "user_id": 2780334, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/673K8.png?s=128&g=1", "display_name": "J&#228;mes", "link": "https://stackoverflow.com/users/2780334/j%c3%a4mes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 1, "accepted_answer_id": 57809666, "answer_count": 2, "score": 9, "last_activity_date": 1589503371, "creation_date": 1567698258, "last_edit_date": 1567700256, "question_id": 57808948, "link": "https://stackoverflow.com/questions/57808948/confusion-between-t-and-t", "title": "Confusion between [T] and &amp;[T]", "body": "<p>I'm currently confused by <code>[T]</code> and <code>&amp;[T]</code> in Rust. Let's start by what I know:</p>\n\n<ul>\n<li><code>[T; n]</code> is an array of n elements,</li>\n<li><code>&amp;[T; n]</code> is a pointer to an array with n elements,</li>\n<li><code>[T]</code> is unsized and points to sequence of elements <code>T</code>, while</li>\n<li><code>&amp;[T]</code> is a sized fat pointer and points to a sequence of elements <code>T</code>.</li>\n</ul>\n\n<p>My confusion starts with the naming convention of the two items. From the <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html#other-slices\" rel=\"noreferrer\">documentation of Rust</a>, they provide the following example:</p>\n\n<pre><code>let a: [i32; 5] = [1, 2, 3, 4, 5]; // An array of type [T, n]\nlet slice: &amp;[i32] = &amp;a[1..3]; // A slice of type &amp;[T]\n</code></pre>\n\n<p>and states</p>\n\n<blockquote>\n  <p>This slice has the type &amp;[i32].</p>\n</blockquote>\n\n<p>So, I assume <code>&amp;[T]</code> is called <strong>a slice</strong>. What's the name of the item <code>[T]</code> so ? What is the usage of <code>[T]</code> exactly ? You can't embed it into a struct (it's unsized), you can't take this type in parameter for the same reason. I can't figure out a practical usage of it.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["rust", "gentoo"], "answers": [{"comments": [{"owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "edited": false, "score": 0, "creation_date": 1568309590, "post_id": 57887724, "comment_id": 102243093, "body": "While I consider this technique to &quot;bypass gentoo&#39;s ebuilds&quot; at least partially and thus not qualify as &quot;the answer&quot;, it does link to a good article addressing many speedbumps I had not even imagined.  I suspect this answer will be quite useful to some folks who land on this page who are willing to work around gentoo&#39;s ebuild (and I may find myself among them shortly)."}], "tags": [], "owner": {"reputation": 93, "user_id": 1655051, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d753b4cc5d3ebf52e448adec55546184?s=128&d=identicon&r=PG", "display_name": "Sven", "link": "https://stackoverflow.com/users/1655051/sven"}, "is_accepted": false, "score": 1, "last_activity_date": 1568199847, "creation_date": 1568199847, "answer_id": 57887724, "question_id": 57807583, "link": "https://stackoverflow.com/questions/57807583/in-intellij-idea-on-gentoo-how-do-i-attach-the-rust-stdlib-sources-since-gentoo/57887724#57887724", "title": "In IntelliJ IDEA on Gentoo, how do I attach the rust stdlib sources since gentoo does not use rustup?", "body": "<p>Had the same problem. The solution I settled for is to use rustup and remove portage's rust from my system. You can then tell portage to assume rust is provided by using /etc/portage/package.provided to make emerges like firefox work with rustup's version.</p>\n\n<p>Here is a short article describing the process: <a href=\"https://laumann.xyz/gentoo/2018/05/01/gentoo-package-provided.html\" rel=\"nofollow noreferrer\">https://laumann.xyz/gentoo/2018/05/01/gentoo-package-provided.html</a></p>\n\n<p>Iirc you don't need everything he puts in bash.profile at the end, but right now I can't tell you what exactly you can leave out</p>\n"}, {"tags": [], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "is_accepted": false, "score": 2, "last_activity_date": 1569337929, "creation_date": 1569337929, "answer_id": 58083365, "question_id": 57807583, "link": "https://stackoverflow.com/questions/57807583/in-intellij-idea-on-gentoo-how-do-i-attach-the-rust-stdlib-sources-since-gentoo/58083365#58083365", "title": "In IntelliJ IDEA on Gentoo, how do I attach the rust stdlib sources since gentoo does not use rustup?", "body": "<p>I have an experimental technique that has different warts from the solution Sven found:</p>\n\n<p>I installed rustup in addition to having the gentoo-managed rust ebuild.  </p>\n\n<pre><code>$ wget -O sh.rustup.rs https://sh.rustup.rs\n--2019-09-24 10:28:49--  https://sh.rustup.rs/\nResolving sh.rustup.rs... 13.249.122.62, 13.249.122.9, 13.249.122.96, ...\nConnecting to sh.rustup.rs|13.249.122.62|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 10782 (11K) [text/x-sh]\nSaving to: 'sh.rustup.rs'\n\nsh.rustup.rs        100%[===================&gt;]  10.53K  --.-KB/s    in 0.001s  \n\n2019-09-24 10:28:49 (10.4 MB/s) - 'sh.rustup.rs' saved [10782/10782]\n</code></pre>\n\n<p>However, rustup is sad that I already have rust installed in /usr/bin</p>\n\n<pre><code> $ sh sh.rustup.rs\ninfo: downloading installer\nerror: it looks like you have an existing installation of Rust at:\nerror: /usr/bin\nerror: rustup cannot be installed alongside Rust. Please uninstall first\nerror: if this is what you want, restart the installation with `-y'\nerror: cannot install while Rust is installed\n</code></pre>\n\n<p>Brute force \"solves\" this problem:</p>\n\n<pre><code>$ sh sh.rustup.rs -y\ninfo: downloading installer\ninfo: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\ninfo: latest update on 2019-08-15, rust version 1.37.0 (eae3437df 2019-08-13)\ninfo: downloading component 'rustc'\n 85.3 MiB /  85.3 MiB (100 %)   9.6 MiB/s in  9s ETA:  0s\ninfo: downloading component 'rust-std'\n 61.2 MiB /  61.2 MiB (100 %)   8.2 MiB/s in  8s ETA:  0s\ninfo: downloading component 'cargo'\ninfo: downloading component 'rust-docs'\n 11.3 MiB /  11.3 MiB (100 %)   8.4 MiB/s in  1s ETA:  0s\ninfo: installing component 'rustc'\n 85.3 MiB /  85.3 MiB (100 %)  18.4 MiB/s in  4s ETA:  0s\ninfo: installing component 'rust-std'\n 61.2 MiB /  61.2 MiB (100 %)  20.9 MiB/s in  5s ETA:  0s\ninfo: installing component 'cargo'\ninfo: installing component 'rust-docs'\n 11.3 MiB /  11.3 MiB (100 %) 606.4 KiB/s in  9s ETA:  0s\ninfo: default toolchain set to 'stable'\n\n  stable installed - rustc 1.37.0 (eae3437df 2019-08-13)\n\n\nRust is installed now. Great!\n\nTo get started you need Cargo's bin directory ($HOME/.cargo/bin) in your PATH \nenvironment variable. Next time you log in this will be done automatically.\n\nTo configure your current shell run source $HOME/.cargo/env\n</code></pre>\n\n<p>After that you might want to rig rustup to use the same version the ebuild installed (or maybe you want to leave it tracking the latest stable, your choice)</p>\n\n<pre><code>$ equery list rust\n * Searching for rust ...\n[IP-] [  ] dev-lang/rust-1.34.2:stable/1.34\n$ rustup default 1.34.2\ninfo: using existing install for '1.34.2-x86_64-unknown-linux-gnu'\ninfo: default toolchain set to '1.34.2-x86_64-unknown-linux-gnu'\n  1.34.2-x86_64-unknown-linux-gnu unchanged - rustc 1.34.2 (6c2484dc3 2019-05-13)\n</code></pre>\n\n<p>But you <em>definitely</em> want the rust-src component</p>\n\n<pre><code>$ rustup component add rust-src \ninfo: downloading component 'rust-src'\ninfo: installing component 'rust-src'\n</code></pre>\n\n<p>After that, the rust stdlib sources should be in <code>$HOME/.rustup/toolchains/$VERSION-$ARCH/lib/rustlib/src/rust/src</code> and you should be able to enter that path into the settings for the rust plugin.</p>\n\n<p><a href=\"https://i.stack.imgur.com/SCwXy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/SCwXy.png\" alt=\"IDEA settings for rust toolchain\"></a></p>\n\n<p>You may also use that settings dialog to choose your toolchain (<code>/usr/bin</code>, <code>$HOME/.cargo/bin</code>, or <code>$HOME/.rustup/toolchains/$VERSION-$ARCH/bin</code>; I'm just guessing that <code>.cargo/bin</code> points to whatever <code>rustup default</code> you have set at the moment).</p>\n\n<p>The drawback to this solution is that you now have 2 (or more) installations of rust.  The system ebuild, plus any versions you have installed into <code>$HOME/.cargo</code> and <code>$HOME/.rustup</code> using rustup.  There may be more problems, considering that I've only been using this for an hour or so.</p>\n"}, {"comments": [{"owner": {"reputation": 348, "user_id": 3275339, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53451505b776e298d947b1c4d8ff9f04?s=128&d=identicon&r=PG&f=1", "display_name": "kosm", "link": "https://stackoverflow.com/users/3275339/kosm"}, "edited": false, "score": 3, "creation_date": 1613933299, "post_id": 60576683, "comment_id": 117222958, "body": "In version 1.47.0, the path appeared to be <code>&#47;usr&#47;lib&#47;rustlib&#47;src&#47;rust&#47;library</code>."}], "tags": [], "owner": {"reputation": 632, "user_id": 4345715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e461cb8d6790589597bb8a47f4736648?s=128&d=identicon&r=PG", "display_name": "Mat\u011bj Laitl", "link": "https://stackoverflow.com/users/4345715/mat%c4%9bj-laitl"}, "is_accepted": false, "score": 6, "last_activity_date": 1583577557, "creation_date": 1583577557, "answer_id": 60576683, "question_id": 57807583, "link": "https://stackoverflow.com/questions/57807583/in-intellij-idea-on-gentoo-how-do-i-attach-the-rust-stdlib-sources-since-gentoo/60576683#60576683", "title": "In IntelliJ IDEA on Gentoo, how do I attach the rust stdlib sources since gentoo does not use rustup?", "body": "<p>The <a href=\"https://packages.gentoo.org/packages/dev-lang/rust\" rel=\"noreferrer\">dev-lang/rust</a> Gentoo package has an <code>rls</code> use-flag (standing for <a href=\"https://github.com/rust-lang/rls\" rel=\"noreferrer\">Rust Language Server</a>), <a href=\"https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-lang/rust/rust-1.41.1.ebuild#n181\" rel=\"noreferrer\">which has a side-effect of installing Rust sources</a> to <code>/usr/lib/rustlib/src</code>:</p>\n\n<pre><code>$ equery files dev-lang/rust | grep lib.rs\n/usr/lib/rustlib/src/rust/src/libcore/lib.rs\n/usr/lib/rustlib/src/rust/src/libstd/lib.rs\n(...)\n</code></pre>\n\n<p>The solution is therefore to enable the <code>rls</code> use-flag and then point Intellij IDEA to <code>/usr/lib/rustlib/src/rust/src</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/VcBMc.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/VcBMc.png\" alt=\"Pointing Intellij IDEA Rust Standard library to /usr/lib/rustlib/src/rust/src\"></a></p>\n\n<p>I believe this is a more idiomatic solution on Gentoo than to bypass portage and/or use rustup.</p>\n\n<p>Note that <a href=\"https://packages.gentoo.org/packages/dev-lang/rust-bin\" rel=\"noreferrer\">dev-lang/rust-bin</a> package currently does not have the <code>rls</code> use-flag and I haven't found a way to install Rust lib sources with it.</p>\n\n<p><em>Contributions regarding dev-lang/rust use-flags (and their docs) in Gentoo would be probably appreciated.</em></p>\n"}], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 949, "favorite_count": 2, "answer_count": 3, "score": 6, "last_activity_date": 1583577557, "creation_date": 1567693297, "question_id": 57807583, "link": "https://stackoverflow.com/questions/57807583/in-intellij-idea-on-gentoo-how-do-i-attach-the-rust-stdlib-sources-since-gentoo", "title": "In IntelliJ IDEA on Gentoo, how do I attach the rust stdlib sources since gentoo does not use rustup?", "body": "<p>I am using IntelliJ's rust plugin (version 0.2.0.2114-182) with IDEA (2018.2.3).</p>\n\n<p>There is a yellow bar at the top of my editor window that says \"cannot attach stdlib sources automatically without rustup\".  This is not surprising since gentoo does not use rustup.  It compiles rust from source.</p>\n\n<p>There is an option to \"attach manually\", but I have no idea what directory it wants me to pick; or even what I should look for to figure out what the proper directory is; and I'm not even sure the gentoo ebuild created a directory with the necessary stdlib sources.</p>\n\n<p>How can I provide the stdlib sources to the rust plugin in a way that is compatible with gentoo's package management system?  It seems like answers to <a href=\"https://stackoverflow.com/questions/41464063/how-to-provide-standard-library-sources-for-intellij-ideas-rust-project\">How to provide standard library sources for IntelliJ IDEA&#39;s Rust project?</a> bypass gentoo's ebuilds and might cause the accumulation of cruft over time.</p>\n"}, {"tags": ["rust", "lifetime", "serde-json"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1567682427, "post_id": 57797677, "comment_id": 102040283, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45783315/lifetimes-when-deserializing-json-within-a-fromform\">Lifetimes when Deserializing JSON within a FromForm</a>"}], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 7047078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ca192fb4c88bc88955848a3497e9917?s=128&d=identicon&r=PG&f=1", "display_name": "snlan", "link": "https://stackoverflow.com/users/7047078/snlan"}, "is_accepted": false, "score": 0, "last_activity_date": 1567671658, "creation_date": 1567671658, "answer_id": 57801271, "question_id": 57797677, "link": "https://stackoverflow.com/questions/57797677/borrowed-value-does-not-live-long-enough-when-use-generic-lifecycle/57801271#57801271", "title": "borrowed value does not live long enough when use generic lifecycle\u3002", "body": "<pre><code>fn get&lt;T&gt;(&amp;self, key: &amp;[u8]) -&gt; Result&lt;Option&lt;T&gt;&gt;\nwhere\n    T: DeserializeOwned,\n{\n    match self.db.get(key)? {\n        Some(ref dbv) =&gt; {\n            let v = serde_json::from_slice(dbv)?;\n            Ok(Some(v))\n        }\n        None =&gt; Ok(None),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 7047078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6ca192fb4c88bc88955848a3497e9917?s=128&d=identicon&r=PG&f=1", "display_name": "snlan", "link": "https://stackoverflow.com/users/7047078/snlan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 368, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1567671658, "creation_date": 1567650213, "last_edit_date": 1567651441, "question_id": 57797677, "link": "https://stackoverflow.com/questions/57797677/borrowed-value-does-not-live-long-enough-when-use-generic-lifecycle", "title": "borrowed value does not live long enough when use generic lifecycle\u3002", "body": "<p>borrowed value does not live long enough when use generic lifecycle\u3002</p>\n\n<pre><code>fn get&lt;'a, T&gt;(&amp;self, key: &amp;[u8]) -&gt; Result&lt;Option&lt;T&gt;&gt;\nwhere\n    T: Deserialize&lt;'a&gt;,\n{\n    match self.db.get(key)? {\n        Some(dbv) =&gt; {\n            let v = serde_json::from_slice(&amp;*dbv)?;\n            Ok(Some(v))\n        }\n        None =&gt; Ok(None),\n    }\n}\n</code></pre>\n\n<p>funcion db.get declaration:</p>\n\n<pre><code>pub fn get(&amp;self, key: &amp;[u8]) -&gt; Result&lt;Option&lt;DBVector&gt;, String&gt;\n</code></pre>\n\n<p>function serde_json::from_slice declaration:</p>\n\n<pre><code>pub fn from_slice&lt;'a, T&gt;(v: &amp;'a [u8]) -&gt; Result&lt;T&gt;\nwhere\n    T: de::Deserialize&lt;'a&gt;\n</code></pre>\n\n<p>the error message:</p>\n\n<pre><code>error[E0597]: `dbv` does not live long enough\n   --&gt; libs/block-db/src/index.rs:106:50\n    |\n100 |     fn get&lt;'a, T&gt;(&amp;self, key: &amp;[u8]) -&gt; Result&lt;Option&lt;T&gt;&gt;\n    |            -- lifetime `'a` defined here\n...\n106 |                 let v = serde_json::from_slice(&amp;*dbv)?;\n    |                         -------------------------^^^-\n    |                         |                        |\n    |                         |                        borrowed value does not live long enough\n    |                         argument requires that `dbv` is borrowed for `'a`\n...\n109 |             None =&gt; Ok(None),\n    |                - `dbv` dropped here while still borrowed\n\nerror: aborting due to previous erro\n</code></pre>\n"}]