[{"tags": ["multithreading", "rust", "locking"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537983574, "post_id": 52523237, "comment_id": 91986250, "body": "See also <a href=\"https://docs.rs/rayon/1.0.2/rayon/slice/trait.ParallelSliceMut.html#method.par_chunks_mut\" rel=\"nofollow noreferrer\"><code>par_chunks_mut</code></a>. <a href=\"https://play.rust-lang.org/?gist=fa1c6a757685160a19fd20ce3c4408a2&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Full example</a>"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537984927, "post_id": 52523237, "comment_id": 91986834, "body": "@Shepmaster From the duplicate answers looks like there is no way to do it by using the language itself or any standard library. Am I correct?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537985256, "post_id": 52523237, "comment_id": 91986998, "body": "I don&#39;t understand your meaning. The libraries used in the linked questions are written using the Rust language, so yes, it&#39;s definitely possible to write it using the language itself. No, there&#39;s nothing in the standard library that does it for you (as at least one of the duplicates starts out by saying). The majority of the Rust community is happy to use code that other people have written because Cargo makes it so easy. If you aren&#39;t one of this group, just copy and paste the source code from any Open Source library you&#39;d like and then you don&#39;t have to worry about dependencies."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537985661, "post_id": 52523237, "comment_id": 91987176, "body": "@Shepmaster There is a difference between being part of the language and being part of a library (string/Vec), and there is a difference between being part of the standard library and being a 3rd party library. I am not complaining don&#39;t get me wrong, just commenting on how strange I find such a common task not being achievable by simply using the standard library."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537986093, "post_id": 52523237, "comment_id": 91987372, "body": "Assuming it&#39;s common is not something I&#39;d agree with. I&#39;d also say that generating a random number is far more common and <a href=\"https://stackoverflow.com/q/29334461/155423\">that&#39;s not part of the standard library, either</a>. In my experience, everyone tends to think that the things that <i>they</i> do are things that <i>everyone</i> does."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1538063809, "post_id": 52523237, "comment_id": 92021677, "body": "@Shepmaster <code>crossbeam</code> worked perfectly and it&#39;s very easy to use. Thanks!"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 861, "favorite_count": 1, "closed_date": 1537983369, "answer_count": 0, "score": 1, "last_activity_date": 1537983942, "creation_date": 1537982987, "last_edit_date": 1537983332, "question_id": 52523237, "link": "https://stackoverflow.com/questions/52523237/how-to-modify-each-section-of-a-vector-in-multiple-threads", "closed_reason": "Duplicate", "title": "How to modify each section of a vector in multiple threads", "body": "<p>I have a vector of <code>u8</code> and I need to fill this vector with values that can be computed in parallel:</p>\n\n<pre><code>let vector: Vec&lt;u8&gt; = vec![0, len];\n</code></pre>\n\n<p>Given <code>n_threads</code> threads, each thread can take care of a section of the vector. The only way I know of to pass a mutable vector into multiple threads is to wrap it into a <code>Mutex</code>:</p>\n\n<pre><code>let vector: Arc::new(Mutex::new(vec![0, len]));\n</code></pre>\n\n<p>and for each thread move the clone of the atomic reference:</p>\n\n<pre><code>for _ in 0..n_hthreads {\n    let vector = Arc::clone(&amp;vector);\n    thread::spawn(move || fill_vector());\n}\n</code></pre>\n\n<p>The problem with this approach is that I would need to lock the entire vector inside the threads (which completely nullifies the parallelism):</p>\n\n<pre><code>fn fill_vector() {\n    let vector = vector.lock().unwrap();\n    vector[i] = /* ... */;\n}\n</code></pre>\n\n<p>A possible alternative would be to have multiple vectors and pass each vector to each thread, and once the threads are joined concatenate the vectors, but that would require additional memory unless there is a way to move the sub-vectors into the final vector instead of copying them.</p>\n\n<p>Is there any alternative that would allow me to lock only a specific section of the vector or to move multiple sub-vectors when concatenating (my goal is to have a single vector in the end), or any other alternative to safely write into the vector?</p>\n"}, {"tags": ["rust", "future", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 1, "creation_date": 1537995844, "post_id": 52521592, "comment_id": 91991839, "body": "<i>In futures 0.1, for simple cases, you only need to call wait</i>: in my opinion is not very clear: it works only when a future resolve immediately. When you have something to be resolved in the future you need a runtime, also for simple cases."}, {"owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "edited": false, "score": 0, "creation_date": 1597758890, "post_id": 52521592, "comment_id": 112234494, "body": "@Shepmaster, as of Rust 1.45 is there a standard way (without using other crates) of doing this?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "edited": false, "score": 0, "creation_date": 1597758982, "post_id": 52521592, "comment_id": 112234545, "body": "@Amani no. See also <a href=\"https://stackoverflow.com/q/56252798/155423\">How do I execute an async/await function without using any external dependencies?</a>"}, {"owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "edited": false, "score": 0, "creation_date": 1597759150, "post_id": 52521592, "comment_id": 112234641, "body": "@Shepmaster, thanks. I see this as among the road blocks, hopeful we will have it some day?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "edited": false, "score": 2, "creation_date": 1597759418, "post_id": 52521592, "comment_id": 112234799, "body": "@Amani if you believe that adding one line to your Cargo.toml is a &quot;road block&quot;, then Rust may not be a language you enjoy using. It&#39;s always possible that more things will be moved to the standard library, but there&#39;s not really a strong push to do so, especially when there are multiple ways to solve a problem with no clear benefit to one vs the other <b>and</b> it&#39;s easy to add dependencies."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1606934883, "post_id": 52521592, "comment_id": 115116550, "body": "Also, PLEASE! don&#39;t overload the std lib. And no, the need to add a line to Cargo.toml ain&#39;t a reason to do that."}, {"owner": {"reputation": 37028, "user_id": 59198, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6448b40e7037dd0fda767f2370c31809?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/59198/chris"}, "edited": false, "score": 0, "creation_date": 1613429256, "post_id": 52521592, "comment_id": 117067834, "body": "Note that you need to add futures to your cargo.toml like this in order to get block_on: <code>futures = { version=&quot;0&quot;, features=[&quot;executor&quot;] }</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 53, "last_activity_date": 1607873157, "last_edit_date": 1607873157, "creation_date": 1537976492, "answer_id": 52521592, "question_id": 52521201, "link": "https://stackoverflow.com/questions/52521201/how-do-i-synchronously-return-a-value-calculated-in-an-asynchronous-future-in-st/52521592#52521592", "title": "How do I synchronously return a value calculated in an asynchronous Future in stable Rust?", "body": "<h1>Standard library futures</h1>\n<p>Let's use this as our <a href=\"/help/mcve\">minimal, reproducible example</a>:</p>\n<pre><code>async fn example() -&gt; i32 {\n    42\n}\n</code></pre>\n<p>Call <a href=\"https://docs.rs/futures/0.3.1/futures/executor/fn.block_on.html\" rel=\"noreferrer\"><code>executor::block_on</code></a>:</p>\n<pre><code>use futures::executor; // 0.3.1\n\nfn main() {\n    let v = executor::block_on(example());\n    println!(&quot;{}&quot;, v);\n}\n</code></pre>\n<h2>Tokio</h2>\n<p>Use the <a href=\"https://docs.rs/tokio/0.3.1/tokio/attr.main.html\" rel=\"noreferrer\"><code>tokio::main</code></a> attribute on any function (not just <code>main</code>!) to convert it from an asynchronous function to a synchronous one:</p>\n<pre><code>use tokio; // 0.3.5\n\n#[tokio::main]\nasync fn main() {\n    let v = example().await;\n    println!(&quot;{}&quot;, v);\n}\n</code></pre>\n<p><code>tokio::main</code> is a macro that transforms this</p>\n<pre><code>#[tokio::main]\nasync fn main() {}\n</code></pre>\n<p>Into this:</p>\n<pre><code>fn main() {\n    tokio::runtime::Builder::new_multi_thread()\n        .enable_all()\n        .build()\n        .unwrap()\n        .block_on(async { {} })\n}\n</code></pre>\n<p>This uses <a href=\"https://docs.rs/tokio/0.3.5/tokio/runtime/struct.Runtime.html#method.block_on\" rel=\"noreferrer\"><code>Runtime::block_on</code></a> under the hood, so you can also write this as:</p>\n<pre><code>use tokio::runtime::Runtime; // 0.3.5\n\nfn main() {\n    let v = Runtime::new().unwrap().block_on(example());\n    println!(&quot;{}&quot;, v);\n}\n</code></pre>\n<p>For tests, you can use <a href=\"https://docs.rs/tokio/0.3.5/tokio/attr.test.html\" rel=\"noreferrer\"><code>tokio::test</code></a>.</p>\n<h2>async-std</h2>\n<p>Use the <a href=\"https://docs.rs/async-std/1.6.5/async_std/attr.main.html\" rel=\"noreferrer\"><code>async_std::main</code></a> attribute on the <code>main</code> function to convert it from an asynchronous function to a synchronous one:</p>\n<pre><code>use async_std; // 1.6.5, features = [&quot;attributes&quot;]\n\n#[async_std::main]\nasync fn main() {\n    let v = example().await;\n    println!(&quot;{}&quot;, v);\n}\n</code></pre>\n<p>For tests, you can use <a href=\"https://docs.rs/async-std/1.6.5/async_std/attr.test.html\" rel=\"noreferrer\"><code>async_std::test</code></a>.</p>\n<h1>Futures 0.1</h1>\n<p>Let's use this as our <a href=\"/help/mcve\">minimal, reproducible example</a>:</p>\n<pre><code>use futures::{future, Future}; // 0.1.27\n\nfn example() -&gt; impl Future&lt;Item = i32, Error = ()&gt; {\n    future::ok(42)\n}\n</code></pre>\n<p>For simple cases, you only need to call <code>wait</code>:</p>\n<pre><code>fn main() {\n    let s = example().wait();\n    println!(&quot;{:?}&quot;, s);\n}\n</code></pre>\n<p>However, this comes with a pretty severe warning:</p>\n<blockquote>\n<p>This method is not appropriate to call on event loops or similar I/O situations because it will prevent the event loop from making progress (this blocks the thread). This method should only be called when it's guaranteed that the blocking work associated with this future will be completed by another thread.</p>\n</blockquote>\n<h2>Tokio</h2>\n<p>If you are using Tokio 0.1, you should use Tokio's <a href=\"https://docs.rs/tokio/0.1.8/tokio/runtime/struct.Runtime.html#method.block_on\" rel=\"noreferrer\"><code>Runtime::block_on</code></a>:</p>\n<pre><code>use tokio; // 0.1.21\n\nfn main() {\n    let mut runtime = tokio::runtime::Runtime::new().expect(&quot;Unable to create a runtime&quot;);\n    let s = runtime.block_on(example());\n    println!(&quot;{:?}&quot;, s);\n}\n</code></pre>\n<p>If you peek in the implementation of <code>block_on</code>, it actually sends the future's result down a channel and then calls <code>wait</code> on that channel! This is fine because Tokio guarantees to run the future to completion.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/54963851/155423\">How can I efficiently extract the first element of a futures::Stream in a blocking manner?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 37028, "user_id": 59198, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6448b40e7037dd0fda767f2370c31809?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/59198/chris"}, "is_accepted": false, "score": 0, "last_activity_date": 1614067760, "creation_date": 1614067760, "answer_id": 66329297, "question_id": 52521201, "link": "https://stackoverflow.com/questions/52521201/how-do-i-synchronously-return-a-value-calculated-in-an-asynchronous-future-in-st/66329297#66329297", "title": "How do I synchronously return a value calculated in an asynchronous Future in stable Rust?", "body": "<p>This works for me using tokio:</p>\n<pre><code>tokio::runtime::Runtime::new()?.block_on(fooAsyncFunction())?;\n</code></pre>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10692, "favorite_count": 6, "accepted_answer_id": 52521592, "answer_count": 2, "score": 30, "last_activity_date": 1614067760, "creation_date": 1537975271, "last_edit_date": 1537976530, "question_id": 52521201, "link": "https://stackoverflow.com/questions/52521201/how-do-i-synchronously-return-a-value-calculated-in-an-asynchronous-future-in-st", "title": "How do I synchronously return a value calculated in an asynchronous Future in stable Rust?", "body": "<p>I am trying to use hyper to grab the content of an HTML page and would like to synchronously return the output of a future. I realized I could have picked a better example since synchronous HTTP requests already exist, but I am  more interested in understanding whether we could return a value from an async calculation.</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate hyper_tls;\nextern crate tokio;\n\nuse futures::{future, Future, Stream};\nuse hyper::Client;\nuse hyper::Uri;\nuse hyper_tls::HttpsConnector;\n\nuse std::str;\n\nfn scrap() -&gt; Result&lt;String, String&gt; {\n    let scraped_content = future::lazy(|| {\n        let https = HttpsConnector::new(4).unwrap();\n        let client = Client::builder().build::&lt;_, hyper::Body&gt;(https);\n\n        client\n            .get(\"https://hyper.rs\".parse::&lt;Uri&gt;().unwrap())\n            .and_then(|res| {\n                res.into_body().concat2().and_then(|body| {\n                    let s_body: String = str::from_utf8(&amp;body).unwrap().to_string();\n                    futures::future::ok(s_body)\n                })\n            }).map_err(|err| format!(\"Error scraping web page: {:?}\", &amp;err))\n    });\n\n    scraped_content.wait()\n}\n\nfn read() {\n    let scraped_content = future::lazy(|| {\n        let https = HttpsConnector::new(4).unwrap();\n        let client = Client::builder().build::&lt;_, hyper::Body&gt;(https);\n\n        client\n            .get(\"https://hyper.rs\".parse::&lt;Uri&gt;().unwrap())\n            .and_then(|res| {\n                res.into_body().concat2().and_then(|body| {\n                    let s_body: String = str::from_utf8(&amp;body).unwrap().to_string();\n                    println!(\"Reading body: {}\", s_body);\n                    Ok(())\n                })\n            }).map_err(|err| {\n                println!(\"Error reading webpage: {:?}\", &amp;err);\n            })\n    });\n\n    tokio::run(scraped_content);\n}\n\nfn main() {\n    read();\n    let content = scrap();\n\n    println!(\"Content = {:?}\", &amp;content);\n}\n</code></pre>\n\n<p>The example compiles and the call to <code>read()</code> succeeds, but the call to <code>scrap()</code> panics with the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Content = Err(\"Error scraping web page: Error { kind: Execute, cause: None }\")\n</code></pre>\n\n<p>I understand that I failed to launch the task properly before calling <code>.wait()</code> on the future but I couldn't find how to properly do it, assuming it's even possible.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537973889, "post_id": 52520516, "comment_id": 91981047, "body": "The duplicate applied to this question: <code>let val = t.write_and_get_val();</code> and only then <code>t.read_only(val);</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1537974420, "post_id": 52520516, "comment_id": 91981378, "body": "For what it&#39;s worth, the code in this question doesn&#39;t compile with non-lexical lifetimes enabled, while the code in the duplicate <i>does</i> compile.  The main difference seems to be that the inner function call incurs the mutable borrow and the outer call the immutable borrow, while it&#39;s the other way around in the duplicate.  I don&#39;t fully why the code in this question doesn&#39;t compile with NLLs."}, {"owner": {"reputation": 2753, "user_id": 964045, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/953ab232a0627d7e6bee8140ef02924f?s=128&d=identicon&r=PG", "display_name": "Joseph Humfrey", "link": "https://stackoverflow.com/users/964045/joseph-humfrey"}, "edited": false, "score": 0, "creation_date": 1537980305, "post_id": 52520516, "comment_id": 91984676, "body": "Good point! Here&#39;s a playground demonstrating it not working with NLLs: <a href=\"https://play.rust-lang.org/?gist=6ce6410796d70241c9baaab0e740051d&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "owner": {"reputation": 2753, "user_id": 964045, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/953ab232a0627d7e6bee8140ef02924f?s=128&d=identicon&r=PG", "display_name": "Joseph Humfrey", "link": "https://stackoverflow.com/users/964045/joseph-humfrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1537973679, "answer_count": 0, "score": 0, "last_activity_date": 1537973819, "creation_date": 1537973234, "last_edit_date": 1537973819, "question_id": 52520516, "link": "https://stackoverflow.com/questions/52520516/is-there-a-good-pattern-for-passing-an-argument-using-self-immutably-to-a-method", "closed_reason": "Duplicate", "title": "Is there a good pattern for passing an argument using self immutably to a method using self mutably?", "body": "<p>Is there a good pattern for dealing with this situation? </p>\n\n<pre><code>struct Thing {\n    x: i32,\n}\n\nimpl Thing {\n    fn write_and_get_val(&amp;mut self) -&gt; i32 {\n        self.x = 5;\n        self.x\n    }\n\n    fn read_only(&amp;self, val: i32) {\n        println!(\"x is {}, val is {}\", self.x, val);\n    }\n}\n\nfn main() {\n    let mut t = Thing { x: 0 };\n\n    t.read_only(t.write_and_get_val());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `t` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:20:17\n   |\n20 |     t.read_only(t.write_and_get_val());\n   |     -           ^                    - immutable borrow ends here\n   |     |           |\n   |     |           mutable borrow occurs here\n   |     immutable borrow occurs here\n</code></pre>\n\n<p>If I make a temporary variable out of the result of <code>write_and_get_val</code>, it's fine which is obviously a relatively easy fix, it's just a bit tedious. I guess because <code>read_only</code> borrows immutably before the nested call gets made, it doesn't work.</p>\n\n<p>The above is a contrived example. My actual use case is for a parser, where I\"m writing something like:</p>\n\n<pre><code>self.expecting(self.parse_string(\"Carrots McDougal\"), \"a good pony name\")?;\n</code></pre>\n\n<p><code>parse_string</code> mutates the parser by moving it forward in the source string, and <code>expecting</code> only needs to read from it in order to print out the portion of the source text that was seen instead of expected.</p>\n\n<p>Ideally I wouldn't have to make temporary variables each time I do this.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537959638, "post_id": 52516145, "comment_id": 91971853, "body": "Please provide a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. It is not clear what changes you have made to the code that led to the second error message."}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537959698, "post_id": 52516145, "comment_id": 91971880, "body": "@E_net4: I only followed compiler&#39;s instructions, as I mentioned in my post."}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537959880, "post_id": 52516145, "comment_id": 91971981, "body": "I noticed that using .clone() also helps, but I&#39;m lost on why."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1537962470, "post_id": 52516145, "comment_id": 91973492, "body": "Write the type ascriptions <b>only</b> when the compiler cannot infer the types. Otherwise, you lose in productivity and clutter your code with useless stuff."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537964182, "post_id": 52516145, "comment_id": 91974540, "body": "What I usally do, when I want a specific argument from env (and only one, because elsewise it will be not efficient) <code>let arg = env::args().nth(1).expect(&quot;Give me an argument!&quot;)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 0, "creation_date": 1537962754, "post_id": 52516216, "comment_id": 91973650, "body": "Thanks! Is there something that could be reported for Rust compiler so that it would give more intuitive error messages in this case?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "edited": false, "score": 5, "creation_date": 1537963564, "post_id": 52516216, "comment_id": 91974152, "body": "@d33tah I&#39;m not sure it is possible to improve this specific case - the compiler is actually doing its best, taken into account the requirements given <i>specifically</i> by the user (manual type ascription). My recommendation is to take advantage of Rust&#39;s type inference and - in most cases - just let the compiler pick the types; ascribe them by hand only when prompted or confident."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1537961743, "last_edit_date": 1537961743, "creation_date": 1537959650, "answer_id": 52516216, "question_id": 52516145, "link": "https://stackoverflow.com/questions/52516145/why-cant-i-pass-a-string-from-envargs-to-pathnew/52516216#52516216", "title": "Why can&#39;t I pass a String from env::Args to Path::new?", "body": "<p>This was indeed an unfortunate sequence of suggestions (use a reference > remove that reference), but this was caused by the manual type ascription related to <code>out_path</code>.</p>\n\n<p>You want a string slice, not an owned <code>String</code>:</p>\n\n<pre><code>let out_path: &amp;str = &amp;args[2];\n</code></pre>\n\n<p>This fits both the restriction of <code>args</code> (you can't move out of indexed content) and the requirements of <code>Path::new</code>, which requires a reference.</p>\n\n<p>As for your comment, a <code>clone()</code> \"fixes\" the <code>cannot move out of indexed content</code> error because it doesn't require a move from the <code>args</code> vector - it copies an element from it instead. This fix is of course inferior to just borrowing it, which also works with <code>Path::new</code>.</p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1537963956, "creation_date": 1537959466, "last_edit_date": 1537963956, "question_id": 52516145, "link": "https://stackoverflow.com/questions/52516145/why-cant-i-pass-a-string-from-envargs-to-pathnew", "title": "Why can&#39;t I pass a String from env::Args to Path::new?", "body": "<p>Consider the following example:</p>\n\n<pre><code>use std::env;\nuse std::path::Path;\n\nfn main() {\n    let args: Vec&lt;_&gt; = env::args().collect();\n    let out_path: String = args[2];\n    let _path = Path::new(out_path);\n}\n</code></pre>\n\n<p>Here's the error I'm getting while compiling:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; main.rs:8:27\n  |\n8 |     let _path = Path::new(out_path);\n  |                           ^^^^^^^^\n  |                           |\n  |                           expected reference, found struct `std::string::String`\n  |                           help: consider borrowing here: `&amp;out_path`\n  |\n  = note: expected type `&amp;_`\n             found type `std::string::String`\n</code></pre>\n\n<p>Now if I follow compiler's suggestion, I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of indexed content\n --&gt; main.rs:7:28\n  |\n7 |     let out_path: String = args[2];\n  |                            ^^^^^^^\n  |                            |\n  |                            cannot move out of indexed content\n  |                            help: consider using a reference instead: `&amp;args[2]`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Which, after applying the suggestion, leads me to the previous error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; main.rs:7:28\n  |\n7 |     let out_path: String = &amp;args[2];\n  |                            ^^^^^^^^\n  |                            |\n  |                            expected struct `std::string::String`, found reference\n  |                            help: consider removing the borrow: `args[2]`\n  |\n  = note: expected type `std::string::String`\n             found type `&amp;std::string::String`\n</code></pre>\n\n<p>How can I understand the situation and solve the problem?</p>\n"}, {"tags": ["rust", "operators"], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 0, "last_activity_date": 1537959287, "creation_date": 1537959287, "answer_id": 52516091, "question_id": 52515543, "link": "https://stackoverflow.com/questions/52515543/rust-custom-indexable-data-types/52516091#52516091", "title": "rust custom indexable data types", "body": "<p>Yes, the traits are called <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\"><code>IndexMut</code></a>.</p>\n"}], "owner": {"reputation": 128, "user_id": 6938528, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e47378d6ec9953eef195f56b30fcef1?s=128&d=identicon&r=PG&f=1", "display_name": "jonathan-dev", "link": "https://stackoverflow.com/users/6938528/jonathan-dev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 723, "favorite_count": 0, "closed_date": 1537960172, "answer_count": 1, "score": 0, "last_activity_date": 1537960105, "creation_date": 1537957552, "last_edit_date": 1537960105, "question_id": 52515543, "link": "https://stackoverflow.com/questions/52515543/rust-custom-indexable-data-types", "closed_reason": "Duplicate", "title": "rust custom indexable data types", "body": "<p>Is it possible to create custom data types in rust that can be indexed like Vec and Slice? If yes which Traits do I need to implement?</p>\n\n<p>Example for indexed access:</p>\n\n<pre><code>let mut vec = vec![1, 2, 3];\nassert_eq!(vec[1], 2);\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 6, "creation_date": 1537962953, "post_id": 52517132, "comment_id": 91973768, "body": "We do have <a href=\"https://doc.rust-lang.org/1.29.1/src/std/io/impls.rs.html#20-45\" rel=\"nofollow noreferrer\">the equivalent</a> for <code>Read</code>. However, unlike <code>Iterator</code>, the <code>Read</code> trait isn&#39;t in prelude, so you&#39;ll need to <code>use std::io::Read</code> to use this impl."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537974226, "post_id": 52517132, "comment_id": 91981265, "body": "Please explain why OP gets the specific error they do before <code>Read</code> is in scope."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1538048691, "post_id": 52517132, "comment_id": 92011772, "body": "@Shepmaster I added a somewhat lengthy explanation in a separate answer.  I&#39;m sure you know the reason, but anyway, you asked. :)"}], "tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": true, "score": 8, "last_activity_date": 1537963566, "last_edit_date": 1537963566, "creation_date": 1537962798, "answer_id": 52517132, "question_id": 52515361, "link": "https://stackoverflow.com/questions/52515361/why-does-the-usage-of-by-ref-take-differ-between-the-iterator-and-read-trait/52517132#52517132", "title": "Why does the usage of by_ref().take() differ between the Iterator and Read traits?", "body": "<p><a href=\"https://doc.rust-lang.org/src/core/iter/iterator.rs.html#2563-2570\" rel=\"noreferrer\"><code>impl&lt;'a, I: Iterator + ?Sized&gt; Iterator for &amp;'a mut I</code></a> is the reason why the first function compiles. It implements <code>Iterator</code> for all mutable references to iterators.</p>\n\n<p>The <code>Read</code> trait <a href=\"https://doc.rust-lang.org/1.29.1/src/std/io/impls.rs.html#20-45\" rel=\"noreferrer\">has the equivalent</a>, but, unlike <code>Iterator</code>, the <code>Read</code> trait isn't in <a href=\"https://doc.rust-lang.org/std/prelude/index.html\" rel=\"noreferrer\">the prelude</a>, so you'll need to <code>use std::io::Read</code> to use this impl:</p>\n\n<pre><code>use std::io::Read; // remove this to get \"cannot move out of borrowed content\" err\n\nfn foo&lt;I, T&gt;(iter: &amp;mut I)\nwhere\n    I: std::iter::Iterator&lt;Item = T&gt;,\n{\n    let _y = iter.take(2);\n}\n\nfn bar&lt;I&gt;(iter: &amp;mut I)\nwhere\n    I: std::io::Read,\n{\n    let _y = iter.take(2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b3bfe74fbb6b1c790f8303952272989d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 8, "last_activity_date": 1538044017, "creation_date": 1538044017, "answer_id": 52534876, "question_id": 52515361, "link": "https://stackoverflow.com/questions/52515361/why-does-the-usage-of-by-ref-take-differ-between-the-iterator-and-read-trait/52534876#52534876", "title": "Why does the usage of by_ref().take() differ between the Iterator and Read traits?", "body": "<p>This is indeed a confusing error message, and the reason you get it is rather subtle.  The <a href=\"https://stackoverflow.com/a/52517132/279627\">answer by ozkriff</a> correctly explains that this is because the <code>Read</code> trait is not in scope.  I'd like to add a bit more context, and an explanation why you are getting the specific error you see, rather than an error that the method wasn't found.</p>\n\n<p>The <code>take()</code> method on <code>Read</code> and <code>Iterator</code> takes <code>self</code> by value, or in other words, it consumes its receiver.  This means you can only call it if you have ownership of the receiver.  The functions in your question accept <code>iter</code> by mutable reference, so they don't own the underlying <code>I</code> object, so you can't call <code>&lt;Iterator&gt;::take()</code> or <code>&lt;Read&gt;::take()</code> for the underlying object.</p>\n\n<p>However, as pointed out by ozkriff, the standard library provides \"forwarding\" implementations of <code>Iterator</code> and <code>Read</code> for mutable references to types that implement the respective traits.  When you call <code>iter.take(2)</code> in your first function, you actually end up calling <code>&lt;&amp;mut Iterator&lt;Item = T&gt;&gt;::take(iter, 2)</code>, which only consumes your mutable reference to the iterator, not the iterator itself.  This is perfectly valid; while the function can't consume the iterator itself since it does not own it, the function does own the reference.  In the second function, however, you end up calling <code>&lt;Read&gt;::take(*iter, 2)</code>, which tries to consume the underlying reader.  Since you don't own that reader, you get an error message explaining that you can't move it out of the borrowed context.</p>\n\n<p>So why does the second method call resolve to a different method?  The answer by ozkriff already explains that this happens because the <code>Iterator</code> trait is in the standard prelude, while the <code>Read</code> trait isn't in scope by default.  Let's look at the method lookup in more detail.  It is documented in the section <a href=\"https://doc.rust-lang.org/beta/reference/expressions/method-call-expr.html\" rel=\"noreferrer\">\"Method call expressions\"</a> of the Rust language reference:</p>\n\n<blockquote>\n  <p>The first step is to build a list of candidate receiver types. Obtain these by repeatedly dereferencing the receiver expression's type, adding each type encountered to the list, then finally attempting an unsized coercion at the end, and adding the result type if that is successful. Then, for each candidate <code>T</code>, add <code>&amp;T</code> and <code>&amp;mut T</code> to the list immediately after <code>T</code>.</p>\n</blockquote>\n\n<p>According to this rule, our list of candidate types is</p>\n\n<pre><code>&amp;mut I, &amp;&amp;mut I, &amp;mut &amp;mut I, I, &amp;I, &amp;mut I\n</code></pre>\n\n<blockquote>\n  <p>Then, for each candidate type <code>T</code>, search for a visible method with a receiver of that type in the following places:</p>\n  \n  <ol>\n  <li><p><code>T</code>'s inherent methods (methods implemented directly on <code>T</code>).</p></li>\n  <li><p>Any of the methods provided by a visible trait implemented by <code>T</code>. If <code>T</code> is a type parameter, methods provided by trait bounds on <code>T</code> are looked up first. Then all remaining methods in scope are looked up.</p></li>\n  </ol>\n</blockquote>\n\n<p>For the case <code>I: Iterator</code>, this process starts with looking up a <code>take()</code> method on <code>&amp;mut I</code>.  There are no inherent methods on <code>&amp;mut I</code>, since <code>I</code> is a generic type, so we can skip step 1.  In step 2, we first look up methods on trait bounds for <code>&amp;mut I</code>, but there are only trait bounds for <code>I</code>, so we move on to looking up <code>take()</code> on all remaining methods in scope.  Since <code>Iterator</code> is in scope, we indeed find the forwarding implementation from the standard library, and can stop processing our list of candidate types.</p>\n\n<p>For the second case, <code>I: Read</code>, we also start with <code>&amp;mut I</code>, but since <code>Read</code> is not in scope, we won't see the forwarding implementation.  Once we get to <code>I</code> in our list of candidate types, though, the clause on methods provided by trait bounds kicks in: they are looked up first, regardless of whether the trait is in scope.  <code>I</code> has a trait bound of <code>Read</code>, so <code>&lt;Read&gt;::take()</code> is found.  As we have seen above, calling this method causes the error message.</p>\n\n<p>In summary, traits must be in scope to use their methods, but methods on trait bounds can be used even if the trait isn't in scope.</p>\n"}], "owner": {"reputation": 4135, "user_id": 1336234, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/078607c20f8ed7fee9f786bf2b19a4f9?s=128&d=identicon&r=PG", "display_name": "OlegTheCat", "link": "https://stackoverflow.com/users/1336234/olegthecat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 629, "favorite_count": 2, "accepted_answer_id": 52517132, "answer_count": 2, "score": 12, "last_activity_date": 1538044017, "creation_date": 1537957021, "last_edit_date": 1537970783, "question_id": 52515361, "link": "https://stackoverflow.com/questions/52515361/why-does-the-usage-of-by-ref-take-differ-between-the-iterator-and-read-trait", "title": "Why does the usage of by_ref().take() differ between the Iterator and Read traits?", "body": "<p>Here are two functions:</p>\n\n<pre><code>fn foo&lt;I&gt;(iter: &amp;mut I)\nwhere\n    I: std::iter::Iterator&lt;Item = u8&gt;,\n{\n    let x = iter.by_ref();\n    let y = x.take(2);\n}\n\nfn bar&lt;I&gt;(iter: &amp;mut I)\nwhere\n    I: std::io::Read,\n{\n    let x = iter.by_ref();\n    let y = x.take(2);\n}\n</code></pre>\n\n<p>While the first compiles fine, the second gives the compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:14:13\n   |\n14 |     let y = x.take(2);\n   |             ^ cannot move out of borrowed content\n</code></pre>\n\n<p>The signatures of <code>by_ref</code> and <code>take</code> are almost identical in <code>std::iter::Iterator</code> and <code>std::io::Read</code> traits, so I supposed that if the first one compiles, the second will compile too. Where am I mistaken?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537949003, "post_id": 52511497, "comment_id": 91965322, "body": "&quot;It works fine, but I wanted to do it without an arbitrarily sized intermediate buffer&quot;, I&#39;m <a href=\"https://doc.rust-lang.org/stable/src/std/io/util.rs.html#48-68\" rel=\"nofollow noreferrer\">sure</a> <code>copy()</code> also use a buffer so I don&#39;t see any improvement. <code>take()</code> take... the ownership of self you can&#39;t &quot;cheat&quot; with <code>by_ref()</code>. But it could be nice to have such functionality in std you could ask it with an issue on github."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537949266, "post_id": 52511497, "comment_id": 91965463, "body": "(by the way, you first snipped could avoid use of magic number with <code>buffer.len()</code>)"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537950024, "post_id": 52511497, "comment_id": 91965925, "body": "@Stargateur: My hope would be that the standard library implementers could potentially take advantage of implementation details that they are more familiar with. For example, perhaps the reader is already using an internal buffer, and it could copy directly from that."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537950752, "post_id": 52511497, "comment_id": 91966340, "body": "When you read and write you always need at least one buffer, an OS can&#39;t directly copy n byte from a disk to an another without. So OS ask you the buffer when you read, and write, so there is no performance loose. One type where you have a little loose is for networking because OS use an internal buffer to handle incoming packet until you ask them, but that also not to concern about because it impossible to avoid this second buffer because incoming packet could come while you are process previous. Don&#39;t worry use a buffer is the way to do it."}, {"owner": {"reputation": 4135, "user_id": 1336234, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/078607c20f8ed7fee9f786bf2b19a4f9?s=128&d=identicon&r=PG", "display_name": "OlegTheCat", "link": "https://stackoverflow.com/users/1336234/olegthecat"}, "edited": false, "score": 0, "creation_date": 1537967440, "post_id": 52511497, "comment_id": 91976658, "body": "Your question made me think about another one: <a href=\"https://stackoverflow.com/questions/52515361/why-by-ref-take-usage-differs-for-iterator-and-read\" title=\"why by ref take usage differs for iterator and read\">stackoverflow.com/questions/52515361/&hellip;</a>. The answer there may be helpful."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537970487, "post_id": 52511497, "comment_id": 91978663, "body": "From the duplicate: <code>io::copy(&amp;mut input.by_ref().take(5), &amp;mut output)?;</code> A <a href=\"https://play.rust-lang.org/?gist=98a3c141754464d3f30154f172843167&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">complete example</a>. To use a function from a trait, the trait must be in scope."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1537949404, "post_id": 52512905, "comment_id": 91965548, "body": "What if your file is big ? That not recommended to read and write file with a buffer of the size of the file."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537949590, "post_id": 52512905, "comment_id": 91965667, "body": "You&#39;re right. Would be writing one byte by an other be a better solution? :/ <code>C++</code> does it that way"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537949798, "post_id": 52512905, "comment_id": 91965781, "body": "I doubt that C++ copy byte by byte, a good solution is already present in the question, the buffer size is generally 1 or 2 pages size so 4096 or 8192. In this case OP choice 4 pages size."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537949970, "post_id": 52512905, "comment_id": 91965899, "body": "<a href=\"https://github.com/llvm-mirror/libcxx/blob/master/include/algorithm#L1701-L1725\" rel=\"nofollow noreferrer\">github.com/llvm-mirror/libcxx/blob/master/include/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537951574, "post_id": 52512905, "comment_id": 91966810, "body": "Yes but this is in case the iterator can&#39;t be randomly access... just after there is an implementation that don&#39;t copy byte by byte for randomly access iterator. Any language couldn&#39;t do better."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537955746, "post_id": 52512905, "comment_id": 91969526, "body": "@Stargateur It&#39;s not just that, the OutputIterator in this case can be anything at all too, there&#39;s actually just no way to write multiple things at once to an arbitrary OutputIterator. <code>std::io::{Read,Write}</code> provide a better abstraction for IO specifically, at the cost of being less general. So yeah, no, the C++ implementation can&#39;t really do better with what it&#39;s trying to do."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": -3, "last_activity_date": 1537949224, "creation_date": 1537949224, "answer_id": 52512905, "question_id": 52511497, "link": "https://stackoverflow.com/questions/52511497/how-to-directly-copy-limited-bytes-from-reader-to-writer/52512905#52512905", "title": "How to directly copy limited bytes from reader to writer", "body": "<p>My implementation of <code>copy_n</code> would look like this (<a href=\"https://play.rust-lang.org/?gist=33141830a489fd602946d3b0f48fbbd6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>pub fn copy_n&lt;R: ?Sized, W: ?Sized&gt;(reader: &amp;mut R, writer: &amp;mut W, count: usize) -&gt; io::Result&lt;()&gt;\n    where R: Read, W: Write\n{        \n    let mut buf = vec![];\n    unsafe { \n        buf.reserve(count); \n        buf.set_len(count);\n    }\n\n    reader.read_exact(&amp;mut buf)?;\n    writer.write_all(&amp;buf)?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>This solution just uses <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\" rel=\"nofollow noreferrer\"><code>read_exact</code></a> and <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\" rel=\"nofollow noreferrer\"><code>write_all</code></a>, which guarantee, that the complete buffer is read/written, or an error occurs, so it should be fine.</p>\n"}, {"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": -1, "last_activity_date": 1537956360, "creation_date": 1537956360, "answer_id": 52515165, "question_id": 52511497, "link": "https://stackoverflow.com/questions/52511497/how-to-directly-copy-limited-bytes-from-reader-to-writer/52515165#52515165", "title": "How to directly copy limited bytes from reader to writer", "body": "<p>I don't think you're going to get <em>much</em> better than that with just the generic <code>Read</code>/<code>Write</code> interfaces (except you probably shouldn't use <code>read_exact</code> in the case where you're ok with filling the entire buffer, that might lead to blocking unnecessarily).</p>\n\n<p>You might be able to specialise it for specific <code>Read</code>s and <code>Write</code>s though, for example you might be able to use Kernel functions (like <a href=\"http://man7.org/linux/man-pages/man2/sendfile.2.html\" rel=\"nofollow noreferrer\"><code>sendfile</code></a> when reading from and writing to file descriptors in Linux) which might allow you to avoid having to copy things through userspace unnecessarily.</p>\n"}], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 540, "favorite_count": 0, "closed_date": 1537970106, "answer_count": 2, "score": 3, "last_activity_date": 1537971876, "creation_date": 1537944282, "last_edit_date": 1537970265, "question_id": 52511497, "link": "https://stackoverflow.com/questions/52511497/how-to-directly-copy-limited-bytes-from-reader-to-writer", "closed_reason": "Duplicate", "title": "How to directly copy limited bytes from reader to writer", "body": "<p>I was trying to write a function that copies a user-specified number of bytes from a reader to a writer, and I came up with this:</p>\n\n<pre><code>fn io_copy(\n    reader: &amp;mut std::io::Read,\n    writer: &amp;mut std::io::Write,\n    byte_count: usize,\n) -&gt; std::io::Result&lt;()&gt; {\n    let mut buffer: [u8; 16384] = unsafe { std::mem::uninitialized() };\n    let mut remaining = byte_count;\n    while remaining &gt; 0 {\n        let to_read = if remaining &gt; 16384 { 16384 } else { remaining };\n\n        reader.read_exact(&amp;mut buffer[0..to_read])?;\n        remaining -= to_read;\n        writer.write(&amp;buffer[0..to_read])?;\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>It works fine, but I wanted to do it without an arbitrarily sized intermediate buffer, and I wondered if such a function already existed. I found <a href=\"https://doc.rust-lang.org/stable/std/io/fn.copy.html\" rel=\"nofollow noreferrer\"><code>std::io::copy</code></a>, but that copies the whole stream, and I only want to copy a limited amount. I figured I could use <code>take</code> on the reader, but I'm having trouble getting rid of errors. This is what I have so far:</p>\n\n<pre><code>fn io_copy&lt;R&gt;(reader: &amp;mut R, writer: &amp;mut std::io::Write, byte_count: usize) -&gt; std::io::Result&lt;()&gt;\nwhere\n    R: std::io::Read + Sized,\n{\n    let mut r = reader.by_ref().take(byte_count as u64);\n    std::io::copy(&amp;mut r, writer)?;\n    Ok(())\n}\n</code></pre>\n\n<p>This gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/lib.rs:6:21\n  |\n6 |         let mut r = reader.by_ref().take(byte_count as u64);\n  |                     ^^^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I don't understand how to get around this.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1537880522, "post_id": 52497793, "comment_id": 91938187, "body": "<i>&quot;= note: to learn more, visit <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/second-edition/&hellip;</a> &quot;</i>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1537881234, "post_id": 52497793, "comment_id": 91938687, "body": "<a href=\"https://docs.rs/termion/1.5.1/termion/color/trait.Color.html\" rel=\"nofollow noreferrer\"><code>termion::color::Color</code></a> is a trait, making <code>Color</code> (or <code>dyn Color</code>) a dynamically sized type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537888138, "post_id": 52497793, "comment_id": 91943444, "body": "Use <code>bg_white: Bg&lt;Rgb&gt; = Bg(Rgb(255, 255, 255))</code> / <code>bg_reset: Bg&lt;Reset&gt; = Bg(Reset)</code> instead. <a href=\"https://play.rust-lang.org/?gist=a4203e0c6f8be9e6e64a34930662bfa4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 7202, "user_id": 2491, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/00f2c9b243b278d2ba50bc1aeeccc642?s=128&d=identicon&r=PG&f=1", "display_name": "Svend", "link": "https://stackoverflow.com/users/2491/svend"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537889043, "post_id": 52497793, "comment_id": 91944003, "body": "@Shepmaster That&#39;s an interesting answer. Seems to me that it should be 100% equivalent, but there&#39;s obviously something different. Seems extra things get pulled in somehow by the different use statement?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537889366, "post_id": 52497793, "comment_id": 91944176, "body": "That&#39;s just because it felt ugly to repeat so much. You can write the <a href=\"https://play.rust-lang.org/?gist=5b073ce1e0e657ef5da0a407fabf6be7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">spelled-out version</a> as well."}], "owner": {"reputation": 7202, "user_id": 2491, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/00f2c9b243b278d2ba50bc1aeeccc642?s=128&d=identicon&r=PG&f=1", "display_name": "Svend", "link": "https://stackoverflow.com/users/2491/svend"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "closed_date": 1537887954, "answer_count": 0, "score": 0, "last_activity_date": 1537888025, "creation_date": 1537876942, "last_edit_date": 1537888025, "question_id": 52497793, "link": "https://stackoverflow.com/questions/52497793/the-size-for-values-of-type-x-cannot-be-known-at-compilation-time", "closed_reason": "Duplicate", "title": "the size for values of type X cannot be known at compilation time", "body": "<p>I'm trying out Rust and struggling with many basic things such as the errors themselves. I have the following code (using Termion lib, but I'm sure that's irrelevant)</p>\n\n<pre><code>extern crate termion;\n\nuse termion::color;\n\nstatic bg_white: color::Bg&lt;color::Color&gt; = color::Bg(color::Rgb(255, 255, 255));\nstatic bg_reset: color::Bg&lt;color::Color&gt; = color::Bg(color::Reset);\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>When I compile this using <code>cargo run</code>, I get these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn termion::color::Color + 'static)` cannot be known at compilation time\n --&gt; src/main.rs:5:1\n  |\n5 | static bg_white: color::Bg&lt;color::Color&gt; = color::Bg(color::Rgb(255, 255, 255));\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `(dyn termion::color::Color + 'static)`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n  = note: required by `termion::color::Bg`\n\nerror[E0277]: the size for values of type `(dyn termion::color::Color + 'static)` cannot be known at compilation time\n --&gt; src/main.rs:6:1\n  |\n6 | static bg_reset: color::Bg&lt;color::Color&gt; = color::Bg(color::Reset);\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `(dyn termion::color::Color + 'static)`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n  = note: required by `termion::color::Bg`\n</code></pre>\n\n<p>How do these errors come about, and what I can do to resolve them?</p>\n"}, {"tags": ["c#", "rust", "pinvoke", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537888692, "post_id": 52496501, "comment_id": 91943791, "body": "Your question is reasonable, but I&#39;d say the code example provided doesn&#39;t make sense. There&#39;s no <i>reason</i> to take ownership of the <code>Box&lt;Vec&lt;f32&gt;&gt;</code> in either <code>push_to_vector</code> or <code>sum_vector</code>. If you simply changed these functions to <i>borrow</i> the data and restored the destructor, the code would be more performant (less unneeded (de-)allocation) and simpler. Is this just an artifact of creating a MCVE?"}, {"owner": {"reputation": 600, "user_id": 8028981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce2cd63034a741083a9ca961917c3c93?s=128&d=identicon&r=PG&f=1", "display_name": "Amos Egel", "link": "https://stackoverflow.com/users/8028981/amos-egel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537946646, "post_id": 52496501, "comment_id": 91964007, "body": "@Shepmaster Thanks for the hint! The example is pretty similar to what I actually do, except that it is not floats but structs and that the analog of <code>sum_vector</code> does some heavy calculation. Thus, performance of allocation / deallocation is not important. But I could still apply the changes that you suggest (i.e., only borrow the vector and finally use a destructor) in order to manage the pointer in C# with the <code>SafeHandle</code> class."}, {"owner": {"reputation": 600, "user_id": 8028981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce2cd63034a741083a9ca961917c3c93?s=128&d=identicon&r=PG&f=1", "display_name": "Amos Egel", "link": "https://stackoverflow.com/users/8028981/amos-egel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537966419, "post_id": 52496501, "comment_id": 91975979, "body": "@Shepmaster And how can I even push to the vector without taking ownership?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537968090, "post_id": 52496501, "comment_id": 91977118, "body": "<code>Vec::push</code> only takes a <code>&amp;mut Self</code> and <code>iter</code> only needs a <code>&amp;Self</code>. You <a href=\"https://play.rust-lang.org/?gist=6048282d021a31ca61f5e43157ee1366&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">can dereference and re-reference</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537973516, "post_id": 52496501, "comment_id": 91980783, "body": "<i>performance of allocation / deallocation is not important</i> \u2014 I would disagree, but only benchmarking can say for sure. My gut says that de-allocating and re-allocating memory for <i>every item you push</i> is extremely wasteful."}], "owner": {"reputation": 600, "user_id": 8028981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce2cd63034a741083a9ca961917c3c93?s=128&d=identicon&r=PG&f=1", "display_name": "Amos Egel", "link": "https://stackoverflow.com/users/8028981/amos-egel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 191, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1537973344, "creation_date": 1537872916, "last_edit_date": 1537973344, "question_id": 52496501, "link": "https://stackoverflow.com/questions/52496501/is-it-advisable-to-use-a-safehandle-when-calling-an-objects-method-also-destroy", "title": "Is it advisable to use a SafeHandle when calling an object&#39;s method also destroys the object?", "body": "<p>There is a Rust library that provides three functions: </p>\n\n<ul>\n<li>a constructor for a vector of floats</li>\n<li>a function to push a number to the vector</li>\n<li>a function that sums over the vector</li>\n</ul>\n\n<p>Like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn initialize_vector() -&gt; *mut Vec&lt;f32&gt; {\n    Box::into_raw(Box::new(Vec::&lt;f32&gt;::new()))\n}\n\n#[no_mangle]\npub extern \"C\" fn push_to_vector(ptr: *mut Vec&lt;f32&gt;, x: f32) -&gt; *mut Vec&lt;f32&gt; {\n    if ptr.is_null() { return ptr; }\n    let vector_box = unsafe { Box::from_raw(ptr) };\n    let mut example_vector = *vector_box;\n    example_vector.push(x);\n    Box::into_raw(Box::new(example_vector))\n}\n\n#[no_mangle]\npub extern \"C\" fn sum_vector(ptr: *mut Vec&lt;f32&gt;) -&gt; f32 {\n    if ptr.is_null() { return 0.0; }\n    let vector_box = unsafe { Box::from_raw(ptr) };\n    let example_vector = *vector_box;\n    return example_vector.iter().sum();\n}\n</code></pre>\n\n<p><code>initialize_vector</code> creates a <code>Vec</code> and wraps it in a <code>Box</code>, returning the raw pointer to the caller. The caller is now responsible for appropriately freeing the allocation.</p>\n\n<p><code>push_to_vector</code> takes ownership of the <code>Box&lt;Vec&lt;f32&gt;&gt;</code>, <a href=\"https://stackoverflow.com/q/42264041/155423\">moves the <code>Vec</code> out of the <code>Box</code></a>, freeing the memory allocated by <code>Box</code> in the process. It then adds an item to the vector, creates a brand new <code>Box</code> (with associated allocation) around the <code>Vec</code> and returns it.</p>\n\n<p><code>sum_vector</code> also takes ownership of the <code>Box&lt;Vec&lt;f32&gt;&gt;</code>, moves the <code>Vec</code> out of the <code>Box</code> and frees the memory allocation. Since ownership of the <code>Vec</code> doesn't leave the function, Rust will automatically free the memory associated with the <code>Vec</code> when the function exits.</p>\n\n<p>The C# code that uses the library could look like this:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System;\nusing System.Runtime.InteropServices;\n\ninternal class Blabla\n{\n    [DllImport(\"Example\")]\n    unsafe static public extern IntPtr initialize_vector();\n\n    [DllImport(\"Example\")]\n    unsafe static public extern IntPtr push_to_vector(IntPtr ptr, float x);\n\n    [DllImport(\"Example\")]\n    unsafe static public extern float sum_vector(IntPtr ptr);\n\n    static public unsafe void Main()\n    {\n        IntPtr vec_ptr = initialize_vector();\n        vec_ptr = push_to_vector(vec_ptr, (float) 2.2);\n        vec_ptr = push_to_vector(vec_ptr, (float) 3.3);\n        float result = sum_vector(vec_ptr);\n        // is the memory allocated for the vector in Rust freed right now?\n        Console.WriteLine(string.Format(\"Result: {0}\", result));\n        Console.ReadLine();\n    }\n}\n</code></pre>\n\n<p>In general, it is recommended to use <code>SafeHandle</code> to finalize pointers returned by DLL functions, see e.g. <a href=\"https://stackoverflow.com/questions/155780/safehandle-in-c-sharp\">this question</a> or <a href=\"http://jakegoulding.com/rust-ffi-omnibus/objects/\" rel=\"nofollow noreferrer\">this example</a>. I understand that the purpose of <code>SafeHandle</code> is mostly to call a destructor in certain cases, when something unplanned happens. </p>\n\n<p>Since it is not necessary to free the Rust vector after the <code>sum_vector</code> function has been called, is it still advisable to use <code>SafeHandle</code> in the given situation, and if yes - how? Or can I just leave the code as it is and everything is fine?</p>\n"}, {"tags": ["syntax", "reference", "rust", "move-semantics", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1537866552, "post_id": 52494215, "comment_id": 91929387, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28158738/cannot-move-out-of-borrowed-content\">Cannot move out of borrowed content</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537866700, "post_id": 52494215, "comment_id": 91929481, "body": "Can you further describe what is confusing you in this particular example? <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">This section</a> of the book on ownership may help you understand what is happening. Moreover, there are <a href=\"https://stackoverflow.com/search?q=%5Brust%5D+cannot+move+out+of+borrowed+content\">dozens of other questions with that exact same error message</a>."}, {"owner": {"reputation": 33, "user_id": 8070445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fca67a973054db05471b2ac35c042ae2?s=128&d=identicon&r=PG", "display_name": "user8070445", "link": "https://stackoverflow.com/users/8070445/user8070445"}, "edited": false, "score": 0, "creation_date": 1537866813, "post_id": 52494215, "comment_id": 91929543, "body": "The below code compiles but whats wrong with the code in question &quot;fn main() {          let mut abc = 10;     let xyz =  &amp;abc;     let q = *xyz; }&quot;"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 8, "creation_date": 1537867383, "post_id": 52494215, "comment_id": 91929904, "body": "@user8070445 Numbers are <code>Copy</code> types, so they don&#39;t get moved. Your struct will be moved when it is assigned to a variable because it is not <code>Copy</code>."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1537974924, "creation_date": 1537974924, "answer_id": 52521086, "question_id": 52494215, "link": "https://stackoverflow.com/questions/52494215/understanding-de-referencing-using-in-rust/52521086#52521086", "title": "Understanding de-referencing using &#39;*&#39; in rust", "body": "<p>When you write <code>let a = b;</code> in Rust, the value of <code>b</code> is <em>moved</em> to <code>a</code>, and the variable <code>b</code> is no longer usable.</p>\n\n<p>In your case, <code>xyz</code> is a reference to <code>abc</code>, so <code>*xyz</code> is the same thing as <code>abc</code>. Moving <code>abc</code> is an error because the reference <code>xyz</code> still exists, but now is pointing at invalid memory.</p>\n\n<p>If you are confused why this didn't happen with a numeric type like <code>i32</code>, that's because most simple primitives implement the <code>Copy</code> trait. This is marker trait which tells the compiler to copy the value in memory, rather than move it. For small types, this can be the same performance as (or sometimes even better than) passing by reference.</p>\n\n<p>See:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/30288782/what-are-move-semantics-in-rust\">What are move semantics in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics\">How does Rust provide move semantics?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/35458562/how-can-i-implement-rusts-copy-trait\">How can I implement Rust&#39;s Copy trait?</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">Documentation of the <code>Copy</code> trait</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html#ways-variables-and-data-interact-move\" rel=\"nofollow noreferrer\">Discussion on moving in the ownership chapter of the Rust Book</a></li>\n</ul>\n"}], "owner": {"reputation": 33, "user_id": 8070445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fca67a973054db05471b2ac35c042ae2?s=128&d=identicon&r=PG", "display_name": "user8070445", "link": "https://stackoverflow.com/users/8070445/user8070445"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 1, "accepted_answer_id": 52521086, "answer_count": 1, "score": 0, "last_activity_date": 1546956327, "creation_date": 1537865679, "last_edit_date": 1546956327, "question_id": 52494215, "link": "https://stackoverflow.com/questions/52494215/understanding-de-referencing-using-in-rust", "title": "Understanding de-referencing using &#39;*&#39; in rust", "body": "<pre><code>struct Abc {\n    a: i32,\n}\n\nfn main() {\n    let mut abc = Abc { a: 30 };\n    let xyz = &amp;abc;\n    let q = *xyz;\n}\n</code></pre>\n\n<p>Compiling the code gives following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:11:13\n   |\n11 |     let q = *xyz;\n   |             ^^^^\n   |             |\n   |             cannot move out of borrowed content\n   |             help: consider using a reference instead: `&amp;*xyz`\n</code></pre>\n\n<p>Please help me understand what is going wrong here.</p>\n"}, {"tags": ["c++", "data-structures", "floating-point", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1537857963, "post_id": 52492038, "comment_id": 91924764, "body": "<code>int epsilon = 0.001;</code> =&gt; if you provide snipped please read <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 6533, "user_id": 1918193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b70a14318e0f417ecac47809f38fafc?s=128&d=identicon&r=PG", "display_name": "Marc Glisse", "link": "https://stackoverflow.com/users/1918193/marc-glisse"}, "edited": false, "score": 0, "creation_date": 1537858699, "post_id": 52492038, "comment_id": 91925179, "body": "(side remark) Note that your <code>less</code> does not define a valid order for use in <code>std::map</code>, according to the C++ standard."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1537859462, "post_id": 52492038, "comment_id": 91925621, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/39638363/how-can-i-use-a-hashmap-with-f64-as-key-in-rust\">How can I use a HashMap with f64 as key in Rust?</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537859513, "post_id": 52492038, "comment_id": 91925640, "body": "Your question is not about finding an element in a hashmap/btree (that&#39;s easy, just use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\"><code>find</code></a> on the iterator), but instead how to use a float/double as a key in a hashmap."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537860079, "post_id": 52492038, "comment_id": 91925923, "body": "@hellow except that <code>find</code> on the iterator uses linear time, whereas a binary tree allows for logarithmic time."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537860851, "post_id": 52492038, "comment_id": 91926338, "body": "That&#39;s right Jmb, I think that should be improved. I opened an <a href=\"https://github.com/rust-lang/rust/issues/54550\" rel=\"nofollow noreferrer\">issue on Github</a>, thanks!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1537876830, "post_id": 52492038, "comment_id": 91935694, "body": "Unfortunately, your C++ code is flawed: <code>less</code> is not transitive. For example, <a href=\"http://cpp.sh/2mq5e\" rel=\"nofollow noreferrer\">if you follow this link</a> you&#39;ll see I sort a vector <code>{ 2.0, 1.0, 0.0 }</code> with an epsilon of 1.0; the resulting &quot;sorted&quot; vector is <code>{ 0.0, 2.0, 1.0 }</code> even though according to <code>less</code> both <code>0.0</code> and <code>1.0</code> are equal and therefore should be adjacent. In general, epsilon-based comparisons are not transitive, and therefore cannot be used to define an order that <code>sort</code> or <code>map</code> can use."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537861691, "post_id": 52492980, "comment_id": 91926765, "body": "There is a reason that f64 does not implement <code>Ord</code> and you should not blindly implement it. This will lead to various errors! (Think what will happen in case of <code>Inf</code> or <code>Nan</code>)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537861898, "post_id": 52492980, "comment_id": 91926877, "body": "@hellow Yes, but that not me who want to do that."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537862280, "post_id": 52492980, "comment_id": 91927066, "body": "But you are pointing into that direction. You should not suggest a &quot;wrong&quot; solution. For a specific reason why one should not do this, please read <a href=\"https://stackoverflow.com/questions/39638363/how-can-i-use-a-hashmap-with-f64-as-key-in-rust\" title=\"how can i use a hashmap with f64 as key in rust\">stackoverflow.com/questions/39638363/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1537862480, "post_id": 52492980, "comment_id": 91927180, "body": "Your newtype could enforce that infinities and NaN are not allowed, a bit like NonZeroUsize and friends. That would remove the UB."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537863755, "post_id": 52492980, "comment_id": 91927824, "body": "@PeterHall This is not enough NaN and other is not the only problem, Ord require &quot;transitive, a &lt; b and b &lt; c implies a &lt; c. The same must hold for both == and &gt;.&quot; with this code we can have a == b equal to true, b == c also equal to true but a == c could be false. But <a href=\"https://play.rust-lang.org/?gist=8b803eb567b4c0689ff2f773d6161013&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here</a> my attempt to make the code unreadable ;) so whatever this is impossible to make for a BTreeMap. The type is simple not designed for this kind a data."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537864221, "post_id": 52492980, "comment_id": 91928072, "body": "@Stargateur Oh yeah, I forgot about the symmetry with =="}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537865776, "post_id": 52492980, "comment_id": 91928926, "body": "@Stargateur The documentation on both <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a> and <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html\" rel=\"nofollow noreferrer\"><code>PartialOrd</code></a> require that implementing types satisfy transitivity. Are you implying that floating point types are erroneously implementing these traits?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537866745, "post_id": 52492980, "comment_id": 91929505, "body": "@E_net4 No, but standard just compare with strict equality but it&#39;s quite pointless for floating number. I just said that if you use an epsilon value you can&#39;t have transitivity."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": -2, "last_activity_date": 1537861847, "last_edit_date": 1537861847, "creation_date": 1537861151, "answer_id": 52492980, "question_id": 52492038, "link": "https://stackoverflow.com/questions/52492038/is-there-an-equivalent-to-c-comparator-objects-for-btreemap-and-other-things-t/52492980#52492980", "title": "Is there an equivalent to C++ comparator objects for BTreeMap and other things that rely on Ord?", "body": "<p>I think you should use your own type and implement yourself Ord trait:</p>\n\n<pre><code>#[derive(PartialOrd, Debug)]\nstruct MyNumber {\n    value: f64,\n}\n\nimpl MyNumber {\n    const EPSILON: f64 = 0.001;\n    fn new(value: f64) -&gt; Self {\n        Self { value }\n    }\n}\n\nimpl PartialEq for MyNumber {\n    fn eq(&amp;self, other: &amp;MyNumber) -&gt; bool {\n        if f64::abs(self.value - other.value) &lt; MyNumber::EPSILON {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nimpl Eq for MyNumber {}\n\nuse std::cmp::Ordering;\n\nimpl Ord for MyNumber {\n    fn cmp(&amp;self, other: &amp;MyNumber) -&gt; Ordering {\n        if self == other {\n            Ordering::Equal\n        } else if self &lt; other {\n            Ordering::Less\n        } else {\n            Ordering::Greater\n        }\n    }\n}\n\nfn main() {\n    use std::collections::BTreeMap;\n\n    let mut map = BTreeMap::new();\n    map.insert(MyNumber::new(1.0), 1);\n    map.insert(MyNumber::new(2.0), 2);\n    map.insert(MyNumber::new(3.0), 3);\n\n    println!(\"{:?}\", map.get(&amp;MyNumber::new(1.0001)));\n}\n</code></pre>\n\n<p>But I think it doesn't match the requirement for a BTreeMap.</p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537861689, "post_id": 52493062, "comment_id": 91926760, "body": "There is a reason that f64 does not implement <code>Ord</code> and you should not blindly implement it. This will lead to various errors! (Think what will happen in case of <code>Inf</code> or <code>Nan</code>)"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537864626, "post_id": 52493062, "comment_id": 91928281, "body": "That issue is also present in the OP&#39;s C++ code. I&#39;ve edited the answer to make the limitations more apparent."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1537888079, "post_id": 52493062, "comment_id": 91943420, "body": "@Jmb: If there are issues in the OP code, then the appropriate answer is to correct the OP&#39;s assumptions (a frame challenge) rather than blindly reproduce the errors in the answer."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": -2, "last_activity_date": 1537864772, "last_edit_date": 1537864772, "creation_date": 1537861460, "answer_id": 52493062, "question_id": 52492038, "link": "https://stackoverflow.com/questions/52492038/is-there-an-equivalent-to-c-comparator-objects-for-btreemap-and-other-things-t/52493062#52493062", "title": "Is there an equivalent to C++ comparator objects for BTreeMap and other things that rely on Ord?", "body": "<p>The way to do that in rust is to wrap your key in a <a href=\"https://github.com/rust-unofficial/patterns/blob/master/patterns/newtype.md\" rel=\"nofollow noreferrer\">newtype</a> and implement <code>Ord</code> the way you want it:</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::collections::BTreeMap;\n\nconst EPSILON: f64 = 0.001;\n\nstruct MyFloat (f64);\n\nimpl Ord for MyFloat {\n    fn cmp (&amp;self, other: &amp;MyFloat) -&gt; Ordering {\n        if (self.0 - other.0).abs() &lt; EPSILON {\n            // I assume that this is what you wanted even though the C++ example\n            // does the opposite\n            Ordering::Equal\n        } else if self.0 &lt; other.0 {\n            Ordering::Less\n        } else {\n            Ordering::Greater\n        }\n    }\n}\n\nimpl PartialOrd for MyFloat {\n    fn partial_cmp (&amp;self, other: &amp;MyFloat) -&gt; Option&lt;Ordering&gt; {\n        Some (self.cmp (other))\n    }\n}\n\nimpl PartialEq for MyFloat {\n    fn eq (&amp;self, other: &amp;MyFloat) -&gt; bool {\n        (self.0 - other.0).abs() &lt; EPSILON\n    }\n}\n\nimpl Eq for MyFloat {}\n\nfn main() {\n    let mut map = BTreeMap::new();\n    map.insert (MyFloat (1.0), 1);\n    map.insert (MyFloat (2.0), 2);\n    map.insert (MyFloat (3.0), 3);\n\n    let found = map.get (&amp;MyFloat (1.00001));\n    println!(\"Found: {:?}\", found);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=680e4ca8a0ba23770f7c4a270d9dec3e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Note that this will only work if the keys are finite and spaced by more than <code>EPSILON</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537876532, "post_id": 52496420, "comment_id": 91935500, "body": "<code>in_thousandths(std::f64::NAN)</code> -&gt; <code>Ratio { numer: -9223372036854775808, denom: 1000 }</code>. Still not a good one :( Float sucks!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537876589, "post_id": 52496420, "comment_id": 91935531, "body": "@hellow It&#39;s not UB though."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1537876675, "last_edit_date": 1537876675, "creation_date": 1537872695, "answer_id": 52496420, "question_id": 52492038, "link": "https://stackoverflow.com/questions/52492038/is-there-an-equivalent-to-c-comparator-objects-for-btreemap-and-other-things-t/52496420#52496420", "title": "Is there an equivalent to C++ comparator objects for BTreeMap and other things that rely on Ord?", "body": "<p>There is a reason why floating point types do not implement <code>Ord</code>. The internals of <code>BTreeMap</code> make assumptions about implementors of <code>Ord</code>, which allow it to be more efficient, but if those assumptions turn out to be incorrect, then it can lead to Undefined Behaviour, because these assumptions are relied upon in <code>unsafe</code> code. Floating points cannot satisfy these assumptions because of the existence of <code>NaN</code>, values that represent infinity and the nature of floating point arithmetic which means the \"same\" number can have different binary representations.</p>\n\n<p>Your C++ code is likely to suffer from the same issues, but sometimes code with Undefined Behaviour just seems to work. Until one day when it doesn't - that's just the nature of Undefined Behaviour!</p>\n\n<p>Floating points are good for representing measures or where the values can have massively varying orders of magnitude. If you do a calculation about the distances between cities and the numbers are off by a few nanometres, you don't care. You'll never have to find another city that is <em>exactly</em> the same distance as London is from New York. More likely you'll be happy to search for a city that is the same distance to the nearest 1 km - a number that you can compare as an integer.</p>\n\n<p>Which brings me to the question of <em>why</em> are you using floating point numbers as keys? What does it mean to you and what are you trying to store there? Is <code>f64::NAN</code> a value that you want to be valid? Is <code>45.00000000001</code> the \"same\" as <code>45.00000000001001</code>? Are you just as likely to be storing very large numbers as very tiny numbers? Is exact equality something that makes sense for these numbers? Are they the result of a computation, which could have rounding errors?</p>\n\n<p>It's not possible to tell you what to do here, but I can suggest that you look at your real problem and model it in a way that reflects your real constraints. If you only care about a specific precision, then round the numbers to that precision and store them in a <a href=\"https://crates.io/crates/fixed\" rel=\"noreferrer\">fixed-point type</a>, or an integer, or perhaps a <a href=\"https://crates.io/crates/num-rational\" rel=\"noreferrer\">rational</a>, all of which implement <code>Ord</code>.</p>\n\n<p>Based on your C++ code, it looks like you are happy with a precision of <code>0.001</code>. So you can store your keys as integers - you'll just have to remember to do the conversion and multiply/divide by 1000 as appropriate. You'll have to deal with the possibility of <code>NaN</code> and infinities, but you'll do it in safe code, so you won't have to worry about UB.</p>\n\n<p>Here is how you could use the <code>num-rational</code> crate to get something with similar behaviour to your C++ code:</p>\n\n<pre><code>extern crate num_rational; // 0.2.1\n\nuse num_rational::Rational64;\nuse std::collections::BTreeMap;\n\nfn in_thousandths(n: f64) -&gt; Rational64 {\n    // you may want to include further validation here to deal with `NaN` or infinities\n    let denom = 1000;\n    Rational64::new_raw((n * denom as f64) as i64, denom)\n}\n\nfn main() {\n    let mut map = BTreeMap::new();\n\n    map.insert(in_thousandths(1.0), 1);\n    map.insert(in_thousandths(2.0), 2);\n    map.insert(in_thousandths(3.0), 3);\n\n    let value = map.get(&amp;1.into());\n    assert_eq!(Some(&amp;1), value);\n}\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 10411568, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/008bea691aafb866dcb7e402af4c3b42?s=128&d=identicon&r=PG&f=1", "display_name": "jsadusk", "link": "https://stackoverflow.com/users/10411568/jsadusk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1547054667, "creation_date": 1537857605, "last_edit_date": 1547054667, "question_id": 52492038, "link": "https://stackoverflow.com/questions/52492038/is-there-an-equivalent-to-c-comparator-objects-for-btreemap-and-other-things-t", "title": "Is there an equivalent to C++ comparator objects for BTreeMap and other things that rely on Ord?", "body": "<p>I can't seem to accomplish the same things with the <code>Ord</code> trait that I was able to with C++ comparator objects. Take this simplification of more complicated scenarios for example:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>int epsilon = 0.001;\nauto less = [epsilon](const double a, const double b) {\n                if (fabs(a - b) &gt; epsilon) {\n                    return a &lt; b;\n                }\n                else {\n                    return false;\n                }\n            };\nstd::map&lt;float, int, decltype(less)&gt; myMap(less);\nmyMap.insert(std::make_pair(1.0, 1));\nmyMap.insert(std::make_pair(2.0, 2));\nmyMap.insert(std::make_pair(3.0, 3));\n\nauto found = myMap.find(1.0001);\nassert(found != myMap.end());\nassert(found-&gt;second == 1);\n</code></pre>\n\n<p>I want a comparator to have some runtime context, like an epsilon value. I can't figure out how you would do this with <code>BTreeMap</code> since I can't add state to the <code>Ord</code> trait. Is there some technique I haven't figured out yet to do the equivalent?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I had a typo in my example that prevented me from realizing the C++ didn't actually work. I'm reevaluating the problem.</p>\n"}, {"tags": ["rust", "traits"], "owner": {"reputation": 3792, "user_id": 904050, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/7e5ae1599008ffc96ccd44ad601a43dc?s=128&d=identicon&r=PG", "display_name": "user14717", "link": "https://stackoverflow.com/users/904050/user14717"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "closed_date": 1537883721, "answer_count": 0, "score": 1, "last_activity_date": 1537845060, "creation_date": 1537845060, "question_id": 52490049, "link": "https://stackoverflow.com/questions/52490049/rust-traits-required-to-get-an-algorithm-to-work-with-both-f32-and-f64-in-rust", "closed_reason": "Duplicate", "title": "Rust traits required to get an algorithm to work with both f32 and f64 in Rust", "body": "<p>I'm trying to write a generic linear interpolator that works on both <code>f32</code> and <code>f64</code>. My code is as follows:</p>\n\n<pre><code>#[derive(Debug)]\npub struct LinearInterpolation&lt;Real&gt;\n{\n    pub data: Vec&lt;Real&gt;,\n    pub start_time: Real,\n    pub time_step: Real,\n}\n\nuse std::convert::From;\n\nimpl&lt;Real&gt; LinearInterpolation&lt;Real&gt;\n    where Real: std::ops::Div&lt;Output = Real&gt; + std::ops::Sub&lt;Output=Real&gt; + std::cmp::PartialOrd + Default + Copy\n{\n    fn at(&amp;self, time: Real) -&gt; Real {\n        let diff: Real = Real::from(time - self.start_time);\n        if diff &lt; default::Default() {\n            panic!(\"This is really bad!\");\n        }\n        let index = diff/self.time_step;\n        let index = index.floor() as usize;\n        if index - 1 &gt;= self.data.len() {\n            panic!(\"Index is too large!\");\n        }\n        let y0 = self.data[index];\n        let y1 = self.data[index+1];\n        let slope = (y1 - y0)/self.time_step;\n        y0 + slope*diff\n    }\n}\n</code></pre>\n\n<p>However, I cannot get the <code>index.floor()</code> method to work. The compiler error message is</p>\n\n<pre><code>error[E0599]: no method named `floor` found for type `Real` in the current scope\n  --&gt; src/lib.rs:23:27\n   |\n23 |         let index = index.floor() as usize;\n   |                           ^^^^^\n</code></pre>\n\n<p>What traits should I add to get any floating point type to work with this generic? and more generally, what traits are required so that a generic numerical function, which calls standard numerical functions like <code>log</code>, <code>sin</code>, and <code>exp</code> compiles successfully?</p>\n"}, {"tags": ["rust", "template-engine", "tera", "zola"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537855418, "post_id": 52489873, "comment_id": 91923600, "body": "Your question has only a little to do with rust (the two frameworks are rust ones, but your code does not contain any rust at all), so I wouldn&#39;t tag it as rust, but because there is no Tera tag, I think it&#39;s okay?!"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537855570, "post_id": 52489873, "comment_id": 91923655, "body": "I have never used tera, but doing some research gave me <a href=\"https://tera.netlify.com/docs/templates/#filter\" rel=\"nofollow noreferrer\">tera.netlify.com/docs/templates/#filter</a> , which should answer your question (if I understood you correctly)."}, {"owner": {"reputation": 4013, "user_id": 919222, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/d1cde35fe1388d83f6b2e931b146ef8b?s=128&d=identicon&r=PG", "display_name": "ikevin8me", "link": "https://stackoverflow.com/users/919222/ikevin8me"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537865144, "post_id": 52489873, "comment_id": 91928574, "body": "I removed rust tag"}, {"owner": {"reputation": 4013, "user_id": 919222, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/d1cde35fe1388d83f6b2e931b146ef8b?s=128&d=identicon&r=PG", "display_name": "ikevin8me", "link": "https://stackoverflow.com/users/919222/ikevin8me"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537865307, "post_id": 52489873, "comment_id": 91928673, "body": "I tried the &quot;filter&quot; which you told me, but it is not simple because I need to access it inside a hash map, and then an array. This: { for page in section.pages | filter(attribute=&quot;taxonomies.categories&quot;, value=&quot;rust&quot; } didn&#39;t work."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1537880912, "post_id": 52489873, "comment_id": 91938436, "body": "IMO, it was not stupid to put a Rust tag. This is a Rust template engine, and without this tag, you have no visibility at all."}, {"owner": {"reputation": 4013, "user_id": 919222, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/d1cde35fe1388d83f6b2e931b146ef8b?s=128&d=identicon&r=PG", "display_name": "ikevin8me", "link": "https://stackoverflow.com/users/919222/ikevin8me"}, "edited": false, "score": 0, "creation_date": 1537881389, "post_id": 52489873, "comment_id": 91938799, "body": "Yeah, I put back the rust tag."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1537971218, "post_id": 52489873, "comment_id": 91979161, "body": "Your question text doesn&#39;t make it quite clear to me what you actually want the end result to be."}], "answers": [{"tags": [], "owner": {"reputation": 4013, "user_id": 919222, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/d1cde35fe1388d83f6b2e931b146ef8b?s=128&d=identicon&r=PG", "display_name": "ikevin8me", "link": "https://stackoverflow.com/users/919222/ikevin8me"}, "is_accepted": false, "score": 2, "last_activity_date": 1537980739, "last_edit_date": 1537980739, "creation_date": 1537979939, "answer_id": 52522494, "question_id": 52489873, "link": "https://stackoverflow.com/questions/52489873/how-to-filter-taxonomies-using-rust-based-zola-tera/52522494#52522494", "title": "How to filter Taxonomies using Rust-based Zola / Tera?", "body": "<p>I managed to resolve it. First, I did tests like this:</p>\n\n<pre><code>HTML test print output\n{% set categories = get_taxonomy(kind=\"categories\") %}\n{% set rustItems = categories.items | filter(attribute=\"name\", value=\"rust\") %}\n{% set javaItems = categories.items | filter(attribute=\"name\", value=\"java\") %}\n{{ rustItems[0].pages | length }}\n&lt;br&gt;\n{{ rustItems[0].pages[0].title }}\n&lt;br&gt;\n{{ rustItems[0].pages[1].title }}\n&lt;br&gt;\n</code></pre>\n\n<p>I was able to pick up the title as set in the .md file.</p>\n\n<p>So I moved on further and I did:</p>\n\n<pre><code>{% set categories = get_taxonomy(kind=\"categories\") %}\n{% set category = categories.items | filter(attribute=\"name\", value=\"business\") | first %}\n{% for page in category.pages %}\n{{ page.title }}\n... etc.\n</code></pre>\n\n<p>The above code will filter the pages for category taxonomy.</p>\n"}], "owner": {"reputation": 4013, "user_id": 919222, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/d1cde35fe1388d83f6b2e931b146ef8b?s=128&d=identicon&r=PG", "display_name": "ikevin8me", "link": "https://stackoverflow.com/users/919222/ikevin8me"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 1, "answer_count": 1, "score": 8, "last_activity_date": 1544161509, "creation_date": 1537843465, "last_edit_date": 1544161509, "question_id": 52489873, "link": "https://stackoverflow.com/questions/52489873/how-to-filter-taxonomies-using-rust-based-zola-tera", "title": "How to filter Taxonomies using Rust-based Zola / Tera?", "body": "<p>I have recently discovered <a href=\"https://www.getzola.org/\" rel=\"nofollow noreferrer\">Zola</a> and <a href=\"https://tera.netlify.com/docs/installation/\" rel=\"nofollow noreferrer\">Tera</a> (Rust frameworks for statically-generated websites) and found them amazing. </p>\n\n<p>I'm trying to filter specific category pages to display in a section on the same page. To illustrate, I wrote some code like this:</p>\n\n<pre><code>&lt;div class=\"content\"&gt;\n    {% block content %}\n    &lt;div class=\"list-posts\"&gt;\n        {% for page in section.pages %}\n        {% for key, taxonomy in page.taxonomies %}\n        {% if key == \"categories\" %}\n        {% set categories = taxonomy %}\n        {% for category in categories %}\n        {% if category == \"rust\" %}\n        &lt;article&gt;\n            &lt;h3 class=\"post__title\"&gt;&lt;a href=\"{{ page.permalink }}\"&gt;{{ page.title }}&lt;/a&gt;&lt;/h3&gt;\n        &lt;/article&gt;\n        {% endif %}\n        {% endfor %}\n        {% endif %}\n        {% endfor %}\n        {% endfor %}\n    &lt;/div&gt;\n    {% endblock content %}\n&lt;/div&gt;\n</code></pre>\n\n<p>There should be MULTIPLE sections of the code above for different categories, e.g. \"rust\", \"java\", etc.</p>\n\n<p>I wrote the code to explain my question, but it isn't the way I want it (and it doesn't work when the sections are duplicated). </p>\n\n<p>How do I do the filtering of the particular category when the sections/pages are loaded?</p>\n\n<p>The front-matter metadata in the content file is:</p>\n\n<pre><code>title = \"A web page title\"\n[taxonomies]\ncategories = [\"rust\"]\n</code></pre>\n\n<p>If you see my example code above, I have to access it first via a hash map, then an array, in order to filter all pages which is \"rust\".</p>\n\n<p>The filter below doesn't work:</p>\n\n<pre><code>for page in section.pages | filter(attribute=\"taxonomies.categories\", value=\"rust\"\n</code></pre>\n"}, {"tags": ["rust", "type-conversion", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537830747, "post_id": 52488505, "comment_id": 91918251, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a struct reference from a boxed trait?</a>; <a href=\"https://stackoverflow.com/q/27892375/155423\">Can I do type introspection with trait objects and then downcast it?</a>; etc.. If you disagree, please <a href=\"https://stackoverflow.com/posts/52488505/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 133, "user_id": 9275725, "user_type": "registered", "profile_image": "https://graph.facebook.com/1942386262693680/picture?type=large", "display_name": "Chaffon Liu", "link": "https://stackoverflow.com/users/9275725/chaffon-liu"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537847731, "post_id": 52488505, "comment_id": 91921394, "body": "Thank you very much, i can confirm <a href=\"https://stackoverflow.com/questions/33687447/how-to-get-a-struct-reference-from-a-boxed-trait\">How to get a struct reference from a boxed trait?</a> is relevant, since my aim here is to verify the type of a trait object, it pretty much answers my question, feel free to mark this as a duplicate @Shepmaster"}], "owner": {"reputation": 133, "user_id": 9275725, "user_type": "registered", "profile_image": "https://graph.facebook.com/1942386262693680/picture?type=large", "display_name": "Chaffon Liu", "link": "https://stackoverflow.com/users/9275725/chaffon-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 3368, "favorite_count": 0, "closed_date": 1537881484, "answer_count": 0, "score": 1, "last_activity_date": 1537881501, "creation_date": 1537830615, "last_edit_date": 1537844942, "question_id": 52488505, "link": "https://stackoverflow.com/questions/52488505/how-to-cast-between-a-trait-object-and-a-struct-type-that-implemented-the-trait", "closed_reason": "Duplicate", "title": "How to cast between a trait object and a struct type that implemented the trait", "body": "<p>This is so far what I've tried, which doesn't really work out. I meant to have a generic function that will take a type parameter and a self parameter that is the trait object of <code>Behaviour</code>, and return the type as the behaviour object being casted to the type in the type parameter. And besides, I've thought of using pattern matching at runtime that will only produce an output if the type matches, however I've got the error of mismatched types between <code>&lt;&amp;Behaviour&gt;</code> and <code>&lt;T&gt;</code>.</p>\n\n<pre><code>pub trait Behaviour: BehaviourAgent {\n    fn set(&amp;mut self) -&gt; ();\n}\n\npub trait BehaviourAgent {\n    fn clone_agent(&amp;self) -&gt; Box&lt;Behaviour&gt;;\n    // fn revert&lt;_type&gt;(&amp;self) -&gt; _type;\n}\n\nimpl&lt;Type&gt; BehaviourAgent for Type where Type: 'static + Behaviour + Clone, {\n    fn clone_agent(&amp;self) -&gt; Box&lt;Behaviour&gt; {\n        return Box::new(self.clone());\n    }\n}\n\nimpl Clone for Box&lt;Behaviour&gt; {\n    fn clone(&amp;self) -&gt; Box&lt;Behaviour&gt; {\n        return self.clone_agent();\n    }\n}\n\npub trait TypeRevert&lt;Type&gt; {\n    fn revert(&amp;mut self) -&gt; Type;\n}\n\n// impl&lt;Type&gt; TypeRevert&lt;Type&gt; for &amp; 'static Behaviour {\n//  fn revert(&amp;mut self) -&gt; Type {\n//      unsafe { return self.clone(); }\n//  }\n// }\n\nimpl&lt;Type&gt; TypeRevert&lt;Type&gt; for Type where Type: 'static + Behaviour + Clone {\n    fn revert(&amp;mut self) -&gt; Type {\n        return self.clone();\n    }\n}\n\n#[derive(Clone, Copy)]\npub struct SoundDevice {/*attributes*/}\n\nimpl Behaviour for SoundDevice {\n    fn set(&amp;mut self) -&gt; () { }\n}\n\nfn main() {\n    let target: Box&lt;Behaviour&gt; = Box::new(SoundDevice { });\n    // let mut test_obj: SoundDevice = TypeRevert::revert(&amp;mut *(target.clone()));\n    let mut test_obj: SoundDevice = TypeRevert::&lt;SoundDevice&gt;::revert(&amp;mut *(target.clone()));\n}\n</code></pre>\n"}, {"tags": ["rust", "match", "refcounting"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537817951, "post_id": 52486174, "comment_id": 91913835, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/42264041/155423\">How do I get an owned value out of a <code>Box</code>?</a>: <i>&quot;because Box is special&quot;</i>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52486174/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537819432, "post_id": 52486174, "comment_id": 91914480, "body": "<i>the difference between <code>Rc&lt;T&gt;</code> and <code>Box&lt;T&gt;</code></i> \u2014 yes, <a href=\"https://stackoverflow.com/q/42264041/155423\"><code>Box</code> is special</a>."}], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1537870667, "post_id": 52490008, "comment_id": 91931955, "body": "Why doesn&#39;t <code>*v</code> work? Isn&#39;t prefix <code>*</code> the syntax for <code>std::ops::Deref</code>?  Is <code>*</code> the deref operation of some other type?"}, {"owner": {"reputation": 581, "user_id": 764197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fe697fb354661dbbf107df34fd6fecd?s=128&d=identicon&r=PG", "display_name": "Anthony Maida", "link": "https://stackoverflow.com/users/764197/anthony-maida"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1538011099, "post_id": 52490008, "comment_id": 91995714, "body": "Regarding above comment, yes, that would make sense to me. But for some reason it&#39;s not so. I, too, would like an explanation."}, {"owner": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "edited": false, "score": 0, "creation_date": 1538062716, "post_id": 52490008, "comment_id": 92021035, "body": "<code>Deref</code> behaves differently (moving out of the deref) when it&#39;s invoked as <code>*</code> - see <a href=\"https://stackoverflow.com/q/31624743/9118790\">Why is the return type of Deref::deref itself a reference?</a>. As an alternative, you can usually use <code>&amp;*</code> to dereference and reborrow, so the line could also be replaced with <code>(&amp;**v).clone()</code> (using an extra <code>*</code> undo the <code>ref v</code>). (Sometimes rustc will suggest <code>&amp;*</code>, but it might not recognize the double-deref in this case.)"}, {"owner": {"reputation": 581, "user_id": 764197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fe697fb354661dbbf107df34fd6fecd?s=128&d=identicon&r=PG", "display_name": "Anthony Maida", "link": "https://stackoverflow.com/users/764197/anthony-maida"}, "edited": false, "score": 0, "creation_date": 1538155134, "post_id": 52490008, "comment_id": 92058651, "body": "Yes, I verified the above works. Thank you for the explanation."}], "tags": [], "owner": {"reputation": 581, "user_id": 764197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fe697fb354661dbbf107df34fd6fecd?s=128&d=identicon&r=PG", "display_name": "Anthony Maida", "link": "https://stackoverflow.com/users/764197/anthony-maida"}, "is_accepted": false, "score": 1, "last_activity_date": 1537844720, "creation_date": 1537844720, "answer_id": 52490008, "question_id": 52486174, "link": "https://stackoverflow.com/questions/52486174/switching-from-boxt-to-rct-for-a-scheme-like-cons-list-doesnt-compile/52490008#52490008", "title": "Switching from Box&lt;T&gt; to Rc&lt;T&gt; for a Scheme-like Cons list doesn&#39;t compile", "body": "<p>The solution seems to be to replace </p>\n\n<pre><code>*v.clone()\n</code></pre>\n\n<p>with</p>\n\n<pre><code>Rc::deref(v).clone()\n</code></pre>\n\n<p>and then add the line</p>\n\n<pre><code>use::ops::Deref;\n</code></pre>\n\n<p>to the beginning of the program.</p>\n"}], "owner": {"reputation": 581, "user_id": 764197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6fe697fb354661dbbf107df34fd6fecd?s=128&d=identicon&r=PG", "display_name": "Anthony Maida", "link": "https://stackoverflow.com/users/764197/anthony-maida"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1537844720, "creation_date": 1537817607, "last_edit_date": 1537819406, "question_id": 52486174, "link": "https://stackoverflow.com/questions/52486174/switching-from-boxt-to-rct-for-a-scheme-like-cons-list-doesnt-compile", "title": "Switching from Box&lt;T&gt; to Rc&lt;T&gt; for a Scheme-like Cons list doesn&#39;t compile", "body": "<p>The program below compiles and runs if <code>Rc</code> is replaced with <code>Box</code>. Why doesn't it compile when using reference counting? This is a question about the difference between <code>Rc&lt;T&gt;</code> and <code>Box&lt;T&gt;</code>.</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Debug, Clone)]\npub enum ILst {\n    Nil,\n    Cons(i32, Rc&lt;ILst&gt;),\n}\n\nimpl ILst {\n    pub fn new() -&gt; Self {\n        ILst::Nil\n    }\n\n    pub fn cons(self, item: i32) -&gt; Self {\n        ILst::Cons(item, Rc::new(self)) \n    }\n\n    pub fn car(&amp;self) -&gt; Option&lt;i32&gt; {\n        match *self {\n            ILst::Cons(u, ref _v) =&gt; Some(u),\n            ILst::Nil =&gt; None,\n        }\n    }\n\n    pub fn cdr(&amp;self) -&gt; Self {\n        match *self {\n            ILst::Cons(_u, ref v) =&gt; *v.clone(),\n            ILst::Nil =&gt; ILst::Nil,\n        }\n    }\n}\n\nfn main() {\n    let list = ILst::new().cons(17).cons(29);\n    let rest = list.cdr();\n    println!(\"list  = {:?}\", rest);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:27:38\n   |\n27 |             ILst::Cons(_u, ref v) =&gt; *v.clone(),\n   |                                      ^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537807188, "post_id": 52483734, "comment_id": 91909006, "body": "Nope, you cannot return a reference to the <code>String</code> created inside the function. Since nothing owns it, it will be deallocated when the function exits and the reference would be invalid. Rust prevents that. You will have to return the <code>String</code> instead. You may also be interested in <code>Cow</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537807304, "post_id": 52483734, "comment_id": 91909072, "body": "Of course, instead of creating new <code>String</code>s, you could take references to the passed-in <code>&amp;str</code>, but presumably you are creating those new <code>String</code>s for a reason."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537810480, "post_id": 52483734, "comment_id": 91910635, "body": "It&#39;s not different because you return a <code>Vec</code>. If you return string <b>literals</b>, it is different. That would then be a duplicate of <a href=\"https://stackoverflow.com/q/31230585/155423\">How does the lifetime work on constant strings / string literals?</a>. However, your original question has nothing to do with literals, so that doesn&#39;t seem like a useful comparison to make."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537810704, "post_id": 52483734, "comment_id": 91910724, "body": "<i>replicate this ownership with dynamically created strings</i> \u2014 that&#39;s what a <code>String</code> <b>is</b>: ownership of a dynamically created string."}, {"owner": {"reputation": 3057, "user_id": 14263, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0c3c9a2f47e1d2db6ef80387b8715364?s=128&d=identicon&r=PG", "display_name": "Marco Luglio", "link": "https://stackoverflow.com/users/14263/marco-luglio"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537811131, "post_id": 52483734, "comment_id": 91910889, "body": "So in the case of returning !vec[&quot;something&quot;] I&#39;m return a vector with string literals, and in this case the &quot;something&quot; string has a static lifetime?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537811269, "post_id": 52483734, "comment_id": 91910943, "body": "That is correct. <code>&quot;foo&quot;</code> is a <code>&amp;&#39;static str</code> and the <code>&#39;static</code> lifetime can be mapped to any possible lifetime, thus it&#39;s memory safe to return from your example."}], "owner": {"reputation": 3057, "user_id": 14263, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0c3c9a2f47e1d2db6ef80387b8715364?s=128&d=identicon&r=PG", "display_name": "Marco Luglio", "link": "https://stackoverflow.com/users/14263/marco-luglio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1537807010, "answer_count": 0, "score": 1, "last_activity_date": 1537810508, "creation_date": 1537806787, "last_edit_date": 1537810508, "question_id": 52483734, "link": "https://stackoverflow.com/questions/52483734/how-to-return-a-vector-of-str", "closed_reason": "Duplicate", "title": "How to return a vector of &amp;str?", "body": "<p>I'm trying to implement a language lexer. I began trying to parse a string and return a vector of strings but I'm stumbling upon the borrow checker. After trying lots of things suggested here on Stack Overflow I'm really lost.</p>\n\n<pre><code>mod parser {\n    pub struct Lexer {}\n\n    impl Lexer {\n        pub fn parse&lt;'a&gt;(&amp;self, source: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n            let mut token = String::new();\n            let mut tokens: Vec&lt;&amp;'a str&gt; = vec![];\n\n            for character in source.chars() {\n                // ' ' is just a test example, a full lexer\n                // will have more complex logic to split the string\n                if character == ' ' {\n                    tokens.push(&amp;token); // what do I do here to create a &amp;str with the correct lifetime?\n                    token = String::new();\n                    continue;\n                }\n\n                token.push(character);\n            }\n\n            tokens\n        }\n    }\n}\n\nfn main() {\n    let lexer = parser::Lexer {};\n    let tokens = lexer.parse(\"some dummy text\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `token` does not live long enough\n  --&gt; src/main.rs:13:34\n   |\n13 |                     tokens.push(&amp;token); // what do I do here to create a &amp;str with the correct lifetime?\n   |                                  ^^^^^ borrowed value does not live long enough\n...\n22 |         }\n   |         - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the method body at 5:22...\n  --&gt; src/main.rs:5:22\n   |\n5  |         pub fn parse&lt;'a&gt;(&amp;self, source: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n   |                      ^^\n</code></pre>\n\n<p>I guess there's some magical method that will clone my string with the correct lifetime before I push it to my tokens vector, but I'm not sure about anything I've done actually.</p>\n\n<p>I'm using Rust 1.28.0</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>It's a bit different from the answer marked as duplicate because I'm returning a vector of strings, not simply a <code>&amp;str</code>.</p>\n\n<p>If I change my method to the following:</p>\n\n<pre><code>pub fn parse(&amp;self, source: &amp;str) -&gt; Vec&lt;&amp;str&gt; {\n    vec![\"some\", \"dummy\", \"text\"]\n}\n</code></pre>\n\n<p>The compiler doesn't complain about lifetimes and this behavior is not explained in the other answers. In this case, the ownership of the strings belongs to whom? Can I not replicate this ownership with dynamically created strings?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1537792381, "post_id": 52479258, "comment_id": 91899947, "body": "<a href=\"https://play.rust-lang.org/?gist=268dd34b78ed748ccad8704940c51962&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">If <code>FromStr</code> were implemented like this</a>, it would have worked, but as it says in the duplicate answer, because <code>FromStr</code> does not tie the output lifetime to the input lifetime, it can&#39;t be done."}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1537792395, "post_id": 52479258, "comment_id": 91899955, "body": "Not quite, I know how to bypass the FromStr constructor. My question was more relative to how one can do to implement a Trait that&#39;s outside of my crate when I need to add lifetime parameters"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537793680, "post_id": 52479258, "comment_id": 91900808, "body": "The broader question is too vague, akin to &quot;Can I implement a trait?&quot; The answer is yes sometimes, no other times. If, for example, <code>Test&lt;&#39;s&gt;</code> contains a <code>Cow&lt;&#39;s, str&gt;</code> instead of a <code>&amp;&#39;s str</code>, then suddenly it becomes easy to implement <code>FromStr</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537794144, "post_id": 52479258, "comment_id": 91901126, "body": "See also <a href=\"https://stackoverflow.com/questions/24574741/iterator-returning-items-by-reference-lifetime-issue\">Iterator returning items by reference, lifetime issue</a>"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537795010, "post_id": 52479258, "comment_id": 91901739, "body": "interesting thanks for sharing. Out of curiousity, @trentcl would you mind sharing an example with <code>Cow&lt;&#39;s, str&gt;</code> I can&#39;t get it to work :("}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537796785, "post_id": 52479258, "comment_id": 91902936, "body": "Sorry, I should have clarified. <a href=\"https://play.rust-lang.org/?gist=135a9d20865aabfb2af71f82226584f0&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">You have to turn it into a <code>String</code></a>."}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1537795403, "answer_count": 0, "score": 1, "last_activity_date": 1537792326, "creation_date": 1537791514, "last_edit_date": 1537792326, "question_id": 52479258, "link": "https://stackoverflow.com/questions/52479258/how-can-i-set-appropriate-lifetime-for-lifetime-parameter-when-implementing-a-st", "closed_reason": "Duplicate", "title": "How can I set appropriate lifetime for lifetime parameter when implementing a std Trait", "body": "<p>[EDIT] I am not looking for a solution to have a <code>from_str()</code> (or a constructor) on my struct but rather I was just curious to see if there was a way to implement some native traits which don't take lifetime parameters.</p>\n\n<p>I can indeed easily do without <code>FromStr</code> but there might be some more complex cases when not implementing a Trait would lead to a much more complex / unstable solution</p>\n\n<hr>\n\n<p>I am trying to implement the <code>FromStr</code> trait for a structure which uses a lifetime parameter</p>\n\n<pre><code>use std::str::FromStr;\n\n#[derive(Debug)]\nstruct Test&lt;'s&gt; {\n    value: &amp;'s str,\n}\n\nimpl&lt;'s&gt; Test&lt;'s&gt; {\n    fn new(val: &amp;'s str) -&gt; Self {\n        Test {\n            value: val,\n        }\n    }\n}\n\nimpl&lt;'s&gt; FromStr for Test&lt;'s&gt; {\n    type Err = ();\n\n    fn from_str(t: &amp;str) -&gt; Result&lt;Test&lt;'s&gt;, Self::Err&gt; {\n        Ok(Test {\n            value: t,\n        })\n    }\n}\n\nfn main() {\n    let t1 = Test::new(\"test 1\");\n    let t2 = Test::from_str(\"test 2\");\n\n    println!(\"Test 1 = {:?}\", &amp;t1);\n    println!(\"Test 2 = {:?}\", &amp;t2);\n}\n</code></pre>\n\n<p>As such it doesn't compile (rightfully so) and I get the following compilation error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'s` due to conflicting requirements\n</code></pre>\n\n<p>So I tried to add lifetime requirements to the <code>from_str()</code> function like that:</p>\n\n<pre><code>fn from_str&lt;'t: 's&gt;(t: &amp;'t str) -&gt; Result&lt;Self, Self::Err&gt; { ... }\n</code></pre>\n\n<p>But then again I have another compiler error (which I understand perfectly too)</p>\n\n<pre><code>error[E0195]: lifetime parameters or bounds on method `from_str` do not match the trait declaration\n</code></pre>\n\n<p>I can just not implement the trait and add the method to the structure's implementation but I was wondering whether it existed a way to do thing by implementing the trait?</p>\n\n<p>PS: link to the code in a <a href=\"https://play.rust-lang.org/?gist=b740bd4351622372b6fa8f757a3beb9c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1537781059, "post_id": 52475462, "comment_id": 91893688, "body": "I&#39;m pretty sure that something like <code>path = &quot;.&#47;local&quot;.into()</code> is optimized to not do additional allocation. BTW, trying to focus on some micro-optimizations like that does not worth it, IMHO."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1537782017, "post_id": 52475462, "comment_id": 91894212, "body": "Oh, looks like I&#39;m wrong: in release mode, this still compiles to <code>callq\tstd::ffi::os_str::OsStr::to_os_string</code> that does a new allocation."}], "answers": [{"comments": [{"owner": {"reputation": 709, "user_id": 10126273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6trXt.png?s=128&g=1", "display_name": "Tenders McChiken", "link": "https://stackoverflow.com/users/10126273/tenders-mcchiken"}, "edited": false, "score": 0, "creation_date": 1537780655, "post_id": 52475765, "comment_id": 91893497, "body": "I just checked <code>PathBuf</code>&#39;s implementation of <code>From&lt;OsString&gt;</code>, and it does indeed not allocate any memory (surprisingly it doesn&#39;t even validate the string). Thanks for the answer."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 709, "user_id": 10126273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6trXt.png?s=128&g=1", "display_name": "Tenders McChiken", "link": "https://stackoverflow.com/users/10126273/tenders-mcchiken"}, "edited": false, "score": 3, "creation_date": 1537789006, "post_id": 52475765, "comment_id": 91897933, "body": "There isn&#39;t much to validate. On Linux the only character not allowed in a path is NUL, but the <code>OsString</code> must be NUL-terminated, so the first NUL is interpreted as the end of the path. As for <code>&#47;</code>, any sequence is allowed, and duplicate are removed <code>&#47;&#47;&#47;foo&#47;&#47;bar&#47;&#47;&#47;&#47;</code> is valid and the same as <code>&#47;foo&#47;bar&#47;</code> (the only exception is two leading slashes are implementation defined for POSIX, but I don&#39;t know any system that still use those differently)."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1537781026, "last_edit_date": 1537781026, "creation_date": 1537779503, "answer_id": 52475765, "question_id": 52475462, "link": "https://stackoverflow.com/questions/52475462/what-is-a-cross-platform-way-to-clear-and-reuse-a-rust-pathbuf/52475765#52475765", "title": "What is a cross-platform way to clear and reuse a Rust PathBuf?", "body": "<p>One way is to convert the <code>PathBuf</code> to its internal storage, clear that, and convert it back to the <code>PathBuf</code>. This requires no extra allocation:</p>\n\n<pre><code>use std::path::PathBuf;\n\nfn main() {\n    let path = PathBuf::from(\"../tmp\");\n    let mut path = path.into_os_string();\n    path.clear();\n    let mut path = PathBuf::from(path);\n    path.push(\"../etc\");\n    assert_eq!(path, PathBuf::from(\"../etc\"));\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=5219c2844d339e4e63251e5473418a9b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 709, "user_id": 10126273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6trXt.png?s=128&g=1", "display_name": "Tenders McChiken", "link": "https://stackoverflow.com/users/10126273/tenders-mcchiken"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 410, "favorite_count": 1, "accepted_answer_id": 52475765, "answer_count": 1, "score": 6, "last_activity_date": 1537781026, "creation_date": 1537778282, "question_id": 52475462, "link": "https://stackoverflow.com/questions/52475462/what-is-a-cross-platform-way-to-clear-and-reuse-a-rust-pathbuf", "title": "What is a cross-platform way to clear and reuse a Rust PathBuf?", "body": "<p>In an effort to keep overhead as low as possible when processing a large number of filesystem paths, I want to avoid allocating memory for each path. Is there a way to clear and reuse a <code>PathBuf</code>?</p>\n\n<p>From what I could find in the docs, reusing a <code>PathBuf</code> is possible when dealing with absolute paths via a <code>PathBuf::push</code> (at least on POSIX systems), but I haven't found a way to reuse a <code>PathBuf</code> when dealing with a relative path.</p>\n\n<p>Is there a way to do this in a cross-platform manner or am I forced to process these paths in a platform specific way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1537780084, "post_id": 52475457, "comment_id": 91893222, "body": "I have opened <a href=\"https://github.com/rust-lang/book/issues/1542\" rel=\"nofollow noreferrer\">an issue</a> about this wording."}], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 6, "creation_date": 1537782868, "post_id": 52475558, "comment_id": 91894688, "body": "It might be worth noting that <code>return</code> is <i>absolutely</i> an expression.  It&#39;s just that <code>return 5;</code> is an expression statement, where the expression is a <code>return</code> expression.  And just to forestall the potential follow-up: the value of a <code>return</code> expression is <code>!</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1537785772, "post_id": 52475558, "comment_id": 91896233, "body": "@DK Just to nit-pick, <code>!</code> is the <i>type</i> of the <code>return</code> expression, not its value.  The definining property of the <code>!</code> type is that it doesn&#39;t have any values."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1537785963, "post_id": 52475558, "comment_id": 91896337, "body": "I just noticed that this makes the wording in the documentation even more confusing, since expressions of type <code>!</code> don&#39;t evaluate to any value, while the documentation defines expressions as something that <i>does</i> evaluate to a value."}, {"owner": {"reputation": 36339, "user_id": 30946, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/350f30695a2ab75b99d3fce947e856b9?s=128&d=identicon&r=PG", "display_name": "jcollum", "link": "https://stackoverflow.com/users/30946/jcollum"}, "edited": false, "score": 0, "creation_date": 1576522067, "post_id": 52475558, "comment_id": 104919066, "body": "expression, statement and <i>expression statement</i>? This is confusing!"}, {"owner": {"reputation": 34086, "user_id": 787480, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/91cDR.png?s=128&g=1", "display_name": "Sneftel", "link": "https://stackoverflow.com/users/787480/sneftel"}, "reply_to_user": {"reputation": 36339, "user_id": 30946, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/350f30695a2ab75b99d3fce947e856b9?s=128&d=identicon&r=PG", "display_name": "jcollum", "link": "https://stackoverflow.com/users/30946/jcollum"}, "edited": false, "score": 0, "creation_date": 1576572473, "post_id": 52475558, "comment_id": 104933825, "body": "@jcollum Keep at it, you&#39;ll get it."}], "tags": [], "owner": {"reputation": 34086, "user_id": 787480, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/91cDR.png?s=128&g=1", "display_name": "Sneftel", "link": "https://stackoverflow.com/users/787480/sneftel"}, "is_accepted": true, "score": 9, "last_activity_date": 1537778642, "creation_date": 1537778642, "answer_id": 52475558, "question_id": 52475457, "link": "https://stackoverflow.com/questions/52475457/is-return-5-a-statement-or-expression-in-rust/52475558#52475558", "title": "Is `return 5;` a statement or expression in Rust?", "body": "<p>The wording there is inexact. When it says \"a statement...will not return a value\", it means that a statement is not processed by evaluating it into a final value (as an expression is), but is rather processed by executing it. In the case of a <code>return</code> statement, the execution takes the form of exiting the current function, passing the return value to the calling function.</p>\n\n<p><code>return 5;</code> is most certainly a statement.</p>\n"}, {"comments": [{"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 1, "creation_date": 1600891743, "post_id": 64030454, "comment_id": 113235725, "body": "Interesting... <code>return 5</code> matches both <code>expr</code> and <code>stmt</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b59df81b096f0a3a648e8d28501e1a75\" rel=\"nofollow noreferrer\">change the order to see</a>)"}, {"owner": {"reputation": 683, "user_id": 12816539, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-LGJD0-r-tz8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reGKI-Oxhlq0oSaL2w3ZQJQs2PI5w/photo.jpg?sz=128", "display_name": "passing_through", "link": "https://stackoverflow.com/users/12816539/passing-through"}, "reply_to_user": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1600950179, "post_id": 64030454, "comment_id": 113254872, "body": "@kmdreko funny... Is it a bug? Are there any more examples of such behavior?"}], "tags": [], "owner": {"reputation": 683, "user_id": 12816539, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-LGJD0-r-tz8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reGKI-Oxhlq0oSaL2w3ZQJQs2PI5w/photo.jpg?sz=128", "display_name": "passing_through", "link": "https://stackoverflow.com/users/12816539/passing-through"}, "is_accepted": false, "score": 2, "last_activity_date": 1600874414, "last_edit_date": 1600874414, "creation_date": 1600872212, "answer_id": 64030454, "question_id": 52475457, "link": "https://stackoverflow.com/questions/52475457/is-return-5-a-statement-or-expression-in-rust/64030454#64030454", "title": "Is `return 5;` a statement or expression in Rust?", "body": "<p>You can find out via Rust macros:</p>\n<pre><code>macro_rules! expr_or_stmt {\n    ($_:expr) =&gt; {\n        &quot;expr&quot;\n    };\n    ($_:stmt) =&gt; {\n        &quot;stmt&quot;\n    };\n}\n\nfn main() {\n    dbg!(expr_or_stmt!(return 5));\n}\n</code></pre>\n<p>It prints &quot;expr&quot;, as you can see on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aa1bcf48a1184ce56ca188b03441e97c\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 960, "favorite_count": 0, "accepted_answer_id": 52475558, "answer_count": 2, "score": 10, "last_activity_date": 1600874414, "creation_date": 1537778256, "last_edit_date": 1592644375, "question_id": 52475457, "link": "https://stackoverflow.com/questions/52475457/is-return-5-a-statement-or-expression-in-rust", "title": "Is `return 5;` a statement or expression in Rust?", "body": "<p>I am not a nitpicker, but from <a href=\"https://doc.rust-lang.org/book/2018-edition/ch03-03-how-functions-work.html#statements-and-expressions\" rel=\"noreferrer\">Statements and expressions</a>:</p>\n<blockquote>\n<p>We\u2019ve actually already used statements and expressions. Statements are instructions that perform some action and do not return a value. Expressions evaluate to a resulting value. Let\u2019s look at some examples.</p>\n<p>......</p>\n<p>Expressions do not include ending semicolons. If you add a semicolon to the end of an expression, you turn it into a statement, which will then not return a value. Keep this in mind as you explore function return values and expressions next.</p>\n</blockquote>\n<p>So for <code>return 5;</code>, is it a statement or expression? If it is a statement, a statement should not return value; if it is an expression, an expression should not have an ending semicolon.</p>\n"}, {"tags": ["linker", "raspberry-pi", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537770482, "post_id": 52470249, "comment_id": 91889069, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47497153/bare-metal-programming-raspberry-pi-3\">Bare metal programming Raspberry Pi 3.</a>"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537773249, "post_id": 52470249, "comment_id": 91890145, "body": "Thanks for the direction, it helped me with the section in the linker script as the issue was partly there as well as in the Rust code so the title of this thread was little bit misleading."}], "answers": [{"tags": [], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "is_accepted": false, "score": 2, "last_activity_date": 1537773084, "creation_date": 1537773084, "answer_id": 52474266, "question_id": 52470249, "link": "https://stackoverflow.com/questions/52470249/rust-startup-code-for-raspberry-pi3-through-use-of-inline-assembly/52474266#52474266", "title": "Rust startup code for Raspberry Pi3 through use of inline assembly", "body": "<p>After a long night struggle I figured out how to do it.</p>\n\n<p>First create a new section in the linker:</p>\n\n<pre><code>ENTRY(reset)\nSECTIONS {\n\n  . = 0x80000;\n  .reset : {\n      KEEP(*(.reset))\n      . = ALIGN(8);\n    }\n\n  .text  : {\n      *(.text .text.* .gnu.linkonce.t*)\n  }\n  ...\n</code></pre>\n\n<p>And modify the code:</p>\n\n<pre><code>#[link_section=\".reset\"]\n#[no_mangle]\n#[naked]\npub extern \"C\" fn reset () {\nunsafe {\n        // Halt all cores but the primary and set stack pointer\n        asm!(\" mrs x1, mpidr_el1\n               and x1, x1, #3\n               cmp x1, #0\n               bne halt\n               mov sp, #0x80000\n               b init\n             \"::::\"volatile\");\n    }\n }\n</code></pre>\n\n<p>And the rest:</p>\n\n<pre><code>#[naked]\n#[no_mangle]\npub fn init() { \n    extern \"C\" {\n        static mut _sbss: u64;\n        static mut _ebss: u64;\n\n        static mut _sdata: u64;\n        static mut _edata: u64;\n\n        static _sidata: u64;\n    }\n\n    unsafe{\n        // Zero the BSS section in RAM\n        r0::zero_bss(&amp;mut _sbss, &amp;mut _ebss);\n        // Copy variables in DATA section in FLASH to RAM\n        r0::init_data(&amp;mut _sdata, &amp;mut _edata, &amp;_sidata);\n    }\n\n    extern \"Rust\" {\n        fn main() -&gt; !;\n    }\n\n    unsafe { main(); }\n}\n</code></pre>\n\n<p>By splitting the code the initialization in reset stays at <code>0x80000</code>.</p>\n\n<pre><code>Disassembly of section .reset:\n\n0000000000080000 &lt;reset&gt;:\n   80000:       d53800a1        mrs     x1, mpidr_el1\n   80004:       92400421        and     x1, x1, #0x3\n   80008:       f100003f        cmp     x1, #0x0\n   8000c:       54001481        b.ne    8029c &lt;halt&gt;  // b.any\n   80010:       b26d03ff        mov     sp, #0x80000                    // #524288\n   80014:       1400008d        b       80248 &lt;init&gt;\n   80018:       d65f03c0        ret\n   8001c:       00000000        .inst   0x00000000 ; undefined\n</code></pre>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1537773330, "creation_date": 1537736848, "last_edit_date": 1537773330, "question_id": 52470249, "link": "https://stackoverflow.com/questions/52470249/rust-startup-code-for-raspberry-pi3-through-use-of-inline-assembly", "title": "Rust startup code for Raspberry Pi3 through use of inline assembly", "body": "<p>I'm writing a bare metal code for Raspberry Pi 3 in Rust, however, I have problem with the code that is placed @<code>0x80000</code> as it is not the <code>_start</code> function.</p>\n\n<p>The compiler is set for AArch64 architecture and I'm using LLD as linker.</p>\n\n<pre><code># .cargo/config\n[build]\ntarget = \"aarch64-unknown-none\"\n\n[target.aarch64-unknown-none]\nrustflags = [\n  # uncomment to use rustc LLD linker\n   \"-C\", \"link-arg=-Tlayout.ld\",\n   \"-C\", \"linker=lld-link\",\n   \"-Z\", \"linker-flavor=ld.lld\",\n]\n</code></pre>\n\n<p>The first function to be called after startup: (get core ID and let continue only the primary, others are stopped; setup stack for the primary and init memory)</p>\n\n<pre><code>#[link_section = \".reset_vector\"]\n#[no_mangle]\npub extern \"C\" fn _start() -&gt; !{\n\n    unsafe {\n        // Halt all cores but the primary\n        asm!(\" mrs x1, mpidr_el1\n                    and x1, x1, #3\n                    cmp x1, #0\n                    bne halt\"::::\"volatile\");\n\n        // Setup stack pointer\n        asm!(\" mov sp, #0x80000\"::::\"volatile\");\n    }\n\n  init_runtime();\n\n  main();\n  loop{}\n}\n\nfn init_runtime() {\n    extern \"C\" {\n        static mut _sbss: u64;\n        static mut _ebss: u64;\n\n        static mut _sdata: u64;\n        static mut _edata: u64;\n\n        static _sidata: u64;\n    }\n\n    unsafe{\n        // Zero the BSS section in RAM\n        r0::zero_bss(&amp;mut _sbss, &amp;mut _ebss);\n        // Copy variables in DATA section in FLASH to RAM\n        r0::init_data(&amp;mut _sdata, &amp;mut _edata, &amp;_sidata);\n    } \n}\n</code></pre>\n\n<p>Function to halt the cores except for primary:</p>\n\n<pre><code>#[no_mangle]\npub fn halt() {\n    unsafe {asm!(\"wfe\"::::\"volatile\");}\n}\n</code></pre>\n\n<p>I'm using the <code>r0</code> crate to init the memory:</p>\n\n<pre><code>fn init_runtime() {\n    extern \"C\" {\n        static mut _sbss: u64;\n        static mut _ebss: u64;\n\n        static mut _sdata: u64;\n        static mut _edata: u64;\n\n        static _sidata: u64;\n    }\n\n    unsafe{\n        // Zero the BSS section in RAM\n        r0::zero_bss(&amp;mut _sbss, &amp;mut _ebss);\n        // Copy variables in DATA section in FLASH to RAM\n        r0::init_data(&amp;mut _sdata, &amp;mut _edata, &amp;_sidata);\n    } \n}\n</code></pre>\n\n<p>Finally the linker script:</p>\n\n<pre><code>ENTRY(_start)\n\nSECTIONS {\n  . = 0x80000;\n\n  .text : {\n      KEEP(*(.reset_vector));\n      __reset_vector = ABSOLUTE(.);\n      *(.text .text.* .gnu.linkonce.t*)\n  }\n\n  .rodata : {\n    *(.rodata .rodata.* .gnu.linkonce.r*)\n  }\n\n  .data : {\n    _sdata = .;\n    *(.data .data.* .gnu.linkonce.d*)\n    _edata = ALIGN(8);\n  }\n\n  .bss (NOLOAD) : {\n    . = ALIGN(32);\n    _bss = .;\n    *(.bss .bss.*)\n    *(COMMON)\n    _ebss = ALIGN(8);\n  }\n\n  __bss_length = (__bss_end - __bss_start);\n\n  /DISCARD/ : { *(.comment) *(.gnu*) *(.note*) *(.eh_frame*) }\n}\n</code></pre>\n\n<p>Here is the disassembly:</p>\n\n<pre><code>(gdb) disassemble 0x0000000000080000, 0x000000000008035c\nDump of assembler code from 0x80000 to 0x8035c:\n=&gt; 0x0000000000080000 &lt;core::mem::uninitialized+0&gt;:     sub     sp, sp, #0x10\n   0x0000000000080004 &lt;core::mem::uninitialized+4&gt;:     ldr     x0, [sp, #8]\n   0x0000000000080008 &lt;core::mem::uninitialized+8&gt;:     str     x0, [sp]\n   0x000000000008000c &lt;core::mem::uninitialized+12&gt;:    ldr     x0, [sp]\n   0x0000000000080010 &lt;core::mem::uninitialized+16&gt;:    add     sp, sp, #0x10\n   0x0000000000080014 &lt;core::mem::uninitialized+20&gt;:    ret\n</code></pre>\n\n<p>The instruction from function _start need to be placed @0x80000 but this is not the case as there are those of <code>core::mem::uninitialized</code>.</p>\n\n<p>How to modify the linker script so that the <code>mrs x1, mpidr_el1</code> will be the first instruction to be executed?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1537809287, "creation_date": 1537809287, "answer_id": 52484320, "question_id": 52469986, "link": "https://stackoverflow.com/questions/52469986/why-do-changes-to-a-const-variable-not-persist-between-usages/52484320#52484320", "title": "Why do changes to a const variable not persist between usages?", "body": "<p>When programming, it's a very important skill to learn how to create a <a href=\"/help/mcve\">Minimal, Complete, and Verifiable example</a>. Here is one for your problem:</p>\n\n<pre><code>const EXAMPLE: Option&lt;i32&gt; = Some(42);\n\nfn main() {\n    EXAMPLE.take();\n    println!(\"{:?}\", EXAMPLE);\n}\n</code></pre>\n\n<p>This prints <code>Some(42)</code> \u2014 the value of <code>EXAMPLE</code> is not changed.</p>\n\n<p>A <code>const</code> variable has no guarantees about how many instances it will have. The compiler is allowed to have zero, one, or multiple instances of it. Every time you make use of a <code>const</code>, it's as if you created a brand new value right there, pasting in the definition of the constant:</p>\n\n<pre><code>fn main() {\n    Some(42).take();\n    println!(\"{:?}\", Some(42));\n}\n</code></pre>\n\n<p>Instead, you want to <a href=\"https://stackoverflow.com/q/27791532/155423\">create a singleton</a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40148175/155423\">What does it mean for a const type in Rust to be inlined?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37405835/155423\">Populating a static/const with an environment variable at runtime in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/50631189/155423\">Why are const atomic variables not updated, but static atomic variables are?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 47, "user_id": 9209351, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001661502589/picture?type=large", "display_name": "Batels", "link": "https://stackoverflow.com/users/9209351/batels"}, "is_accepted": true, "score": -2, "last_activity_date": 1538015222, "creation_date": 1538015222, "answer_id": 52528526, "question_id": 52469986, "link": "https://stackoverflow.com/questions/52469986/why-do-changes-to-a-const-variable-not-persist-between-usages/52528526#52528526", "title": "Why do changes to a const variable not persist between usages?", "body": "<p>Thanks @shepmaster. I am learned much with your answer. But i changed my approach and fix my problem using Mutex global static and lazy_static.</p>\n\n<p>Also i read the article <a href=\"https://bryce.fisher-fleig.org/blog/strategies-for-returning-references-in-rust/index.html\" rel=\"nofollow noreferrer\">https://bryce.fisher-fleig.org/blog/strategies-for-returning-references-in-rust/index.html</a> and it helped me to understand my error.</p>\n\n<p>My new code:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::error::Error;\nuse std::fs::{File, OpenOptions};\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\nuse std::option::Option;\nuse std::sync::Mutex;\n\npub struct Storage {\n    path_str: String,\n    file: Option&lt;File&gt;\n}\n\nlazy_static! {\n    pub static ref LOCKED_STORAGE: Mutex&lt;Storage&gt; = Mutex::new(start_storage());\n}\n\nfn start_storage() -&gt; Storage {\n    let mut st = Storage { path_str: \"/tmp/bmoneytmp.bms\".to_string(), file: None };\n    st.init();\n    st\n}\n\nimpl Storage {\n\n    // Create a file for store all data, if does not alred exists\n    fn init(&amp;mut self) {\n\n        let path = Path::new(&amp;self.path_str);\n\n        self.file = match OpenOptions::new()\n            .read(true)\n            .write(true)\n            .create(true)\n            .open(path)\n        {\n            Err(e) =&gt; panic!(\"Couldn't create the storage file at {}\", e.description()),\n            Ok(file) =&gt; Some(file),\n        };\n    }\n\n    // Check if section exists\n    pub fn check_section(&amp;self, name: String) -&gt; bool {\n\n        let file = match &amp;self.file {\n            Some(file) =&gt; file,\n            None =&gt; panic!(\"File of storage not opened\")\n        };\n\n        for line in BufReader::new(file).lines() {\n            println!(\"{}{:?}\", name, line); // Working!!\n        }\n\n        true\n    }\n}\n\nfn main() {\n    // run in your bash before: echo \"Row 1\" &gt;&gt; /tmp/bmoneytmp.bms\n    LOCKED_STORAGE.lock().unwrap().check_section(\"accounts\".to_string());\n}\n</code></pre>\n\n<p>You can build this on playground: <a href=\"https://play.rust-lang.org/?gist=bbd47a13910e0f7cda908dc82ba290eb&amp;version=beta&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=bbd47a13910e0f7cda908dc82ba290eb&amp;version=beta&amp;mode=debug&amp;edition=2018</a></p>\n\n<p>Full code of my project: <a href=\"https://github.com/fernandobatels/blitz-money\" rel=\"nofollow noreferrer\">https://github.com/fernandobatels/blitz-money</a></p>\n\n<p>Full code of my fix: <a href=\"https://github.com/fernandobatels/blitz-money/blob/9dc04742a57e6cd99742f2400a6245f210521f5d/src/backend/storage.rs\" rel=\"nofollow noreferrer\">https://github.com/fernandobatels/blitz-money/blob/9dc04742a57e6cd99742f2400a6245f210521f5d/src/backend/storage.rs</a> <a href=\"https://github.com/fernandobatels/blitz-money/blob/9dc04742a57e6cd99742f2400a6245f210521f5d/src/backend/accounts.rs\" rel=\"nofollow noreferrer\">https://github.com/fernandobatels/blitz-money/blob/9dc04742a57e6cd99742f2400a6245f210521f5d/src/backend/accounts.rs</a></p>\n"}], "owner": {"reputation": 47, "user_id": 9209351, "user_type": "registered", "profile_image": "https://graph.facebook.com/100001661502589/picture?type=large", "display_name": "Batels", "link": "https://stackoverflow.com/users/9209351/batels"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 0, "accepted_answer_id": 52528526, "answer_count": 2, "score": 1, "last_activity_date": 1538015222, "creation_date": 1537734467, "last_edit_date": 1537808778, "question_id": 52469986, "link": "https://stackoverflow.com/questions/52469986/why-do-changes-to-a-const-variable-not-persist-between-usages", "title": "Why do changes to a const variable not persist between usages?", "body": "<p>I am trying to create a struct to manipulate file storage, but after I change the value it can not be used. I'm sure it's about lifetimes, but I do not understand how I can fix this.</p>\n\n<pre><code>use std::error::Error;\nuse std::fs::{File, OpenOptions};\nuse std::io::{BufRead, BufReader};\nuse std::option::Option;\nuse std::path::Path;\n\npub struct Storage&lt;'a&gt; {\n    path_str: &amp;'a str,\n    file: Option&lt;File&gt;,\n}\n\nconst LOCKED_STORAGE: Storage&lt;'static&gt; = Storage {\n    path_str: &amp;\"/tmp/bmoneytmp.bms\",\n    file: None,\n};\n\npub fn get_instance() -&gt; Storage&lt;'static&gt; {\n    if LOCKED_STORAGE.file.is_none() {\n        LOCKED_STORAGE.init();\n    }\n\n    LOCKED_STORAGE\n}\n\nimpl Storage&lt;'static&gt; {\n    // Create a file for store all data, if does not alred exists\n    fn init(&amp;mut self) {\n        let path = Path::new(self.path_str);\n\n        self.file = match OpenOptions::new()\n            .read(true)\n            .write(true)\n            .create(true)\n            .open(path)\n        {\n            Err(e) =&gt; panic!(\"Couldn't create the storage file at {}\", e.description()),\n            Ok(file) =&gt; Some(file),\n        };\n\n        if self.file.is_none() {\n            panic!(\"Error on init??\"); // This line is not called. Ok :)\n        }\n    }\n\n    // Check if section exists\n    pub fn check_section(&amp;self, name: String) -&gt; bool {\n        if self.file.is_none() {\n            panic!(\"Error on check??\"); // This line is called. :(\n        }\n        true\n    }\n}\n\nfn main() {\n    let storage = get_instance();\n    storage.check_section(\"accounts\".to_string());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d9ca91d6201861184703d811255cd43d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'Error on check??', src/main.rs:48:13\n</code></pre>\n\n<p>I am trying to use a method to open a file and read this opened file, but in second method the instance of the file is not opened. Using <code>Option&lt;File&gt;</code>, I change the value with <code>Same</code>/<code>None</code> but the variable continues to be <code>None</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537718150, "post_id": 52467683, "comment_id": 91877363, "body": "I encourage you to read the complete error message for any programming problem, but especially for Rust errors. For example, this error message includes &quot;slice indices are of type <code>usize</code> or ranges of <code>usize</code>&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537718283, "post_id": 52467683, "comment_id": 91877404, "body": "Also, you <a href=\"https://stackoverflow.com/q/40006219/155423\">probably don&#39;t want to take a <code>Vec</code> as the argument</a>."}], "owner": {"reputation": 11, "user_id": 7405228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/78T96.jpg?s=128&g=1", "display_name": "Jeremy Francis Webb", "link": "https://stackoverflow.com/users/7405228/jeremy-francis-webb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 642, "favorite_count": 0, "closed_date": 1537718011, "answer_count": 0, "score": 1, "last_activity_date": 1537718073, "creation_date": 1537717250, "last_edit_date": 1537717721, "question_id": 52467683, "link": "https://stackoverflow.com/questions/52467683/for-loop-slice-indices-of-wrong-type", "closed_reason": "Duplicate", "title": "For loop slice indices of wrong type", "body": "<p>I'm trying to reimplement a coding question from HackerRank which was easy enough in Python in Rust.</p>\n\n<p>The input &amp; goal are something like this:   </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>#10 * 1 + 40 * 2 + 30 * 3 + 50 * 4 + 20 + 5     480\n#------------------------------------------ =   --- = 32.00\n#   1   +   2   +   3   +   4   +   5            15\n</code></pre>\n\n<p>The numerator is the sum of the <code>first_array[nth]</code> * <code>second_arry[nth]</code> divided by the sum of the <code>second_array</code>'s items - it is returning a weighted mean (where the weighting is provided).</p>\n\n<hr>\n\n<p>My Python looks like this:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>for i in range(0, n):\n        numerator += fl[i] * sl[i] \n        denominator += sl[i]\n</code></pre>\n\n<p>In Rust:</p>\n\n<pre><code>fn weighted_avg(fl: Vec&lt;f64&gt;, sl: Vec&lt;f64&gt;) -&gt; f64 {\n    let mut n = fl.len() as u32;\n    let mut numerator = 0f64;\n    let mut denominator = 0f64;\n\n    for i in 1..n {\n        denominator += sl[i];\n        numerator += fl[i] * &amp;denominator;\n    }\n    numerator / denominator\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f3c7c83d8e14e985d03fe98193d34bff&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The error I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `u32: std::slice::SliceIndex&lt;[f64]&gt;` is not satisfied\n --&gt; src/lib.rs:7:24\n  |\n7 |         denominator += sl[i];\n  |                        ^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `std::slice::SliceIndex&lt;[f64]&gt;` is not implemented for `u32`\n  = note: required because of the requirements on the impl of `std::ops::Index&lt;u32&gt;` for `std::vec::Vec&lt;f64&gt;`\n\nerror[E0277]: the trait bound `u32: std::slice::SliceIndex&lt;[f64]&gt;` is not satisfied\n --&gt; src/lib.rs:8:22\n  |\n8 |         numerator += fl[i] * &amp;denominator;\n  |                      ^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `std::slice::SliceIndex&lt;[f64]&gt;` is not implemented for `u32`\n  = note: required because of the requirements on the impl of `std::ops::Index&lt;u32&gt;` for `std::vec::Vec&lt;f64&gt;`\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537712515, "post_id": 52467003, "comment_id": 91875784, "body": "The entire reason to use an <code>Arc</code> is so that you can have multiple owners. <a href=\"https://play.rust-lang.org/?gist=b57d16849bb603324f337727793020ff&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Don&#39;t save a reference to the <code>Arc</code>, just clone it</a>. When you call <code>PhysicalDevice::new</code>, take the reference there."}, {"owner": {"reputation": 449, "user_id": 595897, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/8fe23c632def6105e80d760c41264969?s=128&d=identicon&r=PG", "display_name": "Clynamen", "link": "https://stackoverflow.com/users/595897/clynamen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537713012, "post_id": 52467003, "comment_id": 91875954, "body": "@Shepmaster the method enumerate(), which I use, is indeed taking a reference  <a href=\"https://docs.rs/vulkano/0.5/vulkano/instance/struct.PhysicalDevice.html#method.enumerate\" rel=\"nofollow noreferrer\">docs.rs/vulkano/0.5/vulkano/instance/&hellip;</a>  isn&#39;t this the problem?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537714461, "post_id": 52467003, "comment_id": 91876371, "body": "I don&#39;t follow your question. You cannot store a value and a reference to that value in the same struct, as described in the duplicate. Thus you cannot store an <code>Arc&lt;Instance&gt;</code> and a <code>PhysicalDevice</code> that references it in the same struct. In the code you have provided here, you can change it to keep whole <code>Arc</code>s, not references; perhaps you can change the library. The type <code>&amp;Arc&lt;T&gt;</code> is suspicious on the surface, honestly. Otherwise, there&#39;s really no reason to keep the <code>PhysicalDevice</code> struct around; it&#39;s super lightweight to create."}, {"owner": {"reputation": 449, "user_id": 595897, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/8fe23c632def6105e80d760c41264969?s=128&d=identicon&r=PG", "display_name": "Clynamen", "link": "https://stackoverflow.com/users/595897/clynamen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537721136, "post_id": 52467003, "comment_id": 91878189, "body": "Note that the code I provided is used for reproducing the problem of the library, which of course I cannot change.  The question is: Due to the fact that I cannot change the library, and creating a struct in the way I tried does not work, what is the proper way to include both Instance and PhysicalDevice in a unique object?  What I want to achieve is to have a class that &#39;hides&#39; the vulkan stuff, so I want to put the Vulkan variables in there. Or I am supposed to carry around multiple objects through my program?"}, {"owner": {"reputation": 449, "user_id": 595897, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/8fe23c632def6105e80d760c41264969?s=128&d=identicon&r=PG", "display_name": "Clynamen", "link": "https://stackoverflow.com/users/595897/clynamen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537721183, "post_id": 52467003, "comment_id": 91878200, "body": "Thanks for the linked question, it is really useful for understanding the problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537721332, "post_id": 52467003, "comment_id": 91878239, "body": "<i>of course I cannot change</i> \u2014 I don&#39;t see why not, it&#39;s an open-source project that presumably accepts pull requests. However, we cannot answer hypothetical questions about code that isn&#39;t provided. <i>what is the proper way to include both <code>Instance</code> and <code>PhysicalDevice</code> in a unique object</i> \u2014 that&#39;s what the section labeled <b>How do I fix it?</b> in the linked question is all about. I also suggested: <i>there&#39;s really no reason to keep the <code>PhysicalDevice</code> struct around; it&#39;s super lightweight to create</i>."}, {"owner": {"reputation": 449, "user_id": 595897, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/8fe23c632def6105e80d760c41264969?s=128&d=identicon&r=PG", "display_name": "Clynamen", "link": "https://stackoverflow.com/users/595897/clynamen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537725235, "post_id": 52467003, "comment_id": 91879407, "body": "I am checking this <a href=\"https://github.com/vulkano-rs/vulkano/issues/930\" rel=\"nofollow noreferrer\">github.com/vulkano-rs/vulkano/issues/930</a>"}], "owner": {"reputation": 449, "user_id": 595897, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/8fe23c632def6105e80d760c41264969?s=128&d=identicon&r=PG", "display_name": "Clynamen", "link": "https://stackoverflow.com/users/595897/clynamen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1537712433, "answer_count": 0, "score": 0, "last_activity_date": 1537713999, "creation_date": 1537712156, "last_edit_date": 1537713999, "question_id": 52467003, "link": "https://stackoverflow.com/questions/52467003/reference-to-local-arc-that-lives-beyond-the-function", "closed_reason": "Duplicate", "title": "Reference to local Arc that lives beyond the function", "body": "<p>I am using the <a href=\"https://docs.rs/vulkano/0.6/vulkano\" rel=\"nofollow noreferrer\">vulkano</a> library that has the two types:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/vulkano/0.6/vulkano/instance/struct.Instance.html\" rel=\"nofollow noreferrer\"><code>Instance</code></a></li>\n<li><a href=\"https://docs.rs/vulkano/0.5/vulkano/instance/struct.PhysicalDevice.html\" rel=\"nofollow noreferrer\"><code>PhysicalDevice</code></a></li>\n</ul>\n\n<p><code>PhysicalDevice</code> takes an <code>&amp;Arc&lt;Instance&gt;</code>. I am writing a function that returns a struct containing an <code>Arc</code> to instances to these classes, but, due to the fact that <a href=\"https://docs.rs/vulkano/0.5/vulkano/instance/struct.PhysicalDevice.html#method.enumerate\" rel=\"nofollow noreferrer\"><code>PhysicalDevice::enumerate</code></a> requires an <code>&amp;Arc&lt;Instance&gt;</code>, the borrow checker is not compiling the code, even if the instances live beyond the function. </p>\n\n<p>I've created a smaller reproduction of the problem where <code>Pet</code> takes a <code>&amp;Arc&lt;Person&gt;</code>. </p>\n\n<p>In the function <code>test</code>, I create both objects and try to return them in a struct:</p>\n\n<pre><code>use std::sync::Arc;\n\nstruct Person {\n    name: String,\n}\n\nstruct Pet&lt;'t&gt; {\n    name: String,\n    owner: &amp;'t Arc&lt;Person&gt;,\n}\n\nstruct PersonPetPair&lt;'a&gt; {\n    person: Arc&lt;Person&gt;,\n    pet: Arc&lt;Pet&lt;'a&gt;&gt;,\n}\n\nfn test&lt;'a&gt;() -&gt; PersonPetPair&lt;'a&gt; {\n    let person = Person {\n        name: String::from(\"ash\"),\n    };\n    let person_arc = Arc::new(person);\n\n    let pet = Pet {\n        name: String::from(\"pikachu\"),\n        owner: &amp;person_arc,\n    };\n    let pet_arc = Arc::new(pet);\n\n    PersonPetPair {\n        person: person_arc,\n        pet: pet_arc,\n    }\n    // person_arc ends here, so the reference is invalid anymore\n    // Still, the objects are still alive since they are created with\n    // Arc&lt;&gt;\n}\n\nfn main() {\n    let t = test();\n    println!(\"{} owns {}\", t.person.name, t.pet.name);\n}\n</code></pre>\n\n<p>The compiler tells me there is a problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `person_arc` does not live long enough\n  --&gt; src/main.rs:25:17\n   |\n25 |         owner: &amp;person_arc,\n   |                 ^^^^^^^^^^ borrowed value does not live long enough\n...\n36 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 17:9...\n  --&gt; src/main.rs:17:9\n   |\n17 | fn test&lt;'a&gt;() -&gt; PersonPetPair&lt;'a&gt; {\n   |         ^^\n</code></pre>\n\n<p>Indeed, the local variable <code>person_arc</code> is being dropped when the function ends. There should be a way to avoid this problem since both instances outlive the function thanks to the use of <code>Arc</code>.</p>\n"}, {"tags": ["multithreading", "rust", "terminate"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1591024682, "last_edit_date": 1591024682, "creation_date": 1537711248, "answer_id": 52466851, "question_id": 52465480, "link": "https://stackoverflow.com/questions/52465480/what-is-the-standard-way-to-get-a-rust-thread-out-of-blocking-operations/52466851#52466851", "title": "What is the standard way to get a Rust thread out of blocking operations?", "body": "<p>There is no such thing. Blocking means blocking.</p>\n\n<p>Instead, you deliberately use tools that are <em>non-blocking</em>. That's where libraries like mio, Tokio, or futures come in \u2014 they handle the architecture of sticking all of these non-blocking, asynchronous pieces together.</p>\n\n<blockquote>\n  <p><code>catch (InterruptedException e)</code></p>\n</blockquote>\n\n<p>Rust doesn't have exceptions. If you expect to handle a failure case, that's better represented with a <code>Result</code>.</p>\n\n<blockquote>\n  <p><code>Thread.interrupt()</code></p>\n</blockquote>\n\n<p>This doesn't actually do anything beyond setting a flag in the thread that some code may check and then throw an exception for. You could build the same structure yourself. One simple implementation:</p>\n\n<pre><code>use std::{\n    sync::{\n        atomic::{AtomicBool, Ordering},\n        Arc,\n    },\n    thread,\n    time::Duration,\n};\n\nfn main() {\n    let please_stop = Arc::new(AtomicBool::new(false));\n\n    let t = thread::spawn({\n        let should_i_stop = please_stop.clone();\n        move || {\n            while !should_i_stop.load(Ordering::SeqCst) {\n                thread::sleep(Duration::from_millis(100));\n                println!(\"Sleeping\");\n            }\n        }\n    });\n\n    thread::sleep(Duration::from_secs(1));\n    please_stop.store(true, Ordering::SeqCst);\n    t.join().unwrap();\n}\n</code></pre>\n\n<h3>Sleep</h3>\n\n<p>No way of interrupting, as far as I know. The documentation even says:</p>\n\n<blockquote>\n  <p>On Unix platforms this function will <strong>not return early due to a signal</strong> </p>\n</blockquote>\n\n<h3>Socket IO</h3>\n\n<p>You put the socket into nonblocking mode using methods like <a href=\"https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.set_nonblocking\" rel=\"nofollow noreferrer\"><code>set_nonblocking</code></a> and then handle <a href=\"https://doc.rust-lang.org/std/io/enum.ErrorKind.html#variant.WouldBlock\" rel=\"nofollow noreferrer\"><code>ErrorKind::WouldBlock</code></a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">Tokio</a></li>\n<li><a href=\"https://async.rs/\" rel=\"nofollow noreferrer\">async-std</a></li>\n</ul>\n\n<h3>File IO</h3>\n\n<p>There isn't really a good cross-platform way of performing asynchronous file IO. Most implementations spin up a thread pool and perform blocking operations there, sending the data over something that does non-blocking.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">Tokio</a></li>\n<li><a href=\"https://async.rs/\" rel=\"nofollow noreferrer\">async-std</a></li>\n</ul>\n\n<h3>Queue IO</h3>\n\n<p>Perhaps you mean something like a <a href=\"https://doc.rust-lang.org/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\">MPSC channel</a>, in which case you'd use tools like <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.try_recv\" rel=\"nofollow noreferrer\"><code>try_recv</code></a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/26199926/155423\">How to terminate or suspend a Rust thread from another thread?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a></li>\n<li><a href=\"https://stackoverflow.com/q/3590000/155423\">What does java.lang.Thread.interrupt() do?</a></li>\n</ul>\n"}], "owner": {"reputation": 3612, "user_id": 2954288, "user_type": "registered", "accept_rate": 48, "profile_image": "https://i.stack.imgur.com/t9KSc.png?s=128&g=1", "display_name": "Harald", "link": "https://stackoverflow.com/users/2954288/harald"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2909, "favorite_count": 3, "accepted_answer_id": 52466851, "answer_count": 1, "score": 5, "last_activity_date": 1591024682, "creation_date": 1537700659, "last_edit_date": 1537725953, "question_id": 52465480, "link": "https://stackoverflow.com/questions/52465480/what-is-the-standard-way-to-get-a-rust-thread-out-of-blocking-operations", "title": "What is the standard way to get a Rust thread out of blocking operations?", "body": "<p>Coming from Java, I am used to idioms along the lines of</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>while (true) {\n  try {\n    someBlockingOperation();\n  } catch (InterruptedException e) {\n    Thread.currentThread.interrupt(); // re-set the interrupted flag\n    cleanup(); // whatever is necessary\n    break;\n  }\n}\n</code></pre>\n\n<p>This works, as far as I know, across the whole JDK for anything that might block, like reading from files, from sockets, from a queue and even for <code>Thread.sleep()</code>.</p>\n\n<p>Reading on how this is done in Rust, I find lots of seemingly special solutions mentioned like <code>mio</code>, <code>tokio</code>. I also find <code>ErrorKind::Interrupted</code> and tried to get this <code>ErrorKind</code> with sending <code>SIGINT</code> to the thread, but the thread seems to die immediately without leaving any (back)trace.</p>\n\n<p>Here is the code I used (note: not very well versed in Rust yet, so it might look a bit strange, but it runs):</p>\n\n<pre><code>use std::io;\nuse std::io::Read;\nuse std::thread;\n\npub fn main() {\n    let sub_thread = thread::spawn(|| {\n        let mut buffer = [0; 10];\n        loop {\n            let d = io::stdin().read(&amp;mut buffer);\n            println!(\"{:?}\", d);\n            let n = d.unwrap();\n            if n == 0 {\n                break;\n            }\n            println!(\"-&gt; {:?}\", &amp;buffer[0..n]);\n        }\n    });\n\n    sub_thread.join().unwrap();\n}\n</code></pre>\n\n<p>By \"blocking operations\", I mean:</p>\n\n<ul>\n<li>sleep</li>\n<li>socket IO</li>\n<li>file IO</li>\n<li>queue IO (not sure yet where the queues are in Rust)</li>\n</ul>\n\n<p>What would be the respective means to signal to a thread, like <code>Thread.interrupt()</code> in Java, that its time to pack up and go home?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537698096, "post_id": 52464694, "comment_id": 91872007, "body": "I think it&#39;s because nothing prevent A to be a reference."}, {"owner": {"reputation": 723, "user_id": 431056, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-hMZ64wPE1ds/AAAAAAAAAAI/AAAAAAAAACk/09SSkGPaJFE/photo.jpg?sz=128", "display_name": "eddyb", "link": "https://stackoverflow.com/users/431056/eddyb"}, "edited": false, "score": 0, "creation_date": 1537698993, "post_id": 52464694, "comment_id": 91872208, "body": "I believe I have seen this before, as a compiler bug.    <code>for&lt;&#39;a&gt; A: Debug + &#39;a</code> is (roughly) sugar for <code>A: for&lt;&#39;a&gt; Debug + for&lt;&#39;a&gt; &#39;a</code>, but the latter doesn&#39;t parse, and I doubt the former should either.    It&#39;s possible the lifetime (name) resolution, and/or something down the line, doesn&#39;t see the bound properly - and quite likely that it&#39;s unaccounted for.    I&#39;ll update this comment after I hear back from @nikomatsakis or some other compiler developer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537710548, "post_id": 52464694, "comment_id": 91875164, "body": "Even after reading eddyb&#39;s answer, I&#39;m not sure what you want <code>for&lt;&#39;a&gt; A: Debug + &#39;a</code> to mean. It just looks like a funny way of writing <code>A: Debug + &#39;static</code> to me."}, {"owner": {"reputation": 452, "user_id": 4990191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-uzhV4XNdp2U/AAAAAAAAAAI/AAAAAAAAAvo/6tbSDTYrDOg/photo.jpg?sz=128", "display_name": "Zz Tux", "link": "https://stackoverflow.com/users/4990191/zz-tux"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537769186, "post_id": 52464694, "comment_id": 91888616, "body": "@trentcl <code>A: Debug + &#39;static</code> doesn&#39;t work when <code>A</code> is borrowing type"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537793069, "post_id": 52464694, "comment_id": 91900395, "body": "... neither does <code>for&lt;&#39;a&gt; A: Debug + &#39;a</code> because you can instantiate <code>&#39;a = &#39;static</code>."}], "answers": [{"tags": [], "owner": {"reputation": 723, "user_id": 431056, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-hMZ64wPE1ds/AAAAAAAAAAI/AAAAAAAAACk/09SSkGPaJFE/photo.jpg?sz=128", "display_name": "eddyb", "link": "https://stackoverflow.com/users/431056/eddyb"}, "is_accepted": false, "score": 5, "last_activity_date": 1537717237, "last_edit_date": 1537717237, "creation_date": 1537700845, "answer_id": 52465505, "question_id": 52464694, "link": "https://stackoverflow.com/questions/52464694/strange-behavior-of-hrtbs/52465505#52465505", "title": "Strange behavior of HRTBs", "body": "<p>There is no easy way to make <code>helper</code> work in current Rust, even if you remove all the <code>for&lt;'a&gt; A: Debug + 'a,</code> bounds (which only <em>further restricts</em> what types <code>A</code> can be, whereas you want to <em>allow more</em>).</p>\n\n<p>This is as simple as I can make your example:</p>\n\n<pre><code>struct S&lt;A&gt; {\n    f: Box&lt;Fn(A) -&gt; i32&gt;,\n}\n\nimpl&lt;A&gt; S&lt;A&gt; {\n    fn call(&amp;self, a: A) {\n        println!(\"Return {:?}\", (self.f)(a));\n    }\n}\n\nfn create&lt;A&gt;(f: Box&lt;Fn(A) -&gt; i32&gt;) -&gt; S&lt;A&gt; {\n    S { f }\n}\n\nfn helper() {\n    let x = create(Box::new(|x: &amp;i32| *x * 2));\n    let arg = 333;\n    x.call(&amp;arg);\n}\n\nfn main() {\n    helper();\n}\n</code></pre>\n\n<p>The reason it doesn't work is that <code>A</code> \"comes from the outside\", and Rust can't infer that you want <code>for&lt;'a&gt; S&lt;&amp;'a A&gt;</code>, it can't even talk about such a type.<br>\nNote that if <code>let arg = 333;</code> is placed above <code>let x</code>, this example <em>does compile</em> (because it infers a reference to <code>arg</code> <em>specifically</em>, not a <code>for&lt;'a&gt;</code>).</p>\n\n<p>The closest you can get today is with an associated type on a trait with a lifetime parameter, e.g.:</p>\n\n<pre><code>// Emulating `type Type&lt;'a&gt;` by moving `'a` to the trait.\ntrait Apply&lt;'a&gt; {\n    type Type;\n}\nstruct Plain&lt;T&gt;(std::marker::PhantomData&lt;T&gt;);\nimpl&lt;'a, T&gt; Apply&lt;'a&gt; for Plain&lt;T&gt; {\n    type Type = T;\n}\nstruct Ref&lt;T: ?Sized&gt;(std::marker::PhantomData&lt;T&gt;);\nimpl&lt;'a, T: ?Sized + 'a&gt; Apply&lt;'a&gt; for Ref&lt;T&gt; {\n    type Type = &amp;'a T;\n}\n\nstruct S&lt;A: for&lt;'a&gt; Apply&lt;'a&gt;&gt; {\n    f: Box&lt;for&lt;'a&gt; Fn(&lt;A as Apply&lt;'a&gt;&gt;::Type) -&gt; i32&gt;,\n}\n\nimpl&lt;A: for&lt;'a&gt; Apply&lt;'a&gt;&gt; S&lt;A&gt; {\n    fn call&lt;'a&gt;(&amp;self, a: &lt;A as Apply&lt;'a&gt;&gt;::Type) {\n        println!(\"Return {:?}\", (self.f)(a));\n    }\n}\n\nfn create&lt;A: for&lt;'a&gt; Apply&lt;'a&gt;&gt;(\n    f: Box&lt;for&lt;'a&gt; Fn(&lt;A as Apply&lt;'a&gt;&gt;::Type) -&gt; i32&gt;,\n) -&gt; S&lt;A&gt; {\n    S { f }\n}\n\nfn helper() {\n    let x = create::&lt;Ref&lt;i32&gt;&gt;(Box::new(|x: &amp;i32| *x * 2));\n    let arg = 333;\n    x.call(&amp;arg);\n}\n\nfn main() {\n    helper();\n}\n</code></pre>\n\n<p>However, it turns out that this encoding hits <a href=\"https://github.com/rust-lang/rust/issues/52812\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/52812</a>, so it's not actually usable at the moment (and I'm not aware of an workaround).</p>\n"}, {"tags": [], "owner": {"reputation": 452, "user_id": 4990191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-uzhV4XNdp2U/AAAAAAAAAAI/AAAAAAAAAvo/6tbSDTYrDOg/photo.jpg?sz=128", "display_name": "Zz Tux", "link": "https://stackoverflow.com/users/4990191/zz-tux"}, "is_accepted": false, "score": -1, "last_activity_date": 1537967404, "last_edit_date": 1537967404, "creation_date": 1537960802, "answer_id": 52516535, "question_id": 52464694, "link": "https://stackoverflow.com/questions/52464694/strange-behavior-of-hrtbs/52516535#52516535", "title": "Strange behavior of HRTBs", "body": "<p>Because @eddyb 's workarkound doesn't work, <a href=\"https://play.rust-lang.org/?gist=6ec9fd666f6e01bec15349a0276ee46e&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I wrote a dirty and <strong>danger</strong> workaround</a>.</p>\n\n<p>Yes <strong><em>it contains Undefined Behaviour</em></strong>. But at least it works at this time.</p>\n\n<pre><code>use std::fmt::Debug;\n\nstruct S&lt;A&gt;\nwhere\n    A: Debug + Sized,\n{\n    f: Box&lt;Fn(A) -&gt; i32&gt;,\n}\n\nimpl&lt;A&gt; S&lt;A&gt;\nwhere\n    A: Debug + Sized,\n{\n    fn call&lt;T&gt;(&amp;self, a: T)\n    where\n        T: Debug + Sized,\n    {\n        // assert_eq!(std::any::TypeId::of::&lt;A&gt;(), std::any::TypeId::of::&lt;T&gt;()); Not work because TypeId requires 'static lifetime\n        // If TypeId::of supports non-static lifetime, we also need a compile-time type assert for better error message\n        println!(\n            \"Return {:?}\",\n            unsafe {\n                let b = std::mem::transmute::&lt;&amp;Box&lt;Fn(A) -&gt; i32&gt;, &amp;Box&lt;Fn(T) -&gt; i32&gt;&gt;(&amp;self.f);\n                let ret = b(a);\n                std::mem::forget(b);\n                ret\n            }\n        );\n    }\n}\n\nfn create&lt;A&gt;(f: Box&lt;Fn(A) -&gt; i32&gt;) -&gt; S&lt;A&gt;\nwhere\n    for&lt;'a&gt; A: Debug + 'a,\n{\n    S::&lt;A&gt; { f }\n}\n\nfn helper() {\n    let x = create::&lt;&amp;i32&gt;(Box::new(|x: &amp;i32| *x * 2));\n    let arg = 333;\n    x.call(&amp;arg);\n    x.call(&amp;arg);\n    x.call(&amp;arg);\n}\n\nfn main() {\n    helper();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8617b1f0f765e43be9719ee9975565fa&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Also works with <code>Fn Trait</code>, which is my goal.</a></p>\n"}], "owner": {"reputation": 452, "user_id": 4990191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-uzhV4XNdp2U/AAAAAAAAAAI/AAAAAAAAAvo/6tbSDTYrDOg/photo.jpg?sz=128", "display_name": "Zz Tux", "link": "https://stackoverflow.com/users/4990191/zz-tux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1537967404, "creation_date": 1537694076, "question_id": 52464694, "link": "https://stackoverflow.com/questions/52464694/strange-behavior-of-hrtbs", "title": "Strange behavior of HRTBs", "body": "<p><a href=\"https://play.rust-lang.org/?gist=facd67a79da916192e7970070de9db1a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">I have this code</a>:</p>\n\n<pre><code>use std::fmt::Debug;\n\nstruct S&lt;A&gt;\nwhere\n    for&lt;'a&gt; A: Debug + 'a,\n{\n    f: Box&lt;Fn(A) -&gt; i32&gt;,\n}\n\nimpl&lt;A&gt; S&lt;A&gt;\nwhere\n    for&lt;'a&gt; A: Debug + 'a,\n{\n    fn call(&amp;self, a: A) {\n        println!(\"Return {:?}\", (self.f)(a));\n    }\n}\n\nfn create&lt;A&gt;(f: Box&lt;Fn(A) -&gt; i32&gt;) -&gt; S&lt;A&gt;\nwhere\n    for&lt;'a&gt; A: Debug + 'a,\n{\n    S::&lt;A&gt; { f }\n}\n\nfn helper() {\n    let x = create::&lt;&amp;i32&gt;(Box::new(|x: &amp;i32| *x * 2));\n    let arg = 333;\n    x.call(&amp;arg);\n}\n\nfn main() {\n    let x = helper();\n}\n</code></pre>\n\n<p>It's failed to compile:</p>\n\n<pre><code>error[E0310]: the parameter type `A` may not live long enough\n</code></pre>\n\n<p>In <a href=\"https://play.rust-lang.org/?gist=f45d112650a4f039cf57d6450e87289f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">code 2</a>, I changed <code>Fn(A) -&gt; i32</code> to <code>Fn(&amp;A) -&gt; i32</code>, the code works.</p>\n\n<pre><code>...\n    f: Box&lt;Fn(&amp;A) -&gt; i32&gt;,\n...\n</code></pre>\n\n<p>Since <code>A</code> is argument of <code>Fn</code> trait, it's a type that has <code>Higher-Rank lifetime</code>. It shouldn't be affected by the lifetime of struct <code>S&lt;A&gt;</code> .</p>\n\n<p>But why can't code 1 be compiled?<br>\nHow can I workaround it for borrow or non-borrow type <code>A</code>?</p>\n"}, {"tags": ["rust", "gtk-rs"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1537720432, "last_edit_date": 1537720432, "creation_date": 1537718803, "answer_id": 52467909, "question_id": 52464653, "link": "https://stackoverflow.com/questions/52464653/how-to-move-data-into-multiple-rust-closures/52467909#52467909", "title": "How to move data into multiple Rust closures?", "body": "<p>You literally cannot do this. I encourage you to go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> to refresh yourself on ownership. When a non-<code>Copy</code> type is <em>moved</em>, it's gone \u2014\u00a0this is a giant reason that Rust even exists: to track this so the programmer doesn't have to. </p>\n\n<p>If a type is <code>Copy</code>, the compiler will automatically make the copy for you. If a type is <code>Clone</code>, then you must invoke the clone explicitly.</p>\n\n<p>You will need to change to <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">shared ownership</a> and most likely <a href=\"https://doc.rust-lang.org/stable/std/cell/\" rel=\"nofollow noreferrer\">interior mutability</a>. </p>\n\n<p>Shared ownership allows a single piece of data to be jointly owned by multiple values, creating additional owners via cloning.</p>\n\n<p>Interior mutability is needed because Rust disallows multiple mutable references to one item at the same time.</p>\n\n<p>Wrap your <code>list_box</code> in a <code>Mutex</code> and then an <code>Arc</code> (<code>Arc&lt;Mutex&lt;T&gt;&gt;</code>). Clone the <code>Arc</code> for each handler and move that clone into the handler. You can then lock the <code>list_box</code> and make whatever changes you need.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41506075/155423\">What is the right way to share a reference between closures if the value outlives the closures?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31360003/155423\">How to share an Arc in multiple closures?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "edited": false, "score": 0, "creation_date": 1556812809, "post_id": 52470125, "comment_id": 98564256, "body": "&quot;the closure either can&#39;t hold any references at all, or all references it holds must have static lifetime&quot; - took days for me to figure this out. This should be written in big, bold writing on any documentation to do with multi-threading as by default they&#39;re always <code>&#39;static</code>."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 8, "last_activity_date": 1581908786, "last_edit_date": 1581908786, "creation_date": 1537735651, "answer_id": 52470125, "question_id": 52464653, "link": "https://stackoverflow.com/questions/52464653/how-to-move-data-into-multiple-rust-closures/52470125#52470125", "title": "How to move data into multiple Rust closures?", "body": "<p>As explained in Shepmaster's answer, you can only move a value out of a variable once, and the compiler will prevent you from doing it a second time.  I'll try to add a bit of specific context for this use case.  Most of this is from my memory of having used GTK from C ages ago, and a few bits I just looked up in the gtk-rs documentation, so I'm sure I got some details wrong, but I think the general gist is accurate.</p>\n\n<p>Let's first take a look at why you need to move the value into the closures in the first place.  The methods you call on <code>list_box</code> inside both closures take <code>self</code> by reference, so you don't actually consume the list box in the closures.  This means it would be perfectly valid to define the two closures without the <code>move</code> specifiers \u2013 you only need read-only references to <code>list_box</code>, you are allowed to have more than one read-only reference at once, and <code>list_box</code> lives at least as long as the closures.</p>\n\n<p>However, while you are allowed to <em>define</em> the two closures without moving <code>list_box</code> into them, you can't pass the closures defined this way to gtk-rs: all functions connecting event handlers only accept \"static\" functions, e.g.</p>\n\n<pre><code>fn connect_search_changed&lt;F: Fn(&amp;Self) + 'static&gt;(\n    &amp;self, \n    f: F\n) -&gt; SignalHandlerId\n</code></pre>\n\n<p>The type <code>F</code> of the handler has the trait bound <code>Fn(&amp;Self) + 'static</code>, which means that the closure either can't hold any references at all, or all references it holds must have static lifetime.  If we don't move <code>list_box</code> into the closure, the closure will hold a non-static reference to it.  So we need to get rid of the reference before being able to use the function as an event handler.</p>\n\n<p>Why does gtk-rs impose this limitation?  The reason is that gtk-rs is a wrapper around a set of C libraries, and a pointer to the callback is eventually passed on to the underlying <code>glib</code> library.  Since C does not have any concept of lifetimes, the only way to do this safely is to require that there aren't any references that may become invalid.</p>\n\n<p>We have now established that our closures can't hold any references.  We still need to access <code>list_box</code> from the closures, so what are our options?  If you only have a single closure, using <code>move</code> does the trick \u2013 by moving <code>list_box</code> into the closure, the closure becomes its owner.  However, we have seen that this doesn't work for more than one closure, because we can only move <code>list_box</code> once.  We need to find a way to have <em>multiple</em> owners for it, and the Rust standard library provides such a way: the reference-counting pointers <code>Rc</code> and <code>Arc</code>.  The former is used for values that are only accessed from the current thread, while the latter is safe to move to other threads.</p>\n\n<p>If I remember correctly, glib executes all event handlers in the main thread, and the trait bounds for the closure reflect this: the closure isn't required to be <code>Send</code> or <code>Sync</code>, so we should be able to make do with <code>Rc</code>.  Morevoer, we only need read access to <code>list_box</code> in the closures, so we don't need <code>RefCell</code> or <code>Mutex</code> for interior mutability in this case.  In summary, all you need is probably this:</p>\n\n<pre><code>use std::rc::Rc;\nlet list_box: gtk::ListBox = builder.get_object(\"list_box\").unwrap();\nlet list_box_1 = Rc::new(list_box);\nlet list_box_2 = list_box_1.clone();\n</code></pre>\n\n<p>Now you have two \"owned\" pointers to the same list box, and these pointers can be moved into the two closures.</p>\n\n<p>Disclaimer: I couldn't really test any of this, since your example code isn't self-contained.</p>\n"}, {"comments": [{"owner": {"reputation": 167, "user_id": 2891944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iJFwu.jpg?s=128&g=1", "display_name": "Jman", "link": "https://stackoverflow.com/users/2891944/jman"}, "edited": false, "score": 1, "creation_date": 1564589120, "post_id": 53683053, "comment_id": 101084031, "body": "This whole issue (OP &amp; Replies) was very helpful to me.  I ran into a similar issue as the OP this past weekend but ended up putting all of my logic requiring a move into just 1 button click function.  I am sure I will be using this clone gtk-rs idea in the future.  Thank you for posting!"}], "tags": [], "owner": {"reputation": 584, "user_id": 5922669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec0c6ed715a3e94f3e9bf27d52d2214a?s=128&d=identicon&r=PG", "display_name": "Hollay-Horv&#225;th Zsombor", "link": "https://stackoverflow.com/users/5922669/hollay-horv%c3%a1th-zsombor"}, "is_accepted": false, "score": 7, "last_activity_date": 1579979473, "last_edit_date": 1579979473, "creation_date": 1544276187, "answer_id": 53683053, "question_id": 52464653, "link": "https://stackoverflow.com/questions/52464653/how-to-move-data-into-multiple-rust-closures/53683053#53683053", "title": "How to move data into multiple Rust closures?", "body": "<p>You can use cloning on the gtk-rs widgets.</p>\n\n<p>In gtk-rs every object implementing <code>gtk::Widget</code> (so basically every GTK object you can use inside a <code>gtk::Window</code>) must also implement the <code>Clone</code> trait. Calling <code>clone()</code> is very cheap because it's just a pointer copy and a reference counter update.</p>\n\n<p>Knowing this below is valid and cheap:</p>\n\n<pre><code>let list_box_clone = list_box.clone();\nsearch_entry.connect_search_changed(move |_se| {\n    let _a = list_box.get_selected_rows();\n});\n</code></pre>\n\n<p>But since this solution is verbose and gets very ugly very soon if you have more than one objects to move, the community came up with the following macro:</p>\n\n<pre><code>macro_rules! clone {\n    (@param _) =&gt; ( _ );\n    (@param $x:ident) =&gt; ( $x );\n    ($($n:ident),+ =&gt; move || $body:expr) =&gt; (\n        {\n            $( let $n = $n.clone(); )+\n            move || $body\n        }\n    );\n    ($($n:ident),+ =&gt; move |$($p:tt),+| $body:expr) =&gt; (\n        {\n            $( let $n = $n.clone(); )+\n            move |$(clone!(@param $p),)+| $body\n        }\n    );\n}\n</code></pre>\n\n<p>The usage is very simple:</p>\n\n<pre><code>search_entry.connect_search_changed(clone!(list_box =&gt; move |_se| {\n    let _a = list_box.get_selected_rows();\n}));\n</code></pre>\n\n<p>This macro is capable of cloning any number of objects that are moved into a closure.</p>\n\n<p>For further explanation and examples check out this tutorial from the gtk-rs team: <a href=\"https://gtk-rs.org/docs-src/tutorial/closures\" rel=\"noreferrer\">Callbacks and closures</a></p>\n"}], "owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1138, "favorite_count": 0, "answer_count": 3, "score": 5, "last_activity_date": 1581908786, "creation_date": 1537693722, "last_edit_date": 1537712163, "question_id": 52464653, "link": "https://stackoverflow.com/questions/52464653/how-to-move-data-into-multiple-rust-closures", "title": "How to move data into multiple Rust closures?", "body": "<p>I have a two widgets in a simple GTK app:</p>\n\n<pre><code>extern crate gdk;\nextern crate gtk;\n\nuse super::desktop_entry::DesktopEntry;\n\nuse gdk::enums::key;\nuse gtk::prelude::*;\n\npub fn launch_ui(_desktop_entries: Vec&lt;DesktopEntry&gt;) {\n    gtk::init().unwrap();\n\n    let builder = gtk::Builder::new_from_string(include_str!(\"interface.glade\"));\n\n    let window: gtk::Window = builder.get_object(\"main_window\").unwrap();\n    let search_entry: gtk::SearchEntry = builder.get_object(\"search_entry\").unwrap();\n    let list_box: gtk::ListBox = builder.get_object(\"list_box\").unwrap();\n\n    window.show_all();\n\n    search_entry.connect_search_changed(move |_se| {\n        let _a = list_box.get_selected_rows();\n    });\n\n    window.connect_key_press_event(move |_, key| {\n        match key.get_keyval() {\n            key::Down =&gt; {\n                list_box.unselect_all();\n            }\n            _ =&gt; {}\n        }\n        gtk::Inhibit(false)\n    });\n\n    gtk::main();\n}\n</code></pre>\n\n<p>I need to change <code>list_box</code> from both events. I have two closures that <code>move</code>, but it is not possible to move <code>list_box</code> to both closures simultaneously as I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: capture of moved value: `list_box`\n</code></pre>\n\n<p>What can I do?</p>\n"}, {"tags": ["syntax", "rust", "move-semantics", "unsafe"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537669022, "post_id": 52461928, "comment_id": 91867046, "body": "What behavior do you think should happen if the code panics once the value has been moved out once but before it is moved back?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537669200, "post_id": 52461928, "comment_id": 91867068, "body": "See also <a href=\"https://stackoverflow.com/q/36557412/155423\">Change enum variant while moving the field to the new variant</a>; <a href=\"https://stackoverflow.com/q/29570781/155423\">Temporarily move out of borrowed content</a>."}, {"owner": {"reputation": 9545, "user_id": 242814, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fabed09b67201710f4cc958b4e668cb1?s=128&d=identicon&r=PG", "display_name": "Brennan Vincent", "link": "https://stackoverflow.com/users/242814/brennan-vincent"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537669685, "post_id": 52461928, "comment_id": 91867123, "body": "@Shepmaster I don\u2019t have a good answer. In my real program, I am only calling code that is guaranteed not to panic."}], "answers": [{"comments": [{"owner": {"reputation": 9545, "user_id": 242814, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fabed09b67201710f4cc958b4e668cb1?s=128&d=identicon&r=PG", "display_name": "Brennan Vincent", "link": "https://stackoverflow.com/users/242814/brennan-vincent"}, "edited": false, "score": 0, "creation_date": 1537666811, "post_id": 52462227, "comment_id": 91866772, "body": "The first solution will work, but it is a bit annoying since <code>T</code> might have a lot of methods. I guess for <code>Dummy</code> I would have to implement all those methods with stub implementations.  The second solution won&#39;t work for me, as <code>wrap_t</code> might be called from another method of <code>S</code>, so it does need to take <code>self</code> by reference."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1537669156, "last_edit_date": 1537669156, "creation_date": 1537666289, "answer_id": 52462227, "question_id": 52461928, "link": "https://stackoverflow.com/questions/52461928/replace-a-struct-member-with-a-new-value-that-uses-the-previous-value/52462227#52462227", "title": "Replace a struct member with a new value that uses the previous value", "body": "<p>The only <code>unsafe</code> function you are using is <code>mem::uninitialized</code>. You need something to pass to <code>mem::replace</code>, but implementing <code>Default</code> won't work because <code>default()</code> returns <code>Self</code>, which prevents it from being object-safe. Similarly, you can't implement <code>Clone</code> to duplicate the old value, since <code>clone()</code> also returns <code>Self</code>.</p>\n\n<p>You can just implement a dummy type for the purpose though:</p>\n\n<pre><code>struct Dummy;\nimpl T for Dummy {}\n\nfn wrap_t(&amp;mut self) {\n    let old_t = mem::replace(&amp;mut self.t, Box::new(Dummy));\n    let new_t = Box::new(Self::new(old_t));\n    mem::replace(&amp;mut self.t, new_t);\n}\n</code></pre>\n\n<p>You also won't need the <code>mem::forget</code> here now either (I'm assuming that was there to prevent undefined behaviour when the uninitialised memory was dropped).</p>\n\n<hr>\n\n<p>As an alternative to <code>Clone</code>, you can roll your own own, which clones to a <code>Box&lt;dyn T&gt;</code>, avoiding having a <code>Self</code> in the method signature, so the trait stays object safe:</p>\n\n<pre><code>trait T: Debug {\n    fn clone_in_box(&amp;self) -&gt; Box&lt;dyn T&gt;;\n}\n\nimpl T for S {\n    fn clone_in_box(&amp;self) -&gt; Box&lt;dyn T&gt; {\n        Box::new(S {\n            t: self.t.clone_in_box(),\n        })\n    }\n}\n</code></pre>\n\n\n\n<pre><code>fn wrap_t(&amp;mut self) {\n    let cloned = self.clone_in_box();\n    let old_t = mem::replace(&amp;mut self.t, cloned);\n    let new_t = Box::new(Self::new(old_t));\n    mem::replace(&amp;mut self.t, new_t);\n}\n</code></pre>\n\n<hr>\n\n<p>There is also an alternative design, which is much simpler to understand when reading the code. That is just to consume <code>self</code> and return a new object:</p>\n\n<pre><code>fn wrap_t(self) -&gt; Self {\n    Self::new(Box::new(Self::new(self.t)))\n}\n</code></pre>\n\n<p>And instead of this:</p>\n\n<pre><code>s.wrap_t();\n</code></pre>\n\n<p>You would do:</p>\n\n<pre><code>s = s.wrap_t();\n</code></pre>\n"}], "owner": {"reputation": 9545, "user_id": 242814, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fabed09b67201710f4cc958b4e668cb1?s=128&d=identicon&r=PG", "display_name": "Brennan Vincent", "link": "https://stackoverflow.com/users/242814/brennan-vincent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1546956512, "creation_date": 1537661688, "last_edit_date": 1546956512, "question_id": 52461928, "link": "https://stackoverflow.com/questions/52461928/replace-a-struct-member-with-a-new-value-that-uses-the-previous-value", "title": "Replace a struct member with a new value that uses the previous value", "body": "<p>I have a struct which owns a boxed value of some trait type. The struct itself also implements the same trait. I would like to replace the value with a new instance of the same struct, which wraps it.</p>\n\n<p>The following code, which does not compile, should make it more clear what I am trying to do:</p>\n\n<pre><code>trait T {}\n\nstruct S {\n    t: Box&lt;dyn T&gt;,\n}\nimpl T for S {}\n\nimpl S {\n    fn new(t: Box&lt;dyn T&gt;) -&gt; Self {\n        Self { t }\n    }\n\n    fn wrap_t(&amp;mut self) {\n        self.t = Box::new(Self::new(self.t))\n    }\n}\n</code></pre>\n\n<p>This fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:14:37\n   |\n14 |         self.t = Box::new(Self::new(self.t))\n   |                                     ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Implementing <code>wrap_t</code> like this does compile:</p>\n\n<pre><code>use std::mem;\n\nfn wrap_t(&amp;mut self) {\n    unsafe {\n        let old_t = mem::replace(&amp;mut self.t, mem::uninitialized());\n        let new_t = Box::new(Self::new(old_t));\n        let uninit = mem::replace(&amp;mut self.t, new_t);\n        mem::forget(uninit);\n    }\n}\n</code></pre>\n\n<p>I wonder if there is a safe way to do this.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537643437, "post_id": 52459587, "comment_id": 91862057, "body": "I am not trying to match an <code>match</code> statement though. I don&#39;t mind a specialized syntax if I have to, but didn&#39;t really want to have one to replace the <code>matcher=&gt;result</code> part of match."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537645104, "post_id": 52459587, "comment_id": 91862453, "body": "Ah ok. I misunderstood."}], "answers": [{"comments": [{"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 0, "creation_date": 1537648800, "post_id": 52460329, "comment_id": 91863377, "body": "That&#39;s a lot of matching just for something that I am going to put back in the same order again! Ah, well, I have seen this before with rust macros. Many thanks!"}, {"owner": {"reputation": 2621, "user_id": 7884305, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f582791bc217379415cc2bc54abc718?s=128&d=identicon&r=PG&f=1", "display_name": "Chayim Friedman", "link": "https://stackoverflow.com/users/7884305/chayim-friedman"}, "edited": false, "score": 0, "creation_date": 1602025689, "post_id": 52460329, "comment_id": 113587945, "body": "Just note that this isn&#39;t 1-to-1 mapping of Rust&#39;s <code>match</code> statement. This requires a comma after block (<code>match x { None =&gt; {} _ =&gt; () }</code> is not valid), and disallows a trailing comma"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1537649157, "last_edit_date": 1537649157, "creation_date": 1537645911, "answer_id": 52460329, "question_id": 52459587, "link": "https://stackoverflow.com/questions/52459587/is-there-any-way-to-match-the-body-of-a-match-statement-with-a-rust-macro/52460329#52460329", "title": "Is there any way to match the body of a match statement with a Rust macro?", "body": "<p>There a few things wrong with your syntax. If you want to match a repeated pattern then you need to start the grouping with a <code>$</code>, like this: <code>$($matcher:tt =&gt; $result:tt),*</code>. </p>\n\n<p>Next, you'll likely want to match more than identifiers, since any expression is valid to match against, so change that to <code>expr</code>. Left of the <code>=&gt;</code> you will want a <code>pat</code> (pattern), not a <code>tt</code>. A token tree is general, but for example, in <code>n if n &lt; 5</code> will match 5 separate tokens - <code>n</code>, <code>if</code>, <code>n</code>, <code>&lt;</code>, <code>5</code> - and you generally only fall back on that when nothing else works. The same for result - this should be an <code>expr</code> (expression) too.</p>\n\n<p>Ignoring the <code>if &lt; 5</code> guard for now, you can match the following:</p>\n\n<pre><code>my_match! {\n    x,\n    10 =&gt; \"Ten\",\n    _ =&gt; \"something else\"\n}\n</code></pre>\n\n<p>with the following macro:</p>\n\n<pre><code>macro_rules! my_match {\n   ($obj:expr, $($matcher:pat =&gt; $result:expr),*) =&gt; {\n       match $obj {\n           $($matcher =&gt; $result),*\n       }\n   }\n}\n</code></pre>\n\n<p>The guards are annoying because they are optional, but the <code>?</code> quantifier is not yet stable. Instead you have to use <code>*</code> (0 or more), even though it will technically match more than you need it to. </p>\n\n<p>The full macro is then:</p>\n\n<pre><code>macro_rules! my_match {\n   ($obj:expr, $($matcher:pat $(if $pred:expr)* =&gt; $result:expr),*) =&gt; {\n       match $obj {\n           $($matcher $(if $pred)* =&gt; $result),*\n       }\n   }\n}\n</code></pre>\n\n<p>And supports the this usage:</p>\n\n<pre><code>let x = 7;\nlet s = my_match! {\n    x,\n    10 =&gt; \"Ten\",\n    n if x &lt; 5 =&gt; \"Less than 5\",\n    _ =&gt; \"something else\"\n};\nprintln!(\"s = {:?}\", s); // \"Something else\" \n</code></pre>\n\n<p>A block is also an <code>expr</code>, so this is also valid:</p>\n\n<pre><code>my_match! { \n    x,\n    10 =&gt; \"Ten\",\n    n if x &lt; 5 =&gt; { \n        println!(\"it was {}\", n); \n        \"Less than 5\" \n    },\n    _ =&gt; \"something else\"\n};\n</code></pre>\n"}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1252, "favorite_count": 0, "accepted_answer_id": 52460329, "answer_count": 1, "score": 0, "last_activity_date": 1537649157, "creation_date": 1537640410, "last_edit_date": 1537649055, "question_id": 52459587, "link": "https://stackoverflow.com/questions/52459587/is-there-any-way-to-match-the-body-of-a-match-statement-with-a-rust-macro", "title": "Is there any way to match the body of a match statement with a Rust macro?", "body": "<p>I have something like this in mind:</p>\n\n<pre><code>macro_rules! mymatch {\n   ($obj:ident, ($matcher:tt =&gt; $result:tt),*) =&gt; {\n       match $obj {\n           $matcher\n       },\n   }\n}\n\nmymatch! {\n    x,\n    10 =&gt; \"Ten\",\n    n if n &lt; 5 =&gt; \"Less than 5\"\n}\n</code></pre>\n\n<p>I don't want to reimplement the <code>match</code> statement, but I do want to put additional stuff on either side. However, I can't work out how to match\nthe contents of a match statement.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537638253, "post_id": 52459204, "comment_id": 91860683, "body": "As the error help text tells you: <i>consider removing this semicolon</i>"}, {"owner": {"reputation": 162, "user_id": 7419878, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xYnvc.jpg?s=128&g=1", "display_name": "Nikita Davidenko", "link": "https://stackoverflow.com/users/7419878/nikita-davidenko"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537638755, "post_id": 52459204, "comment_id": 91860840, "body": "@Shepmaster sorry, lol it was so easy..."}], "owner": {"reputation": 162, "user_id": 7419878, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xYnvc.jpg?s=128&g=1", "display_name": "Nikita Davidenko", "link": "https://stackoverflow.com/users/7419878/nikita-davidenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1537638213, "answer_count": 0, "score": 0, "last_activity_date": 1537638280, "creation_date": 1537637851, "question_id": 52459204, "link": "https://stackoverflow.com/questions/52459204/why-lambda-in-map-return-not-i32", "closed_reason": "Duplicate", "title": "Why lambda in map return (), not i32?", "body": "<pre><code>let v: Vec&lt;i32&gt; = vec![1, 2, 3].into_iter().map(|x:i32| -&gt; i32 {\n    let res = x + 1;\n    res;\n}).rev().collect();\n\nprint!(\"{:?}\", v)\n</code></pre>\n\n<p>I have this code, and get compile error</p>\n\n<pre><code>--&gt; src\\main.rs:8:68\n   |\n8  |       let v: Vec&lt;i32&gt; = vec![1, 2, 3].into_iter().map(|x:i32| -&gt; i32 {\n   |  ____________________________________________________________________^\n9  | |         let res = x + 1;\n10 | |         res;\n   | |            - help: consider removing this semicolon\n11 | |     }).rev().collect();\n   | |_____^ expected i32, found ()\n   |\n   = note: expected type `i32`\n              found type `()`\n</code></pre>\n\n<p>I can't understand, why found type <code>()</code>\nHow it work? Why this happens?</p>\n"}, {"tags": ["architecture", "rust", "immutability", "mutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537634522, "post_id": 52458539, "comment_id": 91859625, "body": "The consumer of <code>app</code> does not and can not know that <code>app.get_library()</code> and <code>app.get_consumer_mut()</code> do not ultimately point to the same reference."}, {"owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537640498, "post_id": 52458539, "comment_id": 91861335, "body": "So would it make sense to split the application in two, one mutable and one immutable part?"}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "edited": false, "score": 0, "creation_date": 1537816442, "post_id": 52474490, "comment_id": 91913198, "body": "Thanks - my demo code left out one important bit of information :) But for the code given, this is the correct answer."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1537794974, "last_edit_date": 1537794974, "creation_date": 1537774022, "answer_id": 52474490, "question_id": 52458539, "link": "https://stackoverflow.com/questions/52458539/application-architecture-problem-with-mutable-immutable-reference/52474490#52474490", "title": "Application architecture: Problem with Mutable/Immutable reference", "body": "<p>You will need to make sure that you drop the reference to the library before you try to access the consumer. For example:</p>\n\n<pre><code>let data = Data::from_template(app.get_library().get(1), \"hi\");\napp.get_consumer_mut().consume(data);\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 52474490, "answer_count": 1, "score": 1, "last_activity_date": 1537794974, "creation_date": 1537633153, "last_edit_date": 1537634084, "question_id": 52458539, "link": "https://stackoverflow.com/questions/52458539/application-architecture-problem-with-mutable-immutable-reference", "title": "Application architecture: Problem with Mutable/Immutable reference", "body": "<p>I tried to write an application where the user can create objects from templates.</p>\n\n<p>In my dreams the code looks like this:</p>\n\n<pre><code>struct DataTemplate {\n    tmp: u32,\n}\n\nstruct Data&lt;'a&gt; {\n    name: &amp;'a str,\n    tmp: u32,\n}\n\nstruct Consumer&lt;'a&gt; {\n    items: Vec&lt;Data&lt;'a&gt;&gt;,\n}\n\nstruct Library {\n    items: Vec&lt;DataTemplate&gt;,\n}\n\nstruct Application&lt;'a&gt; {\n    library: Library,\n    consumer: Consumer&lt;'a&gt;,\n}\n\nimpl DataTemplate {\n    fn new(data: u32) -&gt; Self {\n        DataTemplate { tmp: data }\n    }\n}\n\nimpl&lt;'a&gt; Data&lt;'a&gt; {\n    fn new(name: &amp;'a str, tmp: u32) -&gt; Self {\n        Data { name, tmp }\n    }\n    fn from_template(template: &amp;DataTemplate, name: &amp;'a str) -&gt; Self {\n        Data::new(name, template.tmp)\n    }\n}\n\nimpl&lt;'a&gt; Consumer&lt;'a&gt; {\n    fn new() -&gt; Self {\n        Consumer { items: vec![] }\n    }\n    fn consume(&amp;mut self, data: Data&lt;'a&gt;) {\n        self.items.push(data);\n    }\n}\n\nimpl Library {\n    fn new() -&gt; Self {\n        Library { items: vec![] }\n    }\n    fn add(&amp;mut self, d: DataTemplate) {\n        self.items.push(d);\n    }\n    fn get(&amp;self, index: usize) -&gt; &amp;DataTemplate {\n        &amp;self.items[index]\n    }\n}\n\nimpl&lt;'a&gt; Application&lt;'a&gt; {\n    fn new() -&gt; Self {\n        Application {\n            library: Library::new(),\n            consumer: Consumer::new(),\n        }\n    }\n    fn get_library(&amp;self) -&gt; &amp;Library {\n        &amp;self.library\n    }\n    fn get_library_mut(&amp;mut self) -&gt; &amp;mut Library {\n        &amp;mut self.library\n    }\n    fn get_consumer_mut(&amp;mut self) -&gt; &amp;mut Consumer&lt;'a&gt; {\n        &amp;mut self.consumer\n    }\n}\n\nfn main() {\n    let mut app = Application::new();\n\n    use_it(&amp;mut app);\n}\n\nfn use_it(app: &amp;mut Application) {\n    app.get_library_mut().add(DataTemplate::new(1));\n    app.get_library_mut().add(DataTemplate::new(2));\n    app.get_library_mut().add(DataTemplate::new(3));\n\n    let item = app.get_library().get(1);\n    app.get_consumer_mut()\n        .consume(Data::from_template(item, \"hi\"));\n}\n</code></pre>\n\n<p>The problem is in the <code>use_it</code> function:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*app` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:89:5\n   |\n88 |     let item = app.get_library().get(1);\n   |                --- immutable borrow occurs here\n89 |     app.get_consumer_mut()\n   |     ^^^ mutable borrow occurs here\n90 |         .consume(Data::from_template(item, \"hi\"));\n91 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>I need to get an immutable reference to the app (<code>let item = app.get_library()</code>) to get the template, and then after creating the data item from the template, I have to add it to the consumer in the application, now mutable of course (<code>app.get_consumer_mut()</code>).</p>\n\n<p>Is there any common solution for a problem like this, or is this entire idea just not the Rust way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537631722, "post_id": 52458068, "comment_id": 91858825, "body": "As written, <code>A</code> <i>does</i> have lifetime <code>&#39;a</code>. What makes you think it &quot;must&quot;? Was there a compiler error on some previous version of this code which led you to that  conclusion?"}, {"owner": {"reputation": 452, "user_id": 4990191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-uzhV4XNdp2U/AAAAAAAAAAI/AAAAAAAAAvo/6tbSDTYrDOg/photo.jpg?sz=128", "display_name": "Zz Tux", "link": "https://stackoverflow.com/users/4990191/zz-tux"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537676424, "post_id": 52458068, "comment_id": 91867980, "body": "@PeterHall If <code>A</code> isn&#39;t specified lifetime that longer than <code>&#39;a</code> explicitly, the compiler will raise error <code>the parameter type `A` may not live long enough</code>."}], "owner": {"reputation": 452, "user_id": 4990191, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-uzhV4XNdp2U/AAAAAAAAAAI/AAAAAAAAAvo/6tbSDTYrDOg/photo.jpg?sz=128", "display_name": "Zz Tux", "link": "https://stackoverflow.com/users/4990191/zz-tux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1537676373, "creation_date": 1537629554, "last_edit_date": 1537676373, "question_id": 52458068, "link": "https://stackoverflow.com/questions/52458068/why-must-the-lifetime-of-a-be-longer-than-a-for-boxfna-output-a", "title": "Why must the lifetime of A be longer than &#39;a for Box&lt;Fn&lt;A, Output = ()&gt; + &#39;a&gt;?", "body": "<p>In <a href=\"https://play.rust-lang.org/?gist=324f93588d69f97985f7d301f24858ae&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this code</a>, why must the lifetime of <code>A</code> be longer than <code>'a</code> for <code>Box&lt;Fn&lt;A, Output = ()&gt; + 'a&gt;</code>?  </p>\n\n<pre><code>#![feature(unboxed_closures)]\n\ntrait Tt {}\n\nstruct S&lt;'a, A: Copy + 'a&gt; {\n    x: Box&lt;Fn&lt;A, Output = ()&gt; + 'a&gt;,\n}\n\nfn add&lt;'a, A: Copy + 'a&gt;(x: Box&lt;Fn&lt;A, Output = ()&gt; + 'a&gt;) -&gt; Box&lt;dyn Tt + 'a&gt; {\n    Box::new(S::&lt;'a, A&gt; { x })\n}\n\nimpl&lt;'a, A: Copy + 'a&gt; Tt for S&lt;'a, A&gt; {}\n</code></pre>\n\n<p><code>A</code> is the argument list of <code>Fn&lt;A, Output = ()&gt;</code>. Why isn't the lifetime of <code>A</code> the <em>duration of calling <code>Fn&lt;A, Output = ()&gt;</code></em> but instead <em>longer than <code>Fn&lt;A, Output = ()&gt;</code></em>?</p>\n\n<p><strong>UPDATE 1</strong></p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4968d4f9a28685a81c6db25d61b3d180&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">If <code>A</code> isn't specified any lifetime longer than <code>'a</code> explicitly, the compiler will raise a error <code>the parameter type `A` may not live long enough</code>.</a></p>\n\n<pre><code>#![feature(unboxed_closures)]\n\ntrait Tt {}\n\nstruct S&lt;'a, A: Copy&gt; {\n    x: Box&lt;Fn&lt;A, Output = ()&gt; + 'a&gt;,\n}\n\nfn add&lt;'a, A: Copy&gt;(x: Box&lt;Fn&lt;A, Output = ()&gt; + 'a&gt;) -&gt; Box&lt;dyn Tt + 'a&gt; {\n    Box::new(S::&lt;'a, A&gt; { x })\n}\n\nimpl&lt;'a, A: Copy&gt; Tt for S&lt;'a, A&gt; {}\n</code></pre>\n\n<p><code>A</code> is the argument list of <code>Fn&lt;A, Output = ()&gt;</code>, which should be live from the begin to the end of calling <code>Fn&lt;A, Output = ()&gt;</code>. <strong>I think the lifetime of <code>A</code> shouldn't be affected by the lifetime of <code>Fn&lt;A, Output = ()&gt;</code></strong> . But the compiler requires the lifetime of <code>A</code> must be longer than <code>Fn&lt;A, Output = ()&gt;</code>, aka <code>'a</code>. Why?</p>\n"}, {"tags": ["rust", "command"], "comments": [{"owner": {"reputation": 3244, "user_id": 687438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cabf9d1f557d1ebb90dbe683981aca6?s=128&d=identicon&r=PG", "display_name": "Martin Gallagher", "link": "https://stackoverflow.com/users/687438/martin-gallagher"}, "edited": false, "score": 1, "creation_date": 1537628077, "post_id": 52457699, "comment_id": 91857819, "body": "<code>output</code>&#39;s lifetime is within your <code>if interpreter != &quot;&quot; {</code> branch - a simple solution is to use the owned <code>String</code> type, it&#39;ll also probably help the ergonomics of your code. The <code>String</code> can be passed as <code>&amp;str</code> further down the line by: <code>&amp;String</code> - see: <a href=\"https://play.rust-lang.org/?gist=f452d442e10c3a36c5c345aabd6d152f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1537631151, "creation_date": 1537631151, "answer_id": 52458276, "question_id": 52457699, "link": "https://stackoverflow.com/questions/52457699/conditionally-converting-the-standard-output-of-a-command-to-a-string-does-not-l/52458276#52458276", "title": "Conditionally converting the standard output of a Command to a string does not live long enough", "body": "<p><code>binary_path</code> is a <code>&amp;'static str</code> because it is initialized to a string literal. The result of calling <code>str::from_utf8</code> is a <code>&amp;str</code> with a shorter lifetime than that. You cannot <em>make</em> the value live longer. This is a huge reason that Rust exists.</p>\n\n<p>The simplest thing you can do is switch to a <code>String</code>:</p>\n\n<pre><code>let mut binary_path = String::new();\n\nif interpreter.is_empty() {\n    // ...\n    binary_path = String::from_utf8(output.stdout).unwrap();\n}\n</code></pre>\n\n<p>You could also use a <code>Cow</code> if you benchmarked that always allocating the <code>binary_path</code> is poor for performance.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a></li>\n<li><a href=\"https://stackoverflow.com/a/37580535/155423\">How do I convert a Vector of bytes (u8) to a string</a></li>\n<li><a href=\"https://stackoverflow.com/q/36706429/155423\">Return either a borrowed or owned type in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/23975391/155423\">How to convert a String into a &amp;&#39;static str</a></li>\n</ul>\n"}], "owner": {"reputation": 4578, "user_id": 2117444, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/04934d5cad3d57971c92e47a94b597e9?s=128&d=identicon&r=PG", "display_name": "Timon de Groot", "link": "https://stackoverflow.com/users/2117444/timon-de-groot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 1, "accepted_answer_id": 52458276, "answer_count": 1, "score": 0, "last_activity_date": 1537631151, "creation_date": 1537627127, "last_edit_date": 1537630666, "question_id": 52457699, "link": "https://stackoverflow.com/questions/52457699/conditionally-converting-the-standard-output-of-a-command-to-a-string-does-not-l", "title": "Conditionally converting the standard output of a Command to a string does not live long enough", "body": "<p>I'm writing an application that needs to lookup the path of a binary using <code>which</code>. I already found out how to run a command, but I can't store the <code>output.stdout</code> to a variable that I can use.</p>\n\n<pre><code>use std::process::Command;\nuse std::str;\n\nfn main() {\n    let interpreter: &amp;str = \"php72\";\n    let binary: &amp;str = \"composer\";\n    let mut _binary_path: &amp;str = \"\";\n\n    if interpreter != \"\" {\n        let output = Command::new(\"which\")\n            .arg(binary)\n            .output()\n            .expect(\"Execution of 'which' failed.\");\n        _binary_path = str::from_utf8(&amp;output.stdout).unwrap();\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2fdb59c15c58de3b0ed1ac4a02344105&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `output.stdout` does not live long enough\n  --&gt; src/main.rs:14:40\n   |\n14 |         _binary_path = str::from_utf8(&amp;output.stdout).unwrap();\n   |                                        ^^^^^^^^^^^^^ borrowed value does not live long enough\n15 |     }\n   |     - `output.stdout` dropped here while still borrowed\n16 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>Borrowing and referencing is still a bit confusing to me, even though I've read the docs. I understand that the lifetime of output is limited, since it lives in an <code>if</code> statement. I don't understand why it won't let me copy the value to the scope of the <code>main()</code> function. </p>\n\n<p>What's going on? What's the best way to read the stdout?</p>\n"}, {"tags": ["random", "rust"], "comments": [{"owner": {"reputation": 711, "user_id": 8890345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/703664448de0eb2b1f67be5775aed66a?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan Mills", "link": "https://stackoverflow.com/users/8890345/nathan-mills"}, "edited": false, "score": 4, "creation_date": 1537604230, "post_id": 52454677, "comment_id": 91852136, "body": "<code>rand::thread_rng().gen_range(1,7)</code> might work. See this page on <a href=\"https://doc.rust-lang.org/book/2018-edition/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">Programming a Guessing Game</a>. Make sure to put lines <code>extern crate rand;</code> and <code>use rand::Rng;</code> in your program."}], "answers": [{"comments": [{"owner": {"reputation": 7133, "user_id": 27074, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d787ce9740a19eac110217bc8af43cbe?s=128&d=identicon&r=PG", "display_name": "Chris Jefferson", "link": "https://stackoverflow.com/users/27074/chris-jefferson"}, "edited": false, "score": 0, "creation_date": 1537610176, "post_id": 52454734, "comment_id": 91853452, "body": "Thanks. This is a correct answer, but I hoped that rust would have something to do this for me :) (looks like Uniform might do it)"}], "tags": [], "owner": {"reputation": 5273, "user_id": 980520, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/8d0169102e3a9749286270484448689e?s=128&d=identicon&r=PG&f=1", "display_name": "lynks", "link": "https://stackoverflow.com/users/980520/lynks"}, "is_accepted": false, "score": 3, "last_activity_date": 1537604112, "last_edit_date": 1537604112, "creation_date": 1537603521, "answer_id": 52454734, "question_id": 52454677, "link": "https://stackoverflow.com/questions/52454677/how-to-generate-a-random-rust-integer-in-a-range-without-introducing-bias/52454734#52454734", "title": "How to generate a random Rust integer in a range without introducing bias?", "body": "<p>You're correct that a bias is introduced; whenever you want to map from set A to set B where the cardinality of set B is not a factor or multiple of set A, you will have bias.</p>\n\n<p>In your case, <code>42*6=252</code>. So you can just throw away any <code>u8</code> values of 252 or greater (and call random again).</p>\n\n<p>Your output can then be safely mapped with the modulus operator. Finally add 1 to achieve the standard [1,6] dice output.</p>\n\n<p>It might seem unclean to call random again but there is no way of mapping a set of 256 values to a set of 6 without introducing bias.</p>\n\n<p>Edit: looks like the rand crate has something which takes bias into account: <a href=\"https://docs.rs/rand/latest/rand/distributions/uniform/struct.Uniform.html\" rel=\"nofollow noreferrer\">https://docs.rs/rand/latest/rand/distributions/uniform/struct.Uniform.html</a></p>\n"}, {"comments": [{"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1548179188, "post_id": 52456488, "comment_id": 95447542, "body": "unfortunately this does not even compile"}, {"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1548179196, "post_id": 52456488, "comment_id": 95447545, "body": "no method named <code>gen_rng</code> found for type <code>rand::prelude::ThreadRng</code> in the  current scope"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1548179483, "post_id": 52456488, "comment_id": 95447678, "body": "@nikoss it worked fine, even before I updated. Did you use the same version of the crate specified in the answer? Did you copy the <b>entire</b> example? Did you import the appropriate trait? Did you fully read the error message? For example, you <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a324a847f0db68268d4ef6805a0090af\" rel=\"nofollow noreferrer\">get that error if you don&#39;t import <code>Rng</code></a> and it tells you how to fix it: <i>the following trait is implemented but not in scope, perhaps add a <code>use</code> for it: <code>use rand::Rng;</code></i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1610133403, "last_edit_date": 1610133403, "creation_date": 1537617561, "answer_id": 52456488, "question_id": 52454677, "link": "https://stackoverflow.com/questions/52454677/how-to-generate-a-random-rust-integer-in-a-range-without-introducing-bias/52456488#52456488", "title": "How to generate a random Rust integer in a range without introducing bias?", "body": "<p>Use <a href=\"https://docs.rs/rand/0.8.0/rand/trait.Rng.html#method.gen_range\" rel=\"nofollow noreferrer\"><code>Rng::gen_range</code></a> for a one-off value:</p>\n<pre><code>use rand::{self, Rng}; // 0.8.0\n\nfn main() {\n    let mut rng = rand::thread_rng();\n\n    let die = rng.gen_range(1..=6);\n\n    println!(&quot;The die was: {}&quot;, die);\n}\n\n</code></pre>\n<p>Under the hood, this creates a <a href=\"https://docs.rs/rand/0.8.0/rand/distributions/struct.Uniform.html\" rel=\"nofollow noreferrer\"><code>Uniform</code></a> struct. Create this struct yourself if you will be getting multiple random numbers:</p>\n<pre><code>use rand::{\n    self,\n    distributions::{Distribution, Uniform},\n}; // 0.8.0\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let die_range = Uniform::new_inclusive(1, 6);\n\n    let die = die_range.sample(&amp;mut rng);\n\n    println!(&quot;{}&quot;, die);\n}\n</code></pre>\n<p><code>Uniform</code> does some precomputation to figure out how to map the complete range of random values to your desired range without introducing bias. It translates and resizes your original range to most closely match the range of the random number generator, discards any random numbers that fall outside this new range, then resizes and translates back to the original range.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/10984974/155423\">Why do people say there is modulo bias when using a random number generator?</a></li>\n</ul>\n"}], "owner": {"reputation": 7133, "user_id": 27074, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d787ce9740a19eac110217bc8af43cbe?s=128&d=identicon&r=PG", "display_name": "Chris Jefferson", "link": "https://stackoverflow.com/users/27074/chris-jefferson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1715, "favorite_count": 0, "accepted_answer_id": 52456488, "answer_count": 2, "score": 3, "last_activity_date": 1610133403, "creation_date": 1537602944, "last_edit_date": 1537617113, "question_id": 52454677, "link": "https://stackoverflow.com/questions/52454677/how-to-generate-a-random-rust-integer-in-a-range-without-introducing-bias", "title": "How to generate a random Rust integer in a range without introducing bias?", "body": "<p>How you I generate a random dice roll in Rust?</p>\n\n<p>I know I can use <code>rand::random</code>, but that requires I want to generate a value of an integer type. Using <code>rand::random&lt;u8&gt;() % 6</code> introduces a bias.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 15778, "user_id": 3706693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c23cb4348804fbc993d70df4cab71fc?s=128&d=identicon&r=PG", "display_name": "num8er", "link": "https://stackoverflow.com/users/3706693/num8er"}, "edited": false, "score": 0, "creation_date": 1537587460, "post_id": 52453180, "comment_id": 91849616, "body": "if You know that there&#39;s 3 times nesting, why not just simply call <code>unwrap()</code> chained 3 times?  <code>fn main() {     let x = Some(Some(Some(1)));     println!(&quot;{:?}&quot;, x.unwrap().unwrap().unwrap()); }</code>"}, {"owner": {"reputation": 6982, "user_id": 909944, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64f6310eff4faf9ecfd0567b94896d11?s=128&d=identicon&r=PG", "display_name": "slipheed", "link": "https://stackoverflow.com/users/909944/slipheed"}, "reply_to_user": {"reputation": 15778, "user_id": 3706693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c23cb4348804fbc993d70df4cab71fc?s=128&d=identicon&r=PG", "display_name": "num8er", "link": "https://stackoverflow.com/users/3706693/num8er"}, "edited": false, "score": 1, "creation_date": 1537587654, "post_id": 52453180, "comment_id": 91849640, "body": "The <code>Option</code>s could potentially include None at some point. For example: Some(None) or Some(Some(None)). Both of those should map to None."}, {"owner": {"reputation": 15778, "user_id": 3706693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c23cb4348804fbc993d70df4cab71fc?s=128&d=identicon&r=PG", "display_name": "num8er", "link": "https://stackoverflow.com/users/3706693/num8er"}, "edited": false, "score": 0, "creation_date": 1537587706, "post_id": 52453180, "comment_id": 91849645, "body": "I&#39;m new to rust, but understood Your point. Thanks"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1537610017, "post_id": 52453180, "comment_id": 91853413, "body": "I would suggest to not name this &quot;unwrap&quot;, as this usually means &quot;panic on None&quot; in Rust, rather than the behaviours you are trying to implement here."}], "answers": [{"tags": [], "owner": {"reputation": 6982, "user_id": 909944, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64f6310eff4faf9ecfd0567b94896d11?s=128&d=identicon&r=PG", "display_name": "slipheed", "link": "https://stackoverflow.com/users/909944/slipheed"}, "is_accepted": false, "score": 5, "last_activity_date": 1537618016, "last_edit_date": 1537618016, "creation_date": 1537587151, "answer_id": 52453259, "question_id": 52453180, "link": "https://stackoverflow.com/questions/52453180/how-do-i-unwrap-an-arbitrary-number-of-nested-option-types/52453259#52453259", "title": "How do I unwrap an arbitrary number of nested Option types?", "body": "<p>I solved it with auto traits (<code>optin_builtin_traits</code>), but I'm not sure if this is the best approach:</p>\n\n<pre><code>#![feature(optin_builtin_traits)]\n\ntrait IsOption {}\nimpl&lt;T&gt; IsOption for Option&lt;T&gt; {}\n\nauto trait IsSingleOption {}\nimpl&lt;T&gt; !IsSingleOption for Option&lt;Option&lt;T&gt;&gt; {}\n\ntrait UnwrapOption {\n    type Inner;\n    fn unwrap_opt(self) -&gt; Option&lt;Self::Inner&gt;;\n}\n\nimpl&lt;T&gt; UnwrapOption for Option&lt;T&gt;\nwhere\n    Self: IsSingleOption,\n{\n    type Inner = T;\n    fn unwrap_opt(self) -&gt; Option&lt;Self::Inner&gt; {\n        self\n    }\n}\n\nimpl&lt;T&gt; UnwrapOption for Option&lt;T&gt;\nwhere\n    T: IsOption + UnwrapOption,\n{\n    type Inner = &lt;T as UnwrapOption&gt;::Inner;\n    fn unwrap_opt(self) -&gt; Option&lt;Self::Inner&gt; {\n        match self {\n            Some(e) =&gt; e.unwrap_opt(),\n            None =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    let x = Some(Some(Some(1)));\n    println!(\"{:?}\", x.unwrap_opt());\n    let x = Some(1);\n    println!(\"{:?}\", x.unwrap_opt());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=eef55ffacc04b0c89bb331466471f28b&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 6982, "user_id": 909944, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64f6310eff4faf9ecfd0567b94896d11?s=128&d=identicon&r=PG", "display_name": "slipheed", "link": "https://stackoverflow.com/users/909944/slipheed"}, "edited": false, "score": 1, "creation_date": 1537632171, "post_id": 52456677, "comment_id": 91858966, "body": "This actually turned out to be my issue - I didn&#39;t realize <code>and_then</code> was the correct way to map things that return <code>Option</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1592836105, "last_edit_date": 1592836105, "creation_date": 1537619441, "answer_id": 52456677, "question_id": 52453180, "link": "https://stackoverflow.com/questions/52453180/how-do-i-unwrap-an-arbitrary-number-of-nested-option-types/52456677#52456677", "title": "How do I unwrap an arbitrary number of nested Option types?", "body": "<p>Instead of flattening out the nested option, as the <a href=\"https://stackoverflow.com/a/52453259/155423\">other answer shows</a>, I'd advocate that you never <strong>create</strong> an <code>Option&lt;Option&lt;T&gt;&gt;</code> that you need to flatten in the first place. In the majority of cases I've seen, it's because someone misuses <code>Option::map</code> when they should have used <code>Option::and_then</code>:</p>\n<pre><code>fn main() {\n    let input = user_input();\n\n    let a = input.map(add1);\n    // a is Option&lt;Option&lt;i32&gt;&gt;\n\n    let b = input.and_then(add1);\n    // a is Option&lt;i32&gt;\n}\n\nfn user_input() -&gt; Option&lt;i32&gt; {\n    Some(10)\n}\n\nfn add1(a: i32) -&gt; Option&lt;i32&gt; {\n    Some(a + 1)\n}\n</code></pre>\n<p>Remember that Rust is a statically typed language; you will always know the exact level of nesting.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/59028327/155423\">Flatten nested Results in Rust</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 848, "user_id": 8195987, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9550984d8633cb6f1b538445082dd400?s=128&d=identicon&r=PG&f=1", "display_name": "Angelicos Phosphoros", "link": "https://stackoverflow.com/users/8195987/angelicos-phosphoros"}, "is_accepted": false, "score": 0, "last_activity_date": 1605022884, "last_edit_date": 1605022884, "creation_date": 1605022788, "answer_id": 64772021, "question_id": 52453180, "link": "https://stackoverflow.com/questions/52453180/how-do-i-unwrap-an-arbitrary-number-of-nested-option-types/64772021#64772021", "title": "How do I unwrap an arbitrary number of nested Option types?", "body": "<p>If you have many <code>Option</code>s and you want to avoid chaining <code>unwrap</code>s, you can use <code>match</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let val = Some(Some(Some(5)));\nlet res = match val {\n    Some(Some(Some(v))) =&gt; v,\n    _ =&gt; 0, // panic or default\n};\n</code></pre>\n"}], "owner": {"reputation": 6982, "user_id": 909944, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64f6310eff4faf9ecfd0567b94896d11?s=128&d=identicon&r=PG", "display_name": "slipheed", "link": "https://stackoverflow.com/users/909944/slipheed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1822, "favorite_count": 2, "accepted_answer_id": 52456677, "answer_count": 3, "score": 9, "last_activity_date": 1606924548, "creation_date": 1537586064, "last_edit_date": 1606924548, "question_id": 52453180, "link": "https://stackoverflow.com/questions/52453180/how-do-i-unwrap-an-arbitrary-number-of-nested-option-types", "title": "How do I unwrap an arbitrary number of nested Option types?", "body": "<p>I'm trying to write a trait that will allow me to &quot;unwrap&quot; multiple nested <code>Option&lt;Option&lt;...&lt;T&gt;&gt;&gt;&gt;</code> to a single <code>Option&lt;T&gt;</code> to better work with an API I am using. I'm trying to create a generic solution, but I can't figure out how to make it work.</p>\n<p>This is one of my many attempts:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait UnwrapOption&lt;T&gt; {\n    fn unwrap_opt(self) -&gt; Option&lt;T&gt;;\n}\n\nimpl&lt;T&gt; UnwrapOption&lt;T&gt; for Option&lt;T&gt; {\n    fn unwrap_opt(self) -&gt; Option&lt;T&gt; {\n        self\n    }\n}\n\nimpl&lt;T&gt; UnwrapOption&lt;T&gt; for Option&lt;Option&lt;T&gt;&gt; {\n    fn unwrap_opt(self) -&gt; Option&lt;T&gt; {\n        match self {\n            Some(e) =&gt; e.unwrap_opt(),\n            None =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    let x = Some(Some(Some(1)));\n    println!(&quot;{:?}&quot;, x.unwrap_opt());\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:22:24\n   |\n22 |     println!(&quot;{:?}&quot;, x.unwrap_opt());\n   |                      --^^^^^^^^^^--\n   |                      | |\n   |                      | cannot infer type for type parameter `T` declared on the trait `UnwrapOption`\n   |                      this method call resolves to `Option&lt;T&gt;`\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537623449, "post_id": 52451313, "comment_id": 91856600, "body": "I&#39;m not sure how helpful this is, but the code can be simplified further. <a href=\"https://play.rust-lang.org/?gist=d472c89829c2c0e5286982486d1746f7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> I don&#39;t yet understand why this works with an <code>&amp;</code> ref but not with the custom <code>Ref</code> wrapper."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537626723, "post_id": 52451313, "comment_id": 91857478, "body": "@PeterHall The problem is with <code>deref</code> (or any kind of accessor method) not with <code>Ref</code> vs <code>&amp;</code>: <a href=\"https://play.rust-lang.org/?gist=6702c035798ab0335c5199e7aad3cfc6&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>.  If you comment out the <code>()</code> in my example, you will get the same error. If you comment out <code>()</code> and <code>&#39;a</code> the error is gone."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1537631939, "creation_date": 1537631939, "answer_id": 52458379, "question_id": 52451313, "link": "https://stackoverflow.com/questions/52451313/chaining-a-sequence-of-things-that-are-either-owned-or-referenced/52458379#52458379", "title": "Chaining a sequence of things that are either owned or referenced", "body": "<p>The return value of <code>get_subelem</code> can't outlive the <code>&amp;self</code> borrow you used to call it, because the signature of <code>get_subelem</code> says so explicitly:</p>\n\n<pre><code>fn get_subelem&lt;'a, 'b&gt;(&amp;'a self, name: &amp;'b str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Elem&gt;&gt;;\n//                      ^^                                         ^^\n</code></pre>\n\n<p>In order to get a <code>BoxOrRef&lt;'a, _&gt;</code>, you have to borrow <code>self</code> for the lifetime <code>'a</code>. In the caller, <code>elem</code> can't outlive the closure it belongs to, and <code>get_subelem</code> borrows <code>elem</code>, so it can't return a value that can escape that closure either.</p>\n\n<p>You're trying to do something that is unsafe, and the compiler is right to stop you. In theory, <code>table.get_elem</code> could return a <code>Boxed</code> value, and <code>elem.get_subelem</code> could return an internal reference, and then the <code>Box</code> would be dropped when the closure returns, invalidating the reference.</p>\n\n<p>Presumably that doesn't actually happen, so you have to tell the compiler that. One way is to decouple <code>&amp;self</code> from <code>BoxOrRef&lt;'a, _&gt;</code>:</p>\n\n<pre><code>pub trait Elem&lt;'a&gt; {\n    fn get_subelem(&amp;self, name: &amp;str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Elem&lt;'a&gt;&gt;&gt;;\n}\n</code></pre>\n\n<p>The above change will make your example compile once you add lifetime parameters to all the <code>Elem</code>s, but it puts you in an awkward position when implementing <code>Elem</code>: you can't return a reference to <code>self</code>, so practically everything has to be <code>Boxed</code>.</p>\n\n<p>It's hard to make a good recommendation given the vagueness of the example, but I suggest you take a step back and think about whether <code>BoxOrRef</code> is the right abstraction here. Fundamentally, you can't do anything with a <code>BoxOrRef</code> that you couldn't do with a reference, because the <code>BoxOrRef</code> might <em>be</em> a reference. At the same time, you can't do anything with it that you couldn't do with a <code>Box</code>, because it might be a <code>Box</code>. <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>std::borrow::Cow</code></a> uses <code>ToOwned</code> to implement <code>Clone</code> and <code>into_owned</code> -- perhaps a similar approach could work for you. (And if you can, maybe just implement <code>ToOwned</code> for <code>dyn Elem</code> and use <code>Cow</code> directly.)</p>\n"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 52458379, "answer_count": 1, "score": 1, "last_activity_date": 1537631939, "creation_date": 1537565816, "last_edit_date": 1537612965, "question_id": 52451313, "link": "https://stackoverflow.com/questions/52451313/chaining-a-sequence-of-things-that-are-either-owned-or-referenced", "title": "Chaining a sequence of things that are either owned or referenced", "body": "<p>I'm attempting to have a trait for things that can either simply contain other things, or create them on demand, given a thing's name. Those contained things should in turn be able to do the same, creating a hierarchy of sorts. Here's a minimal code:</p>\n\n<pre><code>use std::ops::Deref;\n\npub enum BoxOrRef&lt;'a, T: ?Sized + 'a&gt; {\n    Boxed(Box&lt;T&gt;),\n    Ref(&amp;'a T),\n}\n\nimpl&lt;'a, T: ?Sized + 'a&gt; Deref for BoxOrRef&lt;'a, T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        match self {\n            BoxOrRef::Boxed(b) =&gt; &amp;b,\n            BoxOrRef::Ref(r) =&gt; r,\n        }\n    }\n}\n\npub trait Elem {\n    fn get_subelem&lt;'a, 'b&gt;(&amp;'a self, name: &amp;'b str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Elem&gt;&gt;;\n}\n\npub trait Table {\n    fn get_elem&lt;'a, 'b&gt;(&amp;'a self, name: &amp;'b str) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Elem&gt;&gt;;\n}\n\nfn resolve_name&lt;'a, T: Table + ?Sized&gt;(\n    table: &amp;'a T,\n    name: &amp;[String],\n) -&gt; Option&lt;BoxOrRef&lt;'a, dyn Elem&gt;&gt; {\n    let mut segments = name.iter();\n    if let Some(first_segment) = segments.next() {\n        segments.fold(table.get_elem(&amp;first_segment), |res, next| {\n            res.and_then(|elem| elem.get_subelem(next))\n        })\n    } else {\n        None\n    }\n}\n</code></pre>\n\n<p>The lifetime checker however, is not satisfied by this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `elem` does not live long enough\n  --&gt; src/lib.rs:33:33\n   |\n33 |             res.and_then(|elem| elem.get_subelem(next))\n   |                                 ^^^^                 - borrowed value only lives until here\n   |                                 |\n   |                                 borrowed value does not live long enough\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 26:17...\n  --&gt; src/lib.rs:26:17\n   |\n26 | fn resolve_name&lt;'a, T: Table + ?Sized&gt;(\n   |                 ^^\n</code></pre>\n\n<p>I need to somehow extend lifetimes of the intermediate <code>res</code>'s. I guess I could put them in a struct and tweak the return type of <code>resolve_name</code> to return it along with the final element, but that strikes me as rather clumsy way of doing it. Is there a better solution?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537562387, "post_id": 52450372, "comment_id": 91844836, "body": "<i>I can stick a <code>+ ?Sized</code> to the trait bound on <code>baz</code>, but why is it required</i>? <code>Sized</code> is a default trait bound for (almost?) all generic types. If it weren&#39;t, you would have to write <code>+ Sized</code> a lot more often than you have to write <code>+ ?Sized</code> today. <i>and what is the Rust-y way to deal with this?</i> Adding <code>+ ?Sized</code> is pretty Rusty."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537562539, "post_id": 52450372, "comment_id": 91844895, "body": "@trentcl that&#39;s basically what I&#39;d put in an answer ;-)"}], "owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 1, "closed_date": 1537562456, "answer_count": 0, "score": 2, "last_activity_date": 1537562484, "creation_date": 1537559822, "last_edit_date": 1537562484, "question_id": 52450372, "link": "https://stackoverflow.com/questions/52450372/why-does-a-function-taking-a-reference-to-a-generic-care-that-the-generic-is-siz", "closed_reason": "Duplicate", "title": "Why does a function taking a reference to a generic care that the generic is Sized?", "body": "<p>Consider the following bit of code:</p>\n\n<pre><code>pub trait Trait {\n    fn foobar(&amp;self) {\n        baz(self)\n    }\n}\n\nfn baz&lt;T: Trait&gt;(t: &amp;T) {\n    println!(\"asdfadsf\");\n}\n</code></pre>\n\n<p>Note that <code>baz</code> is intentionally left outside the trait: it's an implementation detail that shouldn't leak outside the module. The above does not compile and gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `Self` cannot be known at compilation time\n --&gt; src/lib.rs:3:9\n  |\n3 |         baz(self)\n  |         ^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `Self`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-sized&gt;\n  = help: consider adding a `where Self: std::marker::Sized` bound\nnote: required by `baz`\n --&gt; src/lib.rs:7:1\n  |\n7 | fn baz&lt;T: Trait&gt;(t: &amp;T) {\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Why does <code>baz</code> care about the size of <code>T</code>? It takes a reference as its parameter; there's no need to know about the size of the referenced thing. Sure, I can stick a <code>+ ?Sized</code> to the trait bound on <code>baz</code>, but why is it required, and what is the Rust-y way to deal with this?</p>\n"}, {"tags": ["api", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537553333, "post_id": 52448756, "comment_id": 91841080, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52448756/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, <code>Config</code> is not defined and presumably we need values to run the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537553188, "post_id": 52448897, "comment_id": 91840996, "body": "This... doesn&#39;t seem like it should work, because <code>Iterator::for_each</code> is eager and returns <code>()</code>. Is this a different <code>for_each</code> method?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537553326, "post_id": 52448897, "comment_id": 91841074, "body": "@trentcl pretty sure it&#39;s a <code>Future</code> or <code>Stream</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1537553852, "post_id": 52448897, "comment_id": 91841341, "body": "Still, this looks really confusing. Why not simply write a <code>\\n</code> and flush after the first <code>io::stdout().write_all</code>?"}], "tags": [], "owner": {"reputation": 23, "user_id": 9711073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c3b9eb1739fc97e1079a0189ddef86?s=128&d=identicon&r=PG&f=1", "display_name": "npc", "link": "https://stackoverflow.com/users/9711073/npc"}, "is_accepted": false, "score": 0, "last_activity_date": 1537552836, "last_edit_date": 1537552836, "creation_date": 1537552603, "answer_id": 52448897, "question_id": 52448756, "link": "https://stackoverflow.com/questions/52448756/how-do-i-add-newlines-between-multiple-calls-of-an-api-returning-json/52448897#52448897", "title": "How do I add newlines between multiple calls of an API returning JSON?", "body": "<p>A call to <code>.map()</code> is what I was looking for:</p>\n\n<pre><code>client.get(uri).and_then(|res| {\n    res.into_body()\n        .for_each(|chunk| {\n            let data: Account = from_slice(&amp;chunk).unwrap();\n            io::stdout()\n                .write_all(data.result)\n                .map_err(|e| panic!(\"Something went wrong!, {}\", e))\n        }).map(|_| {\n            print!(\"\\n\");\n        })\n})\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9711073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c3b9eb1739fc97e1079a0189ddef86?s=128&d=identicon&r=PG&f=1", "display_name": "npc", "link": "https://stackoverflow.com/users/9711073/npc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1537552836, "creation_date": 1537552005, "last_edit_date": 1537552769, "question_id": 52448756, "link": "https://stackoverflow.com/questions/52448756/how-do-i-add-newlines-between-multiple-calls-of-an-api-returning-json", "title": "How do I add newlines between multiple calls of an API returning JSON?", "body": "<p>I'm working on an API wrapper for Etherscan.io. I have the <code>get_balance()</code>  working with a few issues:</p>\n\n<pre><code>use super::Config;\nuse hyper::rt::{Future, Stream};\nuse hyper::{Body, Client};\nuse hyper_tls::HttpsConnector;\nuse serde_json::from_slice;\nuse std::io::{self, Write};\n\n#[derive(Deserialize)]\nstruct Account&lt;'a&gt; {\n    result: &amp;'a [u8],\n}\n\npub fn get_balance(config: Config) -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n    let uri = format!(\n        \"https://api.etherscan.io/api?module={}&amp;action={}&amp;address={}&amp;tag={}&amp;apiKey={}\",\n        config.module, config.action, config.address, config.tag, config.api_key\n    ).parse()\n    .unwrap();\n\n    let https = HttpsConnector::new(4).unwrap();\n    let client = Client::builder().build::&lt;_, Body&gt;(https);\n\n    client\n        .get(uri)\n        .and_then(|res| {\n            res.into_body().for_each(|chunk| {\n                let data: Account = from_slice(&amp;chunk).unwrap();\n                io::stdout()\n                    .write_all(data.result)\n                    .map_err(|e| panic!(\"Something went wrong!, {}\", e))\n            })\n        }).map_err(|e| {\n            eprintln!(\"Error {}\", e);\n        })\n}\n</code></pre>\n\n<p>Right now, I'm using serde_json to deserialize the <code>result</code> field in the JSON output from Etherscan's API into an <code>Account</code> type variable. </p>\n\n<p>In the binary for this crate, I've read in a file containing a line separated list of Ethereum addresses, and am calling the <code>get_balance</code> function on each address. Currently, the output looks like this </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Grabbing balances..\nn</code></pre>\n\n<p>As you can see, each balance is printed one after another, with no newline character to separate any of them. Furthermore, the output is quite delayed, as if it's waiting for a buffer to be filled up before writing to the screen. Would this be on account of the fact that the type in use for the call to <code>write_all</code> is <code>&amp;[u8]</code>? </p>\n\n<p>How do I go about having the output formatted in the manner I'm looking for, i.e with each balance on a newline? </p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537545079, "post_id": 52447164, "comment_id": 91837298, "body": "Your <code>concat_idents</code> won&#39;t work. <a href=\"https://stackoverflow.com/q/23061702/155423\">Is it possible to declare variables procedurally using Rust macros?</a>"}, {"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 3, "creation_date": 1537545385, "post_id": 52447164, "comment_id": 91837442, "body": "I suspect there may be some (mutually) recursive macro elsewhere in the code, while this declaration is not what is (directly) triggering the problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537547251, "post_id": 52447164, "comment_id": 91838383, "body": "<i>rustc version 1.30 (nightly)</i> \u2014 there are <i>many</i> nightlies with that version string. Please run <code>rustc --version --verbose</code> to get the complete identifier."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537547529, "post_id": 52447164, "comment_id": 91838490, "body": "<i>I was in a hurry to type the question out, hence the lack of all the details</i> \u2014 please note for next time that being in a hurry didn&#39;t help you, and in fact probably make things take longer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537547570, "post_id": 52447164, "comment_id": 91838504, "body": "I can reproduce this. Considering that removing the <code>extern</code> block causes a compiler error, this seems to be a bug with <code>macros_in_extern</code>. You should report it as such."}, {"owner": {"reputation": 142, "user_id": 6325886, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/091f1feb1bb4ea1f30da7eba2cba78bc?s=128&d=identicon&r=PG&f=1", "display_name": "Warpspeed SCP", "link": "https://stackoverflow.com/users/6325886/warpspeed-scp"}, "edited": false, "score": 1, "creation_date": 1537548515, "post_id": 52447164, "comment_id": 91838926, "body": "did so- <a href=\"https://github.com/rust-lang/rust/issues/54441\" rel=\"nofollow noreferrer\">#54441</a>"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 2, "last_activity_date": 1538937640, "creation_date": 1538937640, "answer_id": 52691693, "question_id": 52447164, "link": "https://stackoverflow.com/questions/52447164/rustc-pretty-expanded-uses-all-of-my-ram-when-parsing-a-macro-expansion-inside/52691693#52691693", "title": "rustc --pretty expanded uses all of my RAM when parsing a macro expansion inside an extern block", "body": "<p>This was a compiler bug: <a href=\"https://github.com/rust-lang/rust/issues/54441\" rel=\"nofollow noreferrer\">rust-lang/rust#54441</a>. It is fixed as of Rust 1.31 and in nightlies newer than 1.31.0-nightly 4efdc04a5 2018-10-06.</p>\n"}], "owner": {"reputation": 142, "user_id": 6325886, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/091f1feb1bb4ea1f30da7eba2cba78bc?s=128&d=identicon&r=PG&f=1", "display_name": "Warpspeed SCP", "link": "https://stackoverflow.com/users/6325886/warpspeed-scp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 1, "accepted_answer_id": 52691693, "answer_count": 1, "score": 2, "last_activity_date": 1538937640, "creation_date": 1537544714, "last_edit_date": 1537547592, "question_id": 52447164, "link": "https://stackoverflow.com/questions/52447164/rustc-pretty-expanded-uses-all-of-my-ram-when-parsing-a-macro-expansion-inside", "title": "rustc --pretty expanded uses all of my RAM when parsing a macro expansion inside an extern block", "body": "<p>I am writing a Rust implementation of Lua, and I came to a point where I had a bunch of function definitions which were more or less the same thing over and over again. I decided to try my luck at writing a macro to do the work for me:</p>\n\n<pre><code>#![feature(macros_in_extern)]\n#![feature(concat_idents)]\n\nmacro_rules! lua_func {\n    ($name: ident, $ret: ty, $var: ident, $type: ty) =&gt; {\n        let fn_name = concat_idents!(lua_, $name);\n        pub fn fn_name (L: *mut lua_State, $var: $type) -&gt; $ret\n    };\n}\n\nextern \"C\" {\n    lua_func!(toboolean, bool, idx, int);\n}\n</code></pre>\n\n<p>When I do this</p>\n\n<pre><code>lua_func!(toboolean, bool, idx, int);\n</code></pre>\n\n<p>I expect it to expand to </p>\n\n<pre><code>pub fn lua_toboolean (L: *mut lua_State, idx: int) -&gt; bool;\n</code></pre>\n\n<p>but running <code>rustc --pretty expanded</code> to test it empties my computer's RAM in a few seconds if I don't immediately do a <code>^C</code>.</p>\n\n<p>I say that this macro is the cause of the problem because when I removed the usage of the macro, the command ran successfully and outputted the text with all macros expanded.</p>\n\n<p>What am I doing wrong?</p>\n\n<p><code>rustc --version --verbose</code> output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.30.0-nightly (3bc2ca7e4 2018-09-20)\nbinary: rustc\ncommit-hash: 3bc2ca7e4f8507f82a4c357ee19300166bcd8099\ncommit-date: 2018-09-20\nhost: x86_64-unknown-linux-gnu\nrelease: 1.30.0-nightly\nLLVM version: 8.0\n</code></pre>\n\n<p>With this version, the command <code>rustc --pretty expanded -Z unstable-options</code> with the MCVE file reproduces the problem on my computer.</p>\n"}, {"tags": ["linux", "windows", "rust"], "answers": [{"comments": [{"owner": {"reputation": 99, "user_id": 5798919, "user_type": "registered", "profile_image": "https://graph.facebook.com/10208417340892867/picture?type=large", "display_name": "Taylor Fraley", "link": "https://stackoverflow.com/users/5798919/taylor-fraley"}, "edited": false, "score": 2, "creation_date": 1556373288, "post_id": 52445962, "comment_id": 98421230, "body": "Thanks!  This worked for me.  I had installed the Microsoft C++ tools as suggested, but that didn&#39;t work.  I realized it was probably because I am running rustc in Ubuntu on Windows."}, {"owner": {"reputation": 9136, "user_id": 129847, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/c3e8725165176ba9ce563a8a221a8c90?s=128&d=identicon&r=PG", "display_name": "jedmao", "link": "https://stackoverflow.com/users/129847/jedmao"}, "edited": false, "score": 3, "creation_date": 1567744935, "post_id": 52445962, "comment_id": 102062518, "body": "Same here. I was running it on WSL."}], "tags": [], "owner": {"reputation": 4227, "user_id": 2391063, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/56f9a1f4059f57bfef806a5fde53665d?s=128&d=identicon&r=PG", "display_name": "Thane Plummer", "link": "https://stackoverflow.com/users/2391063/thane-plummer"}, "is_accepted": false, "score": 140, "last_activity_date": 1537540592, "last_edit_date": 1537540592, "creation_date": 1537540403, "answer_id": 52445962, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10/52445962#52445962", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>The Linux Rust installer doesn't check for a compiler toolchain, but seems to assume that you've already got a C linker installed! The best solution is to install the tried-and-true gcc toolchain. </p>\n\n<pre><code>sudo apt install build-essential\n</code></pre>\n\n<p>If you need to target another architecture, install the appropriate toolchain and target the compilation as follows:</p>\n\n<pre><code>rustc --target=my_target_architecture -C linker=target_toolchain_linker my_rustfile.rs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1183, "user_id": 1511077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/688ec604ef6cb96baadeaaa5d4036858?s=128&d=identicon&r=PG&f=1", "display_name": "Evgeny Lebedev", "link": "https://stackoverflow.com/users/1511077/evgeny-lebedev"}, "is_accepted": false, "score": 13, "last_activity_date": 1568704924, "creation_date": 1568704924, "answer_id": 57969236, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10/57969236#57969236", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>Solution for CentOS:</p>\n\n<pre><code>yum -y install gcc\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 818, "user_id": 2255481, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/L7nED.jpg?s=128&g=1", "display_name": "Adam Lesniak", "link": "https://stackoverflow.com/users/2255481/adam-lesniak"}, "is_accepted": false, "score": 1, "last_activity_date": 1580603576, "creation_date": 1580603576, "answer_id": 60022317, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10/60022317#60022317", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>Solution for Solus:</p>\n\n<pre><code>sudo eopkg it -c system.devel\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 200, "user_id": 6126313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a143f36a0d4077382744510f9919787?s=128&d=identicon&r=PG&f=1", "display_name": "Syenix", "link": "https://stackoverflow.com/users/6126313/syenix"}, "is_accepted": false, "score": 1, "last_activity_date": 1587763597, "creation_date": 1587763597, "answer_id": 61417706, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10/61417706#61417706", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>Please do an \"Update and Upgrade\" before installing setup tools. </p>\n"}, {"tags": [], "owner": {"reputation": 81, "user_id": 6751907, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wWnsE.jpg?s=128&g=1", "display_name": "naimjeem", "link": "https://stackoverflow.com/users/6751907/naimjeem"}, "is_accepted": false, "score": 4, "last_activity_date": 1615548149, "creation_date": 1615548149, "answer_id": 66598982, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10/66598982#66598982", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>You have to install some dependencies</p>\n<p>for Arch Linux <code>sudo pacman -S base-devel</code></p>\n<p>for Ubuntu <code>sudo apt install build-essential</code></p>\n<p>for Centos <code>sudo yum install gcc</code></p>\n"}], "owner": {"reputation": 4227, "user_id": 2391063, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/56f9a1f4059f57bfef806a5fde53665d?s=128&d=identicon&r=PG", "display_name": "Thane Plummer", "link": "https://stackoverflow.com/users/2391063/thane-plummer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22297, "favorite_count": 10, "answer_count": 5, "score": 82, "last_activity_date": 1615548149, "creation_date": 1537540403, "last_edit_date": 1537540928, "question_id": 52445961, "link": "https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10", "title": "How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?", "body": "<p>I'm running Debian on Windows 10 (Windows Subsystem for Linux) and installed Rust using the command:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>There were no errors in the install, but when I tried to compile with <code>rustc</code> I got the error <code>linker 'cc' not found</code>.</p>\n"}, {"tags": ["multidimensional-array", "view", "rust", "clone", "slice"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1537539954, "post_id": 52445605, "comment_id": 91834389, "body": "<i>&quot;but I&#39;m running into a mutable/immutable problem&quot;</i> please produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of that particular issue, so that we can provide better insights on that particular attempt. Adding some minimal code which produces <code>table</code> and <code>chosen_row</code> would help too."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1537540629, "creation_date": 1537540629, "answer_id": 52446025, "question_id": 52445605, "link": "https://stackoverflow.com/questions/52445605/how-to-efficiently-clone-a-rust-ndarray-from-a-view/52446025#52446025", "title": "How to efficiently clone a Rust ndarray from a view?", "body": "<blockquote>\n  <p>I'd like to clone the contents.</p>\n</blockquote>\n\n<p>If that is the case, then you do not want just to clone the array view (which would have been just a shallow copy). You want a uniquely owned array with the same contents as another array. That can be done with <a href=\"https://docs.rs/ndarray/0.12.0/ndarray/struct.ArrayBase.html#method.to_owned\" rel=\"nofollow noreferrer\"><code>to_owned</code></a>.</p>\n\n<pre><code>let row_orig = table.subview(Axis(0), chosen_row);\nlet row_copy = row_orig.to_owned();\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 6938031, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96daaf5f54fcec385146387031b566c8?s=128&d=identicon&r=PG&f=1", "display_name": "ahenshaw", "link": "https://stackoverflow.com/users/6938031/ahenshaw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "accepted_answer_id": 52446025, "answer_count": 1, "score": 1, "last_activity_date": 1539338247, "creation_date": 1537539213, "last_edit_date": 1539338247, "question_id": 52445605, "link": "https://stackoverflow.com/questions/52445605/how-to-efficiently-clone-a-rust-ndarray-from-a-view", "title": "How to efficiently clone a Rust ndarray from a view?", "body": "<p>I've created a 1D row view of a 2D ndarray and I'd like to clone the contents.  Currently, I'm doing it like this:</p>\n\n<pre><code>let mut row_orig = table.subview_mut(Axis(0), chosen_row);\n// ...\n// some operations on row_orig\n// ...\nlet mut row_copy = Array1&lt;f32&gt;::zeros(table.cols());\nrow_copy.assign(&amp;row_orig);  \n</code></pre>\n\n<p>It seems slightly inefficient to create and initialize with zeros and then\nperform the copy.  Plus, I have to declare <code>row_copy</code> as mutable when it doesn't need to be. Is there a better way? Apparently, <code>.clone</code> doesn't exist for ndarray views. </p>\n\n<p>I thought that using a slice might be the solution, but I'm running into a mutable/immutable problem with this code:</p>\n\n<pre><code>let row_copy = table.slice(s![chosen_row,..]).clone();\n// do something mutable with table\n</code></pre>\n"}, {"tags": ["rust", "transpiler", "hilbert-curve"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1537527748, "post_id": 52442253, "comment_id": 91827261, "body": "That tool produced the most horrible Rust code I have ever seen. Can you include the output of an equivalent C code?"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537527966, "post_id": 52442253, "comment_id": 91827385, "body": "@E_net4: updated the question"}, {"owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1537529310, "post_id": 52442253, "comment_id": 91828155, "body": "(so that it contains the equivalent C code output)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1537531485, "post_id": 52442253, "comment_id": 91829449, "body": "If you want to translate this C code into Rust, you should understand the algorithm and reimplement it in Rust."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1537531817, "creation_date": 1537531817, "answer_id": 52443475, "question_id": 52442253, "link": "https://stackoverflow.com/questions/52442253/why-does-this-hilbert-curve-implementation-ported-from-c-from-wikipedia-seem-t/52443475#52443475", "title": "Why does this Hilbert Curve implementation ported from C (from Wikipedia) seem to fail?", "body": "<p>Well, if you change the test code, you'll naturally get different output.  The original C test code fixes <code>n</code> and varies <code>d</code>; you fix <code>d</code> and vary <code>n</code>.</p>\n\n<p>Once I changed the Rust test code to do the same thing as the C test code, I get the same output.</p>\n\n<pre><code>fn main() {\n    let mut x: libc::c_int = 0;\n    let mut y: libc::c_int = 0;\n    let d: libc::c_int = 10;\n    unsafe {\n        for n in 1..10 {\n            d2xy(n, d, &amp;mut x, &amp;mut y);\n            println!(\"n={}, x={}, y={}\", n, x, y);\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "closed_date": 1537537095, "accepted_answer_id": 52443475, "answer_count": 1, "score": -2, "last_activity_date": 1537531817, "creation_date": 1537527500, "last_edit_date": 1537527955, "question_id": 52442253, "link": "https://stackoverflow.com/questions/52442253/why-does-this-hilbert-curve-implementation-ported-from-c-from-wikipedia-seem-t", "closed_reason": "Not suitable for this site", "title": "Why does this Hilbert Curve implementation ported from C (from Wikipedia) seem to fail?", "body": "<p>I found the following code for drawing <a href=\"https://en.wikipedia.org/wiki/Hilbert_curve\" rel=\"nofollow noreferrer\">Hilbert Curves</a> on Wikipedia:</p>\n\n<pre><code>//convert (x,y) to d\nint xy2d (int n, int x, int y) {\n    int rx, ry, s, d=0;\n    for (s=n/2; s&gt;0; s/=2) {\n        rx = (x &amp; s) &gt; 0;\n        ry = (y &amp; s) &gt; 0;\n        d += s * s * ((3 * rx) ^ ry);\n        rot(s, &amp;x, &amp;y, rx, ry);\n    }\n    return d;\n}\n\n//convert d to (x,y)\nvoid d2xy(int n, int d, int *x, int *y) {\n    int rx, ry, s, t=d;\n    *x = *y = 0;\n    for (s=1; s&lt;n; s*=2) {\n        rx = 1 &amp; (t/2);\n        ry = 1 &amp; (t ^ rx);\n        rot(s, x, y, rx, ry);\n        *x += s * rx;\n        *y += s * ry;\n        t /= 4;\n    }\n}\n\n//rotate/flip a quadrant appropriately\nvoid rot(int n, int *x, int *y, int rx, int ry) {\n    if (ry == 0) {\n        if (rx == 1) {\n            *x = n-1 - *x;\n            *y = n-1 - *y;\n        }\n\n        //Swap x and y\n        int t  = *x;\n        *x = *y;\n        *y = t;\n    }\n}\n</code></pre>\n\n<p>I put it into <a href=\"https://c2rust.com/\" rel=\"nofollow noreferrer\">c2rust.com</a> with definition of rot() put as the first function and got the following code:</p>\n\n<pre><code>#![allow(dead_code,\n         mutable_transmutes,\n         non_camel_case_types,\n         non_snake_case,\n         non_upper_case_globals,\n         unused_mut)]\n#![feature(libc)]\nextern crate libc;\n// rotate/flip a quadrant appropriately\n#[no_mangle]\npub unsafe extern \"C\" fn rot(mut n: libc::c_int,\n                             mut x: *mut libc::c_int,\n                             mut y: *mut libc::c_int,\n                             mut rx: libc::c_int,\n                             mut ry: libc::c_int)\n                             -&gt; () {\n    if ry == 0i32 {\n        if rx == 1i32 {\n            *x = n - 1i32 - *x;\n            *y = n - 1i32 - *y\n        }\n        // Swap x and y\n        let mut t: libc::c_int = *x;\n        *x = *y;\n        *y = t\n    };\n}\n// convert (x,y) to d\n#[no_mangle]\npub unsafe extern \"C\" fn xy2d(mut n: libc::c_int,\n                              mut x: libc::c_int,\n                              mut y: libc::c_int)\n                              -&gt; libc::c_int {\n    let mut rx: libc::c_int = 0;\n    let mut ry: libc::c_int = 0;\n    let mut s: libc::c_int = 0;\n    let mut d: libc::c_int = 0i32;\n    s = n / 2i32;\n    while s &gt; 0i32 {\n        rx = (x &amp; s &gt; 0i32) as libc::c_int;\n        ry = (y &amp; s &gt; 0i32) as libc::c_int;\n        d += s * s * (3i32 * rx ^ ry);\n        rot(s, &amp;mut x, &amp;mut y, rx, ry);\n        s /= 2i32\n    }\n    return d;\n}\n// convert d to (x,y)\n#[no_mangle]\npub unsafe extern \"C\" fn d2xy(mut n: libc::c_int,\n                              mut d: libc::c_int,\n                              mut x: *mut libc::c_int,\n                              mut y: *mut libc::c_int)\n                              -&gt; () {\n    let mut rx: libc::c_int = 0;\n    let mut ry: libc::c_int = 0;\n    let mut s: libc::c_int = 0;\n    let mut t: libc::c_int = d;\n    *y = 0i32;\n    *x = *y;\n    s = 1i32;\n    while s &lt; n {\n        rx = 1i32 &amp; t / 2i32;\n        ry = 1i32 &amp; (t ^ rx);\n        rot(s, x, y, rx, ry);\n        *x += s * rx;\n        *y += s * ry;\n        t /= 4i32;\n        s *= 2i32\n    }\n}\n\nfn main() {\n    let mut x: libc::c_int = 0;\n    let mut y: libc::c_int = 0;\n    let d: libc::c_int = 10;\n    unsafe {\n        for n in 1..10 {\n            d2xy(n, d, &amp;mut x, &amp;mut y);\n            println!(\"n={}, x={}, y={}\", n, x, y);\n        }\n    }\n}\n</code></pre>\n\n<p>The problem is that the results seem to make no sense:</p>\n\n<pre><code>   Compiling x v0.1.0 (file:///tmp/x)\nwarning: value assigned to `rx` is never read                            ] 0/1: x                                                                                                                \n  --&gt; src/main.rs:34:13\n   |\n34 |     let mut rx: libc::c_int = 0;\n   |             ^^\n   |\n   = note: #[warn(unused_assignments)] on by default\n\nwarning: value assigned to `ry` is never read\n  --&gt; src/main.rs:35:13\n   |\n35 |     let mut ry: libc::c_int = 0;\n   |             ^^\n\nwarning: value assigned to `s` is never read\n  --&gt; src/main.rs:36:13\n   |\n36 |     let mut s: libc::c_int = 0;\n   |             ^\n\nwarning: value assigned to `rx` is never read\n  --&gt; src/main.rs:55:13\n   |\n55 |     let mut rx: libc::c_int = 0;\n   |             ^^\n\nwarning: value assigned to `ry` is never read\n  --&gt; src/main.rs:56:13\n   |\n56 |     let mut ry: libc::c_int = 0;\n   |             ^^\n\nwarning: value assigned to `s` is never read\n  --&gt; src/main.rs:57:13\n   |\n57 |     let mut s: libc::c_int = 0;\n   |             ^\n\n    Finished dev [unoptimized + debuginfo] target(s) in 0.25s                                                                                                                                    \n     Running `target/debug/x`\nn=1, x=0, y=0\nn=2, x=1, y=1\nn=3, x=3, y=3\nn=4, x=3, y=3\nn=5, x=3, y=3\nn=6, x=3, y=3\nn=7, x=3, y=3\nn=8, x=3, y=3\nn=9, x=3, y=3\n</code></pre>\n\n<p>I definitely didn't expect repeated coordinates for different Ns. What could have gone wrong? Here's C test code for comparison:</p>\n\n<pre><code>int main() {\n    int n=32, d=0, x=0, y=0;\n    for (d=0; d&lt;10; d++) {\n        d2xy(n, d, &amp;x, &amp;y);\n        printf(\"d=%d, x=%d, y=%d\\n\", d, x, y);\n    }\n}\n</code></pre>\n\n<p>And the expected output (as generated by C):</p>\n\n<pre><code>d=0, x=0, y=0\nd=1, x=0, y=1\nd=2, x=1, y=1\nd=3, x=1, y=0\nd=4, x=2, y=0\nd=5, x=3, y=0\nd=6, x=3, y=1\nd=7, x=2, y=1\nd=8, x=2, y=2\nd=9, x=3, y=2\n</code></pre>\n"}, {"tags": ["algorithm", "rust", "geometry", "coordinates"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1537523433, "post_id": 52440855, "comment_id": 91824806, "body": "Hum, it looks more like an <a href=\"https://stackoverflow.com/questions/tagged/algorithm\">algorithm</a> problem than a <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> one."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1537524627, "post_id": 52440855, "comment_id": 91825497, "body": "You have a bunch of unused stuff in your code sample, and all your type anotations are useless. In idiomatic Rust, you should add them only if they are required. In fact, your whole function can be written with one line: <code>thread_rng().sample_iter(&amp;Standard).take(n).collect()</code>."}, {"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1537526944, "post_id": 52440855, "comment_id": 91826774, "body": "Are you sure you don&#39;t want some sort of domain for <code>x, y</code>? &#39;A random <code>f64</code>&#39; is a HUGE domain."}, {"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1537530182, "post_id": 52440855, "comment_id": 91828666, "body": "@orlp I guess I could bound <code>x</code> and <code>y</code> between two values, lets say <code>-10.0, 10.0</code> ."}, {"owner": {"reputation": 65718, "user_id": 844416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e39c2364935265593d76247ddc6d07c?s=128&d=identicon&r=PG", "display_name": "MBo", "link": "https://stackoverflow.com/users/844416/mbo"}, "edited": false, "score": 0, "creation_date": 1537531052, "post_id": 52440855, "comment_id": 91829207, "body": "How many points do you expect?"}, {"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1537532336, "post_id": 52440855, "comment_id": 91829925, "body": "n points. It could be from some hundreds to up to some millions"}, {"owner": {"reputation": 65718, "user_id": 844416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e39c2364935265593d76247ddc6d07c?s=128&d=identicon&r=PG", "display_name": "MBo", "link": "https://stackoverflow.com/users/844416/mbo"}, "edited": false, "score": 2, "creation_date": 1537533112, "post_id": 52440855, "comment_id": 91830342, "body": "Try-and-check-all method is quadratic and becomes unreliable for million points. Perhaps you&#39;ll have to consider kd-tree in the future"}, {"owner": {"reputation": 58970, "user_id": 71059, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/RRmlf.png?s=128&g=1", "display_name": "AakashM", "link": "https://stackoverflow.com/users/71059/aakashm"}, "edited": false, "score": 0, "creation_date": 1537540606, "post_id": 52440855, "comment_id": 91834747, "body": "I&#39;d be tempted to find myself a physics engine that can simulate charged particles, create <code>n</code> particles with random (within a range) charges all of the same sign, and get the engine to find their steady state in a suitably sized box."}, {"owner": {"reputation": 58970, "user_id": 71059, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/RRmlf.png?s=128&g=1", "display_name": "AakashM", "link": "https://stackoverflow.com/users/71059/aakashm"}, "edited": false, "score": 0, "creation_date": 1537541027, "post_id": 52440855, "comment_id": 91835015, "body": "Also <a href=\"https://mathematica.stackexchange.com/questions/2594\">mathematica.stackexchange.com/questions/2594</a>. Also <a href=\"https://stackoverflow.com/questions/8930796\">stackoverflow.com/questions/8930796</a>, but that asker wants to additionally have a maximum distance, and does <i>not</i> want any randomness. Also <a href=\"https://stackoverflow.com/questions/47041784\">stackoverflow.com/questions/47041784</a>. And that&#39;s me done."}], "answers": [{"comments": [{"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1537531863, "post_id": 52441389, "comment_id": 91829672, "body": "It is a good approximation but I have to modify it because it ends in infinite loop"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 2, "creation_date": 1537532082, "post_id": 52441389, "comment_id": 91829792, "body": "@Moreorem <code>gen&lt;f64&gt;</code> will generate a number between 0 and 1. Your distance should be in this range. You must likely add a check in your function to see if the request is possible (<i>e.g.</i> 10 points with a minimum distance of 0.9 is impossible for example)."}, {"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1537533240, "post_id": 52441389, "comment_id": 91830411, "body": "True. A check will indeed be necessary"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1537533113, "last_edit_date": 1537533113, "creation_date": 1537524556, "answer_id": 52441389, "question_id": 52440855, "link": "https://stackoverflow.com/questions/52440855/how-do-i-create-random-non-overlapping-coordinates/52441389#52441389", "title": "How do I create random non-overlapping coordinates?", "body": "<p>You can use a naive algorithm: while the generated point is not ok, try with another one:</p>\n\n<pre><code>extern crate rand;\nuse rand::prelude::*;\n\npub fn apply_random_pos(n: usize, min_distance: f64, boundary: f64) -&gt; Vec&lt;(f64, f64)&gt; {\n    fn distance(p1: (f64, f64), p2: (f64, f64)) -&gt; f64 {\n        ((p1.0 - p2.0).powf(2.) + (p1.1 - p2.1).powf(2.)).sqrt()\n    }\n\n    let mut rng = thread_rng();\n    let mut positions = Vec::with_capacity(n);\n\n    while positions.len() &lt; n {\n        let p1 = (\n            rng.gen_range(boundary, -boundary),\n            rng.gen_range(boundary, -boundary),\n        );\n        if positions.iter().all(|&amp;p2| distance(p1, p2) &gt; min_distance) {\n            positions.push(p1);\n        }\n    }\n    positions\n}\n</code></pre>\n\n<hr>\n\n<p>Note that this algorithm is not suitable at all for a great number of points. It is even the worst possible algorithm.</p>\n"}, {"comments": [{"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1537533175, "post_id": 52443592, "comment_id": 91830378, "body": "I decided to bound the values after @orlp&#39;s suggestion. Having negative values is not so necessary because I transfer them on a canvas afterwards, but it would help. I could not however find an <code>rng</code> function where I can specify both the type ( <code>(f64, f64)</code>) and the range (<code>-b, b</code>) of the output"}], "tags": [], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "is_accepted": false, "score": 0, "last_activity_date": 1537537051, "last_edit_date": 1537537051, "creation_date": 1537532266, "answer_id": 52443592, "question_id": 52440855, "link": "https://stackoverflow.com/questions/52440855/how-do-i-create-random-non-overlapping-coordinates/52443592#52443592", "title": "How do I create random non-overlapping coordinates?", "body": "<p>I used <a href=\"https://stackoverflow.com/a/52441389/155423\">@Boiethios' answer</a> with some additions and it seems to work as I want. The only minor problem is that I haven't thought of a way to output a more specific range that contains negatives as well</p>\n\n<pre><code>pub fn apply_random_pos(n: usize, min_distance: f64) -&gt; Vec&lt;(f64, f64)&gt; {\n    fn distance(p1: (f64, f64), p2: (f64, f64)) -&gt; f64 {\n        ((p1.0 - p2.0).powf(2.) + (p1.1 - p2.1).powf(2.)).sqrt()\n    }\n    let mut rng = thread_rng();\n    let mut positions = Vec::with_capacity(n);\n\n    while positions.len() &lt; n {\n        let mut p1 = rng.gen::&lt;(f64, f64)&gt;();\n        let mut p2 = rng.gen::&lt;(f64, f64)&gt;();\n        // Multiply with 10 because we need numbers bigger than 1\n        p1 = (p1.0 * 10.0, p1.1 * 10.0);\n        p2 = (p2.0 * 10.0, p2.1 * 10.0);\n\n        if positions.iter().all(|&amp;p2| distance(p1, p2) &gt; min_distance) {\n            positions.push(p1);\n            positions.push(p2);\n        }\n    }\n    positions\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1537546168, "post_id": 52444432, "comment_id": 91837877, "body": "That is a really interesting approach! I will try to implement it soon"}], "tags": [], "owner": {"reputation": 65718, "user_id": 844416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e39c2364935265593d76247ddc6d07c?s=128&d=identicon&r=PG", "display_name": "MBo", "link": "https://stackoverflow.com/users/844416/mbo"}, "is_accepted": false, "score": 5, "last_activity_date": 1537539352, "last_edit_date": 1537539352, "creation_date": 1537535077, "answer_id": 52444432, "question_id": 52440855, "link": "https://stackoverflow.com/questions/52440855/how-do-i-create-random-non-overlapping-coordinates/52444432#52444432", "title": "How do I create random non-overlapping coordinates?", "body": "<p>Sketch of algorithm for larger number of points (but distribution is tied to grid):</p>\n\n<p>Build square grid on your region. Choose cell <code>Size = 3*MinDist</code>. So you have <code>(Width * Height) / (9 * MinDist^2)</code> point sites.</p>\n\n<p>When you add new point, choose random free site and place point in grid knot, then change its position randomly in range <code>-Mindist..MinDist</code> in both directions. Cell size 3 guarantees that no points lie too close.</p>\n\n<p>Example of generation: half of sites are occupied at the left picture, all sites are occupied at the right one</p>\n\n<p><a href=\"https://i.stack.imgur.com/KngOY.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/KngOY.png\" alt=\"enter image description here\"></a><a href=\"https://i.stack.imgur.com/DSRmt.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/DSRmt.png\" alt=\"enter image description here\"></a></p>\n\n<p>To achieve better \"random look\", you can make cell size smaller - for instance, <code>2*MinDist</code>, but in this case you have to check neighbor sites - but only four of them rather than all.</p>\n"}], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 686, "favorite_count": 2, "answer_count": 3, "score": 2, "last_activity_date": 1537539352, "creation_date": 1537522790, "last_edit_date": 1537536985, "question_id": 52440855, "link": "https://stackoverflow.com/questions/52440855/how-do-i-create-random-non-overlapping-coordinates", "title": "How do I create random non-overlapping coordinates?", "body": "<p>I am trying to create a function that will generate a <code>vec</code> of length <code>n</code>, with random <code>x</code> and <code>y</code> coordinates of type <code>f64</code> between some boundary <code>(-b, b)</code>. Every point with such coordinate must have a minimum distance <code>d</code> from each other. I am trying to use the <code>thread_rng()</code> function, but I am stuck. Should I use a specific distribution or add some filter or condition to achieve that?</p>\n\n<pre><code>extern crate rand; // 0.5.5\n\nuse rand::prelude::*;\nuse rand::distributions::Standard;\n\npub fn apply_random_pos(n: usize, min_distance: f64) -&gt; Vec&lt;(f64, f64)&gt; {\n    let mut rng = thread_rng();\n    let mut x: f64;\n    let mut y: f64;\n\n    let mut positions: Vec&lt;(f64, f64)&gt; = Vec::with_capacity(n);\n\n    positions = thread_rng()\n        .sample_iter(&amp;Standard)\n        .take(n)\n        .collect::&lt;Vec&lt;(f64, f64)&gt;&gt;();\n\n    positions\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "idioms"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537534232, "post_id": 52439723, "comment_id": 91830982, "body": "@trentcl Oh, you&#39;re right, Err is useless after that :P Thanks for the remark."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1537697076, "post_id": 52439723, "comment_id": 91871805, "body": "Good point about the Error trait, that&#39;s indeed something that I must use. And indeed, this opens the third option of returning a Box&lt;dyn Error&gt;. However, that option does not seem very useful for the caller. They can not match it agains different error variants to decide what to do next..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1593527240, "post_id": 52439723, "comment_id": 110809041, "body": "<i>use a crate like failure</i> \u2014 note that failure is deprecated. See <a href=\"https://stackoverflow.com/q/42584368/155423\">How do you define custom <code>Error</code> types in Rust?</a> for a list of selected alternatives."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1537534280, "last_edit_date": 1537534280, "creation_date": 1537518772, "answer_id": 52439723, "question_id": 52438988, "link": "https://stackoverflow.com/questions/52438988/what-is-the-most-idiomatic-way-to-merge-two-error-types/52439723#52439723", "title": "What is the most idiomatic way to merge two error types?", "body": "<p>You should use a trait object <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"nofollow noreferrer\"><code>Error</code></a>, and you return the first error that you encounter:</p>\n\n<pre><code>pub trait Bar {\n    fn bar&lt;F: Foo&gt;(&amp;mut self, foo: F) -&gt; Result&lt;F, Box&lt;dyn Error&gt;&gt;;\n}\n</code></pre>\n\n<p>or implement your trait like this:</p>\n\n<pre><code>impl Bar for MyType {\n    type Err = Box&lt;dyn Error&gt;;\n\n    fn bar&lt;F: Foo&gt;(&amp;mut self, foo: F) -&gt; Result&lt;F, Self::Err&gt;;\n}\n</code></pre>\n\n<p>If you really want to have your two errors (but this is strange because one error suffices to make the process not ok), you can use a crate like <a href=\"https://crates.io/crates/failure\" rel=\"nofollow noreferrer\"><code>failure</code></a> to create an \"error trace\".</p>\n\n<p>As a general advice, you should not forget to use the traits from <code>std</code> to add more semantic to your code.</p>\n"}, {"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1537696594, "post_id": 52440983, "comment_id": 91871705, "body": "Sorry if my example wasn&#39;t clear; when I wrote about &quot;merging the two error <i>types</i> into a dedicated enum&quot;, what I had in mind was exactly something like your <code>GenericError</code>. My question was: is this additional layer the right way to go, or should I rather use a result of result?..."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 8, "last_activity_date": 1537523239, "creation_date": 1537523239, "answer_id": 52440983, "question_id": 52438988, "link": "https://stackoverflow.com/questions/52438988/what-is-the-most-idiomatic-way-to-merge-two-error-types/52440983#52440983", "title": "What is the most idiomatic way to merge two error types?", "body": "<p>Typically you don't do a \"merge\", but instead use nested errors, like this.</p>\n\n<pre><code>enum IntError {\n    Overflow,\n    Underflow\n}\n\nenum StrError {\n    TooLong,\n    TooShort,\n}\n\nenum GenericError {\n    Int(IntError),\n    Str(StrError),\n}\n\nimpl From&lt;IntError&gt; for GenericError {\n    fn from(e: IntError) -&gt; Self {\n        GenericError::Int(e)\n    }\n}\n\nimpl From&lt;StrError&gt; for GenericError {\n    fn from(e: StrError) -&gt; Self {\n        GenericError::Str(e)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1867, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1593566974, "creation_date": 1537516043, "last_edit_date": 1593566974, "question_id": 52438988, "link": "https://stackoverflow.com/questions/52438988/what-is-the-most-idiomatic-way-to-merge-two-error-types", "title": "What is the most idiomatic way to merge two error types?", "body": "<p>I have a type <code>Foo</code> whose methods may &quot;raise&quot; errors of an associated type <code>Foo::Err</code>.</p>\n<pre><code>pub trait Foo {\n    type Err;\n    \n    fn foo(&amp;mut self) -&gt; Result&lt;(), Self::Err&gt;;\n}\n</code></pre>\n<p>I have another trait <code>Bar</code> with a method intended to process a <code>Foo</code>. <code>Bar</code> may issue errors of its own (specified by an associated type <code>Bar::Err</code>), but it may also encounter errors generated by the <code>Foo</code> it is processing.</p>\n<p>I can see two ways to do this, but I don't know which one would be the most idiomatic to Rust.</p>\n<p>The first one embeds a result in a result:</p>\n<pre><code>pub trait Bar1 {\n    type Err;\n    \n    fn bar&lt;F: Foo&gt;(&amp;mut self, foo: F) -&gt; Result&lt;Result&lt;F, F::Err&gt;, Self::Err&gt;;\n}\n</code></pre>\n<p>The second one merges the two error types into a dedicated enum:</p>\n<pre><code>pub trait Bar2 {\n    type Err;\n    \n    fn bar&lt;F: Foo&gt;(&amp;mut self, foo: F) -&gt; Result&lt;F, Choice&lt;F::Err, Self::Err&gt;&gt;;\n}\n</code></pre>\n<p>The second one looks semantically cleaner, but creates some hurdles for handling the additional enum.</p>\n<p><a href=\"https://play.rust-lang.org/?gist=6bbca6cb7df8b1be7c7d8f75656e370b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["multithreading", "concurrency", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1537511030, "post_id": 52437174, "comment_id": 91818364, "body": "Your code does not compile. Please create a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> (there are some good infos about a mcve in the <a href=\"https://stackoverflow.com/tags/rust/info\">rust tag</a> as well). Next you should clarify question (is it about <i>&quot;Do I really need to use static references&quot;</i>, or do you want that your code compiles?). Pleas edit your question."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1537531678, "post_id": 52437174, "comment_id": 91829558, "body": "The title question is answered by <a href=\"https://stackoverflow.com/questions/32750829/how-can-i-pass-a-reference-to-a-stack-variable-to-a-thread\">How can I pass a reference to a stack variable to a thread?</a> However, I don&#39;t think that&#39;s necessary here since you can just <i>move</i> the <code>Vec</code> into the <code>ThreadData</code> and clone the <code>Arc</code>. I suspect you are confused by the difference between <code>&amp;&#39;static T</code> and <code>T: &#39;static</code>; they mean different things. For more targeted advice an MCVE would help a lot."}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537541681, "post_id": 52437174, "comment_id": 91835428, "body": "@trentcl I&#39;ve tried to make this an MCVE but please note of course it&#39;s not going to compile, that&#39;s why I&#39;m asking the question."}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537541707, "post_id": 52437174, "comment_id": 91835449, "body": "@hellow I&#39;ve tried to clarify as best as I can, thank you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537542055, "post_id": 52437174, "comment_id": 91835671, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52437174/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Notably, numerous imports are missing and you don&#39;t even have balanced curly braces. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537542206, "post_id": 52437174, "comment_id": 91835759, "body": "@Shepmaster ah ok sorry, having some difficulty here getting it so that it is concise enough but also complete. Will read... Who knows maybe doing that will also lead me to the answer lol."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1538938736, "creation_date": 1538938736, "answer_id": 52691839, "question_id": 52437174, "link": "https://stackoverflow.com/questions/52437174/how-can-i-send-non-static-data-to-a-thread-in-rust-and-is-it-needed-in-this-exam/52691839#52691839", "title": "How can I send non-static data to a thread in Rust and is it needed in this example?", "body": "<p>The error about <code>'static</code> is because the new thread created within <code>thread::spawn</code> may outlive the invocation of <code>threaded_search</code> during which the thread is initially created, which means the thread must not be permitted to use any local variables from <code>threaded_search</code> with a lifetime shorter than <code>'static</code>.</p>\n\n<p>In your code the new thread is referring to <code>strings_as_slice1</code> and <code>td_arc</code>.</p>\n\n<p>Generally with <code>thread::spawn</code> and <code>Arc</code> you will want to move ownership of one reference count into the thread and have the thread access whatever it needs through that reference counted pointer rather than from the enclosing short-lived scope directly.</p>\n\n<pre><code>fn threaded_search(td_arc: &amp;Arc&lt;ThreadData&gt;) {\n    // Increment reference count that we can move into the new thread.\n    let td_arc = td_arc.clone();\n\n    thread::spawn(move || {\n        perform_search(&amp;td_arc.vector_of_strings[0..td_arc.quotient], &amp;td_arc.terms);\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1437, "favorite_count": 0, "accepted_answer_id": 52691839, "answer_count": 1, "score": 2, "last_activity_date": 1538938736, "creation_date": 1537507927, "last_edit_date": 1538938274, "question_id": 52437174, "link": "https://stackoverflow.com/questions/52437174/how-can-i-send-non-static-data-to-a-thread-in-rust-and-is-it-needed-in-this-exam", "title": "How can I send non-static data to a thread in Rust and is it needed in this example?", "body": "<p>I am trying to fire up a new thread using some heap data in Rust and I am getting a bunch of errors that stem from the need of the data to have <code>'static</code> lifetime. I've worked my way backwards up my program but hit a problem.</p>\n\n<pre><code>use std::sync::Arc;\nuse std::thread;\n\nstruct ThreadData {\n    vector_of_strings: Vec&lt;String&gt;,\n    terms: Vec&lt;&amp;'static str&gt;,\n    quotient: usize,\n}\n\nfn perform_search(slice: &amp;[String], terms: &amp;[&amp;str]) {\n    /* ... */\n}\n\nfn threaded_search(td_arc: &amp;Arc&lt;ThreadData&gt;) {\n    let no_of_lines = td_arc.vector_of_strings.len();\n    let new_tda1 = td_arc.clone();\n\n    let strings_as_slice1 = new_tda1.vector_of_strings.as_slice();   \n\n    thread::spawn(move || {\n        perform_search(&amp;strings_as_slice1[0..td_arc.quotient], &amp;new_tda1.terms);\n    });\n}\n\nfn main() {\n    let td = ThreadData {\n        vector_of_strings: Vec::new(),\n        terms: Vec::new(),\n        quotient: 0,\n    };\n\n    let td_arc = Arc::new(td);\n    threaded_search(&amp;td_arc);\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `td_arc`               \n  --&gt; src/main.rs:20:5                                                         \n   |                                                                           \n14 | fn threaded_search(td_arc: &amp;Arc&lt;ThreadData&gt;) {                            \n   |                            ---------------- help: add explicit lifetime `'static` to the type of `td_arc`: `&amp;'static std::sync::Arc&lt;ThreadData&gt;`\n...                                                                            \n20 |     thread::spawn(move || {                                               \n   |     ^^^^^^^^^^^^^ lifetime `'static` required\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1537491673, "post_id": 52435074, "comment_id": 91813875, "body": "<code>self.field.as_ref().map(Box::as_ref);</code> or <code>return self.field.as_ref().map(|value| value.as_ref());</code>"}, {"owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1537500830, "post_id": 52435074, "comment_id": 91815578, "body": "Thanks @TimDiekmann that&#39;s perfect"}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "is_accepted": true, "score": 6, "last_activity_date": 1537536247, "last_edit_date": 1537536247, "creation_date": 1537509763, "answer_id": 52437510, "question_id": 52435074, "link": "https://stackoverflow.com/questions/52435074/cannot-move-out-of-borrowed-context/52437510#52437510", "title": "Cannot move out of borrowed context", "body": "<blockquote>\n  <p>I don't really understand why this doesn't work.</p>\n</blockquote>\n\n<p>Your code defined a struct <code>A</code> that may or may not hold a <code>X</code> in the heap (not in the stack). </p>\n\n<p>In the method <code>get_field</code> you were given a reference to the struct, but you want to get a reference to the inner <code>X</code>, if possible.</p>\n\n<p>The above are concluded only by looking at the function signatures and struct definition of <code>A</code>.</p>\n\n<p>Looking into the function body, <code>self.field</code> is of type <code>Option&lt;_&gt;</code>, and <code>map</code> is its method. Look at <a href=\"https://doc.rust-lang.org/stable/std/option/enum.Option.html\" rel=\"noreferrer\">the documentation for <code>Option::map</code></a>:</p>\n\n<blockquote>\n<pre><code>pub fn map&lt;U, F&gt;(self, f: F) -&gt; Option&lt;U&gt; \nwhere\n  F: FnOnce(T) -&gt; U,\n</code></pre>\n  \n  <p>Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a contained value.</p>\n</blockquote>\n\n<p>It accepts a closure that can only run once, accepts a <code>Box&lt;X&gt;</code> in your case, then according to your function return type it should return <code>&amp;X</code>. It looks like a perfect match at first glance since if <code>value: Box&lt;X&gt;</code> then <code>*value: X</code> and <code>&amp;*value: &amp;X</code>, but it does not compile! What's wrong?</p>\n\n<p>If you look more carefully at the signature of <code>map</code> you see it has 2 parameters, not one. The first parameter is the \"method receiver\" <code>self</code> and its type is <code>Self</code>.</p>\n\n<p>In Rust, this means this call will need to consume the method receiver; the object you used to call the method would be no longer valid after this call. </p>\n\n<p>However, your <code>get_field</code> method is not allowed to remove the method receiver <code>self.field</code>: <code>self</code> is only a reference to <code>A</code>, so <code>self.field</code> is also just a reference . You then cannot call <code>map</code> to consume <code>self.field</code>.</p>\n\n<p>The solution, is to use <code>as_ref</code>:</p>\n\n<blockquote>\n<pre><code>pub fn as_ref(&amp;self) -&gt; Option&lt;&amp;T&gt;\n</code></pre>\n  \n  <p>Converts from <code>Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.</p>\n</blockquote>\n\n<p>Although it says converts from <code>Option&lt;T&gt;</code>, but from the signature you can see it accepts <code>&amp;Option&lt;T&gt;</code>, so it just moves the outside <code>&amp;</code> inside. Now you can use <code>map</code>.</p>\n\n<pre><code> pub fn get_field(&amp;self) -&gt; Option&lt;&amp;X&gt; {\n    return self.field.as_ref().map(|value| &amp;*value);\n }\n</code></pre>\n\n<p>Now it works.</p>\n"}], "owner": {"reputation": 13004, "user_id": 887128, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/21dfdd82b179972af12332a8db35ac64?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/887128/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "closed_date": 1537536356, "accepted_answer_id": 52437510, "answer_count": 1, "score": -1, "last_activity_date": 1537536273, "creation_date": 1537490305, "last_edit_date": 1537536273, "question_id": 52435074, "link": "https://stackoverflow.com/questions/52435074/cannot-move-out-of-borrowed-context", "closed_reason": "Duplicate", "title": "Cannot move out of borrowed context", "body": "<p>I have a very simple piece of code that I cannot get to compile:</p>\n\n<pre><code>struct X;\n\nstruct A {\n    field: Option&lt;Box&lt;X&gt;&gt;,\n}\n\nimpl A {\n    pub fn get_field(&amp;self) -&gt; Option&lt;&amp;X&gt; {\n        return self.field.map(|value| &amp;*value);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/lib.rs:9:16\n  |\n9 |         return self.field.map(|value| &amp;*value);\n  |                ^^^^ cannot move out of borrowed content\n\nerror[E0597]: `*value` does not live long enough\n --&gt; src/lib.rs:9:40\n  |\n9 |         return self.field.map(|value| &amp;*value);\n  |                                        ^^^^^-\n  |                                        |    |\n  |                                        |    borrowed value only lives until here\n  |                                        borrowed value does not live long enough\n  |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 8:5...\n --&gt; src/lib.rs:8:5\n  |\n8 | /     pub fn get_field(&amp;self) -&gt; Option&lt;&amp;X&gt; {\n9 | |         return self.field.map(|value| &amp;*value);\n10| |     }\n  | |_____^\n</code></pre>\n\n<p>I don't really understand why this doesn't work. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1537486732, "post_id": 52434518, "comment_id": 91812873, "body": "As it stands, your types are completely independent of one another. Also, Rust doesn&#39;t support the notion of inheritance. I would suggest looking into using traits if you want to have some idea of sub typing."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537511136, "post_id": 52434518, "comment_id": 91818402, "body": "You may find <a href=\"https://users.rust-lang.org/t/how-to-do-c-like-inheritance/20545\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/how-to-do-c-like-inheritance/20545</a> very interesting."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1537533314, "post_id": 52434653, "comment_id": 91830446, "body": "This does not directly answer OPs question."}], "tags": [], "owner": {"reputation": 6834, "user_id": 455449, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/35cb7eab417eb790be0d3623686297d2?s=128&d=identicon&r=PG", "display_name": "Petr Kozelka", "link": "https://stackoverflow.com/users/455449/petr-kozelka"}, "is_accepted": false, "score": 2, "last_activity_date": 1537486383, "creation_date": 1537486383, "answer_id": 52434653, "question_id": 52434518, "link": "https://stackoverflow.com/questions/52434518/how-do-i-define-a-type-hierarchy-using-rust-enumerations/52434653#52434653", "title": "How do I define a type hierarchy using Rust enumerations?", "body": "<p>\"many levels of depth\" is often a bad idea even in languages with explicit support for inheritance.</p>\n\n<p>If you are porting some code to Rust, you might want to consider improving your design by involving concepts more natural in it, like <a href=\"https://doc.rust-lang.org/book/2018-edition/ch10-00-generics.html\" rel=\"nofollow noreferrer\">traits, generic types</a>, <a href=\"https://doc.rust-lang.org/book/2018-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">closures</a> and more.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537533404, "post_id": 52437955, "comment_id": 91830504, "body": "This is close, but does not directly answer OPs question."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537534345, "post_id": 52437955, "comment_id": 91831038, "body": "@Shepmaster OP asked &quot;How do I create this type hierarchy using enums and structs?&quot; This is one way to do it."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 6, "last_activity_date": 1537533378, "last_edit_date": 1537533378, "creation_date": 1537511841, "answer_id": 52437955, "question_id": 52434518, "link": "https://stackoverflow.com/questions/52434518/how-do-i-define-a-type-hierarchy-using-rust-enumerations/52437955#52437955", "title": "How do I define a type hierarchy using Rust enumerations?", "body": "<p>When you look at this piece of code:</p>\n\n<pre><code>enum Thing {\n    Animal,\n    Plant,\n}\n\nstruct Plant {\n    color: String,\n}\n</code></pre>\n\n<p>You see the word <code>Plant</code> twice. The important thing to note is that <em>the two <code>Plant</code>s are different, unrelated things.</em> Just because they have the same name doesn't mean that they represent the same thing, and in fact they don't really have the same name when you take the fully qualified name: the first one is <code>::Thing::Plant</code> and the second one is just plain <code>::Plant</code>.</p>\n\n<p>If you want to link the two, you will need to make it explicit with:</p>\n\n<pre><code>enum Thing {\n    Animal(Animal),\n    Plant(Plant),\n}\n</code></pre>\n\n<p>For more details, you can look at the <code>IpAddr</code> example in <a href=\"https://doc.rust-lang.org/book/second-edition/ch06-01-defining-an-enum.html#enum-values\" rel=\"nofollow noreferrer\">the Rust book</a>.</p>\n"}], "owner": {"reputation": 21, "user_id": 10393930, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AmlK6XbdYQM/AAAAAAAAAAI/AAAAAAAApcE/qKEi1ueAtt8/photo.jpg?sz=128", "display_name": "Andr&#233; Luiz", "link": "https://stackoverflow.com/users/10393930/andr%c3%a9-luiz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1537533378, "creation_date": 1537485071, "last_edit_date": 1537485495, "question_id": 52434518, "link": "https://stackoverflow.com/questions/52434518/how-do-i-define-a-type-hierarchy-using-rust-enumerations", "title": "How do I define a type hierarchy using Rust enumerations?", "body": "<p>I'm trying to make a compiler in Rust, but I'm having problems understanding how to define a type hierarchy using enumerations. We have for example:</p>\n\n<pre><code>enum Thing {\n    Animal,\n    Plant,\n}\n\nstruct Plant {\n    color: String,\n}\n\nenum Animal {\n    Dog,\n    Cat,\n}\n\nstruct Cat {\n    name: String,\n}\n\nstruct Dog {\n    name: String,\n}\n\nlet x = Dog { name: john };\n</code></pre>\n\n<p>If I do pattern matching, will <code>Dog</code> be considered of <code>Animal</code> type (or <code>Thing</code> type)? How do I create this type hierarchy using enums and structs? My type hierarchy has many levels of depth. </p>\n"}, {"tags": ["rust", "compiler-optimization", "simd", "avx2"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537479947, "post_id": 52433389, "comment_id": 91811199, "body": "Are you sure an array of 4 i64 can be considered as &quot;256-bit aligned memory location pointed to by *a&quot; as far as I know 4 i64 are i64 aligned"}, {"owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "edited": false, "score": 0, "creation_date": 1537480093, "post_id": 52433389, "comment_id": 91811241, "body": "Even if alignment was a problem, the symptom of that would be a crash not incorrect output (<code>vmovaps</code> with an unaligned address generates a fault)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537480833, "post_id": 52433389, "comment_id": 91811484, "body": "look like a bug in LLVM"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1537481519, "post_id": 52433389, "comment_id": 91811679, "body": "<code>println!(&quot;{:?}&quot;, avxreg);</code> allow to say that <code>load</code> is already the problem and use <code>_mm256_loadu_si256</code> fix it, but still the store still make wrong output"}, {"owner": {"reputation": 5832, "user_id": 433785, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/64034670ba87badb7f25df89070c6112?s=128&d=identicon&r=PG", "display_name": "Nick Babcock", "link": "https://stackoverflow.com/users/433785/nick-babcock"}, "edited": false, "score": 2, "creation_date": 1537483264, "post_id": 52433389, "comment_id": 91812126, "body": "Reading the <a href=\"https://doc.rust-lang.org/nightly/std/arch/\" rel=\"nofollow noreferrer\">docs more closely</a>, it looks like I should extract this into another function and use <code>#[target_feature(enable = &quot;avx2&quot;)]</code>, <a href=\"https://play.rust-lang.org/?gist=a441cd23181627272af120b51e23e308&amp;version=stable&amp;mode=release&amp;edition=2015\" rel=\"nofollow noreferrer\">which works</a>. So I think that answers questions 2, 3, but idk about 1"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537484718, "post_id": 52433389, "comment_id": 91812472, "body": "Oh nice one, well you can auto answer you ;), and for the 1, ask about undefined behavior is useless as anything can (and should) happen."}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1537541291, "post_id": 52444189, "comment_id": 91835178, "body": "My suspicion here is that you might be able to be a bit more specific. In particular, something like, &quot;you cannot call a function whose ABI depends on AVX registers from a function that is itself not compiled for AVX.&quot; So in your case, <code>main</code> is not compiled with AVX, but you&#39;re calling a routine where a <code>__m256i</code> appears in the function signature. You&#39;re modified code no longer does this, since a AVX vector does not appear in the type of <code>run</code>."}], "tags": [], "owner": {"reputation": 5832, "user_id": 433785, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/64034670ba87badb7f25df89070c6112?s=128&d=identicon&r=PG", "display_name": "Nick Babcock", "link": "https://stackoverflow.com/users/433785/nick-babcock"}, "is_accepted": true, "score": 3, "last_activity_date": 1537536809, "last_edit_date": 1537536809, "creation_date": 1537534204, "answer_id": 52444189, "question_id": 52433389, "link": "https://stackoverflow.com/questions/52433389/why-does-storing-to-and-loading-from-an-avx2-256bit-vector-have-different-result/52444189#52444189", "title": "Why does storing to and loading from an AVX2 256bit vector have different results in debug and release mode?", "body": "<p>After more thoroughly <a href=\"https://doc.rust-lang.org/stable/std/arch/\" rel=\"nofollow noreferrer\">reading the docs</a>, it became clear that I had to extract the body into another function and force that function to be compiled with AVX2 by annotating it with</p>\n\n<pre><code>#[target_feature(enable = \"avx2\")]\n</code></pre>\n\n<p>Or compile the entire program with</p>\n\n<pre><code>RUSTFLAGS=\"-C target-feature=+avx2\" cargo run --release\n</code></pre>\n\n<p>The first option is better because it guarantees that the SIMD instructions used in a function are compiled appropriately, it's just on the caller to check their CPU has those capabilities before calling with <code>is_x86_feature_detected!(\"avx2\")</code>. All this is documented, but it would be amazing if the compiler could warn with \"hey, this function uses AVX2 instructions, but was not annotated with <code>#[target_feature(enable = \"avx2\")]</code> and the program was not compiled with AVX2 enabled globally, so calling this function is undefined behavior\". It would have saved me a lot of headache!</p>\n\n<p>Since relying on undefined behavior is bad, our initial program on the playground should be written as:</p>\n\n<pre><code>use std::arch::x86_64::*;\n\nfn main() {\n    unsafe { run() }\n}\n\n#[target_feature(enable = \"avx2\")]\nunsafe fn run() {\n    let key = [1u64, 2, 3, 4];\n    let avxreg = _mm256_load_si256(key.as_ptr() as *const __m256i);\n    let mut back_key = [0u64; 4];\n    _mm256_storeu_si256(back_key.as_mut_ptr() as *mut __m256i, avxreg);\n    println!(\"back_key: {:?}\", back_key);\n}\n</code></pre>\n\n<p>Some notes:</p>\n\n<ol>\n<li><code>main</code> cannot be unsafe and thus can't be annotated with <code>target_feature</code>, so it is necessary to extract into another function</li>\n<li>This still assumes the <code>x86_64</code> CPU running the code has <code>avx</code> capabilities, so make sure you check before calling</li>\n<li>It's not worth looking into why the debug version gives correct results, as running it under release on my home computer also gives correct results (under certain incantations). Looking at assembly shows that LLVM optimized one way or the other, but it is not particularly insightful.</li>\n</ol>\n"}], "owner": {"reputation": 5832, "user_id": 433785, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/64034670ba87badb7f25df89070c6112?s=128&d=identicon&r=PG", "display_name": "Nick Babcock", "link": "https://stackoverflow.com/users/433785/nick-babcock"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 412, "favorite_count": 2, "closed_date": 1545148382, "accepted_answer_id": 52444189, "answer_count": 1, "score": 13, "last_activity_date": 1537536809, "creation_date": 1537477892, "last_edit_date": 1537536723, "question_id": 52433389, "link": "https://stackoverflow.com/questions/52433389/why-does-storing-to-and-loading-from-an-avx2-256bit-vector-have-different-result", "closed_reason": "Duplicate", "title": "Why does storing to and loading from an AVX2 256bit vector have different results in debug and release mode?", "body": "<p>When I try to <a href=\"https://software.intel.com/en-us/node/695239\" rel=\"nofollow noreferrer\">store</a> and <a href=\"https://software.intel.com/en-us/node/524101\" rel=\"nofollow noreferrer\">load</a> 256bits to and from an AVX2 256bit vector, I'm not receiving expected output in release mode. </p>\n\n<pre><code>use std::arch::x86_64::*;\n\nfn main() {\n    let key = [1u64, 2, 3, 4];\n    let avxreg = unsafe { _mm256_load_si256(key.as_ptr() as *const __m256i) };\n    let mut back_key = [0u64; 4];\n    unsafe { _mm256_storeu_si256(back_key.as_mut_ptr() as *mut __m256i, avxreg) };\n    println!(\"back_key: {:?}\", back_key);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a55604391fccd79a2f5af0e4f4ffcc47&amp;version=nightly&amp;mode=release&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>In debug mode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>back_key: [1, 2, 3, 4]\n</code></pre>\n\n<p>In release mode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>back_key: [1, 2, 0, 0]\n</code></pre>\n\n<p>The back half either isn't being loaded or stored and I can't figure out which. </p>\n\n<p>What's weird is targeting a native CPU works. In release mode + <code>RUSTFLAGS=\"-C target-cpu=native\"</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>back_key: [1, 2, 3, 4]\n</code></pre>\n\n<p>I've even tried to rid myself of Clippy errors by forcing alignment to no avail (I'm not sure if the code below is even considered more correct).</p>\n\n<pre><code>use std::arch::x86_64::*;\n\n#[repr(align(256))]\n#[derive(Debug)]\nstruct Key([u64; 4]);\n\nfn main() {\n    let key = Key([1u64, 2, 3, 4]);\n    let avxreg = unsafe { _mm256_load_si256(&amp;key as *const _ as *const __m256i) };\n    let mut back_key = Key([0u64; 4]);\n    unsafe { _mm256_storeu_si256((&amp;mut back_key) as *mut _ as *mut __m256i, avxreg) };\n    println!(\"back_key: {:?}\", back_key);\n}\n</code></pre>\n\n<ol>\n<li>Why is this happening?</li>\n<li>Is there a fix for this specific use case?</li>\n<li>Can this fix be generalized for user input (e.g.: if I wanted to take a byte slice as user input and do the same procedure)</li>\n</ol>\n"}, {"tags": ["rust", "embedded", "cortex-m", "stm32f4discovery"], "comments": [{"owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 1, "creation_date": 1537462816, "post_id": 52429006, "comment_id": 91803419, "body": "I&#39;m thoroughly unfamiliar with what you&#39;re trying to do, but in the linked example the first line of code starts with <code>#![feature(proc_macro)] &#47;&#47; &lt;- IMPORTANT! Feature gate for procedural macros</code>, but you&#39;re missing it. Could that be it?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537463157, "post_id": 52429006, "comment_id": 91803568, "body": "A good tutorial is <a href=\"https://os.phil-opp.com/freestanding-rust-binary/\" rel=\"nofollow noreferrer\">os.phil-opp.com/freestanding-rust-binary</a>"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "edited": false, "score": 0, "creation_date": 1537465125, "post_id": 52429006, "comment_id": 91804489, "body": "@orlp No that&#39;s just some remnant from before procedural macros became stable. I suppose all these examples being a bit dated is part of the problem."}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1537517384, "post_id": 52429006, "comment_id": 91821454, "body": "@hellow thank you. I&#39;m pretty sure now that the <code>app!</code> macro is broken - at least for current nightly toolchains - as it should provide the program&#39;s entry point."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1537521477, "post_id": 52429006, "comment_id": 91823670, "body": "With this question you are basically on the wrong track, IMHO you need <code>#[no_main]</code>, and this error won&#39;t occur. You need a vector table with a reset vector, which points to a reset handler function. This function needs to set up global variables (<code>bss</code> and <code>data</code> sections) and then call <code>main</code>. The examples you copied together hide part of this behind some macro magic, and part of it is in the <code>cortex-m*</code> crates."}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "edited": false, "score": 0, "creation_date": 1537534575, "post_id": 52429006, "comment_id": 91831163, "body": "I ran into different problems combining <code>#[no_main]</code> with RTFM (see <a href=\"https://stackoverflow.com/a/52427009/3749401\">stackoverflow.com/a/52427009/3749401</a>). And the way I understand it RTFM and <code>app!</code> should take care of initialization. I suppose I&#39;ll have to wait for an update to RTFM if I want to use the macro."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539177815, "post_id": 52741230, "comment_id": 92407269, "body": "I tell you that long ago: <a href=\"https://stackoverflow.com/questions/52425667/undefined-reference-to-main-when-using-real-time-for-the-masses/52427009#comment91798519_52425667\" title=\"undefined reference to main when using real time for the masses\">stackoverflow.com/questions/52425667/&hellip;</a> &amp; <a href=\"https://stackoverflow.com/questions/52425667/undefined-reference-to-main-when-using-real-time-for-the-masses/52427009#comment91800626_52425667\" title=\"undefined reference to main when using real time for the masses\">stackoverflow.com/questions/52425667/&hellip;</a>"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539178041, "post_id": 52741230, "comment_id": 92407412, "body": "You failed to get your point across. I&#39;m a beginner at Rust and your passive-aggressive question didn&#39;t help me at atll."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539178193, "post_id": 52741230, "comment_id": 92407504, "body": "Well, sorry about that, didn&#39;t want to be agressif just make you think."}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539178350, "post_id": 52741230, "comment_id": 92407607, "body": "Alright, no hard feelings. I suppose a short explanation or a link to a resource explaining the interplay of <code>entry</code>, <code>#[no_main]</code> and how to use all that to solve my problem would have been more helpful."}], "tags": [], "owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "is_accepted": false, "score": 1, "last_activity_date": 1539177607, "creation_date": 1539177607, "answer_id": 52741230, "question_id": 52429006, "link": "https://stackoverflow.com/questions/52429006/missing-start-lang-item-when-using-real-time-for-the-masses/52741230#52741230", "title": "Missing `start` lang_item when using Real-Time For the Masses", "body": "<p>I've found a workaround in RTFM's <a href=\"https://github.com/japaric/cortex-m-rtfm/issues/88\" rel=\"nofollow noreferrer\">issues on GitHub</a> that allows to compile the code above:</p>\n\n<ol>\n<li><p>import <code>cortex-m-rt</code> and its <code>entry</code> macro</p>\n\n<pre><code>#[macro_use(entry)]\nextern crate cortex_m_rt as rt;\n</code></pre></li>\n<li><p>add <code>#![no_main]</code> to the head of the source</p></li>\n<li><p>wrap the main function using the <code>entry</code> macro:</p>\n\n<pre><code>#[entry]\nfn entry_wrap() -&gt; ! {\n    main();\n    loop {}\n}\n</code></pre></li>\n</ol>\n\n<p>I haven't tested this yet but it compiles without problems.</p>\n"}], "owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 511, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1539177607, "creation_date": 1537459082, "last_edit_date": 1539177514, "question_id": 52429006, "link": "https://stackoverflow.com/questions/52429006/missing-start-lang-item-when-using-real-time-for-the-masses", "title": "Missing `start` lang_item when using Real-Time For the Masses", "body": "<p>I'm trying to write a multi-threaded bare-metal application for the STM32F4Discovery using the Real-Time For the Masses (RTFM) <a href=\"https://docs.rs/crate/cortex-m-rtfm/0.3.4\" rel=\"nofollow noreferrer\">crate</a>. I've frankensteined together a minimal application from an <a href=\"https://github.com/rust-embedded/discovery/tree/master/src/05-led-roulette\" rel=\"nofollow noreferrer\">example</a> for the STM32F3Discovery board and <a href=\"http://blog.japaric.io/rtfm-v2/#hello-world\" rel=\"nofollow noreferrer\">this example</a>:</p>\n\n<pre><code>#![no_std]\n\nextern crate cortex_m;\nextern crate cortex_m_rtfm as rtfm;\nextern crate cortex_m_semihosting;\nextern crate panic_semihosting;\nextern crate stm32f4;\n\nuse stm32f4::stm32f407;\n\nuse rtfm::app;\n\napp! {\n    device: stm32f407,\n}\n\nfn init(_p: init::Peripherals) {\n}\n\nfn idle() -&gt; ! {\n    loop {\n        rtfm::wfi();\n    }\n}\n</code></pre>\n\n<p>Compilation fails with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: requires `start` lang_item\n</code></pre>\n\n<p>I'm new to Rust (in fact I was hoping to learn the language with this project) and have no idea where the error might be located. Is it just that the <code>app!</code> macro is broken or am I missing something?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1537456965, "post_id": 52427979, "comment_id": 91800285, "body": "Separately from your question, Rust will not allow both of these blanket impls to exist. Even if you know that there is no type that qualifies for both impls, Rust doesn&#39;t know that such a type can&#39;t exist. So, once you solve this error, you&#39;ll have that one, which you won&#39;t be able to solve."}, {"owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537457293, "post_id": 52427979, "comment_id": 91800484, "body": "I didn&#39;t exactly want these two impls, but I did want something like <code>F: Fn(Input) -&gt; State</code> and <code>for&lt;&#39;a&gt; F: Fn(&amp;&#39;a [Input]) -&gt; Vec&lt;State&gt;</code>, which falls into the same trap."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537458244, "post_id": 52427979, "comment_id": 91801061, "body": "This reminds me of <a href=\"https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par\">Specify <code>Fn</code> trait bound on struct definition without fixing one of the <code>Fn</code> parameters</a>, which has the same problem with a struct definition. It doesn&#39;t work because argument types are parameters of <code>Fn</code>, not associated types -- there can be more than one <code>Fn</code> trait impl for some type."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537458260, "post_id": 52427979, "comment_id": 91801068, "body": "I suspect the problem is related to variance. In Rust, variance is only about lifetimes, and it can be harder to think about than variance in inheritance-based subtyping."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1537458573, "post_id": 52427979, "comment_id": 91801255, "body": "In the second case <code>State</code> is in argument position, which means that any <code>F</code> that meets the requirements for this impl, could actually require a more general type (super-type) than specified. In the case of reference types, that means a shorter lifetime. I think the problem is that the borrow checker won&#39;t be able to figure out the lower bound on that lifetime. I&#39;m not 100% certain of this though."}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 339, "favorite_count": 1, "closed_date": 1557571847, "answer_count": 0, "score": 4, "last_activity_date": 1537455270, "creation_date": 1537455270, "question_id": 52427979, "link": "https://stackoverflow.com/questions/52427979/unconstrained-type-parameter-in-trait-impl-for-fn", "closed_reason": "Duplicate", "title": "Unconstrained type parameter in trait impl for Fn", "body": "<p>I'm experimenting with impls of my own traits for closures; my trait has an associated type for the closure's output.</p>\n\n<p>This works fine, with the associated type in <code>Fn</code>'s return position:</p>\n\n<pre><code>trait MyFn&lt;Input&gt; {\n    type State;\n\n    fn call(&amp;self, state: &amp;mut Self::State, input: Input);\n}\n\nimpl&lt;Input, State, F&gt; MyFn&lt;Input&gt; for F where F: Fn(Input) -&gt; State {\n    type State = State;\n\n    fn call(&amp;self, state: &amp;mut State, input: Input) {\n        *state = self(input);\n    }\n}\n</code></pre>\n\n<p>But I can't get the same associated type to work in the <code>Fn</code>'s parameter position:</p>\n\n<pre><code>impl&lt;Input, State, F&gt; MyFn&lt;Input&gt; for F where F: Fn(&amp;mut State, Input) {\n    type State = State;\n\n    fn call(&amp;self, state: &amp;mut State, input: Input) {\n        self(state, input)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dfbb1a258775d1ac2f92235cc2610cc7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=dfbb1a258775d1ac2f92235cc2610cc7&amp;version=stable&amp;mode=debug&amp;edition=2015</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the type parameter `State` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/lib.rs:15:13\n   |\n15 | impl&lt;Input, State, F&gt; MyFn&lt;Input&gt; for F where F: Fn(&amp;mut State, Input) {\n   |             ^^^^^ unconstrained type parameter\n</code></pre>\n\n<p>Surely the type parameter <code>State</code> is constrained by the <code>where</code> predicate?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1537455182, "post_id": 52427732, "comment_id": 91799182, "body": "Welcome to Stack Overflow! Please ensure that you have provided a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of what you are trying to achieve. This includes mentioning how you obtained <code>Form</code> and <code>FromForm</code> (supposing that they come from Rocket, you need to include the <code>use</code> statements). The first error message could also be expanded to look like the other two (thus including line numbers and such)."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 10276404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f867ce89b0747b62308a487df7a70f02?s=128&d=identicon&r=PG&f=1", "display_name": "TechieSprout", "link": "https://stackoverflow.com/users/10276404/techiesprout"}, "edited": false, "score": 0, "creation_date": 1537466088, "post_id": 52429162, "comment_id": 91805005, "body": "That is awesome, thank you !! I&#39;m still trying to understand Rust lifetimes. Do you happen to know why Form&lt;T&gt;.into_inner() needs &#39;static on T?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 21, "user_id": 10276404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f867ce89b0747b62308a487df7a70f02?s=128&d=identicon&r=PG&f=1", "display_name": "TechieSprout", "link": "https://stackoverflow.com/users/10276404/techiesprout"}, "edited": false, "score": 0, "creation_date": 1537466704, "post_id": 52429162, "comment_id": 91805293, "body": "@TechieSprout I am not really familiar with Rocket, so it&#39;s hard to say. It&#39;s possible  that it absolutely makes sense when you look deeper. It&#39;s also possible that it&#39;s there as a workaround for some deficiency in Rust&#39;s type system - which may or may not still exist. It could be worth asking about it via one of their <a href=\"https://rocket.rs/guide/#getting-help\" rel=\"nofollow noreferrer\">official channels</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1537460146, "last_edit_date": 1537460146, "creation_date": 1537459676, "answer_id": 52429162, "question_id": 52427732, "link": "https://stackoverflow.com/questions/52427732/what-happens-when-a-rust-struct-contains-a-lifetimed-trait/52429162#52429162", "title": "What happens when a Rust struct contains a lifetimed trait?", "body": "<p><code>Form</code> also has a lifetime parameter. If you tie it to the lifetime of <code>FromForm</code>, then you'll move forward a little:</p>\n\n<pre><code>impl&lt;'f, T&gt; Consumer&lt;T&gt; where T: FromForm&lt;'f&gt; {\n    fn new(form: Form&lt;'f, T&gt;) -&gt; Self {\n        Consumer(form.into_inner())\n    }\n\n    fn get(&amp;self) -&gt; &amp;T {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>As a general rule, if you return an object that depends on data in another object, then you'll need to link their lifetimes together like this.</p>\n\n<p>At this point, you'll see another error, which conveniently gives you all the information you need to fix it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n  --&gt; src/main.rs:50:17\n   |\n48 | impl&lt;'f, T&gt; Consumer&lt;T&gt; where T: FromForm&lt;'f&gt; {\n   |          - help: consider adding an explicit lifetime bound `T: 'static`...\n49 |     fn new(form: Form&lt;'f, T&gt;) -&gt; Self {\n50 |         Consumer(form.into_inner())\n   |                       ^^^^^^^^^^\n   |\nnote: ...so that the type `T` will meet its required lifetime bounds\n  --&gt; src/main.rs:50:17\n   |\n50 |         Consumer(form.into_inner())\n   |                       ^^^^^^^^^^\n</code></pre>\n\n<p>The <a href=\"https://api.rocket.rs/rocket/request/struct.Form.html#method.into_inner\" rel=\"noreferrer\"><code>into_inner</code> method on <code>Form</code></a> requires that it's type parameter <code>T</code> has the <code>'static</code> lifetime, and the error message suggests adding this constraint.</p>\n\n<p>With these changes, it will compile:</p>\n\n<pre><code>impl&lt;'f, T: 'static&gt; Consumer&lt;T&gt; where T: FromForm&lt;'f&gt; {\n    fn new(form: Form&lt;'f, T&gt;) -&gt; Self {\n        Consumer(form.into_inner())\n    }\n\n    fn get(&amp;self) -&gt; &amp;T {\n        &amp;self.0\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 10276404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f867ce89b0747b62308a487df7a70f02?s=128&d=identicon&r=PG&f=1", "display_name": "TechieSprout", "link": "https://stackoverflow.com/users/10276404/techiesprout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1546958407, "creation_date": 1537454482, "last_edit_date": 1546958407, "question_id": 52427732, "link": "https://stackoverflow.com/questions/52427732/what-happens-when-a-rust-struct-contains-a-lifetimed-trait", "title": "What happens when a Rust struct contains a lifetimed trait?", "body": "<p>Ok, so I'm a total Rust newbie, and I'm experimenting with Rocket. That web framework passes a <code>Form&lt;MyStruct&gt;</code>, and I want to transfer that MyStruct into my own custom struct.</p>\n\n<pre><code>struct Consumer&lt;T&gt; {\n    d: T,\n}\n\nimpl&lt;T&gt; Consumer&lt;T&gt; {\n   fn new(form: Form&lt;T&gt;) -&gt; Self {\n       Consumer { d: form.into_inner() }\n   }\n}\n</code></pre>\n\n<p>That doesn't work of course, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `rocket::request::FromForm&lt;'_&gt;` is not implemented for `T`\n</code></pre>\n\n<p>Next attempt:</p>\n\n<pre><code>impl&lt;T&gt; Consumer&lt;T&gt; where T: FromForm {\n    fn new(form: Form&lt;T&gt;) -&gt; Self {\n        Consumer { d: form.into_inner }\n    }\n}\n</code></pre>\n\n<p>Uh oh:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>impl&lt;T&gt; Consumer&lt;T&gt; where T: FromForm {\n                             ^^^^^^^^ expected lifetime parameter\n</code></pre>\n\n<p>So now I find myself completely unable to fix this! The best I can come up with is:</p>\n\n<pre><code>impl&lt;'f, T&gt; Consumer&lt;T&gt; where T: FromForm&lt;'f&gt; {\n    fn new(form: Form&lt;T&gt;) -&gt; Self {\n        Consumer { d: form.into_inner }\n    }\n}\n</code></pre>\n\n<p>But that results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>51 |           fn new(form: Form&lt;T&gt;) -&gt; Self {                                                                                      \n   |  _________^                                                                                                                    \n52 | |             Consumer { d: form.into_inner }                                                                                  \n53 | |         }                                                                                                                    \n   | |_________^ lifetime mismatch\n  = note: expected type `rocket::request::FromForm&lt;'_&gt;`                                                                            \n             found type `rocket::request::FromForm&lt;'f&gt;`\n</code></pre>\n\n<p>Verifiable example: <a href=\"https://hastebin.com/eqihaqodux.makefile\" rel=\"nofollow noreferrer\">https://hastebin.com/eqihaqodux.makefile</a></p>\n"}, {"tags": ["rust", "embedded", "cortex-m", "stm32f4discovery"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537451185, "post_id": 52425667, "comment_id": 91796438, "body": "But you put <code>#![no_main]</code> in your code"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537453281, "post_id": 52425667, "comment_id": 91797900, "body": "I just copied that from the example. If I remove the <code>#![no_main]</code> the compiler complains that the <code>start</code> <code>lang_item</code> is missing."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537454158, "post_id": 52425667, "comment_id": 91798519, "body": "What exemple, one link you provided don&#39;t use no_main and the other use <code>use aux5::entry;  #[entry]</code>"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537457267, "post_id": 52425667, "comment_id": 91800467, "body": "<a href=\"https://github.com/rust-embedded/discovery/blob/master/src/05-led-roulette/src/main.rs\" rel=\"nofollow noreferrer\">This</a> main has it. Anyway, like I said, if I remove it, I get the missing <code>start</code> <code>lang_item</code> error and the way I understood it, <code>app!</code> should expand to a working main. I&#39;m sorry if this is all obvious stuff. To me all this macro magic is pretty confusing right now."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537457509, "post_id": 52425667, "comment_id": 91800626, "body": "But like I said, this main use a macro <a href=\"https://rust-embedded.github.io/cortex-m-rt/0.6.1/cortex_m_rt_macros/fn.entry.html\" rel=\"nofollow noreferrer\"><code>entry</code></a> you think is here for nothing ?"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537457861, "post_id": 52425667, "comment_id": 91800855, "body": "I thought <code>app!</code> would take care of it. After all the <a href=\"http://blog.japaric.io/rtfm-v2/#hello-world\" rel=\"nofollow noreferrer\">example</a> I referenced doesn&#39;t seem to need it either."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537457887, "post_id": 52425667, "comment_id": 91800868, "body": "But this one don&#39;t use no_main... you can&#39;t mix example take only few line and expect thing work"}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537458206, "post_id": 52425667, "comment_id": 91801039, "body": "I know. But since I don&#39;t get what isn&#39;t working, I asked the question here. So I guess you&#39;re telling me that my problem really is that missing <code>start</code> <code>lang_item</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537458640, "post_id": 52425667, "comment_id": 91801290, "body": "I never said that, i already answered your question, I don&#39;t know how to use your crate, I only know the general answer."}, {"owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537458946, "post_id": 52425667, "comment_id": 91801504, "body": "Alright, thanks. I&#39;ll probably delete this question then and ask about the <code>lang_item</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1537459413, "post_id": 52425667, "comment_id": 91801747, "body": "You should not delete question, just create a new one but I don&#39;t think you should, just <a href=\"https://stackoverflow.com/posts/52425667/edit\">edit</a> your actual question to improve it."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1537538667, "last_edit_date": 1537538667, "creation_date": 1537452276, "answer_id": 52427009, "question_id": 52425667, "link": "https://stackoverflow.com/questions/52425667/undefined-reference-to-main-when-using-real-time-for-the-masses/52427009#52427009", "title": "Undefined reference to main when using Real-Time For the Masses", "body": "<p>As you ask the compiler to not insert <code>main</code>, there is no main symbol in your program.</p>\n\n<p>Rust uses symbol mangling so your <code>main</code> function doesn't have a symbol named <code>main</code>.</p>\n\n<p>The answer depends on your contextm but generally this should do it:</p>\n\n<pre><code>#[no_mangle] // ensure that this symbol is called `main` in the output\npub extern fn main(argc: i32, argv: *const *const u8) -&gt; i32 {\n\n}\n</code></pre>\n\n<p>All additional information can be found <a href=\"https://doc.rust-lang.org/1.1.0/book/no-stdlib.html\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 27, "user_id": 3749401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6935017db1b00b4dee9e14ecbc1f055?s=128&d=identicon&r=PG&f=1", "display_name": "arkap", "link": "https://stackoverflow.com/users/3749401/arkap"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 259, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1537538667, "creation_date": 1537448095, "last_edit_date": 1537538609, "question_id": 52425667, "link": "https://stackoverflow.com/questions/52425667/undefined-reference-to-main-when-using-real-time-for-the-masses", "title": "Undefined reference to main when using Real-Time For the Masses", "body": "<p>I'm trying to write a multi-threaded bare-metal application for the STM32F4Discovery using the Real-Time For the Masses (RTFM) <a href=\"https://docs.rs/crate/cortex-m-rtfm/0.3.4\" rel=\"nofollow noreferrer\">crate</a>. I've frankensteined together a minimal application from an <a href=\"https://github.com/rust-embedded/discovery/tree/master/src/05-led-roulette\" rel=\"nofollow noreferrer\">example</a> for the STM32F3Discovery board and <a href=\"http://blog.japaric.io/rtfm-v2/#hello-world\" rel=\"nofollow noreferrer\">this example</a>:</p>\n\n<pre><code>#![deny(unsafe_code)]\n#![no_main]\n#![no_std]\n\nextern crate cortex_m;\nextern crate cortex_m_rtfm as rtfm;\nextern crate cortex_m_semihosting;\nextern crate panic_semihosting;\nextern crate stm32f4;\n\nuse stm32f4::stm32f407;\n\nuse rtfm::app;\n\napp! {\n    device: stm32f407,\n}\n\nfn init(_p: init::Peripherals) {\n}\n\nfn idle() -&gt; ! {\n    loop {\n        rtfm::wfi();\n    }\n}\n</code></pre>\n\n<p>I can get it to compile but linking with rust-lld fails with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>= note: rust-lld: error: undefined symbol: main\n</code></pre>\n\n<p>I am confused because when I run <code>cargo expand</code> I do get a main function:</p>\n\n<pre><code>fn main() {\n    #![allow(path_statements)]\n    let init: fn(init::Peripherals) = init;\n    rtfm::atomic(unsafe { &amp;mut rtfm::Threshold::new(0) },\n                 |_t|\n                     unsafe {\n                         let _late_resources =\n                             init(init::Peripherals{core:\n                                                        ::stm32f407::CorePeripherals::steal(),\n                                                    device:\n                                                        ::stm32f407::Peripherals::steal(),});\n                     });\n    let idle: fn() -&gt; ! = idle;\n    idle();\n}\n</code></pre>\n\n<p>I'm new to Rust (in fact I was hoping to learn the language with this project)  and have no idea where the error might be located.</p>\n"}, {"tags": ["generics", "rust", "lifetime", "type-constraints"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537447741, "post_id": 52424449, "comment_id": 91793940, "body": "I think the signature you want is actually: <code>unsafe fn foo&lt;&#39;a, T&gt;(func: impl FnOnce() -&gt; T + &#39;a) -&gt; impl FnOnce() -&gt; T + &#39;static</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1537447925, "post_id": 52424449, "comment_id": 91794065, "body": "But I&#39;m not sure that it will work because the concrete type of the  <code>impl</code> in the argument is determined by the caller, but the <code>impl</code> in the return position is determined by the function. Yet somehow they have to be the same? I don&#39;t think you can do that."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537448226, "post_id": 52424449, "comment_id": 91794293, "body": "And if you try to transmute, you will need to say what type to transmute to, but you can&#39;t actually name the type of a closure."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1537449912, "post_id": 52424449, "comment_id": 91795511, "body": "This is such an unusual request that I have to imagine you&#39;ve overlooked some other way to achieve whatever it is you&#39;re really trying to do. Why don&#39;t you ask a question about the underlying problem (<i>spawning threads where the lifetime restrictions are enforced by other means</i>)? Scoped threads, for example, can solve a lot of lifetime problems (<a href=\"https://stackoverflow.com/questions/32750829/how-can-i-pass-a-reference-to-a-stack-variable-to-a-thread\">relevant Q&amp;A</a>)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537450035, "post_id": 52424449, "comment_id": 91795600, "body": "<i>&quot;This is such an unusual request...&quot;</i> \u2014 agreed. See the summary at the end of my answer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539964350, "post_id": 52424449, "comment_id": 92704323, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31089768/casting-away-lifetime-constraints\">Casting away lifetime constraints?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1537473913, "post_id": 52426192, "comment_id": 91808701, "body": "Thanks for your answer, using boxed closures as trait objects works reasonably well for the closure, but my problem is primarily with the closure&#39;s return type. I also don&#39;t really need to trick the borrow checker so much as the type system, as the type system, as lifetime bounds appear to be inseparably linked to a (generic) type once they are established. You are probably right, however, that there is not really a good way to do this."}, {"owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "edited": false, "score": 0, "creation_date": 1537474135, "post_id": 52426192, "comment_id": 91808804, "body": "My intentions is precisely to implement scoped threads. The signature for stdlib thread spawn is <code>pub fn spawn&lt;F, T&gt;(f: F) -&gt; JoinHandle&lt;T&gt; where     F: FnOnce() -&gt; T, F: Send + &#39;static, T: Send + &#39;static</code> and I tried to find a way to trick the type system into letting me use a closure/return type with less strict lifetime bounds. After having taken an in depth look at some scoped thread implementations I found out they have to jump through a lot of hoops to get this kind of thing to work and I hoped to find an easier way."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1537452706, "last_edit_date": 1537452706, "creation_date": 1537449834, "answer_id": 52426192, "question_id": 52424449, "link": "https://stackoverflow.com/questions/52424449/is-there-a-way-to-express-same-generic-type-with-different-lifetime-bound/52426192#52426192", "title": "Is there a way to express &quot;same&quot; generic type with different lifetime bound?", "body": "<p>If you just wanted to do this with simple types this would be straightforward, but there are a number of obstacles to what you are trying. I'll explain them in the order that I came across them while trying to find an answer.</p>\n\n<p>First, you can't implement this with <code>impl trait</code> types, because the function itself must choose the concrete implementation that it's going to return, but it can't because the implementation will always be based on the choice of the type of the argument <code>func</code> from the caller. This rules out the \"natural\" type of:</p>\n\n<pre><code>unsafe fn foo&lt;'a, T&gt;(func: impl FnOnce() -&gt; T + 'a) -&gt; impl FnOnce() -&gt; T + 'static\n</code></pre>\n\n<p>And leads to something more like:</p>\n\n<pre><code>unsafe fn foo&lt;'a, T, F, G&gt;(func: F) -&gt; G\nwhere\n    F: FnOnce() -&gt; + 'a,\n    G: FnOnce() -&gt; + 'static,\n</code></pre>\n\n<p>But how does the caller know what type <code>G</code> needs to be? </p>\n\n<p>If you try to use <code>mem::transmute</code> to cheat the borrow checker, you will need to tell it what to transmute into. The problem is that you only know the type is (for example) <code>impl FnOnce() -&gt; T + 'static</code>, but you can't actually write down the concrete type of a closure, so this isn't going to work either.</p>\n\n<p>So I think the answer is to <code>Box</code> the result. This might sound unsatisfactory, but it gets worse! While it's possible to create a <code>Box&lt;dyn FnOnce()&gt;</code> it is <a href=\"https://github.com/rust-lang/rust/issues/28796\" rel=\"nofollow noreferrer\">currently impossible to call that function later</a>, which means you have to make <em>another</em> compromise, which is to upgrade from <code>FnOnce</code> to <code>Fn</code>.</p>\n\n<pre><code>use std::mem;\n\nunsafe fn foo&lt;'a, T&gt;(func: impl Fn() -&gt; T + 'a) -&gt; Box&lt;dyn Fn() -&gt; T + 'static&gt; {\n    let boxed: Box&lt;dyn Fn() -&gt; T + 'a&gt; = Box::new(func);\n    mem::transmute(boxed)\n}\n</code></pre>\n\n<p>In summary, perhaps you should take a step back and find a different problem to solve, instead of this one.</p>\n"}], "owner": {"reputation": 173, "user_id": 3941747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1481162ed1e28a82e46fa5c3cea87660?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver", "link": "https://stackoverflow.com/users/3941747/oliver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1549453791, "creation_date": 1537443944, "last_edit_date": 1549453791, "question_id": 52424449, "link": "https://stackoverflow.com/questions/52424449/is-there-a-way-to-express-same-generic-type-with-different-lifetime-bound", "title": "Is there a way to express &quot;same&quot; generic type with different lifetime bound?", "body": "<p>Consider the following (incomplete) function signature:</p>\n\n<p><code>unsafe fn foo&lt;'a, T: 'a&gt;(func: impl FnOnce() -&gt; T + 'a) -&gt; ...</code></p>\n\n<p>Is there a way to (unsafely of course) <code>transmute</code> the input function so, that it becomes <code>impl FnOnce() -&gt; S + 'static</code> where S is the same type as T but with <code>S: 'static</code>.</p>\n\n<p>I know it is possible to transmute the lifetime bounds on the closure itself by using a boxed trait (<code>FnBox</code>) and then calling transmute on the box. However, this does not affect the return type (<code>T</code>). As far as I understand, <code>T: 'a</code> and <code>T: 'static</code> are different types as far as the type system goes. So I wonder if it is even possible to express this in Rust.</p>\n\n<p>I suppose the signature would have to look like this (ignoring the lifetime bounds on the closure itself):</p>\n\n<pre><code>unsafe fn&lt;'a, T, S&gt;(func: impl FnOnce() -&gt; T) -&gt; impl FnOnce() -&gt; S\nwhere\n    T: 'a,\n    S: 'static`\n</code></pre>\n\n<p>but then how do you call this function without the specification that <code>T</code> and <code>S</code> are identical except for their lifetime bound.</p>\n\n<p><strong>Disclaimer</strong>\nI am aware that tinkering with lifetime bounds is generally a bad idea, however this is for spawning threads where the lifetime restrictions are enforced by other means.</p>\n"}, {"tags": ["build", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537438737, "post_id": 52422256, "comment_id": 91788511, "body": "See <a href=\"https://stackoverflow.com/a/51678337/493729\">stackoverflow.com/a/51678337/493729</a>. I believe the answer is to use environment variables"}, {"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537439494, "post_id": 52422256, "comment_id": 91788987, "body": "@PeterHall: Is it possible to use a feature entry to enable/disable build dependencies? As features are forwarded from Cargo command-line to environment variables during build this seems to combine well with your suggestion."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537440391, "post_id": 52422256, "comment_id": 91789496, "body": "I haven&#39;t tried that - perhaps let us know if you can make it work! I think environment variables are pretty convenient by themselves."}, {"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537445145, "post_id": 52422256, "comment_id": 91792258, "body": "Unfortunately the Windows <code>cmd</code> shell doesn&#39;t support adding environment variables as a prefix to the actual command line. Thus I was looking for some solution based on Cargo &quot;features&quot;."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537536670, "post_id": 52422256, "comment_id": 91832437, "body": "<i>&quot;Unfortunately the Windows cmd shell doesn&#39;t support adding environment variables as a prefix to the actual command line&quot;</i> \u2014 How about <a href=\"https://superuser.com/a/950944\">superuser.com/a/950944</a> ?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1537439900, "creation_date": 1537439900, "answer_id": 52423193, "question_id": 52422256, "link": "https://stackoverflow.com/questions/52422256/how-can-i-make-running-a-cargo-build-script-optional/52423193#52423193", "title": "How can I make running a Cargo build script optional?", "body": "<p>You can't conditionally disable build scripts or pass variables to them via <code>cargo build</code>, but you can make use of environment variables instead.</p>\n\n<p>Inside your <code>build.rs</code>:</p>\n\n<pre><code>use std::env;\n\nfn main() {  \n    let build_enabled = env::var(\"BUILD_ENABLED\")\n        .map(|v| v == \"1\")\n        .unwrap_or(true); // run by default\n\n    if build_enabled {\n        // do your build\n    }\n}\n</code></pre>\n\n<p>Build with your build script:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>BUILD_ENABLED=1 cargo build\n</code></pre>\n\n<p>Build without your build script:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>BUILD_ENABLED=0 cargo build\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537450226, "post_id": 52424755, "comment_id": 91795747, "body": "A separate self-answer is ok too. And you&#39;ll get the credit. I did&#39;t know that Cargo features got translated into environment vars like that!"}], "tags": [], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "is_accepted": false, "score": 3, "last_activity_date": 1537444914, "creation_date": 1537444914, "answer_id": 52424755, "question_id": 52422256, "link": "https://stackoverflow.com/questions/52422256/how-can-i-make-running-a-cargo-build-script-optional/52424755#52424755", "title": "How can I make running a Cargo build script optional?", "body": "<p>To extend the answer from @PeterHall one can use a Cargo <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">\"features\"</a> section to pass information on to the build script.</p>\n\n<p>Insert the following lines into <code>Cargo.toml</code>:</p>\n\n<pre><code>[features]\nheaders = []\n</code></pre>\n\n<p>Then check for environment variable <code>CARGO_FEATURE_HEADERS</code> in <code>build.rs</code>:</p>\n\n<pre><code>use std::env;\n\nfn write_headers() {\n    // call cbindgen ...\n}\n\nfn main() {\n    let headers_enabled = env::var_os(\"CARGO_FEATURE_HEADERS\").is_some();\n    if headers_enabled {\n        write_headers();\n    }\n}\n</code></pre>\n\n<p>To make a release build run <code>cargo build --features=headers --release</code>.</p>\n\n<p>Now this solution still compiles the build script and all cbindgen dependencies when RLS updates its status or when manually running <code>cargo test</code>. But cbindgen run-time errors do not hamper RLS anymore.</p>\n"}], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 877, "favorite_count": 0, "accepted_answer_id": 52423193, "answer_count": 2, "score": 2, "last_activity_date": 1537444914, "creation_date": 1537437031, "question_id": 52422256, "link": "https://stackoverflow.com/questions/52422256/how-can-i-make-running-a-cargo-build-script-optional", "title": "How can I make running a Cargo build script optional?", "body": "<p>I have a Rust project that generates a dynamic (cdylib) library. The project uses a <a href=\"https://crates.io/crates/cbindgen\" rel=\"nofollow noreferrer\">cbindgen</a> build script to create an according C header file, matching the exported functions of the library. <code>Cargo.toml</code> looks like this:</p>\n\n<pre><code>[package]\nname = \"example\"\nversion = \"0.1.0\"\nauthors = [\"Me &lt;me@foo.bar&gt;\"]\nbuild = \"build.rs\"\n\n[lib]\nname = \"example\"\ncrate-type = [\"cdylib\"]\n\n[dependencies]\n\n[build-dependencies]\ncbindgen = \"0.6.2\"\n</code></pre>\n\n<p>Unfortunately RLS (Rust Language Server) doesn't work very well when the build script is active which makes editing in VS Code rather unpleasant. Is there a way to make running the build script optional, having it disabled by default and only manually enable it when requested on the command-line (i.e. something like <code>cargo build --release --enable-build-scripts</code>)?</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537438521, "post_id": 52421792, "comment_id": 91788391, "body": "<i>&quot;Why is that? I mean, is it possible to go both in map and map_err at once?&quot;</i> \u2014 I&#39;m sure it is. But you don&#39;t provide enough information to help."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1537455133, "post_id": 52425314, "comment_id": 91799154, "body": "In the <code>match</code>, I would just move the logic inside: <code>match Ok(&quot;foo&quot;.to_string()) { Ok(s) =&gt; { v.push(s); Ok(v) } Err(e) =&gt; { v.push(e); Err(v) }</code>"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1537535059, "last_edit_date": 1537535059, "creation_date": 1537446944, "answer_id": 52425314, "question_id": 52421792, "link": "https://stackoverflow.com/questions/52421792/why-does-map-and-map-err-capture-the-same-variable/52425314#52425314", "title": "Why does map and map_err capture the same variable?", "body": "<p>The <em>compiler</em> doesn't know that the closures passed to <code>map</code> and <code>map_err</code> are mutually exclusive.  Even if it did, it has no way of constructing two closures that both own the same value.</p>\n\n<p>You need to use a construct that is \"transparent\" to the compiler, like <code>match</code>:</p>\n\n<pre><code>#[test]\nfn test_map_and_map_err() {\n    let mut v = Vec::new();\n    let r = Ok(\"foo\".to_string())\n        .map(|i| v.push(i))\n        .map_err(|e: String| v.push(e));\n    match r {\n        Ok(()) =&gt; Ok(v),\n        Err(()) =&gt; Err(v),\n    };\n}\n</code></pre>\n\n<p>Or you can swap the value out instead:</p>\n\n<pre><code>#[test]\nfn test_map_and_map_err() {\n    use std::mem;\n    let mut v = Vec::new();\n    Ok(\"foo\".to_string())\n        .map(|i| {\n            v.push(i);\n            mem::replace(&amp;mut v, vec![])\n        }).map_err(|e: String| {\n            v.push(e);\n            mem::replace(&amp;mut v, vec![])\n        });\n}\n</code></pre>\n"}], "owner": {"reputation": 3384, "user_id": 3805131, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/D2Gzu.jpg?s=128&g=1", "display_name": "tworec", "link": "https://stackoverflow.com/users/3805131/tworec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 52425314, "answer_count": 1, "score": 2, "last_activity_date": 1537535059, "creation_date": 1537435671, "last_edit_date": 1537534967, "question_id": 52421792, "link": "https://stackoverflow.com/questions/52421792/why-does-map-and-map-err-capture-the-same-variable", "title": "Why does map and map_err capture the same variable?", "body": "<p>I'm building a chained future</p>\n\n<pre><code>ActorFuture&lt;Item = Vec&lt;String&gt;, Error = Vec&lt;String&gt;, Actor = Self&gt;\n</code></pre>\n\n<p>On success it will have vector of string outputs of all futures chained with <code>.and_then</code>. On first error processing will stop, and I want to return succeeded futures outputs and final (failed) future error. I want to use same vector to handle both paths: ok and err. But the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>242 |                             .map(|o| {v.push(o); v})\n    |                                  --- value moved (into closure) here\n243 |                             .map_err(|e| {v.push(format!(\"{}\", e)); v})\n    |                                           ^ value captured here after move\n</code></pre>\n\n<p>Why is that? Is it possible to go both in <code>map</code> and <code>map_err</code> at once? This should never happen in my understanding. </p>\n\n<p>An example:</p>\n\n<pre><code>#[test]\nfn test_map_and_map_err() {\n    let mut v = Vec::new();\n    Ok(\"foo\".to_string())\n        .map(|i| { v.push(i); v })\n        .map_err(|e: String| { v.push(e); v });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: capture of moved value: `v`\n --&gt; src/lib.rs:6:32\n  |\n5 |         .map(|i| { v.push(i); v })\n  |              --- value moved (into closure) here\n6 |         .map_err(|e: String| { v.push(e); v });\n  |                                ^ value captured here after move\n  |\n  = note: move occurs because `v` has type `std::vec::Vec&lt;std::string::String&gt;`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1537433112, "post_id": 52420967, "comment_id": 91785100, "body": "If there are other common impls required then this won&#39;t necessarily scale without <code>specialization</code>..."}], "tags": [], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "is_accepted": true, "score": 9, "last_activity_date": 1537534707, "last_edit_date": 1537534707, "creation_date": 1537432999, "answer_id": 52420967, "question_id": 52418809, "link": "https://stackoverflow.com/questions/52418809/can-a-trait-give-a-default-implementation-for-the-method-of-a-trait-that-it-inhe/52420967#52420967", "title": "Can a trait give a default implementation for the method of a trait that it inherits from?", "body": "<p>Implement <code>Blabla</code> with the default implementation for all <code>Blubblub</code> and your example works:</p>\n\n<pre><code>trait Blubblub: Blabla {\n    fn get_1(self) -&gt; u32;\n}\n\nimpl&lt;T: Blubblub&gt; Blabla for T {\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y + self.get_1()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 600, "user_id": 8028981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce2cd63034a741083a9ca961917c3c93?s=128&d=identicon&r=PG&f=1", "display_name": "Amos Egel", "link": "https://stackoverflow.com/users/8028981/amos-egel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1069, "favorite_count": 0, "accepted_answer_id": 52420967, "answer_count": 1, "score": 6, "last_activity_date": 1537534707, "creation_date": 1537424432, "last_edit_date": 1537534680, "question_id": 52418809, "link": "https://stackoverflow.com/questions/52418809/can-a-trait-give-a-default-implementation-for-the-method-of-a-trait-that-it-inhe", "title": "Can a trait give a default implementation for the method of a trait that it inherits from?", "body": "<p>I have a trait with a couple of methods. Some, but not all structs that implement this trait have all the same implementation of one of the methods: </p>\n\n<pre><code>trait Blabla {\n    fn xy(self, x: u32, y: u32) -&gt; u32;\n}\n\n// ---------------------------------\nstruct Ding {}\n\nimpl Blabla for Ding {\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y\n    }\n}\n\n// ---------------------------------\nstruct Dong {\n    dong_attribute: u32,\n}\n\nimpl Dong {\n    fn get_1(self) -&gt; u32 {\n        1\n    }\n}\n\nimpl Blabla for Dong {\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y + self.get_1()\n    }\n}\n\n// ---------------------------------\nstruct Dung {\n    dung_attribute: f32,\n}\n\nimpl Dung {\n    fn get_1(self) -&gt; u32 {\n        1\n    }\n}\n\nimpl Blabla for Dung {\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y + self.get_1()\n    }\n}\n</code></pre>\n\n<p>There are three structs in that example, each implementing the <code>Blabla</code> trait, and two of which implementing the <code>xy</code> method exactly the same way.</p>\n\n<p>Is there a way to have them share the code for that function?</p>\n\n<p>I was thinking of a second trait that inherits from <code>Blabla</code> and provide <code>xy</code> as a default implementation of that trait, like this:</p>\n\n<pre><code>trait Blabla {\n    fn xy(self, x: u32, y: u32) -&gt; u32;\n}\n\n// ----------------------------------\ntrait Blubblub: Blabla {\n    fn get_1(self) -&gt; u32;\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y + self.get_1()\n    }\n}\n\n// ---------------------------------\nstruct Ding {}\n\nimpl Blabla for Ding {\n    fn xy(self, x: u32, y: u32) -&gt; u32 {\n        x + y\n    }\n}\n\n// ---------------------------------\nstruct Dong {\n    dong_attribute: u32,\n}\n\nimpl Blubblub for Dong {\n    fn get_1(self) -&gt; u32 {\n        1\n    }\n}\n\n// ---------------------------------\nstruct Dung {\n    dung_attribute: f32,\n}\n\nimpl Blubblub for Dung {\n    fn get_1(self) -&gt; u32 {\n        1\n    }\n}\n\nfn main() {\n    let x = Dung {\n        dung_attribute: 1.0,\n    };\n    println!{\"{}\", x.xy(1,1)};\n}\n</code></pre>\n\n<p>This doesn't work because trait inheritance in Rust means that both traits need to be implemented, and thus it doesn't save me from typing the same code in the implementation of <code>Blabla::xy</code> for <code>Dong</code> and <code>Dung</code>. </p>\n"}]