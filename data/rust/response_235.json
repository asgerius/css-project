[{"tags": ["asynchronous", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1562815275, "post_id": 56979727, "comment_id": 100497913, "body": "I didn&#39;t understand a thing in your benchmark func but why do you get the result with <code>iters as u64 &#47; duration</code> that just don&#39;t make sense to me"}, {"owner": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562826891, "post_id": 56979727, "comment_id": 100501160, "body": "@Stargateur Iters is total iterations over duration, and I wanted iterations per second."}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "edited": false, "score": 0, "creation_date": 1562831948, "post_id": 56979727, "comment_id": 100503662, "body": "I think the <code>Box</code> returned by <code>cycle</code> is not freed until the end of <code>future::select_all</code>, and that would explain the increasing memory consumption."}], "answers": [{"comments": [{"owner": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "edited": false, "score": 1, "creation_date": 1562872078, "post_id": 56991161, "comment_id": 100525810, "body": "Can confirm this code seems to work without leaks, thanks! Hopefully sooner or later I will find a way to make it work with stable rust, but at least I have some solution for the meantime."}, {"owner": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "edited": false, "score": 0, "creation_date": 1562873166, "post_id": 56991161, "comment_id": 100526234, "body": "Actually, the code I wanted to benchmark implements 0.1 Futures and will not work with this benchmark definition :( <code>the trait core::future::future::Future is not implemented for impl futures::future::Future</code>)"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "reply_to_user": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "edited": false, "score": 1, "creation_date": 1562910638, "post_id": 56991161, "comment_id": 100534914, "body": "You can use future compatibility, with the <code>compat</code> method, provided by <code>futures::compat::Future01CompatExt</code>, and by <code>TryFuture</code> (or something like that), a future with a result output."}], "tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": 4, "last_activity_date": 1596479896, "last_edit_date": 1596479896, "creation_date": 1562854102, "answer_id": 56991161, "question_id": 56979727, "link": "https://stackoverflow.com/questions/56979727/performance-and-memory-problems-in-rust-async-program/56991161#56991161", "title": "Performance and memory problems in rust async program", "body": "<p>It looks like the <code>Box</code> returned by <code>cycle</code> is not freed until the end of <code>benchmark</code>, and the memory allocation / deallocation take more and more time.</p>\n<p>I have rewritten your program with <code>async_await</code>, without the <code>Box</code> and the results are now consistent :</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await)]\n\nuse futures::{compat::Future01CompatExt, future, prelude::*, select};\nuse std::sync::atomic::{AtomicUsize, Ordering};\nuse std::time::{Duration, Instant};\nuse tokio::timer;\n\nstruct Config {\n    workers: u32,\n    duration: Duration,\n}\n\n// Build infinitely repeating future\nasync fn cycle&lt;'a, F: Fn() -&gt; P + 'a, P: Future&lt;Output = ()&gt; + 'a&gt;(f: F) {\n    loop {\n        f().await;\n    }\n}\n\nasync fn benchmark&lt;'a, F: Fn() -&gt; P + 'a, P: Future&lt;Output = ()&gt; + 'a&gt;(\n    config: Config,\n    f: F,\n) -&gt; usize {\n    let counter = AtomicUsize::new(0);\n\n    let infinite_counter = future::select_all((0..config.workers).map(|_| {\n        cycle(|| {\n            f().map(|_| {\n                counter.fetch_add(1, Ordering::SeqCst);\n            })\n        })\n        .boxed_local()\n    }));\n\n    let timer = timer::Delay::new(Instant::now() + config.duration)\n        .compat()\n        .unwrap_or_else(|_| panic!(&quot;Boom !&quot;));\n\n    select! {\n        a = infinite_counter.fuse() =&gt; (),\n        b = timer.fuse() =&gt; (),\n    };\n\n    counter.load(Ordering::SeqCst)\n}\n\nfn main() {\n    let duration = std::env::args()\n        .skip(1)\n        .next()\n        .expect(&quot;Please provide duration in seconds&quot;)\n        .parse()\n        .expect(&quot;Duration must be integer number&quot;);\n\n    let ms = Duration::from_millis(1);\n\n    // Use actix_rt runtime instead of vanilla tokio because I want\n    // to restrict to one OS thread and avoid needing async primitives\n    let mut rt = actix_rt::Runtime::new().expect(&quot;Could not create runtime&quot;);;\n\n    loop {\n        let iters = rt\n            .block_on(\n                benchmark(\n                    Config {\n                        workers: 65536,\n                        duration: Duration::from_secs(duration),\n                    },\n                    || {\n                        // Substitute actual benchmarked call\n                        timer::Delay::new(Instant::now() + ms)\n                            .compat()\n                            .unwrap_or_else(|_| panic!(&quot;Boom !&quot;))\n                    },\n                )\n                .boxed_local()\n                .unit_error()\n                .compat(),\n            )\n            .expect(&quot;Runtime error&quot;);\n        println!(&quot;{} iters/sec&quot;, iters as u64 / duration);\n    }\n}\n\n</code></pre>\n<p>It's my first time with futures 0.3, so I don't really get some parts like the <code>select!</code> syntax, or the <code>boxed_local</code>, but it works !</p>\n<hr />\n<p>EDIT: Here is the dependencies block from <code>Cargo.toml</code></p>\n<pre><code>[dependencies]\nfutures-preview = { version = &quot;0.3.0-alpha&quot;, features = [&quot;nightly&quot;, &quot;compat&quot;, &quot;async-await&quot;] }\ntokio = &quot;0.1.22&quot;\nactix-rt = &quot;0.2.3&quot;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "is_accepted": true, "score": 2, "last_activity_date": 1562876098, "creation_date": 1562876098, "answer_id": 56996685, "question_id": 56979727, "link": "https://stackoverflow.com/questions/56979727/performance-and-memory-problems-in-rust-async-program/56996685#56996685", "title": "Performance and memory problems in rust async program", "body": "<p>So it turns out <code>cycle</code> really was a culprit <a href=\"https://stackoverflow.com/a/56991161/2195721\">as Gregory suspected</a>. I found this useful function in futures crate: <a href=\"https://docs.rs/futures/0.1.28/futures/future/fn.loop_fn.html\" rel=\"nofollow noreferrer\">loop_fn</a>, and rewritten <code>cycle</code> using it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Build infinitely repeating future\nfn cycle&lt;'a, F: Fn() -&gt; P + 'a, P: Future + 'a&gt;(\n    f: F,\n) -&gt; impl Future&lt;Item = (), Error = P::Error&gt; + 'a {\n    future::loop_fn((), move |_| f().map(|_| future::Loop::Continue(())))\n}\n</code></pre>\n\n<p>The rest of the code remains the same. Now this compiles with stable rust and even reports almost twice as much iterations per second as proposed nightly futures solution (for what it's worth with this synthetic test). </p>\n"}], "owner": {"reputation": 1378, "user_id": 2195721, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/37ff0c10acb6603393e11b44132b23cb?s=128&d=identicon&r=PG", "display_name": "Cthulhu", "link": "https://stackoverflow.com/users/2195721/cthulhu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1133, "favorite_count": 0, "accepted_answer_id": 56996685, "answer_count": 2, "score": 1, "last_activity_date": 1596479896, "creation_date": 1562800426, "last_edit_date": 1562838018, "question_id": 56979727, "link": "https://stackoverflow.com/questions/56979727/performance-and-memory-problems-in-rust-async-program", "title": "Performance and memory problems in rust async program", "body": "<p>I wanted to benchmark requests from rust to particular service using async client, and created async benchmarker for that.</p>\n\n<p>This function should run specified amount of concurrent threads (actually, parallel chains of futures) for specified duration and report count of iterations achieved.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future;\nuse futures::prelude::*;\nuse std::error::Error;\nuse std::time::{Duration, Instant};\nuse std::{cell, io, rc};\nuse tokio::runtime::current_thread::Runtime;\nuse tokio::timer;\n\nstruct Config {\n    workers: u32,\n    duration: Duration,\n}\n\n/// Build infinitely repeating future\nfn cycle&lt;'a, F: Fn() -&gt; P + 'a, P: Future + 'a&gt;(\n    f: F,\n) -&gt; Box&lt;dyn Future&lt;Item = (), Error = P::Error&gt; + 'a&gt; {\n    Box::new(f().and_then(move |_| cycle(f)))\n}\n\nfn benchmark&lt;'a, F: Fn() -&gt; P + 'a, P: Future&lt;Error = io::Error&gt; + 'a&gt;(\n    config: Config,\n    f: F,\n) -&gt; impl Future&lt;Item = u32, Error = io::Error&gt; + 'a {\n    let counter = rc::Rc::new(cell::Cell::new(0u32));\n    let f = rc::Rc::new(f);\n    future::select_all((0..config.workers).map({\n        let counter = rc::Rc::clone(&amp;counter);\n        move |_| {\n            let counter = rc::Rc::clone(&amp;counter);\n            let f = rc::Rc::clone(&amp;f);\n            cycle(move || {\n                let counter = rc::Rc::clone(&amp;counter);\n                f().map(move |_| {\n                    counter.set(counter.get() + 1);\n                })\n            })\n        }\n    }))\n    .map(|((), _, _)| ())\n    .map_err(|(err, _, _)| err)\n    .select(\n        timer::Delay::new(Instant::now() + config.duration)\n            .map_err(|err| io::Error::new(io::ErrorKind::Other, err.description())),\n    )\n    .map(move |((), _)| counter.get())\n    .map_err(|(err, _)| err)\n}\n\nfn main() {\n    let duration = std::env::args()\n        .skip(1)\n        .next()\n        .expect(\"Please provide duration in seconds\")\n        .parse()\n        .expect(\"Duration must be integer number\");\n\n    let ms = Duration::from_millis(1);\n\n    let mut rt = Runtime::new().expect(\"Could not create runtime\");\n\n    loop {\n        let iters = rt\n            .block_on(\n                benchmark(\n                    Config {\n                        workers: 65536,\n                        duration: Duration::from_secs(duration),\n                    },\n                    || {\n                        /// Substitute actual benchmarked call\n                        timer::Delay::new(Instant::now() + ms)\n                            .map_err(|err| panic!(\"Failed to set delay: {:?}\", err))\n                    },\n                )\n                .map_err(|err| panic!(\"Benchamrking error: {:?}\", err)),\n            )\n            .expect(\"Runtime error\");\n        println!(\"{} iters/sec\", iters as u64 / duration);\n    }\n}\n</code></pre>\n\n<p>However, the result this benchmark reports and memory consumption degrades with increase of benchmark duration, e.g. on my pc:</p>\n\n<p><code>cargo run --release 1</code> ~ 900k iterations/sec<br>\n<code>cargo run --release 2</code> ~ 700k iterations/sec<br>\n<code>cargo run --release 10</code> ~ 330k iterations/sec</p>\n\n<p>Also, memory usage rapidly grows as benchmark function runs. I tried using <code>valgrind</code> to find memory leak but it only reports that all allocated memory can still be reached.</p>\n\n<p>How can I fix the issue?</p>\n"}, {"tags": ["rust", "blockchain", "substrate"], "comments": [{"owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "edited": false, "score": 0, "creation_date": 1564311606, "post_id": 56978731, "comment_id": 100981746, "body": "You tagged your question with <code>substrate</code>, would you be interested in a dedicated Stack Exchange Q&amp;A site for Substrate, Polkadot, et al. -- check out the <a href=\"https://area51.stackexchange.com/proposals/122626/substrate?referrer=NTUwMTkxYjJjOTJiNjE0YzMxYjgwMGNkZmFlYzdhZTczYjk1ZWY3ZGI4NzJmODUwN2RlYTQ2MTNjZTdkOTZhMAzuL-zybtPN9CHzwE-WUdvBC8WxvPG46b4ayadke6kG0\">Area51 Substrate Proposal</a>"}], "answers": [{"tags": [], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "is_accepted": false, "score": 1, "last_activity_date": 1562796127, "creation_date": 1562796127, "answer_id": 56979211, "question_id": 56978731, "link": "https://stackoverflow.com/questions/56978731/is-there-a-reason-to-use-generic-traits-over-specific-types-in-substrate/56979211#56979211", "title": "Is there a reason to use generic traits over specific types in Substrate?", "body": "<p>Substrate is built to be generic and highly customizable. When you write your modules and runtime logic around the <code>Hash</code> trait, you gain the benefits of your module being generic over the specific type of <code>Hash</code> being used in the runtime.</p>\n\n<p>In this case, you do not need to depend on a specific type in your runtime like <code>H256</code>. Instead, you have the ability to write runtime logic which only depends on the properties of a Trait. That means, if at some later point, you wanted to implement a different hash function which results in a different <code>Hash</code> type, you would not have to rewrite any code.</p>\n\n<p>Additionally, if you plan on sharing the modules you develop with others, you will want to keep your module as generic as possible as to not force the end blockchain developer to conform to your standards.</p>\n\n<p>These abstractions do add some complexity, and is not strictly needed to make things work. However, it is best practice, and something you might find pays dividends in the long term.</p>\n"}], "owner": {"reputation": 11, "user_id": 11767101, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-i4Bh-LhshGU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfASIQjU4KT-vnzUxZKwceoBtn-8Q/photo.jpg?sz=128", "display_name": "Bruno Fran&#231;a", "link": "https://stackoverflow.com/users/11767101/bruno-fran%c3%a7a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562796847, "creation_date": 1562793280, "last_edit_date": 1562796847, "question_id": 56978731, "link": "https://stackoverflow.com/questions/56978731/is-there-a-reason-to-use-generic-traits-over-specific-types-in-substrate", "title": "Is there a reason to use generic traits over specific types in Substrate?", "body": "<p>Is there any reason for me to use the <code>Hash</code> abstraction of <code>sr-primitives</code> instead of using the <code>substrate_primitives::hash</code> and <code>substrate_primitives::hashing</code> modules?</p>\n\n<p>It's just that it seems much easier to include <code>H256</code> in my code (and use the corresponding hashing functions) than to use the <code>Hash</code> trait.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562787830, "post_id": 56977397, "comment_id": 100491330, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/56977397/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1562789826, "last_edit_date": 1562789826, "creation_date": 1562787409, "answer_id": 56977535, "question_id": 56977397, "link": "https://stackoverflow.com/questions/56977397/how-to-compare-self-in-structs-method-with-another-struct/56977535#56977535", "title": "How to compare &amp;self in struct&#39;s method with another struct", "body": "<p>The <code>match</code> statement matches the provided value against <em>patterns</em>. Matching a value against a pattern is different from testing for equality. If the latter is what you want to do, use an <code>if</code> statement instead. You can read up on patterns in the <a href=\"https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html\" rel=\"nofollow noreferrer\">subsection on pattern syntax in the book</a>.</p>\n\n<p>A pattern consisting of just an identifier, say <code>x</code>, matches whatever value is provided, and this value is <em>assigned</em> to <code>x</code>. This means the pattern <code>self</code> does not compare the value with the value of <code>self</code>, but instead tries to assign the value of the match expression to <code>self</code>, which is not allowed, as the error message explains.</p>\n\n<p>Your function should instead be written like this:</p>\n\n<pre><code>fn match_card(&amp;self, deck: &amp;[Option&lt;Card&gt;]) -&gt; bool {\n    deck.iter().flatten().any(|card| card == self)\n}\n</code></pre>\n\n<p>This assumes that <code>PartialEq</code> is implemented for the <code>Card</code> type, which can usually be done using <code>#[derive(PartialEq)]</code>.</p>\n\n<p>The <code>flatten()</code> method in the code above treats each <code>Option&lt;Card&gt;</code> as a nested iterator. Iterating an <code>Option</code> yields no elements if the option is <code>None</code>, or otherwise the single value wrapped in the option. This means that <code>deck.iter().flatten()</code> is an iterator yielding an <code>&amp;Card</code> for all <code>Some(_)</code> items in the slice, while all <code>None</code> items are simply skipped.</p>\n"}, {"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1562789160, "last_edit_date": 1562789160, "creation_date": 1562787451, "answer_id": 56977547, "question_id": 56977397, "link": "https://stackoverflow.com/questions/56977397/how-to-compare-self-in-structs-method-with-another-struct/56977547#56977547", "title": "How to compare &amp;self in struct&#39;s method with another struct", "body": "<p>Assuming <code>Card</code> implements <code>PartialEq</code>, you may use a <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/match/guard.html\" rel=\"nofollow noreferrer\">match guard</a>:</p>\n\n<pre><code>fn match_card(&amp;self, deck: &amp;[Option&lt;Card&gt;]) -&gt; bool {\n    for i in deck.iter() {\n        match i {\n            Some(c) if c == self =&gt; {\n                println!(\"\\nFound card in deck!\\nCard found is {:#?}\\n\", c);\n                return true;\n            }\n            _ =&gt; continue,\n        }\n    }\n    false\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b989cf3abe32589c2ce81de3aadbe9b5\" rel=\"nofollow noreferrer\">playground demo</a></p>\n\n<p>I can't tell what the real code is, but if you have no reason to use a <code>match</code>, a simple <code>if</code> test would be more appropriate here.</p>\n"}], "owner": {"reputation": 2160, "user_id": 2953079, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/94040e9e76a7b9227da4f8bdb9cde181?s=128&d=identicon&r=PG&f=1", "display_name": "Nomnom", "link": "https://stackoverflow.com/users/2953079/nomnom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 56977535, "answer_count": 2, "score": 0, "last_activity_date": 1562849889, "creation_date": 1562786741, "last_edit_date": 1562849889, "question_id": 56977397, "link": "https://stackoverflow.com/questions/56977397/how-to-compare-self-in-structs-method-with-another-struct", "title": "How to compare &amp;self in struct&#39;s method with another struct", "body": "<p>I'm not sure why but my method won't work, is there a way to compare self with its parent struct? I added the data structures for context.</p>\n\n<pre><code>#[derive(PartialEq, Copy, Clone, Debug)]\nenum Suits {\n    Hearts,\n    Spades,\n    Clubs,\n    Diamonds,\n}\n\n#[derive(PartialEq, Copy, Clone, Debug)]\nstruct Card {\n    card_num: u8,\n    card_suit: Suits,\n}\n\n\n\n    fn match_card(&amp;self, deck: &amp;[Option&lt;Card&gt;]) -&gt; bool {\n        for i in deck.iter() {\n            match i.unwrap() {\n                self =&gt; {\n                    println!(\"\\nFound card in deck!\\nCard found is {:#?}\\n\", i.unwrap());\n                    return true;\n                }\n                _ =&gt; continue,\n            }\n        }\n        false\n    }\n\n</code></pre>\n\n<p>I get:</p>\n\n<pre><code>`self` value is a keyword and may not be bound to variables or shadowed\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562786791, "post_id": 56977286, "comment_id": 100490923, "body": "@Shepmaster Unfortunately, this isn&#39;t a duplicate. See the update to my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1562787727, "post_id": 56977286, "comment_id": 100491285, "body": "The question you asked, &quot;Constrain generic to specific set of types&quot;, has been answered by the duplicates. The answer is &quot;no&quot;, along with a whole bunch of alternatives. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7a71e161254efb8f0b5ee0f6ca5f3ab0\" rel=\"nofollow noreferrer\">Creating a trait works fine here</a>"}, {"owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562790807, "post_id": 56977286, "comment_id": 100492500, "body": "@Shepmaster Thanks, you playground link pushed me in the right direction. If you&#39;re curious, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7859de2eea4d3b04cf5c86f9e4ced78\" rel=\"nofollow noreferrer\">this</a> is what I tried that made me think traits wouldn&#39;t work, and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=12940a3c0f7ddb73d4c0773f02dac753\" rel=\"nofollow noreferrer\">this</a> is what worked to constrain the implementation to a specific subset of Foo."}, {"owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562879400, "post_id": 56977286, "comment_id": 100528605, "body": "@Shepmaster I&#39;m going to rewrite this question, since the actual question asked was answered by the two linked questions, but the underlying problem was different. I&#39;m also going to write an answer using your playground code under the assumption you don&#39;t mind. If that&#39;s not the case, I can delete the answer."}], "owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "closed_date": 1562786522, "answer_count": 0, "score": 0, "last_activity_date": 1562881265, "creation_date": 1562786203, "last_edit_date": 1562881265, "question_id": 56977286, "link": "https://stackoverflow.com/questions/56977286/only-implement-support-for-a-subset-of-types-that-implement-a-trait", "closed_reason": "Duplicate", "title": "Only implement support for a subset of types that implement a trait", "body": "<p>Sometimes in Rust, types implementing a trait depend on platform specifc behavior such that it's not possible to deal with them entirely generally through only the trait interface. In this case, it would be useful to implement general code once, and platform specific code on each concrete type.</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait IncompleteInterface {}\n\nstruct PlatformA;\nstruct PlatformB;\n\nimpl IncompleteInterface for PlatformA {}\nimpl IncompleteInterface for PlatformB {}\n\nimpl PlatformA {\n    fn baz() {}\n}\n\nimpl PlatformB {\n    fn fizz() {}\n    fn buzz() {}\n}\n\nstruct PlatformDependent&lt;T: IncompleteInterface&gt;(T);\n\nimpl&lt;T /* Constrain to PlatformA and PlatformB */&gt; PlatformDependent&lt;T&gt; {\n    fn foo() {\n        Self::bar();\n    }\n}\n\nimpl PlatformDependent&lt;PlatformA&gt; {\n    fn bar(&amp;self) {\n        self.0.baz();\n    }\n}\n\nimpl PlatformDependent&lt;PlatformB&gt; {\n    fn bar(&amp;self) {\n        self.0.fizz();\n        self.0.buzz();\n    }\n}\n</code></pre>\n\n<p>Without a constraint, this can't compile, because the compiler can't be sure there is an appropriate implementation for <code>PlatformDependent::baz()</code>. For instance if, someone implements <code>impl IncompleteInterface for PlatformC {}</code>, then obviously <code>PlatformDependent&lt;C&gt;(platformC).bar()</code> won't work.</p>\n\n<p>Is there a way to tell the compiler the general implementation only works with Platforms A and B?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562778976, "post_id": 56975388, "comment_id": 100487551, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fa0102d3144e48d916fbf3934d3f096d\" rel=\"nofollow noreferrer\">The duplicates applied</a>."}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562786227, "post_id": 56975388, "comment_id": 100490687, "body": "@Shepmaster the solution suggested in the &quot;duplicate&quot; does not seem &quot;good enough&quot;. Please see <b>EDIT</b>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562786614, "post_id": 56975388, "comment_id": 100490850, "body": "What is unclear about <a href=\"https://stackoverflow.com/questions/56975388/calling-itself-in-a-future#comment100487551_56975388\">the comment where I applied it to your code</a>? Or the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69a5e8e44f1a8c36ddbdc9be0cccb5f2\" rel=\"nofollow noreferrer\">a slightly simpler version</a>"}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562787151, "post_id": 56975388, "comment_id": 100491050, "body": "@Shepmaster I annotated the lines I changed in the above code with a comment started with the word &#39;CHANGE&#39;. These changes do what I understood is suggested in the &quot;duplicate&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562787335, "post_id": 56975388, "comment_id": 100491115, "body": "I do not understand where the communication gap is. If you review the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fa0102d3144e48d916fbf3934d3f096d\" rel=\"nofollow noreferrer\">code I&#39;ve changed for you</a> and the other <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69a5e8e44f1a8c36ddbdc9be0cccb5f2\" rel=\"nofollow noreferrer\">code I&#39;ve changed for you</a>, and diff them against your original code, you will very quickly see the appropriate changes. From the duplicate: <i>Note that we assign an explicit lifetime to <code>self</code> and use that in the returned value (via + <code>&#39;a</code>)</i>"}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562790840, "post_id": 56975388, "comment_id": 100492510, "body": "@Shepmaster Sorry, I likely misunderstood your first reply. Yes the version with the lifetime looks  good, is more explicit (and works fine). Thanks"}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562791198, "post_id": 56975388, "comment_id": 100492650, "body": "@Shepmaster Since the final solution involves lifetimes rather than passing a ref as in the duplicate, do you want to post an answer that I can award and remove the duplicate flag ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562791299, "post_id": 56975388, "comment_id": 100492690, "body": "You are also passing a reference: <code>&amp;self</code>. References contain lifetimes; these truly are the same question and answer; duplicating the answer won&#39;t make Stack Overflow a better set of content, but thank you!"}], "owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1562778696, "answer_count": 0, "score": 1, "last_activity_date": 1562791044, "creation_date": 1562777830, "last_edit_date": 1562791044, "question_id": 56975388, "link": "https://stackoverflow.com/questions/56975388/calling-itself-in-a-future", "closed_reason": "Duplicate", "title": "Calling it`self` in a future", "body": "<p>The following (contrived) example has the <code>chain</code> method calling the <code>create_future</code> method which retuns a <code>Future</code>. On successful completion of the future, the result of the <code>do_something</code> method is returned.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::Future; //0.1.28\n\ntype AnError = Box&lt;std::error::Error&gt;;\n\npub trait Test {\n    fn do_something(&amp;self) -&gt; Result&lt;(), AnError&gt;;\n    fn create_future(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt;&gt;;\n    fn chain(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt;&gt; {\n        Box::new(\n            self.create_future()\n                .then(|f| f.and_then(|_| self.do_something())),\n        )\n    }\n}\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/lib.rs:11:23\n   |\n11 |                 .then(|f| f.and_then(|_| self.do_something())),\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 8:5...\n  --&gt; src/lib.rs:8:5\n   |\n8  | /     fn chain(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt;&gt; {\n9  | |         Box::new(\n10 | |             self.create_future()\n11 | |                 .then(|f| f.and_then(|_| self.do_something())),\n12 | |         )\n13 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;Self\n              found &amp;&amp;Self\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn futures::future::Future&lt;Error = std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt;, Item = ()&gt; + 'static)&gt;\n              found std::boxed::Box&lt;dyn futures::future::Future&lt;Error = std::boxed::Box&lt;dyn std::error::Error&gt;, Item = ()&gt;&gt;\n</code></pre>\n\n<p>The problem is the use of <code>self</code> in the <code>self.do_something()</code> call (replace this call by <code>Ok(())</code> and this example will compile).</p>\n\n<p>The compiler is complaining that the struct instance (<code>self</code>) may be outlived in that future... which seems a bit hard to swallow, since <code>chain</code> has been called on it.</p>\n\n<p>How can I make this work and have the struct instance call itself in a future? I'm using Rust 1.36.</p>\n\n<hr>\n\n<p>Unless I missed something, <a href=\"https://stackoverflow.com/questions/48613350/how-to-return-a-future-combinator-with-self\">the suggested solution in the duplicate</a> (passing a ref as the result of the future) is not enough</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::Future; //0.1.28\n\ntype AnError = Box&lt;std::error::Error&gt;;\n\npub trait Test {\n    fn do_something(&amp;self) -&gt; Result&lt;(), AnError&gt;;\n    fn create_future(&amp;self) -&gt; Box&lt;Future&lt;Item = &amp;Test, Error = AnError&gt;&gt;; //&lt;== CHANGE `Item=()` to `Item=&amp;Test` to return a ref\n    fn chain(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt;&gt; {\n        Box::new(\n            self.create_future()\n                .then(|f| f.and_then(|t| t.do_something())), // &lt;== CHANGE recovering `t` from the future the ref to `Test`, and calling on it\n        )\n    }\n}\n</code></pre>\n\n<p>fails with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:10:18\n   |\n10 |             self.create_future()\n   |                  ^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 8:5...\n  --&gt; src/lib.rs:8:5\n   |\n8  | /     fn chain(&amp;self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt;&gt; {\n9  | |         Box::new(\n10 | |             self.create_future()\n11 | |                 .then(|f| f.and_then(|t| t.do_something())), // &lt;== change there\n12 | |         )\n13 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:10:13\n   |\n10 |             self.create_future()\n   |             ^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn futures::future::Future&lt;Error = std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt;, Item = ()&gt; + 'static)&gt;\n              found std::boxed::Box&lt;dyn futures::future::Future&lt;Error = std::boxed::Box&lt;dyn std::error::Error&gt;, Item = ()&gt;&gt;\n</code></pre>\n\n<hr>\n\n<p>SOLUTION:</p>\n\n<p>Assign explicit lifetimes to <code>self</code> and the Future.\nCopied from @Shepmaster (thanks) playground. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type AnError = Box&lt;std::error::Error&gt;;\n\npub trait Test {\n    fn do_something(&amp;self) -&gt; Result&lt;(), AnError&gt;;\n    fn create_future(&amp;self) -&gt; Box&lt;Future&lt;Item = &amp;Test, Error = AnError&gt;&gt;;\n    fn chain&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;Future&lt;Item = (), Error = AnError&gt; + 'a&gt; {\n        Box::new(\n            self.create_future()\n                .then(|f| f.and_then(|_| self.do_something())),\n        )\n    }\n}\n</code></pre>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1562770198, "post_id": 56973284, "comment_id": 100482894, "body": "Is one u64 supposed to be built from one u8 or from 4 of them ? What&#39;s the goal ?"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1562782631, "post_id": 56973284, "comment_id": 100489149, "body": "It&#39;s a bit strange to convert four <code>u8</code> to a <code>u64</code>, you would normally need 8."}, {"owner": {"reputation": 721, "user_id": 9779026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/304c70070e68a9c799518d2cdee4d138?s=128&d=identicon&r=PG", "display_name": "2080", "link": "https://stackoverflow.com/users/9779026/2080"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1562793790, "post_id": 56973284, "comment_id": 100493615, "body": "@starblue Thank you, corrected!"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1562835723, "post_id": 56973284, "comment_id": 100505627, "body": "Converting a <code>Vec&lt;u8&gt;</code> to a <code>Vec&lt;u64&gt;</code> inplace is not safe, and you should never try it. You will have to make a copy. The only way to avoid it is to allocate a <code>Vec&lt;u64&gt;</code> directly and write bytes into it (because a conversion from <code>&amp;mut [u64]</code> to <code>&amp;mut [u8]</code> can be safe). See also the <a href=\"https://docs.rs/safe-transmute/0.11.0-rc.2/safe_transmute/\" rel=\"nofollow noreferrer\"><code>safe-transmute</code></a> crate."}, {"owner": {"reputation": 721, "user_id": 9779026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/304c70070e68a9c799518d2cdee4d138?s=128&d=identicon&r=PG", "display_name": "2080", "link": "https://stackoverflow.com/users/9779026/2080"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562844582, "post_id": 56973284, "comment_id": 100510841, "body": "@E_net4theClose-voter Like the solution I indicated?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562844645, "post_id": 56973284, "comment_id": 100510872, "body": "Yes, unless you can also avoid making the <code>Vec&lt;u8&gt;</code> in the first place."}, {"owner": {"reputation": 522, "user_id": 7039094, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/19f4c61a13518ac027d53c0bd6c9a643?s=128&d=identicon&r=PG&f=1", "display_name": "kam", "link": "https://stackoverflow.com/users/7039094/kam"}, "edited": false, "score": 0, "creation_date": 1600369334, "post_id": 56973284, "comment_id": 113074450, "body": "I will not say it is strange to map a vector of u8 to one in u64. Assume we have a continues stripe of memory (array of u8 or so) this could be a string/str seeing as bytes. But what if you would like to see this as an array of u16, u32 or u64 instead? F.x. if we need to check for some abstraction of the string that fill more than a byte but always hold another size. it could be a data stream which we need to check for some format, where it would be more efficient to check against u16 or another size parameter. i.e comparison of one u16 will faster than two comparisons of one byte each."}, {"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "edited": false, "score": 1, "creation_date": 1609068583, "post_id": 56973284, "comment_id": 115739847, "body": "<b>Not a duplicate as increasing the size of a vector is not the same as decreasing it and a <code>vec&lt;&gt;</code>isn t an array.</b>"}], "owner": {"reputation": 721, "user_id": 9779026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/304c70070e68a9c799518d2cdee4d138?s=128&d=identicon&r=PG", "display_name": "2080", "link": "https://stackoverflow.com/users/9779026/2080"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1207, "favorite_count": 0, "closed_date": 1562770219, "answer_count": 0, "score": 2, "last_activity_date": 1562793684, "creation_date": 1562770080, "last_edit_date": 1562793684, "question_id": 56973284, "link": "https://stackoverflow.com/questions/56973284/how-do-i-convert-a-vecu8-to-vecu64", "closed_reason": "Duplicate", "title": "How do I convert a Vec&lt;u8&gt; to Vec&lt;u64&gt;?", "body": "<p>I've read a file into vector of unsigned bytes:</p>\n\n<pre><code>let data = fs::read(\"test.bin\").expect(\"Unable to read file\");\n</code></pre>\n\n<p>How can I convert/cast this vector to a <code>Vec&lt;u64&gt;</code>, with every eight bytes constituting a u64?</p>\n\n<p>The \"duplicates\" do not provide a solution, but I found it in the meanwhile:</p>\n\n<pre><code>let vec8: Vec&lt;u8&gt; = vec![1,2,3,4,5,6,7,8];\nlet mut vec64: Vec&lt;u64&gt; = vec![0;vec8.len()/8];\nBigEndian::read_u64_into(&amp;data, &amp;mut vec64);\n</code></pre>\n"}, {"tags": ["memory-management", "rust", "memory-layout"], "comments": [{"owner": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1562771068, "post_id": 56973256, "comment_id": 100483386, "body": "i&#39;m assuming the address of <code>a</code> is right after the address of <code>v</code> on stack but there are always 7 address in between"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562771177, "post_id": 56973256, "comment_id": 100483444, "body": "Why do you assume that?"}, {"owner": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562772034, "post_id": 56973256, "comment_id": 100483957, "body": "because I tried with other types and they are always consecutively on stack and tried with vector and string and its always 7 bytes more, i just wanted to know what are these 7 bytes for."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562771968, "post_id": 56973746, "comment_id": 100483922, "body": "Do you think &quot;alignment&quot; is covered well by &quot;target CPU architecture&quot; or should it be specifically called out?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562772510, "post_id": 56973746, "comment_id": 100484240, "body": "@Shepmaster it is covered in the linked question. It perhaps could have been a dupe actually..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562773306, "post_id": 56973746, "comment_id": 100484693, "body": "<a href=\"https://media1.tenor.com/images/fb248007bce02deafaf54fe62565421a/tenor.gif\" rel=\"nofollow noreferrer\">You have the power</a>"}, {"owner": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "edited": false, "score": 0, "creation_date": 1562773713, "post_id": 56973746, "comment_id": 100484931, "body": "what i am actually wondering is that is rust always assign 31 bytes for vector/string on stack or 24 and the extra 7 we can ignore, thanks"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "edited": false, "score": 1, "creation_date": 1562776108, "post_id": 56973746, "comment_id": 100486201, "body": "@liyanchao It&#39;s 24. The other bytes you are talking about could be any fragment of the other code in the function, including the expanded <code>println</code> macros, inlined functions or anything else."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562776239, "post_id": 56973746, "comment_id": 100486271, "body": "It looks to me like the 7 &quot;extra&quot; bytes are for padding the <code>u8</code> in your example, and have nothing to do with the <code>Vec</code> at all. Although in reality they are probably not &quot;extra&quot; bytes but would be used for more local variables if you had any."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "edited": false, "score": 1, "creation_date": 1562776705, "post_id": 56973746, "comment_id": 100486484, "body": "@liyanchao Put another way, the stack frames probably have to be aligned to 8 bytes because of the ABI. In this case you have 25 bytes worth of stack data, so it takes 32 bytes worth of stack. The compiler just decided to put the 7 padding bytes between <code>v</code> and <code>a</code>."}, {"owner": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "edited": false, "score": 0, "creation_date": 1562778257, "post_id": 56973746, "comment_id": 100487182, "body": "i tried this many times on 2 different computers and its always 7 so i thought maybe compiler is doing something secretly :D now i can finally move on, thanks guys"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1562775052, "last_edit_date": 1562775052, "creation_date": 1562771468, "answer_id": 56973746, "question_id": 56973256, "link": "https://stackoverflow.com/questions/56973256/why-is-the-address-of-a-second-variable-not-right-after-the-first-variable/56973746#56973746", "title": "Why is the address of a second variable not right after the first variable?", "body": "<blockquote>\n  <p>I assume that the address of <code>a</code> is right after the address of <code>v</code>.</p>\n</blockquote>\n\n<p>Just because you wrote these variables in this order does not mean that Rust will store them consecutively on the stack. The Rust compiler is free to place things in memory wherever it sees fit, and you absolutely cannot rely on the ordering. The final ordering could be different depending on:</p>\n\n<ul>\n<li>the version of the Rust compiler</li>\n<li>if you are compiling for debug or release</li>\n<li>the target operating system</li>\n<li>the target CPU architecture</li>\n<li>other code nearby in your application</li>\n</ul>\n\n<p>The actual size of the <code>Vec</code> can be shown to be 24:</p>\n\n<pre><code>let v = vec![1_u8];\nprintln!(\"size = {}\", std::mem::size_of_val(&amp;v)); // size = 24\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/54395558/stack-pointer-increments-in-rust/54400847#54400847\">Why do subsequent Rust variables increment the stack pointer instead of decrementing it?</a></li>\n</ul>\n"}], "owner": {"reputation": 3, "user_id": 11765537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21d07e873873fea6765df35b6ff33a66?s=128&d=identicon&r=PG&f=1", "display_name": "liyanchao", "link": "https://stackoverflow.com/users/11765537/liyanchao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 56973746, "answer_count": 1, "score": 0, "last_activity_date": 1562778848, "creation_date": 1562769973, "last_edit_date": 1562778848, "question_id": 56973256, "link": "https://stackoverflow.com/questions/56973256/why-is-the-address-of-a-second-variable-not-right-after-the-first-variable", "title": "Why is the address of a second variable not right after the first variable?", "body": "<p>I am aware that on a 64-bit system, a <code>Vec</code> will store an 8-byte pointer to the heap, 8 bytes for the capacity and 8 bytes for the length.</p>\n\n<p>I assume that the address of <code>a</code> is right after the address of <code>v</code>, but when I checked the boundaries of the vector allocation on the stack, I found it always occupies 31 bytes of stack memory, 7 bytes more than it should. This goes the same for strings.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn main() {\n    let v = vec![1_u8];\n    let a = 1_u8;\n\n    let v_raw = &amp;v as *const _;\n    let a_raw = &amp;a as *const _;\n\n    println!(\"v addr = {:p}, dec = {}\", v_raw, v_raw as usize);\n    println!(\"a addr = {:p}, dec = {}\", a_raw, a_raw as usize);\n    println!(\"offset = {} bytes\", a_raw as usize - v_raw as usize);\n\n    // changing below 3 print will affect the mysterious 7 bytes\n    //    println!(\"v_raw addr = {:p}\", &amp;v_raw);     // (1)\n    //    println!(\"a_raw addr = {:p}\", &amp;a_raw);     // (2)\n    println!(\"v as_ptr = {:p}\", v.as_ptr()); // (3)\n\n    // dereference through offset 24 to 30 -&gt; 7 bytes\n    let mut offset = 24_usize;\n    loop {\n        if offset == 31 {\n            break;\n        }\n\n        // usize to *const usize(raw pointer)\n        let mut addr = (v_raw as usize + offset) as *const usize;\n        let deref_value = unsafe { *addr as u8 };\n\n        println!(\n            \"offset = {}, addr = {:p}, value hex = {:x}, value = {}\",\n            offset, addr, deref_value, deref_value\n        );\n\n        offset += 1;\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>v addr = 0x7fffbcf48b70, dec = 140736363531120\na addr = 0x7fffbcf48b8f, dec = 140736363531151\noffset = 31 bytes\nv as_ptr = 0x55d9c823ea40\noffset = 24, addr = 0x7fffbcf48b88, value hex = 0, value = 0\noffset = 25, addr = 0x7fffbcf48b89, value hex = 0, value = 0\noffset = 26, addr = 0x7fffbcf48b8a, value hex = 0, value = 0\noffset = 27, addr = 0x7fffbcf48b8b, value hex = 0, value = 0\noffset = 28, addr = 0x7fffbcf48b8c, value hex = 0, value = 0\noffset = 29, addr = 0x7fffbcf48b8d, value hex = 0, value = 0\noffset = 30, addr = 0x7fffbcf48b8e, value hex = 0, value = 0\n</code></pre>\n\n<p>Sometimes these 7 extra addresses contains all 0 values, and sometimes not if I uncomment all the <code>println!</code> macros marked (1)(2)(3)</p>\n\n<p>As I declared <code>v</code> and <code>a</code> in sequence, I was expecting that <code>a</code> is next to <code>v</code> on the stack, so why do I get these 7 bytes extra? Is this extra memory designed for something special?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562776710, "post_id": 56973146, "comment_id": 100486486, "body": "I don&#39;t see the link between your real case and your question, <code>send_form()</code> take a <code>&amp;T</code>. BTW, see <a href=\"https://stackoverflow.com/questions/55576425/why-does-clippy-suggests-passing-an-arc-as-a-reference\" title=\"why does clippy suggests passing an arc as a reference\">stackoverflow.com/questions/55576425/&hellip;</a>"}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562777626, "post_id": 56973146, "comment_id": 100486920, "body": "In the real life example, I&#39;m passing a reference to a data structure which is the parameter <code>T</code>. I want that data structure inside the reference to itself contain references, which is where the issue is coming from. The presence or absence of the outer reference seems unimportant, but I could be making a mistake."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562778196, "post_id": 56973146, "comment_id": 100487158, "body": "the link point to the construct of <code>VerifyRequest </code> that doesn&#39;t have generic parameter <a href=\"https://github.com/snoyberg/sortasecret/blob/7b44c164181af5267febbb65085954911f3e12c0/src/server.rs#L60\" rel=\"nofollow noreferrer\">github.com/snoyberg/sortasecret/blob/&hellip;</a> you are very unclear."}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562778861, "post_id": 56973146, "comment_id": 100487484, "body": "This change to the code demonstrates the same error message. I did not claim that the code I linked to was broken, I pointed out that I was using unnecessary allocations to work around the problem. <a href=\"https://github.com/snoyberg/sortasecret/commit/bb43f336e53da6e6437a2f0310785163ab82dee9\" rel=\"nofollow noreferrer\">github.com/snoyberg/sortasecret/commit/&hellip;</a>"}, {"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562822122, "post_id": 56973146, "comment_id": 100499344, "body": "@bitemyapp&#39;s answer explains the mechanism by which this is happening, and I&#39;ve put a hacky workaround in place in my codebase that avoids the clone itself <a href=\"https://github.com/snoyberg/sortasecret/commit/148344046b11869c137ad3cae5628fa95461f361#diff-4ce93534efc34e923ce01e975eb7ed80R106\" rel=\"nofollow noreferrer\">github.com/snoyberg/sortasecret/commit/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562774998, "post_id": 56974695, "comment_id": 100485627, "body": "The first issue you link to is closed and apparently fixed. Why do you believe it is relevant to today&#39;s code?"}, {"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562775274, "post_id": 56974695, "comment_id": 100485780, "body": "@Shepmaster background flavor for the design. I anticipated getting this comment and people might misunderstand so I&#39;ll remove. My goal ultimately when poking at stuff like this is to develop enough intuition for the design that I don&#39;t need to google compiler errors. Seeing how past bugs were fixed (that is, behaviors at variance with the intended design) can tell me a lot. I get the impression SO isn&#39;t a place that likes a Talmudic approach so I redacted the reference."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562775527, "post_id": 56974695, "comment_id": 100485914, "body": "I totally think that it&#39;s reasonable to provide background information, but providing links without context isn&#39;t useful. Introduce the link and explain the basic content. However, it&#39;s true that most people want an answer to &quot;fix my code now&quot;, so it&#39;s often useful putting a TL;DR at the top with the copy-pastable solution, followed by the deeper explanation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562775707, "post_id": 56974695, "comment_id": 100486020, "body": "It&#39;s also good to directly answer the OPs question: &quot;how do I do this&quot;. For whatever human reason, we tend to put our actual point at the end of our questions; I&#39;ve retitled the question to put the last sentence first."}, {"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562775748, "post_id": 56974695, "comment_id": 100486041, "body": "@Shepmaster I hear you. In this particular SO question, I&#39;m replying to my boss. What would a quick fix for this be?   &quot;Don&#39;t move the value without explicit lifetimes or borrow the value?&quot;  Seems like an issue that needs clarifying, with the &quot;answer&quot; being to understand how the error can be triggered or avoided. I demonstrated both. This is a tiny repro of the original issue from the actix-web app he&#39;s working on."}, {"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562776122, "post_id": 56974695, "comment_id": 100486210, "body": "I see now there&#39;s, &quot;Is there a way to keep the code parameterized, continue passing in a reference, and get the borrow checker to accept it?&quot; I&#39;m not sure if you edited that in or not. I&#39;m also unsure if what I demonstrated constitutes a fix or not. Seems too trivial to be the case for the repro but maybe I missed something."}, {"owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562776162, "post_id": 56974695, "comment_id": 100486234, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/196269/discussion-between-bitemyapp-and-shepmaster\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 1601, "user_id": 1205702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66c2fd2313df8f6f65266cf7a4f1979b?s=128&d=identicon&r=PG", "display_name": "bitemyapp", "link": "https://stackoverflow.com/users/1205702/bitemyapp"}, "is_accepted": true, "score": 1, "last_activity_date": 1562820739, "last_edit_date": 1562820739, "creation_date": 1562774890, "answer_id": 56974695, "question_id": 56973146, "link": "https://stackoverflow.com/questions/56973146/is-there-a-way-to-pass-a-reference-to-a-generic-function-and-return-an-impl-trai/56974695#56974695", "title": "Is there a way to pass a reference to a generic function and return an impl Trait that isn&#39;t related to the argument&#39;s lifetime?", "body": "<p>I think this is due to the rules around how <code>impl trait</code> opaque types capture lifetimes.</p>\n\n<p>If there are lifetimes inside an argument <code>T</code>, then an <code>impl trait</code> has to incorporate them. Additional lifetimes in the type signature follow the normal rules.</p>\n\n<p>For more information please see:</p>\n\n<ul>\n<li><p><a href=\"https://github.com/rust-lang/rust/issues/43396#issuecomment-349716967\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/43396#issuecomment-349716967</a></p></li>\n<li><p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#lifetime-parameters\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#lifetime-parameters</a></p></li>\n<li><p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#assumption-3-there-should-be-an-explicit-marker-when-a-lifetime-could-be-embedded-in-a-return-type\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#assumption-3-there-should-be-an-explicit-marker-when-a-lifetime-could-be-embedded-in-a-return-type</a></p></li>\n<li><p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#scoping-for-type-and-lifetime-parameters\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md#scoping-for-type-and-lifetime-parameters</a></p></li>\n</ul>\n\n<h3>A more complete answer</h3>\n\n<p>Original goal: the send_form function takes an input parameter of type &amp;T which is rendered to a binary representation. That binary representation is owned by the resulting impl Future, and no remnant of the original &amp;T remains. Therefore, the lifetime of &amp;T need not outlive the impl Trait. All good.</p>\n\n<p>The problem arises when T itself, additionally, contains references with lifetimes. If we were not using impl Trait, our signature would look something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn send_form&lt;T&gt;(self, data: &amp;T) -&gt; SendFormFuture;\n</code></pre>\n\n<p>And by looking at <code>SendFormFuture</code>, we can readily observe that there is no remnant of <code>T</code> in there at all. Therefore, even if <code>T</code> has lifetimes of its own to deal with, we know that all references are used within the body of send_form, and never used again afterward by <code>SendFormFuture</code>.</p>\n\n<p>However, with <code>impl Future</code> as the output, we get no such guarantees. There's no way to know if the concrete implementation of Future in fact holds onto the <code>T</code>.</p>\n\n<p>In the case where <code>T</code> has no references, this still isn't a problem. Either the <code>impl Future</code> references the <code>T</code>, and fully takes ownership of it, or it doesn't reference it, and no lifetime issues arise.</p>\n\n<p>However, if <code>T</code> does have references, you could end up in a situation where the concrete <code>impl Future</code> is holding onto a reference stored in the <code>T</code>. Even though the <code>impl Future</code> has ownership of the <code>T</code> itself, it doesn't have ownership of the values referenced by the <code>T</code>.</p>\n\n<p>This is why the borrow check must be conservative, and insist that any references inside <code>T</code> must have a <code>'static</code> lifetime.</p>\n\n<p>The only workaround I can see is to bypass <code>impl Future</code> and be explicit in the return type. Then, you can demonstrate to the borrow checker quite easily that the output type does not reference the input <code>T</code> type at all, and any references in it are irrelevant.</p>\n\n<p>The original code in the actix web client for <code>send_form</code> looks like:</p>\n\n<p><a href=\"https://docs.rs/awc/0.2.1/src/awc/request.rs.html#503-522\" rel=\"nofollow noreferrer\">https://docs.rs/awc/0.2.1/src/awc/request.rs.html#503-522</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn send_form&lt;T: Serialize&gt;(\n        self,\n        value: &amp;T,\n    ) -&gt; impl Future&lt;\n        Item = ClientResponse&lt;impl Stream&lt;Item = Bytes, Error = PayloadError&gt;&gt;,\n        Error = SendRequestError,\n    &gt; {\n        let body = match serde_urlencoded::to_string(value) {\n            Ok(body) =&gt; body,\n            Err(e) =&gt; return Either::A(err(Error::from(e).into())),\n        };\n\n        // set content-type\n        let slf = self.set_header_if_none(\n            header::CONTENT_TYPE,\n            \"application/x-www-form-urlencoded\",\n        );\n\n        Either::B(slf.send_body(Body::Bytes(Bytes::from(body))))\n    }\n</code></pre>\n\n<p>You may need to patch the library or write your own function that does the same thing but with a concrete type. If anyone else knows how to deal with this apparent limitation of <code>impl trait</code> I'd love to hear it.</p>\n\n<p>Here's how far I've gotten on a rewrite of <code>send_form</code> in <code>awc</code> (the actix-web client library):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    pub fn send_form_alt&lt;T: Serialize&gt;(\n        self,\n        value: &amp;T,\n        // ) -&gt; impl Future&lt;\n        //     Item = ClientResponse&lt;impl Stream&lt;Item = Bytes, Error = PayloadError&gt;&gt;,\n        //     Error = SendRequestError,\n    ) -&gt; Either&lt;\n        FutureResult&lt;String, actix_http::error::Error&gt;,\n        impl Future&lt;\n            Item = crate::response::ClientResponse&lt;impl futures::stream::Stream&gt;,\n            Error = SendRequestError,\n        &gt;,\n    &gt; {\n</code></pre>\n\n<p>Some caveats so far:</p>\n\n<ul>\n<li><code>Either::B</code> is necessarily an opaque <code>impl trait</code> of <code>Future</code>.</li>\n<li>The first param of <code>FutureResult</code> might actually be <code>Void</code> or whatever the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#t:Void\" rel=\"nofollow noreferrer\">Void</a> equivalent in Rust is called.</li>\n</ul>\n"}], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 0, "accepted_answer_id": 56974695, "answer_count": 1, "score": 3, "last_activity_date": 1562820739, "creation_date": 1562769653, "last_edit_date": 1562775639, "question_id": 56973146, "link": "https://stackoverflow.com/questions/56973146/is-there-a-way-to-pass-a-reference-to-a-generic-function-and-return-an-impl-trai", "title": "Is there a way to pass a reference to a generic function and return an impl Trait that isn&#39;t related to the argument&#39;s lifetime?", "body": "<p>I've worked down a <a href=\"https://github.com/snoyberg/sortasecret/blob/7b44c164181af5267febbb65085954911f3e12c0/src/server.rs#L99-L100\" rel=\"nofollow noreferrer\">real-life example in a web app</a>, which I've solved using unnecessary heap allocation, to the following example:</p>\n\n<pre><code>// Try replacing with (_: &amp;String)\nfn make_debug&lt;T&gt;(_: T) -&gt; impl std::fmt::Debug {\n    42u8\n}\n\nfn test() -&gt; impl std::fmt::Debug {\n    let value = \"value\".to_string();\n\n    // try removing the ampersand to get this to compile\n    make_debug(&amp;value)\n}\n\npub fn main() {\n    println!(\"{:?}\", test());\n}\n</code></pre>\n\n<p>As is, compiling this code gives me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `value` does not live long enough\n  --&gt; src/main.rs:9:16\n   |\n5  | fn test() -&gt; impl std::fmt::Debug {\n   |              -------------------- opaque type requires that `value` is borrowed for `'static`\n...\n9  |     make_debug(&amp;value)\n   |                ^^^^^^ borrowed value does not live long enough\n10 | }\n   | - `value` dropped here while still borrowed\n</code></pre>\n\n<p>I can fix this error in at least two ways:</p>\n\n<ol>\n<li>Instead of passing in a reference to <code>value</code> in <code>test()</code>, pass in <code>value</code> itself</li>\n<li>Instead of the parameter <code>T</code>, explicitly state the type of the argument for <code>make_debug</code> as <code>&amp;String</code> or <code>&amp;str</code></li>\n</ol>\n\n<p>My understanding of what's happening is that, when there is a parameter, the borrow checker is assuming that any lifetime on that parameter affects the output <code>impl Debug</code> value.</p>\n\n<p>Is there a way to keep the code parameterized, continue passing in a reference, and get the borrow checker to accept it?</p>\n"}, {"tags": ["inheritance", "rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562769373, "post_id": 56972956, "comment_id": 100482391, "body": "That&#39;s not &quot;trait inheritance&quot;, that&#39;s trait bounds. Just like when you write <code>T: Trait</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1562769747, "post_id": 56972956, "comment_id": 100482626, "body": "@FrenchBoiethios The OP is likely referring to the <a href=\"https://doc.rust-lang.org/stable/book/ch19-03-advanced-traits.html#using-supertraits-to-require-one-traits-functionality-within-another-trait\" rel=\"nofollow noreferrer\">supertrait</a> in <code>trait CharMatchable: ParseTree</code>, and a <code>Box</code>ed trait object of the former not coercing into a <code>Box</code> of the latter."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562769803, "post_id": 56972956, "comment_id": 100482659, "body": "@E_net4theClose-voter Supertrait mechanism is not a mechanism of inheritance."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562769863, "post_id": 56972956, "comment_id": 100482700, "body": "@FrenchBoiethios I know, but it&#39;s not far out to assume that the OP doesn&#39;t know the precise naming of this feature."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562774220, "post_id": 56972956, "comment_id": 100485219, "body": "<i>no function or associated item named <code>new</code> found for type <code>dyn CharMatchable</code></i>; <i>no function or associated item named <code>new</code> found for type <code>dyn ParseTree</code></i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562774350, "post_id": 56972956, "comment_id": 100485294, "body": "As friendly advice, you are going to run into some strong resistance if you try to do everything in a classical object-oriented manner. Rust is a different language with different idioms. Sometimes those mesh well with existing OO patterns (e.g. dependency injection) and sometimes not (inheritance)."}, {"owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562778810, "post_id": 56972956, "comment_id": 100487464, "body": "@Shepmaster I clarified my question to show how it differs from the question this is supposedly a duplicate of. It would be nice if my question could be reopened."}], "owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1562774130, "answer_count": 0, "score": 0, "last_activity_date": 1562778654, "creation_date": 1562769013, "last_edit_date": 1562778654, "question_id": 56972956, "link": "https://stackoverflow.com/questions/56972956/rust-trait-inheritance-problem-with-function-returning-trait", "closed_reason": "Duplicate", "title": "Rust trait inheritance problem with function returning trait", "body": "<p>In my code I have the following traits:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait ParseTree {}\n\npub trait CharMatchable: ParseTree {}\n\npub struct Character {}\nimpl CharMatchable for Character {}\nimpl ParseTree for Character {}\nimpl Character {\n    fn new() -&gt; Self {\n        Self {}\n    }\n}\n\npub struct TreePart {}\nimpl ParseTree for TreePart {}\nimpl TreePart {\n    fn new() -&gt; Self {\n        Self {}\n    }\n}\n</code></pre>\n\n<p>Then I have a function that returns <code>Box&lt;CharMatchable&gt;</code> and another function that returns <code>Box&lt;ParseTree&gt;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn returns_char_matchable() -&gt; Box&lt;CharMatchable&gt; {\n    Box::new(Character::new())\n}\n\nfn returns_parse_tree(p: bool) -&gt; Box&lt;ParseTree&gt; {\n    if p {\n        returns_char_matchable() // &lt;-- Here is the error\n    } else {\n        Box::new(TreePart::new())\n    }\n}\n</code></pre>\n\n<p>This doesn't work in Rust as when I compile the code I get following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; src/parser.rs:348:40\n    |\n348 |             Some(class) =&gt; return Some(class),\n    |                                        ^^^^^ expected trait `parser::ParseTree`, found trait `parser::CharMatchable`\n    |\n    = note: expected type `std::boxed::Box&lt;dyn parser::ParseTree&gt;`\n               found type `std::boxed::Box&lt;dyn parser::CharMatchable&gt;`\n</code></pre>\n\n<p>As was mentioned in the comments, this might not be the Idiomatic way to achieve such behavior in Rust. I am asking specifically how one would Implement something like this in an idiomatic way.</p>\n\n<p>This question is different from <a href=\"https://stackoverflow.com/questions/28632968\">this one</a> as I am asking not why this isn't working, but rather how this <em>should</em> be done idiomatically in Rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1562769375, "post_id": 56972932, "comment_id": 100482394, "body": "I don&#39;t get what you mean with Copy shouldn&#39;t be used. It&#39;s used when you return the value for example."}, {"owner": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1562770304, "post_id": 56972932, "comment_id": 100482962, "body": "@DenysS&#233;guret ignoring the final return for now, is it used anywhere else?"}], "answers": [{"comments": [{"owner": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562770351, "post_id": 56972982, "comment_id": 100482985, "body": "Can you expand on Assumption B ?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562770940, "post_id": 56972982, "comment_id": 100483309, "body": "<code>max</code> is of type <code>i32</code>, not <code>&amp;i32</code>"}, {"owner": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562771038, "post_id": 56972982, "comment_id": 100483369, "body": "Yeah, but why? As mentioned, the IndexMut trait should be used which says it will return <code>&amp;mut i32</code>. Why is it <code>i32</code>?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562771590, "post_id": 56972982, "comment_id": 100483698, "body": "IndexMut would be used if the indexing was left side of the assignment, not right side, or with max = &amp;mut arr[0]. And it would also need the array to be mutable. The trait used here is Index"}, {"owner": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562776264, "post_id": 56972982, "comment_id": 100486287, "body": "Thats interesting, i didn&#39;t realize the side of assignment was relevant! But wouldn&#39;t that mean that <code>arr[0]</code> returns a <code>&amp;i32</code> (as the Index-trait defines)?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "edited": false, "score": 0, "creation_date": 1562776590, "post_id": 56972982, "comment_id": 100486436, "body": "Read <a href=\"https://doc.rust-lang.org/beta/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\">there</a>: <i>&quot;container[index] is actually syntactic sugar for *container.index(index)&quot;</i> (the important detail is the <code>*</code>). As for the IndexMut it&#39;s not precisely the side of the assignment  which matters but whether the context of the expression needs to be mutable (when it&#39;s left side of an assignment it always is). If you were to declare <code>let max: &amp;i32 = &amp;mut arr[0]</code> then you&#39;d asking for a mutable context."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1562769102, "creation_date": 1562769102, "answer_id": 56972982, "question_id": 56972932, "link": "https://stackoverflow.com/questions/56972932/references-in-element-variable-of-for-loop/56972982#56972982", "title": "References in element variable of for loop", "body": "<p>In</p>\n\n<pre><code>for &amp;i in arr.iter() {\n</code></pre>\n\n<p>you're not <em>adding</em> a <code>&amp;</code>: this is <a href=\"https://doc.rust-lang.org/book/ch18-01-all-the-places-for-patterns.html\" rel=\"nofollow noreferrer\">pattern matching</a>. You're matching <code>&amp;i</code> to the results of the iteration, thus <em>removing</em> the <code>&amp;</code>.</p>\n\n<p>It's effectively just like doing</p>\n\n<pre><code>for i in arr.iter() {\n    let i = *i;\n</code></pre>\n"}], "owner": {"reputation": 24248, "user_id": 717341, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/1c16b153fa49895083ab294dc3648334?s=128&d=identicon&r=PG", "display_name": "Lukas Knuth", "link": "https://stackoverflow.com/users/717341/lukas-knuth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "closed_date": 1562769491, "answer_count": 1, "score": 1, "last_activity_date": 1562769572, "creation_date": 1562768940, "question_id": 56972932, "link": "https://stackoverflow.com/questions/56972932/references-in-element-variable-of-for-loop", "closed_reason": "Duplicate", "title": "References in element variable of for loop", "body": "<p>I'm having difficulty understanding why this snippet from <a href=\"https://doc.rust-lang.org/book/ch10-00-generics.html\" rel=\"nofollow noreferrer\">The Rust Book, Chapter 10</a> works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn largest(arr: &amp;[i32]) -&gt; i32 {\n    let mut max = arr[0];\n    for &amp;i in arr.iter() {\n        if i &gt; max {\n            max = i;\n        }\n    }\n    max\n}\n</code></pre>\n\n<p><strong>Assumption A:</strong> Using <code>arr.iter()</code> will return references to the items in the array/slice/vector when iterating over it. So <code>i</code> will be of type <code>&amp;i32</code>. Adding the extra <code>&amp;</code> in the definition will make it a reference to a reference, so <code>&amp;&amp;i32</code>.</p>\n\n<p><strong>Assumption B:</strong> The <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\">IndexMut</a> trait (used in line 2) will return a mutable reference to the item at index, so in this case a <code>&amp;mut i32</code>.</p>\n\n<p>Both of these assumptions are wrong, given that both <code>i</code> and <code>max</code> are of type <code>i32</code>. Why?</p>\n\n<hr>\n\n<p>Additionally, I understand that <code>i32</code> implements the <code>Copy</code>-trait, but since I'm not moving ownership anywhere in this code (because everything is a reference) it shouldn't be used here, right?</p>\n\n<hr>\n\n<p>Lastly, if I leave the <code>.iter()</code>-call out, it works aswell. I assume that the compiler infers from the <code>&amp;i</code>-definition, that the <code>iter()</code> should be used (and not <code>iter_mut()</code> or <code>into_iter()</code>), correct?</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562759652, "post_id": 56965280, "comment_id": 100476806, "body": "By the way, idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562759672, "post_id": 56965280, "comment_id": 100476819, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what modules, how you&#39;ve included them, etc. in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/56965280/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562754926, "post_id": 56966149, "comment_id": 100474311, "body": "This works for <code>main.rs</code> or <code>lib.rs</code>, but if the <code>mod</code> statement is in <code>lib.rs</code> and you want to refer to <code>A::B::C</code> from another top level module, you&#39;ll need a <code>use A;</code> (or is it <code>use crate::A;</code>? I can&#39;t remember, any more...)"}, {"owner": {"reputation": 183, "user_id": 4369045, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/554741342/picture?type=large", "display_name": "Henry Bigelow", "link": "https://stackoverflow.com/users/4369045/henry-bigelow"}, "edited": false, "score": 0, "creation_date": 1562780541, "post_id": 56966149, "comment_id": 100488249, "body": "Hi trentcl, I tried &quot;use A;&quot; and it worked!  Thanks so much."}], "tags": [], "owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "is_accepted": false, "score": 2, "last_activity_date": 1562748295, "last_edit_date": 1562748295, "creation_date": 1562746031, "answer_id": 56966149, "question_id": 56965280, "link": "https://stackoverflow.com/questions/56965280/how-do-i-write-a-use-statement-in-order-to-import-a-name-but-use-it-as-mod1mod/56966149#56966149", "title": "How do I write a use statement in order to import a name but use it as mod1::mod2::item?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>mod A;\n\nfn main() {\n    A::B::C::ModuleCfn();\n}\n</code></pre>\n\n<p>Here are the files and modules that i tried:</p>\n\n<pre><code>src/A.rs =&gt;\n    pub mod B;\nsrc/A/B.rs =&gt;\n    pub mod C;\nsrc/A/B/C.rs =&gt;\n    pub fn ModuleCfn() { }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 183, "user_id": 4369045, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/554741342/picture?type=large", "display_name": "Henry Bigelow", "link": "https://stackoverflow.com/users/4369045/henry-bigelow"}, "is_accepted": false, "score": 0, "last_activity_date": 1562814249, "creation_date": 1562814249, "answer_id": 56981087, "question_id": 56965280, "link": "https://stackoverflow.com/questions/56965280/how-do-i-write-a-use-statement-in-order-to-import-a-name-but-use-it-as-mod1mod/56981087#56981087", "title": "How do I write a use statement in order to import a name but use it as mod1::mod2::item?", "body": "<p>Suppose I want to refer to:</p>\n\n<p><code>actix_web_httpauth::extractors::bearer::BearerAuth</code></p>\n\n<p>as </p>\n\n<p><code>bearer::BearerAuth</code></p>\n\n<p>and</p>\n\n<p><code>actix_web_httpauth::headers::www_authenticate::bearer::Error</code></p>\n\n<p>as</p>\n\n<p><code>bearer::Error</code></p>\n\n<p>It is not possible, because it would require these two statements, which conflict:</p>\n\n<pre><code>use actix_web_httpauth::extractors::bearer;\nuse actix_web_httpauth::headers::www_authenticate::bearer;\n</code></pre>\n\n<p>Admittedly, this is an edge case, but it does seem odd to me that it is not possible to specify a subset of a namespace while still retaining a partial path to that namespace.</p>\n\n<p>The most reasonable solution seems to be something like:</p>\n\n<pre><code>use actix_web_httpauth::extractors::bearer as xbearer;\nuse actix_web_httpauth::headers::www_authenticate::bearer as ybearer;\n\n...\n\nxbearer::BearerAuth ...\nybearer::Error ...\n\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 4369045, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/554741342/picture?type=large", "display_name": "Henry Bigelow", "link": "https://stackoverflow.com/users/4369045/henry-bigelow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1562814249, "creation_date": 1562742833, "last_edit_date": 1562759784, "question_id": 56965280, "link": "https://stackoverflow.com/questions/56965280/how-do-i-write-a-use-statement-in-order-to-import-a-name-but-use-it-as-mod1mod", "title": "How do I write a use statement in order to import a name but use it as mod1::mod2::item?", "body": "<p>Given that the file <code>src/A/B/C.rs</code> exists, what <code>use</code> statement would I write in a file <code>src/D.rs</code> so that I can access <code>C</code> as <code>A::B::C</code>?</p>\n\n<p>I've tried: <code>use A::B::C</code>, but then I cannnot refer to it as <code>A::B::C</code>.  I've tried: <code>use A::{B::C}</code>, but then I can only refer to it as <code>B::C</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562729910, "post_id": 56963011, "comment_id": 100463640, "body": "<code>iter</code> =&gt; <code>iter_mut</code> - - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9b0c99b7fc83bfdef5af4eca1dd4b22a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1562755256, "post_id": 56963011, "comment_id": 100474497, "body": "One of the clues about your mistake is in the output: <i>&quot;warning: value assigned to <code>i</code> is never read&quot;</i>, for the line: <code>i = &amp;Some(Card {</code>. It&#39;s not being read anywhere so the mutation is not having any effect. You are writing a new reference to a variable, and <i>not</i> giving the existing reference a new value."}], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 6, "last_activity_date": 1562732552, "creation_date": 1562732552, "answer_id": 56963379, "question_id": 56963011, "link": "https://stackoverflow.com/questions/56963011/how-can-you-iterate-and-change-the-values-in-a-mutable-array-in-rust/56963379#56963379", "title": "How can you iterate and change the values in a mutable array in Rust?", "body": "<p>First, your deck is not mutable. Remember in rust bindings are non-mutable by default:</p>\n\n<pre><code>let mut deck: [Option&lt;Card&gt;; 52] = [None; 52];\n</code></pre>\n\n<p>Next, to obtain an iterator you can modify, you use <code>iter_mut()</code>:</p>\n\n<pre><code>for i in deck.iter_mut() {\n</code></pre>\n\n<p>Finally: the <code>i</code> that you have in your loop is a mutable reference to the elements of deck. To assign something to the reference, you need to dereference it:</p>\n\n<pre><code>*i = Some(Card {\n    card_num: 1,\n    card_suit: Suits::Hearts,\n});\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a92bedc5b27a4591762b326b1a277315\" rel=\"noreferrer\">Playground Link</a></p>\n"}], "owner": {"reputation": 2160, "user_id": 2953079, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/94040e9e76a7b9227da4f8bdb9cde181?s=128&d=identicon&r=PG&f=1", "display_name": "Nomnom", "link": "https://stackoverflow.com/users/2953079/nomnom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 884, "favorite_count": 0, "accepted_answer_id": 56963379, "answer_count": 1, "score": 1, "last_activity_date": 1562759427, "creation_date": 1562729057, "last_edit_date": 1562759427, "question_id": 56963011, "link": "https://stackoverflow.com/questions/56963011/how-can-you-iterate-and-change-the-values-in-a-mutable-array-in-rust", "title": "How can you iterate and change the values in a mutable array in Rust?", "body": "<p>This is how far I got:</p>\n\n<pre><code>#[derive(Copy, Clone, Debug)]\nenum Suits {\n    Hearts,\n    Spades,\n    Clubs,\n    Diamonds,\n}\n\n#[derive(Copy, Clone, Debug)]\nstruct Card {\n    card_num: u8,\n    card_suit: Suits,\n}\n\nfn generate_deck() {\n    let deck: [Option&lt;Card&gt;; 52] = [None; 52];\n\n    for mut i in deck.iter() {\n        i = &amp;Some(Card {\n            card_num: 1,\n            card_suit: Suits::Hearts,\n        });\n    }\n\n    for i in deck.iter() {\n        println!(\"{:?}\", i);\n    }\n}\n\nfn main() {\n    generate_deck();\n}\n</code></pre>\n\n<p>It only  prints out <code>None</code>. Is there something wrong with my borrowing? What am I doing wrong?</p>\n"}, {"tags": ["memory-management", "struct", "rust"], "answers": [{"tags": [], "owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "is_accepted": true, "score": 3, "last_activity_date": 1562737023, "last_edit_date": 1562737023, "creation_date": 1562710802, "answer_id": 56961172, "question_id": 56960908, "link": "https://stackoverflow.com/questions/56960908/how-to-initalize-a-struct-with-a-fixed-size-array-as-a-member-element/56961172#56961172", "title": "How to initalize a struct with a fixed size array as a member element?", "body": "<p>When initializing a variable with a struct you must use an equals sign, just like with any other assignment.</p>\n\n<p>So first of all, we should add an equals sign. There are two options for placement:</p>\n\n<pre><code>// A\nlet su: Sudoku = { field: [[u32; 9]; 9] };\n// B\nlet su = Sudoku { field: [[u32; 9]; 9] };\n</code></pre>\n\n<p>Both will still error but for different reasons.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>// A\nerror[E0425]: cannot find value `field` in this scope\n --&gt; src/main.rs:7:24\n  |\n7 |     let su: Sudoku = { field: [[u32; 9]; 9] };\n  |                        ^^^^^\n  |                        |\n  |                        not found in this scope\n  |                        expecting a type here because of type ascription\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:7:24\n  |\n7 |     let su: Sudoku = { field: [[u32; 9]; 9] };\n  |                        ^^^^^^^^^^^^^^^^^^^^ expected struct `Sudoku`, found array of 9 elements\n  |\n  = note: expected type `Sudoku`\n             found type `[[u32; 9]; 9]`\n\n// B\nerror[E0423]: expected value, found builtin type `u32`\n --&gt; src/main.rs:7:32\n  |\n7 |     let su = Sudoku { field: [[u32; 9]; 9] };\n  |                                ^^^ not a value\n</code></pre>\n\n<p>If you know Rust syntax, you know that <code>{ ... }</code> is valid as block syntax in almost any situation. One exception is when initializing a struct, in which case the opening bracket must be immediately preceded by the type the struct.</p>\n\n<p>So, <strong>B</strong> is more correct. Let's fix that last error, which is telling you to replace the type with a value in order to make it work.</p>\n\n<pre><code>let su = Sudoku { field: [[0; 9]; 9] };\n</code></pre>\n\n<p>You can use any value there, every element in the multi-dimensional array will be filled with it.</p>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=218aa6edf267592485ba4ae5fa9a92f1\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 1123, "user_id": 5233175, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/F4N6y.jpg?s=128&g=1", "display_name": "Paul W&#252;rtz", "link": "https://stackoverflow.com/users/5233175/paul-w%c3%bcrtz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 56961172, "answer_count": 1, "score": -2, "last_activity_date": 1562737023, "creation_date": 1562708872, "question_id": 56960908, "link": "https://stackoverflow.com/questions/56960908/how-to-initalize-a-struct-with-a-fixed-size-array-as-a-member-element", "title": "How to initalize a struct with a fixed size array as a member element?", "body": "<p>I have the following struct</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Sudoku {\n    field: [[u32; 9]; 9]\n}\n</code></pre>\n\n<p>If I initalize it like this <code>let su: Sudoku;</code> everything seems all right, but using a method of the struct gives me this error <code>^^ use of possibly uninitialized 'method'</code>. So I try to initalize the struct with the array like this <code>let su: Sudoku{field: [[u32; 9]; 9]};</code> which gives me this error </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>98 |     let su: Sudoku{field: [[u32; 9]; 9]};\n   |                   ^ expected one of 7 possible tokens here\n</code></pre>\n\n<p>So there are two questionmarks up my mind. First, generally how do I use fixed size arrays in structs and properly initalise them. And why do I need to initalise fixed size arrays anyway, aren't they for primitives automatically nulled out in memory?</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "is_accepted": true, "score": 0, "last_activity_date": 1562764413, "creation_date": 1562764413, "answer_id": 56971530, "question_id": 56958093, "link": "https://stackoverflow.com/questions/56958093/how-to-make-post-request-by-curl-with-an-array-of-a-map-for-actix-from-data/56971530#56971530", "title": "How to make POST request by curl with an array of a map for actix-from-data?", "body": "<p><code>curl -i -X POST -F files[][name]=\"qqq\" localhost:8080/upload</code></p>\n\n<p>proper command</p>\n"}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 56971530, "answer_count": 1, "score": 0, "last_activity_date": 1562764413, "creation_date": 1562694432, "question_id": 56958093, "link": "https://stackoverflow.com/questions/56958093/how-to-make-post-request-by-curl-with-an-array-of-a-map-for-actix-from-data", "title": "How to make POST request by curl with an array of a map for actix-from-data?", "body": "<p>I'm attempting to send POST request by curl with an array of map. How it should be written? </p>\n\n<p>I wrote:</p>\n\n<p><code>curl -X POST -H \"Content-Type: multipart/form-data\" -F files[]=\"name=\\\"qqq\\\"\" localhost:8080/upload</code></p>\n\n<p>But it returns a <code>Found field with unexpected name or type</code> error.</p>\n\n<p>By the way, How it would be with uncommented stroke with two fields in each map? for file's name and for file's data ?</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), failure::Error&gt; {\n    let form = Form::new()\n        .field(\"files\", Field::array(\n            Field::map()\n                .field(\"name\", Field::text())\n    //                .field(\"file\", Field::file(Gen))\n                .finalize()\n        ));\n\n    println!(\"{:?}\", form);\n\n    HttpServer::new(move || {\n        App::new()\n            .service(resource(\"/upload\")\n                .data(form.clone())\n                .route(post()\n                    .to(upload_multipart)\n                )\n            )\n    })\n    .bind(\"127.0.0.1:8080\")?\n    .run()?;\n\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "tuples", "destructuring", "reference-counting"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562693675, "post_id": 56957770, "comment_id": 100453931, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/31624743/155423\">Why is the return type of Deref::deref itself a reference?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56957770/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562693736, "post_id": 56957770, "comment_id": 100453950, "body": "It&#39;s hard to answer multiple questions made in one post. Please separate them into multiple questions so that we can help you better and so that your questions will help others in the future that have one of the same questions as you!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562693819, "post_id": 56957770, "comment_id": 100453978, "body": "It looks like your second question (&quot;why do these variants work&quot;) might be answered by the answers of <a href=\"https://stackoverflow.com/q/56511328/155423\">How does Rust pattern matching determine if the bound variable will be a reference or a value?</a>; <a href=\"https://stackoverflow.com/q/43370054/155423\">Is there any difference between matching on a reference to a pattern or a dereferenced value?</a>; <a href=\"https://stackoverflow.com/q/55130932/155423\">How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562693884, "post_id": 56957770, "comment_id": 100454010, "body": "You can go one step further: <code>let (lock, cvar) = &amp;*pair;</code>"}, {"owner": {"reputation": 530, "user_id": 8807809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6150c2b1e72864800de8df5a7afff2f3?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin W Matthews", "link": "https://stackoverflow.com/users/8807809/kevin-w-matthews"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562694168, "post_id": 56957770, "comment_id": 100454135, "body": "Hi @Shepmaster, thanks for the quick response! Let me take some time to digest the links that you gave."}, {"owner": {"reputation": 530, "user_id": 8807809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6150c2b1e72864800de8df5a7afff2f3?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin W Matthews", "link": "https://stackoverflow.com/users/8807809/kevin-w-matthews"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1563660348, "post_id": 56957770, "comment_id": 100774234, "body": "Hi again @Shepmaster, I&#39;ve taken a stab at splitting, editing, and answering this question. The other half is <a href=\"https://stackoverflow.com/q/57128842/8807809\">here</a>."}], "answers": [{"tags": [], "owner": {"reputation": 530, "user_id": 8807809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6150c2b1e72864800de8df5a7afff2f3?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin W Matthews", "link": "https://stackoverflow.com/users/8807809/kevin-w-matthews"}, "is_accepted": false, "score": 0, "last_activity_date": 1563660805, "last_edit_date": 1563660805, "creation_date": 1563658385, "answer_id": 57128758, "question_id": 56957770, "link": "https://stackoverflow.com/questions/56957770/how-are-tuples-inside-of-arcs-destructured-with-references/57128758#57128758", "title": "How are tuples inside of Arcs destructured with references?", "body": "<p>The short answer is yes, <code>Deref</code> returns a reference but this reference is still dereferenced by <code>*</code>.</p>\n\n<p>Before deciphering <code>&amp;*pair</code>, first look at <code>*pair</code> in detail.</p>\n\n<p><code>Arc</code> implements the <code>Deref</code> trait, so the Rust compiler essentially transforms:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*pair\n</code></pre>\n\n<p>into</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*(pair.deref())\n</code></pre>\n\n<p><code>Arc::deref()</code> does return a reference but this will be dereferenced by <code>*</code>, resulting in a tuple.</p>\n\n<p>The <code>Condvar</code> example adds a leading <code>&amp;</code> because it only needs to borrow the tuple that <code>*pair</code> yields.</p>\n\n<p>Also see:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31624743/8807809\">Stack Overflow post</a> on <code>Deref::deref</code></li>\n<li>The <a href=\"https://doc.rust-lang.org/book/ch15-02-deref.html#treating-a-type-like-a-reference-by-implementing-the-deref-trait\" rel=\"nofollow noreferrer\">Rust book</a>.</li>\n</ul>\n"}], "owner": {"reputation": 530, "user_id": 8807809, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6150c2b1e72864800de8df5a7afff2f3?s=128&d=identicon&r=PG&f=1", "display_name": "Kevin W Matthews", "link": "https://stackoverflow.com/users/8807809/kevin-w-matthews"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 187, "favorite_count": 0, "closed_date": 1563733395, "answer_count": 1, "score": 1, "last_activity_date": 1563660805, "creation_date": 1562693091, "last_edit_date": 1563658331, "question_id": 56957770, "link": "https://stackoverflow.com/questions/56957770/how-are-tuples-inside-of-arcs-destructured-with-references", "closed_reason": "Duplicate", "title": "How are tuples inside of Arcs destructured with references?", "body": "<p>I'm looking at the <a href=\"https://doc.rust-lang.org/std/sync/struct.Condvar.html#examples\" rel=\"nofollow noreferrer\"><code>Condvar</code> example</a> and am curious how the tuples <code>pair</code> and <code>pair2</code> are destructured:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let pair = Arc::new((Mutex::new(false), Condvar::new()));\nlet pair2 = pair.clone();\n// ...\n\nthread::spawn(move|| {\n    let &amp;(ref lock, ref cvar) = &amp;*pair2;\n    // ...\n}\n</code></pre>\n\n<p>Doesn't <code>Arc</code>'s <a href=\"https://doc.rust-lang.org/src/alloc/sync.rs.html#772-779\" rel=\"nofollow noreferrer\"><code>Deref</code> implementation</a> return a reference to the inner data? But removing the <code>&amp;</code> from <code>pair2</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let &amp;(ref lock, ref cvar) = *pair2;\n</code></pre>\n\n<p>gives a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>11 |     let &amp;(ref lock, ref cvar) = *pair2;\n   |         ^^^^^^^^^^^^^^^^^^^^^ expected tuple, found reference\n   |\n   = note: expected type `(std::sync::Mutex&lt;bool&gt;, std::sync::Condvar)`\n              found type `&amp;_`\n</code></pre>\n\n<p>This seems to imply that <code>*pair2</code> returns a tuple and not a reference.</p>\n"}, {"tags": ["parsing", "rust", "nom"], "comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1562689453, "post_id": 56956657, "comment_id": 100452160, "body": "Why <code>many1(uppercase_char)</code> and not just <code>uppercase_char</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 1452, "user_id": 203955, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed9901b9b80743c05aedf58b4f4926dd?s=128&d=identicon&r=PG", "display_name": "G&#233;al", "link": "https://stackoverflow.com/users/203955/g%c3%a9al"}, "is_accepted": true, "score": 3, "last_activity_date": 1562690359, "creation_date": 1562690359, "answer_id": 56957120, "question_id": 56956657, "link": "https://stackoverflow.com/questions/56956657/how-do-i-parse-uppercase-strings-in-nom/56957120#56957120", "title": "How do I parse uppercase strings in Nom?", "body": "<p><code>take_while</code> will recognize 0 or more characters, so when used inside of <code>many1</code> as you did, it will first parse the entire <code>\"ADAM\"</code> string. Then when <code>many1</code> calls it again, since <code>take_while</code> can recognize an empty string, it will succeed, but <code>many0</code> and <code>many1</code> have a protection against that mistake: if the underlying parser did not consume any input, they will return an error.</p>\n\n<p>For what you need, the <code>uppercase_char</code> function should be enough, no need for <code>recognize</code> and <code>many1</code>. Although you might want to replace <code>take_while</code> with <code>take_while1</code></p>\n"}], "owner": {"reputation": 402, "user_id": 531650, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f48c610bba004ec446b2ccebf3c1b20b?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/531650/adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 0, "accepted_answer_id": 56957120, "answer_count": 1, "score": 3, "last_activity_date": 1562690359, "creation_date": 1562688512, "last_edit_date": 1562688823, "question_id": 56956657, "link": "https://stackoverflow.com/questions/56956657/how-do-i-parse-uppercase-strings-in-nom", "title": "How do I parse uppercase strings in Nom?", "body": "<p>I'm writing parsers in Nom 5 using functions, not macros. My goal is to write a parser that recognizes a string composed entirely of uppercase characters. Ideally, it would have the same return signature as <a href=\"https://docs.rs/nom/5.0.0/nom/character/complete/fn.alpha1.html\" rel=\"nofollow noreferrer\">alpha1</a>.</p>\n\n<pre><code>use nom::{\n    character::complete::{alpha1, char, line_ending, not_line_ending},\n    combinator::{cut, map, not, recognize},\n    error::{context, ParseError, VerboseError},\n    multi::{many0, many1},\n    IResult,\n};\n\nfn uppercase_char&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, E&gt; {\n    let chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    take_while(move |c| chars.contains(c))(i)\n}\n\n// Matches 1 or more consecutive uppercase characters\nfn upper1&lt;'a, E: ParseError&lt;&amp;'a str&gt;&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, E&gt; {\n    recognize(many1(uppercase_char))(i)\n}\n</code></pre>\n\n<p>Although this compiles, the simple unit test I wrote fails:</p>\n\n<pre><code>#[test]\nfn test_upper_string_ok() {\n    let input_text = \"ADAM\";\n    let output = upper1::&lt;VerboseError&lt;&amp;str&gt;&gt;(input_text);\n    dbg!(&amp;output);\n    let expected = Ok((\"ADAM\", \"\"));\n    assert_eq!(output, expected);\n}\n</code></pre>\n\n<p>The failure output is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>---- parse::tests::test_upper_string_ok stdout ----\n[src/parse.rs:110] &amp;output = Err(\n    Error(\n        VerboseError {\n            errors: [\n                (\n                    \"\",\n                    Nom(\n                        Many1,\n                    ),\n                ),\n            ],\n        },\n    ),\n)\nthread 'parse::tests::test_upper_string_ok' panicked at 'assertion failed: `(left == right)`\n  left: `Err(Error(VerboseError { errors: [(\"\", Nom(Many1))] }))`,\n right: `Ok((\"ADAM\", \"\"))`', src/parse.rs:112:9\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1562692803, "post_id": 56955086, "comment_id": 100453563, "body": "It is not what I want, because it does not solve problem of changing the parser of the body handed in <code>.data</code> method"}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1562698488, "post_id": 56955086, "comment_id": 100455977, "body": "You want to deserialize the body, with two different deserializers, depending on content-type?"}, {"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1562754670, "post_id": 56955086, "comment_id": 100474169, "body": "Exactly. two different deserializers depending on content-type"}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1562775504, "post_id": 56955086, "comment_id": 100485903, "body": "I believe you should use two handlers then, each having it\u2019s own guard. One handler using the <a href=\"https://actix.rs/docs/extractors/#json\" rel=\"nofollow noreferrer\">json extractor</a>, the other using the <a href=\"https://actix.rs/docs/extractors/#form\" rel=\"nofollow noreferrer\">form extractor</a>. The handlers can be nested inside a <code>web::resource</code>."}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1562879240, "post_id": 56955086, "comment_id": 100528551, "body": "I&#39;ve updated the answer to reflect my last comment."}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": true, "score": 0, "last_activity_date": 1562879044, "last_edit_date": 1562879044, "creation_date": 1562683304, "answer_id": 56955086, "question_id": 56951776, "link": "https://stackoverflow.com/questions/56951776/how-to-use-actix-webguardheader/56955086#56955086", "title": "How to use actix_web::guard::Header?", "body": "<p>Currently, actix-web 1.0.3 <a href=\"https://actix.rs/docs/extractors/#form\" rel=\"nofollow noreferrer\">does not support multipart/form-data</a>, but you can use <a href=\"https://docs.rs/actix-multipart/0.1.2/actix_multipart/struct.Multipart.html\" rel=\"nofollow noreferrer\">actix_multipart</a>. Since the focus is deserializing same data with different content-types, I've simplified to using <code>application/x-www-form-urlencoded</code>.</p>\n\n<p>To support two different content-types, nest <code>web::resource</code> and add guards to each of the handlers:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>web::resource(\"/\")\n    .route(\n        web::post()\n            .guard(guard::Header(\n                \"content-type\",\n                \"application/x-www-form-urlencoded\",\n            ))\n            .to(form_handler),\n    )\n    .route(\n        web::post()\n            .guard(guard::Header(\"content-type\", \"application/json\"))\n            .to(json_handler),\n    ),\n</code></pre>\n\n<p>Create handlers that takes deserialized data, and send the data to a common handler:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn form_handler(user: web::Form&lt;User&gt;) -&gt; String {\n    handler(user.into_inner())\n}\n\nfn json_handler(user: web::Json&lt;User&gt;) -&gt; String {\n    handler(user.into_inner())\n}\n\nfn handler(user: User) -&gt; String {\n    format!(\"Got username: {}\", user.username)\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -d 'username=adsf' localhost:8000\nGot username: asdf\u23ce\n$ curl -d '{\"username\": \"asdf\"}' localhost:8000\nParse error\u23ce\n$ curl -d '{\"username\": \"asdf\"}' -H 'content-type: application/json' localhost:8000\nGot username: asdf\u23ce\n</code></pre>\n\n<p>To create your own deserializer, implement the <a href=\"https://docs.rs/actix-web/1.0.3/actix_web/trait.FromRequest.html\" rel=\"nofollow noreferrer\"><code>FromRequest</code></a> trait.</p>\n"}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 56955086, "answer_count": 1, "score": 0, "last_activity_date": 1562879044, "creation_date": 1562672466, "last_edit_date": 1562689411, "question_id": 56951776, "link": "https://stackoverflow.com/questions/56951776/how-to-use-actix-webguardheader", "title": "How to use actix_web::guard::Header?", "body": "<p>In order to support <code>application/json</code> and <code>multipart/form-data</code> on the same URL, I would like to check the \"Content-Type\" header and choose a proper <code>Data&lt;T&gt;</code> type to hand in to the <code>.data</code> function of <code>App::new</code>. </p>\n\n<p>If I uncomment the <code>.guard</code> line, then <code>curl -X POST -H \"Content-Type: multipart/form-data\" -F files=\\\"qqq\\\" localhost:8080/upload</code> is dropped. But without the <code>.guard</code> line all works as it was supposed. What is wrong?</p>\n\n<pre><code>HttpServer::new(move || {\n    App::new()\n        .service(resource(\"/upload\")\n     // .guard(actix_web::guard::Header(\"Content-Type\", \"multipart/form-data\"))\n        .data(form.clone())\n        .route(post()\n        .to(upload_multipart)\n        )   \n    )\n})\n</code></pre>\n\n<p>How to join them properly in one instance of App?</p>\n"}, {"tags": ["rust", "tera"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562655493, "post_id": 56946523, "comment_id": 100433164, "body": "<code>defined</code> currently implemented as <a href=\"https://github.com/Keats/tera/blob/549510506fb972654a625df5bb54d02f07127b9a/src/builtins/testers.rs#L40\" rel=\"nofollow noreferrer\"><code>value.is_some()</code></a> and as you said your <code>value</code> is <code>Some(Null)</code> which is Some, so it is defined and therefore corretly returns &quot;true&quot;"}, {"owner": {"reputation": 508, "user_id": 552391, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1b9cfd9892a765221fe557768987b42d?s=128&d=identicon&r=PG", "display_name": "Matias", "link": "https://stackoverflow.com/users/552391/matias"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562655979, "post_id": 56946523, "comment_id": 100433419, "body": "yes, but I&#39;m expect it to be None, I pass a struct with a None in the &#39;parameter&#39; field. I forgot to add the trait Serialize by serde, is required. I&#39;m going to update the question. It may be related with the serialization/deserialization, going to dive into that."}], "answers": [{"tags": [], "owner": {"reputation": 508, "user_id": 552391, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1b9cfd9892a765221fe557768987b42d?s=128&d=identicon&r=PG", "display_name": "Matias", "link": "https://stackoverflow.com/users/552391/matias"}, "is_accepted": true, "score": 0, "last_activity_date": 1562681430, "creation_date": 1562681430, "answer_id": 56954514, "question_id": 56946523, "link": "https://stackoverflow.com/questions/56946523/built-in-tester-define-not-working-as-i-expected/56954514#56954514", "title": "Built-in tester &#39;define&#39; not working as I expected", "body": "<p>Well, my problem was that the testers 'is defined' or 'is undefined' checks if the variable is defined/undef, not the value of the variable. </p>\n"}], "owner": {"reputation": 508, "user_id": 552391, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1b9cfd9892a765221fe557768987b42d?s=128&d=identicon&r=PG", "display_name": "Matias", "link": "https://stackoverflow.com/users/552391/matias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 56954514, "answer_count": 1, "score": 0, "last_activity_date": 1562681430, "creation_date": 1562653996, "last_edit_date": 1562656109, "question_id": 56946523, "link": "https://stackoverflow.com/questions/56946523/built-in-tester-define-not-working-as-i-expected", "title": "Built-in tester &#39;define&#39; not working as I expected", "body": "<p>I have a template with a section that should be rendered if a variable is defined. But I can't make it work. I have something like this in my project:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::Serialize;\n\n#[derive(Default,Serialize)]\nstruct AStruct {\n  parameter: Option&lt;String&gt;\n}\n\n// AStruct { parameter: None }\nlet a_struct_instance = AStruct {..Default::default()};\nTEMPLATES.render(\"template.conf\", &amp;a_struct_instance) {...}\n</code></pre>\n\n<pre><code>// template.conf example:\n//\n// {% if parameter is defined %}\n//   SOMETHING TO SHOW\n// {% endif %}\n</code></pre>\n\n<p>The template is rendered like if parameter is defined, why is that? </p>\n\n<p>The parameter field is None, but in the build-in tester function, 'value' is Some(Null) and is_some() return true on this. </p>\n\n<p><a href=\"https://github.com/Keats/tera/blob/master/src/builtins/testers.rs#L36\" rel=\"nofollow noreferrer\">https://github.com/Keats/tera/blob/master/src/builtins/testers.rs#L36</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Returns true if `value` is defined. Otherwise, returns false.\npub fn defined(value: Option&lt;Value&gt;, params: Vec&lt;Value&gt;) -&gt; Result&lt;bool&gt; {\n    number_args_allowed(\"defined\", 0, params.len())?;\n    Ok(value.is_some())\n}\n</code></pre>\n\n<p>What I'm doing wrong?</p>\n"}, {"tags": ["rust", "cyclic-reference"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562650225, "post_id": 56945779, "comment_id": 100431133, "body": "Although it&#39;s not wrong, typically structs and impls for them are stored outside of functions (especially <code>main</code>) for readability and less confusion."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562650371, "post_id": 56945779, "comment_id": 100431182, "body": "Have you concidered using <a href=\"https://doc.rust-lang.org/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\"><code>MPSC</code></a> or one of the <a href=\"https://docs.rs/crossbeam/0.7.1/crossbeam/queue/index.html\" rel=\"nofollow noreferrer\">queues</a> provided by the <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\">crossbeam crate</a>?"}, {"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562652947, "post_id": 56945779, "comment_id": 100431992, "body": "I have thought about using channels. When the two structs are the same, when a UDP message is received, that thread just continues to execute the &quot;Node&quot; code. When they are separate I guess the UDP receive thread could send a message on the channel and let the thread executing <code>Node</code> do whatever it wants to do. But then there is the overhead of another thread and having to wake it up on <code>tx.recv</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1562653983, "post_id": 56945779, "comment_id": 100432405, "body": "<i>maybe</i>. Doen&#39;t assume it, but instead test it ;) Write some little testbenches and test different approaches. Then use the <a href=\"https://doc.rust-lang.org/1.16.0/book/benchmark-tests.html\" rel=\"nofollow noreferrer\">rust testbench</a> (or use the <a href=\"https://crates.io/crates/testbench\" rel=\"nofollow noreferrer\">testbench</a> crate)  and test it. Don&#39;t assume anything about speed :)"}, {"owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "edited": false, "score": 1, "creation_date": 1562660102, "post_id": 56945779, "comment_id": 100435505, "body": "Interesting no one mentioned your design is plain wrong. Go learn about <a href=\"https://refactoring.guru/design-patterns/mediator\" rel=\"nofollow noreferrer\">mediator</a> pattern. The fact you&#39;re using Rust doesn&#39;t free you from doing it right. Circular dependencies are stinky code smell... I&#39;m pretty sure after you use it with some traits it&#39;ll become more clear what to use for real communication."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562677787, "post_id": 56945779, "comment_id": 100445070, "body": "I voted &quot;too broad&quot; because there may be any number of solutions to problems like this one (you listed several of them), and a complete treatment of the topic could be a book in itself. In general though I would agree that you should try to eliminate the cyclic dependency before trying to make it work with <code>Mutex</code> or <code>RwLock</code>. In particular, in a single-threaded context, I don&#39;t know why <code>Communicator</code> needs to call a message on <code>Node</code> when <code>Node</code> could just poll the <code>Communicator</code>; in a multi-threaded context, I don&#39;t know why you wouldn&#39;t use channels."}, {"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "edited": false, "score": 1, "creation_date": 1562699373, "post_id": 56945779, "comment_id": 100456355, "body": "The Mediator pattern looks like what I need for this. But how do I implement it in Rust? The problem that arise for me with the Mediator pattern seems to be the same like I&#39;ve described here. I found <a href=\"https://chercher.tech/rust/mediator-design-pattern-rust\" rel=\"nofollow noreferrer\">this example</a>. In that example the mediator owns all components, but the struct of a component has no reference to the mediator. So whenever the mediator (or something from the outside) calls a function on a component, it has the pass the mediator. So through all component methods, <code>&amp;self</code> and the mediator have the be passed around."}, {"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "edited": false, "score": 0, "creation_date": 1562699412, "post_id": 56945779, "comment_id": 100456374, "body": "If this question is too broad, should I perhaps create a new question on how to implement the mediator pattern in Rust?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562703967, "post_id": 56945779, "comment_id": 100458103, "body": "I usually dislike questions like &quot;How do I implement X pattern [in Rust]&quot;, so I wouldn&#39;t suggest it. ;-) Patterns are recurring ideas, not recipes -- you shouldn&#39;t take exactly what whoever wrote on a website and copy and paste the code into your project (unless, of course, they happen to be solving the exact problem you have). Instead, I would try to find a way to write this code <i>without</i> making the components (<code>Node</code>s in your case?) store references to the mediator (<code>Communicator</code>?). You need to eliminate the cyclic dependency, not just apply the &quot;right pattern&quot; (so to speak)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562704179, "post_id": 56945779, "comment_id": 100458168, "body": "Stack Overflow isn&#39;t a great place for open-ended design questions, so if you want help with the overall design or knowing where to start, I suggest asking on <a href=\"https://users.rust-lang.org\" rel=\"nofollow noreferrer\">users.rust-lang.org</a>."}, {"owner": {"reputation": 11664, "user_id": 207791, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c9ffc6f77d7f8ee002acd0e9ebc872f2?s=128&d=identicon&r=PG", "display_name": "Victor Sergienko", "link": "https://stackoverflow.com/users/207791/victor-sergienko"}, "edited": false, "score": 1, "creation_date": 1603682813, "post_id": 56945779, "comment_id": 114104246, "body": "TBH, the open-ended discussion was caused by comments. The way the question is asked - it\u2019s not too broad at all, it can have a specific answer (with a comment \u201cthe best solution to your problem may be something else, like using a Mediator\u201d)."}], "owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 286, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1562649510, "creation_date": 1562649510, "question_id": 56945779, "link": "https://stackoverflow.com/questions/56945779/circular-reference-between-two-structs-with-high-performance", "title": "Circular reference between two structs with high performance", "body": "<p>I have two structs <code>Node</code> and <code>Communicator</code>. <code>Node</code> contains \"business-logic\" while <code>Communicator</code> contains methods for sending and receiving UDP messages. <code>Node</code> needs to call methods on <code>Communicator</code> when it wants to send messages and <code>Communicator</code> needs to call methods on <code>Node</code> when it receives a UDP message. If they are the same struct, there is no problem at all. But I want to separate them because they clearly have different responsibilities. Having it all in one struct would become unmanageable. My code looks as follows:</p>\n\n<pre><code>fn main() {\n    use std::sync::{Arc, Mutex, Condvar, Weak};\n    use std::thread;\n\n\n    pub struct Node {\n        communicator: Option&lt;Arc&lt;Communicator&gt;&gt;\n    }\n\n    impl Node {\n        pub fn new() -&gt; Node {\n            Node {\n                communicator: None\n            }\n        }\n\n        pub fn set_communicator(&amp;mut self, communicator: Arc&lt;Communicator&gt;) {\n            self.communicator = Some(communicator);\n        }\n    }\n\n    pub struct Communicator {\n        node: Option&lt;Weak&lt;Node&gt;&gt;\n    }\n\n    impl Communicator {\n        pub fn new() -&gt; Communicator {\n            Communicator {\n                node: None\n            }\n        }\n\n        pub fn set_node(&amp;mut self, node: Weak&lt;Node&gt;) {\n            self.node = Some(node);\n        }\n    }\n\n\n\n    let mut my_node = Arc::new(Node::new());\n    let mut my_communicator = Arc::new(Communicator::new());\n\n    Arc::get_mut(&amp;mut my_node).unwrap().set_communicator(Arc::clone(&amp;my_communicator));\n\n    //Arc::get_mut(&amp;mut my_communicator).unwrap().set_node(Arc::downgrade(&amp;my_node));\n}\n</code></pre>\n\n<p>My code crashes, as I predicted, if I uncomment both of the two last lines. But it is something like that I want to achieve.</p>\n\n<p>I see a couple of options:</p>\n\n<ul>\n<li>Use <code>Mutex</code> or <code>RwLock</code> to gain interior mutability. But that gives a performance penalty.</li>\n<li>Use <code>Cell</code> or <code>RefCell</code>. But they are not thread-safe.</li>\n<li>Use <code>AtomicCell</code> from <code>crossbeam</code>. Looks like the best option so far. But what about performance?</li>\n<li>Use <code>unsafe</code>. But where? And how to ensure the code remains memory safe in spite of <code>unsafe</code>?</li>\n</ul>\n\n<p>In theory I could split <code>Communicator</code> into a <code>Sender</code> and a <code>Receiver</code>, so that there would be no cyclical references. But for my program, I know I will have a similar situation in the future where this will not be possible.</p>\n\n<p>It seems that since I just split a struct into two, for code-structuring reasons, and gaining no new functionality, there should be a way to do this without having to pay any performance penalty like <code>Mutex</code> would give.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 139391, "user_id": 135978, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8931e023c82f232d4d02a115710fb8fc?s=128&d=identicon&r=PG", "display_name": "Sean Vieira", "link": "https://stackoverflow.com/users/135978/sean-vieira"}, "edited": false, "score": 3, "creation_date": 1562621495, "post_id": 56942775, "comment_id": 100425615, "body": "It&#39;s a UNIX convention: <a href=\"https://unix.stackexchange.com/a/187548/5217\">unix.stackexchange.com/a/187548/5217</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1562622355, "post_id": 56942775, "comment_id": 100425865, "body": "<code>cargo test</code> compiles the tests and runs the test binaries. The arguments to Cargo control how to compile and run the binaries, while the arguments after <code>--</code> are simply passed through to the binaries."}], "owner": {"reputation": 1118, "user_id": 6373949, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh4.googleusercontent.com/-EYY_IdaEeaU/AAAAAAAAAAI/AAAAAAAAAfs/feCbMbQ8tZ4/photo.jpg?sz=128", "display_name": "Aipi", "link": "https://stackoverflow.com/users/6373949/aipi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 195, "favorite_count": 0, "closed_date": 1562639270, "answer_count": 0, "score": 2, "last_activity_date": 1562650071, "creation_date": 1562621366, "last_edit_date": 1562650071, "question_id": 56942775, "link": "https://stackoverflow.com/questions/56942775/what-do-two-dashes-mean-in-cargo", "closed_reason": "Duplicate", "title": "What do -\u200b- (two dashes) mean in Cargo?", "body": "<p>If you enter the command line <code>cargo test --help</code>, the following message is shown:</p>\n\n<blockquote>\n  <p>The test filtering argument TESTNAME and all the arguments following the\n  two dashes (<code>--</code>) are passed to the test binaries and thus to libtest\n  (rustc's built in unit-test and micro-benchmarking framework). If you're\n  passing arguments to both Cargo and the binary, the ones after <code>--</code> go to the\n  binary, the ones before go to Cargo. For details about libtest's arguments see\n  the output of <code>cargo test -- --help</code>.</p>\n</blockquote>\n\n<p>I do not understand the principle idea of that. Is <code>libtest</code> not included in <code>cargo test</code> execution? What's the difference between both? Can someone explain how it works with examples and the main idea of passing arguments using two dashes?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 1, "creation_date": 1562618501, "post_id": 56942218, "comment_id": 100424579, "body": "You&#39;ve missed a <code>return</code>; the <code>Err(PostalError::LibpostalEnableExpansion);</code> is a (useless) statement, not a function&#39;s return value, so I guess Rust is saying it has no way of inferring <code>T</code> in <code>Result&lt;T, PostalError&gt;</code> you&#39;re trying to construct."}, {"owner": {"reputation": 2265, "user_id": 1040711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2a78cedf026926db766997d477037b2a?s=128&d=identicon&r=PG", "display_name": "patrickn", "link": "https://stackoverflow.com/users/1040711/patrickn"}, "reply_to_user": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562618810, "post_id": 56942218, "comment_id": 100424715, "body": "Interesting, I haven&#39;t actually had to use <code>return</code> yet. Any idea why it seems happy to accept <code>Err(PostalError::LibpostalNotReady)</code> in the second example?"}, {"owner": {"reputation": 2265, "user_id": 1040711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2a78cedf026926db766997d477037b2a?s=128&d=identicon&r=PG", "display_name": "patrickn", "link": "https://stackoverflow.com/users/1040711/patrickn"}, "reply_to_user": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562618944, "post_id": 56942218, "comment_id": 100424767, "body": "I&#39;m guessing it has something to do with it being the last case in the match arm, as well as the else branch being the end of the function. So the compiler is able to infer my intent there."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562618977, "post_id": 56942218, "comment_id": 100424782, "body": "Your guess is correct; check out <a href=\"https://doc.rust-lang.org/book/ch03-03-how-functions-work.html#function-bodies-contain-statements-and-expressions\" rel=\"nofollow noreferrer\">the book</a> and <a href=\"https://stackoverflow.com/a/26665514/1026\">stackoverflow.com/a/26665514/1026</a>"}, {"owner": {"reputation": 2265, "user_id": 1040711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2a78cedf026926db766997d477037b2a?s=128&d=identicon&r=PG", "display_name": "patrickn", "link": "https://stackoverflow.com/users/1040711/patrickn"}, "reply_to_user": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562619390, "post_id": 56942218, "comment_id": 100424928, "body": "Thanks for the links, feel free to repost your comment as an answer to get accepted."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562619656, "post_id": 56942218, "comment_id": 100425018, "body": "To be clear, <code>Result</code> does not get any special treatment by the compiler wrt control flow (ignoring the <code>?</code> syntax). So your first example is similar to <code>fn foo() -&gt; u8 { if true { 0; }; 1 }</code> returning <code>1</code> as it&#39;s the last expression of the function, and your second example is like <code>fn foo() -&gt; u8 { if true { 0 } }</code>, which returns <code>0</code> as the last expression of the function is the <code>if</code> expression, and its value is the value of the last expession in its <code>{ 0 }</code> block, which is <code>0</code>."}, {"owner": {"reputation": 2265, "user_id": 1040711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2a78cedf026926db766997d477037b2a?s=128&d=identicon&r=PG", "display_name": "patrickn", "link": "https://stackoverflow.com/users/1040711/patrickn"}, "reply_to_user": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1562619789, "post_id": 56942218, "comment_id": 100425064, "body": "Yeah, I just hadn&#39;t read the manual in a long time. Makes perfect sense now."}], "answers": [{"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 4, "last_activity_date": 1605759608, "last_edit_date": 1605759608, "creation_date": 1562619994, "answer_id": 56942560, "question_id": 56942218, "link": "https://stackoverflow.com/questions/56942218/cannot-infer-type-for-t-when-using-error-enum-variants/56942560#56942560", "title": "&quot;cannot infer type for `T`&quot; when using error enum variants", "body": "<pre><code> 110 |             Err(PostalError::LibpostalSetup);\n     |                 ^^^ cannot infer type for `T`\n</code></pre>\n<p>You missed a <code>return</code>.</p>\n<p><code>Err(PostalError::LibpostalSetup);</code> is a useless statement, not a function's return value, so I guess Rust is saying it has no way of inferring <code>T</code> in <code>Result&lt;T, PostalError&gt;</code> you're trying to construct.</p>\n<p>&quot;<a href=\"https://doc.rust-lang.org/book/ch03-03-how-functions-work.html#function-bodies-contain-statements-and-expressions\" rel=\"nofollow noreferrer\">Function Bodies Contain Statements and Expressions</a>&quot; explains how the return value of a function is determined and &quot;https://stackoverflow.com/questions/26665471/are-semicolons-optional-in-rust/26665514#26665514&quot; explains the significance of semicolons, or lack thereof, in Rust.</p>\n"}], "owner": {"reputation": 2265, "user_id": 1040711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2a78cedf026926db766997d477037b2a?s=128&d=identicon&r=PG", "display_name": "patrickn", "link": "https://stackoverflow.com/users/1040711/patrickn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2755, "favorite_count": 1, "accepted_answer_id": 56942560, "answer_count": 1, "score": 0, "last_activity_date": 1605759608, "creation_date": 1562618029, "last_edit_date": 1562639466, "question_id": 56942218, "link": "https://stackoverflow.com/questions/56942218/cannot-infer-type-for-t-when-using-error-enum-variants", "title": "&quot;cannot infer type for `T`&quot; when using error enum variants", "body": "<p>I've got the following snippet:</p>\n\n<pre><code> pub fn init(&amp;mut self, opts: InitOptions) -&gt; Result&lt;(), PostalError&gt; {\n    let _ = self.mutex.lock();\n    unsafe {\n        if !libpostal_setup() {\n            Err(PostalError::LibpostalSetup);\n        }\n    }\n    self.setup_done = true;\n    if opts.expand_address {\n        unsafe {\n            if !libpostal_setup_language_classifier() {\n                Err(PostalError::LibpostalEnableExpansion);\n            }\n        }\n        self.expand_address_enabled = true;\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>which yields this error when compiling:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n--&gt; src/lib.rs:110:17\n |\n 110 |             Err(PostalError::LibpostalSetup);\n |                 ^^^ cannot infer type for `T`\n</code></pre>\n\n<p>I've tried a number of things:</p>\n\n<ol>\n<li><p>Adding type annotations to <code>Err</code>, as suggested; e.g. <code>Err::&lt;(), PostalError&gt;(PostalError::LibpostalSetup);</code>, which compiles but produces warnings and incorrect runtime behavior (i.e. a single <code>unwrap()</code> no longer works on the returned <code>Result</code>).</p></li>\n<li><p>Changing from the unit type <code>()</code> to <code>u8</code> (for testing).</p></li>\n<li><p>Fiddling with enum variant signature changes in general in a variety of ways, to no avail.</p></li>\n</ol>\n\n<p>What is curious is that I have another function on the same type, with a similar use of <code>Result</code> for which the compiler has no trouble with:</p>\n\n<pre><code>pub fn expand_address(\n    &amp;self,\n    a: &amp;str,\n    opts: ExpandAddressOptions,\n) -&gt; Result&lt;Expansions, PostalError&gt; {\n    if self.setup_done &amp;&amp; self.expand_address_enabled {\n        let _ = self.mutex.lock();\n        unsafe {\n            match CString::new(a) {\n                Ok(c_string) =&gt; {\n                    let addr = c_string.as_ptr() as *mut c_char;\n\n                    let mut num_expansions: usize = 0;\n                    let raw = libpostal_expand_address(addr, opts.opts, &amp;mut num_expansions);\n                    Ok(Expansions::new(raw, num_expansions))\n                }\n                Err(e) =&gt; Err(PostalError::BadCString(e)),\n            }\n        }\n    } else {\n        Err(PostalError::LibpostalNotReady)\n    }\n}\n</code></pre>\n\n<p>What exactly is the compiler is having issues with in the former example?</p>\n\n<p>I could (and might) change to <code>Option&lt;PostalError&gt;</code>, but that makes the <code>match</code>/<code>unwrap</code>/<code>?</code> awkward to use. I'd rather not, if possible.</p>\n"}, {"tags": ["php", "session", "rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562611779, "post_id": 56939812, "comment_id": 100421947, "body": "Why is SESSION capitalized?"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562634159, "post_id": 56939812, "comment_id": 100428123, "body": "@trentcl It&#39;s the keyword of this post :)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1562673214, "post_id": 56939812, "comment_id": 100442370, "body": "That&#39;s not how we do things here. Capitalizing random words won&#39;t make your question more visible or show up for people who are interested in that kind of thing; that&#39;s what tags are for. I&#39;ve taken the liberty of editing your question to be less hard to read, and added <a href=\"https://stackoverflow.com/questions/tagged/session\">session</a> to the tags. I hope this helps you find an answer!"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562724620, "post_id": 56939812, "comment_id": 100462684, "body": "@trentcl Thank you for this sir :) Really appreciated."}], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1562971870, "post_id": 57012687, "comment_id": 100561415, "body": "Hi, thank you for your answer but the goal is not to set/get cookies but the sessions used in the backend to store user_id and some other sensible informations. And notice that my main problem is that the format of session used in actix not same as the one used in PHP. :)"}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1562972947, "post_id": 57012687, "comment_id": 100561570, "body": "Is the session not stored in a cookie?"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1562973612, "post_id": 57012687, "comment_id": 100561664, "body": "They are stored in a REDIS server (But per default, they are stored in files when using PHP)... In the cookie there only identifier of the session stored in the server side so I can identify the users and fetch some stored secret infos."}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563006514, "post_id": 57012687, "comment_id": 100565989, "body": "That sounds exactly like what this example is doing; <code>&#47;get</code> unwraps the session identifier from the cookie. You can then use the identifier to fetch secrets from redis."}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563403752, "post_id": 57012687, "comment_id": 100692888, "body": "I already know about actix-session, but my problem is how to create for example SESSION file from RUST, and read it from PHP and vice versa :)"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563406367, "post_id": 57012687, "comment_id": 100693474, "body": "And the session name still: actix-session, I changed it in your code but still not modified in the result: <code>const COOKIE_NAME: &amp;&#39;static str = &quot;actix&quot;;</code> Thanks again"}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": false, "score": 0, "last_activity_date": 1562958024, "creation_date": 1562958024, "answer_id": 57012687, "question_id": 56939812, "link": "https://stackoverflow.com/questions/56939812/how-can-i-share-sessions-between-actix-session-and-a-php-application-when-using/57012687#57012687", "title": "How can I share sessions between actix-session and a PHP application when using Redis as session storage?", "body": "<p>actix-session <a href=\"https://github.com/actix/actix-web/blob/f410f3330fb771e8d51b7448ea2b0d3981d95891/actix-session/src/lib.rs#L124\" rel=\"nofollow noreferrer\">serializes session data to JSON</a>, <a href=\"https://github.com/actix/actix-web/blob/f410f3330fb771e8d51b7448ea2b0d3981d95891/actix-session/src/cookie.rs#L110\" rel=\"nofollow noreferrer\">signs the cookie</a> and <a href=\"https://github.com/actix/actix-web/blob/master/actix-session/src/cookie.rs#L68\" rel=\"nofollow noreferrer\">sets the name of the cookie to actix-session</a>.</p>\n\n<p>To verify, run the <a href=\"https://github.com/actix/examples/tree/master/cookie-session\" rel=\"nofollow noreferrer\">minimal cookie-session-example</a> and do a request with curl:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -v localhost:8080\n&gt; GET / HTTP/1.1\n&gt; Host: localhost:8080\n&gt; User-Agent: curl/7.54.0\n&gt; Accept: */*\n&gt;\n&lt; HTTP/1.1 200 OK\n&lt; content-length: 8\n&lt; content-type: text/plain; charset=utf-8\n&lt; set-cookie: actix-session=ZTe%2Fb%2F085+VQcxL%2FQRKCnldUxzoc%2FNEOQe94PTBGUfc%3D%7B%22counter%22%3A%221%22%7D; HttpOnly; Path=/\n&lt; date: Thu, 11 Jul 2019 21:22:38 GMT\n</code></pre>\n\n<p>Decoding with <a href=\"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\" rel=\"nofollow noreferrer\"><code>decodeURIComponent</code></a> gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; decodeURIComponent(\"ZTe%2Fb%2F085+VQcxL%2FQRKCnldUxzoc%2FNEOQe94PTBGUfc%3D%7B%22counter%22%3A%221%22%7D\")\n'ZTe/b/085+VQcxL/QRKCnldUxzoc/NEOQe94PTBGUfc={\"counter\":\"1\"}'\n</code></pre>\n\n<p>As far as I know, <code>ZTe/b/085+VQcxL/QRKCnldUxzoc/NEOQe94PTBGUfc=</code> is the signature.</p>\n\n<p>This is probably not what your PHP script is doing, so you might want to use <a href=\"https://docs.rs/actix-web/1.0.3/actix_web/struct.HttpRequest.html#method.headers\" rel=\"nofollow noreferrer\"><code>HttpRequest::headers</code></a> directly. For example, by creating your own <code>Session</code> type, then using that type in your handlers:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::{web, App, Error, HttpServer, HttpRequest, HttpResponse, FromRequest};\nuse actix_web::dev::Payload;\nuse actix_web::http::header::{COOKIE, SET_COOKIE};\nuse actix_web::error::ErrorUnauthorized;\n\nfn main() {\n    HttpServer::new(|| {\n        App::new()\n            .route(\"/set\", web::to(set_cookie))\n            .route(\"/get\", web::to(get_cookie))\n    })\n    .bind(\"127.0.0.1:8000\")\n    .expect(\"Cannot bind to port 8000\")\n    .run()\n    .expect(\"Unable to run server\");\n}\n\nfn set_cookie() -&gt; HttpResponse {\n    HttpResponse::Ok()\n        .header(SET_COOKIE, Session::cookie(\"0123456789abcdef\"))\n        .body(\"cookie set\")\n}\n\nfn get_cookie(session: Session) -&gt; HttpResponse {\n    HttpResponse::Ok()\n        .header(SET_COOKIE, Session::cookie(\"new_session_value\"))\n        .body(format!(\"Got cookie {}\", &amp;session.0))\n}\n\nstruct Session(String);\n\nimpl Session {\n    const COOKIE_NAME: &amp;'static str = \"my-session\";\n\n    fn cookie(value: &amp;str) -&gt; String {\n        String::from(Self::COOKIE_NAME) + \"=\" + value\n    }\n}\n\nimpl FromRequest for Session {\n    type Error = Error;\n    type Future = Result&lt;Self, Error&gt;;\n    type Config = ();\n\n    fn from_request(req: &amp;HttpRequest, _payload: &amp;mut Payload) -&gt; Self::Future {\n        for header in req.headers().get_all(COOKIE) {\n            // check if header is UTF-8\n            if let Ok(value) = header.to_str() {\n                // split into cookie values\n                for c in value.split(';').map(|s| s.trim()) {\n                    // split at '='\n                    if let Some(pos) = c.find('=') {\n                        // is session key?\n                        if Self::COOKIE_NAME == &amp;c[0..pos] {\n                            return Ok(Session(String::from(&amp;c[(pos + 1)..])));\n                        }\n                    }\n                }\n            }\n        }\n        Err(ErrorUnauthorized(\"Session cookie missing\"))\n    }\n}\n</code></pre>\n\n<p>Result (irrelevant headers removed for brevity):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -v localhost:8000/get\n&lt; HTTP/1.1 401 Unauthorized\nSession cookie missing\u23ce\n\n$ curl -v localhost:8000/set\n&lt; HTTP/1.1 200 OK\n&lt; set-cookie: my-session=0123456789abcdef\ncookie set\u23ce\n\n$ curl -v --cookie my-session=0123456789abcdef localhost:8000/get\n&gt; Cookie: my-session=0123456789abcdef\n&gt;\n&lt; HTTP/1.1 200 OK\n&lt; set-cookie: my-session=new_session_value\nGot cookie 0123456789abcdef\u23ce\n</code></pre>\n\n<p>You may also observe the results in a browser, urls <a href=\"http://localhost:8000/set\" rel=\"nofollow noreferrer\">http://localhost:8000/set</a> and <a href=\"http://localhost:8000/get\" rel=\"nofollow noreferrer\">http://localhost:8000/get</a>.</p>\n\n<p>This is quite simplistic, but gives you full control over the session cookies.</p>\n\n<p><strong>NOTE:</strong> The solution above does nothing to secure the cookies.</p>\n"}], "owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 668, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562958024, "creation_date": 1562606456, "last_edit_date": 1562700414, "question_id": 56939812, "link": "https://stackoverflow.com/questions/56939812/how-can-i-share-sessions-between-actix-session-and-a-php-application-when-using", "title": "How can I share sessions between actix-session and a PHP application when using Redis as session storage?", "body": "<p>I want to switch my PHP website using Redis as session storage to actix-web. The only problem I've encountered is sharing sessions between my subdomains. I have many services and only some of them will get switched to Rust.</p>\n\n<p>A <a href=\"https://docs.rs/actix-session/0.1.1/actix_session/\" rel=\"nofollow noreferrer\">crate already exists for sessions</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_session::{CookieSession, Session};\nuse actix_web::{web, App, Error, HttpResponse, HttpServer};\n\nfn index(session: Session) -&gt; Result&lt;&amp;'static str, Error&gt; {\n    // access session data\n    if let Some(count) = session.get::&lt;i32&gt;(\"counter\")? {\n        println!(\"SESSION value: {}\", count);\n        session.set(\"counter\", count + 1)?;\n    } else {\n        session.set(\"counter\", 1)?;\n    }\n\n    Ok(\"Welcome!\")\n}\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(\n                CookieSession::signed(&amp;[0; 32]) // &lt;- create cookie based session middleware\n                    .secure(false),\n            )\n            .service(web::resource(\"/\").to(|| HttpResponse::Ok()))\n    })\n    .bind(\"127.0.0.1:59880\")?\n    .run()\n}\n</code></pre>\n\n<p>My goal is to be able to read a Rust session from my PHP scripts.</p>\n\n<p>Here's what I've tried:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>session_name('RustAndPHP'); // I don't have any idea to name the sessions in Rust\n\nsession_set_cookie_params(0,\"/\",\".mydomainname.com\",FALSE,FALSE);\nsetcookie(session_name(), session_id(),0,\"/\",\"mydomainname.com\");\nsession_start();\n</code></pre>\n\n<p>And finally, I changed the default cookie:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>setcookie( \"mysession\", \"\",1,\"/\" );\nsetcookie( \"PHPSESSID\", \"\",1,\"/\" );\n</code></pre>\n\n<p>I have no idea of the session format used in Rust and how to be able to share it with PHP.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1562614525, "post_id": 56939443, "comment_id": 100423086, "body": "Do you really need all the lifetime parameters of <code>SillyResult</code>? In practice you can often get away with combining all lifetimes in a struct into a single one (which will be the intersection of all involved lifetimes), and combining the lifetimes makes the struct a lot easier to handle."}, {"owner": {"reputation": 35, "user_id": 11755636, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f39fc4e46c6a2782b0209bd48bdad7?s=128&d=identicon&r=PG&f=1", "display_name": "HBex", "link": "https://stackoverflow.com/users/11755636/hbex"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562751745, "post_id": 56939443, "comment_id": 100472582, "body": "Sven Marnach: You are right: Most of the time it is much easier to go with less parameters. However I just want to understand what I have to do, if I come to this situation and get a better understanding of lifetime handling in RUST"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1562614825, "post_id": 56939597, "comment_id": 100423211, "body": "I find it useful to treat the lifetimes as time intervals, and read the colon as &quot;contains&quot;. The constraints here mean that <code>&#39;c</code> is contained in the intersection of <code>&#39;a</code> and <code>&#39;b</code>. (Of course the meaning of &quot;contains&quot; is completely identical to &quot;outlives&quot;, but it helps me to visualize the lifetimes in a different way.)"}, {"owner": {"reputation": 35, "user_id": 11755636, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f39fc4e46c6a2782b0209bd48bdad7?s=128&d=identicon&r=PG&f=1", "display_name": "HBex", "link": "https://stackoverflow.com/users/11755636/hbex"}, "edited": false, "score": 0, "creation_date": 1562751554, "post_id": 56939597, "comment_id": 100472477, "body": "Really helpful to understand lifetime declaration and management of Rust much better. Thank you"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1562607811, "last_edit_date": 1562607811, "creation_date": 1562605492, "answer_id": 56939597, "question_id": 56939443, "link": "https://stackoverflow.com/questions/56939443/how-do-i-specify-the-lifetime-of-a-field-as-a-combination-of-other-fields/56939597#56939597", "title": "How do I specify the lifetime of a field as a combination of other fields?", "body": "<p>You have the semantics of <code>:</code> backwards: <code>'c: 'a</code> means that <code>'c</code> <em>outlives</em> <code>'a</code>, where you want to say that <code>'c</code> <em>is outlived by</em> <code>'a</code> (so that you can provide a reference of lifetime <code>'a</code> where one with lifetime <code>'c</code> is expected). So you need to write the lifetime constraints the other way around.</p>\n\n<p>You can write <code>&lt;'a: 'c, 'b: 'c, 'c&gt;</code>, but I find it easier to read with a <code>where</code> clause:</p>\n\n<pre><code>fn silly_fkt&lt;'a, 'b, 'c&gt;(arg1: &amp;'a str, arg2: &amp;'b str) -&gt; SillyResult&lt;'a, 'b, 'c&gt;\nwhere\n    'a: 'c,\n    'b: 'c,\n{\n    SillyResult {\n        arg1,\n        arg2,\n        result: longest(arg1, arg2),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 11755636, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f39fc4e46c6a2782b0209bd48bdad7?s=128&d=identicon&r=PG&f=1", "display_name": "HBex", "link": "https://stackoverflow.com/users/11755636/hbex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 56939597, "answer_count": 1, "score": 3, "last_activity_date": 1562609972, "creation_date": 1562604784, "last_edit_date": 1562609972, "question_id": 56939443, "link": "https://stackoverflow.com/questions/56939443/how-do-i-specify-the-lifetime-of-a-field-as-a-combination-of-other-fields", "title": "How do I specify the lifetime of a field as a combination of other fields?", "body": "<p>I have a function that stores two parameters in a struct in three referenced fields. I do not know how to specify the lifetime of this third result field, which is a combination of the lifetime of the first two parameters of the function.</p>\n\n<p>I tried storing the first two reference arguments in the struct. This works quite well and is not of interest. More interesting is the case I show below, where I do not have a solution for.</p>\n\n<p>I know that this code does not make any sense; it just shows the problem.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This function can be found in \"Lifetime Annotations in Function Signatures\" of the Rust manual\nfn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n\n// Here comes the interesting part; 1st the result type of my function\nstruct SillyResult&lt;'a, 'b, 'c&gt; {\n    arg1: &amp;'a str,\n    arg2: &amp;'b str,\n    result: &amp;'c str,\n}\n\n// ... and now the function, that does not compile and shall be corrected\nfn silly_fkt&lt;'a, 'b, 'c: 'a + 'b&gt;(arg1: &amp;'a str, arg2: &amp;'b str) -&gt; SillyResult&lt;'a, 'b, 'c&gt; {\n    // Neither the following line ...\n    // SillyResult&lt;'a, 'b, 'c&gt;{arg1: arg1, arg2: arg2, result: longest(arg1, arg2)}\n    // ... nor the following line work\n    SillyResult {\n        arg1,\n        arg2,\n        result: longest(arg1, arg2),\n    }\n}\n</code></pre>\n\n<p>The idea was to combine lifetime <code>'a</code> and <code>'b</code> to a lifetime <code>'c</code>.\nHowever it gives a bunch of errors complaining about the lifetimes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter 'a in function call due to conflicting requirements\n  --&gt; src/lib.rs:25:17\n   |\n25 |         result: longest(arg1, arg2),\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'b as defined on the function body at 18:18...\n  --&gt; src/lib.rs:18:18\n   |\n18 | fn silly_fkt&lt;'a, 'b, 'c: 'a + 'b&gt;(arg1: &amp;'a str, arg2: &amp;'b str) -&gt; SillyResult&lt;'a, 'b, 'c&gt; {\n   |                  ^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:25:31\n   |\n25 |         result: longest(arg1, arg2),\n   |                               ^^^^\nnote: but, the lifetime must be valid for the lifetime 'c as defined on the function body at 18:22...\n  --&gt; src/lib.rs:18:22\n   |\n18 | fn silly_fkt&lt;'a, 'b, 'c: 'a + 'b&gt;(arg1: &amp;'a str, arg2: &amp;'b str) -&gt; SillyResult&lt;'a, 'b, 'c&gt; {\n   |                      ^^\n   = note: ...so that the expression is assignable:\n           expected SillyResult&lt;'a, 'b, 'c&gt;\n              found SillyResult&lt;'_, '_, '_&gt;\n</code></pre>\n\n<p>I tried to change the last line of <code>silly_fkt</code> to</p>\n\n<pre><code>SillyResult&lt;'a, 'b, 'c&gt;{ arg1, arg2, result: longest(arg1, arg2) }\n</code></pre>\n\n<p>but this does not work.</p>\n\n<p>What is the correct code for <code>silly_fkt</code>?</p>\n"}, {"tags": ["rust", "condition-variable"], "answers": [{"comments": [{"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "edited": false, "score": 0, "creation_date": 1562607704, "post_id": 56940027, "comment_id": 100420268, "body": "So <code>wait()</code> needs to take ownership of <code>MutexGuard</code> while waiting and then it hands it back?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1563700889, "last_edit_date": 1563700889, "creation_date": 1562607568, "answer_id": 56940027, "question_id": 56939439, "link": "https://stackoverflow.com/questions/56939439/how-do-i-use-a-condvar-without-moving-the-mutex-variable/56940027#56940027", "title": "How do I use a Condvar without moving the Mutex variable?", "body": "<p>The difference that you <em>didn't</em> spot is that <code>wait</code> returns the <code>MutexGuard</code>:</p>\n\n<pre><code>pub fn wait&lt;'a, T&gt;(\n    &amp;self,\n    guard: MutexGuard&lt;'a, T&gt;\n) -&gt; LockResult&lt;MutexGuard&lt;'a, T&gt;&gt;\n</code></pre>\n\n<pre><code>while !*started {\n    started = cvar.wait(started).unwrap();\n}\n</code></pre>\n\n<p><code>wait</code> takes ownership of the <code>MutexGuard</code> since it releases the lock and later reacquires it. Transferring ownership statically prevents using an improperly locked (or unlocked) variable, an example of using Rust's type system to the programmers advantage.</p>\n\n<hr>\n\n<p>You need to do the same thing in your code:</p>\n\n<pre><code>let mut unlocked = var_in_lock.lock().unwrap();\n\nloop {\n    unlocked = cvar.wait(unlocked).unwrap();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29870837/155423\">How do I use a Condvar to limit multithreading?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47554092/155423\">Buffer in Rust with Mutex and Condvar</a></li>\n</ul>\n"}], "owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 354, "favorite_count": 0, "accepted_answer_id": 56940027, "answer_count": 1, "score": 0, "last_activity_date": 1563700889, "creation_date": 1562604760, "last_edit_date": 1562607409, "question_id": 56939439, "link": "https://stackoverflow.com/questions/56939439/how-do-i-use-a-condvar-without-moving-the-mutex-variable", "title": "How do I use a Condvar without moving the Mutex variable?", "body": "<p>I want to use a <code>Condvar</code> in my program. Below is a short test of it. I know it will be stuck forever on the loop.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Condvar, Mutex};\n\nfn main() {\n    let var_in_lock = Arc::new(Mutex::new(8));\n    let cvar = Arc::new(Condvar::new());\n\n    let unlocked = var_in_lock.lock().unwrap();\n\n    loop {\n        cvar.wait(unlocked).unwrap();\n    }\n}\n\n</code></pre>\n\n<p>It doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `unlocked`\n  --&gt; src/main.rs:10:19\n   |\n7  |     let unlocked = var_in_lock.lock().unwrap();\n   |         -------- move occurs because `unlocked` has type `std::sync::MutexGuard&lt;'_, i32&gt;`, which does not implement the `Copy` trait\n...\n10 |         cvar.wait(unlocked).unwrap();\n   |                   ^^^^^^^^ value moved here, in previous iteration of loop\n</code></pre>\n\n<p>I have looked at <a href=\"https://doc.rust-lang.org/std/sync/struct.Condvar.html#method.wait\" rel=\"nofollow noreferrer\">the example</a> in the Rust documentation. The two differences I spot are:</p>\n\n<ol>\n<li>They create the <code>Condvar</code> and <code>Mutex</code> in a pair. This shouldn't matter, right? I want to create them separately.</li>\n<li>They match the lock using the <code>ref</code> keyword, which, if I understand <a href=\"https://stackoverflow.com/questions/54285560/in-function-parameters-what-is-the-difference-between-using-the-ref-keyword-and\">this</a> answer correctly, means that a reference to the lock is made. I figured that by changing the line to <code>cvar.wait(&amp;unlocked).unwrap();</code> would be the same thing, but then the compiler complains that a <code>MutexGuard</code>, and not a reference, is expected.</li>\n</ol>\n\n<p>How can I make it compile?</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 6, "creation_date": 1562595802, "post_id": 56936990, "comment_id": 100414233, "body": "Just do what the compiler says: remove the semicolon..."}, {"owner": {"reputation": 594, "user_id": 664179, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7c9fba17c3c51f978433142182ff3e5a?s=128&d=identicon&r=PG", "display_name": "Keeper Hood", "link": "https://stackoverflow.com/users/664179/keeper-hood"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562595886, "post_id": 56936990, "comment_id": 100414277, "body": "omg, such silly mistake, thanks (you can delete the noob question if it makes sense) ;)"}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 3, "creation_date": 1562595927, "post_id": 56936990, "comment_id": 100414303, "body": "Think of the semicolon not as a terminator but as a separator."}], "owner": {"reputation": 594, "user_id": 664179, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7c9fba17c3c51f978433142182ff3e5a?s=128&d=identicon&r=PG", "display_name": "Keeper Hood", "link": "https://stackoverflow.com/users/664179/keeper-hood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1562596186, "answer_count": 0, "score": 0, "last_activity_date": 1562596006, "creation_date": 1562595725, "last_edit_date": 1562596006, "question_id": 56936990, "link": "https://stackoverflow.com/questions/56936990/why-format-cannot-be-used-in-the-return-statement", "closed_reason": "Duplicate", "title": "Why format! cannot be used in the return statement?", "body": "<p>This <strong>compiles</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fmt(url: &amp;str) -&gt; String {\n    const base_url: &amp;'static str = \"https://api.github.com/\";\n    let req_url = format!(\"{}{}\", &amp;base_url, &amp;url);\n    req_url\n}\n\nfn main() {\n    let url = fmt(\"bla/bla\");\n    println!(\"{}\", url)\n}\n</code></pre>\n\n<p>This <strong>doesn't</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fmt(url: &amp;str) -&gt; String {\n    const base_url: &amp;'static str = \"https://api.github.com/\";\n    format!(\"{}{}\", &amp;base_url, &amp;url);\n}\n\nfn main() {\n    let url = fmt(\"bla/bla\");\n    println!(\"{}\", url)\n}\n</code></pre>\n\n<p>For the non-working example I get the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n --&gt; src/main.rs:1:22\n  |\n1 | fn fmt(url: &amp;str) -&gt; String {\n  |    ---               ^^^^^^ expected struct `std::string::String`, found ()\n  |    |\n  |    this function's body doesn't return\n2 |     const base_url: &amp;'static str = \"https://api.github.com/{request_url}\";\n3 |     format!(\"{}{}\", &amp;base_url, &amp;url);\n  |                                     - help: consider removing this semicolon\n  |\n  = note: expected type `std::string::String`\n             found type `()`\n</code></pre>\n\n<p>Is there something implicit happening when a macro is in a return statement?</p>\n"}, {"tags": ["multithreading", "rust", "channel"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1562596039, "post_id": 56936956, "comment_id": 100414373, "body": "Are you using <code>std::mpsc</code>? <code>Sender</code> is <code>Clone</code>, you should give each thread their own clone of the sender. However the <code>sc</code> means Single Consumer, so you can&#39;t share the <code>Receiver</code> by design. The <code>crossbeam</code> crate provides MPMC channels similar to the ones in std."}, {"owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1562596253, "post_id": 56936956, "comment_id": 100414514, "body": "Thanks for your comment! I will update my questions to clarify a little."}, {"owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "edited": false, "score": 0, "creation_date": 1562677882, "post_id": 56936956, "comment_id": 100445129, "body": "You could wrap your <code>Receiver</code> into <code>Arc&lt;Mutex&lt;..&gt;&gt;</code> as well."}, {"owner": {"reputation": 522, "user_id": 6070255, "user_type": "registered", "profile_image": "https://graph.facebook.com/1700571903515060/picture?type=large", "display_name": "Aunmag", "link": "https://stackoverflow.com/users/6070255/aunmag"}, "edited": false, "score": 0, "creation_date": 1608285159, "post_id": 56936956, "comment_id": 115541976, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/40384274/rust-mpscsender-cannot-be-shared-between-threads\">Rust mpsc::Sender cannot be shared between threads?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 522, "user_id": 6070255, "user_type": "registered", "profile_image": "https://graph.facebook.com/1700571903515060/picture?type=large", "display_name": "Aunmag", "link": "https://stackoverflow.com/users/6070255/aunmag"}, "is_accepted": false, "score": 0, "last_activity_date": 1608285129, "last_edit_date": 1608285129, "creation_date": 1608284382, "answer_id": 65354693, "question_id": 56936956, "link": "https://stackoverflow.com/questions/56936956/how-to-share-a-struct-containing-a-sender-and-a-receiver-field-across-threads/65354693#65354693", "title": "How to share a struct containing a Sender and a Receiver field across threads?", "body": "<p>As I answered here: <a href=\"https://stackoverflow.com/a/65354846/6070255\">https://stackoverflow.com/a/65354846/6070255</a></p>\n<blockquote>\n<p>You may use <a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.SyncSender.html\" rel=\"nofollow noreferrer\">std::sync::mpsc::SyncSender</a> from the standard library. The difference is that it implements the <code>Sync</code> trait but it will may block if there is no space in the internal buffer while sending a message.</p>\n<p>For more information:</p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\">std::sync::mpsc::channel</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html\" rel=\"nofollow noreferrer\">std::sync::mpsc::sync_channel</a></li>\n</ul>\n</blockquote>\n"}], "owner": {"reputation": 79, "user_id": 10887973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6b11e3fc27c7a611b4c28761149f8e?s=128&d=identicon&r=PG&f=1", "display_name": "arcus_mannen", "link": "https://stackoverflow.com/users/10887973/arcus-mannen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 380, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1608285129, "creation_date": 1562595627, "last_edit_date": 1562596571, "question_id": 56936956, "link": "https://stackoverflow.com/questions/56936956/how-to-share-a-struct-containing-a-sender-and-a-receiver-field-across-threads", "title": "How to share a struct containing a Sender and a Receiver field across threads?", "body": "<p>I have a struct which roughly looks as follows</p>\n\n<pre><code>struct Node {\n    id: Arc&lt;i32&gt;,\n    data: Arc&lt;Mutex&lt;i32&gt;&gt;, // Actually not i32, but that is not important for this question.\n    rx: Receiver&lt;()&gt;,\n    tx: Sender&lt;()&gt;\n}\n</code></pre>\n\n<p>I use <code>Receiver</code> and <code>Sender</code> from <code>mpsc::channel</code>.</p>\n\n<p>I want to share this across multiple threads. I have one \"user\" thread in which the user of <code>Node</code> executes some functions on <code>Node</code>. This will cause some UDP messages being sent to other computers and this thread will block on <code>rx.recv()</code>. In the background I have one <em>or more</em> threads that perform a blocking receive call on UDP sockets. When they receive a message they update the <code>data</code> field of the <code>Node</code> struct and when a background thread notices that sufficiently many messages have been received, it will send <code>()</code> using <code>tx.send()</code>, to let the user-thread continue its execution.</p>\n\n<p>To share a <code>Node</code> instance to another thread, I do something like this:</p>\n\n<pre><code>let node: Arc&lt;Node&gt; = ...\nlet node_for_background_thread = Arc::clone(&amp;node);\nlet background_thread_handle = thread::spawn(move || {\n    node_for_background_thread.start_receive_loop();\n});\n</code></pre>\n\n<p>I need to access all fields of <code>Node</code> (e.g. <code>id</code> and <code>data</code>) in both the user thread and the background threads. That's why I want to share a single instance of <code>Node</code> across them. But neither <code>Receiver</code> nor <code>Sender</code> is <code>Sync</code>, so the above doesn't compile. I know I can clone <code>Sender</code> to put an owned one of them in each background thread.</p>\n\n<p>One solution I see is to not include <code>rx</code> and <code>tx</code> in <code>Node</code>. But then I would lose encapsulation since then the creator of <code>Node</code> instances would have to create the channel and also spawn the background threads. I want to keep it all encapsulated in <code>Node</code> if possible.</p>\n\n<p>The code snipper above is where I could manually clone the <code>Sender</code>. I don't need to clone the <code>Receiver</code> since I will only ever have one thread that will use it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562594622, "post_id": 56936533, "comment_id": 100413539, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.i64.html#method.from_str_radix\" rel=\"nofollow noreferrer\"><code>from_str_radix</code></a>"}], "owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 889, "favorite_count": 0, "closed_date": 1562594470, "answer_count": 0, "score": 3, "last_activity_date": 1562594543, "creation_date": 1562594201, "question_id": 56936533, "link": "https://stackoverflow.com/questions/56936533/how-do-i-convert-a-string-to-an-integer-given-a-radix-in-rust", "closed_reason": "Duplicate", "title": "How do I convert a string to an integer given a radix in Rust?", "body": "<p>I have a string that contains a number in the octal system. Now I'd like to convert this String to an integer. I found <code>text.parse()</code> which converts the string into an integer with radix 10. \nHow do I convert the String to a number given a radix? (Ideally a solution that works for hexadecimal/decimal/binary/octal, and not only for octal)</p>\n"}, {"tags": ["rust", "type-conversion", "integer", "mod"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562593050, "post_id": 56936069, "comment_id": 100412534, "body": "You can write <code>(value % number_of_buckets as u64) as u8</code>"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562593288, "post_id": 56936069, "comment_id": 100412690, "body": "@FrenchBoiethios Thanks, that is better! Must have messed something up when I tried that the first time, but clearly it works."}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "closed_date": 1562593392, "answer_count": 0, "score": 1, "last_activity_date": 1562593431, "creation_date": 1562592786, "last_edit_date": 1562593431, "question_id": 56936069, "link": "https://stackoverflow.com/questions/56936069/how-to-calculate-u64-modulus-u8-in-rust", "closed_reason": "Duplicate", "title": "How to calculate u64 modulus u8 in Rust?", "body": "<p>I want to write a simple Rust function that takes an <code>u64</code> modulo an <code>u8</code>, and returns an <code>u8</code>:</p>\n\n<pre><code>fn bucket(value: u64, number_of_buckets: u8) -&gt; u8 {\n    value % number_of_buckets\n}\n</code></pre>\n\n<p>However, this does not compile because of mismatching types:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:2:13\n  |\n2 |     value % number_of_buckets\n  |             ^^^^^^^^^^^^^^^^^ expected u64, found u8\n\nerror[E0308]: mismatched types\n --&gt; src/lib.rs:2:5\n  |\n1 | fn bucket(value: u64, number_of_buckets: u8) -&gt; u8 {\n  |                                                 -- expected `u8` because of return type\n2 |     value % number_of_buckets\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ expected u8, found u64\nhelp: you can convert an `u64` to `u8` and panic if the converted value wouldn't fit\n  |\n2 |     (value % number_of_buckets).try_into().unwrap()\n  |\n\nerror[E0277]: cannot mod `u64` by `u8`\n --&gt; src/lib.rs:2:11\n  |\n2 |     value % number_of_buckets\n  |           ^ no implementation for `u64 % u8`\n  |\n  = help: the trait `std::ops::Rem&lt;u8&gt;` is not implemented for `u64`\n</code></pre>\n\n<p>To fix it, I have to write this very ugly code:</p>\n\n<pre><code>use std::convert::TryInto;\n\nfn bucket(value: u64, number_of_buckets: u8) -&gt; u8 {\n    (value % number_of_buckets as u64).try_into().unwrap()\n}\n</code></pre>\n\n<p>Is there no simpler way to do this, without two explicit type conversions and two function calls? The fact that I have two write so much code for something so simple makes me suspect I am missing something obvious.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1562581133, "post_id": 56932418, "comment_id": 100406228, "body": "In that case, you can put it in a <code>Box</code> to make it a <a href=\"https://doc.rust-lang.org/stable/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a>."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1562581182, "post_id": 56932418, "comment_id": 100406252, "body": "I have an idea how to use different iterators with stack allocation instead of a box. Should I post it as an answer in the other question ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562581300, "post_id": 56932418, "comment_id": 100406306, "body": "Be sure to read all of the answers to the duplicate; the accepted one isn&#39;t necessarily exhaustive or best for your situation."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1562581372, "post_id": 56932418, "comment_id": 100406349, "body": "@Svetlin If it is different from the existing answers, absolutely!"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562581411, "post_id": 56932418, "comment_id": 100406371, "body": "One of the answers does indeed propose a solution which scales with multiple types and does not require heap allocations. You can also see <a href=\"https://stackoverflow.com/q/28264349/1233251\">this other question</a>."}, {"owner": {"reputation": 19, "user_id": 11753629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-fH6H4boKZGQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdk-yFj56nkuT57melAw-IyQ0nSiQ/photo.jpg?sz=128", "display_name": "David Presle", "link": "https://stackoverflow.com/users/11753629/david-presle"}, "edited": false, "score": 0, "creation_date": 1562581583, "post_id": 56932418, "comment_id": 100406468, "body": "Thank you! I know how to do after reading all the answers to the duplicate."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1562603771, "post_id": 56932418, "comment_id": 100418591, "body": "My attempt: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c2243c74dce6aafcb4ef28054968891d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, it&#39;s different than the provided answers, but hardly better."}], "owner": {"reputation": 19, "user_id": 11753629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-fH6H4boKZGQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdk-yFj56nkuT57melAw-IyQ0nSiQ/photo.jpg?sz=128", "display_name": "David Presle", "link": "https://stackoverflow.com/users/11753629/david-presle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 61, "favorite_count": 0, "closed_date": 1562581103, "answer_count": 0, "score": 1, "last_activity_date": 1562579654, "creation_date": 1562579654, "question_id": 56932418, "link": "https://stackoverflow.com/questions/56932418/how-can-i-get-an-iterator-of-the-same-type-from-iter-and-iter-rev", "closed_reason": "Duplicate", "title": "How can I get an iterator of the same type from iter() and iter().rev()?", "body": "<p>According to a condition, I need to iterate on an array in one direction or another. So, I would like to iterate without knowing in which direction I am, that is why I want a variable storing an iterator.</p>\n\n<p>Here some playground which does not compile :\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=956563a1b42c97333e35a1667ae135a7\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=956563a1b42c97333e35a1667ae135a7</a></p>\n\n<pre><code>fn main() {\n    let array = [1, 2 , 3];\n    let condition = false;\n\n    let iter = if condition {array.iter()} else {array.iter().rev()};\n    iter.for_each(|element| {/*Do something where the order matters*/});\n}\n</code></pre>\n"}, {"tags": ["rust", "abstract-data-type"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1562579199, "post_id": 56932211, "comment_id": 100405212, "body": "I you want the type of the implementor, use <code>Self</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1562579264, "post_id": 56932211, "comment_id": 100405251, "body": "BTW, you can use this answer to compute the sum: <a href=\"https://stackoverflow.com/questions/56930343/multiplying-elements-from-two-different-arrays\" title=\"multiplying elements from two different arrays\">stackoverflow.com/questions/56930343/&hellip;</a> : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b19103b2509e041c72585561c9d3b0a1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1562579294, "post_id": 56932211, "comment_id": 100405263, "body": "There is no such things as an <i>&quot;abstract class&quot;</i> in Rust. Please stick to the correct terminology."}, {"owner": {"reputation": 896, "user_id": 6314254, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-syObEwk9Mds/AAAAAAAAAAI/AAAAAAAAARU/Qz5nNseD1Pc/photo.jpg?sz=128", "display_name": "Hugo Trentesaux", "link": "https://stackoverflow.com/users/6314254/hugo-trentesaux"}, "edited": false, "score": 0, "creation_date": 1562591254, "post_id": 56932211, "comment_id": 100411393, "body": "You might change your title to &quot;how to tell a trait function to take an argument implementing this trait&quot; or something like that"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562592805, "post_id": 56935570, "comment_id": 100412377, "body": "Please explain why the changes are needed and where one can find some information about <code>Self</code> (e.g. <a href=\"https://stackoverflow.com/q/32304595\">stackoverflow.com/q/32304595</a>)"}], "tags": [], "owner": {"reputation": 896, "user_id": 6314254, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-syObEwk9Mds/AAAAAAAAAAI/AAAAAAAAARU/Qz5nNseD1Pc/photo.jpg?sz=128", "display_name": "Hugo Trentesaux", "link": "https://stackoverflow.com/users/6314254/hugo-trentesaux"}, "is_accepted": true, "score": 2, "last_activity_date": 1562852619, "last_edit_date": 1562852619, "creation_date": 1562591020, "answer_id": 56935570, "question_id": 56932211, "link": "https://stackoverflow.com/questions/56932211/how-can-i-specify-that-a-trait-function-takes-an-argument-implementing-the-trait/56935570#56935570", "title": "How can I specify that a trait function takes an argument implementing the trait?", "body": "<p>You are not far from something that compiles and pass your test. Just change:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn square_distance(&amp;self, other: &amp;MetricPoint) -&gt; f64;\n</code></pre>\n\n<p>to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn square_distance(&amp;self, other: &amp;Self) -&gt; f64;\n</code></pre>\n\n<p>and optionnally</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn square_distance(self: &amp;RNPoint, other: &amp;RNPoint) -&gt; f64\n</code></pre>\n\n<p>to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn square_distance(self: &amp;RNPoint, other: &amp;Self) -&gt; f64\n</code></pre>\n\n<p>By writing <code>Self</code>, you are specifying the type of the current structure. It's more generic and readable.</p>\n"}, {"tags": [], "owner": {"reputation": 303, "user_id": 4816099, "user_type": "registered", "accept_rate": 29, "profile_image": "https://lh6.googleusercontent.com/-WpM2D5hcJ0Y/AAAAAAAAAAI/AAAAAAAAJdU/mSaIgSfv0jU/photo.jpg?sz=128", "display_name": "gilcu2", "link": "https://stackoverflow.com/users/4816099/gilcu2"}, "is_accepted": false, "score": 0, "last_activity_date": 1562619981, "creation_date": 1562619981, "answer_id": 56942558, "question_id": 56932211, "link": "https://stackoverflow.com/questions/56932211/how-can-i-specify-that-a-trait-function-takes-an-argument-implementing-the-trait/56942558#56942558", "title": "How can I specify that a trait function takes an argument implementing the trait?", "body": "<p>Thanks. As some said but Hugo more clearly the solution is the self. Here is the final code:</p>\n\n<pre><code>trait Metric {\n    fn distance(&amp;self, other: &amp;Self) -&gt; f64;\n}\n\nstruct RNPoint {\n    coordinates: Vec&lt;f64&gt;,\n}\n\nimpl RNPoint {\n    fn new(coordinates: &amp;[f64]) -&gt; RNPoint {\n        RNPoint {\n            coordinates: coordinates.to_vec(),\n        }\n    }\n}\n\nimpl Metric for RNPoint {\n\n    fn distance(&amp;self, other: &amp;Self) -&gt; f64 {\n        let sum:f64=self.coordinates.iter()\n            .zip(other.coordinates.iter())\n            .map(|(&amp;c1, &amp;c2)| {\n                let diff = c1 - c2;\n                diff * diff\n            })\n            .sum();\n         sum.sqrt()\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_distance() {\n        let p1 = RNPoint::new(&amp;[0.0, 0.0]);\n        let p2 = RNPoint::new(&amp;[1.0, 0.0]);\n        let d = p1.distance(&amp;p2);\n        assert_eq!(d, 1.0)\n    }\n}\n</code></pre>\n\n<p>About the abstract class I wrote Abstract Data Type but stack overflow changed it and I didn't notice. Sorry about</p>\n"}], "owner": {"reputation": 303, "user_id": 4816099, "user_type": "registered", "accept_rate": 29, "profile_image": "https://lh6.googleusercontent.com/-WpM2D5hcJ0Y/AAAAAAAAAAI/AAAAAAAAJdU/mSaIgSfv0jU/photo.jpg?sz=128", "display_name": "gilcu2", "link": "https://stackoverflow.com/users/4816099/gilcu2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 56935570, "answer_count": 2, "score": 0, "last_activity_date": 1562852619, "creation_date": 1562578964, "last_edit_date": 1562620109, "question_id": 56932211, "link": "https://stackoverflow.com/questions/56932211/how-can-i-specify-that-a-trait-function-takes-an-argument-implementing-the-trait", "title": "How can I specify that a trait function takes an argument implementing the trait?", "body": "<p>I created an abstract data type for vectors in metric space but the compiler complains because it doesn't recognize that the implementation as an argument is of this type.</p>\n\n<pre><code>trait MetricPoint {\n    fn square_distance(&amp;self, other: &amp;MetricPoint) -&gt; f64;\n}\n\nstruct RNPoint {\n    coordinates: Vec&lt;f64&gt;,\n}\n\nimpl RNPoint {\n    fn new(coordinates: &amp;[f64]) -&gt; RNPoint {\n        RNPoint {\n            coordinates: coordinates.to_vec(),\n        }\n    }\n}\n\nimpl MetricPoint for RNPoint {\n    fn square_distance(self: &amp;RNPoint, other: &amp;RNPoint) -&gt; f64 {\n        let min_len = self.coordinates.len().min(other.coordinates.len());\n        let mut sum = 0.0;\n        for i in 0..min_len {\n            let diff = self.coordinates[i] - other.coordinates[i];\n            sum += diff * diff;\n        }\n        sum\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn square_distance() {\n        let p1 = RNPoint::new(&amp;[0.0, 0.0]);\n        let p2 = RNPoint::new(&amp;[1.0, 0.0]);\n        let d = p1.square_distance(&amp;p2);\n        assert_eq!(d, 1.0)\n    }\n}\n</code></pre>\n\n<p>The compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0053]: method `square_distance` has an incompatible type for trait\n  --&gt; points/src/lib.rs:19:44\n   |\n2  |     fn square_distance(&amp;self, other: &amp;MetricPoint) -&gt; f64;\n   |                                      ------------ type in trait\n...\n19 |     fn square_distance(self:&amp;RNPoint,other:&amp;RNPoint)-&gt;f64 {\n   |                                            ^^^^^^^^ expected trait MetricPoint, found struct `RNPoint`\n   |\n   = note: expected type `fn(&amp;RNPoint, &amp;dyn MetricPoint) -&gt; f64`\n              found type `fn(&amp;RNPoint, &amp;RNPoint) -&gt; f64`\n</code></pre>\n\n<p>Why it doesn't recognize that an <code>RNPoint</code> is an <code>MetricPoint</code>?</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1562578199, "post_id": 56930343, "comment_id": 100404697, "body": "Note that French Boiethios&#39; answer uses <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">slices</a> as the arguments to <code>sum_product</code> - you cannot simply specify <code>[f32]</code> as a type, as all array types must also carry a size (like the <code>[f32; 2]</code> does). Slices, however, are a view into a collection (whether that be an array, a vec, etc), and do not need an explicit size."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1562578268, "post_id": 56930343, "comment_id": 100404735, "body": "Also, unless you absolutely need to, avoid specifying explicit types on variables like <code>a</code> and <code>b</code>. The compiler can and will work them out for you, which saves a lot of typing :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562588616, "post_id": 56930343, "comment_id": 100409949, "body": "See also <a href=\"https://stackoverflow.com/q/54603226/155423\">How can I improve the performance of element-wise multiplication in Rust?</a>; <a href=\"https://stackoverflow.com/q/41207666/155423\">How do I add two Rust arrays element-wise?</a>."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1562589439, "last_edit_date": 1562589439, "creation_date": 1562571940, "answer_id": 56930436, "question_id": 56930343, "link": "https://stackoverflow.com/questions/56930343/multiplying-elements-from-two-different-arrays/56930436#56930436", "title": "Multiplying elements from two different arrays", "body": "<p>With a mix of <code>zip</code> and <code>map</code>:</p>\n\n<pre><code>fn sum_product(a: &amp;[f32], b: &amp;[f32]) -&gt; f32 {\n    a.iter()\n        .zip(b.iter())\n        .map(|(a, b)| a * b)\n        .sum()\n}\n\nfn main() {\n    let a = [2.0, 3.0];\n    let b = [0.0, 1.0];\n\n    assert_eq!(3.0, sum_product(&amp;a, &amp;b));\n}\n</code></pre>\n"}], "owner": {"reputation": 19, "user_id": 9682654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e842aa72c3f0199e525f57a5e317347?s=128&d=identicon&r=PG&f=1", "display_name": "Bluretrece", "link": "https://stackoverflow.com/users/9682654/bluretrece"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 400, "favorite_count": 0, "closed_date": 1562588118, "accepted_answer_id": 56930436, "answer_count": 1, "score": 0, "last_activity_date": 1562589439, "creation_date": 1562571561, "last_edit_date": 1562572857, "question_id": 56930343, "link": "https://stackoverflow.com/questions/56930343/multiplying-elements-from-two-different-arrays", "closed_reason": "Duplicate", "title": "Multiplying elements from two different arrays", "body": "<p>I'm trying to multiply each element from two different arrays. I mean, I have <code>array1 = [i1 , i2]</code> and <code>array2 = [j1, j2]</code> so I need to do <code>(i1 * j1) + (i2 * j2)</code>. How can I approach this in Rust? I've been researching in The Book and saw some methods that possibly could help: <code>map</code> and <code>fold</code>. But I'm a bit lost. Thanks in advance!</p>\n\n<pre><code>fn sum_product(a: [f32], b: [f32]) -&gt; [f32] {\n    unimplemented!();\n}\n\nfn main() {\n    let a: [f32; 2] = [2.0, 3.0];\n    let b: [f32; 2] = [0.0, 1.0];\n}\n</code></pre>\n"}, {"tags": ["async-await", "rust"], "answers": [{"comments": [{"owner": {"reputation": 338, "user_id": 1107768, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9391152264f5d5fe5e7f6db2de7ebdcb?s=128&d=identicon&r=PG", "display_name": "Kuba Ber&#225;nek", "link": "https://stackoverflow.com/users/1107768/kuba-ber%c3%a1nek"}, "edited": false, "score": 0, "creation_date": 1580301523, "post_id": 56936467, "comment_id": 106051304, "body": "The warning is actually not useless, the task should be eventually joined to avoid unbounded concurrency: <a href=\"https://github.com/tokio-rs/tokio/issues/1879\" rel=\"nofollow noreferrer\">github.com/tokio-rs/tokio/issues/1879</a>. Although such resource management is probably overkill for this short code sample."}], "tags": [], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "is_accepted": true, "score": 3, "last_activity_date": 1562864077, "last_edit_date": 1562864077, "creation_date": 1562594021, "answer_id": 56936467, "question_id": 56930108, "link": "https://stackoverflow.com/questions/56930108/select-from-a-list-of-sockets-using-futures/56936467#56936467", "title": "Select from a list of sockets using futures", "body": "<p>In case someone is following, I hacked it together finally. This code works:</p>\n\n<pre><code>#![feature(async_await)]\n#![feature(async_closure)]\n#![recursion_limit=\"128\"]\n\nuse futures::{\n    prelude::*,\n    select,\n    stream,\n    io::ReadHalf,\n    channel::{\n        oneshot,\n        mpsc::{unbounded, UnboundedSender},\n    }\n};\n\nuse runtime::net::{TcpListener, TcpStream};\n\nuse std::{\n    io,\n    net::SocketAddr,\n    collections::HashMap,\n};\n\nasync fn read_stream(\n    addr: SocketAddr,\n    drop: oneshot::Receiver&lt;()&gt;,\n    mut reader: ReadHalf&lt;TcpStream&gt;,\n    sender: UnboundedSender&lt;(SocketAddr, io::Result&lt;Box&lt;[u8]&gt;&gt;)&gt;\n) {\n    let mut drop = drop.fuse();\n    loop {\n        let mut buffer: Vec&lt;u8&gt; = vec![0; 1024];\n        select! {\n            result = reader.read(&amp;mut buffer).fuse() =&gt; {\n                match result {\n                    Ok(len) =&gt; {\n                        buffer.truncate(len);\n                        sender.unbounded_send((addr, Ok(buffer.into_boxed_slice())))\n                            .expect(\"Channel error\");\n                        if len == 0 {\n                            return;\n                        }\n                    },\n                    Err(err) =&gt; {\n                        sender.unbounded_send((addr, Err(err))).expect(\"Channel error\");\n                        return;\n                    }\n                }\n            },\n            _ = drop =&gt; {\n                return;\n            },\n        }\n    }\n}\n\nenum Event {\n    Connection(io::Result&lt;TcpStream&gt;),\n    Message(SocketAddr, io::Result&lt;Box&lt;[u8]&gt;&gt;),\n}\n\n#[runtime::main]\nasync fn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut listener = TcpListener::bind(\"127.0.0.1:8080\")?;\n    eprintln!(\"Listening on {}\", listener.local_addr()?);\n\n    let mut writers = HashMap::new();\n    let (sender, receiver) = unbounded();\n\n    let connections = listener.incoming().map(|maybe_stream| Event::Connection(maybe_stream));\n    let messages = receiver.map(|(addr, maybe_message)| Event::Message(addr, maybe_message));\n    let mut events = stream::select(connections, messages);\n\n    loop {\n        match events.next().await {\n            Some(Event::Connection(Ok(stream))) =&gt; {\n                let addr = stream.peer_addr().unwrap();\n                eprintln!(\"New connection from {}\", addr);\n\n                let (reader, writer) = stream.split();\n                let (drop_sender, drop_receiver) = oneshot::channel();\n\n                writers.insert(addr, (writer, drop_sender));\n                runtime::spawn(read_stream(addr, drop_receiver, reader, sender.clone()));\n            },\n            Some(Event::Message(addr, Ok(message))) =&gt; {\n                if message.len() == 0 {\n                    eprintln!(\"Connection closed by client: {}\", addr);\n                    writers.remove(&amp;addr);\n                    continue;\n                } \n                eprintln!(\"Received {} bytes from {}\", message.len(), addr);\n                if &amp;*message == b\"quit\\n\" {\n                    eprintln!(\"Dropping client {}\", addr);\n                    writers.remove(&amp;addr);\n                    continue;\n                }\n                for (&amp;other_addr, (writer, _)) in &amp;mut writers {\n                    if addr != other_addr {\n                        writer.write_all(&amp;message).await.ok(); // Ignore errors\n                    }\n                }\n            },\n            Some(Event::Message(addr, Err(err))) =&gt; {\n                eprintln!(\"Error reading from {}: {}\", addr, err);\n                writers.remove(&amp;addr);\n            },\n            _ =&gt; panic!(\"Event error\"),\n        }\n    }\n}\n</code></pre>\n\n<p>I use a <code>channel</code> and spawn a reading task for each client. Special care had to be taken to ensure that readers get dropped with writers: this is why <code>oneshot</code> future is used. When <code>oneshot::Sender</code> is dropped, the <code>oneshot::Receiver</code> future resolves to canceled state, which is a notification mechanism for a reading task to know it is time to halt. To demonstrate that it works, we drop a client as soon as we get \"quit\" message.</p>\n\n<p>Sadly, there is a (seemingly useless) warning regarding an unused <code>JoinHandle</code> from the <code>runtime::spawn</code> call, and I don't really know how to eliminate it.</p>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1370, "favorite_count": 0, "accepted_answer_id": 56936467, "answer_count": 1, "score": 8, "last_activity_date": 1562864077, "creation_date": 1562570584, "last_edit_date": 1562570742, "question_id": 56930108, "link": "https://stackoverflow.com/questions/56930108/select-from-a-list-of-sockets-using-futures", "title": "Select from a list of sockets using futures", "body": "<p>I am trying out the yet-unstable async-await syntax in nightly Rust 1.38 with <code>futures-preview = \"0.3.0-alpha.16\"</code> and <code>runtime = \"0.3.0-alpha.6\"</code>. It feels really cool, but the docs are (yet) scarce and I got stuck.</p>\n\n<p>To go a bit beyond the <a href=\"https://docs.rs/crate/runtime/0.3.0-alpha.6/source/examples/\" rel=\"noreferrer\">basic examples</a> I would like to create an app that:</p>\n\n<ol>\n<li>Accepts TCP connections on a given port;</li>\n<li>Broadcasts all the data received from any connection to all active connections.</li>\n</ol>\n\n<p>Existing docs and examples got me this far:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await)]\n#![feature(async_closure)]\n\nuse futures::{\n    prelude::*,\n    select,\n    future::select_all,\n    io::{ReadHalf, WriteHalf, Read},\n};\n\nuse runtime::net::{TcpListener, TcpStream};\n\nuse std::io;\n\nasync fn read_stream(mut reader: ReadHalf&lt;TcpStream&gt;) -&gt; (ReadHalf&lt;TcpStream&gt;, io::Result&lt;Box&lt;[u8]&gt;&gt;) {\n    let mut buffer: Vec&lt;u8&gt; = vec![0; 1024];\n    match reader.read(&amp;mut buffer).await {\n        Ok(len) =&gt; {\n            buffer.truncate(len);\n            (reader, Ok(buffer.into_boxed_slice()))\n        },\n        Err(err) =&gt; (reader, Err(err)),\n    }\n}\n\n#[runtime::main]\nasync fn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut listener = TcpListener::bind(\"127.0.0.1:8080\")?;\n    println!(\"Listening on {}\", listener.local_addr()?);\n\n    let mut incoming = listener.incoming().fuse();\n    let mut writers: Vec&lt;WriteHalf&lt;TcpStream&gt;&gt; = vec![];\n    let mut reads = vec![];\n\n    loop {\n        select! {\n            maybe_stream = incoming.select_next_some() =&gt; {\n                let (mut reader, writer) = maybe_stream?.split();\n                writers.push(writer);\n                reads.push(read_stream(reader).fuse());\n            },\n            maybe_read = select_all(reads.iter()) =&gt; {\n                match maybe_read {\n                    (reader, Ok(data)) =&gt; {\n                        for writer in writers {\n                            writer.write_all(data).await.ok(); // Ignore errors here\n                        }\n                        reads.push(read_stream(reader).fuse());\n                    },\n                    (reader, Err(err)) =&gt; {\n                        let reader_addr = reader.peer_addr().unwrap();\n                        writers.retain(|writer| writer.peer_addr().unwrap() != reader_addr);\n                    },\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>This fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: recursion limit reached while expanding the macro `$crate::dispatch`\n  --&gt; src/main.rs:36:9\n   |\n36 | /         select! {\n37 | |             maybe_stream = incoming.select_next_some() =&gt; {\n38 | |                 let (mut reader, writer) = maybe_stream?.split();\n39 | |                 writers.push(writer);\n...  |\n55 | |             }\n56 | |         }\n   | |_________^\n   |\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>This is very confusing. Maybe I am using <code>select_all()</code> in a wrong way? Any help in making it work is appreciated!</p>\n\n<p>For completeness, my <code>Cargo.toml</code>:</p>\n\n<pre><code>[package]\nname = \"async-test\"\nversion = \"0.1.0\"\nauthors = [\"xxx\"]\nedition = \"2018\"\n\n[dependencies]\nruntime = \"0.3.0-alpha.6\"\nfutures-preview = { version = \"=0.3.0-alpha.16\", features = [\"async-await\", \"nightly\"] }\n</code></pre>\n"}, {"tags": ["rust", "libc"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1562541291, "post_id": 56926798, "comment_id": 100395090, "body": "You could just run your Rust code through the C preprocessor before compiling. This is basically what Haskell devs do when they want C-style preprocessing. Whatever C compiler you use surely has a setting to <i>just</i> run the preprocessor."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1562542780, "post_id": 56926798, "comment_id": 100395289, "body": "@SilvioMayolo that can&#39;t work. Something as simple as <code>#[derive(Debug)] struct Foo;</code> would give <code>a.rs:1:2: error: invalid preprocessing directive #[</code> using <code>cpp (GCC) 8.3.0</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1562542863, "post_id": 56926798, "comment_id": 100395299, "body": "Have you had a look at rust-bindgen?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1562549800, "creation_date": 1562549800, "answer_id": 56927417, "question_id": 56926798, "link": "https://stackoverflow.com/questions/56926798/is-it-possible-to-check-whether-a-c-macro-is-defined-on-your-system-in-rust/56927417#56927417", "title": "Is it possible to check whether a C macro is defined on your system in Rust?", "body": "<p>You can run the C preprocessor in a build script and inspect the output. If the macro is defined, we can then pass along a feature flag to the Rust code.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[build-dependencies]\ncc = \"1.0.37\"\n</code></pre>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>fn main() {\n    let check = cc::Build::new().file(\"src/o_binary_check.c\").expand();\n    let check = String::from_utf8(check).unwrap();\n    if check.contains(\"I_HAVE_O_BINARY_TRUE\") {\n        println!(\"rustc-cfg=o_binary_available\");\n    }\n}\n</code></pre>\n\n<p><strong>src/o_binary_check.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#ifdef O_BINARY\nI_HAVE_O_BINARY_TRUE\n#else\nI_HAVE_O_BINARY_FALSE\n#endif\n</code></pre>\n\n<p>Tweak this file as appropriate to find your macros.</p>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>fn main() {\n    if cfg!(feature = \"o_binary_available\") {\n        println!(\"O_BINARY is available\");\n    } else {\n        println!(\"O_BINARY is not available\");\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/21485655/155423\">How do I use C preprocessor macros with Rust&#39;s FFI?</a></li>\n<li><a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"noreferrer\">Build Scripts in <em>The Cargo Book</em></a></li>\n</ul>\n"}], "owner": {"reputation": 103, "user_id": 5923263, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c569659f2dc94fa6520735b7b8b0045f?s=128&d=identicon&r=PG&f=1", "display_name": "wfehrn", "link": "https://stackoverflow.com/users/5923263/wfehrn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 2, "accepted_answer_id": 56927417, "answer_count": 1, "score": 4, "last_activity_date": 1562549800, "creation_date": 1562540967, "last_edit_date": 1562548775, "question_id": 56926798, "link": "https://stackoverflow.com/questions/56926798/is-it-possible-to-check-whether-a-c-macro-is-defined-on-your-system-in-rust", "title": "Is it possible to check whether a C macro is defined on your system in Rust?", "body": "<p>I'm aware that the libc crate in Rust contains much of C's standard macros and functions for use in Rust, but it also states that it is not concerned with portability between systems. I'm porting some code that uses C's preprocessor macros extremely heavily from C to Rust, and only includes some code if a given macro is defined: in this case <code>O_BINARY</code>. Is it possible to check whether the <code>O_BINARY</code> macro is defined on my system in Rust, and if so, what does this look like?</p>\n\n<p>I'm looking for a construct that can replicate this C syntax rather closely:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#ifdef O_BINARY\n// Some extra code here\n#endif\n// Regular code\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "mutex", "shared-memory"], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": false, "score": 5, "last_activity_date": 1562558125, "last_edit_date": 1562558125, "creation_date": 1562524151, "answer_id": 56924970, "question_id": 56924866, "link": "https://stackoverflow.com/questions/56924866/why-do-rust-mutexes-not-seem-to-give-the-lock-to-the-thread-that-wanted-to-lock/56924970#56924970", "title": "Why do Rust mutexes not seem to give the lock to the thread that wanted to lock it last?", "body": "<p>The order of locking the mutex is not guaranteed in any way; it's possible for the first thread to acquire the lock 100% of the time, while the second thread 0%</p>\n\n<p>The threads are scheduled by the OS and the following scenario is quite possible:</p>\n\n<ol>\n<li>the OS gives CPU time to the first thread and it acquires the lock</li>\n<li>the OS gives CPU time to the second thread, but the lock is taken, hence it goes to sleep</li>\n<li>The fist thread releases the lock, but is still allowed to run by the OS. It goes for another iteration of the loop and re-acquires the lock</li>\n<li>The other thread cannot proceed, because the lock is still taken.</li>\n</ol>\n\n<p>If you give the second thread more time to acquire the lock you will see the expected ping-pong pattern, although there is no guarantee (a bad OS may decide to never give CPU time to some of your threads):</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::{thread, time};\n\nfn main() {\n    let data1 = Arc::new(Mutex::new(1));\n    let data2 = data1.clone();\n\n    let ten_millis = time::Duration::from_millis(10);\n\n    let a = thread::spawn(move || loop {\n        let mut data = data1.lock().unwrap();\n        *data += 1;\n        if *data &gt; 10 {\n            break;\n        }\n\n        drop(data);\n        thread::sleep(ten_millis);\n        println!(\"ping \");\n    });\n\n    let b = thread::spawn(move || loop {\n        let mut data = data2.lock().unwrap();\n        *data += 1;\n        if *data &gt; 10 {\n            break;\n        }\n\n        drop(data);\n        thread::sleep(ten_millis);\n        println!(\"pong \");\n    });\n\n    a.join().unwrap();\n    b.join().unwrap();\n}\n</code></pre>\n\n<p>You can verify that by playing with the sleep time. The lower the sleep time, the more irregular the ping-pong alternations will be, and with values as low as 10ms, you may see ping-ping-pong, etc.</p>\n\n<p>Essentially, a solution based on time is bad by design. You can guarantee that \"ping\" will be followed by \"pong\" by improving the algorithm.  For instance you can print \"ping\" on odd numbers and \"pong\" on even numbers: </p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::{thread, time};\n\nconst MAX_ITER: i32 = 10;\n\nfn main() {\n    let data1 = Arc::new(Mutex::new(1));\n    let data2 = data1.clone();\n\n    let ten_millis = time::Duration::from_millis(10);\n\n    let a = thread::spawn(move || 'outer: loop {\n        loop {\n            thread::sleep(ten_millis);\n            let mut data = data1.lock().unwrap();\n            if *data &gt; MAX_ITER {\n                break 'outer;\n            }\n\n            if *data &amp; 1 == 1 {\n                *data += 1;\n                println!(\"ping \");\n                break;\n            }\n        }\n    });\n\n    let b = thread::spawn(move || 'outer: loop {\n        loop {\n            thread::sleep(ten_millis);\n            let mut data = data2.lock().unwrap();\n            if *data &gt; MAX_ITER {\n                break 'outer;\n            }\n\n            if *data &amp; 1 == 0 {\n                *data += 1;\n                println!(\"pong \");\n                break;\n            }\n        }\n    });\n\n    a.join().unwrap();\n    b.join().unwrap();\n}\n</code></pre>\n\n<p>This isn't the best implementation, but I tried to do it with as few modifications as possible to the original code.</p>\n\n<p>You may also consider an implementation with a <code>Condvar</code>, a better solution, in my opinion, as it avoids the busy waiting on the mutex (ps: also removed the code duplication):</p>\n\n<pre><code>use std::sync::{Arc, Mutex, Condvar};\nuse std::thread;\n\nconst MAX_ITER: i32 = 10;\n\nfn main() {\n    let cv1 = Arc::new((Condvar::new(), Mutex::new(1)));\n    let cv2 = cv1.clone();\n\n    let a = thread::spawn(ping_pong_task(\"ping\", cv1, |x| x &amp; 1 == 1));\n    let b = thread::spawn(ping_pong_task(\"pong\", cv2, |x| x &amp; 1 == 0));\n\n    a.join().unwrap();\n    b.join().unwrap();\n}\n\nfn ping_pong_task&lt;S: Into&lt;String&gt;&gt;(\n        msg: S, \n        cv: Arc&lt;(Condvar, Mutex&lt;i32&gt;)&gt;, \n        check: impl Fn(i32) -&gt; bool) -&gt; impl Fn() \n{\n    let message = msg.into();\n\n    move || {\n        let (condvar, mutex) = &amp;*cv;\n\n        let mut value = mutex.lock().unwrap();\n        loop {\n            if check(*value) {\n                println!(\"{} \", message);\n                *value += 1;\n                condvar.notify_all();\n            }\n\n            if *value &gt; MAX_ITER {\n                break;\n            }\n\n            value = condvar.wait(value).unwrap();\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 11, "last_activity_date": 1562527147, "last_edit_date": 1592644375, "creation_date": 1562525571, "answer_id": 56925155, "question_id": 56924866, "link": "https://stackoverflow.com/questions/56924866/why-do-rust-mutexes-not-seem-to-give-the-lock-to-the-thread-that-wanted-to-lock/56925155#56925155", "title": "Why do Rust mutexes not seem to give the lock to the thread that wanted to lock it last?", "body": "<p><code>Mutex</code> and <code>RwLock</code> both defer to OS-specific primitives and cannot be guaranteed to be fair. On Windows, they are both implemented with <a href=\"https://docs.microsoft.com/en-us/windows/win32/sync/slim-reader-writer--srw--locks\" rel=\"noreferrer\">SRW locks</a> which are specifically documented as <em>not</em> fair. I didn't do research for other operating systems but you definitely cannot rely on fairness with <code>std::sync::Mutex</code>, especially if you need this code to be portable.</p>\n<p>A possible solution in Rust is the  <a href=\"https://amanieu.github.io/parking_lot/parking_lot/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> implementation provided by the <a href=\"https://crates.io/crates/parking_lot\" rel=\"noreferrer\"><code>parking_lot</code> crate</a>, which provides an <a href=\"https://amanieu.github.io/parking_lot/parking_lot/struct.MutexGuard.html#method.unlock_fair\" rel=\"noreferrer\"><code>unlock_fair</code> method</a>, which is implemented with a fair algorithm.</p>\n<p>From the <a href=\"https://amanieu.github.io/parking_lot/parking_lot/struct.MutexGuard.html#method.unlock_fair\" rel=\"noreferrer\"><code>parking_lot</code> documentation</a>:</p>\n<blockquote>\n<p>By default, mutexes are unfair and allow the current thread to re-lock the mutex before another has the chance to acquire the lock, even if that thread has been blocked on the mutex for a long time. This is the default because it allows much higher throughput as it avoids forcing a context switch on every mutex unlock. This can result in one thread acquiring a mutex many more times than other threads.</p>\n<p>However in some cases it can be beneficial to ensure fairness by forcing the lock to pass on to a waiting thread if there is one. This is done by using this method instead of dropping the <code>MutexGuard</code> normally.</p>\n</blockquote>\n<p>While <code>parking_lot::Mutex</code> doesn't claim to be fair without specifically using the <code>unlock_fair</code> method, I found that your code produced the same number of pings as pongs, by just making that switch (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a07874263df063e80ae88d6ffc7445a9\" rel=\"noreferrer\">playground</a>), not even using the <code>unlock_fair</code> method.</p>\n<p>Usually mutexes are unlocked automatically, when a guard goes out of scope. To make it unlock fairly, you need to insert this method call before the guard is dropped:</p>\n<pre><code>let b = thread::spawn(move || loop {\n    let mut data = data1.lock();\n    thread::sleep(ten_millis);\n    println!(&quot;pong &quot;);\n    *data += 1;\n    if *data &gt; 10 {\n        break;\n    }\n    MutexGuard::unlock_fair(data);\n});\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1562570697, "post_id": 56925412, "comment_id": 100401134, "body": "<i>Don&#39;t use two threads if you just want to do one thing then something else then the first thing again.</i> =&gt; Or put another way, use threads when the work is <i>parallelizable</i>. No point in using thread then serialize the work with a Mutex, you get worse performance than doing everything on one thread."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1562583861, "post_id": 56925412, "comment_id": 100407568, "body": "I&#39;m pretty sure it&#39;s just an exercise (or a homework) to get familiar with the concurrency primitives, so <code>do not use threads</code> is not a proper answer in that case."}, {"owner": {"reputation": 165665, "user_id": 721269, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/346ca03edfbde2a468adc289867ab975?s=128&d=identicon&r=PG", "display_name": "David Schwartz", "link": "https://stackoverflow.com/users/721269/david-schwartz"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1562601023, "post_id": 56925412, "comment_id": 100417273, "body": "@SvetlinZarev If it&#39;s an exercise, it&#39;s a bad exercise to do so early in one&#39;s understanding of threads because it doesn&#39;t use threads for something they&#39;re actually useful for. I have seen some unfortunate cases where people are assigned such things before they understand how to use threads properly and I think it&#39;s still extremely helpful to point out that the exercise is unrealistic and tends to lead to learning wrong things."}], "tags": [], "owner": {"reputation": 165665, "user_id": 721269, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/346ca03edfbde2a468adc289867ab975?s=128&d=identicon&r=PG", "display_name": "David Schwartz", "link": "https://stackoverflow.com/users/721269/david-schwartz"}, "is_accepted": false, "score": 4, "last_activity_date": 1562527425, "creation_date": 1562527425, "answer_id": 56925412, "question_id": 56924866, "link": "https://stackoverflow.com/questions/56924866/why-do-rust-mutexes-not-seem-to-give-the-lock-to-the-thread-that-wanted-to-lock/56925412#56925412", "title": "Why do Rust mutexes not seem to give the lock to the thread that wanted to lock it last?", "body": "<blockquote>\n  <p>I was of the belief that mutexes had some kind of way to determine who wanted to lock it last but it doesn\u2019t look like that\u2019s the case.</p>\n</blockquote>\n\n<p>Nope. The job of a mutex is just to make the code run as fast as possible. Alternation gives the worst performance because you're constantly blowing out the CPU caches. You are asking for the worst possible implementation of a mutex.</p>\n\n<blockquote>\n  <p>How does the locking actually work?</p>\n</blockquote>\n\n<p>The scheduler tries to get as much work done as possible. It's your job to write code that only does the work you really want to get done.</p>\n\n<blockquote>\n  <p>How can I get the desired output?</p>\n</blockquote>\n\n<p>Don't use two threads if you just want to do one thing then something else then the first thing again. Use threads when you don't care about the order in which work is done and just want to get as much work done as possible.</p>\n"}], "owner": {"reputation": 93, "user_id": 9994808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63cf51ef3d0a75a33c84e5bede64a413?s=128&d=identicon&r=PG&f=1", "display_name": "BlackLotus", "link": "https://stackoverflow.com/users/9994808/blacklotus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1542, "favorite_count": 2, "accepted_answer_id": 56925155, "answer_count": 3, "score": 8, "last_activity_date": 1564960391, "creation_date": 1562523389, "last_edit_date": 1564960391, "question_id": 56924866, "link": "https://stackoverflow.com/questions/56924866/why-do-rust-mutexes-not-seem-to-give-the-lock-to-the-thread-that-wanted-to-lock", "title": "Why do Rust mutexes not seem to give the lock to the thread that wanted to lock it last?", "body": "<p>I wanted to write a program that spawns two threads that lock a <code>Mutex</code>, increase it, print something, and then unlock the <code>Mutex</code> so the other thread can do the same. I added some sleep time to make it more consistent, so I thought the output should be something like: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ping pong ping pong \u2026  \n</code></pre>\n\n<p>but the actual output is pretty random. Most of the time, it is just </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ping ping ping \u2026 pong \n</code></pre>\n\n<p>But there's no consistency at all; sometimes there is a \u201cpong\u201d in the middle too. </p>\n\n<p>I was of the belief that mutexes had some kind of way to determine who wanted to lock it last but it doesn\u2019t look like that\u2019s the case. </p>\n\n<ol>\n<li>How does the locking actually work? </li>\n<li>How can I get the desired output? </li>\n</ol>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::{thread, time};\n\nfn main() {\n    let data1 = Arc::new(Mutex::new(1));\n    let data2 = data1.clone();\n    let ten_millis = time::Duration::from_millis(10);\n\n    let a = thread::spawn(move || loop {\n        let mut data = data1.lock().unwrap();\n        thread::sleep(ten_millis);\n        println!(\"ping \");\n        *data += 1;\n        if *data &gt; 10 {\n            break;\n        }\n    });\n\n    let b = thread::spawn(move || loop {\n        let mut data = data2.lock().unwrap();\n        thread::sleep(ten_millis);\n        println!(\"pong \");\n        *data += 1;\n        if *data &gt; 10 {\n            break;\n        }\n    });\n\n    a.join().unwrap();\n    b.join().unwrap();\n}\n</code></pre>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1562505925, "post_id": 56922289, "comment_id": 100387439, "body": "Couldn&#39;t the compiler optmize out <code>count_primes</code>? It seems to be a pure function and is called with the same parameters every iteration. It should also be possible to  compute x once at compile time."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1562506141, "post_id": 56922289, "comment_id": 100387489, "body": "@Jens That&#39;s a good point. It doesn&#39;t seem like it&#39;s optimized out, but yeah, I should fix that."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "edited": false, "score": 0, "creation_date": 1562506198, "post_id": 56922289, "comment_id": 100387507, "body": "Note for everyone: it seems like this is due to CPU frequency scaling and it doesn&#39;t happen on all machines. This is still not a full answer however and I hope someone could provide more information."}, {"owner": {"reputation": 105038, "user_id": 1766831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ee974306d2def46eb69534fbcf95cc5?s=128&d=identicon&r=PG", "display_name": "Rick James", "link": "https://stackoverflow.com/users/1766831/rick-james"}, "edited": false, "score": 0, "creation_date": 1566076542, "post_id": 56922289, "comment_id": 101544106, "body": "Eh?  <code>payload_duration += elapsed;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1562507971, "post_id": 56922611, "comment_id": 100387895, "body": "Thanks! The CPU frequency thing makes sense. Regarding the solution: instead of a busy thread I could probably just busy wait instead of sleeping in my main thread."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1562508058, "post_id": 56922611, "comment_id": 100387918, "body": "I have an additional question though (in case someone can answer this): according to <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.398.2413&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow noreferrer\">this paper</a> (if I understand it correctly) the latency to change between two CPU frequency is fairly low (&lt;100&#181;s). So I would expect the CPU to increase the frequency fairly quickly after my payload started. Why isn&#39;t that happening?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1562508351, "post_id": 56922611, "comment_id": 100387984, "body": "@LukasKalbertodt: It is not so easy. You seem to think that the CPU is going from 100% power to 0% and then to 100% again, and the time you lose is because of the latency in the switch. But while the latency in the switch is definitely a thing, your main issue is the frequency throttling, that is that the OS scheduler sees that your code is only e.g. 30% of the time busy, so it can reduce the CPU frequency to 30% of its maximum without losing overall performance, while saving a lot in power."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1562508461, "post_id": 56922611, "comment_id": 100388019, "body": "@LukasKalbertodt: In fact, in your graph you can read that the OS is actually trying to predict the time you are going to sleep, and go to the lowers power that makes you still sleep just a bit. Up to a maximum of course, the CPU frequency has a minimum limit."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1562508506, "post_id": 56922611, "comment_id": 100388031, "body": "I see. Is there any way to tell the OS to &quot;switch to full power now&quot;? Or some kind of related hint? In my real application, I care about latency so I really want my piece of code to execute as quickly as possible (but also want to sleep the remaining time)."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1562508658, "post_id": 56922611, "comment_id": 100388077, "body": "@LukasKalbertodt: Not that I know of, that is both reliable and cross-platform. Your most reliable option, which is also the easiest would be just to busy wait. Let me add the code to my answer."}, {"owner": {"reputation": 8075, "user_id": 2169853, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/68b89009f4066d3e1adbe72d4329c8d3?s=128&d=identicon&r=PG", "display_name": "Jens", "link": "https://stackoverflow.com/users/2169853/jens"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1562511210, "post_id": 56922611, "comment_id": 100388643, "body": "@LukasKalbertodt These settings are OS-specific. On Linux, you can <code>echo performance &gt; &#47;sys&#47;devices&#47;system&#47;cpu&#47;cpu*&#47;cpufreq&#47;scaling_governor</code>, on Windows you select something the power saving settings. There is also Turbo Boost which dynamically increases the max. frequency of a core if there is thermal budget. I would recommand to disable power scaling and turbo boost in the BIOS for benchmarking."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1562572249, "post_id": 56922611, "comment_id": 100401828, "body": "@LukasKalbertodt: I would also note that there are <i>other</i> reasons for core frequency to vary than throttling. On multi-cores CPUs, there&#39;s also scaling: that is, if a single core is in use, it can get to a higher frequency than if all cores are busy, for both power supply and heat dissipation reasons. Furthermore the use of specifically power-hungry instructions (such as AVX512) may also trigger this kind of frequency switch."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 9, "last_activity_date": 1562512418, "last_edit_date": 1562512418, "creation_date": 1562506325, "answer_id": 56922611, "question_id": 56922289, "link": "https://stackoverflow.com/questions/56922289/why-does-sleeping-increase-the-execution-time-of-an-independent-piece-of-code-th/56922611#56922611", "title": "Why does sleeping increase the execution time of an independent piece of code that is executed before/afterwards?", "body": "<p>I am quite sure that this is caused by the CPU throttling. When the OS scheduler detects there is little work to do, the CPU frequency lowers to save power.</p>\n\n<p>When you do a lot of <code>sleep</code>s, you are telling the scheduler that you are not in such a hurry, and the CPU can take it easy.</p>\n\n<p>You can see that this is the case by running a CPU intensive task in another window, with low priority. For example, in Linux you can run:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ nice bash -c 'while true ; do : ; done'\n</code></pre>\n\n<p>And at the same time, in another window run your program:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run --release\nloop_time 1.00ms    =&gt; 3.13ms\nloop_time 2.00ms    =&gt; 3.17ms\nloop_time 3.00ms    =&gt; 3.19ms\nloop_time 4.00ms    =&gt; 3.13ms\nloop_time 5.00ms    =&gt; 3.16ms\nloop_time 6.00ms    =&gt; 3.22ms\nloop_time 7.00ms    =&gt; 3.14ms\nloop_time 8.00ms    =&gt; 3.15ms\nloop_time 9.00ms    =&gt; 3.13ms\nloop_time 10.00ms   =&gt; 3.18ms\nloop_time 11.00ms   =&gt; 3.14ms\nloop_time 12.00ms   =&gt; 3.17ms\nloop_time 13.00ms   =&gt; 3.15ms\n...\n</code></pre>\n\n<p>Avoiding this depends on your OS. For example, in Linux, you can fiddle with <code>sys/devices/system/cpu/*</code> options. I think that <code>UPower</code> provides some functions to manage it from a non-root application. It would be nice if there were a crate that managed this cross-system, but I don't know of any.</p>\n\n<p>An easy but hacky way to fix this, if you don't mind the wasted power, is just to run an idle thread with a busy loop.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>std::thread::spawn(|| {\n    use thread_priority::*; //external crate thread-priority\n    let thread_id = thread_native_id();\n    set_thread_priority(\n        thread_id,\n        ThreadPriority::Min,\n        ThreadSchedulePolicy::Normal(NormalThreadSchedulePolicy::Idle),\n    )\n    .unwrap();\n    loop {}\n});\n</code></pre>\n\n<p>Naturally, if you just want to avoid throttling in this piece of code, you can do a busy wait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    //if loop_time &gt; elapsed {\n    //    std::thread::sleep(loop_time - elapsed);\n    //}\n    // Busy-wait the remaining time, to avoid CPU throttling\n    while loop_time &gt; before.elapsed() {\n        //you may want to try both with and without yield\n        std::thread::yield_now();\n    }\n</code></pre>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 1, "accepted_answer_id": 56922611, "answer_count": 1, "score": 17, "last_activity_date": 1562512418, "creation_date": 1562503676, "last_edit_date": 1562504415, "question_id": 56922289, "link": "https://stackoverflow.com/questions/56922289/why-does-sleeping-increase-the-execution-time-of-an-independent-piece-of-code-th", "title": "Why does sleeping increase the execution time of an independent piece of code that is executed before/afterwards?", "body": "<p>I noticed something really strange that I haven't seen before. The basic setup is described in this pseudo code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>TARGET_LOOP_TIME = X\n\nloop forever:\n    before = now()\n    payload()\n    payload_time = now() - before\n    sleep(TARGET_LOOP_TIME - payload_time)\n</code></pre>\n\n<p>This setup is fairly common, e.g. for keeping the loop at 60 FPS. The interesting part is: <strong>the <code>payload_time</code> depends on the sleep duration!</strong> If the <code>TARGET_LOOP_TIME</code> is high and the program will thus sleep a lot, the <code>payload_time</code> is way higher compared to when the program does not sleep at all.</p>\n\n<p>To measure this, I wrote this program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::{Duration, Instant};\n\nconst ITERS: usize = 100;\n\nfn main() {\n    // A dummy variable to prevent the compiler from removing the dummy prime\n    // code.\n    let mut x = 0;\n\n    // Iterate over different target loop times\n    for loop_time in (1..30).map(|n| Duration::from_millis(n)) {\n        let mut payload_duration = Duration::from_millis(0);\n\n        for _ in 0..ITERS {\n            let before = Instant::now();\n            x += count_primes(3_500);\n            let elapsed = before.elapsed();\n            payload_duration += elapsed;\n\n            // Sleep the remaining time\n            if loop_time &gt; elapsed {\n                std::thread::sleep(loop_time - elapsed);\n            }\n        }\n\n        let avg_duration = payload_duration / ITERS as u32;\n        println!(\"loop_time {:.2?}  \\t=&gt; {:.2?}\", loop_time, avg_duration);\n    }\n\n    println!(\"{}\", x);\n}\n\n/// Dummy function.\nfn count_primes(up_to: u64) -&gt; u64 {\n    (2..up_to)\n        .filter(|n| (2..n / 2).all(|d| n % d != 0))\n        .count() as u64\n}\n</code></pre>\n\n<p>I iterate over different target loop times to test (1ms to 30ms) and iterate for <code>ITERS</code> many times. I compiled this with <code>cargo run --release</code>. On my machine (Ubuntu), the program outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>loop_time 1.00ms    =&gt; 3.37ms\nloop_time 2.00ms    =&gt; 3.38ms\nloop_time 3.00ms    =&gt; 3.17ms\nloop_time 4.00ms    =&gt; 3.25ms\nloop_time 5.00ms    =&gt; 3.38ms\nloop_time 6.00ms    =&gt; 4.05ms\nloop_time 7.00ms    =&gt; 4.09ms\nloop_time 8.00ms    =&gt; 4.48ms\nloop_time 9.00ms    =&gt; 4.43ms\nloop_time 10.00ms   =&gt; 4.22ms\nloop_time 11.00ms   =&gt; 4.59ms\nloop_time 12.00ms   =&gt; 5.53ms\nloop_time 13.00ms   =&gt; 5.82ms\nloop_time 14.00ms   =&gt; 6.18ms\nloop_time 15.00ms   =&gt; 6.32ms\nloop_time 16.00ms   =&gt; 6.96ms\nloop_time 17.00ms   =&gt; 8.00ms\nloop_time 18.00ms   =&gt; 7.97ms\nloop_time 19.00ms   =&gt; 8.28ms\nloop_time 20.00ms   =&gt; 8.75ms\nloop_time 21.00ms   =&gt; 9.70ms\nloop_time 22.00ms   =&gt; 9.57ms\nloop_time 23.00ms   =&gt; 10.48ms\nloop_time 24.00ms   =&gt; 10.29ms\nloop_time 25.00ms   =&gt; 10.31ms\nloop_time 26.00ms   =&gt; 10.82ms\nloop_time 27.00ms   =&gt; 10.84ms\nloop_time 28.00ms   =&gt; 10.82ms\nloop_time 29.00ms   =&gt; 10.91ms\n</code></pre>\n\n<p>I made a plot of those numbers (the <code>sleep_time</code> is <code>max(0, loop_time - avg_duration)</code>):</p>\n\n<p><a href=\"https://i.stack.imgur.com/AbvrL.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/AbvrL.png\" alt=\"enter image description here\"></a></p>\n\n<p>When the program does not sleep at all, the payload needs approximately 3.3ms (as the first three measurements show). As soon as the loop starts to sleep after the payload, the payload duration rises! In fact, it increases to roughly 10.5ms where it stays. Sleeping even longer does not increase the payload time.</p>\n\n<p><strong>Why? Why does the execution time of the piece of code depend on something I do afterwards (or before)?</strong> That does not make sense to me! It looks like the CPU says \"I'm gonna sleep afterwards anyway, so let's take it slowly\". I thought about caching effects, especially of the instruction cache, but loading instruction data from the main memory does not take 7ms! Something else is going on here!</p>\n\n<p>Is there a way to fix this? I.e. to make the payload execute as quickly as possible regardless of sleep time?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562498656, "post_id": 56921637, "comment_id": 100385726, "body": "why do you want keep them you know they are space."}, {"owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562498813, "post_id": 56921637, "comment_id": 100385759, "body": "The space is just an example. I will actually be matching other characters/sequences. I&#39;ll edit the question to clarify."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1562499805, "post_id": 56921637, "comment_id": 100385996, "body": "The duplicate isn&#39;t an exact match, since it does not use the <code>regex</code> crate. I believe in this case your best option is to use <code>find_iter()</code> to either find all separators and their start and stop indices, or to extend the regex to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cac108acfeb2a61a6c2293c47e8082c6\" rel=\"nofollow noreferrer\">match either a separator or or the text between the separators</a>. (I would add this as an answer, but it doesn&#39;t really fit for the dupe, so I&#39;ll leave it as comment.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1562513970, "post_id": 56921637, "comment_id": 100389323, "body": "@SvenMarnach in the future, feel free to edit the question to make it a distinctly clear duplicate. You can also @-mention me directly if I did the closing / editing. It&#39;s reopened now."}], "answers": [{"comments": [{"owner": {"reputation": 723, "user_id": 8870055, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f6d6d04397d9ac02cbb810026c86f0d1?s=128&d=identicon&r=PG&f=1", "display_name": "stuart", "link": "https://stackoverflow.com/users/8870055/stuart"}, "edited": false, "score": 0, "creation_date": 1580938267, "post_id": 56923739, "comment_id": 106266839, "body": "i&#39;m getting <code>error[E0277]: expected a std::ops::Fn&lt;(char,)&gt; closure, found regex::re_unicode::Regex</code> in <code>split_keep</code> at <code>text.match_indices(r)</code> in rust 1.42.0-nightly and 1.40"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 723, "user_id": 8870055, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f6d6d04397d9ac02cbb810026c86f0d1?s=128&d=identicon&r=PG&f=1", "display_name": "stuart", "link": "https://stackoverflow.com/users/8870055/stuart"}, "edited": false, "score": 1, "creation_date": 1580938456, "post_id": 56923739, "comment_id": 106266910, "body": "@stuart to verify, did you follow the numerous warnings at the top of the answer about enabling the <code>pattern</code> feature?"}, {"owner": {"reputation": 723, "user_id": 8870055, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f6d6d04397d9ac02cbb810026c86f0d1?s=128&d=identicon&r=PG&f=1", "display_name": "stuart", "link": "https://stackoverflow.com/users/8870055/stuart"}, "edited": false, "score": 0, "creation_date": 1580954236, "post_id": 56923739, "comment_id": 106270940, "body": "ah, it works with this in <code>Cargo.toml</code> despite the flood of vscode warnings it triggers <code>regex = { version = &quot;1.1.8&quot;, features = [&quot;pattern&quot;] }</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1562514697, "creation_date": 1562514697, "answer_id": 56923739, "question_id": 56921637, "link": "https://stackoverflow.com/questions/56921637/how-do-i-split-a-string-using-a-rust-regex-and-keep-the-delimiters/56923739#56923739", "title": "How do I split a string using a Rust regex and keep the delimiters?", "body": "<p>As documented on the <a href=\"https://docs.rs/regex/1.1.9/regex/struct.Regex.html\" rel=\"noreferrer\"><code>Regex</code></a> type:</p>\n\n<blockquote>\n  <h1>Using the <code>std::str::pattern</code> methods with <code>Regex</code></h1>\n  \n  <blockquote>\n    <p><strong>Note</strong>: This section requires that this crate is compiled with the\n    <code>pattern</code> Cargo feature enabled, which <strong>requires nightly Rust</strong>.</p>\n  </blockquote>\n  \n  <p>Since <code>Regex</code> implements <code>Pattern</code>, you can use regexes with methods\n  defined on <code>&amp;str</code>. For example, <code>is_match</code>, <code>find</code>, <code>find_iter</code>\n  and <code>split</code> can be replaced with <code>str::contains</code>, <code>str::find</code>,\n  <code>str::match_indices</code> and <code>str::split</code>.</p>\n</blockquote>\n\n<p>Using the <code>pattern</code> feature, you can use the techniques described in <a href=\"https://stackoverflow.com/q/32257273/155423\">Split a string keeping the separators</a>:</p>\n\n<pre><code>use regex::Regex; // 1.1.8\n\nfn split_keep&lt;'a&gt;(r: &amp;Regex, text: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut result = Vec::new();\n    let mut last = 0;\n    for (index, matched) in text.match_indices(r) {\n        if last != index {\n            result.push(&amp;text[last..index]);\n        }\n        result.push(matched);\n        last = index + matched.len();\n    }\n    if last &lt; text.len() {\n        result.push(&amp;text[last..]);\n    }\n    result\n}\n\nfn main() {\n    let seperator = Regex::new(r\"([ ,.]+)\").expect(\"Invalid regex\");\n    let splits = split_keep(&amp;seperator, \"this... is a, test\");\n    for split in splits {\n        println!(\"\\\"{}\\\"\", split);\n    }\n}\n</code></pre>\n\n<p>This also gives you a hint on how to transform the code to not require nightly Rust:</p>\n\n<blockquote>\n  <p>For example, [...] <code>find_iter</code> [...] can be replaced with [...] <code>str::match_indices</code></p>\n</blockquote>\n\n<p>Apply the reverse transformation to use stable <code>Regex</code> methods.</p>\n"}], "owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3053, "favorite_count": 0, "accepted_answer_id": 56923739, "answer_count": 1, "score": 5, "last_activity_date": 1562514697, "creation_date": 1562497910, "last_edit_date": 1562513910, "question_id": 56921637, "link": "https://stackoverflow.com/questions/56921637/how-do-i-split-a-string-using-a-rust-regex-and-keep-the-delimiters", "title": "How do I split a string using a Rust regex and keep the delimiters?", "body": "<p>I have a string that is separated by a delimiter. I want to split this string using regex and keep the delimiters.</p>\n\n<p>My current code is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use regex::Regex; // 1.1.8\n\nfn main() {\n    let seperator = Regex::new(r\"([ ,.]+)\").expect(\"Invalid regex\");\n    let splits: Vec&lt;_&gt; = seperator.split(\"this... is a, test\").into_iter().collect();\n    for split in splits {\n        println!(\"\\\"{}\\\"\", split);\n    }\n}\n</code></pre>\n\n<p>The output of which is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"this\"\n\"is\"\n\"a\"\n\"test\"\n</code></pre>\n\n<p>I would like to keep the separators (in this case the space characters), the output I would like to see is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"this\"\n\"... \"\n\"is\"\n\" \"\n\"a\"\n\", \"\n\"test\"\n</code></pre>\n\n<p>How can I, if at all possible, achieve such behavior with <a href=\"https://docs.rs/regex/1.1.6/regex/\" rel=\"nofollow noreferrer\">regex</a>?</p>\n\n<p>This is different from <a href=\"https://stackoverflow.com/q/32257273/155423\">Split a string keeping the separators</a>, which uses the standard library and not the regex crate.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1562495904, "post_id": 56921098, "comment_id": 100385207, "body": "Even if you manage to solve this particular problem, your approach will always be brittle. Cargo tries to use only one instance of a crate in a dependency graph whenever the constraints allow, and the required features are simply merged. So if there is one crate in your dependency graph depending on your crate with feature <code>A</code>, and a different, unrelated crate depending on a compatible version with feature <code>B</code>, Cargo will merge these two into a single dependency with both features enabled. Features are simply not intended to be used this way, and I suggest you rethink this design."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1562498830, "creation_date": 1562498830, "answer_id": 56921734, "question_id": 56921098, "link": "https://stackoverflow.com/questions/56921098/cargo-build-package-with-conflicting-features-from-the-same-git-repository/56921734#56921734", "title": "Cargo build package with conflicting features from the same git repository?", "body": "<p>Cargo features allow to mark parts of the code as <em>optional</em>, mainly to allow making some of the dependencies of a library optional. They are not meant to be used as a general software configuration mechanism.</p>\n\n<p>In the situation you describe, I suggest splitting up your crate into three crates: One with the base functionality, one for feature <code>A</code> and one for feature <code>B</code>. You can keep these three crates in a single Cargo workspace and a single Git repository. Dependent crates can then choose what parts they would like to dependent on, and Cargo will resolve this as intended even for larger dependency graphs with multiple instances of your crate.</p>\n"}], "owner": {"reputation": 440, "user_id": 2768367, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/91d15b11e97117ece95e6980a499c063?s=128&d=identicon&r=PG&f=1", "display_name": "oleiba", "link": "https://stackoverflow.com/users/2768367/oleiba"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 0, "accepted_answer_id": 56921734, "answer_count": 1, "score": 3, "last_activity_date": 1562498830, "creation_date": 1562493490, "question_id": 56921098, "link": "https://stackoverflow.com/questions/56921098/cargo-build-package-with-conflicting-features-from-the-same-git-repository", "title": "Cargo build package with conflicting features from the same git repository?", "body": "<p>I have a git repository (not crates.io) which has different features, let\u2019s call them A and B, which are mutually exclusive - the two features expose structs and API of the same names, hence compiling both naively will result in conflicts and fail.</p>\n\n<p>As a developer of a dependant package, I want to use both features.\nI can use aliasing. It fails if I use the same git repository url, but it works if in Cargo.toml I use two different git repositories:</p>\n\n<pre><code>[dependencies]\nmy_package_A = {package = \"my_package\", git = \"/first/url\", features = [\"A\"]}\nmy_package_B = {package = \"my_package\", git = \"/second/url\", features = [\"B\"]}\n</code></pre>\n\n<p>I want to avoid forking my repository to a different url.\nIs there a way to do that?</p>\n"}, {"tags": ["json", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562487964, "post_id": 56920063, "comment_id": 100383525, "body": "your question could be better with a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 3805709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb1c9edbe8995c3ef5a00f8ddfd7ac43?s=128&d=identicon&r=PG&f=1", "display_name": "firepebble", "link": "https://stackoverflow.com/users/3805709/firepebble"}, "edited": false, "score": 0, "creation_date": 1562490674, "post_id": 56920476, "comment_id": 100384065, "body": "Perfect! I looked at the flatten and didn&#39;t understand its usefulness!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1562499606, "last_edit_date": 1562499606, "creation_date": 1562487943, "answer_id": 56920476, "question_id": 56920063, "link": "https://stackoverflow.com/questions/56920063/deserialize-json-when-structure-known-but-not-the-keys/56920476#56920476", "title": "Deserialize JSON when structure known but not the keys", "body": "<p>The <a href=\"https://serde.rs/attr-flatten.html#capture-additional-fields\" rel=\"nofollow noreferrer\">doc</a> has a related example. You need to put the <code>HashMap</code> and use <code>flatten</code> attribute:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Deserialize)]\nstruct RecvBalance {\n    timestamp: String,\n    username: String,\n    #[serde(flatten)]\n    moneys: HashMap&lt;String, RecvBalanceData&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 3805709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb1c9edbe8995c3ef5a00f8ddfd7ac43?s=128&d=identicon&r=PG&f=1", "display_name": "firepebble", "link": "https://stackoverflow.com/users/3805709/firepebble"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 443, "favorite_count": 0, "accepted_answer_id": 56920476, "answer_count": 1, "score": -1, "last_activity_date": 1562499787, "creation_date": 1562483441, "last_edit_date": 1562499787, "question_id": 56920063, "link": "https://stackoverflow.com/questions/56920063/deserialize-json-when-structure-known-but-not-the-keys", "title": "Deserialize JSON when structure known but not the keys", "body": "<p>I am trying to deserialize some crypto exchange JSON. The structure of the JSON is predictable but the keys are not. Each time the server adds a new currency it becomes a new key. For example, it looks something like this:</p>\n\n<pre><code>{\n  \"timestamp\":\"1562405\",\n  \"username\":\"1234\",\n  \"BTC\":\n    {\"available\":\"0.00\",\"orders\":\"0.00000000\"},\n  \"BCH\":\n    {\"available\":\"0.0000000\",\"orders\":\"0.00000000\"},\n  ..\n\n  ..\n\n  \"GUSD\":\n    {\"available\":\"0.00\",\"orders\":\"0.00\"}\n}\n</code></pre>\n\n<p>I tried the usual approach of defining a struct to deserialize into but every time there is a new currency my program will have an error.</p>\n\n<p>I thought I would just read it all into a <code>Value</code> and then just iterate over it manually to put it all into a struct.</p>\n\n<pre><code>let balance_data: Value = serde_json::from_str(&amp;String::from_utf8_lossy(&amp;body)).unwrap();\nprintln!(\"balance_data: {:?}\", balance__data);\n\nfor element in balance_data.iter() {\n    //push into a proper map...\n}\n</code></pre>\n\n<p>But I can't:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>no method named `iter` found for type `serde_json::Value`.\n</code></pre>\n\n<p>I thought I would put it into a <code>Vec&lt;Value&gt;</code> but this causes a panic:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called ``Result::unwrap()` on an `Err` value: Error(\"invalid type: map, expected a sequence\", line: 1, column: 0)'`\n</code></pre>\n\n<p>I also experimented with reading it into a <code>HashMap</code> but couldn't quite seem to crack it.</p>\n\n<p>It would be amazing if we could do something like:</p>\n\n<pre><code>let balance_data: RecvBalance = serde_json::from_str(&amp;String::from_utf8_lossy(&amp;body)).unwrap();\n\n#[derive(Debug, Deserialize)]\nstruct RecvBalance {\n    timestamp: String,\n    username: String,\n    HashMap&lt;String, RecvBalanceData&gt;,\n}\n\n#[derive(Debug, Deserialize)]\nstruct RecvBalanceData {\n    available: String,\n    orders: String,\n}\n</code></pre>\n\n<p>Has anyone dealt with this situation? I need a struct with the balance data in it that I can lookup later in my program.</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562460747, "post_id": 56918625, "comment_id": 100379912, "body": "just remove <code>Ok(())</code> and the last <code>;</code>, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0307fa47b87e7157b360d23469db4e4b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, BTW tokio is quite hard not the best way to learn rust"}, {"owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562461435, "post_id": 56918625, "comment_id": 100379981, "body": "Thanks! In that case, what do I do if want to do it conditionally. For example, see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9307ebca83ea3d9c804e7f501b23561d\" rel=\"nofollow noreferrer\">this code</a>. Does tokio support conditionally not returning a future? I feel like making a new futures map is not the correct approach."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1562462103, "post_id": 56918625, "comment_id": 100380049, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=324ab47d35ec7f332469b6ee0d2de931\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, &quot;I feel like making a new futures map is not the correct approach&quot; there is a lot of way and I&#39;m clearly not a expert in tokio."}, {"owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562463697, "post_id": 56918625, "comment_id": 100380195, "body": "Nice that worked :D I agree, Tokio seems like no more than a rather unintuitive stepping stone to native async. I hope the core Rust team go in a different direction."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562463973, "post_id": 56918625, "comment_id": 100380224, "body": "async and away are still a work in progress, future is now stable <a href=\"https://blog.rust-lang.org/2019/07/04/Rust-1.36.0.html#the-future-is-here\" rel=\"nofollow noreferrer\">blog.rust-lang.org/2019/07/04/&hellip;</a>. You could try to use away and async in nightly mode see <a href=\"https://stackoverflow.com/a/52835926/7076153\">stackoverflow.com/a/52835926/7076153</a>"}], "answers": [{"comments": [{"owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "edited": false, "score": 0, "creation_date": 1562568606, "post_id": 56921941, "comment_id": 100400193, "body": "This answer changes what the code does, I don&#39;t want to write back to the socket. The sender I&#39;m using is from tokio itself, so why is sender.send a blocking call? There must be a way to put something in a channel asynchronously. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "edited": false, "score": 0, "creation_date": 1562586705, "post_id": 56921941, "comment_id": 100408954, "body": "@DanielPorteous yep, I got mixed up between the socket and the channel, sorry! Even worse, I thought that <code>send</code> method was on the socket (even though it only exists on a <code>UdpSocket</code>, not <code>TcpStream</code> and this isn&#39;t even a standard library <code>TcpStream</code> but a Tokio <code>TcpStream</code>...). This <code>send</code> method is the one from the <a href=\"https://docs.rs/tokio/0.1.22/tokio/sync/mpsc/struct.Sender.html\" rel=\"nofollow noreferrer\"><code>Sender</code></a> trait, so it <i>is</i> indeed asynchronous. However, there are methods on types from Futures / Tokio that are blocking, so we can&#39;t just assume they are good to use."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1562586465, "last_edit_date": 1562586465, "creation_date": 1562500590, "answer_id": 56921941, "question_id": 56918625, "link": "https://stackoverflow.com/questions/56918625/how-to-handle-unused-futuresmaperr-warning/56921941#56921941", "title": "How to handle `unused futures::MapErr` warning?", "body": "<p>The same way as <em>any</em> \"unused\" warning: either use the value or delete it.</p>\n\n<p>Here, use <code>tokio::write_all</code> to write the first byte to the socket, returning a new future. This is called in an <code>and_then</code> combinator:</p>\n\n<pre><code>use std::net::SocketAddr;\nuse tokio::sync::mpsc::{channel, Receiver, Sender}; // 0.1.22\nuse tokio::{net::TcpListener, prelude::*}; // 0.1.22\n\nfn main() {\n    let addr = \"127.0.0.1:8118\".parse::&lt;SocketAddr&gt;().unwrap();\n    let listener = TcpListener::bind(&amp;addr).expect(\"unable to bind\");\n    let (sender, _): (Sender&lt;char&gt;, Receiver&lt;char&gt;) = channel(64);\n\n    tokio::run({\n        listener\n            .incoming()\n            .and_then(|s| tokio::io::read_to_end(s, vec![]))\n            .map_err(|e| panic!(\"failed: {:?}\", e))\n            .inspect(|(_socket, buf)| println!(\"Received: {:#?}\", buf))\n            .and_then(move |(_socket, buf)| {\n                let c = buf[0] as char;\n                sender.clone().send(c).map_err(|e| panic!(\"failed: {:?}\", e))\n            })\n            .for_each(|_| Ok(()))\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1562586465, "creation_date": 1562460145, "last_edit_date": 1562500033, "question_id": 56918625, "link": "https://stackoverflow.com/questions/56918625/how-to-handle-unused-futuresmaperr-warning", "title": "How to handle `unused futures::MapErr` warning?", "body": "<p>Consider this code snippet:</p>\n\n<pre><code>use std::net::SocketAddr;\nuse tokio::sync::mpsc::{channel, Receiver, Sender}; // 0.1.22\nuse tokio::{net::TcpListener, prelude::*}; // 0.1.22\n\nfn main() {\n    let addr = \"127.0.0.1:8118\".parse::&lt;SocketAddr&gt;().unwrap();\n    let listener = TcpListener::bind(&amp;addr).expect(\"unable to bind\");\n    let (sender, _): (Sender&lt;char&gt;, Receiver&lt;char&gt;) = channel(64);\n\n    tokio::run(\n        listener\n            .incoming()\n            .and_then(|s| tokio::io::read_to_end(s, vec![]))\n            .map_err(|e| panic!(\"failed: {:?}\", e))\n            .for_each(move |(_socket, buf)| {\n                let s = sender.clone();\n                println!(\"Received: {:#?}\", buf);\n                let c = buf[0] as char;\n                s.send(c).map_err(|e| panic!(\"failed: {:?}\", e));\n                Ok(())\n            }),\n    );\n}\n</code></pre>\n\n<p>When building, I get this warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused `futures::future::map_err::MapErr` that must be used\n  --&gt; src/main.rs:19:17\n   |\n19 |                 s.send(c).map_err(|e| panic!(\"failed: {:?}\", e));\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unused_must_use)] on by default\n   = note: futures do nothing unless polled\n</code></pre>\n\n<p>I assume I have to do something Tokio / async related, but I can't figure out what. I assumed that <code>tokio::run</code> would handle all of the future related problems by running the code block within in the event loop, but it doesn't seem like it. Do I need to do something special in this case?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d72625f6634ab06ad5efbf6f35b9b525\" rel=\"nofollow noreferrer\">Playground link</a>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562502047, "post_id": 56918640, "comment_id": 100386541, "body": "<a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1562465740, "last_edit_date": 1562465740, "creation_date": 1562460573, "answer_id": 56918640, "question_id": 56918420, "link": "https://stackoverflow.com/questions/56918420/how-can-i-write-a-boxed-closure-which-mutates-a-reference-to-a-struct/56918640#56918640", "title": "How can I write a boxed closure which mutates a reference to a struct?", "body": "<p>You need to bound a lifetime to your closure because you borrow something aka <code>&amp;mut self</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Callback&lt;'a, T&gt; = Box&lt;dyn FnMut(&amp;T) -&gt; () + 'a&gt;;\n\n#[derive(Debug)]\nstruct Foo {\n    name: String,\n}\n\nimpl Foo {\n    fn name_updater(&amp;mut self) -&gt; Callback&lt;str&gt; {\n        Box::new(move |new_name| {\n            self.name.replace_range(.., new_name);\n        })\n    }\n}\n\nfn main() {\n    let mut foo = Foo {\n        name: String::from(\"foo\"),\n    };\n\n    foo.name_updater()(\"bar\");\n\n    println!(\"{:?}\", foo);\n}\n</code></pre>\n\n<hr>\n\n<p>Also note that you don't need to use a box:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Foo {\n    name: String,\n}\n\nimpl Foo {\n    fn name_updater&lt;'a&gt;(&amp;'a mut self) -&gt; impl FnMut(&amp;str) -&gt; () + 'a {\n        move |new_name| {\n            self.name.replace_range(.., new_name);\n        }\n    }\n}\n\nfn main() {\n    let mut foo = Foo {\n        name: String::from(\"foo\"),\n    };\n\n    foo.name_updater()(\"bar\");\n\n    println!(\"{:?}\", foo);\n}\n</code></pre>\n"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 1, "accepted_answer_id": 56918640, "answer_count": 1, "score": 2, "last_activity_date": 1562511339, "creation_date": 1562456921, "last_edit_date": 1562511339, "question_id": 56918420, "link": "https://stackoverflow.com/questions/56918420/how-can-i-write-a-boxed-closure-which-mutates-a-reference-to-a-struct", "title": "How can I write a boxed closure which mutates a reference to a struct?", "body": "<p>I have some code that looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Callback&lt;T&gt; = Box&lt;Fn(&amp;T) -&gt; ()&gt;;\n\nstruct Foo {\n    name: String,\n}\n\nimpl Foo {\n    fn name_updater(&amp;mut self) -&gt; Callback&lt;String&gt; {\n        Box::new(|new_name| {\n            self.name = *new_name;\n        })\n    }\n}\n</code></pre>\n\n<p>This code doesn't compile because the closure requires the static lifetime. However I'm unsure if this will resolve the question and because there aren't explicit lifetimes, it's not immediately clear to me what I'd need to do to resolve that.</p>\n\n<p>Here is an example of the compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/lib.rs:9:9\n   |\n9  | /         Box::new(|new_name| {\n10 | |             self.name = *new_name;\n11 | |         })\n   | |__________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 8:5...\n  --&gt; src/lib.rs:8:5\n   |\n8  | /     fn name_updater(&amp;mut self) -&gt; Callback&lt;String&gt; {\n9  | |         Box::new(|new_name| {\n10 | |             self.name = *new_name;\n11 | |         })\n12 | |     }\n   | |_____^\nnote: ...so that the type `[closure@src/lib.rs:9:18: 11:10 self:&amp;mut &amp;mut Foo]` will meet its required lifetime bounds\n  --&gt; src/lib.rs:9:9\n   |\n9  | /         Box::new(|new_name| {\n10 | |             self.name = *new_name;\n11 | |         })\n   | |__________^\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r std::string::String) + 'static)&gt;\n              found std::boxed::Box&lt;dyn for&lt;'r&gt; std::ops::Fn(&amp;'r std::string::String)&gt;\n</code></pre>\n\n<p>How can I write a closure that is capable of mutating the struct's <code>name</code> property?</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 15204, "user_id": 453271, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/G7rcK.png?s=128&g=1", "display_name": "Andriy Tylychko", "link": "https://stackoverflow.com/users/453271/andriy-tylychko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 34, "favorite_count": 0, "closed_date": 1562499894, "answer_count": 0, "score": 1, "last_activity_date": 1562459736, "creation_date": 1562456238, "question_id": 56918363, "link": "https://stackoverflow.com/questions/56918363/how-to-avoid-moving-the-key-with-hashmap-entry-or-insert-idiom-if-the-entry-alre", "closed_reason": "Duplicate", "title": "How to avoid moving the key with HashMap entry/or_insert idiom if the entry already exists?", "body": "<pre><code>hash_map.entry(key).or_insert(value);\n</code></pre>\n\n<p>The <code>key</code> is moved, so I need to clone it if I'd like to use it again. If such entry already exists the clone will be immediately dropped. How can I avoid cloning in such case?</p>\n"}, {"tags": ["rust", "deprecated", "rust-cargo", "conditional-compilation"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1562452128, "post_id": 56917787, "comment_id": 100378819, "body": "Presumably you want to introduce a warning and then some time later, increment the semver and remove the feature completely, so it&#39;s a hard error. There isn&#39;t really a nice way to do it. A very clumsy approach is to use the feature to enable some code that will trigger a warning. You won&#39;t have much control over how that warning looks though. There is the <a href=\"https://doc.rust-lang.org/nightly/proc_macro/struct.Diagnostic.html\" rel=\"nofollow noreferrer\">Diagnostics API</a>, which can probably do what you need via a procedural macro, but it is not yet stable."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 1, "last_activity_date": 1563965507, "last_edit_date": 1563965507, "creation_date": 1563964767, "answer_id": 57180959, "question_id": 56917787, "link": "https://stackoverflow.com/questions/56917787/how-to-correctly-deprecate-a-crate-feature/57180959#57180959", "title": "How to correctly deprecate a crate feature", "body": "<p>You can put this on functions that previously depended on this feature:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg_attr(feature = \"unwanted\", deprecated(note = \"don't use the feature\"))]\n</code></pre>\n\n<p>This will show a warning only if that feature has been enabled. However, the warning will be slightly misleading, as it will point to the function.</p>\n\n<p>When you completely remove the feature, you should increase the major version.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1563965507, "creation_date": 1562448436, "question_id": 56917787, "link": "https://stackoverflow.com/questions/56917787/how-to-correctly-deprecate-a-crate-feature", "title": "How to correctly deprecate a crate feature", "body": "<p>I have a crate that up to now had a feature that will no longer be needed. I'd like to deprecate it, but have no idea how.</p>\n\n<p>My plan so far is to make it a default feature first, but then what?</p>\n"}, {"tags": ["rust", "clap"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1562452517, "post_id": 56917706, "comment_id": 100378887, "body": "If the verbosity is an issue, perhaps you could try the <a href=\"https://crates.io/crates/structopt\" rel=\"nofollow noreferrer\">structopt crate</a> instead. It will parse into a struct so you don&#39;t have to do any work to check if values are present etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562500861, "post_id": 56917706, "comment_id": 100386242, "body": "<a href=\"https://stackoverflow.com/q/43211180/155423\">Is there a way to use custom patterns such as a regex or functions in a match?</a>"}, {"owner": {"reputation": 103, "user_id": 5923263, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c569659f2dc94fa6520735b7b8b0045f?s=128&d=identicon&r=PG&f=1", "display_name": "wfehrn", "link": "https://stackoverflow.com/users/5923263/wfehrn"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1562530560, "post_id": 56917706, "comment_id": 100393288, "body": "@PeterHall The structopt crate is a great find. Thank you."}], "owner": {"reputation": 103, "user_id": 5923263, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c569659f2dc94fa6520735b7b8b0045f?s=128&d=identicon&r=PG&f=1", "display_name": "wfehrn", "link": "https://stackoverflow.com/users/5923263/wfehrn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1562500823, "creation_date": 1562447678, "last_edit_date": 1562500823, "question_id": 56917706, "link": "https://stackoverflow.com/questions/56917706/is-it-possible-to-match-on-claps-argmatches-type", "title": "Is it possible to match on clap&#39;s ArgMatches type?", "body": "<p>Is it possible to match on clap's <code>ArgMatches</code> type like</p>\n\n<pre><code>match matches {\n   \"arg1\" =&gt; doSomething(),\n   \"arg2\" =&gt; doSomethingElse(),\n   // ...\n}\n</code></pre>\n\n<p>or must one use the syntax described in the documentation</p>\n\n<pre><code>if matches.is_present(\"arg1\") {\n    doSomething();\n} else if matches.is_present(\"arg2\") {\n    doSomethingElse();\n}\n</code></pre>\n\n<p>I find the second form much wordier than even a case statement.</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562433892, "post_id": 56916161, "comment_id": 100375205, "body": "<i>some way to put to put my socket in blocking mode</i> \u2014 perhaps you don&#39;t want to use Tokio, where the entire purpose of it&#39;s existence is to allow asynchronous IO..."}, {"owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562434021, "post_id": 56916161, "comment_id": 100375237, "body": "I don&#39;t want the IO to block the rest of the application, so I want async or threading. More concretely, the server should be able to sit there and listen for stuff (later adding it to a channel) while the rest of the server continues to do stuff."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1562434833, "creation_date": 1562434833, "answer_id": 56916323, "question_id": 56916161, "link": "https://stackoverflow.com/questions/56916161/how-to-deal-with-wouldblock-error-with-a-tokio-tcplistener/56916323#56916323", "title": "How to deal with WouldBlock error with a Tokio TcpListener?", "body": "<p>You are using Tokio, a library where the entire purpose is to enable asynchronous IO. You <em>never</em> want to perform blocking operations in the asynchronous event loop.</p>\n\n<p>Instead, either go all-in on async or avoid it completely and use simpler, coarser threads.</p>\n\n<p>Tokio's <a href=\"https://docs.rs/tokio/0.1.22/tokio/io/fn.read_to_end.html\" rel=\"nofollow noreferrer\"><code>io::read_to_end</code></a> creates a future that is capable of reading all the data from a socket:</p>\n\n<pre><code>use std::net::SocketAddr;\nuse tokio::{net::TcpListener, prelude::*}; // 0.1.22\n\nfn main() {\n    let addr = \"127.0.0.1:8118\".parse::&lt;SocketAddr&gt;().unwrap();\n    let listener = TcpListener::bind(&amp;addr).expect(\"unable to bind TCP listener\");\n\n    tokio::run(\n        listener\n            .incoming()\n            .and_then(|s| tokio::io::read_to_end(s, vec![]))\n            .map_err(|e| panic!(\"failed: {:?}\", e))\n            .for_each(|(_socket, buf)| {\n                println!(\"Received: {:#?}\", buf);\n                Ok(())\n            }),\n    );\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33557375/155423\">How do I prevent TcpStream from blocking on a read?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49886603/155423\">Why would the first write to Mio&#39;s TcpStream after accepting give an &quot;operation would block&quot; error?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52465480/155423\">What is the standard way to get a Rust thread out of blocking operations?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48735952/155423\">Why does Future::select choose the future with a longer sleep period first?</a></li>\n</ul>\n"}], "owner": {"reputation": 3146, "user_id": 3846032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/lgCDn.png?s=128&g=1", "display_name": "Daniel Porteous", "link": "https://stackoverflow.com/users/3846032/daniel-porteous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 0, "accepted_answer_id": 56916323, "answer_count": 1, "score": 0, "last_activity_date": 1562434894, "creation_date": 1562433152, "last_edit_date": 1562434894, "question_id": 56916161, "link": "https://stackoverflow.com/questions/56916161/how-to-deal-with-wouldblock-error-with-a-tokio-tcplistener", "title": "How to deal with WouldBlock error with a Tokio TcpListener?", "body": "<p>Consider the following code:</p>\n\n<pre><code>extern crate tokio; // Executor runtime\n\nuse tokio::prelude::*;\nuse tokio::net::TcpListener;\nuse std::net::SocketAddr;\n\nfn main() {\n    let addr = \"127.0.0.1:8118\".parse::&lt;SocketAddr&gt;().unwrap();\n    let listener = TcpListener::bind(&amp;addr)\n        .expect(\"unable to bind TCP listener\");\n    tokio::run(listener.incoming()\n        .map_err(|e| eprintln!(\"failed to accept socket; error = {:?}\", e))\n        .for_each(|mut socket| {\n            let mut buf = vec![];\n            socket.read_to_end(&amp;mut buf).unwrap();\n            println!(\"Received: {:#?}\", buf);\n            Ok(())\n        })\n    );\n}\n</code></pre>\n\n<p>When I run this and send something to port 8118 I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'tokio-runtime-worker-0' panicked at 'called `Result::unwrap()` on an `Err` value: Kind(WouldBlock)', src/libcore/result.rs:997:5\n</code></pre>\n\n<p>I imagine there is some way to put to put my socket in blocking mode, or perhaps catch the error and do something with it. I wonder what the standard, canonical way to approach this problem is.</p>\n\n<p>I'd rather not block, since I want the server to do other things while waiting for clients, so an async / threaded solution would be fantastic.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 1, "creation_date": 1562423355, "post_id": 56914752, "comment_id": 100372746, "body": "Little tip: Since your list is a recursive structure, you can begin with a recursive function."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562424146, "post_id": 56914752, "comment_id": 100372934, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/28273252/155423\">How to reverse a singly-linked list and convert it to a vector?</a> (just ignore the &quot;reverse&quot; part). If not, please <b><a href=\"https://stackoverflow.com/posts/56914752/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 63, "user_id": 3719754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e84c283abbe1c38175044b0f7a3318a4?s=128&d=identicon&r=PG&f=1", "display_name": "elecbuggy", "link": "https://stackoverflow.com/users/3719754/elecbuggy"}, "is_accepted": false, "score": 0, "last_activity_date": 1562426157, "last_edit_date": 1562426157, "creation_date": 1562425814, "answer_id": 56915313, "question_id": 56914752, "link": "https://stackoverflow.com/questions/56914752/how-to-convert-a-linked-list-of-optionboxlistnode-to-a-veci32/56915313#56915313", "title": "How to convert a linked list of Option&lt;Box&lt;ListNode&gt;&gt; to a Vec&lt;i32&gt;?", "body": "<p>I resolved it.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn list_to_vec(mut value: Option&lt;Box&lt;ListNode&gt;&gt;, mut v_cup: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    match value {\n        Some(x) =&gt; {\n            v_cup.push(x.val);\n            Self::list_to_vec(x.next, v_cup)\n        }\n        None =&gt; v_cup,\n    }\n}\n</code></pre>\n\n<pre><code>let h = ListNode::vec_to_list(vec![2, 4, 3]);\nlet v_cup = vec![];\nprintln!(\"{:?}\", ListNode::list_to_vec(h, v_cup));\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1562502356, "creation_date": 1562502356, "answer_id": 56922145, "question_id": 56914752, "link": "https://stackoverflow.com/questions/56914752/how-to-convert-a-linked-list-of-optionboxlistnode-to-a-veci32/56922145#56922145", "title": "How to convert a linked list of Option&lt;Box&lt;ListNode&gt;&gt; to a Vec&lt;i32&gt;?", "body": "<p>A recursive solution isn't needed here, and is likely to not be as efficient as the iterative solution.</p>\n\n<p>Taking ownership:</p>\n\n<pre><code>pub fn list_to_vec(mut value: Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut v = Vec::new();\n    while let Some(n) = value {\n        v.push(n.val);\n        value = n.next;\n    }\n    v\n}\n</code></pre>\n\n<p>By reference:</p>\n\n<pre><code>pub fn list_to_vec(mut value: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut v = Vec::new();\n    while let Some(n) = value {\n        v.push(n.val);\n        value = &amp;n.next;\n    }\n    v\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1562519425, "last_edit_date": 1562519425, "creation_date": 1562514984, "answer_id": 56923788, "question_id": 56914752, "link": "https://stackoverflow.com/questions/56914752/how-to-convert-a-linked-list-of-optionboxlistnode-to-a-veci32/56923788#56923788", "title": "How to convert a linked list of Option&lt;Box&lt;ListNode&gt;&gt; to a Vec&lt;i32&gt;?", "body": "<p>You will blow your stack if you don't do tail recursive function, your <code>vec_to_list()</code> can't handle a medium vector size. For your <code>list_to_vec()</code> you could just implement <code>Iterator</code> and collect it, fast and dirty example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(PartialEq, Eq, Clone, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\npub struct ListIter&lt;'a&gt; {\n    iter: &amp;'a Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for ListIter&lt;'a&gt; {\n    type Item = i32;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(cur) = self.iter {\n            self.iter = &amp;cur.next;\n            Some(cur.val)\n        } else {\n            None\n        }\n    }\n}\n\nimpl ListNode {\n    pub fn new(val: i32) -&gt; Self {\n        ListNode { next: None, val }\n    }\n\n    pub fn vec_to_list&lt;'a&gt;(\n        value: impl IntoIterator&lt;IntoIter = impl DoubleEndedIterator&lt;Item = &amp;'a i32&gt;, Item = &amp;'a i32&gt;,\n    ) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        Self::vec_to_list_aux(value.into_iter().rev().copied(), None)\n    }\n\n    fn vec_to_list_aux(\n        value: impl Iterator&lt;Item = i32&gt;,\n        accu: Option&lt;Box&lt;ListNode&gt;&gt;,\n    ) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        let mut value = value;\n        match value.next() {\n            Some(x) =&gt; {\n                Self::vec_to_list_aux(value, Some(Box::new(ListNode { val: x, next: accu })))\n            }\n            None =&gt; accu,\n        }\n    }\n\n    pub fn list_to_vec(list: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; Vec&lt;i32&gt; {\n        Self::iter(list).collect()\n    }\n\n    fn iter(list: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; ListIter {\n        ListIter { iter: &amp;list }\n    }\n}\n\nfn main() {\n    let list = ListNode::vec_to_list(&amp;[3, 4, 2]);\n\n    println!(\"{:#?}\", list);\n    println!(\"{:?}\", ListNode::list_to_vec(&amp;list));\n}\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 3719754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e84c283abbe1c38175044b0f7a3318a4?s=128&d=identicon&r=PG&f=1", "display_name": "elecbuggy", "link": "https://stackoverflow.com/users/3719754/elecbuggy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 267, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1562519425, "creation_date": 1562421292, "last_edit_date": 1562426409, "question_id": 56914752, "link": "https://stackoverflow.com/questions/56914752/how-to-convert-a-linked-list-of-optionboxlistnode-to-a-veci32", "title": "How to convert a linked list of Option&lt;Box&lt;ListNode&gt;&gt; to a Vec&lt;i32&gt;?", "body": "<p>I want to convert the following <code>Option&lt;Box&lt;ListNode&gt;&gt;</code> type to <code>Vec&lt;i32&gt;</code> type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    Some(ListNode {\n        val: 3,\n        next: Some(ListNode {\n            val: 4,\n            next: Some(ListNode { val: 2, next: None }),\n        }),\n    })\n}\n</code></pre>\n\n<p>I want to implement the <code>list_to_vec</code> function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(PartialEq, Eq, Clone, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\nimpl ListNode {\n    pub fn new(val: i32) -&gt; Self {\n        ListNode { next: None, val }\n    }\n\n    pub fn vec_to_list(mut value: Vec&lt;i32&gt;) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        match value.pop() {\n            Some(x) =&gt; Some(Box::new(ListNode {\n                val: x,\n                next: ListNode::vec_to_list(value),\n            })),\n            None =&gt; None,\n        }\n    }\n    pub fn list_to_vec(mut value: &amp;Option&lt;ListNode&gt;) -&gt; Vec&lt;i32&gt; {\n        //????????????????????????????\n    }\n}\n</code></pre>\n\n<p><strong>Desired output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[3, 4, 2]\n</code></pre>\n\n<hr>\n\n<p>I have tried:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn list_to_vec(mut value: &amp;Option&lt;ListNode&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut v = vec![];\n    match value {\n        Some(x) =&gt; {\n            &amp;v.push(x.val);\n            Self::list_to_vec(x.next)\n        }\n        None =&gt; v,\n    }\n}\n</code></pre>\n\n<pre><code>let h = ListNode::vec_to_list(vec![2, 4, 3]);\nprintln!(\"{:#?}\", ListNode::list_to_vec(&amp;h));\n</code></pre>\n\n<p>it has an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:27:56\n   |\n27 |           Some(x) =&gt; {&amp;v.push(x.val);Self::list_to_vec(x.next)},\n   |                                                        ^^^^^^ expected reference, found enum `std::option::Option`\n   |\n   = note: expected type `&amp;std::option::Option&lt;ListNode&gt;`\n              found type `std::option::Option&lt;std::boxed::Box&lt;ListNode&gt;&gt;`\n\nerror[E0308]: mismatched types\n  --&gt; src\\main.rs:74:40\n   |\n74 | println!(\"{:#?}\",ListNode::list_to_vec(&amp;h));\n   |                                        ^^ expected struct `ListNode`, found struct `std::boxed::Box`\n   |\n   = note: expected type `&amp;std::option::Option&lt;ListNode&gt;`\n              found type `&amp;std::option::Option&lt;std::boxed::Box&lt;ListNode&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562411281, "post_id": 56913477, "comment_id": 100370064, "body": "It is worth clarifying whether you&#39;re in control of the <code>init</code> function, or <code>T</code> is constrained to that trait bound and cannot be changed."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562420824, "post_id": 56913477, "comment_id": 100372117, "body": "If this is an accurate representation of the <code>init</code> function, its trait bound should be <code>FnOnce</code>. Because all <code>Fn</code> or <code>FnMut</code> closures implement <code>FnOnce</code> (but not the other way around), <code>FnOnce</code> is the most relaxed requirement that works for <code>T</code>. (If you have to call <code>configure</code> more than once inside <code>init</code>, it should be <code>FnMut</code> or <code>Fn</code>, in decreasing order of generality.)"}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 2, "last_activity_date": 1562415850, "last_edit_date": 1562415850, "creation_date": 1562411236, "answer_id": 56913516, "question_id": 56913477, "link": "https://stackoverflow.com/questions/56913477/is-there-a-simple-way-to-pass-a-mutable-reference-into-a-function-value-fnt/56913516#56913516", "title": "Is there a simple way to pass a mutable reference into a function value `Fn(T)`?", "body": "<p>It is unclear what your exact question is, but I guess you should\nhave tried the most obvious way:</p>\n\n<pre><code>#[derive(Default)]\nstruct SomeStruct;\n\nfn init&lt;T&gt;(configure: T)\nwhere\n    T: Fn(&amp;mut SomeStruct),\n{\n    let mut some_struct = SomeStruct::default();\n    configure(&amp;mut some_struct);\n}\n</code></pre>\n"}], "owner": {"reputation": 1025, "user_id": 6119618, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/105e066892369cf8b3f1c882bbefa862?s=128&d=identicon&r=PG&f=1", "display_name": "Herrgott", "link": "https://stackoverflow.com/users/6119618/herrgott"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "accepted_answer_id": 56913516, "answer_count": 1, "score": -1, "last_activity_date": 1562415850, "creation_date": 1562410923, "last_edit_date": 1562415804, "question_id": 56913477, "link": "https://stackoverflow.com/questions/56913477/is-there-a-simple-way-to-pass-a-mutable-reference-into-a-function-value-fnt", "title": "Is there a simple way to pass a mutable reference into a function value `Fn(T)`?", "body": "<p>I have a function <code>init</code> that takes a <code>configure</code> lambda in its parameters:</p>\n\n<pre><code>fn init&lt;T&gt;(configure: T)\nwhere\n    T: Fn&lt;Rc&lt;RefCell&lt;SomeStruct&gt;&gt;&gt;,\n{\n    let mut some_struct: SomeStruct = /*...*/;\n    configure(&amp;mut some_struct); // what to do here?\n}\n</code></pre>\n\n<p>How do I create such a thing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562410927, "post_id": 56911082, "comment_id": 100369990, "body": "<a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learn Rust With Entirely Too Many Linked Lists</a> is <i>strongly</i> recommended reading for anyone writing data structures in Rust, or using Rust at all, really."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562417205, "post_id": 56911082, "comment_id": 100371347, "body": "<a href=\"https://stackoverflow.com/q/32338659/155423\">Cannot move out of borrowed content when unwrapping</a>; <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>; <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.is_none\" rel=\"nofollow noreferrer\"><code>Option::is_none</code></a>; <a href=\"https://stackoverflow.com/q/55062035/155423\">What would be a better way to implement .pop() in my single linked list in Rust?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562417630, "post_id": 56911082, "comment_id": 100371415, "body": "Stack Overflow is not suited for general feedback on your code, but rather for specific problems. You are encouraged to post to <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">Code Review</a> if you want broad feedback on your working code."}, {"owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562441859, "post_id": 56911082, "comment_id": 100376875, "body": "@Shepmaster: My question was about the bug I got. I just wanted people to not hesitate to correct anything else. Thank you for the links also. Since I don&#39;t understand well my issues, it&#39;s hard to look for related ones. I&#39;ll definitely check these out!"}], "answers": [{"comments": [{"owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "edited": false, "score": 0, "creation_date": 1562401350, "post_id": 56911711, "comment_id": 100368270, "body": "Oh you&#39;re totally right, I should put it in the front... But just for the sake of knowing, let&#39;s say I wanted to always put it at the end, would my code be fixable? Doing <code>let before_last = &amp;mut match &amp;mut self.head</code> does not work, so I&#39;m not sure how to make <code>before_last</code> a mutable reference"}, {"owner": {"reputation": 410, "user_id": 3797176, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ysK5k.png?s=128&g=1", "display_name": "Axel Montini", "link": "https://stackoverflow.com/users/3797176/axel-montini"}, "reply_to_user": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "edited": false, "score": 1, "creation_date": 1562430082, "post_id": 56911711, "comment_id": 100374352, "body": "@Naktor You would need to have the function get_before_last to take mutable references (<code>&amp;&#39;a mut Box&lt;Node&lt;T&gt;&gt;</code>). The problem is that you would end up with a double <code>mut</code> borrow, which is not allowed in safe rust. I have yet to see a solution using this approach that doesn&#39;t use <code>unsafe</code>."}], "tags": [], "owner": {"reputation": 410, "user_id": 3797176, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ysK5k.png?s=128&g=1", "display_name": "Axel Montini", "link": "https://stackoverflow.com/users/3797176/axel-montini"}, "is_accepted": true, "score": 1, "last_activity_date": 1562417301, "last_edit_date": 1562417301, "creation_date": 1562393474, "answer_id": 56911711, "question_id": 56911082, "link": "https://stackoverflow.com/questions/56911082/references-in-linked-list-implementation/56911711#56911711", "title": "References in linked list implementation", "body": "<p>In your code, <code>before_last</code> is not mutable. In fact it's a <code>&amp;mut &amp;'a Box&lt;Node&gt;</code>. For this reason you cannot assign anything to the node because it's a mutable reference to an immutable one.</p>\n\n<p>The best suggestion I can give you is to rethink the implementation. Instead of pushing and popping to the end of the chain, you can do so on the front.\nCreate a new boxed node, remove the head and put it in the new node's next field. Then the new node becomes the head.</p>\n\n<p>This way you have a LIFO list and you don't have to traverse the whole list to push &amp; pop, so it's also more efficient. Pushing to the front also reduces the amount of code required. </p>\n\n<p>My solution is <a href=\"https://exercism.io/tracks/rust/exercises/simple-linked-list/solutions/63645decb460490fb3fa6a3ef8e5e840\" rel=\"nofollow noreferrer\">available on Exercism</a>.</p>\n"}], "owner": {"reputation": 1406, "user_id": 6265630, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5QG6X.jpg?s=128&g=1", "display_name": "Nakor", "link": "https://stackoverflow.com/users/6265630/nakor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 56911711, "answer_count": 1, "score": 1, "last_activity_date": 1562417552, "creation_date": 1562384828, "last_edit_date": 1562417552, "question_id": 56911082, "link": "https://stackoverflow.com/questions/56911082/references-in-linked-list-implementation", "title": "References in linked list implementation", "body": "<p>I am trying to do the <a href=\"https://exercism.io/my/solutions/1c2c399a4fcc4d74a749c5f6c8af0a3d\" rel=\"nofollow noreferrer\">Simple Linked List</a> Exercism problem, but I am stuck implementing the <code>pop()</code> method. The errors I get are not very clear to me; I'm not quite used to Rust's way of thinking, I guess. </p>\n\n<p>Also, because of the compiler suggestions, I added a bunch of <code>as_ref()</code> that I don't really understand.</p>\n\n<p>I am interested in knowing why my way of doing things doesn't work more than the solution.</p>\n\n<pre><code>pub struct SimpleLinkedList&lt;T&gt; {\n    head: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nstruct Node&lt;T&gt; {\n    data: T,\n    next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; SimpleLinkedList&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        unimplemented!()\n    }\n\n    pub fn len(&amp;self) -&gt; usize {\n        unimplemented!()\n    }\n\n    pub fn push(&amp;mut self, _element: T) {\n        unimplemented!()\n    }\n\n    pub fn pop(&amp;mut self) -&gt; Option&lt;T&gt; {\n        // Recursive function to return the before last element of the list\n        fn get_before_last&lt;'a, T&gt;(\n            prev: &amp;'a Box&lt;Node&lt;T&gt;&gt;,\n            current: &amp;'a Box&lt;Node&lt;T&gt;&gt;,\n        ) -&gt; &amp;'a Box&lt;Node&lt;T&gt;&gt; {\n            match &amp;current.next {\n                Some(next_node) =&gt; get_before_last(&amp;current, &amp;next_node),\n                None =&gt; &amp;prev,\n            }\n        }\n\n        // Check if the head is None\n        match &amp;self.head {\n            None =&gt; return None,\n            _ =&gt; (),\n        };\n\n        let before_last = &amp;mut match &amp;self.head {\n            // Beginning of the recursion\n            Some(node) =&gt; get_before_last(&amp;node, node.next.as_ref().unwrap()),\n            None =&gt; self.head.as_ref().unwrap(),\n        };\n\n        let to_pop = before_last.next.as_ref();\n        before_last.next = None;\n\n        Some(to_pop.unwrap().data)\n    }\n}\n</code></pre>\n\n<p>I get the following errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `before_last.next` which is behind a `&amp;` reference\n  --&gt; src/lib.rs:48:9\n   |\n48 |         before_last.next = None;\n   |         ^^^^^^^^^^^^^^^^ cannot assign\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:50:14\n   |\n50 |         Some(to_pop.unwrap().data)\n   |              ^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["python", "rust", "ctypes", "ffi", "calling-convention"], "comments": [{"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1562409225, "post_id": 56910916, "comment_id": 100369664, "body": "You need check this <a href=\"https://www.reddit.com/r/rust/comments/70mn8k/simplest_way_to_use_rust_from_python/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/70mn8k/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562416169, "post_id": 56910916, "comment_id": 100371125, "body": "Have you read <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\"><i>The Rust FFI Omnibus</i></a>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1562418693, "last_edit_date": 1562418693, "creation_date": 1562416616, "answer_id": 56914153, "question_id": 56910916, "link": "https://stackoverflow.com/questions/56910916/why-do-i-get-a-calling-convention-mismatch-when-passing-a-pointer-to-a-slice-wit/56914153#56914153", "title": "Why do I get a calling convention mismatch when passing a pointer to a slice with a cdecl Rust function and Python&#39;s Ctypes?", "body": "<blockquote>\n<pre><code>in_data: *mut [c_ulong],\n</code></pre>\n</blockquote>\n\n<p>A slice is <strong>not</strong> a FFI-safe data type. Namely, Rust's slices use <em>fat pointers</em>, which take up two pointer-sized values.</p>\n\n<p>You need to pass the data pointer and length as two separate arguments.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47489449/155423\">Why can comparing two seemingly equal pointers with == return false?</a></li>\n<li><a href=\"http://jakegoulding.com/rust-ffi-omnibus/slice_arguments/\" rel=\"nofollow noreferrer\">Rust functions with slice arguments in <em>The Rust FFI Omnibus</em></a></li>\n</ul>\n\n<p>The complete example from the <em>Omnibus</em>:</p>\n\n<blockquote>\n  <pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\n\nuse libc::{uint32_t, size_t};\nuse std::slice;\n\n#[no_mangle]\npub extern fn sum_of_even(n: *const uint32_t, len: size_t) -&gt; uint32_t {\n    let numbers = unsafe {\n        assert!(!n.is_null());\n\n        slice::from_raw_parts(n, len as usize)\n    };\n\n    let sum =\n        numbers.iter()\n        .filter(|&amp;v| v % 2 == 0)\n        .fold(0, |acc, v| acc + v);\n    sum as uint32_t\n}\n</code></pre>\n  \n  <pre class=\"lang-py prettyprint-override\"><code>#!/usr/bin/env python3\n\nimport sys, ctypes\nfrom ctypes import POINTER, c_uint32, c_size_t\n\nprefix = {'win32': ''}.get(sys.platform, 'lib')\nextension = {'darwin': '.dylib', 'win32': '.dll'}.get(sys.platform, '.so')\nlib = ctypes.cdll.LoadLibrary(prefix + \"slice_arguments\" + extension)\n\nlib.sum_of_even.argtypes = (POINTER(c_uint32), c_size_t)\nlib.sum_of_even.restype = ctypes.c_uint32\n\ndef sum_of_even(numbers):\n    buf_type = c_uint32 * len(numbers)\n    buf = buf_type(*numbers)\n    return lib.sum_of_even(buf, len(numbers))\n\nprint(sum_of_even([1,2,3,4,5,6]))\n</code></pre>\n</blockquote>\n\n<hr>\n\n<p><sub>Disclaimer: I am the primary author of the <em>Omnibus</em></sub></p>\n"}], "owner": {"reputation": 550, "user_id": 823629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12ce09d323d7a8d2e039d159759b2466?s=128&d=identicon&r=PG", "display_name": "user823629", "link": "https://stackoverflow.com/users/823629/user823629"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 56914153, "answer_count": 1, "score": 0, "last_activity_date": 1562418693, "creation_date": 1562382198, "last_edit_date": 1562416758, "question_id": 56910916, "link": "https://stackoverflow.com/questions/56910916/why-do-i-get-a-calling-convention-mismatch-when-passing-a-pointer-to-a-slice-wit", "title": "Why do I get a calling convention mismatch when passing a pointer to a slice with a cdecl Rust function and Python&#39;s Ctypes?", "body": "<p>An apparent calling convention mismatch exists where the position and contents of arguments are incorrect when loading a small function using Python's Ctypes module.</p>\n\n<p>In the example I built up while trying to get something working, one positional argument gets another's value while the other gets garbage.</p>\n\n<p>The Ctypes docs state that <code>cdll.LoadLibrary</code> expects the <code>cdecl</code> convention.  Resulting standard boilerplate:</p>\n\n<pre><code># Tell Rustc to output a dynamically linked library\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Specify clean symbol and cdecl calling convention\n#[no_mangle]\npub extern \"cdecl\" fn boring_function(\n    n: *mut size_t,\n    in_data: *mut [c_ulong],\n    out_data: *mut [c_double],\n    garbage: *mut [c_double],\n) -&gt; c_int {\n    //...\n</code></pre>\n\n<p>Loading our library after build...</p>\n\n<pre><code>lib = ctypes.CDLL(\"nothing/lib/playtoys.so\")\nlib.boring_function.restype = ctypes.c_int\n</code></pre>\n\n<p>Load the result into Python and call it with some initialized data</p>\n\n<pre><code>data_len = 8\nin_array_t = ctypes.c_ulong * data_len\nout_array_t = ctypes.c_double * data_len\nin_array = in_array_t(7, 7, 7, 7, 7, 8, 7, 7)\nout_array = out_array_t(10000.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9)\nval = ctypes.c_size_t(data_len)\nin_array_p = ctypes.byref(in_array)\nout_array_p = ctypes.byref(out_array)\nn_p = ctypes.byref(val)\ngarbage = n_p\nres = boring_function(n_p,\n                      in_array_p,\n                      # garbage cannot be observed in any callee arg\n                      ctypes.cast(garbage, ctypes.POINTER(out_array_t)),\n                      out_array_p)\n</code></pre>\n\n<p>Notice the <code>garbage</code> parameter.  It is so-named because it winds up containing a garbage address.  Note that its position is swapped with <code>out_array_p</code> in the Python call and the Rust declaration.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[src/hello.rs:29] n = 0x00007f56dbce5bc0\n[src/hello.rs:30] in_data = 0x00007f56f81e3270\n[src/hello.rs:31] out_data = 0x00007f56f81e3230\n[src/hello.rs:32] garbage = 0x000000000000000a\n</code></pre>\n\n<p><code>in_data</code>, <code>out_data</code>, and <code>n</code> print the correct values in this configuration.  The positional swap between <code>garbage</code> and <code>out_data</code> makes this possible.</p>\n\n<p>Other examples using more or less arguments reveal similar patterns of intermediate ordered variables containing odd values that resemble addresses earlier in the program or unrelated garbage.</p>\n\n<p>Either I'm missing something in how I set up the calling convention or some special magic in <code>argtypes</code> must be missing.  So far I had no luck with changing the declared calling conventions or explicit argtypes.  Are there any other knobs I should try turning?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1562362141, "post_id": 56909385, "comment_id": 100363214, "body": "What do you expect the type of <code>new_struct</code> to be? Either <code>Person</code> and <code>Eyes</code> need to have a common trait and <code>new_struct</code> will be a boxed trait object, or (more recommended) you should make an enum type of which <code>Person</code> and <code>Eyes</code> are possibilities. Either way, that case statement is the right way to approach this problem."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562411404, "post_id": 56909385, "comment_id": 100370091, "body": "How can you avoid that <code>match</code>? I mean, even in Python (my go-to &quot;dynamic&quot; language), you&#39;re still going to have to write code that parses the tag and dispatches to either the <code>Person</code> or <code>Eyes</code> constructor."}, {"owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "edited": false, "score": 0, "creation_date": 1562425806, "post_id": 56909385, "comment_id": 100373326, "body": "I&#39;ve implemented this in Typescript where I could create a factory function where I basically took all classes and put them into a hash map and from the class name dynamically created a class: See #2 here <a href=\"https://stackoverflow.com/a/34656123/1644471\">stackoverflow.com/a/34656123/1644471</a>"}], "owner": {"reputation": 2141, "user_id": 1644471, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/cc67b23ba788b61fc17fdf4af314c378?s=128&d=identicon&r=PG", "display_name": "mottosson", "link": "https://stackoverflow.com/users/1644471/mottosson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1562368161, "creation_date": 1562361917, "last_edit_date": 1562368161, "question_id": 56909385, "link": "https://stackoverflow.com/questions/56909385/should-i-parse-text-input-to-a-dynamic-struct-to-do-logic-on-it", "title": "Should I parse text input to a &quot;dynamic struct&quot; to do logic on it?", "body": "<p>I want to parse some text that I want to do logic on (count, sort, filter, and such). Should I parse the text input to a \"dynamic struct\"? From what I've gathered when searching the web this is not entirely straightforward to solve in Rust.</p>\n\n<p>I have this input from a file: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>#1:PERSON[\"#2\", 180, 85, 28]\n#2:EYES[\"green\", false]\n#3 ...\n</code></pre>\n\n<p>I want to instantiate <code>Person</code> structs, preferably without having to match on every possible struct:</p>\n\n<pre><code>struct ParseResult {\n    class: String,\n    params: String,\n}\n\nstruct Person {\n    eyes: Eyes,\n    age: i32,\n    weight: i32,\n    height: i32,\n}\n\nstruct Eyes {\n    color: String,\n    glasses: bool,\n}\n\nfn parse(input: String) -&gt; Result&lt;Person, &amp;'static str&gt; {\n    // ...parsing magic\n    let x = ParseResult {\n        class: \"PERSON\".to_string(),\n        params: \"\\\"#2\\\", 180, 85, 28, \\\"#3\\\"\".to_string(),\n    };\n\n    // I don't want to do this if I can avoid it:\n    let new_struct = match x.class {\n        \"PERSON\" =&gt; { /* instantiate new person */ }\n        \"EYES\" =&gt; { /* instantiate new eyes */ }\n        // ...\n    };\n\n    // ...\n\n    Ok(new_struct)\n}\n\n#[test]\nfn parse_input() {\n    let p = parse(\"#1:PERSON[\\\"#2\\\", 180, 85, 28]\\n#2:EYES[\\\"green\\\", false]\".to_string()).unwrap();\n    assert_eq!(p.age, 28);\n}\n</code></pre>\n\n<p>Is this the correct way to think about this problem? Should I think about this issue in some other way?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1562435280, "creation_date": 1562435280, "answer_id": 56916382, "question_id": 56908077, "link": "https://stackoverflow.com/questions/56908077/how-to-enable-crate-features-per-platform-in-cargo-toml/56916382#56916382", "title": "How to enable crate features per-platform in Cargo.toml?", "body": "<blockquote>\n  <p>Is it possible to enable features only on one platform?</p>\n</blockquote>\n\n<p>No, it is not possible, due to <a href=\"https://github.com/rust-lang/cargo/issues/1197\" rel=\"nofollow noreferrer\">Cargo issue #1197</a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50669828/155423\">How can I optionally pass rustc flags depending on a Cargo feature?</a></li>\n</ul>\n"}], "owner": {"reputation": 357, "user_id": 2666341, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba74761a95639415c334ca4cd9418225?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/2666341/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 372, "favorite_count": 0, "accepted_answer_id": 56916382, "answer_count": 1, "score": 1, "last_activity_date": 1562435280, "creation_date": 1562353200, "last_edit_date": 1562433288, "question_id": 56908077, "link": "https://stackoverflow.com/questions/56908077/how-to-enable-crate-features-per-platform-in-cargo-toml", "title": "How to enable crate features per-platform in Cargo.toml?", "body": "<p>How do I enable crate features per-platform in a Cargo.toml configuration? I've tried two methods, neither of which work.</p>\n\n<p>Method 1:</p>\n\n<pre><code>[target.'cfg(windows)'.dependencies.rusqlite]\nversion = \"0.19.0\"\nfeatures = [\"bundled\"]\n\n[target.'cfg(unix)'.dependencies.rusqlite] # same behavior with cfg(not(windows))\nversion = \"0.19.0\"\n</code></pre>\n\n<p>Method 2:</p>\n\n<pre><code>[target.'cfg(windows)'.dependencies]\nrusqlite = { version = \"0.19.0\", features = [\"bundled\"] }\n\n[target.'cfg(unix)'.dependencies]\nrusqlite = { version = \"0.19.0\" }\n</code></pre>\n\n<p>I'm trying to use the 'bundled' feature only on Windows platforms, but regardless of which way I try to configure cargo it always adds the 'bundled' feature when building on an Ubuntu system.</p>\n\n<p>Is it possible to enable features only on one platform?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "is_accepted": true, "score": 1, "last_activity_date": 1562357543, "last_edit_date": 1562357543, "creation_date": 1562345204, "answer_id": 56906732, "question_id": 56906604, "link": "https://stackoverflow.com/questions/56906604/how-can-i-change-the-object-i-am-referring-to-while-still-being-able-to-evaluate/56906732#56906732", "title": "How can I change the object I am referring to while still being able to evaluate expressions on it and access its fields?", "body": "<p>The following changes to main should work:</p>\n\n<pre><code>fn main() {\n    let mut current_node: &amp;mut Interval = &amp;mut Interval::new(1., 2.);\n\n    while current_node.left.as_ref().expect(\"PANIC\").size &gt; 0.01 {\n        current_node.expand();\n        current_node = current_node.left.as_mut().expect(\"PANIC\");\n    }\n\n    println!(\"Deep down: {:?}\", current_node);\n}\n</code></pre>\n\n<p><code>expect</code> takes self by value, so it tries to consume <code>current_node.left</code> which you are trying to use later, <code>Option::as_ref()</code> returns a new <code>Option</code> referencing the value of the original <code>Option</code>, which can then be consumed without messing with the original value. The same logic applies to adding <code>as_mut</code> to the second call, except for the mutability difference.</p>\n"}], "owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36, "favorite_count": 0, "closed_date": 1562357548, "accepted_answer_id": 56906732, "answer_count": 1, "score": 1, "last_activity_date": 1562357543, "creation_date": 1562344531, "last_edit_date": 1562357504, "question_id": 56906604, "link": "https://stackoverflow.com/questions/56906604/how-can-i-change-the-object-i-am-referring-to-while-still-being-able-to-evaluate", "closed_reason": "Duplicate", "title": "How can I change the object I am referring to while still being able to evaluate expressions on it and access its fields?", "body": "<p>I am trying to implement depth first search on a graph.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Interval {\n    low: f64,\n    high: f64,\n    size: f64,\n    left: Option&lt;Box&lt;Interval&gt;&gt;,\n    right: Option&lt;Box&lt;Interval&gt;&gt;,\n}\n\nimpl Interval {\n    pub fn new(low: f64, high: f64) -&gt; Self {\n        Interval {\n            low,\n            high,\n            left: None,\n            right: None,\n            size: high - low,\n        }\n    }\n\n    pub fn expand(&amp;mut self) {\n        self.left = Option::Some(Box::new(Interval::new(self.low, self.low + self.size / 2.)));\n\n        self.right = Option::Some(Box::new(Interval::new(\n            self.low + self.size / 2.,\n            self.high,\n        )));\n    }\n}\n</code></pre>\n\n<p>The logic is to have a pointer to current node, then expand it, update the pointer to the left child of the expanded node, and proceed while the node under pointer satisfies some condition. However, I am failing to do this properly using the borrowed references logic. My current best attempt is:</p>\n\n<pre><code>fn main() {\n    let mut current_node: &amp;mut Interval = &amp;mut Interval::new(1., 2.);\n\n    while current_node.left.expect(\"PANIC\").size &gt; 0.01 {\n        current_node.expand();\n        current_node = &amp;mut current_node.left.expect(\"PANIC\");\n    }\n\n    println!(\"Deep down: {:?}\", current_node);\n}\n</code></pre>\n\n<p>Resulting error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:34:11\n   |\n34 |     while current_node.left.expect(\"PANIC\").size &gt; 0.01 {\n   |           ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:36:29\n   |\n36 |         current_node = &amp;mut current_node.left.expect(\"PANIC\");\n   |                             ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0716]: temporary value dropped while borrowed\n  --&gt; src/main.rs:36:29\n   |\n34 |     while current_node.left.expect(\"PANIC\").size &gt; 0.01 {\n   |           ----------------- borrow later used here\n35 |         current_node.expand();\n36 |         current_node = &amp;mut current_node.left.expect(\"PANIC\");\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n   |                             |\n   |                             creates a temporary which is freed while still in use\n   |\n   = note: consider using a `let` binding to create a longer lived value\n</code></pre>\n\n<p>How to change the object I am referring to, while still being able to evaluate expressions on it and access its fields?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1562335406, "post_id": 56904397, "comment_id": 100353788, "body": "This use of <code>transmute</code> is not sound. <code>DBSnapshot</code> depends on a lifetime <code>&#39;a</code> but you are unsafely coercing it to the <code>&#39;static</code> lifetime."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1562336451, "post_id": 56904397, "comment_id": 100354255, "body": "<i>&quot;is it possible to avoid using transmute here?&quot;</i> \u2014 I think you need to expand your question to explain what you are <b>really</b> trying to accomplish. As is, no you cannot safely treat an arbitrary lifetime as <code>&#39;static</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562339820, "post_id": 56904397, "comment_id": 100355964, "body": "I believe your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56904397/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562347505, "post_id": 56904397, "comment_id": 100358915, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a>"}, {"owner": {"reputation": 263, "user_id": 1866122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e50542170617225434b51244fc9114f8?s=128&d=identicon&r=PG", "display_name": "Pavel M.", "link": "https://stackoverflow.com/users/1866122/pavel-m"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1562355281, "post_id": 56904397, "comment_id": 100361373, "body": "@PeterHall I want to return snapshot with reference to database and be sure that snapshot will not outlive database reference."}, {"owner": {"reputation": 263, "user_id": 1866122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e50542170617225434b51244fc9114f8?s=128&d=identicon&r=PG", "display_name": "Pavel M.", "link": "https://stackoverflow.com/users/1866122/pavel-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1562355343, "post_id": 56904397, "comment_id": 100361393, "body": "@Shepmaster I&#39;ve edited my question and provide link to playgroung."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562357342, "post_id": 56904397, "comment_id": 100361958, "body": "<i>with reference to database</i> \u2014 you cannot, as you have declared that the trait cannot have any references other than <code>&#39;static</code>: <code>trait Snapshot: &#39;static</code>. We don&#39;t know <b>why</b> you have done this, but your code, as written, is impossible. As mentioned, your <code>unsafe</code> breaks the rules and you are liable to encounter memory safety bugs; you must not do this."}], "owner": {"reputation": 263, "user_id": 1866122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e50542170617225434b51244fc9114f8?s=128&d=identicon&r=PG", "display_name": "Pavel M.", "link": "https://stackoverflow.com/users/1866122/pavel-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 129, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1562355112, "creation_date": 1562334736, "last_edit_date": 1562355112, "question_id": 56904397, "link": "https://stackoverflow.com/questions/56904397/return-boxed-trait-object-from-function", "title": "Return boxed trait object from function", "body": "<p>I'm using trait objects to abstract over the database engine. I have <code>Database</code> and <code>Snapshot</code> traits that can be implemented for different database engines, but I can't figure out how to return the <code>Snapshot</code> trait object without using unsafe.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::marker::PhantomData;\nuse std::mem;\nuse std::sync::Arc;\n\npub trait Database: Send + Sync + 'static {\n    fn snapshot(&amp;self) -&gt; Box&lt;dyn Snapshot&gt;;\n}\n\ntrait Snapshot: 'static {\n    fn foo(&amp;self);\n}\n\nstruct DB {}\n\nstruct DBSnapshot&lt;'a&gt; {\n    _lifetime: PhantomData&lt;&amp;'a ()&gt;,\n}\n\nimpl DB {\n    fn snapshot(&amp;self) -&gt; DBSnapshot {\n        DBSnapshot {\n            _lifetime: PhantomData,\n        }\n    }\n}\n\nstruct DBWrapper {\n    db: Arc&lt;DB&gt;,\n}\n\nimpl Database for DBWrapper {\n    fn snapshot(&amp;self) -&gt; Box&lt;dyn Snapshot&gt; {\n        Box::new(DBWrapperSnapshot {\n            snapshot: self.db.snapshot(),\n            // Will work with `transmute`\n            // snapshot: unsafe { mem::transmute(self.db.snapshot()) },\n            db: Arc::clone(&amp;self.db),\n        })\n    }\n}\n\nstruct DBWrapperSnapshot {\n    snapshot: DBSnapshot&lt;'static&gt;,\n    db: Arc&lt;DB&gt;,\n}\n\nimpl Snapshot for DBWrapperSnapshot {\n    fn foo(&amp;self) {}\n}\n</code></pre>\n\n<p>Without unsafe I get the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:32:35\n   |\n32 |                 snapshot: self.db.snapshot(),\n   |                                   ^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 30:9...\n  --&gt; src/main.rs:30:9\n   |\n30 | /         fn snapshot(&amp;self) -&gt; Box&lt;dyn Snapshot&gt; {\n31 | |             Box::new(DBWrapperSnapshot {\n32 | |                 snapshot: self.db.snapshot(),\n33 | |                 // Will work with `transmute`\n...  |\n36 | |             })\n37 | |         }\n   | |_________^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:32:27\n   |\n32 |                 snapshot: self.db.snapshot(),\n   |                           ^^^^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected DBSnapshot&lt;'static&gt;\n              found DBSnapshot&lt;'_&gt;\n</code></pre>\n\n<p>The error is perfectly reasonable, but is it possible to avoid using <code>transmute</code> here? Because I want to be sure that <code>snapshot</code> field in <code>DBWrapperSnapshot</code> will not outlive reference to <code>self.db</code>.\nLink to <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=7cb9098dff9633cf9d4cb10358998598\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["generics", "struct", "rust", "syslog"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1562334239, "post_id": 56903980, "comment_id": 100353187, "body": "<a href=\"https://stackoverflow.com/questions/27535289/what-is-the-correct-way-to-return-an-iterator-or-any-other-trait\">What is the correct way to return an Iterator (or any other trait)?</a> is pretty similar and the &quot;let the compiler guide&quot; approach will get you pretty far, but you&#39;ll still have to decide what <code>T</code> is"}], "answers": [{"comments": [{"owner": {"reputation": 2755, "user_id": 3244776, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/a3E89.jpg?s=128&g=1", "display_name": "nohup", "link": "https://stackoverflow.com/users/3244776/nohup"}, "edited": false, "score": 1, "creation_date": 1562338540, "post_id": 56904664, "comment_id": 100355352, "body": "Thank you very much. That explains a lot of concept which I missed."}], "tags": [], "owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "is_accepted": true, "score": 3, "last_activity_date": 1562336883, "last_edit_date": 1562336883, "creation_date": 1562335768, "answer_id": 56904664, "question_id": 56903980, "link": "https://stackoverflow.com/questions/56903980/what-would-be-the-signature-of-a-function-returning-a-generic-struct/56904664#56904664", "title": "What would be the signature of a function returning a generic struct?", "body": "<p>The only optional parameter here is <code>T</code>. This is the type of the message you want when you are logging. E.g. in the below example, the log message type is a <code>&amp;str</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut logger = get_logger();\n\nlogger.info(\"This is a log message\");\n</code></pre>\n\n<p>You can either choose the type inside <code>get_logger</code>, and put it in its signature, or make <code>get_logger</code> generic, and have the call site decide. \nThe first approach looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate syslog;\nuse syslog::{Facility, Error, Formatter3164, LoggerBackend};\n\nfn get_logger&lt;'a&gt;() -&gt; syslog::Logger&lt;LoggerBackend, &amp;'a str, Formatter3164&gt;{\n    let formatter = Formatter3164 {\n        facility: Facility::LOG_USER,\n        hostname: None,\n        process: \"myprogram\".into(),\n        pid: 0,\n    };\n    syslog::unix(formatter).unwrap()\n}\n\npub fn main(){\n  let mut logger = get_logger();\n\n  logger.info(\"This is a log message\");\n}\n</code></pre>\n\n<p>And the generic approach looks like this.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate syslog;\nuse syslog::{Facility, Error, Formatter3164, LoggerBackend};\n\npub fn get_logger&lt;T: std::fmt::Display&gt;() -&gt; syslog::Logger&lt;LoggerBackend, T, Formatter3164&gt;{\n    let formatter = Formatter3164 {\n        facility: Facility::LOG_USER,\n        hostname: None,\n        process: \"myprogram\".into(),\n        pid: 0,\n    };\n    syslog::unix(formatter).unwrap()\n}\n\npub fn main(){\n  let mut logger = get_logger();\n\n  logger.info(\"This is a log message\");\n}\n</code></pre>\n"}], "owner": {"reputation": 2755, "user_id": 3244776, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/a3E89.jpg?s=128&g=1", "display_name": "nohup", "link": "https://stackoverflow.com/users/3244776/nohup"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 56904664, "answer_count": 1, "score": 1, "last_activity_date": 1562336883, "creation_date": 1562333135, "last_edit_date": 1562333478, "question_id": 56903980, "link": "https://stackoverflow.com/questions/56903980/what-would-be-the-signature-of-a-function-returning-a-generic-struct", "title": "What would be the signature of a function returning a generic struct?", "body": "<p>I was going through the <a href=\"https://docs.rs/syslog/4.0.1/syslog\" rel=\"nofollow noreferrer\"><code>syslog</code></a> crate, and from my function, I wanted to return a logger object which I believe is of a generic struct <code>syslog::Logger</code>. Most of the below piece is taken from the crate documentation except for the return part and unwrap().</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate syslog;\nuse syslog::{Facility, Error, Formatter3164};\n\npub fn get_logger() -&gt; syslog::Logger{\n    let formatter = Formatter3164 {\n        facility: Facility::LOG_USER,\n        hostname: None,\n        process: \"myprogram\".into(),\n        pid: 0,\n    };\n    syslog::unix(formatter).unwrap()\n}\n</code></pre>\n\n<p>However I am seeing </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pub fn get_logger() -&gt; syslog::Logger{\n                       ^^^^^^^^^^^^^^ expected 3 type arguments\n</code></pre>\n\n<p>The signature of <code>syslog::Logger</code> struct is </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Logger&lt;Backend: Write, T, Formatter: LogFormat&lt;T&gt;&gt;\n</code></pre>\n\n<p>and  the signature of <code>syslog::unix</code> is </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn unix&lt;U: Display, F: Clone+LogFormat&lt;U&gt;&gt;(formatter: F) -&gt; Result&lt;Logger&lt;LoggerBackend, U, F&gt;&gt; {\n</code></pre>\n\n<p>where <code>Display</code> is <code>std::fmt::Display</code> and <code>LogFormat</code> is a trait defined in <code>syslog</code> crate with the following definition.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait LogFormat&lt;T&gt; {\n  fn format&lt;W: Write&gt;(&amp;self, w: &amp;mut W, severity: Severity, message: T)   -&gt; Result&lt;()&gt;;\n\n  fn emerg&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)   -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_EMERG, message)\n  }\n\n  fn alert&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)   -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_ALERT, message)\n  }\n\n  fn crit&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)    -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_CRIT, message)\n  }\n\n  fn err&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)     -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_ERR, message)\n  }\n\n  fn warning&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T) -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_WARNING, message)\n  }\n\n  fn notice&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)  -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_NOTICE, message)\n  }\n\n  fn info&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)    -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_INFO, message)\n  }\n\n  fn debug&lt;W: Write&gt;(&amp;mut self, w: &amp;mut W, message: T)   -&gt; Result&lt;()&gt; {\n    self.format(w, Severity::LOG_DEBUG, message)\n  }\n}\n</code></pre>\n\n<p>This is a generic struct, so what would be the type's signature that I should return if I want to return a logger object from my function?</p>\n"}, {"tags": ["rust", "quickcheck"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562325849, "post_id": 56901973, "comment_id": 100349035, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, because your code looks good to me, so the error must be somewhere else."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1562326176, "post_id": 56901973, "comment_id": 100349173, "body": "Doesn&#39;t a <code>use rand::Rng;</code> at the top solve the problem ?"}, {"owner": {"reputation": 21, "user_id": 11743728, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c9d84fadb2dc0d1c84449cae65d024d?s=128&d=identicon&r=PG&f=1", "display_name": "russelldb", "link": "https://stackoverflow.com/users/11743728/russelldb"}, "edited": false, "score": 0, "creation_date": 1562326220, "post_id": 56901973, "comment_id": 100349191, "body": "I have a use rand::Rng;. I will try and post a MRE."}, {"owner": {"reputation": 21, "user_id": 11743728, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c9d84fadb2dc0d1c84449cae65d024d?s=128&d=identicon&r=PG&f=1", "display_name": "russelldb", "link": "https://stackoverflow.com/users/11743728/russelldb"}, "edited": false, "score": 0, "creation_date": 1562326846, "post_id": 56901973, "comment_id": 100349470, "body": "There is a minimal (small?) repro ex here <a href=\"https://gist.github.com/russelldb/49b96ca2e23dfab8a0f03090144735e4\" rel=\"nofollow noreferrer\">gist.github.com/russelldb/49b96ca2e23dfab8a0f03090144735e4</a> . Thanks in advance."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562327834, "post_id": 56901973, "comment_id": 100349892, "body": "@russelldb please include that into this question, instead of using github. Please <a href=\"https://stackoverflow.com/posts/56901973/edit\">edit</a> your question :)"}, {"owner": {"reputation": 21, "user_id": 11743728, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c9d84fadb2dc0d1c84449cae65d024d?s=128&d=identicon&r=PG&f=1", "display_name": "russelldb", "link": "https://stackoverflow.com/users/11743728/russelldb"}, "edited": false, "score": 0, "creation_date": 1562332405, "post_id": 56901973, "comment_id": 100352251, "body": "Yeah, I can see that the cause is the same thing (versions) but the error message is different. For example, now that I KNOW the cause (versions of crates in deps) is common I know this is the same issue, but without knowing that, it is not at all clear from the error messages. If I click on &quot;this issue is the same&quot; button, will this issue vanish? Because I think that the title is nicely searchable and specific too."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 11743728, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c9d84fadb2dc0d1c84449cae65d024d?s=128&d=identicon&r=PG&f=1", "display_name": "russelldb", "link": "https://stackoverflow.com/users/11743728/russelldb"}, "edited": false, "score": 0, "creation_date": 1562332158, "post_id": 56902740, "comment_id": 100352116, "body": "That&#39;s great, and that solves it, many thanks. So if quickcheck depends on rand, why do I need to declare a dependency on it at all?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 1, "last_activity_date": 1562328334, "creation_date": 1562328334, "answer_id": 56902740, "question_id": 56901973, "link": "https://stackoverflow.com/questions/56901973/errore0599-no-method-named-gen-found-for-type-mut-g-in-the-current-scope/56902740#56902740", "title": "error[E0599]: no method named `gen` found for type `&amp;mut G` in the current scope", "body": "<p>This seems to be an issue with quickcheck. <a href=\"https://github.com/BurntSushi/quickcheck/blob/b3e50a5e7c85e19538cf8612d9fd6da32c588930/Cargo.toml#L30\" rel=\"nofollow noreferrer\">Quickcheck uses rand version 0.6.5</a>, whereas the newest version of <a href=\"https://crates.io/crates/rand\" rel=\"nofollow noreferrer\">rand is 0.7.0</a>. </p>\n\n<p>Because traits of different version aren't compatible rustc gives you this error.</p>\n\n<p>To resolve it, declare rand in the version 0.6.5 as dependecy and it will work.</p>\n"}], "owner": {"reputation": 21, "user_id": 11743728, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c9d84fadb2dc0d1c84449cae65d024d?s=128&d=identicon&r=PG&f=1", "display_name": "russelldb", "link": "https://stackoverflow.com/users/11743728/russelldb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 478, "favorite_count": 0, "closed_date": 1562332936, "accepted_answer_id": 56902740, "answer_count": 1, "score": 0, "last_activity_date": 1562328334, "creation_date": 1562325209, "last_edit_date": 1562326904, "question_id": 56901973, "link": "https://stackoverflow.com/questions/56901973/errore0599-no-method-named-gen-found-for-type-mut-g-in-the-current-scope", "closed_reason": "Duplicate", "title": "error[E0599]: no method named `gen` found for type `&amp;mut G` in the current scope", "body": "<p>I'm trying to use the <a href=\"https://docs.rs/quickcheck/0.8.5/quickcheck/index.html\" rel=\"nofollow noreferrer\">quickcheck crate</a>. </p>\n\n<p>I've implemented <code>Arbitrary</code> for the struct <code>Point {x: u32, y: u32}</code></p>\n\n<pre><code>impl Arbitrary for Point {\n    fn arbitrary&lt;G: Gen&gt;(g: &amp;mut G) -&gt; Point {\n        let x = g.gen::&lt;u32&gt;();\n        let y = g.gen::&lt;u32&gt;();\n\n        Point { x, y }\n    }\n}\n</code></pre>\n\n<p>and the compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `gen` found for type `&amp;mut G` in the current scope\n  --&gt; src/main.rs:61:23\n   |\n61 |             let x = g.gen::&lt;u32&gt;();\n   |                       ^^^\n   |\n   = note: the method `gen` exists but the following trait bounds were not satisfied:\n           `&amp;mut G : rand::Rng`\n           `G : rand::Rng`\n   = help: items from traits can only be used if the trait is in scope\n   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n           `use rand::Rng;`\n</code></pre>\n\n<p>But I do have <code>use rand:Rng;</code> in the test module, and <code>rand</code> as a dev-dependency in my Cargo.toml. </p>\n\n<p>I also have <code>use quickcheck::{quickcheck, Arbitrary, Gen};</code> in the module.</p>\n\n<p>What am I missing in order to create arbitrary generators?</p>\n\n<p>--- EDIT ---\nIf you want to run <a href=\"https://gist.github.com/russelldb/49b96ca2e23dfab8a0f03090144735e4\" rel=\"nofollow noreferrer\">https://gist.github.com/russelldb/49b96ca2e23dfab8a0f03090144735e4</a> for me it reproduces the issue.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562307817, "post_id": 56897524, "comment_id": 100340723, "body": "What what what? Please explain why you have/need a <code>&amp;mut &amp;mut</code> variable? This is absolutly uncessary. This isn&#39;t C, please return an array instead, or modify the passed, but don&#39;t mess with &quot;pointer pointer&quot;."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562307986, "post_id": 56897524, "comment_id": 100340789, "body": "Btw: Rust has a <code>String</code> type, we don&#39;t use char arrays ;) Looks like you have a C background."}, {"owner": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562308061, "post_id": 56897524, "comment_id": 100340813, "body": "I don&#39;t really <b>need</b> this, I was just wondering if this is possible :)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562308642, "post_id": 56897524, "comment_id": 100341047, "body": "@hellow Passing a mutable pointer to a fat pointer is sometimes useful, and even the standard library does it, so I wouldn&#39;t dismiss it as &quot;absolutely unnecessary&quot;."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562308662, "post_id": 56897524, "comment_id": 100341052, "body": "Not that I&#39;m aware of. Because you would have to create a variable that lives longer than the passed on, which isn&#39;t possible (without heap allocation). What you can achieve is returning an array as I suggested, e.g. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bfe368320279075887aac8bc2d091ec0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562308708, "post_id": 56897524, "comment_id": 100341077, "body": "@SvenMarnach I wouldn&#39;t call the std library beginner friendly code in terms of &quot;look at them what they did ;) &quot;, do you have an examples ready?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562309331, "post_id": 56897524, "comment_id": 100341327, "body": "@hellow One example is the <code>io::Read::read()</code> method impl for <code>&amp;[u8]</code>. The type of the receiver is <code>&amp;mut &amp;[u8]</code>, and it advances the slice by the amount of bytes read \u2013 basically exactly what is done in this question, just for an immutable slice and with <code>u8</code> instead of <code>char</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562309531, "post_id": 56897524, "comment_id": 100341397, "body": "Okay I see, but that&#39;s because they type is <code>&amp;[_]</code>. And I see, that <a href=\"https://doc.rust-lang.org/src/std/io/impls.rs.html#192-207\" rel=\"nofollow noreferrer\">it advances is done by using <code>split_at</code></a>. Hmm, that of course works, but is not really the same as OP wants. Would you like to answer @SvenMarnach"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562318427, "post_id": 56899753, "comment_id": 100345484, "body": "I filed an <a href=\"https://github.com/rust-lang/rust/issues/62400\" rel=\"nofollow noreferrer\">issue for the confusing error message</a>."}, {"owner": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "edited": false, "score": 0, "creation_date": 1562318677, "post_id": 56899753, "comment_id": 100345620, "body": "Thank you very much for the elaborate answer. Side question : can we assume that <code>fn magic&lt;&#39;a,&#39;b, T : ?Sized&gt;(v :&amp;&#39;a mut &amp;&#39;b mut T) -&gt; &amp;&#39;a mut &amp;&#39;b T</code> is safe ?"}, {"owner": {"reputation": 2973, "user_id": 4759433, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/852b4ff0da6c52d5c1b915f50c14de91?s=128&d=identicon&r=PG", "display_name": "Lonami", "link": "https://stackoverflow.com/users/4759433/lonami"}, "edited": false, "score": 2, "creation_date": 1562318883, "post_id": 56899753, "comment_id": 100345728, "body": "You <i>can</i> assume it&#39;s safe because the function is not marked as <code>unsafe</code>. It&#39;s up to whoever implemented the function to make sure all the required invariants hold true, even if they use <code>unsafe</code> blocks inside."}, {"owner": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "edited": false, "score": 0, "creation_date": 1562320127, "post_id": 56899753, "comment_id": 100346398, "body": "Sorry, my question is not very clear, what I was asking is: If I implement this function (using <code>unsafe</code>), would it follow the rust invariants ?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "edited": false, "score": 1, "creation_date": 1562334628, "post_id": 56899753, "comment_id": 100353365, "body": "@PolyB I believe the function in my answer is safe from the caller&#39;s point of view."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "edited": false, "score": 0, "creation_date": 1562707127, "post_id": 56899753, "comment_id": 100459203, "body": "@PolyB I just thought of a way of implementing this in safe code \u2013 please see the updated answer."}, {"owner": {"reputation": 1120, "user_id": 2647192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b37079565635fea4d46f300ce26766e1?s=128&d=identicon&r=PG", "display_name": "allTwentyQuestions", "link": "https://stackoverflow.com/users/2647192/alltwentyquestions"}, "edited": false, "score": 0, "creation_date": 1572557778, "post_id": 56899753, "comment_id": 103607656, "body": "Thank you so much for this answer @SvenMarnach! I was struggling with a similar issue trying to advance a mutable slice, and this got me straightened out."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1562707096, "last_edit_date": 1562707096, "creation_date": 1562316845, "answer_id": 56899753, "question_id": 56897524, "link": "https://stackoverflow.com/questions/56897524/lifetime-mismatch-in-a-double-mutable-borrow/56899753#56899753", "title": "Lifetime mismatch in a double mutable borrow", "body": "<p>This error message is indeed unfortunate, and I don't think it provides a good explanation of what's going on here. The issue is a bit involved.</p>\n\n<p>The error is local to the <code>advance_slice()</code> function, so that's all we need to look at. The type of the slice items is irrelevant, so let's take this function definition:</p>\n\n<pre><code>fn advance_slice_mut&lt;T&gt;(s: &amp;mut &amp;mut [T]) {\n    let new = &amp;mut s[1..];\n    *s = new;\n}\n</code></pre>\n\n<p>The first line creates a new slice object starting after the first item of the original slice.</p>\n\n<p>Why is this even allowed? Don't we have <em>two</em> mutable references to the same data now? The original slice <code>*s</code> includes the new slice <code>new</code>, and both allow modifying data. The reason this is legal is that <code>*s</code> is <em>implicitly reborrowed</em> when creating the subslice, and <code>*s</code> cannot be used again for the lifetime of that borrow, so we still have only one active reference to the data in the subslice. The reborrow is scoped to the function <code>advance_slice_mut()</code>, and thus has a shorter lifetime than the original slice, which is the root cause of the error you get \u2013 you are effectively trying to assign a slice which only lives until the end of the function to a memory location that lives longer than the function call.</p>\n\n<p>This kind of implicit reborrow happens everytime you call a function that takes an argument by mutable reference, including in the implicit call to <code>index_mut()</code> in <code>&amp;mut s[1..]</code>. Mutable references can't be copied, since this would create two mutable references to the same memory, and the Rust language designers decided that an implicit reborrow is the more ergonomic solution than moving mutable references by default. The reborrow does not happen for <em>shared</em> references, though, since they can be freely copied. This means that <code>&amp;s[1..]</code> will have the same lifetime as the original scope, since it is perfectly fine for two overlapping immutable slices to coexist. This explains why your function definition works fine for immutable slices.</p>\n\n<p>So how do we fix this problem? I believe that what you intend to do is perfectly safe \u2013 after reassigning the new slice to the old one, the old one is gone, so we don't have two concurrent mutable references to the same memory. To create a slice with the same lifetime as the original slice in safe code, we need to move the original slice out of the reference we got. We can do this by replacing it with an empty slice:</p>\n\n<pre><code>pub fn advance_slice_mut&lt;T&gt;(s: &amp;mut &amp;mut [T]) {\n    let slice = std::mem::replace(s, &amp;mut []);\n    *s = &amp;mut slice[1..];\n}\n</code></pre>\n\n<p>Alternatively, we can also resort to unsafe code:</p>\n\n<pre><code>use std::slice::from_raw_parts_mut;\n\npub fn advance_slice_mut&lt;T&gt;(s: &amp;mut &amp;mut [T]) {\n    unsafe {\n        assert!(!s.is_empty());\n        *s = from_raw_parts_mut(s.as_mut_ptr().add(1), s.len() - 1);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 11742441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6f8c2168163057be7597018b355634?s=128&d=identicon&r=PG&f=1", "display_name": "PolyB", "link": "https://stackoverflow.com/users/11742441/polyb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 56899753, "answer_count": 1, "score": 1, "last_activity_date": 1562707096, "creation_date": 1562307663, "last_edit_date": 1562316874, "question_id": 56897524, "link": "https://stackoverflow.com/questions/56897524/lifetime-mismatch-in-a-double-mutable-borrow", "title": "Lifetime mismatch in a double mutable borrow", "body": "<p>I'm trying to modify the borrow of a mutable value, here is a minimal example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut w: [char; 5] = ['h', 'e', 'l', 'l', 'o'];\n    let mut wslice: &amp;mut [char] = &amp;mut w;\n    advance_slice(&amp;mut wslice);\n    advance_slice(&amp;mut wslice);\n}\n\nfn advance_slice(s: &amp;mut &amp;mut [char]) {\n    let new: &amp;mut [char] = &amp;mut s[1..];\n    *s = new;\n}\n</code></pre>\n\n<p>the compiler gives me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0623]: lifetime mismatch\n  --&gt; src/main.rs:10:10\n   |\n8  | fn advance_slice(s: &amp;mut &amp;mut [char]) {\n   |                     ----------------\n   |                     |\n   |                     these two types are declared with different lifetimes...\n9  |     let new: &amp;mut [char] = &amp;mut s[1..];\n10 |     *s = new;\n   |          ^^^ ...but data from `s` flows into `s` here\n</code></pre>\n\n<p>I've tried to give the same lifetime to both borrow, without success.\nAlso this works if I remove the mutability of <code>w</code>.</p>\n"}, {"tags": ["rust", "rust-warp"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1562305395, "post_id": 56895824, "comment_id": 100339952, "body": "Maybe you should ask your question <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4fe049fafd738f32bc64a7fd490ebbd7\" rel=\"nofollow noreferrer\">in this form</a> to let people test your code easily"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1562317046, "post_id": 56895824, "comment_id": 100344833, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/54488127/getting-temporary-value-dropped-while-borrowed-when-trying-to-update-an-option\">Getting &quot;temporary value dropped while borrowed&quot; when trying to update an Option&lt;&amp;str&gt; in a loop</a>"}], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 490543, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/021d0f9c3d4ce688244a48697c741db8?s=128&d=identicon&r=PG", "display_name": "Manu", "link": "https://stackoverflow.com/users/490543/manu"}, "is_accepted": false, "score": 0, "last_activity_date": 1562336892, "creation_date": 1562336892, "answer_id": 56904990, "question_id": 56895824, "link": "https://stackoverflow.com/questions/56895824/how-can-i-create-a-variable-path-in-warp/56904990#56904990", "title": "How can I create a variable path in Warp?", "body": "<p>You can get a static string from an allocated one by leaking it.</p>\n\n<pre><code>let uuid_str = Box::leak(uuid.to_string().into_boxed_str());\nlet hello = warp::path(uuid_str).map(|| \"hello world\");\n</code></pre>\n"}], "owner": {"reputation": 4031, "user_id": 1916721, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/xBXSE.png?s=128&g=1", "display_name": "carloabelli", "link": "https://stackoverflow.com/users/1916721/carloabelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 247, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1562340963, "creation_date": 1562293529, "last_edit_date": 1562340963, "question_id": 56895824, "link": "https://stackoverflow.com/questions/56895824/how-can-i-create-a-variable-path-in-warp", "title": "How can I create a variable path in Warp?", "body": "<p>I'm trying to have a variable path in Warp. I have tried this:</p>\n\n<pre><code>use uuid::Uuid;\nuse warp::{self, Filter};\n\nfn main() {\n    let uuid = Uuid::new_v4();\n\n    println!(\"{}\", uuid);\n\n    let hello = warp::path(&amp;uuid.to_string()).map(|| \"hello world\");\n\n    warp::serve(hello).run(([127, 0, 0, 1], 8080));\n}\n</code></pre>\n\n<p>but I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/main.rs:9:29\n  |\n9 |     let hello = warp::path(&amp;uuid.to_string()).map(|| \"hello world\");\n  |                 ------------^^^^^^^^^^^^^^^^-                      - temporary value is freed at the end of this statement\n  |                 |           |\n  |                 |           creates a temporary which is freed while still in use\n  |                 argument requires that borrow lasts for `'static`\n</code></pre>\n\n<p>What is the best way to have the path parameter have a <code>'static</code> lifetime?</p>\n"}, {"tags": ["rust", "cd", "working-directory"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1562307106, "post_id": 56895623, "comment_id": 100340460, "body": "See <a href=\"https://stackoverflow.com/questions/43361154/how-to-change-os-to-directory-using-rust\">this question</a> (the linked questions there are also very relevant). The short version is that <code>cd</code> doesn&#39;t work like this because it&#39;s not an executable: it&#39;s a shell built-in. If you want to change the working directory, check out <a href=\"https://doc.rust-lang.org/std/env/fn.set_current_dir.html\" rel=\"nofollow noreferrer\"><code>std::env::set_current_dir</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "is_accepted": true, "score": 3, "last_activity_date": 1562307189, "creation_date": 1562307189, "answer_id": 56897422, "question_id": 56895623, "link": "https://stackoverflow.com/questions/56895623/why-isnt-my-rust-code-cding-into-the-said-directory/56897422#56897422", "title": "Why isn&#39;t my Rust code cding into the said directory?", "body": "<p>You're attempting to run an external command called <code>cd</code>. Depending on your operating system, this either fails because there is no command called <code>cd</code>, or this does nothing other than test whether the directory exists and you have permission to access it. If a <code>cd</code> command exists, it runs in a subprocess of your program, and its change of directory does not affect your process.</p>\n\n<p>To change to a different directory, you need to change the working directory of your own process. Call <a href=\"https://doc.rust-lang.org/std/env/fn.set_current_dir.html\" rel=\"nofollow noreferrer\"><code>std::env::set_current_dir</code></a>.</p>\n\n<pre><code>std::env::set_current_dir(&amp;path).expect(\"Unable to change into [path to executable]/nvs\");\n// do stuff in \u2026/nvs\n</code></pre>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 447, "favorite_count": 0, "accepted_answer_id": 56897422, "answer_count": 1, "score": 0, "last_activity_date": 1562339027, "creation_date": 1562291271, "last_edit_date": 1562339027, "question_id": 56895623, "link": "https://stackoverflow.com/questions/56895623/why-isnt-my-rust-code-cding-into-the-said-directory", "title": "Why isn&#39;t my Rust code cding into the said directory?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    env, io,\n    path::PathBuf,\n    process::{self, Command},\n};\n\nfn inner_main() -&gt; io::Result&lt;PathBuf&gt; {\n    let exe = env::current_exe()?;\n    let dir = exe.parent().expect(\"Executable must be in some directory\");\n    let dir = dir.join(\"nvs\");\n    Ok(dir)\n}\n\nfn main() {\n    let path = inner_main().expect(\"Couldn't get path.\");\n    let path = path.into_os_string().into_string().unwrap();\n    Command::new(\"cd\")\n        .arg(&amp;path)\n        .status()\n        .expect(\"Something went wrong.\");\n    process::exit(0);\n}\n</code></pre>\n\n<p>I grab the path that the binary is in, go into the parent directory so the binaries name is no longer in the path and then append \"nvs\" at the end of the path and then in <code>main()</code> I put the <code>inner_main()</code> function in a let and then redeclare the let as a string so I can cd into the directory.</p>\n\n<p>Whenever it tries CDing into the nvs directory nothing happens and I know that the command runs because if I move the binary somewhere with no nvs file in it's same directory it runs saying it can't find that directory so my question is when it's in a directory with nvs why doesn't it actually cd into the said directory like it should?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2131, "user_id": 2343935, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/li569.png?s=128&g=1", "display_name": "grooveplex", "link": "https://stackoverflow.com/users/2343935/grooveplex"}, "edited": false, "score": 0, "creation_date": 1562286295, "post_id": 56895245, "comment_id": 100336646, "body": "Have you tried <code>path.to_str().expect(&quot;Invalid path&quot;)</code>? It&#39;s listed in the <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html\" rel=\"nofollow noreferrer\">docs</a>."}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 2131, "user_id": 2343935, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/li569.png?s=128&g=1", "display_name": "grooveplex", "link": "https://stackoverflow.com/users/2343935/grooveplex"}, "edited": false, "score": 0, "creation_date": 1562286721, "post_id": 56895245, "comment_id": 100336708, "body": "@grooveplex no method named <code>to_str</code> found for type std:: <code>result::Result&lt;std::path::PathBuf, std::ok::Error&gt;</code> in current scope"}, {"owner": {"reputation": 125, "user_id": 5163269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba934bc9b125cefa0539d1ee6e3398f8?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas Hurst", "link": "https://stackoverflow.com/users/5163269/thomas-hurst"}, "edited": false, "score": 0, "creation_date": 1562288114, "post_id": 56895245, "comment_id": 100336863, "body": "<code>path.expect(&quot;Need a path&quot;).to_str().expect(&quot;Path contains invalid UTF-8&quot;);</code>"}, {"owner": {"reputation": 125, "user_id": 5163269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba934bc9b125cefa0539d1ee6e3398f8?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas Hurst", "link": "https://stackoverflow.com/users/5163269/thomas-hurst"}, "edited": false, "score": 0, "creation_date": 1562288195, "post_id": 56895245, "comment_id": 100336875, "body": "But really, you want <code>println!(&quot;.. {}&quot;, path.expect(&quot;need a path&quot;).display());</code> - keep it as a PathBuf where possible, use the Display trait to (potentially lossily) render it."}], "answers": [{"tags": [], "owner": {"reputation": 125, "user_id": 5163269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba934bc9b125cefa0539d1ee6e3398f8?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas Hurst", "link": "https://stackoverflow.com/users/5163269/thomas-hurst"}, "is_accepted": false, "score": 1, "last_activity_date": 1562289472, "creation_date": 1562289472, "answer_id": 56895497, "question_id": 56895245, "link": "https://stackoverflow.com/questions/56895245/how-do-i-convert-a-file-path-gotten-from-envcurrent-exe-to-a-string-or-str/56895497#56895497", "title": "How do I convert a file path gotten from env::current_exe() to a string or str?", "body": "<p>Quick rework:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::path::PathBuf;\nuse std::process;\nuse std::env;\nuse std::io;\n\nfn inner_main() -&gt; io::Result&lt;PathBuf&gt; {\n    let mut exe = env::current_exe()?;\n    exe.set_file_name(\"nvs\");\n    Ok(exe)\n}\n\nfn main() {\n    match inner_main() {\n        Ok(path) =&gt; println!(\"The current directory is {}\", path.display()),\n        Err(e) =&gt; {\n            eprintln!(\"Error determining executable path: {}\", e);\n            process::exit(1);\n        }\n    }\n}\n</code></pre>\n\n<p>I think <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.set_file_name\" rel=\"nofollow noreferrer\"><code>PathBuf.set_file_name()</code></a> has the semantics you're aiming for, and is helpfully infallible.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.display\" rel=\"nofollow noreferrer\"><code>PathBuf.display()</code></a> returns an object implementing the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code> trait</a>, which is used for user-facing formatting.  It should be noted that this will lossily convert to UTF-8 - paths should remain as <code>PathBuf</code> for any filesystem operations you're performing.</p>\n"}, {"tags": [], "owner": {"reputation": 46, "user_id": 490543, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/021d0f9c3d4ce688244a48697c741db8?s=128&d=identicon&r=PG", "display_name": "Manu", "link": "https://stackoverflow.com/users/490543/manu"}, "is_accepted": true, "score": 2, "last_activity_date": 1562338639, "last_edit_date": 1562338639, "creation_date": 1562289539, "answer_id": 56895503, "question_id": 56895245, "link": "https://stackoverflow.com/questions/56895245/how-do-i-convert-a-file-path-gotten-from-envcurrent-exe-to-a-string-or-str/56895503#56895503", "title": "How do I convert a file path gotten from env::current_exe() to a string or str?", "body": "<p>If you are just printing the path, you can use <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.display\" rel=\"nofollow noreferrer\"><code>PathBuf::display</code></a></p>\n\n<pre><code>let path = inner_main().unwrap();\nprintln!(\"The current directory is {}\", path.display());\n</code></pre>\n\n<p>If you need a string, you could use:</p>\n\n<pre><code>let path: String = inner_main().unwrap().to_str().unwrap().to_string();\n</code></pre>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 902, "favorite_count": 0, "closed_date": 1562338806, "accepted_answer_id": 56895503, "answer_count": 2, "score": 1, "last_activity_date": 1562338772, "creation_date": 1562285749, "last_edit_date": 1562338772, "question_id": 56895245, "link": "https://stackoverflow.com/questions/56895245/how-do-i-convert-a-file-path-gotten-from-envcurrent-exe-to-a-string-or-str", "closed_reason": "Duplicate", "title": "How do I convert a file path gotten from env::current_exe() to a string or str?", "body": "<p>After grabbing the file path of the executable and appending <code>nvs</code> on it in <code>inner_main()</code>, I try to convert it to a string in <code>main()</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{env, io, path::PathBuf, process};\n\nfn inner_main() -&gt; io::Result&lt;PathBuf&gt; {\n    let exe = env::current_exe()?;\n    let dir = exe.parent().expect(\"Executable must be in some directory\");\n    let dir = dir.join(\"nvs\");\n    Ok(dir)\n}\n\nfn main() {\n    let path = inner_main() as String;\n    println!(\"The current directory is {:?}\", path);\n    process::exit(0);\n}\n</code></pre>\n\n<p>It results in an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `std::result::Result&lt;std::path::PathBuf, std::io::Error&gt;` as `std::string::String`\n  --&gt; src/main.rs:11:16\n   |\n11 |     let path = inner_main() as String;\n   |                ^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>How would I go about converting this to a <code>String</code> or <code>&amp;str</code>?</p>\n"}, {"tags": ["rust", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1562338023, "post_id": 56894787, "comment_id": 100355107, "body": "Probably worth being specific about the usage of &quot;trait object&quot; here. I think most people would lazily call <code>Box&lt;dyn Trait&gt;</code> a &quot;trait object&quot; and that can be put in a <code>Vec</code>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1562337954, "last_edit_date": 1562337954, "creation_date": 1562279682, "answer_id": 56894787, "question_id": 56894710, "link": "https://stackoverflow.com/questions/56894710/which-rust-1-2-containers-support-trait-objects/56894787#56894787", "title": "Which Rust 1.2 containers support trait objects?", "body": "<p>Containers that support trait objects are containers that have a <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\"><code>?Sized</code></a> bound on their containee type.</p>\n\n<p>By default with generics, all types are <code>Sized</code> implicitly as this is what you want most of the time, and adding a <code>Sized</code> on almost every generic would be annoying. This behaviour is different from other traits and can be avoided by adding a <code>?Sized</code> bound.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo&lt;T&gt;; // implicit `T: Sized` bound. T cannot be a trait object.\n\nstruct Bat&lt;T: ?Sized&gt;; // T can be a trait object.\n</code></pre>\n\n<p>You can <a href=\"https://github.com/rust-lang/rust/commit/7d953538d10c4a31300afd27f73563adb056beab#diff-da456bd3af6d94a9693e625ff7303113R213\" rel=\"nofollow noreferrer\">see on the repository</a> that <code>Rc</code> indeed used to be declared <code>pub struct Rc&lt;T&gt;</code> and was later changed to <code>pub struct Rc&lt;T: ?Sized&gt;</code>. GitHub lists this change as being part of Rust 1.1, but I guess we had to wait 1.2 to get it in stable.</p>\n\n<p>Other containers that work on trait objects are <code>Box</code>, <code>Arc</code>, <code>Cell</code> and all the like of those smart pointers.</p>\n\n<p>Containers that do not work on trait objects are <code>Vec</code>, <code>HashMap</code> and generally containers that might store more that one instance (collections). This is because 2 instances of the same trait objects might have different sizes (if they have different concrete type), and collections usually store elements continuously, requiring a constant size.</p>\n"}], "owner": {"reputation": 28466, "user_id": 102008, "user_type": "registered", "accept_rate": 37, "profile_image": "https://www.gravatar.com/avatar/eeae0562ab53da4f56ed31d1d5650bde?s=128&d=identicon&r=PG", "display_name": "user102008", "link": "https://stackoverflow.com/users/102008/user102008"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562337954, "creation_date": 1562278885, "question_id": 56894710, "link": "https://stackoverflow.com/questions/56894710/which-rust-1-2-containers-support-trait-objects", "title": "Which Rust 1.2 containers support trait objects?", "body": "<p>In the Rust Edition Guide it says that in Rust 1.2, <a href=\"https://doc.rust-lang.org/stable/edition-guide/rust-2018/trait-system/more-container-types-support-trait-objects.html\" rel=\"nofollow noreferrer\">more container types support trait objects</a>. It gave the example of <code>Rc&lt;T&gt;</code>, but it didn't give a complete list. What other containers support trait objects in Rust 1.2+?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1562269714, "post_id": 56893437, "comment_id": 100333506, "body": "Because you are making a move operation in the function, you can&#39;t move anything from a borrowed content. It would be something like moving gpu to your computer from some else&#39;s computer which is borrowed*.  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c957e1d912ad36678997dc54085d1811\" rel=\"nofollow noreferrer\">Copying/Cloning</a> would work but  i suggest you to understand the concept and costs first"}, {"owner": {"reputation": 73287, "user_id": 3874623, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6df0aa136ee42f4ea24ef08b7c348e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/3874623/mark"}, "edited": false, "score": 0, "creation_date": 1562271177, "post_id": 56893437, "comment_id": 100333898, "body": "It&#39;s not clear why you wouldn&#39;t just let callers borrow the value - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=93287a443e29e742e8c92fe06a2fbf44\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 21, "user_id": 11674138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4970049f579ce4fbe911b1f8fafe5f86?s=128&d=identicon&r=PG&f=1", "display_name": "Nilanjan Goswami", "link": "https://stackoverflow.com/users/11674138/nilanjan-goswami"}, "edited": false, "score": 0, "creation_date": 1562271282, "post_id": 56893437, "comment_id": 100333920, "body": "Thanks for the input."}, {"owner": {"reputation": 21, "user_id": 11674138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4970049f579ce4fbe911b1f8fafe5f86?s=128&d=identicon&r=PG&f=1", "display_name": "Nilanjan Goswami", "link": "https://stackoverflow.com/users/11674138/nilanjan-goswami"}, "edited": false, "score": 0, "creation_date": 1562271700, "post_id": 56893437, "comment_id": 100334019, "body": "Can you provide some link explaining these concepts with examples?"}, {"owner": {"reputation": 73287, "user_id": 3874623, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6df0aa136ee42f4ea24ef08b7c348e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/3874623/mark"}, "edited": false, "score": 3, "creation_date": 1562271893, "post_id": 56893437, "comment_id": 100334068, "body": "<a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">The Rust Book</a> maybe?"}], "answers": [{"tags": [], "owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "is_accepted": false, "score": 0, "last_activity_date": 1562288273, "creation_date": 1562288273, "answer_id": 56895416, "question_id": 56893437, "link": "https://stackoverflow.com/questions/56893437/can-not-move-out-of-borrowed-content-in-struct-getters/56895416#56895416", "title": "Can not move out of borrowed content in struct getters", "body": "<p>You are trying to move <code>aType</code> out of the struct <code>Astruct</code> and return it from the method <code>getType</code>. However, <code>getType</code> only borrows <code>Astruct</code>  (as you can see from <code>&amp;self</code>). Since <code>getType</code> doesn't own <code>Astruct</code>, it can't move anything out of it. </p>\n\n<p>Depending on what you are trying to do, you have some options:</p>\n\n<ol>\n<li>Make <code>Atype</code> derive <code>Copy</code> and <code>Clone</code>, such that it can copy <code>aType</code>. To me this seems like what you wanted to do:</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Copy, Clone)]\nenum Atype {\n    TypeA,\n    TypeB,\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>Make <code>getType</code> consume <code>Astruct</code>:</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn getType(self) -&gt; Option&lt;Atype&gt; {\n  Some(self.aType)\n}\n</code></pre>\n\n<ol start=\"3\">\n<li>Make <code>getType</code> return a reference to <code>Atype</code></li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn getType(&amp;self) -&gt; Option&lt;&amp;Atype&gt; {\n  Some(&amp;self.aType)\n}\n</code></pre>\n\n<p>Each of these options has its pros and cons.</p>\n"}], "owner": {"reputation": 21, "user_id": 11674138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4970049f579ce4fbe911b1f8fafe5f86?s=128&d=identicon&r=PG&f=1", "display_name": "Nilanjan Goswami", "link": "https://stackoverflow.com/users/11674138/nilanjan-goswami"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1562338056, "answer_count": 1, "score": 0, "last_activity_date": 1562288273, "creation_date": 1562268618, "last_edit_date": 1562268868, "question_id": 56893437, "link": "https://stackoverflow.com/questions/56893437/can-not-move-out-of-borrowed-content-in-struct-getters", "closed_reason": "Duplicate", "title": "Can not move out of borrowed content in struct getters", "body": "<p>Its not clear why a borrowed reference is not able to make a call to the function. </p>\n\n<pre><code>Standard Error\n\n   Compiling playground v0.0.1 (/playground)\nwarning: unused variable: `a`\n  --&gt; src/main.rs:23:9\n   |\n23 |     let a = Astruct::new(Atype::TypeA, 100);\n   |         ^ help: consider prefixing with an underscore: `_a`\n   |\n   = note: #[warn(unused_variables)] on by default\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:13:14\n   |\n13 |         Some(self.aType)\n   |              ^^^^^^^^^^ cannot move out of borrowed content\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0507`.\nerror: Could not compile `playground`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<pre><code>enum Atype {\n    TypeA,\n    TypeB,\n}\n\nstruct Astruct {\n    pub aType : Atype,\n    pub aVal : i32,\n}\n\nimpl Astruct {\n    pub fn getType(&amp;self) -&gt; Option&lt;Atype&gt; {\n        Some(self.aType)\n    }\n\n    pub fn new(aType: Atype, aVal: i32) -&gt; Astruct {\n       Astruct { aType: aType,\n                 aVal: aVal}\n    }\n}\n\nfn main() {\n    let a = Astruct::new(Atype::TypeA, 100);\n\n    //println!(\"Type: {} Val: {}\", a.aType, a.aVal);\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1562265494, "post_id": 56892681, "comment_id": 100332417, "body": "@JamesWelchman The code in your second question will work with the same way, please check <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e2d60a493392091514ee0016a198f56c\" rel=\"nofollow noreferrer\">this code</a>. You can&#39;t return  slice from a moved content unless it lives in static lifetime."}, {"owner": {"reputation": 39, "user_id": 11468919, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vF1mzhx-CEI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rexDCSTkxWqIaDoVkXHs_yChDiRtg/mo/photo.jpg?sz=128", "display_name": "James Welchman", "link": "https://stackoverflow.com/users/11468919/james-welchman"}, "edited": false, "score": 0, "creation_date": 1562266235, "post_id": 56892681, "comment_id": 100332628, "body": "In my original code I use the <code>Rc</code> pointer <i>because</i> the lifetime of <code>MyStruct</code> extends beyond the lifetime of the<code>Rc&lt;String&gt;</code> in the calling function.  Just to be clear - I can&#39;t move <i>both</i> a String and a slice of the string into a return value?"}, {"owner": {"reputation": 39, "user_id": 11468919, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vF1mzhx-CEI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rexDCSTkxWqIaDoVkXHs_yChDiRtg/mo/photo.jpg?sz=128", "display_name": "James Welchman", "link": "https://stackoverflow.com/users/11468919/james-welchman"}, "edited": false, "score": 0, "creation_date": 1562266834, "post_id": 56892681, "comment_id": 100332807, "body": "Basically <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2015&amp;gist=959c1f59a29376cca0311094f5e6cdd2\" rel=\"nofollow noreferrer\">this</a> is always impossible."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 39, "user_id": 11468919, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vF1mzhx-CEI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rexDCSTkxWqIaDoVkXHs_yChDiRtg/mo/photo.jpg?sz=128", "display_name": "James Welchman", "link": "https://stackoverflow.com/users/11468919/james-welchman"}, "edited": false, "score": 0, "creation_date": 1562267311, "post_id": 56892681, "comment_id": 100332939, "body": "@JamesWelchman borrow checker&#39;s duty is preventing you from facing with dangling pointers, you can create a struct both String and it&#39;s slice but there is a possibility at runtime you can move(or  even drop) String value from a field of struct without moving or dropping slices from that string. With this you can have dangling pointers"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 39, "user_id": 11468919, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vF1mzhx-CEI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rexDCSTkxWqIaDoVkXHs_yChDiRtg/mo/photo.jpg?sz=128", "display_name": "James Welchman", "link": "https://stackoverflow.com/users/11468919/james-welchman"}, "edited": false, "score": 1, "creation_date": 1562267721, "post_id": 56892681, "comment_id": 100333037, "body": "@JamesWelchman <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2015&amp;gist=959c1f59a29376cca0311094f5e6cdd2\" rel=\"nofollow noreferrer\">this</a> is not possible because according to our definition <code>&amp;s</code> needs to live in <code>my_struct</code>&#39;s lifetime argument. It is a bit confusing because you are not dropping the real string but borrow checker is not able to know the string is trapped inside a <code>Rc</code> pointer."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 2, "last_activity_date": 1562265021, "last_edit_date": 1562265021, "creation_date": 1562263743, "answer_id": 56892681, "question_id": 56892470, "link": "https://stackoverflow.com/questions/56892470/rust-lifetime-of-struct-member-depends-on-another-struct-member/56892681#56892681", "title": "Rust - Lifetime of struct member depends on another struct member", "body": "<p>You need to borrow <code>Rc</code> for life time <code>'a</code> as well. Compiler needs to know that slice from a <code>String</code> is living in <code>'a</code> or not. In this case we need to borrow <code>Rc</code> for <code>'a</code> and compiler will know inner of <code>Rc</code> will also live in\u00a0<code>'a</code>.</p>\n\n<p>If you clone <code>s</code> and assign it to <code>rc_string</code>: </p>\n\n<ul>\n<li><code>s</code> will stay in the function's scope as borrowed <code>Rc</code> for lifetime <code>'a</code></li>\n<li><code>rc_string</code> will be the owner of the <code>Rc</code> <strong>pointer</strong></li>\n</ul>\n\n<p>and compiler won't be able to know slice of a <code>rc_string</code> is living for <code>'a</code>\u00a0or not.</p>\n\n<p>Using slice from a <code>s</code> will work :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn build_my_struct&lt;'a&gt;(s: &amp;'a Rc&lt;String&gt;) -&gt; MyStruct&lt;'a&gt; {\n    let mut vec = Vec::new();\n    let rc_string = s.clone();\n\n    vec.push(&amp;s[0..2]);\n\n    MyStruct { rc_string, vec }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95183132643de3f41536b06d2c31dd53\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 39, "user_id": 11468919, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-vF1mzhx-CEI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rexDCSTkxWqIaDoVkXHs_yChDiRtg/mo/photo.jpg?sz=128", "display_name": "James Welchman", "link": "https://stackoverflow.com/users/11468919/james-welchman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 938, "favorite_count": 0, "closed_date": 1562267620, "answer_count": 1, "score": 1, "last_activity_date": 1562265021, "creation_date": 1562262472, "last_edit_date": 1562263818, "question_id": 56892470, "link": "https://stackoverflow.com/questions/56892470/rust-lifetime-of-struct-member-depends-on-another-struct-member", "closed_reason": "Duplicate", "title": "Rust - Lifetime of struct member depends on another struct member", "body": "<p>I'm trying to write a Rust struct. The struct owns a Reference counted pointer to a string and also owns a vector of string slices to the same string.</p>\n\n<p>Furthermore I'm trying to write a function to generate this struct. I'm unsure how to proceed.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyStruct&lt;'a&gt; {\n    rc_string: Rc&lt;String&gt;,\n    vec: Vec&lt;&amp;'a str&gt;\n}\n\nfn build_my_struct&lt;'a&gt;(s: &amp;Rc&lt;String&gt;) -&gt; MyStruct&lt;'a&gt; {\n    let rc_string = s.clone();\n    let mut vec = Vec::new();\n    vec.push(&amp;rc_string[0..2]);\n\n    MyStruct {\n        rc_string: rc_string,\n        vec: vec\n    }\n}\n</code></pre>\n\n<pre class=\"lang-sh prettyprint-override\"><code>error[E0515]: cannot return value referencing local variable `rc_string`\n  --&gt; src/main.rs:13:5\n   |\n11 |       vec.push(&amp;rc_string[0..2]);\n   |                 --------- `rc_string` is borrowed here\n12 | \n13 | /     MyStruct {\n14 | |         rc_string: rc_string,\n15 | |         vec: vec\n16 | |     }\n   | |_____^ returns a value referencing data owned by the current function\n</code></pre>\n\n<p>I understand that the <code>vec</code> variable has borrowed the <code>rc_string</code>. The compiler doesn't like returning <code>vec</code> because it has the borrow to the local variable <code>rc_string</code>.</p>\n\n<p>However <code>rc_string</code> is being returned as well? The string slices are valid for the duration of the life of <code>MyStruct.rc_string</code>?</p>\n"}, {"tags": ["generics", "syntax", "rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1562254919, "post_id": 56891094, "comment_id": 100329013, "body": "how about defining generic parameter for <code>fn</code> instead of <code>struct</code> ?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1562255361, "creation_date": 1562255361, "answer_id": 56891246, "question_id": 56891094, "link": "https://stackoverflow.com/questions/56891094/can-a-non-generic-struct-implement-a-generic-function-in-rust/56891246#56891246", "title": "Can a non-generic struct implement a generic function in rust?", "body": "<p>You can only declare a type variable for an <code>impl</code> block if it is used in the type itself. </p>\n\n<p>However, you can introduce new type variables on individual methods too:</p>\n\n<pre><code>impl S {\n    fn do_something&lt;T&gt;(value: T) {\n        //do something\n    }\n}\n</code></pre>\n\n<p>This is particularly common for arguments that are closures, because every closure has a different type, so this is necessary for you to be able to call the method with a different closure each time. For example, <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\"><code>Iterator::map</code></a> is defined like this:</p>\n\n<pre><code>fn map&lt;B, F&gt;(self, f: F) -&gt; Map&lt;Self, F&gt;\nwhere\n    F: FnMut(Self::Item) -&gt; B, \n</code></pre>\n\n<p>If the <code>F</code> was declared for the type instead of the method then you would have to use the same closure every time you call <code>map</code> - not very useful.</p>\n"}], "owner": {"reputation": 55, "user_id": 9456807, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VmfUND8ueP4/AAAAAAAAAAI/AAAAAAAAAAs/nrFN7FF0-dY/photo.jpg?sz=128", "display_name": "Riton Elion", "link": "https://stackoverflow.com/users/9456807/riton-elion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 339, "favorite_count": 1, "accepted_answer_id": 56891246, "answer_count": 1, "score": 2, "last_activity_date": 1562255407, "creation_date": 1562254670, "last_edit_date": 1562255407, "question_id": 56891094, "link": "https://stackoverflow.com/questions/56891094/can-a-non-generic-struct-implement-a-generic-function-in-rust", "title": "Can a non-generic struct implement a generic function in rust?", "body": "<p>Can a non-generic struct implement a generic function in rust, which works like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nstruct S;\n\nimpl &lt;T&gt; S {\n    fn do_something(value : T) {\n        //do something\n    }\n}\n\nfn main() {\n    let a = /*a value*/;\n    S::do_something(a);\n}\n\n</code></pre>\n\n<p>If not, assuming S implement a generic trait Tt:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nstruct S;\n\nimpl &lt;T&gt; Tt&lt;T&gt; for S {\n    fn a_func(value : T) {\n        //do something\n    }\n}\n\nimpl &lt;T&gt; S {\n    fn do_something(value : T) {\n        //do something\n    }\n}\n\nfn main() {\n    let a = /*a value*/;\n    S::do_something(a);\n}\n\n</code></pre>\n\n<p>Is there any way to make it works?</p>\n"}, {"tags": ["time", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1562243180, "creation_date": 1562243180, "answer_id": 56887945, "question_id": 56887881, "link": "https://stackoverflow.com/questions/56887881/how-do-i-convert-a-chrono-datetimelocal-instance-to-datetimeutc/56887945#56887945", "title": "How do I convert a chrono `DateTime&lt;Local&gt;` instance to `DateTime&lt;Utc&gt;`?", "body": "<p>Chrono provides the <a href=\"https://docs.rs/chrono/0.4.7/chrono/offset/trait.TimeZone.html\" rel=\"noreferrer\"><code>TimeZone</code></a> trait which has the method <code>from_local_datetime</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::prelude::*;\n\nfn main() {\n    let local = Local::now();\n    let utc = Utc\n        .from_local_datetime(&amp;local.naive_local())\n        .single()\n        .unwrap();\n\n    dbg!(local.naive_local());\n    dbg!(utc);\n}\n</code></pre>\n\n<p>On my local machine it gives me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[src/main.rs:10] local.naive_local() = 2019-07-04T14:25:15.093909965\n[src/main.rs:11] utc = 2019-07-04T12:25:15.093909965Z\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 39, "user_id": 11023591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb4372f76e7119dfa3b39b12639a7cd3?s=128&d=identicon&r=PG&f=1", "display_name": "atomos203", "link": "https://stackoverflow.com/users/11023591/atomos203"}, "is_accepted": false, "score": 4, "last_activity_date": 1564510923, "last_edit_date": 1564510923, "creation_date": 1564510814, "answer_id": 57277839, "question_id": 56887881, "link": "https://stackoverflow.com/questions/56887881/how-do-i-convert-a-chrono-datetimelocal-instance-to-datetimeutc/57277839#57277839", "title": "How do I convert a chrono `DateTime&lt;Local&gt;` instance to `DateTime&lt;Utc&gt;`?", "body": "<p>As of chrono 0.4.7, this is now taken care of in a much cleaner way:</p>\n\n<pre><code>use chrono::prelude::*;\n\nfn main() {\n    let utc = Utc::now();\n    let local = Local::now();\n    let converted: DateTime&lt;Utc&gt; = DateTime::from(local);\n    println!(\"{}\\n{}\", utc, converted);\n}\n</code></pre>\n\n<p>This gives an output of:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>2019-07-30 18:19:27.176827 UTC\n2019-07-30 18:19:27.176836 UTC\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 226, "favorite_count": 0, "accepted_answer_id": 56887945, "answer_count": 2, "score": 4, "last_activity_date": 1564510923, "creation_date": 1562242982, "question_id": 56887881, "link": "https://stackoverflow.com/questions/56887881/how-do-i-convert-a-chrono-datetimelocal-instance-to-datetimeutc", "title": "How do I convert a chrono `DateTime&lt;Local&gt;` instance to `DateTime&lt;Utc&gt;`?", "body": "<p>There is a <a href=\"https://stackoverflow.com/questions/28747694/how-do-i-convert-a-chrono-datetimeutc-instance-to-datetimelocal\">question</a> asked before for the conversion in the other way<code>(Utc -&gt; Local)</code></p>\n\n<hr>\n\n<p>I am trying to convert <code>Local</code> datetime into <code>Utc</code> time:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::{Local, UTC, TimeZone};\n\nlet utc = chrono::UTC::now(); // 2019-07-04 15:13:19.014970700 \nlet local = chrono::Local::now(); // 2019-07-04 17:13:19.014970700 +03:00\n</code></pre>\n\n<p>I am currently expecting some API like <code>local.to_utc()</code>. Maybe I can implement a <code>TryFrom</code> trait for such conversion.</p>\n\n<p>How can I convert <code>Local</code> datetime to <code>Utc</code> datetime?</p>\n"}, {"tags": ["rust", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562227346, "post_id": 56883232, "comment_id": 100314095, "body": "Please always include the <b>full</b> error message, because as you can see, the problem is not in the <code>get_a_new_foo</code> function, but in your <code>replace_foo</code> function."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562228037, "post_id": 56883371, "comment_id": 100314429, "body": "Instead of <code>swap</code> one could use <code>replace</code>. See the suggested duplicate"}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": false, "score": 2, "last_activity_date": 1562227652, "creation_date": 1562227652, "answer_id": 56883371, "question_id": 56883232, "link": "https://stackoverflow.com/questions/56883232/how-to-replace-member-of-a-structure-using-this-members-method-which-consume-th/56883371#56883371", "title": "how to replace member of a structure using this member&#39;s method which consume this member itself?", "body": "<p>You can use the <a href=\"https://crates.io/crates/take_mut\" rel=\"nofollow noreferrer\">take_mut</a> crate to do that elegantly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Bar(Foo);\nimpl Bar {\n    fn replace_foo(&amp;mut self) -&gt; () {\n        take_mut::take(&amp;mut self.0, |foo| foo.get_a_new_foo());\n    }\n}\n</code></pre>\n\n<p>Alternatively without additional dependencies you can do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Bar(Foo);\nimpl Bar {\n    fn replace_foo(&amp;mut self) -&gt; () {\n        let mut tmp = Foo::A;\n        std::mem::swap(&amp;mut tmp, &amp;mut self.0);\n        tmp = tmp.get_a_new_foo();\n        std::mem::swap(&amp;mut tmp, &amp;mut self.0);\n    }\n}\n</code></pre>\n\n<p>But it works only if you can cheaply build some \"placeholder\" variant of <code>Foo</code>, like <code>Foo::A</code> in this case.</p>\n"}], "owner": {"reputation": 477, "user_id": 6006668, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh6.googleusercontent.com/-auNrUt-_QPE/AAAAAAAAAAI/AAAAAAAAAM8/FYmi50KAYKQ/photo.jpg?sz=128", "display_name": "hronro", "link": "https://stackoverflow.com/users/6006668/hronro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "closed_date": 1562229155, "answer_count": 1, "score": 0, "last_activity_date": 1562227652, "creation_date": 1562227098, "last_edit_date": 1562227336, "question_id": 56883232, "link": "https://stackoverflow.com/questions/56883232/how-to-replace-member-of-a-structure-using-this-members-method-which-consume-th", "closed_reason": "Duplicate", "title": "how to replace member of a structure using this member&#39;s method which consume this member itself?", "body": "<p>I have a enum, which may contains a vector. And I implement a method for the enum, which can generator a new enum which reuse the same vector in previous enum (I don't want to copy the vector). After generated the new enum, I won't use the previous enum anymore, so I implement this method as <code>fn (self)</code> which would get enum's ownership.</p>\n\n<p>Then I put enum in a structure, I want to replace the enum in the structure by using the enum's method I just implemented. But I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:22:18\n   |\n22 |         self.0 = self.0.get_a_new_foo();\n   |                  ^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Is there any way to fix my code?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Foo {\n    A,\n    B(Vec&lt;u32&gt;),\n}\n\nimpl Foo {\n    fn get_a_new_foo(self) -&gt; Foo {\n        match self {\n            Foo::A =&gt; Foo::B(vec![]),\n            Foo::B(mut v) =&gt; {\n                let len = v.len() as u32;\n                v.push(len - 1);\n                Foo::B(v)\n            }\n        }\n    }\n}\n\nstruct Bar(Foo);\nimpl Bar {\n    fn replace_foo(&amp;mut self) -&gt; () {\n        self.0 = self.0.get_a_new_foo();\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "command-line-interface"], "comments": [{"owner": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 0, "creation_date": 1562220289, "post_id": 56880696, "comment_id": 100310932, "body": "rust noob: Wouldn&#39;t slices work? Seems slices implement IntoIterator (as required by args() here), so would .args(&amp;args[1..]) work? No need for a mutable Vec&lt;T&gt; then"}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 0, "creation_date": 1562225202, "post_id": 56880696, "comment_id": 100312988, "body": "@BenjaminPodszun Nope that spits out a bunch of errors"}, {"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 0, "creation_date": 1562245168, "post_id": 56880696, "comment_id": 100323966, "body": "@SmushyTaco it&#39;s not helpful to say &quot;spits out a bunch of errors&quot;. Benjamin&#39;s suggestion above is correct. Using a slice will work here. You probably have some syntax error in how you&#39;re constructing the slice. Or maybe some other issue with how you&#39;re instantiating the <code>Command</code> object. If you told us what the errors were, we could suggest the right syntax. But since you haven&#39;t told us, we have to wait and see if you reply again with more information."}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 1, "creation_date": 1562263570, "post_id": 56880696, "comment_id": 100331837, "body": "@JackO&#39;Connor My bad I read it as arg.(&amp;args[1..]) not args([&amp;args[1..). I already found a solution anyways so it&#39;s all good"}], "answers": [{"comments": [{"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "edited": false, "score": 0, "creation_date": 1562217355, "post_id": 56880983, "comment_id": 100309999, "body": "That requires hardcoding all the values in the args vec and in my situation there&#39;s an infinite amount of environment variables that can be inputted."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "edited": false, "score": 0, "creation_date": 1562218850, "post_id": 56880983, "comment_id": 100310456, "body": "@SmushyTaco, I just created the arg vec to show the usage that works in Playground. In real case you get your args vector from environment for sure"}, {"owner": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 0, "creation_date": 1562220641, "post_id": 56880983, "comment_id": 100311058, "body": "Same question I posted below the question: Could this be done without the mutable Vec&lt;T&gt; and by using slices instead? args[0] and args[1..]? (I am clueless about Rust, but it seems to be possible based on the docs I read)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 1, "creation_date": 1562221071, "post_id": 56880983, "comment_id": 100311215, "body": "@BenjaminPodszun a <code>Vec</code> coereces to a slice. But how do you want to initialize the slice? That&#39;s why @Webstrix used a <code>Vec</code> instead."}, {"owner": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562221207, "post_id": 56880983, "comment_id": 100311270, "body": "@hellow I&#39;m asking if <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=035e2c22548c0e54f1bc9ad7789f2fa7\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> would work"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 0, "creation_date": 1562221362, "post_id": 56880983, "comment_id": 100311329, "body": "@BenjaminPodszun, In my opinion it should also work."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 0, "creation_date": 1562221442, "post_id": 56880983, "comment_id": 100311358, "body": "@BenjaminPodszun have a look at <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.args\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/process/struct.Command.html#method.arg&zwnj;&#8203;s</a> and tell me if it works ;) You even could use a <code>HashSet</code> or whatever struct implements <code>IntoIterator</code>."}, {"owner": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562221464, "post_id": 56880983, "comment_id": 100311368, "body": "@hellow I&#39;m .. basically clueless about Rust. I did try to compile it and it seemed okay. The difference? I guess .. it just keeps one Vec, unmodified, with a slice as a view. Same same, chalk it up to curiosity of a bystander :) It just feels like the natural &#39;all but the first in a Vec&#39; expression the OP was asking for to me."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9078, "user_id": 59492, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/0679b4b5aa064162e55482e534159bc9?s=128&d=identicon&r=PG", "display_name": "Benjamin Podszun", "link": "https://stackoverflow.com/users/59492/benjamin-podszun"}, "edited": false, "score": 1, "creation_date": 1562272823, "post_id": 56880983, "comment_id": 100334292, "body": "@BenjaminPodszun <a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ac9c18b04e3a29bb3df641bc8c341d02\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 1, "last_activity_date": 1562218774, "last_edit_date": 1562218774, "creation_date": 1562216863, "answer_id": 56880983, "question_id": 56880696, "link": "https://stackoverflow.com/questions/56880696/how-do-i-run-a-command-that-can-take-an-unspecified-number-of-env-arguments/56880983#56880983", "title": "How do I run a command that can take an unspecified number of env arguments?", "body": "<p>You can remove the first element from the argument list and then give it to the args as a complete vector reference like following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut args: Vec&lt;String&gt; = env::args().collect();\n\nif !args.is_empty() {\n    let first_arg = args.remove(0);\n    Command::new(\"sudo\")\n        .arg(\"apt\")\n        .arg(&amp;first_arg.to_lowercase())\n        .args(&amp;args);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3ec3b70d6fd2e7606436e355100ae3b8\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 10, "last_activity_date": 1562222451, "creation_date": 1562222451, "answer_id": 56881993, "question_id": 56880696, "link": "https://stackoverflow.com/questions/56880696/how-do-i-run-a-command-that-can-take-an-unspecified-number-of-env-arguments/56881993#56881993", "title": "How do I run a command that can take an unspecified number of env arguments?", "body": "<p>Rather than collect the <code>env::args()</code> iterator into a vector, then modify the vector, you can directly use the original iterator:</p>\n\n<pre><code>let mut args = env::args();\nif let Some(first_arg) = args.next() {\n    Command::new(\"sudo\")\n        .arg(\"apt\")\n        .arg(first_arg.to_lowercase())\n        .args(args);\n}\n</code></pre>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 674, "favorite_count": 0, "accepted_answer_id": 56880983, "answer_count": 2, "score": 1, "last_activity_date": 1562222488, "creation_date": 1562214884, "last_edit_date": 1562222488, "question_id": 56880696, "link": "https://stackoverflow.com/questions/56880696/how-do-i-run-a-command-that-can-take-an-unspecified-number-of-env-arguments", "title": "How do I run a command that can take an unspecified number of env arguments?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    Command::new(\"sudo\")\n        .arg(\"apt\")\n        .arg(&amp;args[0].to_lowercase())\n        .arg(&amp;args[EVERY OTHER ARGUMENT THE USER INPUTTED]);\n}\n</code></pre>\n\n<p>As you see in the code I want to have every argument the user inputted (after the 1st argument) to run but I have no idea how to implement this.</p>\n"}]