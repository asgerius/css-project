[{"tags": ["python", "rust", "ctypes", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1452141042, "post_id": 34636018, "comment_id": 57040338, "body": "At the risk of an insulting non-answer, you <i>have</i> to free memory after you are done with it, otherwise you risk accessing memory in an unknown state. This generally means you free it immediately after you are done using it, as that&#39;s the first place you are sure you aren&#39;t using it. Is there something more detailed you are looking for?"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452173466, "post_id": 34636018, "comment_id": 57057961, "body": "@shepmaster I understand your comment \u2013 the main problem is that I&#39;ve made it difficult for myself, partly as a result of ctypes odd (unpythonic-feeling) way of doing things. Passing <code>array</code> back to rust after I cast and assign it to res in bng_void_array_to_tuple_list seems to work, but what I really need to do is restructure my code to conform to your and @huon&#39;s examples."}], "answers": [{"comments": [{"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1452175353, "post_id": 34648132, "comment_id": 57059310, "body": "this is incredibly useful, thanks. However, your example demonstrates a simple, single return type (i32) in data_get, whereas my return type (Array) is a ctypes (and thus, C) representation of a Vector, which means I <i>have</i> to define it on the python side, so ctypes knows how to dereference it (the class derived from Structure has to be given to restype), no?"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "reply_to_user": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 1, "creation_date": 1452204145, "post_id": 34648132, "comment_id": 57077729, "body": "You&#39;re already defining the appropriate <code>Structure</code> type: they should just work. Another way is to have the Rust side return pointers like my example does."}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": false, "score": 7, "last_activity_date": 1452145897, "last_edit_date": 1452145897, "creation_date": 1452145509, "answer_id": 34648132, "question_id": 34636018, "link": "https://stackoverflow.com/questions/34636018/at-what-point-can-i-pass-the-array-back-to-my-rust-program-in-order-to-free-its/34648132#34648132", "title": "At what point can I pass the array back to my Rust program in order to free its memory?", "body": "<p>There are two ways to manage resources in Python, both of which involve creating an object that either:</p>\n\n<ul>\n<li>has a finalizer, <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__del__\">the <code>__del__</code> method</a></li>\n<li>or acts as a <a href=\"https://docs.python.org/3/library/stdtypes.html#typecontextmanager\">context manager</a> for the <code>with</code> statement</li>\n</ul>\n\n<p>Both of these involve having a manager object that controls/provides access to the resource, which will run any clean-up code necessary when the object is no longer needed. For this case, I think the first one works best, but I'll demonstrate both.</p>\n\n<p>For my examples, I'll use this Rust code,, where <code>Data</code> is a stand-in for any resource that needs managing (e.g. your <code>Array</code> type):</p>\n\n<pre><code>// ffi_example.rs\n#![crate_type = \"dylib\"]\n\npub struct Data {\n    x: i32\n}\n\n#[no_mangle]\npub extern fn data_create(x: i32) -&gt; *mut Data {\n    println!(\"Rust: creating: x = {}\", x);\n    Box::into_raw(Box::new(Data { x: x }))\n}\n\n// example function for interacting with the pointer\n#[no_mangle]\npub unsafe extern fn data_get(p: *mut Data) -&gt; i32 {\n    (*p).x\n}\n\n#[no_mangle]\npub unsafe extern fn data_destroy(p: *mut Data) {\n    let data = Box::from_raw(p);\n    println!(\"Rust: destroying: x = {}\", data.x);\n}\n</code></pre>\n\n<p>Which can be compiled with, say, <code>rustc ffi_example.rs</code> to create <code>libffi_example.so</code> (or similar, depending on platform). This is the start of the Python code I'm using for the two cases (the <code>CDLL</code> call may need to be adjusted):</p>\n\n<pre><code>import sys\nimport ctypes as c\n\nclass RawData(c.Structure):\n    pass\n\nlib = c.CDLL('./libffi_example.so')\n\ncreate = lib.data_create\ncreate.argtypes = [c.c_int]\ncreate.restype = c.POINTER(RawData)\n\nget = lib.data_get\nget.arg_types = [c.POINTER(RawData)]\nget.restype = c.c_int\n\ndestroy = lib.data_destroy\ndestroy.argtypes = [c.POINTER(RawData)]\ndestroy.restype = None\n</code></pre>\n\n<p>(Note that by interfacing via pointers, I don't have to tell Python any info about the internals of <code>RawData</code>.)</p>\n\n<p>You can check everything's working by adding the following, for instance, to the end:</p>\n\n<pre><code>p = create(10)\nprint('Python: got %s (at 0x%x)' % (get(p), c.addressof(p.contents)))\nsys.stdout.flush()\ndestroy(p)\n</code></pre>\n\n<p>which prints something like</p>\n\n<pre><code>Rust: creating: x = 10 (at 0x138b7c0)\nPython: got 10 (at 0x138b7c0)\nRust: destroying: x = 10 (at 0x138b7c0)\n</code></pre>\n\n<p>(The <code>flush</code> is to ensure the <code>print</code>s from the two languages appear in the right order, since they have different buffers.) </p>\n\n<h2><code>__del__</code></h2>\n\n<p>To use <code>__del__</code> just make an Python object (not a <code>ctypes.Structure</code>) that serves as the interface to the Rust one, like</p>\n\n<pre><code>class Data:\n    def __init__(self, x):\n         self._pointer = create(x)\n\n    def get(self):\n         return int(get(self._pointer))\n\n    def __del__(self):\n         destroy(self._pointer)\n</code></pre>\n\n<p>This can then be used as a normal object:</p>\n\n<pre><code>obj = Data(123)\nprint('Python: %s' % obj.get())\nsys.stdout.flush()\n\nobj2 = obj # two pointers to the same `Data`\n\nobj = Data(456) # overwrite one\nprint('Python: %s, %s' % (obj.get(), obj2.get()))\nsys.stdout.flush()\n\nobj2 = None # just clear the second reference\nprint('Python: end')\nsys.stdout.flush()\n</code></pre>\n\n<p>This will print:</p>\n\n<pre><code>Rust: creating: x = 123 (at 0x28aa510)\nPython: 123\nRust: creating: x = 456 (at 0x28aa6e0)\nPython: 456, 123\nRust: destroying: x = 123 (at 0x28aa510)\nPython: end\nRust: destroying: x = 456 (at 0x28aa6e0)\n</code></pre>\n\n<p>That is, Python can tell when object definitely no longer have any references (e.g. when the two handles <code>obj</code> and <code>obj2</code> are both overwritten for <code>123</code>, or when the program ends, for <code>456</code>).</p>\n\n<h2>Context managers</h2>\n\n<p>If the resource is heavily scoped (which it probably isn't, in this case), it may make sense to instead use a context manager, which will allow something like:</p>\n\n<pre><code>print('Python: before')\nsys.stdout.flush()\n\nwith Data(789) as obj:\n    print('Python: %s' % obj.get())\n    sys.stdout.flush()\n# obj's internals destroyed here\n\nprint('Python: after')\nsys.stdout.flush()\n</code></pre>\n\n<p>This is somewhat error-prone because a handle to an object can be kept outside the <code>with</code> statement, so it has to check for this or else it may access deallocated memory. For instance,</p>\n\n<pre><code>with Data(1234) as obj:\n    pass\n# obj's internals destroyed here\n\nprint(obj.get()) # oops...\n</code></pre>\n\n<p>Anyway, implementation:</p>\n\n<pre><code>class Data:\n    def __init__(self, x):\n        self._x = x\n        self._valid = False\n    def __enter__(self):\n        self._pointer = create(self._x)\n        self._valid = False\n        return self\n    def __exit__(self):\n        assert self._valid\n        destroy(self._pointer)\n        self._valid = False\n        return False\n\n    def get(self):\n        if not self._valid:\n            raise ValueError('getting from a destroyed Data')\n        return int(get(self._pointer))\n</code></pre>\n\n<p>The first example above gives output like:</p>\n\n<pre><code>Python: before\nRust: creating: x = 789 (at 0x1650530)\nPython: 789\nRust: destroying: x = 789 (at 0x1650530)\nPython: after\n</code></pre>\n\n<p>And the second gives:</p>\n\n<pre><code>Rust: creating: x = 1234 (at 0x113d450)\nRust: destroying: x = 1234 (at 0x113d450)\nTraceback (most recent call last):\n  File \"ffi.py\", line 82, in &lt;module&gt;\n    print(obj.get()) # oops...\n  File \"ffi.py\", line 63, in get\n    raise ValueError('getting from a destroyed Data')\nValueError: getting from a destroyed Data\n</code></pre>\n\n<p>This approach does have the advantage of makes the region of code where the resource is valid/allocated clearer, effectively a manual form of the RAII/scope-based resource management of Rust.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1452145897, "creation_date": 1452091894, "last_edit_date": 1452097543, "question_id": 34636018, "link": "https://stackoverflow.com/questions/34636018/at-what-point-can-i-pass-the-array-back-to-my-rust-program-in-order-to-free-its", "title": "At what point can I pass the array back to my Rust program in order to free its memory?", "body": "<p>I'm having difficulty figuring out at what point I can pass the <code>BNG_FFIArray</code> returned by my Rust program back to it, in order to free the memory that it's allocated.</p>\n\n<p>My ctypes setup is as follows:</p>\n\n<pre><code>class BNG_FFITuple(Structure):\n    _fields_ = [(\"a\", c_uint32),\n                (\"b\", c_uint32)]\n\nclass BNG_FFIArray(Structure):\n    _fields_ = [(\"data\", c_void_p),\n                (\"len\", c_size_t)]\n\n    # Allow implicit conversions from a sequence of 32-bit unsigned\n    # integers.\n    @classmethod\n    def from_param(cls, seq):\n        return seq if isinstance(seq, cls) else cls(seq)\n\n    def __init__(self, seq, data_type = c_float):\n        array_type = data_type * len(seq)\n        raw_seq = array_type(*seq)\n        self.data = cast(raw_seq, c_void_p)\n        self.len = len(seq)\n\n# A conversion function that cleans up the result value to make it\n# nicer to consume.\ndef bng_void_array_to_tuple_list(array, _func, _args):\n    res = cast(array.data, POINTER(BNG_FFITuple * array.len))[0]\n    return res\n\nconvert_bng = lib.convert_vec_c\nconvert_bng.argtypes = (BNG_FFIArray, BNG_FFIArray)\nconvert_bng.restype = BNG_FFIArray\nconvert_bng.errcheck = bng_void_array_to_tuple_list\n\n# this is the FFI function I'd like to call. It takes a BNG_FFIArray as its argument\ndrop_array = lib.drop_array \ndrop_array.argtypes = (BNG_FFIArray,)\n\n\ndef convertbng(lons, lats):\n    \"\"\" just a wrapper \"\"\"\n    return [(i.a, i.b) for i in iter(convert_bng(lons, lats))]\n\n# pass values into the FFI rust function\nconvertbng([-0.32824866], [51.44533267])\n</code></pre>\n\n<p>This is all working correctly, but I'm not sure at what point I'm supposed to return the data initially allocated by my call to <code>lib.convert_to_bng</code> back across the FFI boundary in order to free its associated memory, by calling <code>drop_array</code>.</p>\n\n<p>Here's my Rust struct and function.</p>\n\n<pre><code>#[repr(C)]\npub struct Array {\n    data: *const c_void,\n    len: libc::size_t,\n}\n\n#[no_mangle]\npub extern \"C\" fn drop_array(arr: Array) {\n    unsafe { Vec::from_raw_parts(arr.data as *mut u8, arr.len, arr.len) };\n}\n\nimpl Array {\n    unsafe fn as_f32_slice(&amp;self) -&gt; &amp;[f32] {\n        assert!(!self.data.is_null());\n        slice::from_raw_parts(self.data as *const f32, self.len as usize)\n    }\n    unsafe fn as_i32_slice(&amp;self) -&gt; &amp;[i32] {\n        assert!(!self.data.is_null());\n        slice::from_raw_parts(self.data as *const i32, self.len as usize)\n    }\n\n    fn from_vec&lt;T&gt;(mut vec: Vec&lt;T&gt;) -&gt; Array {\n        // Important to make length and capacity match\n        // A better solution is to track both length and capacity\n        vec.shrink_to_fit();\n\n        let array = Array {\n            data: vec.as_ptr() as *const libc::c_void,\n            len: vec.len() as libc::size_t,\n        };\n\n        // Leak the memory, and now the raw pointer is the owner\n        mem::forget(vec);\n\n        array\n    }\n}\n\n\n#[no_mangle]\npub extern \"C\" fn convert_vec_c(lon: Array, lat: Array) -&gt; Array {\n    // we're receiving floats\n    let lon = unsafe { lon.as_f32_slice() };\n    let lat = unsafe { lat.as_f32_slice() };\n    // copy values and combine\n    let orig = lon.iter()\n                  .cloned()\n                  .zip(lat.iter()\n                          .cloned());\n    // carry out the conversion\n    let result = orig.map(|elem| convert_bng(elem.0 as f64, elem.1 as f64));\n    // convert back to vector of unsigned integer Tuples\n    let nvec = result.map(|ints| {\n                         IntTuple {\n                             a: ints.0 as u32,\n                             b: ints.1 as u32,\n                         }\n                     })\n                     .collect();\n    Array::from_vec(nvec)\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "fibonacci"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452077433, "post_id": 34630695, "comment_id": 57007677, "body": "You may be interested in <a href=\"https://doc.rust-lang.org/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\">std::ops::AddAssign</a> whose RFC is in the Final Comment period: it lets you overload the &quot;+=&quot; operator. This would allow avoiding <code>.clone()</code> calls for the addition, at least."}, {"owner": {"reputation": 2304, "user_id": 645599, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/NQKcH.jpg?s=128&g=1", "display_name": "dten", "link": "https://stackoverflow.com/users/645599/dten"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452081438, "post_id": 34630695, "comment_id": 57010073, "body": "That would be one fewer clone :) I can&#39;t get rid of both though. 12+ weeks until that though I guess.."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452085822, "post_id": 34630695, "comment_id": 57012863, "body": "Two fewer clones actually: <code>self.next = self.next.clone() + self.curr.clone();</code> would be replaced by <code>self.next += &amp;self.curr;</code>."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1452086633, "post_id": 34630695, "comment_id": 57013365, "body": "Strange, I thought the &quot;cannot infer lifetime \u2026 due to conflicting requirements&quot; <i>listed</i> those conflicting requirements."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452091883, "post_id": 34635854, "comment_id": 57016978, "body": "Do you know how to eliminate the last clone? Intuitively I would think that the actual number would have to be <i>outside</i> the iterator, but I could not make it work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452092198, "post_id": 34635854, "comment_id": 57017228, "body": "@MatthieuM. I don&#39;t see how it would be possible to eliminate that clone, since the <code>current</code> value is saved by the struct but we also want to return it from the iterator. My next thought would be to return a reference to <code>current</code>, but that would require putting a lifetime on <code>self</code> which is a no-go. Can you expand on your &quot;outside the iterator&quot; idea?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452092393, "post_id": 34635854, "comment_id": 57017398, "body": "My idea was to create a State <code>struct</code> to hold the state and then another Iterator <code>struct</code> referencing the first (<code>&amp;mut</code>) and mutating it as it &quot;advances&quot; so that the Iterator could return references into the State; but I could not manage to align my borrows."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452092936, "post_id": 34635854, "comment_id": 57017772, "body": "@MatthieuM. interesting. Something like <a href=\"http://is.gd/fRblHv\" rel=\"nofollow noreferrer\">this</a>? It seems to have the same problems as returning a reference into the iterator itself. It seems like these two implementations must be isomorphic, but I can&#39;t quite place my finger on why."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452093417, "post_id": 34635854, "comment_id": 57018099, "body": "@MatthieuM. it&#39;s got to be down to aliasing. If we returned a reference, that reference would have to die before the subsequent call to <code>next</code>, otherwise there&#39;d be aliasing. Especially the bad kind where there&#39;s a mutable reference and immutable references."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452093523, "post_id": 34635854, "comment_id": 57018168, "body": "Something like <a href=\"http://is.gd/NmZFNs\" rel=\"nofollow noreferrer\">is.gd/NmZFNs</a> and yes I suspect the issue is that the returned reference would need to borrow the current iterator to ensure it does not iterate under our feet."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1550251446, "last_edit_date": 1550251446, "creation_date": 1452091412, "answer_id": 34635854, "question_id": 34630695, "link": "https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type/34635854#34635854", "title": "How to write a trait bound for adding two references of a generic type?", "body": "<blockquote>\n  <p>How to write a trait bound for adding two references of a generic type?</p>\n</blockquote>\n\n<p>Let's start with a simplified example:</p>\n\n<pre><code>fn add_things&lt;T&gt;(a: &amp;T, b: &amp;T) {\n    a + b;\n}\n</code></pre>\n\n<p>This has the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;T`\n --&gt; src/lib.rs:2:5\n  |\n2 |     a + b;\n  |     ^^^^^\n  |\n  = note: an implementation of `std::ops::Add` might be missing for `&amp;T`\n</code></pre>\n\n<p>As the compiler hints, we need to guarantee that <code>Add</code> is implemented for <code>&amp;T</code>. We can express that directly by adding an explicit lifetime to our types and also using that in our trait bounds:</p>\n\n<pre><code>use std::ops::Add;\n\nfn add_things&lt;'a, T&gt;(a: &amp;'a T, b: &amp;'a T)\nwhere\n    &amp;'a T: Add,\n{\n    a + b;\n}\n</code></pre>\n\n<p>Next, let's try a slightly different approach \u2014 instead of being handed a reference, we will create one inside the function:</p>\n\n<pre><code>fn add_things&lt;T&gt;(a: T, b: T) {\n    let a_ref = &amp;a;\n    let b_ref = &amp;b;\n\n    a_ref + b_ref;\n}\n</code></pre>\n\n<p>We get the same error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;T`\n --&gt; src/lib.rs:5:5\n  |\n5 |     a_ref + b_ref;\n  |     ^^^^^^^^^^^^^\n  |\n  = note: an implementation of `std::ops::Add` might be missing for `&amp;T`\n</code></pre>\n\n<p>However, trying to add the same fix as before doesn't work. It's also a bit awkward because the lifetime isn't associated with any of the arguments passed in:</p>\n\n<pre><code>use std::ops::Add;\n\nfn add_things&lt;'a, T: 'a&gt;(a: T, b: T)\nwhere\n    &amp;'a T: Add,\n{\n    let a_ref = &amp;a;\n    let b_ref = &amp;b;\n\n    a_ref + b_ref;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `a` does not live long enough\n  --&gt; src/lib.rs:7:17\n   |\n3  | fn add_things&lt;'a, T: 'a&gt;(a: T, b: T)\n   |               -- lifetime `'a` defined here\n...\n7  |     let a_ref = &amp;a;\n   |                 ^^\n   |                 |\n   |                 borrowed value does not live long enough\n   |                 assignment requires that `a` is borrowed for `'a`\n...\n11 | }\n   | - `a` dropped here while still borrowed\n</code></pre>\n\n<p>Placing the <code>'a</code> lifetime on the <code>impl</code> means that the <em>caller</em> of the method gets to determine what the lifetime should be. Since the reference is taken inside the method, the caller can never even see what that lifetime would be.</p>\n\n<p>Instead, you want to place a restriction that a reference of an arbitrary lifetime implements a trait. This is called a <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0387-higher-ranked-trait-bounds.md\" rel=\"noreferrer\"><em>Higher Ranked Trait Bound</em></a> (HRTB):</p>\n\n<pre><code>use std::ops::Add;\n\nfn add_things&lt;T&gt;(a: T, b: T)\nwhere\n    for&lt;'a&gt; &amp;'a T: Add,\n{\n    let a_ref = &amp;a;\n    let b_ref = &amp;b;\n\n    a_ref + b_ref;\n}\n</code></pre>\n\n<hr>\n\n<p>Applied back to your original code, you were very close:</p>\n\n<pre><code>impl&lt;T&gt; Iterator for Fibonacci&lt;T&gt;\nwhere\n    T: Clone,\n    for&lt;'a&gt; &amp;'a T: Add&lt;Output = T&gt;,\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        mem::swap(&amp;mut self.next, &amp;mut self.curr);\n        self.next = &amp;self.next + &amp;self.curr;\n        Some(self.curr.clone())\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44343166/155423\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29184358/155423\">How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?</a></li>\n</ul>\n"}], "owner": {"reputation": 2304, "user_id": 645599, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/NQKcH.jpg?s=128&g=1", "display_name": "dten", "link": "https://stackoverflow.com/users/645599/dten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2304, "favorite_count": 4, "accepted_answer_id": 34635854, "answer_count": 1, "score": 15, "last_activity_date": 1550251446, "creation_date": 1452075715, "last_edit_date": 1516377583, "question_id": 34630695, "link": "https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type", "title": "How to write a trait bound for adding two references of a generic type?", "body": "<p>I have a <code>Fibonacci</code> struct that can be used as an iterator for anything that implements <code>One</code>, <code>Zero</code>, <code>Add</code> and <code>Clone</code>. This works great for all integer types.</p>\n\n<p>I want to use this struct for <code>BigInteger</code> types which are implemented with a <code>Vec</code> and are expensive to call <code>clone()</code> on. I would like to use <code>Add</code> on two references to <code>T</code> which then returns a new <code>T</code> (no cloning then).</p>\n\n<p>For the life of me I can't make one that compiles though...</p>\n\n<p>Working:</p>\n\n<pre><code>extern crate num;\n\nuse std::ops::Add;\nuse std::mem;\nuse num::traits::{One, Zero};\n\npub struct Fibonacci&lt;T&gt; {\n    curr: T,\n    next: T,\n}\n\npub fn new&lt;T: One + Zero&gt;() -&gt; Fibonacci&lt;T&gt; {\n    Fibonacci {\n        curr: T::zero(),\n        next: T::one(),\n    }\n}\n\nimpl&lt;'a, T: Clone + Add&lt;T, Output = T&gt;&gt; Iterator for Fibonacci&lt;T&gt; {\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        mem::swap(&amp;mut self.next, &amp;mut self.curr);\n        self.next = self.next.clone() + self.curr.clone();\n        Some(self.curr.clone())\n    }\n}\n\n#[test]\nfn test_fibonacci() {\n    let first_12 = new::&lt;i64&gt;().take(12).collect::&lt;Vec&lt;_&gt;&gt;();\n    assert_eq!(vec![1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], first_12);\n}\n</code></pre>\n\n<p>Desired:</p>\n\n<pre><code>extern crate num;\n\nuse std::ops::Add;\nuse std::mem;\nuse num::traits::{One, Zero};\n\npub struct Fibonacci&lt;T&gt; {\n    curr: T,\n    next: T,\n}\n\npub fn new&lt;T: One + Zero&gt;() -&gt; Fibonacci&lt;T&gt; {\n    Fibonacci {\n        curr: T::zero(),\n        next: T::one(),\n    }\n}\n\nimpl&lt;'a, T: Clone + 'a&gt; Iterator for Fibonacci&lt;T&gt;\nwhere\n    &amp;'a T: Add&lt;&amp;'a T, Output = T&gt;,\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n        mem::swap(&amp;mut self.next, &amp;mut self.curr);\n        self.next = &amp;self.next + &amp;self.curr;\n        Some(self.curr.clone())\n    }\n}\n\n#[test]\nfn test_fibonacci() {\n    let first_12 = new::&lt;i64&gt;().take(12).collect::&lt;Vec&lt;_&gt;&gt;();\n    assert_eq!(vec![1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], first_12);\n}\n</code></pre>\n\n<p>This gives the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:27:21\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                     ^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 25:5...\n  --&gt; src/main.rs:25:5\n   |\n25 | /     fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n26 | |         mem::swap(&amp;mut self.next, &amp;mut self.curr);\n27 | |         self.next = &amp;self.next + &amp;self.curr;\n28 | |         Some(self.curr.clone())\n29 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:27:21\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                     ^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 19:1...\n  --&gt; src/main.rs:19:1\n   |\n19 | / impl&lt;'a, T: Clone + 'a&gt; Iterator for Fibonacci&lt;T&gt;\n20 | | where\n21 | |     &amp;'a T: Add&lt;&amp;'a T, Output = T&gt;,\n22 | | {\n...  |\n29 | |     }\n30 | | }\n   | |_^\nnote: ...so that types are compatible (expected std::ops::Add, found std::ops::Add&lt;&amp;'a T&gt;)\n  --&gt; src/main.rs:27:32\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                                ^\n\nerror[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:27:34\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                                  ^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 25:5...\n  --&gt; src/main.rs:25:5\n   |\n25 | /     fn next(&amp;mut self) -&gt; Option&lt;T&gt; {\n26 | |         mem::swap(&amp;mut self.next, &amp;mut self.curr);\n27 | |         self.next = &amp;self.next + &amp;self.curr;\n28 | |         Some(self.curr.clone())\n29 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:27:34\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                                  ^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 19:1...\n  --&gt; src/main.rs:19:1\n   |\n19 | / impl&lt;'a, T: Clone + 'a&gt; Iterator for Fibonacci&lt;T&gt;\n20 | | where\n21 | |     &amp;'a T: Add&lt;&amp;'a T, Output = T&gt;,\n22 | | {\n...  |\n29 | |     }\n30 | | }\n   | |_^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:27:34\n   |\n27 |         self.next = &amp;self.next + &amp;self.curr;\n   |                                  ^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1433, "user_id": 48251, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/94064636d740f54a1ea944b46f4dd8bd?s=128&d=identicon&r=PG", "display_name": "solidsnack", "link": "https://stackoverflow.com/users/48251/solidsnack"}, "edited": false, "score": 3, "creation_date": 1452125999, "post_id": 34631148, "comment_id": 57036409, "body": "This is helpful, thanks. I&#39;m not sure about accepting this, though, because it doesn&#39;t provide a way to document and automate the build process."}, {"owner": {"reputation": 1433, "user_id": 48251, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/94064636d740f54a1ea944b46f4dd8bd?s=128&d=identicon&r=PG", "display_name": "solidsnack", "link": "https://stackoverflow.com/users/48251/solidsnack"}, "edited": false, "score": 0, "creation_date": 1455523375, "post_id": 34631148, "comment_id": 58509684, "body": "This is really the only way to do anything close, so time to accept."}, {"owner": {"reputation": 12239, "user_id": 548894, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/887961087d8396bee614fc2b78a957d2?s=128&d=identicon&r=PG", "display_name": "MajesticRa", "link": "https://stackoverflow.com/users/548894/majesticra"}, "edited": false, "score": 0, "creation_date": 1465565803, "post_id": 34631148, "comment_id": 62968938, "body": "No way to put it to toml file? At all?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 12239, "user_id": 548894, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/887961087d8396bee614fc2b78a957d2?s=128&d=identicon&r=PG", "display_name": "MajesticRa", "link": "https://stackoverflow.com/users/548894/majesticra"}, "edited": false, "score": 0, "creation_date": 1465570338, "post_id": 34631148, "comment_id": 62972063, "body": "@MajesticRa, nope, and Cargo is explicitly designed <a href=\"https://github.com/rust-lang/cargo/issues/60#issuecomment-51705597\" rel=\"nofollow noreferrer\">against it</a>. Access to a subset of compiler configuration controlled by the flags is provided via <a href=\"http://doc.crates.io/manifest.html#the-profile-sections\" rel=\"nofollow noreferrer\"><code>[profile]</code></a> section in the manifest."}, {"owner": {"reputation": 12239, "user_id": 548894, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/887961087d8396bee614fc2b78a957d2?s=128&d=identicon&r=PG", "display_name": "MajesticRa", "link": "https://stackoverflow.com/users/548894/majesticra"}, "edited": false, "score": 1, "creation_date": 1465573915, "post_id": 34631148, "comment_id": 62974291, "body": "Ah... It was 2 years ago. The times when Rust had classes and garbage collector as I recall))) I mean... Rust concepts where changing rapidly before 1.0"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 9, "last_activity_date": 1452077067, "creation_date": 1452077067, "answer_id": 34631148, "question_id": 34628624, "link": "https://stackoverflow.com/questions/34628624/adding-codegen-flags-to-a-cargo-build/34631148#34631148", "title": "Adding codegen flags to a Cargo build", "body": "<p><code>cargo</code> provides <code>rustc</code> command which allows one to pass arbitrary compiler flags. The following should do it:</p>\n\n<pre><code>% cargo rustc -- -C link-args='-Wl,-undefined,dynamic_lookup'\n</code></pre>\n"}], "owner": {"reputation": 1433, "user_id": 48251, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/94064636d740f54a1ea944b46f4dd8bd?s=128&d=identicon&r=PG", "display_name": "solidsnack", "link": "https://stackoverflow.com/users/48251/solidsnack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 961, "favorite_count": 0, "accepted_answer_id": 34631148, "answer_count": 1, "score": 9, "last_activity_date": 1465573880, "creation_date": 1452068997, "last_edit_date": 1452090464, "question_id": 34628624, "link": "https://stackoverflow.com/questions/34628624/adding-codegen-flags-to-a-cargo-build", "title": "Adding codegen flags to a Cargo build", "body": "<p>On Macintosh, to allow some symbols to go unlinked, it is necessary to pass <code>-C link-args='-Wl,-undefined,dynamic_lookup'</code> to the Rust compiler. One needs to do this when building Postgres plugins, because some of the Postgres intrinsics are only compiled into the Postgres server, and not available for linking from shared libs.</p>\n\n<p>At present, the project's process is as follows:</p>\n\n<ul>\n<li>Build is run with <code>cargo build -v</code>.</li>\n<li>Failing call to <code>rustc</code> is copied and <code>-C link-args='-Wl,-undefined,dynamic_lookup'</code> added to it.</li>\n<li>Success!</li>\n</ul>\n\n<p>This seems like a hard sell for automation. What options are available for adding codegen flags to Rust builds through <code>cargo</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1452161611, "post_id": 34627695, "comment_id": 57049904, "body": "I have gone ahead and removed the answer from the question; if I deleted some content that you wish to retrieve (for example, to post your own answer if you think your code is better than Lukas&#39;) then you can click on &quot;edited X time ago&quot; which links to the <a href=\"https://stackoverflow.com/posts/34627695/revisions\">revisions page</a> for your question and grab all you want from there."}], "answers": [{"comments": [{"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452066460, "post_id": 34627892, "comment_id": 57001292, "body": "Gettin <code>error: cannot borrow immutable field &#39;p.left&#39; as mutable</code>. How do I make the item in the list mutable? My current declartion is <code>let mut philosophers: Vec&lt;Philosopher&gt; = vec![];</code>. Trying to put <code>mut</code> in varous places didn&#39;t seem to solve my problem."}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452067013, "post_id": 34627892, "comment_id": 57001540, "body": "Everything works now thanks to your edit. Thanks a ton!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1452065840, "creation_date": 1452065840, "answer_id": 34627892, "question_id": 34627695, "link": "https://stackoverflow.com/questions/34627695/using-a-list-item-to-edit-a-list/34627892#34627892", "title": "Using a list item to edit a list", "body": "<p>Indeed, you can't change something you are currently borrowing. You <em>could</em> clone it -- you are already cloning the <code>name</code> field anyway and <code>left</code> and <code>right</code> are only <code>usize</code>.</p>\n\n<p>Assuming your structure contains more and bigger data, cloning is not an option. There are multiple possible solutions in that case. You could use a <code>Vec</code> instead of an ordinary array: first create all 4 normal philosophers and then <code>push</code> the last one. Or you can use <a href=\"http://doc.rust-lang.org/std/mem/fn.swap.html\" rel=\"nofollow\"><code>std::mem::swap</code></a> to swap <code>left</code> and <code>right</code>:</p>\n\n<pre><code>std::mem::swap(&amp;mut philosophers[length - 1].left, &amp;mut philosophers[length - 1].right);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452066946, "post_id": 34628099, "comment_id": 57001510, "body": "this will also copy the data. I was trying to understand a rusty way to do this without copying the data. Obviously in this simple example, copying a few uints isn&#39;t a problem :)"}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": false, "score": 0, "last_activity_date": 1452066751, "creation_date": 1452066751, "answer_id": 34628099, "question_id": 34627695, "link": "https://stackoverflow.com/questions/34627695/using-a-list-item-to-edit-a-list/34628099#34628099", "title": "Using a list item to edit a list", "body": "<p>This example is so short that IMHO the original solution (without the loop) is more expressive. But if you want to change the last philosopher, you can do this:</p>\n\n<pre><code>let p = &amp;mut philosophers[length - 1];\nlet left = p.left;\nlet right = p.right;\np.left = right;\np.right = left;\n</code></pre>\n\n<p>You will operate on a reference of the last philosopher directly. This way, you don't need to clone his/her name, just swap the fork ids.</p>\n"}], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 34627892, "answer_count": 2, "score": 0, "last_activity_date": 1452161513, "creation_date": 1452064921, "last_edit_date": 1452161513, "question_id": 34627695, "link": "https://stackoverflow.com/questions/34627695/using-a-list-item-to-edit-a-list", "title": "Using a list item to edit a list", "body": "<p>I am doing some modifications of the <a href=\"https://doc.rust-lang.org/book/dining-philosophers.html\" rel=\"nofollow\">dining philosophers</a> problem from the Rust book.</p>\n\n<p>In the book, they create all the philosophers manually, with the last one having his left and right hand switched. I did this programmatically (using a for loop that I pushed philosophers onto) and now I want to modify the final philosopher.</p>\n\n<p><strong>This is what I want to do</strong></p>\n\n<pre><code>// make the last philosopher left handed (switch forks)\nlet p = &amp;philosophers[length - 1];\nphilosophers[length - 1] = Philosopher{left: p.right, right: p.left, name: p.name.clone()};\n// error: cannot move out of indexed content [E0507]\n</code></pre>\n\n<p><strong>This is what I have to do</strong></p>\n\n<pre><code>philosophers[length - 1] = Philosopher{\n   left: philosophers[length - 1].right, \n   right: philosophers[length - 1].left, \n   name: philosophers[length -1].name.clone(),\n};\n</code></pre>\n\n<p>The first example doesn't compile, and I can't find a way to get it compile without doing something like <code>let p = philosophers[length - 1].clone()</code> -- which completely copies the data! (not really what I want).</p>\n\n<p>Is there a way to do this more rustily?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1452035490, "last_edit_date": 1452035490, "creation_date": 1452033575, "answer_id": 34622536, "question_id": 34622127, "link": "https://stackoverflow.com/questions/34622127/how-to-convert-a-const-pointer-into-a-vec-to-correctly-drop-it/34622536#34622536", "title": "How to convert a *const pointer into a Vec to correctly drop it?", "body": "<p>The very short answer is <code>self.data as *mut u8</code>. But, let's talk more details...</p>\n\n<p>First, words of warning:</p>\n\n<ol>\n<li><p>Do <strong>not</strong> use <code>Vec::from_raw_parts</code> unless the pointer came from a <code>Vec</code> originally. There is <strong>no guarantee</strong> that an arbitrary pointer will be compatible with a <code>Vec</code> and you are likely to create giant holes in your program if you proceed.</p></li>\n<li><p>Do <strong>not</strong> free a pointer that you don't own. Doing so leads to <em>double frees</em>, which will blow other large holes in your program.</p></li>\n<li><p>You <strong>need</strong> to know the <em>capacity</em> of the vector before you can reconstruct it. Your example struct only contains a <code>len</code>. This is only acceptable if the <code>len</code> and <code>capacity</code> are equal.</p></li>\n</ol>\n\n<p>Now, let's see if I can follow my own rules...</p>\n\n<pre><code>extern crate libc;\n\nuse std::mem;\n\n#[repr(C)]\npub struct Array {\n    data: *const libc::c_void,\n    len: libc::size_t,\n}\n\n// Note that both of these methods should probably be implementations\n// of the `From` trait to allow them to participate in more places.\nimpl Array {\n    fn from_vec(mut v: Vec&lt;u8&gt;) -&gt; Array {\n        v.shrink_to_fit(); // ensure capacity == size\n\n        let a = Array {\n            data: v.as_ptr() as *const libc::c_void,\n            len: v.len(),\n        };\n\n        mem::forget(v);\n\n        a\n    }\n\n    fn into_vec(self) -&gt; Vec&lt;u8&gt; {\n        unsafe { Vec::from_raw_parts(self.data as *mut u8, self.len, self.len) }\n    }\n}\n\nfn main() {\n    let v = vec![1, 2, 3];\n    let a = Array::from_vec(v);\n    let v = a.into_vec();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Note that we don't have to do any explicit dropping of the <code>Vec</code> because the normal <code>Drop</code> implementation of <code>Vec</code> comes into play. We just have to make sure that we construct a <code>Vec</code> properly.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2058, "favorite_count": 1, "accepted_answer_id": 34622536, "answer_count": 1, "score": 1, "last_activity_date": 1452035490, "creation_date": 1452031842, "last_edit_date": 1452035356, "question_id": 34622127, "link": "https://stackoverflow.com/questions/34622127/how-to-convert-a-const-pointer-into-a-vec-to-correctly-drop-it", "title": "How to convert a *const pointer into a Vec to correctly drop it?", "body": "<p>After <a href=\"https://www.reddit.com/r/rust/comments/3zeq3w/correct_way_to_use_an_arraylike_struct_with_box/\" rel=\"nofollow\">asking</a> how I should go about freeing memory across the FFI boundary, someone on the Rust reddit suggested that rather than wrapping my structs in a <code>Box</code>, I could use <code>Vec::from_raw_parts</code> to construct a vector from the following struct, and that this could be safely dropped:</p>\n\n<pre><code>#[repr(C)]\npub struct Array {\n    data: *const c_void,\n    len: libc::size_t,\n}\n</code></pre>\n\n<p>However, <code>from_raw_parts</code> seems to require <code>*mut _</code> data, so I'm not sure how to proceed\u2026</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 1589, "user_id": 2770092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2321a7b8ee2a179e16b50242ecb21c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Cecilio Pardo", "link": "https://stackoverflow.com/users/2770092/cecilio-pardo"}, "is_accepted": false, "score": 2, "last_activity_date": 1557714151, "last_edit_date": 1557714151, "creation_date": 1452031484, "answer_id": 34622059, "question_id": 34621969, "link": "https://stackoverflow.com/questions/34621969/cannot-move-out-borrowed-content-when-assigning-a-variable-from-a-struct-field/34622059#34622059", "title": "&quot;cannot move out borrowed content&quot; when assigning a variable from a struct field", "body": "<p>You are moving <code>self.unit</code> at:</p>\n\n<pre><code>let point_unit = self.unit;\n</code></pre>\n\n<p>Try using references or making the type <code>Copy</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1452065083, "post_id": 34622316, "comment_id": 57000744, "body": "Nice answer; however, visitors from google need to read a lot, although the solution is <code>#[derive(Clone, Copy)]</code> in many cases. Maybe emphasize your &quot;The simplest solution is...&quot; section :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1557714005, "last_edit_date": 1557714005, "creation_date": 1452032647, "answer_id": 34622316, "question_id": 34621969, "link": "https://stackoverflow.com/questions/34621969/cannot-move-out-borrowed-content-when-assigning-a-variable-from-a-struct-field/34622316#34622316", "title": "&quot;cannot move out borrowed content&quot; when assigning a variable from a struct field", "body": "<p>The <em>complete</em> error message states:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:26:26\n   |\n26 |         let point_unit = self.unit;\n   |                          ^^^^^^^^^\n   |                          |\n   |                          cannot move out of borrowed content\n   |                          help: consider borrowing here: `&amp;self.unit`\n</code></pre>\n\n<p>Which is useful to understand where the move is occurring.</p>\n\n<p>The <em>simplest</em> solution is to implement either <code>Copy</code> or <code>Clone</code> for your <code>AngleUnit</code> type. If it's <code>Copy</code>, your code will work as-is. If it's only <code>Clone</code>, you have to explicitly call <code>.clone()</code> to make a duplicate.</p>\n\n<p>If your type cannot be made <code>Copy</code>, then you can use references, as the compiler suggests:</p>\n\n<pre><code>fn factor(_from: &amp;AngleUnit, _to: &amp;AngleUnit) -&gt; f32 {\n    1.0\n}\n</code></pre>\n\n<pre><code>fn convert(&amp;mut self, unit: AngleUnit) {\n    let point_unit = &amp;self.unit;\n    self.scale(factor(point_unit, &amp;unit));\n}\n</code></pre>\n\n<p>The original problem all boils down to this line:</p>\n\n<pre><code>let point_unit = self.unit;\n</code></pre>\n\n<p>What should the value of <code>point_unit</code> be?</p>\n\n<p>If we <em>moved</em> the value from <code>self.unit</code> to <code>point_unit</code>, then what would the value of <code>self.unit</code> be? The \"easy\" solution would be that it is undefined memory, but experience has shown that we programmers will screw that up and introduce exciting-to-debug problems.</p>\n\n<p>We could copy the value automatically, but what would happen if <code>AngleUnit</code> were a type that took up 10 MiB of space? Then an innocent looking line just sucked up a bunch of memory and time. That's not very nice either.</p>\n\n<p>Instead, Rust makes it so that types are <em>moved</em> by default and you cannot leave an object in an undefined state. Certain types can opt into the ability to be automatically copied \u2014 this is the <code>Copy</code> trait. You can also allow types to be explicitly copied \u2014 the <code>Clone</code> trait. You can also obtain a <em>reference</em> to an existing value and pass that around. The borrow checker will prevent you from using that reference after it is no longer valid.</p>\n"}, {"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 4, "last_activity_date": 1557714134, "last_edit_date": 1557714134, "creation_date": 1452032899, "answer_id": 34622383, "question_id": 34621969, "link": "https://stackoverflow.com/questions/34621969/cannot-move-out-borrowed-content-when-assigning-a-variable-from-a-struct-field/34622383#34622383", "title": "&quot;cannot move out borrowed content&quot; when assigning a variable from a struct field", "body": "<p>You need to mark the <code>AngleUnit</code> with the <code>#[derive(Copy, Clone)]</code> attribute in order to allow Rust to <em>copy</em> the <code>AngleUnit</code> from one variable to another, like you do in <code>let point_unit = self.unit</code>.</p>\n\n<p>By default, Rust is only allowed to <em>move</em> your structures since <em>moving</em> is generally more efficient than making a copy. For instance, if your structure would have had a <code>Vec</code> or a <code>String</code> in it then to <em>copy</em> the structure the program would have to allocate new memory for <code>Vec</code> or <code>String</code> contents on the heap. Whereas <em>moving</em> a <code>Vec</code> or a <code>String</code> incurs no extra heap allocations.</p>\n\n<p>In this case I guess the <code>AngleUnit</code> is just a wrapper around a small primitive value so it's completely okay to <em>copy</em> it.</p>\n\n<p>Here's <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=04daa9a35c63af68419c51b6139c43dd\" rel=\"nofollow noreferrer\">an example of your code with the attribute added</a>:</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct AngleUnit;\n\nstruct Point {\n    x: f32,\n    y: f32,\n    z: f32,\n    unit: AngleUnit,\n}\n\nfn factor(from: AngleUnit, to: AngleUnit) -&gt; f32 {\n    1f32\n}\n\nimpl Point {\n    pub fn new(x: f32, y: f32, z: f32, unit: AngleUnit) -&gt; Point {\n        Point { x, y, z, unit }\n    }\n\n    fn scale(&amp;mut self, factor: f32) {\n        self.x *= factor;\n        self.y *= factor;\n        self.z *= factor;\n    }\n\n    fn convert(&amp;mut self, unit: AngleUnit) {\n        let point_unit = self.unit;\n        self.scale(factor(point_unit, unit));\n    }\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 0, "accepted_answer_id": 34622316, "answer_count": 3, "score": 3, "last_activity_date": 1557714151, "creation_date": 1452031086, "last_edit_date": 1557713830, "question_id": 34621969, "link": "https://stackoverflow.com/questions/34621969/cannot-move-out-borrowed-content-when-assigning-a-variable-from-a-struct-field", "title": "&quot;cannot move out borrowed content&quot; when assigning a variable from a struct field", "body": "<p>I'm learning Rust and I'm fighting against the borrow checker. </p>\n\n<p>I have a basic <code>Point</code> structure. I have a <code>scale</code> function that modifies all the coordinates of the point. I would like to call this method from another method named <code>convert</code>:</p>\n\n<pre><code>struct AngleUnit;\n\nstruct Point {\n    x: f32,\n    y: f32,\n    z: f32,\n    unit: AngleUnit,\n}\n\nfn factor(_from: AngleUnit, _to: AngleUnit) -&gt; f32 {\n    1.0\n}\n\nimpl Point {\n    pub fn new(x: f32, y: f32, z: f32, unit: AngleUnit) -&gt; Point {\n        Point { x, y, z, unit }\n    }\n\n    fn scale(&amp;mut self, factor: f32) {\n        self.x *= factor;\n        self.y *= factor;\n        self.z *= factor;\n    }\n\n    fn convert(&amp;mut self, unit: AngleUnit) {\n        let point_unit = self.unit;\n        self.scale(factor(point_unit, unit));\n    }\n}\n</code></pre>\n\n<p>Now I have the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot move out of borrowed content\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 12977, "user_id": 4453262, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b98c905b863b482c3d1d6616d3482b54?s=128&d=identicon&r=PG&f=1", "display_name": "karthik manchala", "link": "https://stackoverflow.com/users/4453262/karthik-manchala"}, "edited": false, "score": 0, "creation_date": 1452001026, "post_id": 34612960, "comment_id": 56971098, "body": "how about writing 2 individual replace_all statements?"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1452002735, "post_id": 34612960, "comment_id": 56972289, "body": "Your last snippet with <code>fn_with_pattern_matching</code> should be workable. See the example in the <code>regex</code> docs: <a href=\"http://doc.rust-lang.org/regex/regex/enum.Regex.html#examples-2\" rel=\"nofollow noreferrer\">doc.rust-lang.org/regex/regex/enum.Regex.html#examples-2</a> You will likely need to make use of capture groups to determine which text to use as a replacement though."}, {"owner": {"reputation": 505, "user_id": 4385847, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DGVyxFZvsAM/AAAAAAAAAAI/AAAAAAAAACk/3lrAKjeCsvk/photo.jpg?sz=128", "display_name": "Vin", "link": "https://stackoverflow.com/users/4385847/vin"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1452003280, "post_id": 34612960, "comment_id": 56972701, "body": "@BurntSushi5, yeah I&#39;ve tried using capture groups but I have alotta trouble understanding the docs and can&#39;t seem to get it working as intended"}, {"owner": {"reputation": 505, "user_id": 4385847, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DGVyxFZvsAM/AAAAAAAAAAI/AAAAAAAAACk/3lrAKjeCsvk/photo.jpg?sz=128", "display_name": "Vin", "link": "https://stackoverflow.com/users/4385847/vin"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1452003875, "post_id": 34612960, "comment_id": 56973172, "body": "@BurntSushi5 I think that method also requires me to explicitly identify capture index numbers, which is not desirable if I don&#39;t know whether the string has those phrases"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1452005148, "post_id": 34612960, "comment_id": 56974156, "body": "Please <a href=\"https://stackoverflow.com/posts/34612960/edit\">edit</a> your question to show what you have tried. Stack Overflow isn&#39;t a service where other people write code for you. Show us what you have written to implement <code>fn_with_pattern_matching</code> and we can help get that to work."}], "answers": [{"comments": [{"owner": {"reputation": 505, "user_id": 4385847, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DGVyxFZvsAM/AAAAAAAAAAI/AAAAAAAAACk/3lrAKjeCsvk/photo.jpg?sz=128", "display_name": "Vin", "link": "https://stackoverflow.com/users/4385847/vin"}, "edited": false, "score": 0, "creation_date": 1452003169, "post_id": 34613119, "comment_id": 56972623, "body": "Thanks for the suggestion but this is not very DRY and doesn&#39;t scale well at all. I&#39;m planning on adding a lot more phrases to replace (eg. &quot;I&quot; to &quot;you&quot;...etc)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1452005046, "post_id": 34613119, "comment_id": 56974092, "body": "<i>but this is not very DRY</i> \u2014 place all the strings in an array and iterate over the array. If your application logic is &quot;replace all A with B, then all C with D, then all E with F&quot;, then the code will reflect that repeated logic."}], "tags": [], "owner": {"reputation": 12977, "user_id": 4453262, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b98c905b863b482c3d1d6616d3482b54?s=128&d=identicon&r=PG&f=1", "display_name": "karthik manchala", "link": "https://stackoverflow.com/users/4453262/karthik-manchala"}, "is_accepted": false, "score": 2, "last_activity_date": 1452052207, "last_edit_date": 1452052207, "creation_date": 1452001219, "answer_id": 34613119, "question_id": 34612960, "link": "https://stackoverflow.com/questions/34612960/how-do-i-iterate-through-a-string-and-replace-certain-phrases/34613119#34613119", "title": "How do I iterate through a string and replace certain phrases?", "body": "<p>You can do the following:</p>\n\n<pre><code>let str = \"you are awesome and so is your hat\";\nlet re = Regex::new(r\"you are\").unwrap();\nlet re1 = Regex::new(r\"your\").unwrap();\nre.replace_all(str, \"I am\");\nre1.replace_all(str, \"my\");\n</code></pre>\n\n<p><strong>Edit:</strong> </p>\n\n<p>If you have lot of phrases to replace, create a map of (\"phrase to replace\", \"phrase to replace with\") and iterate over it to perform the above logic.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452090354, "post_id": 34628173, "comment_id": 57015917, "body": "<i>&quot;because the subject string is only processed once&quot;</i> \u2014 which also changes the behavior, correct? For example, if I replace <code>A -&gt; BC</code> and <code>B -&gt; XY</code>, then making multiple loops vs a single loop with multiple matches will yield different results."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1452090659, "post_id": 34628173, "comment_id": 57016101, "body": "@Shepmaster That depends on how the loop was implemented in the first place and what the regular expressions are. There are cases where the behaviour would be the same and the only difference will be in the runtime cost. As usual, the developer should understand what she&#39;s doing. My goal here was not to write a book about regular expressions, <code>MARK</code>, and all the nuances thereof, but to simply mention that valuable tool.  ; )"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 1, "last_activity_date": 1452068892, "last_edit_date": 1452068892, "creation_date": 1452067034, "answer_id": 34628173, "question_id": 34612960, "link": "https://stackoverflow.com/questions/34612960/how-do-i-iterate-through-a-string-and-replace-certain-phrases/34628173#34628173", "title": "How do I iterate through a string and replace certain phrases?", "body": "<p>Let us start with <code>karthik manchala</code> answer and <code>Shepmaster</code> suggestion:</p>\n\n<blockquote>\n  <p>place all the strings in an array and iterate over the array. If your\n  application logic is \"replace all A with B, then all C with D, then\n  all E with F\", then the code will reflect that repeated logic.</p>\n</blockquote>\n\n<p>Instead of keeping the strings in an array I would recommend storing the compiled regular expressions there in order not to rebuild them every time.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\nuse std::env::args;\nuse std::iter::FromIterator;\n\nfn main() {\n    let patterns = [(\"your\", \"mine\"), (\"you are\", \"I am\")];\n    let patterns = Vec::from_iter(patterns.into_iter().map(|&amp;(k, v)| {\n        (Regex::new(k).expect(&amp;format!(\"Can't compile the regular expression: {}\", k)),\n         v)\n    }));\n    for arg in args().skip(1) {\n        println!(\"Argument: {}\", arg);\n        for &amp;(ref re, replacement) in patterns.iter() {\n            let got = re.replace_all(&amp;arg, replacement);\n            if got != arg {\n                println!(\"Changed to: {}\", got);\n                continue;\n            }\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>That would be it, but for the sake of completeness I'd like to add that if you want superior performance then you might use the <code>MARK</code> feature present in the <code>PCRE</code> regular expressions engine (<a href=\"https://crates.io/crates/pcre/\" rel=\"nofollow\">pcre</a> crate).</p>\n\n<p>With <code>MARK</code> and a patterns like this</p>\n\n<pre><code>\"(?x) ^ (?:\n    (*MARK:0) first pattern \\\n  | (*MARK:1) second pattern \\\n  | (*MARK:2) third pattern \\\n)\"\n</code></pre>\n\n<p>you can use the <code>MARK</code> number for classification or in your case as an index into an array with replacements. This is often better than using multiple regular expressions because the subject string is only processed once.</p>\n"}], "owner": {"reputation": 505, "user_id": 4385847, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DGVyxFZvsAM/AAAAAAAAAAI/AAAAAAAAACk/3lrAKjeCsvk/photo.jpg?sz=128", "display_name": "Vin", "link": "https://stackoverflow.com/users/4385847/vin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 587, "favorite_count": 0, "accepted_answer_id": 34628173, "answer_count": 2, "score": 1, "last_activity_date": 1452068892, "creation_date": 1452000653, "last_edit_date": 1452001154, "question_id": 34612960, "link": "https://stackoverflow.com/questions/34612960/how-do-i-iterate-through-a-string-and-replace-certain-phrases", "title": "How do I iterate through a string and replace certain phrases?", "body": "<p>I want to be able to replace phrases like \"you are\" to \" I am\" and \"your\" to \"my\". How would I do this while keeping my code DRY?</p>\n\n<p>so far I have something like this...</p>\n\n<pre><code>let re = Regex::new(r\"you are\").unwrap();\nre.replace_all(\"you are awesome and so is your hat\", \"I am\")\n</code></pre>\n\n<p>But this only replaces the \"you are\" but not the \"my\" part.</p>\n\n<p>I think ideally it'll look something like </p>\n\n<pre><code>let re = Regex::new(r\"your|you are\").unwrap();\nre.replace_all(\"you are awesome and so is your hat\", fn_with_pattern_matching)\n</code></pre>\n"}, {"tags": ["macos", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1452026226, "post_id": 34615626, "comment_id": 56987149, "body": "I&#39;m pretty sure that running <code>brew link --force openssl</code> together with installed <code>pkg-config</code> will resolve this problem automatically. That said, it may be not a good idea to make openssl libraries available by default, I&#39;m not sure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452026390, "post_id": 34615626, "comment_id": 56987239, "body": "@VladimirMatveev yeah, that&#39;s mentioned in a few of the issues, but I am likewise wary of something like <code>--force</code> until I understand it thoroughly. I&#39;m hoping that the Homebrew devs do all the hard work and make a solid recommendation that I can just follow. :-)"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 2, "creation_date": 1452027098, "post_id": 34615626, "comment_id": 56987604, "body": "Well, AFAIK in this case <code>--force</code> only overrides the setting in the formula not to create symlinks by default. So this should not do anything dangerous and can even be reverted by <code>brew unlink</code>. But yes, I don&#39;t know about consequences of making openssl libraries available in <code>&#47;usr&#47;local&#47;lib</code>."}, {"owner": {"reputation": 1311, "user_id": 1265214, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aeca2beea29930391251f12d82c543fc?s=128&d=identicon&r=PG", "display_name": "pyj", "link": "https://stackoverflow.com/users/1265214/pyj"}, "edited": false, "score": 0, "creation_date": 1458413831, "post_id": 34615626, "comment_id": 59853702, "body": "I had a similar issue with hyper and this also helped me fix it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1478195152, "last_edit_date": 1478195152, "creation_date": 1452008659, "answer_id": 34615626, "question_id": 34612395, "link": "https://stackoverflow.com/questions/34612395/openssl-crate-fails-compilation-on-mac-os-x-10-11/34615626#34615626", "title": "OpenSSL crate fails compilation on Mac OS X 10.11", "body": "<p>As of rust-openssl version 0.8, Homebrew-installed OpenSSL libraries will be automatically detected by the crate, there is no need to set extra environment variables.</p>\n\n<p>If you need to support a version prior to that or choose to not use Homebrew, read on.</p>\n\n<hr>\n\n<p>This is a <a href=\"https://github.com/sfackler/rust-openssl/issues/316\" rel=\"noreferrer\">known issue</a> (also <a href=\"https://github.com/sfackler/rust-openssl/issues/310\" rel=\"noreferrer\">this</a> and <a href=\"https://github.com/sfackler/rust-openssl/issues/255\" rel=\"noreferrer\">this</a>), but not one that the crate can fix.</p>\n\n<p>The quick solution is to install OpenSSL with Homebrew and then explicitly point to the directories where OpenSSL is found by setting the <code>OPENSSL_INCLUDE_DIR</code> and <code>OPENSSL_LIB_DIR</code> environment variables:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>OPENSSL_INCLUDE_DIR=/usr/local/Cellar/openssl/1.0.2e/include \\\nOPENSSL_LIB_DIR=/usr/local/Cellar/openssl/1.0.2e/lib \\\ncargo build\n</code></pre>\n\n<p>If you've already done one <code>cargo build</code>, you will need to run <code>cargo clean</code> first to clear our some stale cached information.</p>\n\n<p>If you don't want to set this for every shell you open, add it to your shell initialization files (like <code>~/.bash_profile</code>). You can make it a bit less brittle by not hard-coding the version number:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include\nexport OPENSSL_LIB_DIR=$(brew --prefix openssl)/lib\n</code></pre>\n\n<p>If you don't want to use Homebrew, follow the same process but using the appropriate path to your copy of OpenSSL.</p>\n\n<hr>\n\n<p>The longer reason is well <a href=\"https://github.com/sfackler/rust-openssl/issues/316#issuecomment-162483617\" rel=\"noreferrer\">described by andrewtj</a>:</p>\n\n<blockquote>\n  <p>OpenSSL doesn't have a stable ABI so for compatibility purposes Apple have maintained a fork that's compatible with one of the earlier ABIs. They deprecated OpenSSL in 10.7 and finally dropped the headers in 10.11 to push OS X app developers toward bundling their own OpenSSL or using their frameworks. The dylibs have been left around so apps that haven't been updated don't break. You can still link against them but you're opening yourself up to odd compatibility issues by doing so (unless you grab the headers from an earlier OS X release).</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471211300, "post_id": 38946292, "comment_id": 65248883, "body": "Note that this solution (which seems reasonable) doesn&#39;t seem to depend on homebrew; regardless of how or where you&#39;ve installed openssl, you should be able to add those configuration variables. The big downside is that you are tying your code to only run on your machine (or machines with similar layouts). Not all <code>x86_64-apple-darwin</code> targets will have the same installation paths."}, {"owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471211846, "post_id": 38946292, "comment_id": 65249030, "body": "True, it&#39;s not a hard homebrew dependency, but you do need to have installed openssl yourself as of El Cap, because the headers are gone for the system openssl (plus it&#39;s just too old to be of much use)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471212011, "post_id": 38946292, "comment_id": 65249073, "body": "Yep; that seems to fit with the quote at the bottom of the other answer. Are things like Fink or MacPorts still a thing? I guess people could always have compiled their own OpenSSL version..."}, {"owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471212217, "post_id": 38946292, "comment_id": 65249122, "body": "They are, but in my not so humble opinion hombrew is a significantly better option, for much the same reason I don&#39;t like the idea of using the <code>brew link --force openssl</code> approach, they pollute the system and are hard to clean up."}], "tags": [], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "is_accepted": false, "score": 1, "last_activity_date": 1471211112, "last_edit_date": 1495535480, "creation_date": 1471206264, "answer_id": 38946292, "question_id": 34612395, "link": "https://stackoverflow.com/questions/34612395/openssl-crate-fails-compilation-on-mac-os-x-10-11/38946292#38946292", "title": "OpenSSL crate fails compilation on Mac OS X 10.11", "body": "<p>If you have homebrew's openssl installed just add the following to your Cargo.toml:</p>\n\n<pre><code>[target.x86_64-apple-darwin.openssl-sys]\nrustc-link-search = [ \"/usr/local/opt/openssl/lib\" ]\nrustc-link-lib = [ \"ssl\", \"crypto\" ]\ninclude = [ \"/usr/local/opt/openssl/include\" ]\n</code></pre>\n\n<p>and then <code>cargo clean &amp;&amp; cargo build</code>. No breaking OS X by introducing an incompatible openssl into the library load paths, and no forgetting to set/unset environment variables when you want to build (or polluting your shell env when not working on Rust stuff). All in all a much happier and less infuriating approach.</p>\n\n<p>I can't add this answer to <a href=\"https://stackoverflow.com/questions/37404343/what-should-i-override-in-cargo-for-the-openssl-rust-crate-to-build\">my own question</a> where it belongs (because it depends on homebrew), because <a href=\"https://stackoverflow.com/users/155423/shepmaster\">Shepmaster</a> decided it should be closed but I'll answer here and link to that question.</p>\n"}, {"comments": [{"owner": {"reputation": 9199, "user_id": 1215344, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nuA7S.jpg?s=128&g=1", "display_name": "jamescampbell", "link": "https://stackoverflow.com/users/1215344/jamescampbell"}, "edited": false, "score": 0, "creation_date": 1493091250, "post_id": 39380733, "comment_id": 74252032, "body": "this worked for me as of April 2017 on El Capitan OSX. Thanks"}, {"owner": {"reputation": 1600, "user_id": 4562156, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WuCmq.jpg?s=128&g=1", "display_name": "Sean Pianka", "link": "https://stackoverflow.com/users/4562156/sean-pianka"}, "edited": false, "score": 0, "creation_date": 1602651012, "post_id": 39380733, "comment_id": 113784428, "body": "Worked for me on Catalina 10.15.7 on Oct 2020"}], "tags": [], "owner": {"reputation": 3508, "user_id": 442923, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba37b94df29174ae45d05972d5046c5e?s=128&d=identicon&r=PG", "display_name": "adelarsq", "link": "https://stackoverflow.com/users/442923/adelarsq"}, "is_accepted": false, "score": 7, "last_activity_date": 1473293425, "creation_date": 1473293425, "answer_id": 39380733, "question_id": 34612395, "link": "https://stackoverflow.com/questions/34612395/openssl-crate-fails-compilation-on-mac-os-x-10-11/39380733#39380733", "title": "OpenSSL crate fails compilation on Mac OS X 10.11", "body": "<p>With <a href=\"http://brew.sh/\" rel=\"noreferrer\">Brew</a> use like this:</p>\n\n<pre><code>brew install openssl\nexport OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include\nexport OPENSSL_LIB_DIR=`brew --prefix openssl`/lib\ncargo clean\ncargo build\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 2, "creation_date": 1547742004, "post_id": 41621782, "comment_id": 95304754, "body": "Interesting that the real answer is way back here."}], "tags": [], "owner": {"reputation": 4311, "user_id": 1317564, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bf1e12a76e72dcbae8e6e0f8c2ea73ed?s=128&d=identicon&r=PG", "display_name": "Learn OpenGL ES", "link": "https://stackoverflow.com/users/1317564/learn-opengl-es"}, "is_accepted": false, "score": 1, "last_activity_date": 1484250677, "last_edit_date": 1495541392, "creation_date": 1484250677, "answer_id": 41621782, "question_id": 34612395, "link": "https://stackoverflow.com/questions/34612395/openssl-crate-fails-compilation-on-mac-os-x-10-11/41621782#41621782", "title": "OpenSSL crate fails compilation on Mac OS X 10.11", "body": "<p><a href=\"https://stackoverflow.com/a/39380733/1317564\">https://stackoverflow.com/a/39380733/1317564</a>'s answer for MacPorts:</p>\n\n<pre><code>sudo port install openssl\nexport OPENSSL_INCLUDE_DIR=/opt/local/include\nexport OPENSSL_LIB_DIR=/opt/local/lib\ncargo clean\ncargo build\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3351, "favorite_count": 9, "accepted_answer_id": 34615626, "answer_count": 4, "score": 15, "last_activity_date": 1484250677, "creation_date": 1451998906, "last_edit_date": 1452008174, "question_id": 34612395, "link": "https://stackoverflow.com/questions/34612395/openssl-crate-fails-compilation-on-mac-os-x-10-11", "title": "OpenSSL crate fails compilation on Mac OS X 10.11", "body": "<p>I tried to install the Iron framework for Rust on Mac OS X 10.11.2, but it failed when I run <code>cargo build</code> or <code>cargo run</code> on compiling <code>openssl</code>'s stuff:</p>\n\n<pre><code>failed to run custom build command for `openssl-sys-extras v0.7.4`\nProcess didn't exit successfully: `/xxx/rust/hello/target/debug/build/openssl-sys-extras-413d6c73b37a590d/build-script-build` (exit code: 101)\n--- stdout\nTARGET = Some(\"x86_64-apple-darwin\")\nOPT_LEVEL = Some(\"0\")\nPROFILE = Some(\"debug\")\nTARGET = Some(\"x86_64-apple-darwin\")\ndebug=true opt-level=0\nHOST = Some(\"x86_64-apple-darwin\")\nTARGET = Some(\"x86_64-apple-darwin\")\nTARGET = Some(\"x86_64-apple-darwin\")\nHOST = Some(\"x86_64-apple-darwin\")\nCC_x86_64-apple-darwin = None\nCC_x86_64_apple_darwin = None\nHOST_CC = None\nCC = None\nHOST = Some(\"x86_64-apple-darwin\")\nTARGET = Some(\"x86_64-apple-darwin\")\nHOST = Some(\"x86_64-apple-darwin\")\nCFLAGS_x86_64-apple-darwin = None\nCFLAGS_x86_64_apple_darwin = None\nHOST_CFLAGS = None\nCFLAGS = None\nrunning: \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-g\" \"-m64\" \"-fPIC\" \"-o\" \"/xxx/rust/hello/target/debug/build/openssl-sys-extras-413d6c73b37a590d/out/src/openssl_shim.o\" \"-c\" \"src/openssl_shim.c\"\nExitStatus(Code(1))\n\n\ncommand did not execute successfully, got: exit code: 1\n\n\n\n--- stderr\nsrc/openssl_shim.c:1:10: fatal error: 'openssl/hmac.h' file not found\n#include &lt;openssl/hmac.h&gt;\n     ^\n1 error generated.\nthread '&lt;main&gt;' panicked at 'explicit panic', /xxx/.cargo/registry/src/github.com-0a35038f75765ae4/gcc-0.3.21/src/lib.rs:772\n</code></pre>\n\n<p><code>openssl</code> version seems OK:</p>\n\n<pre><code>$ openssl version\nOpenSSL 0.9.8zg 14 July 2015\n</code></pre>\n\n<p>I don't know what I have to do in order to make this installation work and give Iron a try.</p>\n"}, {"tags": ["process", "io", "rust", "blocking", "pty"], "answers": [{"comments": [{"owner": {"reputation": 7519, "user_id": 5747548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45e0667746a2b2050babf6e83ce467a3?s=128&d=identicon&r=PG&f=1", "display_name": "jkiiski", "link": "https://stackoverflow.com/users/5747548/jkiiski"}, "edited": false, "score": 0, "creation_date": 1452016585, "post_id": 34616729, "comment_id": 56981865, "body": "Thanks for the helpful explanation. I&#39;ll look into MIO, and if that doesn&#39;t work out, then I&#39;ll use separate threads."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 18, "last_activity_date": 1602920563, "last_edit_date": 1602920563, "creation_date": 1452011938, "answer_id": 34616729, "question_id": 34611742, "link": "https://stackoverflow.com/questions/34611742/how-do-i-read-the-output-of-a-child-process-without-blocking-in-rust/34616729#34616729", "title": "How do I read the output of a child process without blocking in Rust?", "body": "<p>Streams are <em>blocking</em> by default. TCP/IP streams, filesystem streams, pipe streams, they are all blocking. When you tell a stream to give you a chunk of bytes it will stop and wait till it has the given amout of bytes or till something else happens (an <a href=\"https://stackoverflow.com/questions/6249577/interrupting-blocked-read\">interrupt</a>, an end of stream, an error).</p>\n<p>The operating systems are eager to return the data to the reading process, so if all you want is to wait for the next line and handle it as soon as it comes in then the method suggested by Shepmaster in <a href=\"https://stackoverflow.com/questions/31576555/unable-to-pipe-to-or-from-spawned-child-process-more-than-once/31577297#31577297\">Unable to pipe to or from spawned child process more than once</a> (and also in his answer here) works.<br />\nThough in theory it doesn't have to work, because an operating system is allowed to make the <code>BufReader</code> wait for more data in <code>read</code>, but in practice the operating systems prefer the early &quot;short reads&quot; to waiting.</p>\n<p>This simple <code>BufReader</code>-based approach becomes even more dangerous when you need to handle multiple streams (like the <code>stdout</code> and <code>stderr</code> of a child process) or multiple processes. For example, <code>BufReader</code>-based approach might deadlock when a child process waits for you to drain its <code>stderr</code> pipe while your process is blocked waiting on it's empty <code>stdout</code>.</p>\n<p>Similarly, you can't use <code>BufReader</code> when you don't want your program to wait on the child process indefinitely. Maybe you want to display a progress bar or a timer while the child is still working and gives you no output.</p>\n<p>You can't use <code>BufReader</code>-based approach if your operating system happens not to be eager in returning the data to the process (prefers &quot;full reads&quot; to &quot;short reads&quot;) because in that case a few last lines printed by the child process might end up in a gray zone: the operating system got them, but they're not large enough to fill the <code>BufReader</code>'s buffer.</p>\n<p><code>BufReader</code> is limited to what the <code>Read</code> interface allows it to do with the stream, it's no less blocking than the underlying stream is. In order to be efficient it will <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#tymethod.read\" rel=\"nofollow noreferrer\">read</a> the input in chunks, telling the operating system to fill as much of its buffer as it has available.</p>\n<p>You might be wondering why reading data in chunks is so important here, why can't the <code>BufReader</code> just read the data byte by byte. The problem is that to read the data from a stream we need the operating system's help. On the other hand, we are not the operating system, we work isolated from it, so as not to mess with it if something goes wrong with our process. So in order to call to the operating system there needs to be a transition to &quot;kernel mode&quot; which might also incur a &quot;context switch&quot;. That is why calling the operating system to read every single byte is expensive. We want as few OS calls as possible and so we get the stream data in batches.</p>\n<p>To wait on a stream without blocking you'd need a <em>non-blocking stream</em>. MIO <a href=\"https://www.reddit.com/r/rust/comments/2nka2k/interactive_pipe_reading/cmfbe5w\" rel=\"nofollow noreferrer\">promises to have the required non-blocking stream support for pipes</a>, most probably with <a href=\"http://rustdoc.s3-website-us-east-1.amazonaws.com/mio/v0.5.x/mio/unix/struct.PipeReader.html\" rel=\"nofollow noreferrer\">PipeReader</a>, but I haven't checked it out so far.</p>\n<p>The non-blocking nature of a stream should make it possible to read data in chunks regardless of whether the operating system prefers the &quot;short reads&quot; or not. Because non-blocking stream never blocks. If there is no data in the stream it simply tells you so.</p>\n<p>In the absense of a non-blocking stream you'll have to resort to spawning threads so that the blocking reads would be performed in a separate thread and thus won't block your primary thread. You might also want to read the stream byte by byte in order to react to the line separator immediately in case the operating system does not prefer the &quot;short reads&quot;. Here's a working example: <a href=\"https://gist.github.com/ArtemGr/db40ae04b431a95f2b78\" rel=\"nofollow noreferrer\">https://gist.github.com/ArtemGr/db40ae04b431a95f2b78</a>.</p>\n<p>P.S. Here's an example of a function that allows to monitor the standard output of a program via a shared vector of bytes:</p>\n<pre><code>use std::io::Read;\nuse std::process::{Command, Stdio};\nuse std::sync::{Arc, Mutex};\nuse std::thread;\n\n/// Pipe streams are blocking, we need separate threads to monitor them without blocking the primary thread.\nfn child_stream_to_vec&lt;R&gt;(mut stream: R) -&gt; Arc&lt;Mutex&lt;Vec&lt;u8&gt;&gt;&gt;\nwhere\n    R: Read + Send + 'static,\n{\n    let out = Arc::new(Mutex::new(Vec::new()));\n    let vec = out.clone();\n    thread::Builder::new()\n        .name(&quot;child_stream_to_vec&quot;.into())\n        .spawn(move || loop {\n            let mut buf = [0];\n            match stream.read(&amp;mut buf) {\n                Err(err) =&gt; {\n                    println!(&quot;{}] Error reading from stream: {}&quot;, line!(), err);\n                    break;\n                }\n                Ok(got) =&gt; {\n                    if got == 0 {\n                        break;\n                    } else if got == 1 {\n                        vec.lock().expect(&quot;!lock&quot;).push(buf[0])\n                    } else {\n                        println!(&quot;{}] Unexpected number of bytes: {}&quot;, line!(), got);\n                        break;\n                    }\n                }\n            }\n        })\n        .expect(&quot;!thread&quot;);\n    out\n}\n\nfn main() {\n    let mut cat = Command::new(&quot;cat&quot;)\n        .stdin(Stdio::piped())\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn()\n        .expect(&quot;!cat&quot;);\n\n    let out = child_stream_to_vec(cat.stdout.take().expect(&quot;!stdout&quot;));\n    let err = child_stream_to_vec(cat.stderr.take().expect(&quot;!stderr&quot;));\n    let mut stdin = match cat.stdin.take() {\n        Some(stdin) =&gt; stdin,\n        None =&gt; panic!(&quot;!stdin&quot;),\n    };\n}\n</code></pre>\n<p>With a couple of helpers I'm using it to control an SSH session:</p>\n<pre><code>try_s! (stdin.write_all (b&quot;echo hello world\\n&quot;));\ntry_s! (wait_for\u02e2 (&amp;out, 0.1, 9., |s| s == &quot;hello world\\n&quot;));\n</code></pre>\n<p>P.S. Note that <code>await</code> on a <a href=\"https://docs.rs/async-std/1.6.5/async_std/io/trait.Read.html#method.read\" rel=\"nofollow noreferrer\">read</a> call in async-std is blocking as well. It's just instead of blocking a system thread it only blocks a chain of futures (a stack-less green thread essentially). The <a href=\"https://docs.rs/async-std/1.6.5/async_std/io/trait.Read.html#tymethod.poll_read\" rel=\"nofollow noreferrer\">poll_read</a> is the non-blocking interface. In <a href=\"https://github.com/async-rs/async-std/issues/499#issuecomment-614878693\" rel=\"nofollow noreferrer\">async-std#499</a> I've asked the developers whether there's a short read guarantee from these APIs.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 11, "last_activity_date": 1576596858, "last_edit_date": 1576596858, "creation_date": 1554691594, "answer_id": 55565595, "question_id": 34611742, "link": "https://stackoverflow.com/questions/34611742/how-do-i-read-the-output-of-a-child-process-without-blocking-in-rust/55565595#55565595", "title": "How do I read the output of a child process without blocking in Rust?", "body": "<h1>Tokio's <code>Command</code></h1>\n\n<p>Here is an example of using <a href=\"https://crates.io/crates/tokio\" rel=\"noreferrer\">tokio</a> 0.2:</p>\n\n<pre><code>use std::process::Stdio;\nuse futures::StreamExt; // 0.3.1\nuse tokio::{io::BufReader, prelude::*, process::Command}; // 0.2.4, features = [\"full\"]\n\n#[tokio::main]\nasync fn main() {\n    let mut cmd = Command::new(\"/tmp/slow.bash\")\n        .stdout(Stdio::piped()) // Can do the same for stderr\n        .spawn()\n        .expect(\"cannot spawn\");\n\n    let stdout = cmd.stdout().take().expect(\"no stdout\");\n    // Can do the same for stderr\n\n    // To print out each line\n    // BufReader::new(stdout)\n    //     .lines()\n    //     .for_each(|s| async move { println!(\"&gt; {:?}\", s) })\n    //     .await;\n\n    // To print out each line *and* collect it all into a Vec\n    let result: Vec&lt;_&gt; = BufReader::new(stdout)\n        .lines()\n        .inspect(|s| println!(\"&gt; {:?}\", s))\n        .collect()\n        .await;\n\n    println!(\"All the lines: {:?}\", result);\n}\n</code></pre>\n\n<h1>Tokio-Threadpool</h1>\n\n<p>Here is an example of using <a href=\"https://crates.io/crates/tokio\" rel=\"noreferrer\">tokio</a> 0.1 and <a href=\"https://crates.io/crates/tokio-threadpool\" rel=\"noreferrer\">tokio-threadpool</a>. We start the process in a thread using the <a href=\"https://docs.rs/tokio-threadpool/0.1.13/tokio_threadpool/fn.blocking.html\" rel=\"noreferrer\"><code>blocking</code></a> function. We convert that to a stream with <a href=\"https://docs.rs/futures/0.1.26/futures/stream/fn.poll_fn.html\" rel=\"noreferrer\"><code>stream::poll_fn</code></a> </p>\n\n<pre><code>use std::process::{Command, Stdio};\nuse tokio::{prelude::*, runtime::Runtime}; // 0.1.18\nuse tokio_threadpool; // 0.1.13\n\nfn stream_command_output(\n    mut command: Command,\n) -&gt; impl Stream&lt;Item = Vec&lt;u8&gt;, Error = tokio_threadpool::BlockingError&gt; {\n    // Ensure that the output is available to read from and start the process\n    let mut child = command\n        .stdout(Stdio::piped())\n        .spawn()\n        .expect(\"cannot spawn\");\n    let mut stdout = child.stdout.take().expect(\"no stdout\");\n\n    // Create a stream of data\n    stream::poll_fn(move || {\n        // Perform blocking IO\n        tokio_threadpool::blocking(|| {\n            // Allocate some space to store anything read\n            let mut data = vec![0; 128];\n            // Read 1-128 bytes of data\n            let n_bytes_read = stdout.read(&amp;mut data).expect(\"cannot read\");\n\n            if n_bytes_read == 0 {\n                // Stdout is done\n                None\n            } else {\n                // Only return as many bytes as we read\n                data.truncate(n_bytes_read);\n                Some(data)\n            }\n        })\n    })\n}\n\nfn main() {\n    let output_stream = stream_command_output(Command::new(\"/tmp/slow.bash\"));\n\n    let mut runtime = Runtime::new().expect(\"Unable to start the runtime\");\n\n    let result = runtime.block_on({\n        output_stream\n            .map(|d| String::from_utf8(d).expect(\"Not UTF-8\"))\n            .fold(Vec::new(), |mut v, s| {\n                print!(\"&gt; {}\", s);\n                v.push(s);\n                Ok(v)\n            })\n    });\n\n    println!(\"All the lines: {:?}\", result);\n}\n</code></pre>\n\n<p>There's numerous possible tradeoffs that can be made here. For example, always allocating 128 bytes isn't ideal, but it's simple to implement.</p>\n\n<h1>Support</h1>\n\n<p>For reference, here's <strong>slow.bash</strong>:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>#!/usr/bin/env bash\n\nset -eu\n\nval=0\n\nwhile [[ $val -lt 10 ]]; do\n    echo $val\n    val=$(($val + 1))\n    sleep 1\ndone\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 191, "user_id": 7383251, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-0B7ePFHM_ug/AAAAAAAAAAI/AAAAAAAADW8/CiTVXaMW-Fo/photo.jpg?sz=128", "display_name": "hilt0n", "link": "https://stackoverflow.com/users/7383251/hilt0n"}, "is_accepted": false, "score": 0, "last_activity_date": 1613863876, "last_edit_date": 1613863876, "creation_date": 1613832120, "answer_id": 66292796, "question_id": 34611742, "link": "https://stackoverflow.com/questions/34611742/how-do-i-read-the-output-of-a-child-process-without-blocking-in-rust/66292796#66292796", "title": "How do I read the output of a child process without blocking in Rust?", "body": "<p>If Unix support is sufficient, you can also make the two output streams as non-blocking and poll over them as you would do it on <code>TcpStream</code> with the <code>set_nonblocking</code> function.</p>\n<p>The <code>ChildStdout</code> and <code>ChildStderr</code> returned by the Command spawn are <code>Stdio</code> (and contain a file descriptor), you can modify directly the read behavior of these handle to make it non-blocking.</p>\n<p>Based on the work of <a href=\"https://github.com/jcreekmore/timeout-readwrite-rs\" rel=\"nofollow noreferrer\">jcreekmore/timeout-readwrite-rs</a> and <a href=\"https://github.com/anowell/nonblock-rs\" rel=\"nofollow noreferrer\">anowell/nonblock-rs</a>, I use this wrapper to modify the stream handles:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate libc;\nuse std::io::Read;\nuse std::os::unix::io::AsRawFd;\nuse libc::{F_GETFL, F_SETFL, fcntl, O_NONBLOCK};\n\nfn set_nonblocking&lt;H&gt;(handle: &amp;H, nonblocking: bool) -&gt; std::io::Result&lt;()&gt;\nwhere\n    H: Read + AsRawFd,\n{\n    let fd = handle.as_raw_fd();\n    let flags = unsafe { fcntl(fd, F_GETFL, 0) };\n    if flags &lt; 0 {\n        return Err(std::io::Error::last_os_error());\n    }\n    let flags = if nonblocking{\n        flags | O_NONBLOCK\n    } else {\n        flags &amp; !O_NONBLOCK\n    };\n    let res = unsafe { fcntl(fd, F_SETFL, flags) };\n    if res != 0 {\n        return Err(std::io::Error::last_os_error());\n    }\n    Ok(())\n}\n</code></pre>\n<p>You can manage the two streams as any other non-blocking stream. The following example is based on the <a href=\"https://crates.io/crates/polling\" rel=\"nofollow noreferrer\">polling</a> crate which makes really easy to handle read event and <code>BufReader</code> for line reading:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::process::{Command, Stdio};\nuse std::path::PathBuf;\nuse std::io::{BufReader, BufRead};\nuse std::thread;\nextern crate polling;\nuse polling::{Event, Poller};\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    let path = PathBuf::from(&quot;./worker.sh&quot;).canonicalize()?;\n\n    let mut child = Command::new(path)\n        .stdin(Stdio::null())\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn()\n        .expect(&quot;Failed to start worker&quot;);\n\n    let handle = thread::spawn({\n        let stdout = child.stdout.take().unwrap();\n        set_nonblocking(&amp;stdout, true)?;\n        let mut reader_out = BufReader::new(stdout);\n\n        let stderr = child.stderr.take().unwrap();\n        set_nonblocking(&amp;stderr, true)?;\n        let mut reader_err = BufReader::new(stderr);\n\n        move || {\n            let key_out = 1;\n            let key_err = 2;\n            let mut out_closed = false;\n            let mut err_closed = false;\n\n            let poller = Poller::new().unwrap();\n            poller.add(reader_out.get_ref(), Event::readable(key_out)).unwrap();\n            poller.add(reader_err.get_ref(), Event::readable(key_err)).unwrap();\n\n            let mut line = String::new();\n            let mut events = Vec::new();\n            loop {\n                // Wait for at least one I/O event.\n                events.clear();\n                poller.wait(&amp;mut events, None).unwrap();\n\n                for ev in &amp;events {\n                    // stdout is ready for reading\n                    if ev.key == key_out {\n                        let len = match reader_out.read_line(&amp;mut line) {\n                            Ok(len) =&gt; len,\n                            Err(e) =&gt; {\n                                println!(&quot;stdout read returned error: {}&quot;, e);\n                                0\n                            }\n                        };\n                        if len == 0 {\n                            println!(&quot;stdout closed (len is null)&quot;);\n                            out_closed = true;\n                            poller.delete(reader_out.get_ref()).unwrap();\n                        } else {\n                            print!(&quot;[STDOUT] {}&quot;, line);\n                            line.clear();\n                            // reload the poller\n                            poller.modify(reader_out.get_ref(), Event::readable(key_out)).unwrap();\n                        }\n                    }\n\n                    // stderr is ready for reading\n                    if ev.key == key_err {\n                        let len = match reader_err.read_line(&amp;mut line) {\n                            Ok(len) =&gt; len,\n                            Err(e) =&gt; {\n                                println!(&quot;stderr read returned error: {}&quot;, e);\n                                0\n                            }\n                        };\n                        if len == 0 {\n                            println!(&quot;stderr closed (len is null)&quot;);\n                            err_closed = true;\n                            poller.delete(reader_err.get_ref()).unwrap();\n                        } else {\n                            print!(&quot;[STDERR] {}&quot;, line);\n                            line.clear();\n                            // reload the poller\n                            poller.modify(reader_err.get_ref(), Event::readable(key_err)).unwrap();\n                        }\n                    }\n                }\n\n                if out_closed &amp;&amp; err_closed {\n                    println!(&quot;Stream closed, exiting process thread&quot;);\n                    break;\n                }\n            }\n        }\n    });\n\n    handle.join().unwrap();\n    Ok(())\n}\n</code></pre>\n<p>Additionally, used with a wrapper over an EventFd, it becomes possible to easily stop the process from another thread without blocking nor active polling and uses and only a single thread.</p>\n<p><strong>EDIT:</strong> It seems the polling crate sets automatically the polled handles in non-blocking mode following my tests. The set_nonblocking function is still useful in case you want to directly use the nix::poll object.</p>\n"}], "owner": {"reputation": 7519, "user_id": 5747548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45e0667746a2b2050babf6e83ce467a3?s=128&d=identicon&r=PG&f=1", "display_name": "jkiiski", "link": "https://stackoverflow.com/users/5747548/jkiiski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6484, "favorite_count": 8, "accepted_answer_id": 34616729, "answer_count": 3, "score": 21, "last_activity_date": 1613863876, "creation_date": 1451996906, "last_edit_date": 1555125579, "question_id": 34611742, "link": "https://stackoverflow.com/questions/34611742/how-do-i-read-the-output-of-a-child-process-without-blocking-in-rust", "title": "How do I read the output of a child process without blocking in Rust?", "body": "<p>I'm making a small ncurses application in Rust that needs to communicate with a child process. I already have a prototype written in Common Lisp. I'm trying to rewrite it because CL uses a huge amount of memory for such a small tool.</p>\n\n<p>I'm having some trouble figuring out how to interact with the sub-process. </p>\n\n<p>What I'm currently doing is roughly this:</p>\n\n<ol>\n<li><p>Create the process:</p>\n\n<pre><code>let mut program = match Command::new(command)\n    .args(arguments)\n    .stdin(Stdio::piped())\n    .stdout(Stdio::piped())\n    .stderr(Stdio::piped())\n    .spawn()\n{\n    Ok(child) =&gt; child,\n    Err(_) =&gt; {\n        println!(\"Cannot run program '{}'.\", command);\n        return;\n    }\n};\n</code></pre></li>\n<li><p>Pass it to an infinite (until user exits) loop, which reads and handles input and listens for output like this (and writes it to the screen):</p>\n\n<pre><code>fn listen_for_output(program: &amp;mut Child, output_viewer: &amp;TextViewer) {\n    match program.stdout {\n        Some(ref mut out) =&gt; {\n            let mut buf_string = String::new();\n            match out.read_to_string(&amp;mut buf_string) {\n                Ok(_) =&gt; output_viewer.append_string(buf_string),\n                Err(_) =&gt; return,\n            };\n        }\n        None =&gt; return,\n    };\n}\n</code></pre></li>\n</ol>\n\n<p>The call to <code>read_to_string</code> however blocks the program until the process exits. From what I can see <code>read_to_end</code> and <code>read</code> also seem to block. If I try running something like <code>ls</code> which exits right away, it works, but with something that doesn't exit like <code>python</code> or <code>sbcl</code> it only continues once I kill the subprocess manually.</p>\n\n<p>Based on <a href=\"https://stackoverflow.com/a/31577297/155423\">this answer</a>, I changed the code to use <code>BufReader</code>:</p>\n\n<pre><code>    fn listen_for_output(program: &amp;mut Child, output_viewer: &amp;TextViewer) {\n        match program.stdout.as_mut() {\n            Some(out) =&gt; {\n                let buf_reader = BufReader::new(out);\n                for line in buf_reader.lines() {\n                    match line {\n                        Ok(l) =&gt; {\n                            output_viewer.append_string(l);\n                        }\n                        Err(_) =&gt; return,\n                    };\n                }\n            }\n            None =&gt; return,\n        }\n    }\n</code></pre>\n\n<p>However, the problem still remains the same. It will read all lines that are available, and then block. Since the tool is supposed to work with any program, there is no way to guess out when the output will end, before trying to read. There doesn't appear to be a way to set a timeout for <code>BufReader</code> either.</p>\n"}, {"tags": ["closures", "rust"], "comments": [{"owner": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452174061, "post_id": 34610398, "comment_id": 57058350, "body": "When your callback is executed, the outer fn will already have returned, so there&#39;s nothing left to assign to. You&#39;ll have to love the code using <code>filename</code> into the closure."}], "answers": [{"comments": [{"owner": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452173299, "post_id": 34613273, "comment_id": 57057845, "body": "Aren&#39;t GUI frameworks usually single threaded? Still, the callback is definitely asynchronous, thus the &#39;static bound."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452177345, "post_id": 34613273, "comment_id": 57060811, "body": "@Kha, by themselves they are single-threaded, but the main program is definitely not required to have only one thread, and the closure may close over variables from the main program easily. The most simple example would be running the event loop in a spawned thread: <code>thread::spawn(|| gtk::main())</code>. Then if the callback closes over the variables in the main thread, there may be problems. Most dire ones are mitigated by <code>&#39;static</code> bound, but data races are still possible without synchronization which in <code>gtk-rs</code> is not enforced (no <code>Send</code> bound on closures)."}, {"owner": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452183000, "post_id": 34613273, "comment_id": 57064976, "body": "By that logic, it sounds to me like <i>every</i> closure would have to be <code>Send</code>. A closure to <code>Iterator::map</code> could just as well close over &#39;variables from the main program&#39;. I think you only need <code>Send</code> on a closure if it will be executed on a different thread than the <i>caller</i> (i.e. <code>thread::spawn</code> and friends)."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452183630, "post_id": 34613273, "comment_id": 57065439, "body": "@Kha, but that&#39;s what I&#39;m talking about - the callback closure <i>will</i> be executed in another thread if <code>gtk::main()</code> is called in another thread. Iterator closure, on the other hand, can&#39;t be executed on another thread because putting a non-<code>Send</code> closure in it automatically makes it non-sendable so it can&#39;t even be passed to another thread. The problem with callbacks is that such &quot;passing to another thread&quot; with them is implicit."}, {"owner": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452185620, "post_id": 34613273, "comment_id": 57066904, "body": "Ah, I didn&#39;t get that you wanted to call <code>connect_clicked</code> from the main thread. But I think it would be highly unsafe in general if widgets could be controlled from any thread other than the event loop thread. Indeed, it seems like every method is guarded by <a href=\"https://github.com/gtk-rs/gtk/blob/392202e23df34634f2be57bdf3a21d657336cfb8/src/rt.rs#L20-L32\" rel=\"nofollow noreferrer\">github.com/gtk-rs/gtk/blob/&hellip;</a>"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "edited": false, "score": 0, "creation_date": 1452186655, "post_id": 34613273, "comment_id": 57067639, "body": "Indeed, I was going to write just that. I&#39;ve come up with an example program and found out that <code>gtk::main()</code> can only be called from the main thread. This does solve the problem - there is no way for the closure to run in non-main thread. So yes, it is safe."}, {"owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 1, "creation_date": 1452240432, "post_id": 34613273, "comment_id": 57089531, "body": "Thanks for your reply. If you don&#39;t mind, one question. Why do we have to clone <code>path</code> to <code>captured_path</code> and then use it in the closure, instead of just assigning <code>filename</code> to <code>path</code> directly?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "edited": false, "score": 1, "creation_date": 1452266488, "post_id": 34613273, "comment_id": 57106195, "body": "@ehsisthatsweird, I&#39;ve written it like this because, given that you want to assign something to that variable, you mean to use it after the closure. Therefore, <code>Rc</code> is used to share ownership, and <code>Rc</code>s must be cloned for that - otherwise <code>path</code> will be moved into the closure (remember the <code>move</code> keyword) and won&#39;t be accessible after the closure. If you don&#39;t intend to share the data (e.g. to keep some state between clicks), I think you can drop <code>Rc</code> outer layer entirely and just use <code>RefCell</code> directly."}, {"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502406006, "post_id": 34613273, "comment_id": 78208924, "body": "How would you access the data inside the closure though? If I try to print it out, I get the error <code>the trait </code>std::marker::Sized` is not implemented for `str``"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502406449, "post_id": 34613273, "comment_id": 78209047, "body": "@thouliha the error you&#39;re getting is not related to accessing variables in closures; it happens because you&#39;re trying to dereference a value of type <code>&amp;str</code> in order to store it as a value of type <code>str</code>, which cannot be done because <code>str</code> is <a href=\"https://doc.rust-lang.org/book/first-edition/unsized-types.html\" rel=\"nofollow noreferrer\">unsized</a>."}, {"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502406510, "post_id": 34613273, "comment_id": 78209072, "body": "Thanks... how would I access the string?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502407304, "post_id": 34613273, "comment_id": 78209269, "body": "@thouliha what exactly do you want to do with it? You can print it as easily as just <code>println!(&quot;{}&quot;,s)</code> where <code>s</code> is your captured variable. If you need to store it somewhere else (which would likely involve copying it), you can rely on autoref for method invocation targets and write <code>somewhere_else = s.to_string()</code>. It&#39;s hard to say anything more specific without concrete details of what you want to do. Also, comments here are not intended for long discussions; if you don&#39;t know how to solve some problem, you should better ask it as a separate question."}, {"owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "edited": false, "score": 0, "creation_date": 1502475027, "post_id": 34613273, "comment_id": 78242286, "body": "Running that just gives me the error: the trait <code>std::fmt::Display</code> is not implemented for <code>std::cell::RefCell&lt;std::option::Option&lt;std::string::String&gt;&gt;</code> . I can&#39;t unwrap or use it unless I run *s.borrow_mut().unwrap(), in which case I get the error above."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1502495206, "post_id": 34613273, "comment_id": 78249580, "body": "You&#39;re getting this error because <code>{}</code> requires the formatted value to implement <code>Display</code>, but <code>Option&lt;T&gt;</code> does not implement it. As a quick fix, consider switching to <code>println!(&quot;{:?}&quot;, s)</code>, which uses <code>Debug</code>. And you cannot use <code>unwrap()</code> on a <code>&amp;mut Option&lt;T&gt;</code> (and that&#39;s what <code>borrow_mut()</code> returns), because <code>unwrap()</code> needs <code>self</code> by value. Use <code>s.borrow().as_ref().unwrap()</code> to get a <code>&amp;String</code> (<code>as_ref()</code> converts <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>, which is exactly what you need)."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 8, "last_activity_date": 1452187648, "last_edit_date": 1452187648, "creation_date": 1452001725, "answer_id": 34613273, "question_id": 34610398, "link": "https://stackoverflow.com/questions/34610398/how-do-i-move-a-variable-out-of-a-closure/34613273#34613273", "title": "How do I move a variable out of a closure?", "body": "<p>You can't do this for several reasons. <a href=\"http://gtk-rs.org/docs/gtk/signal/trait.ButtonSignals.html#tymethod.connect_clicked\" rel=\"nofollow\">Here</a> is the definition of <code>connect_clicked()</code> method:</p>\n\n<pre><code>fn connect_clicked&lt;F: Fn(Button) + 'static&gt;(&amp;self, f: F) -&gt; u64\n</code></pre>\n\n<p>The closure which this method accepts is <code>Fn</code> and is bounded by <code>'static</code>. This means, first, that it can't modify its environment (that would be <code>FnMut</code>) and it also can't capture anything by reference (roughly what <code>'static</code> means). Therefore, there is <em>no</em> way for the closure to modify the <code>path</code> variable like you want.</p>\n\n<p>Given that gtk-rs <a href=\"https://github.com/gtk-rs/gtk/blob/392202e23df34634f2be57bdf3a21d657336cfb8/src/rt.rs#L20-L32\" rel=\"nofollow\">enforces</a> that GTK can only be used from the main thread, and its widgets are not <code>Send</code>able, there is no way for the handler to access variables from another thread, so I'm not sure why these closures have <code>'static</code> bound, and I also see absolutely no reason why they are not <code>FnMut</code>. This seems to be an implementation defect.</p>\n\n<p>Anyway, you can use <code>Rc&lt;RefCell&lt;..&gt;&gt;</code> to create a mutable piece of data:</p>\n\n<pre><code>let path: Rc&lt;RefCell&lt;Option&lt;String&gt;&gt;&gt; = Rc::new(RefCell::new(None));\nlet captured_path = path.clone();  // clone the Arc to use in closure\n...\n// inside the closure\n*captured_path.borrow_mut() = Some(filename);\n</code></pre>\n\n<p>It is also possible to use <code>Arc&lt;Mutex&lt;..&gt;&gt;</code>, but I don't think it is necessary because gtk-rs protects against using GTK from any thread except the main one.</p>\n"}], "owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2079, "favorite_count": 1, "accepted_answer_id": 34613273, "answer_count": 1, "score": 7, "last_activity_date": 1452187648, "creation_date": 1451992635, "last_edit_date": 1452003670, "question_id": 34610398, "link": "https://stackoverflow.com/questions/34610398/how-do-i-move-a-variable-out-of-a-closure", "title": "How do I move a variable out of a closure?", "body": "<p>I have a simple GTK app and I need to select a folder and pass it's path to a variable outside of the closure.</p>\n\n<pre><code>let mut path = \"\".to_owned();\n\nbutton_open.connect_clicked(move |_| {\n    let file_chooser = gtk::FileChooserDialog::new(\n        \"Open File\", None, gtk::FileChooserAction::SelectFolder,\n        [(\"Open\", gtk::ResponseType::Ok), (\"Cancel\", gtk::ResponseType::Cancel)]);\n    if file_chooser.run() == gtk::ResponseType::Ok as i32 {\n        let filename = file_chooser.get_current_folder().unwrap();\n    }\n\n    file_chooser.destroy();\n});\n</code></pre>\n\n<p>How do I assign <code>filename</code> to <code>path</code>? If I just write</p>\n\n<pre><code>path = filename;\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>src\\main.rs:46:13: 46:28 error: cannot assign to captured outer variable in an `Fn` closure\nsrc\\main.rs:46             path = filename;\n</code></pre>\n"}, {"tags": ["command", "expression", "rust"], "comments": [{"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 1, "creation_date": 1451993120, "post_id": 34609236, "comment_id": 56966078, "body": "I&#39;m not sure your question has the right scope for SO but yes, <a href=\"http://is.gd/dOZsgf\" rel=\"nofollow noreferrer\">loops and blocks are expressions</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1452004320, "post_id": 34609236, "comment_id": 56973539, "body": "You don&#39;t have a clear question - what are you trying to ask? What is a &quot;command&quot;? I&#39;m more familiar with the dichotomy of &quot;statement&quot; vs &quot;expression&quot;. Maybe you could put some sample code that shows what you mean?"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1452090258, "post_id": 34609236, "comment_id": 57015852, "body": "There is a proposal for loops to become first-class expressions in Rust. See, for example, <a href=\"https://github.com/rust-lang/rfcs/issues/961\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/961</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 5801689, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/461ec0b20994bf5e0452a925ff844615?s=128&d=identicon&r=PG", "display_name": "Tomer Kay", "link": "https://stackoverflow.com/users/5801689/tomer-kay"}, "is_accepted": false, "score": -1, "last_activity_date": 1453046830, "last_edit_date": 1453046830, "creation_date": 1453042333, "answer_id": 34839698, "question_id": 34609236, "link": "https://stackoverflow.com/questions/34609236/commands-or-expressions/34839698#34839698", "title": "Commands or Expressions?", "body": "<p>I think Rust is considered to be a command-expression programming language. This means expressions change the state of the program (like commands), and commands have a value. If it isn't something that can be used, then it is the unit type. I could be totally wrong.</p>\n"}], "owner": {"reputation": 33, "user_id": 3810335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b76391cbfda15be90e8f44fb6748b9a2?s=128&d=identicon&r=PG&f=1", "display_name": "user3810335", "link": "https://stackoverflow.com/users/3810335/user3810335"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 152, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1453046830, "creation_date": 1451989161, "last_edit_date": 1452004230, "question_id": 34609236, "link": "https://stackoverflow.com/questions/34609236/commands-or-expressions", "title": "Commands or Expressions?", "body": "<p>On one hand, it seems that all commands in Rust return the unit type, which means that Rust includes only expressions (because that commands don't yield a value, by definition). On the other, Rust is an imperative language. Does Rust have commands?</p>\n\n<p>If not - loops, blocks, etc...  are expressions?</p>\n"}, {"tags": ["regex", "rust"], "answers": [{"comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 11, "creation_date": 1451993847, "post_id": 34606128, "comment_id": 56966556, "body": "Note that you can also call <code>replace</code> as a method on an <code>&amp;str</code>, like this: <code>let result = &quot;Hello World!&quot;.replace(&quot;!&quot;, &quot;?&quot;);</code>."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 6, "creation_date": 1509135279, "post_id": 34606128, "comment_id": 80912892, "body": "please note: It is an anti-pattern to compile the same regular expression in a loop since compilation is typically expensive. See details in the crate description."}], "tags": [], "owner": {"reputation": 24213, "user_id": 390897, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/bb90a39b77596fcffbab96de88f0ee34?s=128&d=identicon&r=PG", "display_name": "fny", "link": "https://stackoverflow.com/users/390897/fny"}, "is_accepted": true, "score": 70, "last_activity_date": 1580371261, "last_edit_date": 1580371261, "creation_date": 1451978207, "answer_id": 34606128, "question_id": 34606043, "link": "https://stackoverflow.com/questions/34606043/how-do-i-replace-specific-characters-idiomatically-in-rust/34606128#34606128", "title": "How do I replace specific characters idiomatically in Rust?", "body": "<p>You can replace all occurrences of one string within another with <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.replace\" rel=\"noreferrer\"><code>std::str::replace</code></a>:</p>\n\n<pre><code>let result = str::replace(\"Hello World!\", \"!\", \"?\");\n// Equivalently\nresult = \"Hello World!\".replace(\"!\", \"?\");\nprintln!(\"{}\", result); // =&gt; \"Hello World?\"\n</code></pre>\n\n<p>For more complex cases, you can use <a href=\"https://docs.rs/regex/1.3.3/regex/struct.Regex.html#method.replace_all\" rel=\"noreferrer\"><code>regex::Regex::replace_all</code></a> from <a href=\"https://docs.rs/regex/1.3.3/regex/index.html\" rel=\"noreferrer\">regex</a>:</p>\n\n<pre><code>use regex::Regex;\nlet re = Regex::new(r\"[A-Za-z]\").unwrap();\nlet result = re.replace_all(\"Hello World!\", \"x\");\nprintln!(\"{}\", result); // =&gt; \"xxxxx xxxxx!\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 2, "creation_date": 1567091479, "post_id": 34610817, "comment_id": 101868472, "body": "I like this because it can be generalized to handle more complicated cases that replace cannot handle, while being cheaper than a Regex (which admittedly can handle even more cases)."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1567091874, "post_id": 34610817, "comment_id": 101868667, "body": "Rust playground warns not to use &quot;...&quot; range pattern anymore. Should use &quot;..=&quot; instead."}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 38, "last_activity_date": 1567404600, "last_edit_date": 1567404600, "creation_date": 1451993863, "answer_id": 34610817, "question_id": 34606043, "link": "https://stackoverflow.com/questions/34606043/how-do-i-replace-specific-characters-idiomatically-in-rust/34610817#34610817", "title": "How do I replace specific characters idiomatically in Rust?", "body": "<p>Also you can use iterators and <code>match</code> expression:</p>\n\n<pre><code>let s:String = \"Hello, world!\".chars()\n    .map(|x| match x { \n        '!' =&gt; '?', \n        'A'..='Z' =&gt; 'X', \n        'a'..='z' =&gt; 'x',\n        _ =&gt; x\n    }).collect();\nprintln!(\"{}\", s);// Xxxxx, xxxxx?\n</code></pre>\n"}], "owner": {"reputation": 505, "user_id": 4385847, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DGVyxFZvsAM/AAAAAAAAAAI/AAAAAAAAACk/3lrAKjeCsvk/photo.jpg?sz=128", "display_name": "Vin", "link": "https://stackoverflow.com/users/4385847/vin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 30355, "favorite_count": 5, "accepted_answer_id": 34606128, "answer_count": 2, "score": 47, "last_activity_date": 1580371261, "creation_date": 1451977897, "last_edit_date": 1480256985, "question_id": 34606043, "link": "https://stackoverflow.com/questions/34606043/how-do-i-replace-specific-characters-idiomatically-in-rust", "title": "How do I replace specific characters idiomatically in Rust?", "body": "<p>So I have the string \"Hello World!\" and want to replace the \"!\" with \"?\" so that the new string is \"Hello World?\"</p>\n\n<p>In Ruby we can do this easily with the <code>gsub</code> method:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>\"Hello World!\".gsub(\"!\", \"?\")\n</code></pre>\n\n<p>How to do this idiomatically in Rust?</p>\n"}, {"tags": ["iterator", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 77787, "user_id": 479989, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a8eeb68641395ea82ac1c8783306548e?s=128&d=identicon&r=PG", "display_name": "Ben Jackson", "link": "https://stackoverflow.com/users/479989/ben-jackson"}, "edited": false, "score": 0, "creation_date": 1451978206, "post_id": 34605909, "comment_id": 56957559, "body": "So you&#39;re saying that the closure is implicitly capturing <code>&amp;self</code>, which has its own lifetime independent of <code>&#39;a</code>.  It&#39;s doing this because closures capture by reference?  But <code>self</code> is immutable (easily verified with a <code>self=self</code> test) so why wouldn&#39;t it just capture it by value?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 77787, "user_id": 479989, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a8eeb68641395ea82ac1c8783306548e?s=128&d=identicon&r=PG", "display_name": "Ben Jackson", "link": "https://stackoverflow.com/users/479989/ben-jackson"}, "edited": false, "score": 2, "creation_date": 1451998543, "post_id": 34605909, "comment_id": 56969428, "body": "@BenJackson, if you don&#39;t use <code>move</code> keyword, a closure will capture its environment by reference (in this case the environment would contain a reference to &amp;self, that is, a double reference). If you do, it will capture it by value. That&#39;s just how closures in Rust work."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1451977352, "creation_date": 1451977352, "answer_id": 34605909, "question_id": 34605666, "link": "https://stackoverflow.com/questions/34605666/how-to-set-lifetime-for-boxed-closure-capturing-self/34605909#34605909", "title": "How to set lifetime for boxed closure capturing `self`?", "body": "<p>You get an error because your closure receives a reference to <code>self</code>, which itself is a reference. However, since the reference points to a local variable, that reference becomes invalid as soon as the function returns.</p>\n\n<p>To fix this, add the <code>move</code> keyword before the closure. This instructs the compiler to <strong>move</strong> the closed-over variables in the closure, rather than <strong>pass a reference</strong> to those variables to the closure.</p>\n\n<pre><code>fn occupied_iter_x&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;Iterator&lt;Item=i32&gt; + 'a&gt; {\n    Box::new( (0..32).filter(move |&amp;pos| match self.at(pos) { Occupied::Empty =&gt; false, _ =&gt; true } ) )\n}\n</code></pre>\n"}], "owner": {"reputation": 77787, "user_id": 479989, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a8eeb68641395ea82ac1c8783306548e?s=128&d=identicon&r=PG", "display_name": "Ben Jackson", "link": "https://stackoverflow.com/users/479989/ben-jackson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 698, "favorite_count": 0, "accepted_answer_id": 34605909, "answer_count": 1, "score": 4, "last_activity_date": 1451977352, "creation_date": 1451976146, "last_edit_date": 1495542802, "question_id": 34605666, "link": "https://stackoverflow.com/questions/34605666/how-to-set-lifetime-for-boxed-closure-capturing-self", "title": "How to set lifetime for boxed closure capturing `self`?", "body": "<p>I want to return an iterator (in particular, a <code>Filter</code>).  I used a <a href=\"https://stackoverflow.com/questions/27646925/how-do-i-return-a-filter-iterator-from-a-function\">previous answer</a> that suggests returning a boxed iterator.  The problem is that my filter captures <code>self</code> and I get:</p>\n\n<blockquote>\n  <p>error: closure may outlive the current function, but it borrows <code>self</code>, which is owned by the current function</p>\n</blockquote>\n\n<p>But I think I'm being explicit that <code>self</code> has lifetime <code>'a</code> and so does the <code>Box</code> I'm returning:</p>\n\n<pre><code>fn occupied_iter_x&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;Iterator&lt;Item=i32&gt; + 'a&gt; {\n    Box::new( (0..32).filter( |&amp;pos| match self.at(pos) { Occupied::Empty =&gt; false, _ =&gt; true } ) )\n}\n</code></pre>\n\n<p>This is an attempt to simplify my first effort, where I created a new <code>FooIterator</code> which owns a reference to <code>self</code> in basically the same way.</p>\n\n<p>If I use most of the same syntax to simply capture <code>self</code> as a member reference it works fine:</p>\n\n<pre><code>struct Foo { junk: i32 }\nstruct FooIterator&lt;'a&gt; { foo: &amp;'a Foo }\nimpl Foo {\n    fn foo&lt;'a&gt;(&amp;'a self) -&gt; Box&lt;FooIterator&lt;'a&gt;&gt; {\n        Box::new( FooIterator { foo: self } )\n    }       \n}\n</code></pre>\n"}, {"tags": ["dll", "rust", "versioning", "rust-cargo"], "comments": [{"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1451964074, "post_id": 34603663, "comment_id": 56952953, "body": "It was <a href=\"https://www.reddit.com/r/rust/comments/3zi8xh/no_rust_version_info_stored_in_dylib_dynamic_link/\" rel=\"nofollow noreferrer\">cross posted to reddit</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1452042562, "post_id": 34612332, "comment_id": 56993737, "body": "Then how can i read the version info after I get the final built binary?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1452077211, "post_id": 34612332, "comment_id": 57007550, "body": "Well, <code>VERSION</code> is just a regular constant, so make your program print it when you run it in a certain way, for example, by passing <code>-v</code> command line argument (like lots of CLI tools do): <code>your-program -v</code>. Again, as I said, this is not related to version information specific to the binary format (ELF headers, PE headers or anything else)."}, {"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1452499155, "post_id": 34612332, "comment_id": 57178929, "body": "Ok, that means I cannot view the version without run the code in the lib. But it&#39;s ok to know about this fact. Do you know is there any plan Cargo/Rust use the OS&#39;s native facilities for versioning?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1452502560, "post_id": 34612332, "comment_id": 57180562, "body": "@palazzotrain, no, I haven&#39;t heard of any such plans. But you can always submit a feature request to <a href=\"https://github.com/rust-lang/cargo/issues\" rel=\"nofollow noreferrer\">Cargo</a> and <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">Rust</a> issue trackers. I think such change wouldn&#39;t require an RFC, though I may be wrong, of course."}, {"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 1, "creation_date": 1452583911, "post_id": 34612332, "comment_id": 57221575, "body": "I post a request to Cargo issue tracker. <a href=\"https://github.com/rust-lang/cargo/issues/2273\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/2273</a>."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 4, "last_activity_date": 1451998741, "creation_date": 1451998741, "answer_id": 34612332, "question_id": 34603663, "link": "https://stackoverflow.com/questions/34603663/is-there-a-way-to-store-the-version-information-in-a-rust-compiled-executable-or/34612332#34612332", "title": "Is there a way to store the version information in a Rust compiled executable or library?", "body": "<p>While I don't think there is an immediate way to use ELF facilities for versioning (they are not cross-platform anyway), it is possible to use version information from Cargo:</p>\n\n<pre><code>const VERSION: &amp;'static str = env!(\"CARGO_PKG_VERSION\");\n</code></pre>\n\n<p><code>VERSION</code> will now be equal to the version specified in the manifest when <code>cargo build</code> is run. Alternatively, you can use <code>env_opt!()</code> if you want to build your program without Cargo:</p>\n\n<pre><code>const VERSION: Option&lt;&amp;'static str&gt; = env_opt!(\"CARGO_PKG_VERSION\");\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 11170040, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-2Ob4Dzj-wiE/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reEJPYrNwRBtajxk_0ZHmtzhZ_oCQ/mo/photo.jpg?sz=128", "display_name": "allenchou13", "link": "https://stackoverflow.com/users/11170040/allenchou13"}, "is_accepted": false, "score": 1, "last_activity_date": 1610522975, "creation_date": 1610522975, "answer_id": 65697383, "question_id": 34603663, "link": "https://stackoverflow.com/questions/34603663/is-there-a-way-to-store-the-version-information-in-a-rust-compiled-executable-or/65697383#65697383", "title": "Is there a way to store the version information in a Rust compiled executable or library?", "body": "<p>use winres(<a href=\"https://github.com/mxre/winres\" rel=\"nofollow noreferrer\">https://github.com/mxre/winres</a>) can set CARGO_PKG_VERSION to dll file version, maybe help for others</p>\n"}], "owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1849, "favorite_count": 1, "accepted_answer_id": 34612332, "answer_count": 2, "score": 9, "last_activity_date": 1610522975, "creation_date": 1451963929, "last_edit_date": 1451964532, "question_id": 34603663, "link": "https://stackoverflow.com/questions/34603663/is-there-a-way-to-store-the-version-information-in-a-rust-compiled-executable-or", "title": "Is there a way to store the version information in a Rust compiled executable or library?", "body": "<p>When a Rust binary (executable or dylib) is built, the version information configured in <code>Cargo.toml</code> has no effect on the binary built, meaning the configured version is not stored inside the binary file.</p>\n\n<p>In Linux, when I use <code>readelf -V</code> for a .so file, you can see the supported interface (SO Name) is stored under the <strong>Version definition section '.gnu.version_d'</strong> of the ELF file. For example, the output of <code>readelf -V /lib/libnss_files-2.12.so</code>:</p>\n\n<pre><code>Version definition section '.gnu.version_d' contains 2 entries:\n   Addr: 0x0000000000001540  Offset: 0x001540  Link: 5 (.dynstr)\n   000000: Rev: 1  Flags: BASE   Index: 1  Cnt: 1  Name: libnss_files.so.2\n   0x001c: Rev: 1  Flags: none  Index: 2  Cnt: 1  Name: GLIBC_PRIVATE\n</code></pre>\n\n<p>The <code>/lib/libnss_files-2.12.so</code> file is implementing interface version <code>libnss_files.so.2</code></p>\n\n<p>The <code>readelf -V</code> output for a Rust or Cargo generated dylib or executable has no such version information. The version config in <code>Cargo.toml</code> is only used by crates.io.</p>\n\n<p><strong>Moreover</strong>, Windows DLLs support storing the version information, not the SONAME interface version name like Linux. A cross-compiled Windows DLL also has no version info. Perhaps this is another question, but I thought I'd raise the point here first.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 3, "creation_date": 1451967652, "post_id": 34603636, "comment_id": 56953789, "body": "Personally I think I\u2019d prefer <code>_dummy: ()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1451967825, "post_id": 34603636, "comment_id": 56953830, "body": "@ChrisMorgan I&#39;d love to hear more! I lean towards <code>PhantomData</code> as I read it as &quot;this <i>should</i> have a <code>Foo</code> inside it, but cannot for some reason&quot;. Although I&#39;d be a lot happier if it could be a <code>PhantomData&lt;ClipboardAccessToken&gt;</code> or something more self-documenting."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1452087650, "post_id": 34603636, "comment_id": 57014003, "body": "While it\u2019s <code>PhantomData&lt;()&gt;</code>, it <i>can</i> store a <code>()</code>. I\u2019m leaning toward \u201cPhantomData should just about always contain a generic type\u201d (e.g. <code>PhantomData&lt;T&gt;</code>, <code>PhantomData&lt;*const T&gt;</code>, <i>&amp;c.</i>), though I haven\u2019t checked usage or thought in great detail about it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1451963749, "creation_date": 1451963749, "answer_id": 34603636, "question_id": 34603635, "link": "https://stackoverflow.com/questions/34603635/why-would-i-create-a-struct-with-only-a-phantomdata-member/34603636#34603636", "title": "Why would I create a struct with only a `PhantomData&lt;()&gt;` member?", "body": "<p>In this case, the clipboard was a globally shared resource that didn't give you any token when you opened it. To try and use the clipboard without opening it first would be a Bad Thing. If you did the straightforward thing and created an empty struct, then you could <em>forget</em> to call the proper constructor method:</p>\n\n<pre><code>struct Clipboard;\n\nimpl Clipboard {\n    fn new() -&gt; Clipboard {\n        println!(\"Clipboard opened\");\n        Clipboard\n    }\n\n    fn copy(&amp;self) -&gt; String { \"copied\".into() }\n}\n\nlet c = Clipboard::new(); // Correct\nprintln!(\"{}\", c.copy());\nlet c = Clipboard;        // Nope, didn't open the clipboard properly\nprintln!(\"{}\", c.copy()); // But can still call methods!?!?!\n</code></pre>\n\n<p>Let's try a tuple struct with a dummy value inside:</p>\n\n<pre><code>struct ClipboardWithDummyTuple(());\n\nimpl ClipboardWithDummyTuple {\n    fn new() -&gt; ClipboardWithDummyTuple {\n        println!(\"Clipboard opened\");\n        ClipboardWithDummyTuple(())\n    }\n\n    fn copy(&amp;self) -&gt; String { \"copied\".into() }\n}\n\nlet c = ClipboardWithDummyTuple::new(); // Correct\nprintln!(\"{}\", c.copy());\nlet c = ClipboardWithDummyTuple;\nprintln!(\"{}\", c.copy()); // Fails here\n// But because `c` is a method, not an instance              \n</code></pre>\n\n<p>This is better, but the error occurs later than we'd like; it only happens when we try to use the clipboard, not when we try to construct it. Let's try making a struct with named fields:</p>\n\n<pre><code>struct ClipboardWithDummyStruct { \n    // warning: struct field is never used\n    dummy: (),\n}\n\nimpl ClipboardWithDummyStruct {\n    fn new() -&gt; ClipboardWithDummyStruct {\n        println!(\"Clipboard opened\");\n        ClipboardWithDummyStruct { dummy: () }\n    }\n\n    fn copy(&amp;self) -&gt; String { \"copied\".into() }\n}\n\nlet c = ClipboardWithDummyStruct::new(); // Correct\nprintln!(\"{}\", c.copy());\nlet c = ClipboardWithDummyStruct; // Fails here\n// But we have an \"unused field\" warning\n</code></pre>\n\n<p>So, we are closer, but this would generate a warning about an unused field. We <em>could</em> turn off that warning for the field with <code>#[allow(dead_code)]</code>, or we could rename the field to <code>_dummy</code>, but I believe there's a better solution \u2014 <code>PhantomData</code>:</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct ClipboardWithPhantomData { \n    marker: PhantomData&lt;()&gt;,\n}\n\nimpl ClipboardWithPhantomData {\n    fn new() -&gt; ClipboardWithPhantomData {\n        println!(\"Clipboard opened\");\n        ClipboardWithPhantomData { marker: PhantomData }\n    }\n\n    fn copy(&amp;self) -&gt; String { \"copied\".into() }\n}\n\nlet c = ClipboardWithPhantomData::new(); // Correct\nprintln!(\"{}\", c.copy());\n\nlet c = ClipboardWithPhantomData; // Fails here\n</code></pre>\n\n<p>This doesn't generate any warnings, and <code>PhantomData</code> is used to indicate that something \"different\" is happening. I'd probably throw a little comment on the struct definition to note why we were using <code>PhantomData</code> in this way.</p>\n\n<p>A lot of the ideas here stem from a semi-related <a href=\"https://github.com/rust-lang/rust/issues/27303\" rel=\"nofollow\">Rust issue about the correct type for an opaque struct</a>.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 2, "accepted_answer_id": 34603636, "answer_count": 1, "score": 3, "last_activity_date": 1451963749, "creation_date": 1451963749, "last_edit_date": 1495541799, "question_id": 34603635, "link": "https://stackoverflow.com/questions/34603635/why-would-i-create-a-struct-with-only-a-phantomdata-member", "title": "Why would I create a struct with only a `PhantomData&lt;()&gt;` member?", "body": "<p>While reading <a href=\"https://stackoverflow.com/a/34582221/155423\">the answer for another question</a>, I saw this construct [1]:</p>\n\n<pre><code>struct Clipboard {\n    marker: PhantomData&lt;()&gt;,\n}\n</code></pre>\n\n<p>While I've seen other uses of <a href=\"http://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a>, all of them have been parameterized with an interesting type, like <code>PhantomData&lt;&amp;'a [u8]&gt;</code> or <code>PhantomData&lt;T&gt;</code>. Why would you want to create struct that <em>acts</em> as if it contains an empty tuple?</p>\n\n<p>[1]: A bit of poetic license as I actually <em>wrote</em> the other answer, but was asked to explain why I did what I did. It was too long for a comment.</p>\n"}, {"tags": ["c#", "serialization", "rust", "dllimport", "ffi"], "comments": [{"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "edited": false, "score": 0, "creation_date": 1451956185, "post_id": 34602647, "comment_id": 56951101, "body": "This was <a href=\"https://www.reddit.com/r/rust/comments/3zhpj0/what_is_the_fastest_way_to_return_large_amount_of/\" rel=\"nofollow noreferrer\">cross posted to Reddit</a>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1451974075, "creation_date": 1451974075, "answer_id": 34605225, "question_id": 34602647, "link": "https://stackoverflow.com/questions/34602647/what-is-the-fastest-way-to-return-large-amount-of-data-from-rust-ffi-library-bac/34605225#34605225", "title": "What is the fastest way to return large amount of data from Rust FFI library back to C# caller?", "body": "<p>The first question we need to answer is: Who will be responsible for allocating and freeing the memory? If you know in advance how many elements will be returned, then you can have either the C# code or the Rust code allocate memory. If you don't know in advance how many elements will be returned, then you have 2 options: 1) have the C# code ask the Rust code how many elements will be returned (if that's possible), then allocate memory from C#; 2) have the Rust code allocate memory. If you allocate managed memory from C# (e.g. a managed array), then you can let the garbage collector free the memory. If you allocate unmanaged memory from C# or from Rust, you'll have to use the correct function to free the memory. If you use Rust's default memory allocator, the Rust code will need to provide a function to free the memory. Remember that the Rust code that produces the results will need to explicitly \"leak\" the array/<code>Vec</code>, otherwise your function will free the memory before returning!</p>\n\n<p>You'll find it difficult to use .NET's <code>List&lt;T&gt;</code> type with unmanaged code. You should instead use arrays.</p>\n\n<p>Another important aspect to consider is the struct's layout. You'll have to add <code>#[repr(C)]</code> to the Rust struct and either <code>[StructLayout(LayoutKind.Sequential)]</code> or <code>[StructLayout(LayoutKind.Explicit)]</code> (depending on the types inside your struct) to the C# struct to ensure that both sides lay out the struct's fields in the same way in memory.</p>\n\n<p>When you define the <code>DllImport</code> for your Rust function in your C# code, you can annotate the parameters and the return value with the <a href=\"https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshalasattribute%28v=vs.110%29.aspx\" rel=\"nofollow\"><code>MarshalAs</code> attribute</a> to tell the .NET runtime how the arguments and the return value should be marshaled or unmarshaled. In particular, the <a href=\"https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.unmanagedtype%28v=vs.110%29.aspx\" rel=\"nofollow\"><code>UnmanagedType</code> enumeration</a> has the <code>LPArray</code> member that could be helpful in your situation, though note that <a href=\"https://msdn.microsoft.com/en-us/library/z6cfh6e6%28v=vs.110%29.aspx\" rel=\"nofollow\">it uses <code>CoTaskMemAlloc</code> and <code>CoTaskMemFree</code> to manage memory</a>. If the Rust code is responsible for allocating memory, you could also perform the unmarshaling manually by defining the pointer as <code>IntPtr</code> and using <a href=\"https://msdn.microsoft.com/en-us/library/dn261463%28v=vs.110%29.aspx\" rel=\"nofollow\"><code>Marshal.PtrToStructure</code></a> to unmarshal the structure and <a href=\"https://msdn.microsoft.com/en-us/library/dn261466%28v=vs.110%29.aspx\" rel=\"nofollow\"><code>Marshal.SizeOf</code></a> to offset the pointer to the next element.</p>\n"}], "owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 0, "closed_date": 1451984681, "answer_count": 1, "score": 4, "last_activity_date": 1451974075, "creation_date": 1451955810, "last_edit_date": 1451956845, "question_id": 34602647, "link": "https://stackoverflow.com/questions/34602647/what-is-the-fastest-way-to-return-large-amount-of-data-from-rust-ffi-library-bac", "closed_reason": "Opinion-based", "title": "What is the fastest way to return large amount of data from Rust FFI library back to C# caller?", "body": "<p>I am developing a program in .NET C# that calls my own Rust library through Rust FFI, using extern C keyword and loaded by DllImport.</p>\n\n<p>I am doing this because I want to delegate the complicated computation to Rust. After processing from Rust library, it is expected to return a very large amount of data back to C#. Those data should be in a kind of <code>List&lt;MyDataRecord&gt;</code> when it is consumed in C#.</p>\n\n<p>Then my questions are:</p>\n\n<ol>\n<li>From Rust, what is the best way to pass back those data? Through a pointer to a block of memory arranged like an array of structs?</li>\n<li>How can C# get back such memory block pointer? Any thread safety concerns here? </li>\n<li>How to quickly convert such memory block of data to my <code>List&lt;MyDataRecord&gt;</code> in C#?</li>\n</ol>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1451919249, "post_id": 34592737, "comment_id": 56932764, "body": "Why is making the field <code>pub</code> a problem for you? (additional reading: <a href=\"https://doc.rust-lang.org/reference.html#visibility-and-privacy\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference.html#visibility-and-privacy</a>)"}, {"owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1451921059, "post_id": 34592737, "comment_id": 56933931, "body": "Some fields must be not accessible directly, like a getter or setter as example"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1451921311, "post_id": 34592737, "comment_id": 56934096, "body": "So, if I understand, the field should be <code>pub</code> internally (within 2/3 modules) but private to external clients of the crate (or possibly other modules in the crate)?"}, {"owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1451922115, "post_id": 34592737, "comment_id": 56934603, "body": "Approximately. The main problem is to divide the logic into multiple files. I need to have descendants an another file (module)"}], "answers": [{"comments": [{"owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "edited": false, "score": 0, "creation_date": 1451931410, "post_id": 34595004, "comment_id": 56939962, "body": "Second solution is more flexible, think that what need for me. Thanks! =)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1451923143, "creation_date": 1451923143, "answer_id": 34595004, "question_id": 34592737, "link": "https://stackoverflow.com/questions/34592737/more-than-one-file-in-module/34595004#34595004", "title": "More than one file in module", "body": "<p>In Rust, modules are self-contained. Unlike C++ or Java there is no cheating via either <code>friend</code> or the use of reflection.</p>\n\n<p>As such, if you (arbitrarily) attempt to separate the definition of the <code>struct</code> from the methods in charge of maintaining its encapsulation, you will fight against the language.</p>\n\n<hr>\n\n<p><em>Solution 1: Prefer non-member non-friend functions</em></p>\n\n<p>Define the methods absolutely requiring access to the fields in <code>entity.rs</code>; if you follow the \"Prefer non-member non-friend functions\" guideline from C++, you should see that actually most methods do NOT need to access the fields directly. For example, <code>empty</code> can be defined in terms of <code>len</code>:</p>\n\n<pre><code>fn empty(c: &amp;Container) -&gt; bool { c.len() == 0 }\n</code></pre>\n\n<p>Then, <code>repository.rs</code> can add many other methods if it needs to, but has to go through the \"minimal\" interface exported by <code>entity.rs</code> to achieve its needs. Since you are in control of both modules, you can tweak the methods of <code>entity.rs</code> at will anyway so it should not be an issue.</p>\n\n<p>I would point out that encapsulation-wise, this is <em>the</em> sensible decision: reducing the number of methods that may access the internals of an object reduces the number of methods that may put this object in an invalid state.</p>\n\n<p>This solution is advantageous because you are not fighting the language.</p>\n\n<hr>\n\n<p><em>Solution 2: Total split</em></p>\n\n<p>Another solution is to duplicate your entities:</p>\n\n<ul>\n<li>have the internal entity, entirely public</li>\n<li>have the external entity, opaque</li>\n</ul>\n\n<p>This is achieved by:</p>\n\n<pre><code>pub struct SomeEntImpl {\n    pub field0: i32,\n}\n\npub struct SomeEnt {\n    inner: SomeEntImpl,\n}\n</code></pre>\n\n<p>The authorized modules will be given references to a <code>SomeEntImpl</code>, while others will have to use the restricted interface available through <code>SomeEnt</code>. The control over who sees what will be achieved by careful exports.</p>\n\n<p>This solution will probably drive you insane.</p>\n"}], "owner": {"reputation": 488, "user_id": 2904507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89fa3cf087339a65c4cc8389134b0252?s=128&d=identicon&r=PG", "display_name": "Gedweb", "link": "https://stackoverflow.com/users/2904507/gedweb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 34595004, "answer_count": 1, "score": 1, "last_activity_date": 1451923143, "creation_date": 1451915679, "last_edit_date": 1451922013, "question_id": 34592737, "link": "https://stackoverflow.com/questions/34592737/more-than-one-file-in-module", "title": "More than one file in module", "body": "<p>I work on an implementation of the Repository pattern in Rust.</p>\n\n<p>I need to have two (or more) files:</p>\n\n<ul>\n<li><code>entity.rs</code> \u2014 data descriptions</li>\n<li><code>repository.rs</code> \u2014 data access methods</li>\n<li>...</li>\n</ul>\n\n<p>Problem:</p>\n\n<p>One file implies one mod. This means that for a function in <code>repository.rs</code> to have access to struct field from <code>entity.rs</code> it is required that <code>field</code> be <code>pub</code>. Is there some way to avoid this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451839563, "post_id": 34578943, "comment_id": 56902674, "body": "Same root problem as <a href=\"http://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct</a>. When you move a value (like returning your <code>Cat</code>), the reference to it is no longer valid."}, {"owner": {"reputation": 1686, "user_id": 1217063, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/xRgTZ.jpg?s=128&g=1", "display_name": "ampron", "link": "https://stackoverflow.com/users/1217063/ampron"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451840738, "post_id": 34578943, "comment_id": 56903104, "body": "Thank you for pointing that out.  Seems like the answer may be some thing like <a href=\"http://kimundi.github.io/owning-ref-rs/owning_ref/index.html#caching-a-reference-to-a-struct-field\" rel=\"nofollow noreferrer\">this use of owning_ref</a>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1451859884, "creation_date": 1451859884, "answer_id": 34582332, "question_id": 34578943, "link": "https://stackoverflow.com/questions/34578943/specify-lifetime-of-a-reference-to-a-return-argument-for-a-member-variable-in-an/34582332#34582332", "title": "Specify lifetime of a reference to a return argument for a member variable in an associated function", "body": "<p>You can have <code>CatMaker</code> own the <code>Cat</code>, and <code>make_cat</code> return a reference to the <code>Cat</code>, rather than returning the <code>Cat</code> itself.</p>\n\n<pre><code>pub enum CoatColor {\n    Black,\n    Tabby,\n}\n\npub struct Cat {\n    color: CoatColor,\n}\n\npub struct CatMaker {\n    child: Option&lt;Cat&gt;,\n}\n\nimpl CatMaker {\n    pub fn new() -&gt; CatMaker {\n        CatMaker { child: None }\n    }\n\n    pub fn make_cat(&amp;mut self, color: CoatColor) -&gt; &amp;mut Cat {\n        let new_cat = Cat { color: color };\n        self.child = Some(new_cat);\n        self.child.as_mut().unwrap()\n    }\n}\n\nfn main() {\n    let mut my_cat_maker = CatMaker::new();\n    let mut my_cat = my_cat_maker.make_cat(CoatColor::Black);\n    my_cat.color = CoatColor::Tabby;\n}\n</code></pre>\n\n<p>However, this has a big restriction: you can't use <code>my_cat_maker</code> at all as long as you keep the result of <code>make_cat</code> around &ndash; here, it's stored in <code>my_cat</code>, so you can't use <code>my_cat_maker</code> until <code>my_cat</code> goes out of scope. That's because <code>my_cat</code> keeps a mutable borrow on <code>my_cat_maker</code>, and Rust doesn't allow two mutable borrows to be usable on the same object at the same time.</p>\n\n<p>If this restriction is not acceptable to you, you'll need to use another tool to manage the lifetime of the <code>Cat</code> for you. Such a tool is <a href=\"http://doc.rust-lang.org/stable/std/rc/struct.Rc.html\" rel=\"nofollow\"><code>Rc</code></a>, which is a reference-counted reference to an object. If you also need to be able to mutate the <code>Cat</code>, you'll need to couple <code>Rc</code> with <a href=\"http://doc.rust-lang.org/stable/std/cell/struct.RefCell.html\" rel=\"nofollow\"><code>RefCell</code></a>, which allows mutating the object in an <code>Rc</code>.</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\npub enum CoatColor {\n    Black,\n    Tabby,\n}\n\npub struct Cat {\n    color: CoatColor,\n}\n\npub struct CatMaker {\n    child: Option&lt;Rc&lt;RefCell&lt;Cat&gt;&gt;&gt;,\n}\n\nimpl CatMaker {\n    pub fn new() -&gt; CatMaker {\n        CatMaker { child: None }\n    }\n\n    pub fn make_cat(&amp;mut self, color: CoatColor) -&gt; Rc&lt;RefCell&lt;Cat&gt;&gt; {\n        let new_cat = Rc::new(RefCell::new(Cat { color: color }));\n        self.child = Some(new_cat.clone());\n        new_cat\n    }\n}\n\nfn main() {\n    let mut my_cat_maker = CatMaker::new();\n    let my_cat = my_cat_maker.make_cat(CoatColor::Black);\n    my_cat.borrow_mut().color = CoatColor::Tabby;\n}\n</code></pre>\n\n<p>In <code>make_cat</code>, the <code>.clone()</code> call clones the <code>Rc</code> object, which makes a new reference to the same object, incrementing the reference count. When all related <code>Rc</code> objects are dropped, the reference-counted object is dropped.</p>\n\n<p>In <code>main</code>, we need to call <code>borrow_mut()</code> in order to access the <code>Cat</code>. <code>borrow_mut()</code> returns a <code>RefMut</code> object that protects the <code>Cat</code> from being further borrowed until the <code>RefMut</code> is dropped. If you try to borrow the <code>Cat</code> again while a mutable borrow is active, your program will panic.</p>\n"}], "owner": {"reputation": 1686, "user_id": 1217063, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/xRgTZ.jpg?s=128&g=1", "display_name": "ampron", "link": "https://stackoverflow.com/users/1217063/ampron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1451859884, "creation_date": 1451839277, "last_edit_date": 1451839472, "question_id": 34578943, "link": "https://stackoverflow.com/questions/34578943/specify-lifetime-of-a-reference-to-a-return-argument-for-a-member-variable-in-an", "title": "Specify lifetime of a reference to a return argument for a member variable in an associated function", "body": "<p>I would like to have a <code>CatMaker</code> struct that can create a <code>Cat</code>, but stores a reference to it internally so that it can later make calls to that <code>Cat</code> (maybe have a <code>CatMaker.get_child_color(&amp;self)</code> function).  I believe this implies that the <code>CatMaker</code> cannot outlive the <code>Cat</code> (otherwise it would try to deference and the <code>Cat</code> wouldn't be there) and the compiler seems to agree.</p>\n\n<p>Here is a code example of what I would like to do:</p>\n\n<pre><code>pub enum CoatColor {\n    Black,\n    Tabby,\n}\n\npub struct Cat {\n    color: CoatColor,\n}\n\npub struct CatMaker&lt;'a&gt; {\n    child: Option&lt;&amp;'a Cat&gt;,\n}\n\nimpl&lt;'a&gt; CatMaker&lt;'a&gt; {\n    pub fn new() -&gt; CatMaker&lt;'a&gt; {\n        CatMaker{ child: None }\n    }\n\n    pub fn make_cat(&amp;mut self, color: CoatColor) -&gt; Cat {\n        let new_cat = Cat{ color: color };\n        self.child = Some(&amp;new_cat); // commenting out this line will allow it to compile\n        new_cat\n    }\n}\n\nfn main() {\n    let mut my_cat_maker = CatMaker::new();\n    let mut my_cat = my_cat_maker.make_cat(CoatColor::Black);\n    my_cat.color = CoatColor::Tabby;\n}\n</code></pre>\n\n<p>I'm having trouble figuring out how to specify the lifetime of <code>self.child</code> in <code>CatMaker.make_cat</code>.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1451834815, "post_id": 34576939, "comment_id": 56901006, "body": "Please <i>include the error</i> you get when requesting help in solving the error."}], "answers": [{"tags": [], "owner": {"reputation": 699, "user_id": 3957040, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e88a425a40322e715b799744b3a89898?s=128&d=identicon&r=PG&f=1", "display_name": "Pablo", "link": "https://stackoverflow.com/users/3957040/pablo"}, "is_accepted": true, "score": 4, "last_activity_date": 1451829158, "creation_date": 1451829158, "answer_id": 34577230, "question_id": 34576939, "link": "https://stackoverflow.com/questions/34576939/how-do-i-set-the-user-agent-header-when-making-a-request-with-hyper/34577230#34577230", "title": "How do I set the User-Agent header when making a request with Hyper?", "body": "<p>Maybe you were getting this sort of error?</p>\n\n<pre><code>src/main.rs:31:20: 31:28 error: mismatched types:\n expected `collections::string::String`,\n    found `&amp;'static str`\n(expected struct `collections::string::String`,\n    found &amp;-ptr) [E0308]\nsrc/main.rs:31  .header(UserAgent(\"string\"))\n</code></pre>\n\n<p>If so, you can get it to work by using</p>\n\n<pre><code>.header(UserAgent(\"string\".to_string()))\n</code></pre>\n\n<p>and bringing <code>UserAgent</code> into scope</p>\n\n<pre><code>use hyper::header::{Connection, Headers, UserAgent};\n</code></pre>\n\n<p>The problem would have been in the use of a string literal instead of a <code>String</code> when constructing the header, which is solved by calling the <code>to_string()</code> method on the string literal.</p>\n"}, {"tags": [], "owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "is_accepted": false, "score": 1, "last_activity_date": 1508195605, "creation_date": 1508195605, "answer_id": 46780312, "question_id": 34576939, "link": "https://stackoverflow.com/questions/34576939/how-do-i-set-the-user-agent-header-when-making-a-request-with-hyper/46780312#46780312", "title": "How do I set the User-Agent header when making a request with Hyper?", "body": "<p>With the more recent hyper 0.11, you can set the user agent like this:</p>\n\n<pre><code>let mut req = hyper::Request::new(hyper::Method::Get, url);\nreq.headers_mut().set(UserAgent::new(\"my agent\"));\n</code></pre>\n\n<p>Converted to the following dependencies:</p>\n\n<pre><code>hyper = \"0.11\"\nhyper-tls = \"0.1\"\ntokio-core = \"0.1\"\nfutures = \"0.1\"\n</code></pre>\n\n<p>The whole example would thus be:</p>\n\n<pre><code>extern crate hyper;\nextern crate hyper_tls;\nextern crate tokio_core;\nextern crate futures;\n\nuse std::io::{self, Write};\n\nuse futures::Future;\nuse futures::stream::Stream;\n\nuse hyper::Client;\nuse hyper::header::UserAgent;\n\nstruct Subtasks {\n    github: &amp;'static str,\n}\n\nstruct Tasks {\n    rust: Subtasks,\n    go:   Subtasks,\n}\n\nfn main() {\n    // initialize struct and populate\n    let tasks = Tasks {\n        rust: Subtasks {\n            github: \"https://api.github.com/rust-lang/rust\",\n        },\n        go: Subtasks {\n            github: \"https://api.github.com/golang/go\",\n        },\n    };\n\n    let mut core = tokio_core::reactor::Core::new().unwrap();\n    let handle = core.handle();\n    let client = Client::configure()\n        .connector(hyper_tls::HttpsConnector::new(4, &amp;handle).unwrap())\n        .build(&amp;handle);\n\n    let url = tasks.rust.github.parse::&lt;hyper::Uri&gt;().unwrap();\n    let mut req = hyper::Request::new(hyper::Method::Get, url);\n    req.headers_mut().set(UserAgent::new(\"my agent\"));\n\n    let work = client.request(req).and_then(|res| {\n        print!(\"Response: \");\n        res.body().for_each(|chunk| {\n            io::stdout().write_all(&amp;chunk).map_err(From::from)\n        })\n    });\n\n    core.run(work).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 1339, "user_id": 5050271, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/7d9872fccb84200dc7ef709c4449c4f2?s=128&d=identicon&r=PG&f=1", "display_name": "Meow", "link": "https://stackoverflow.com/users/5050271/meow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2750, "favorite_count": 0, "accepted_answer_id": 34577230, "answer_count": 2, "score": 2, "last_activity_date": 1508195605, "creation_date": 1451827017, "last_edit_date": 1451834778, "question_id": 34576939, "link": "https://stackoverflow.com/questions/34576939/how-do-i-set-the-user-agent-header-when-making-a-request-with-hyper", "title": "How do I set the User-Agent header when making a request with Hyper?", "body": "<p>I'm trying to do a GET request to Github's API in Rust with the Hyper library, and with a user-agent string in the header. I haven't had luck compiling with <code>.header(UserAgent(\"string\"))</code>. Would anyone be willing to propose an idiomatic way to accomplish what I want?</p>\n\n<pre><code>extern crate hyper;\n\nuse std::io::Read;\n\nuse hyper::Client;\nuse hyper::header::{Connection, Headers};\n\nstruct Subtasks {\n    github: &amp;'static str,\n}\n\nstruct Tasks {\n    rust: Subtasks,\n    go:   Subtasks,\n}\n\nfn main() {\n    // initialize struct and populate\n    let tasks = Tasks {\n        rust: Subtasks {\n            github: \"https://api.github.com/rust-lang/rust\",\n        },\n        go: Subtasks {\n            github: \"https://api.github.com/golang/go\",\n        },\n    };\n\n    let client = Client::new();\n    let mut result = client.get(tasks.rust.github)\n        .header(Connection::close())\n        .send()\n        .unwrap();\n\n    let mut body = String::new();\n    result.read_to_string(&amp;mut body).unwrap();\n\n    println!(\"Response: {}\", body);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1451789473, "post_id": 34572784, "comment_id": 56890694, "body": "Pedantically, in the first case, the type of <code>a</code> isn&#39;t actually a slice, it&#39;s a reference to an array of length 3. However, <i>deref coercions</i> allow a reference to an array to act like a slice in most cases."}, {"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451808180, "post_id": 34572784, "comment_id": 56893642, "body": "@Shepmaster thanks for clarifying. Am I right in thinking that the type of <code>a</code> in the first example is <code>&amp;[i32; 3]</code>, while a slice would be <code>&amp;[i32]</code>? Also, is the deref coercion you mentioned visible in <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\">the list here</a>, or is it more magical?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1451835188, "post_id": 34572784, "comment_id": 56901147, "body": "Yes, those would be the types. I lied a little bit, it is a <a href=\"https://github.com/rust-lang/rust/issues/29993\" rel=\"nofollow noreferrer\">bit more magical than a dereference</a>, it&#39;s a <i>coercion</i>. The docs will be updated soonish with the fix."}], "answers": [{"comments": [{"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 0, "creation_date": 1451801528, "post_id": 34572853, "comment_id": 56892552, "body": "This was super helpful, thanks. Can I summarize it this way? 1) If a type derives <code>Copy</code>, you can pass it through a &quot;by value&quot; function and still use it afterwards, and 2) in some magical way, slices implement <code>Copy</code>."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 2, "creation_date": 1451821756, "post_id": 34572853, "comment_id": 56897069, "body": "@JackO&#39;Connor, that&#39;s basically correct, except there is really nothing magical in that slices implement <code>Copy</code>. A slice is essentially an immutable reference, and immutable references are naturally <code>Copy</code>."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 34, "last_activity_date": 1547424156, "last_edit_date": 1547424156, "creation_date": 1451789408, "answer_id": 34572853, "question_id": 34572784, "link": "https://stackoverflow.com/questions/34572784/why-can-i-iterate-over-a-slice-twice-but-not-a-vector/34572853#34572853", "title": "Why can I iterate over a slice twice, but not a vector?", "body": "<p>Like you said, <code>for</code> works by taking the <em>thing</em> you asked it to iterate over, and passing it through <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#tymethod.into_iter\" rel=\"noreferrer\"><code>IntoIterator::into_iter</code></a> to produce the <em>actual</em> iterator value.  Also as you said, <code>into_iter</code> takes the subject <em>by value</em>.</p>\n\n<p>So, when you try to iterate over a <code>Vector</code> directly, this means you pass the entire vector, <em>by value</em>, into its <code>IntoIterator</code> implementation, thus consuming the vector in the process.  Which is why you can't iterate over a vector directly twice: iterating over it the first time consumes it, after which it no longer exists.</p>\n\n<p>However, slices are different: a slice is an immutable, borrowed pointer to its data; immutable, borrowed pointers can be copied freely.  This means that the <code>IntoIterator</code> for immutable slices just borrows the data and doesn't consume it (not that it <em>could</em>).  Or, to look at it another way, its <code>IntoIterator</code> implementation is simply taking a copy of the slice, whereas you can't copy a <code>Vec</code>.</p>\n\n<p>It should be noted that you can iterate over a <code>Vec</code> <em>without</em> consuming it by iterating over a borrow.  If you check the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">documentation for <code>Vec</code></a>, you'll note that it lists implementations of <code>IntoIterator</code> for <code>Vec&lt;T&gt;</code>, <code>&amp;Vec&lt;T&gt;</code> and <code>&amp;mut Vec&lt;T&gt;</code>.</p>\n\n<pre><code>let mut a: Vec&lt;i32&gt; = vec![1, 2, 3];\n\nfor i in &amp;a {           // iterate immutably\n    let i: &amp;i32 = i;    // elements are immutable pointers\n    println!(\"{}\", i);\n}\n\nfor i in &amp;mut a {       // iterate mutably\n    let i: &amp;mut i32 = i;// elements are mutable pointers\n    *i *= 2;\n}\n\nfor i in a {            // iterate by-value\n    let i: i32 = i;     // elements are values\n    println!(\"{}\", i);\n}\n\n// `a` no longer exists; it was consumed by the previous loop.\n</code></pre>\n"}], "owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5982, "favorite_count": 2, "accepted_answer_id": 34572853, "answer_count": 1, "score": 21, "last_activity_date": 1547424156, "creation_date": 1451788637, "last_edit_date": 1547424098, "question_id": 34572784, "link": "https://stackoverflow.com/questions/34572784/why-can-i-iterate-over-a-slice-twice-but-not-a-vector", "title": "Why can I iterate over a slice twice, but not a vector?", "body": "<p>If I try to iterate over a slice twice, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7b4313e5761bada577e05898d4b2d939\" rel=\"noreferrer\">it works fine</a>:</p>\n\n<pre><code>let a = &amp;[1, 2, 3];\nfor i in a {\n    println!(\"{}\", i);\n}\nfor i in a {            // works fine\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>If I try to iterate over a vector twice, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8a6a75b612cff35956263b8225a2868b\" rel=\"noreferrer\">it fails</a>:</p>\n\n<pre><code>let a = vec![1, 2, 3];\nfor i in a {\n    println!(\"{}\", i);\n}\nfor i in a {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `a`\n --&gt; src/main.rs:6:14\n  |\n3 |     for i in a {\n  |              - value moved here\n...\n6 |     for i in a {\n  |              ^ value used here after move\n  |\n  = note: move occurs because `a` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I see that the <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"noreferrer\"><code>IntoIterator</code></a> trait takes <code>self</code> by value, so it makes sense to me that the second example fails. Why does the first example succeed?</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 818, "user_id": 1357321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a140dcb923b5f26469018ca7d764fd30?s=128&d=identicon&r=PG", "display_name": "retep998", "link": "https://stackoverflow.com/users/1357321/retep998"}, "edited": false, "score": 0, "creation_date": 1451840464, "post_id": 34572755, "comment_id": 56902999, "body": "As the author of the <code>user32</code> and <code>kernel32</code> crates, I can confidently say that there is no interop going on. They are raw direct calls that are linked directly to the system libraries. Zero wrapping, equivalent to using them from C."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 818, "user_id": 1357321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a140dcb923b5f26469018ca7d764fd30?s=128&d=identicon&r=PG", "display_name": "retep998", "link": "https://stackoverflow.com/users/1357321/retep998"}, "edited": false, "score": 0, "creation_date": 1451850063, "post_id": 34572755, "comment_id": 56906603, "body": "@retep998 this is a strange problem. I&#39;ve even got the code going into an infinite loop or not depending on if I have a <code>println!</code>. Something is mucked up somewhere..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 0, "creation_date": 1451853532, "post_id": 34572755, "comment_id": 56907761, "body": "Ugh, never mind my last thing. <code>println!</code> must eventually call something that changes <code>GetLastError</code>, as @DavidHeffernan was pointing out. Using <code>println!</code> between a WinAPI function and a call to <code>GetLastError</code> is a Bad Idea."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451853986, "post_id": 34572755, "comment_id": 56907914, "body": "@Shep I&#39;d expect the args to be prepared before the function is called"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 0, "creation_date": 1451854132, "post_id": 34572755, "comment_id": 56907968, "body": "@DavidHeffernan I had something akin to <code>WinApiCall(); println!(); GetLastError();</code>, which in hindsight was a really dumb thing to do ^_^. It certainly got me confused. After fixing my own mistake, I&#39;m still seeing issues where an &quot;opened&quot; clipboard isn&#39;t open, according to <code>GetLastError</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451930726, "post_id": 34582221, "comment_id": 56939556, "body": "I do have a question about PhantomData however, why is it needed?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451930856, "post_id": 34582221, "comment_id": 56939625, "body": "@Vikaton I added basic explanation comments in each use of <code>PhantomData</code>; which of those should be made more explicit?"}, {"owner": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451930955, "post_id": 34582221, "comment_id": 56939690, "body": "the declaration of <code>struct Clipboard&lt;PhantomData&lt;()&gt;)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451963857, "post_id": 34582221, "comment_id": 56952905, "body": "@Vikaton the answer was a bit longer, so I <a href=\"http://stackoverflow.com/q/34603635/155423\">posted it separately</a>."}, {"owner": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451963951, "post_id": 34582221, "comment_id": 56952929, "body": "<a href=\"https://gist.github.com/Vikaton/a02845839d23af2d5286\" rel=\"nofollow noreferrer\">gist.github.com/Vikaton/a02845839d23af2d5286</a> I&#39;m consistently getting error 1418 :("}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1451967991, "post_id": 34582221, "comment_id": 56953872, "body": "@Vikaton :-( indeed. I see the same stuff in my VM. I think you want to allow both types of errors when trying to open the clipboard and just retry. I&#39;ve modified this answer, but I note that your code removed that check and retry logic."}, {"owner": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1452044598, "post_id": 34582221, "comment_id": 56994357, "body": "Yeah that check and retry logic indeed worked, I always get some sort of error but it ends up sending the data, thanks! This has been very weird since I dont know why things just didnt work :("}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "edited": false, "score": 0, "creation_date": 1452047437, "post_id": 34582221, "comment_id": 56995140, "body": "@Vikaton I hear you! And there&#39;s not a lot of existing posts that say &quot;oh yeah, that function fails half the time; just retry&quot;, which makes it seem like our code is doing the wrong thing..."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1451967925, "last_edit_date": 1451967925, "creation_date": 1451859210, "answer_id": 34582221, "question_id": 34572755, "link": "https://stackoverflow.com/questions/34572755/inconsistent-error-returning-from-2-winapi-calls/34582221#34582221", "title": "Inconsistent error returning from 2 winapi calls", "body": "<p>Here is my <strong>guess</strong> as to what is happening: the system is forcibly closing your open clipboard handle.</p>\n\n<p>As far as I have been able to tell, the clipboard is a <em>truly</em> global shared resource, even across processes. I can't trace how far back the <code>OpenClipboard</code> function came into existence, but it works on at least Windows 2000 according to MSDN. I wouldn't be surprised if it actually originated in Windows 98 / 95 or even before that. The clipboard is an old concept! </p>\n\n<p>However, a conceptual problem arises: what if one program opens the clipboard and forgets to close it? Then your entire system would be prevented from using the clipboard, which would be pretty terrible. I believe (with <strong>no proof</strong>) that the OS tracks how much you've had the clipboard open and decides to take the clipboard back from you when you are hogging it.</p>\n\n<p>When you run your program, you can see that it is pegged at 100% CPU, as you've constructed a busy loop that has the clipboard open for the majority of the time. That would be enough to trigger a simple abuse heuristic. Adding (<code>::std::thread::sleep_ms(100)</code>) to the end of your loop seems to make everything behave much nicer.</p>\n\n<p>However, you do still get error code 5 (<code>ERROR_ACCESS_DENIED</code>) sporadically. Again, I believe this to be caused by the global shared nature of the clipboard. Some <em>other</em> process has opened the clipboard for some reason and you cannot have it. The correct thing there is to handle not being able to always get immediate access to the resource.</p>\n\n<p>Making those changes seem to get your program working, but there's more to be done:</p>\n\n<pre><code>extern crate user32;\nextern crate kernel32;\n\nuse std::ptr;\nuse std::marker::PhantomData;\n\nfn main() {\n    let mut sequence_val = None;\n\n    loop {\n        let clip = match Clipboard::open() {\n            Err(WinApiError(ERROR_ACCESS_DENIED)) |\n            Err(WinApiError(ERROR_CLIPBOARD_NOT_OPEN)) =&gt; {\n                println!(\"Someone else is using the clipboard; continuing\");\n                continue;\n            },\n            Err(e) =&gt; panic!(\"Unknown error while opening the clipboard: {:?}\", e),\n            Ok(c) =&gt; c,\n        };\n\n        let next_sequence_val = Some(clip.sequence_number());\n        if sequence_val != next_sequence_val {\n            println!(\"Clipboard advanced from {:?} to {:?}\", sequence_val, next_sequence_val);\n            sequence_val = next_sequence_val;\n\n            let all_formats: Result&lt;Vec&lt;_&gt;, _&gt; = clip.formats().collect();\n            println!(\"Available formats: {:?}\", all_formats);\n\n            let message = clip.get_text().expect(\"Cannot read from clipboard\");\n\n            match message {\n                Some(message) =&gt; println!(\"Got clipboard text: {}\", message),\n                None          =&gt; println!(\"Clipboard did not contain textual data\"),\n            }\n        }\n\n        ::std::thread::sleep_ms(250);\n    }\n}\n\n#[derive(Debug, Copy, Clone)]\nstruct WinApiError(u32);\n\nconst ERROR_ACCESS_DENIED: u32 = 0x5;\nconst ERROR_CLIPBOARD_NOT_OPEN: u32 = 0x58A;\n\nimpl WinApiError {\n    fn from_global() -&gt; Result&lt;(), WinApiError&gt; {\n        let val = unsafe { kernel32::GetLastError() };\n        if val != 0 {\n            Err(WinApiError(val))\n        } else {\n            Ok(())\n        }\n    }\n}\n\n// PhantomData is used here to prevent creating the struct with\n// `Clipboard`.\nstruct Clipboard {\n    marker: PhantomData&lt;()&gt;,\n}\n\nconst CF_UNICODETEXT: u32 = 13;\n\nimpl Clipboard {\n    fn open() -&gt; Result&lt;Clipboard, WinApiError&gt; {\n        unsafe {\n            user32::OpenClipboard(ptr::null_mut());\n            try!(WinApiError::from_global());\n            Ok(Clipboard { marker: PhantomData })\n        }\n    }\n\n    fn formats(&amp;self) -&gt; ClipboardFormats {\n        ClipboardFormats { clip: PhantomData, fmt: 0 }\n    }\n\n    fn sequence_number(&amp;self) -&gt; u32 {\n        unsafe { user32::GetClipboardSequenceNumber() }\n    }\n\n    fn get_text(&amp;self) -&gt; Result&lt;Option&lt;String&gt;, WinApiError&gt; {\n        for fmt in self.formats() {\n            let fmt = try!(fmt);\n            if fmt == CF_UNICODETEXT {\n                unsafe {\n                    let var = user32::GetClipboardData(CF_UNICODETEXT);\n                    try!(WinApiError::from_global());\n\n                    // I don't believe this lock is actually\n                    // needed. In searching around, it only seems to\n                    // be used when you call `GlobalAlloc` and then\n                    // set the clipboard with that data.\n\n                    // If it's needed, consider making another RAII\n                    // type to handle automatically unlocking.\n                    let data = kernel32::GlobalLock(var) as *mut u16;\n                    try!(WinApiError::from_global());\n\n                    let len = rust_strlen16(data);\n                    let raws = std::slice::from_raw_parts(data, len);\n                    let value = String::from_utf16_lossy(raws);\n\n                    kernel32::GlobalUnlock(var);\n                    try!(WinApiError::from_global());\n\n                    return Ok(Some(value));\n                }\n            }\n        }\n\n        Ok(None)\n    }\n}\n\nimpl Drop for Clipboard {\n    fn drop(&amp;mut self) {\n        unsafe {\n            // Ignore failure to close as we can't really do anything\n            // about it\n            user32::CloseClipboard();\n            let _ = WinApiError::from_global();\n\n        }\n    }\n}\n\nunsafe fn rust_strlen16(buff_p: *mut u16) -&gt; usize {\n    let mut i = 0;\n    while *buff_p.offset(i) != 0 { i += 1 }\n    i as usize\n}\n\nstruct ClipboardFormats&lt;'a&gt;{\n    // PhantomData is used here to prevent outliving the opened\n    // clipboard\n    clip: PhantomData&lt;&amp;'a Clipboard&gt;,\n    fmt: u32,\n}\n\nimpl&lt;'a&gt; Iterator for ClipboardFormats&lt;'a&gt; {\n    type Item = Result&lt;u32, WinApiError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let next_fmt = unsafe { user32::EnumClipboardFormats(self.fmt) };\n        if next_fmt == 0 {\n            match WinApiError::from_global() {\n                Ok(_) =&gt; None,\n                Err(e) =&gt; Some(Err(e)),\n            }\n        } else {\n            self.fmt = next_fmt;\n            Some(Ok(next_fmt))\n        }\n    }\n}\n</code></pre>\n\n<p>Namely I created a convenience type <code>WinApiError</code> that checks <code>GetLastError</code> automatically and ties it into the Rust-standard <code>Result</code> type. This is used pervasively along with <code>try!</code>.</p>\n\n<p>I introduced a <code>Clipboard</code> struct to have a type to implement <code>Drop</code> on. This makes it certain that we will <em>always</em> close the clipboard when we are done with it. You may want to even add a <code>close</code> method that makes it very obvious and easy if you want to close it earlier:</p>\n\n<pre><code>fn close(self) {\n    // Automatically dropped as it goes out of scope.\n}\n</code></pre>\n\n<p>To improve performance slightly, I used <code>GetClipboardSequenceNumber</code> which returns an integer timestamp for the clipboard. This allows for a lighter-weight check to know if the clipboard has changed, instead of creating a <code>String</code> each time. It also prevents you from having a magic string of <code>\"NULL\"</code>. You may still want to keep track of the last string to know if the user has copied the same text again.</p>\n\n<p>When retrieving data from the clipboard, you should iterate through all the available formats and take action on the first you care about. Although you only care about the UCS-2 format, I added this while attempting to debug so I figured I'd leave it.</p>\n\n<p>There is a better solution than just sleeping that I have not implemented. <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms649033(v=vs.85).aspx\" rel=\"nofollow\"><code>AddClipboardFormatListener</code></a> can notify a message loop when the clipboard changes. This is probably the correct solution, but does require you to create a window (even if it's used only for messages).</p>\n"}], "owner": {"reputation": 1609, "user_id": 4233606, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/rh3M0.jpg?s=128&g=1", "display_name": "Vikaton", "link": "https://stackoverflow.com/users/4233606/vikaton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 0, "accepted_answer_id": 34582221, "answer_count": 1, "score": 3, "last_activity_date": 1451967925, "creation_date": 1451788065, "last_edit_date": 1451789876, "question_id": 34572755, "link": "https://stackoverflow.com/questions/34572755/inconsistent-error-returning-from-2-winapi-calls", "title": "Inconsistent error returning from 2 winapi calls", "body": "<p>This is my source code:</p>\n\n<pre><code>extern crate user32;\nextern crate kernel32;\n\nuse std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::ptr;\n\nfn main() {\n    let mut message = get_data();\n    loop {\n        if message != get_data() {\n            let mut client = TcpStream::connect(\"127.0.0.1:8080\").unwrap();\n            message = get_data();\n            println!(\"{}\", message);\n            let _ = client.write(message.as_bytes());\n            println!(\"Sent!\");\n        }\n    }\n}\n\nfn get_data() -&gt; String {\n    let value: String;\n    unsafe {\n        let open = user32::OpenClipboard(ptr::null_mut());\n        if open == 0 {\n            println!(\"{}\", kernel32::GetLastError());\n            user32::CloseClipboard();\n            return \"NULL\".to_string()\n        }\n        let var = user32::GetClipboardData(13 as u32);\n        if var.is_null() {\n            println!(\"{}\", kernel32::GetLastError());\n            user32::CloseClipboard();\n            return \"NULL\".to_string()\n        }\n        let data = kernel32::GlobalLock(var) as *mut u16;\n        let len = rust_strlen16(data);\n        let raws = std::slice::from_raw_parts(data, len);\n        value = String::from_utf16_lossy(raws);\n        kernel32::GlobalUnlock(var);\n        user32::CloseClipboard();\n    }\n    value\n}\n\n#[inline(always)]                                       // used from clipboard-win, not mine\nunsafe fn rust_strlen16(buff_p: *mut u16) -&gt; usize {\n    let mut i: isize = 0;\n    while *buff_p.offset(i) != 0 {\n        i += 1;\n    }\n    return i as usize\n}\n</code></pre>\n\n<p>When I initialize <code>message</code> at line 1 of <code>main</code>, everything is fine, but when I start copying text, things start to get a little weird.</p>\n\n<p>From the <code>OpenClipboard</code> function in <code>get_data()</code>, the errors I would get from <code>GetLastError</code> would either be 6 (<code>ERROR_INVALID_HANDLE</code>) or 5 (<code>ERROR_ACCESS_DENIED</code>) for an unknown reason.</p>\n\n<p>From the <code>GetClipboardData</code> function I would consistently get error code 1418 (<code>ERROR_CLIPBOARD_NOT_OPEN</code>) from <code>GetLastError</code>. You would think that I would get this error from getting an error code 6 or 5 from <code>OpenClipboard</code>, however it wouldn't print 1418 since it can't go that far in the function, right? I might be wrong but that's how I see it.</p>\n\n<p>Something you should also note is that these errors show up when comparing <code>message</code> in the loop, but the <code>if</code> statement continues anyway and the message gets assigned the actual copied data, here is some sample output.</p>\n\n<pre><code>1418  // this is when message and get_data() are being checked\nprintln!(\"{}\", result); // this is the actual copied data which is message\nSent! // sent!\n5\nNULL\nSent!\nprintln!(\"Got Connection\");\nSent!\n</code></pre>\n"}, {"tags": ["macos", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451789195, "post_id": 34572754, "comment_id": 56890649, "body": "Why... would you want to do this? The current version of Rust is 1.5.0 and contains <b>numerous</b> improvements / updates / bug fixes. That is the version that any user should be using."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451789702, "post_id": 34572754, "comment_id": 56890755, "body": "Additionally, Rust 0.9 is over two years old at this point..."}, {"owner": {"reputation": 3629, "user_id": 103432, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/fbd46754d268ee0f572d89072d74eb7b?s=128&d=identicon&r=PG", "display_name": "ruslander", "link": "https://stackoverflow.com/users/103432/ruslander"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451791492, "post_id": 34572754, "comment_id": 56891039, "body": "I&#39;m trying to get some code up and running <a href=\"https://github.com/ongardie/availsim/tree/d1f120170d4dc6887b002bfbea8543e7a354dca2\" rel=\"nofollow noreferrer\">github.com/ongardie/availsim/tree/&hellip;</a> and it was developed against Rust v0.9 . If i try to compile with the latest I need to make a bunch code changes which is gonna take longer not being a rust ninja"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1451792201, "post_id": 34572754, "comment_id": 56891159, "body": "If you just want to see a Rust implementation of the Raft algorithm, I&#39;d encourage you to check out <a href=\"https://github.com/Hoverbear/raft-rs\" rel=\"nofollow noreferrer\">raft-rs</a> instead."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1451792741, "creation_date": 1451792741, "answer_id": 34573126, "question_id": 34572754, "link": "https://stackoverflow.com/questions/34572754/unable-to-compile-rust-0-9-on-os-x/34573126#34573126", "title": "Unable to compile Rust 0.9 on OS X", "body": "<p>If you check the <a href=\"https://github.com/rust-lang/rust/blob/0.10/configure#L613\" rel=\"nofollow\"><code>configure</code> script</a>, you will see:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>case $LLVM_VERSION in\n    (3.[2-5]*)\n        msg \"found ok version of LLVM: $LLVM_VERSION\"\n        ;;\n    (*)\n        err \"bad LLVM version: $LLVM_VERSION, need &gt;=3.0svn\"\n        ;;\nesac\n</code></pre>\n\n<p>This restricts the version of LLVM. It's <em>possible</em> you can update it to include 3.6. However, it's also possible that LLVM changed enough between those versions that it wouldn't actually properly link.</p>\n\n<p>Rust proper started supporting 3.6 in <a href=\"https://github.com/rust-lang/rust/blob/8c3db5bc532f0386f9ceb6d6e26cbcd54d428c5f/configure#L710\" rel=\"nofollow\">commit 8c3db5bc</a>, <em>6 months</em> after Rust 0.9 was released.</p>\n\n<p>I wouldn't be surprised if you stumbled across more and more strange build failures; building code is a tenuous thing.</p>\n"}], "owner": {"reputation": 3629, "user_id": 103432, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/fbd46754d268ee0f572d89072d74eb7b?s=128&d=identicon&r=PG", "display_name": "ruslander", "link": "https://stackoverflow.com/users/103432/ruslander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1451792741, "creation_date": 1451788063, "last_edit_date": 1451791269, "question_id": 34572754, "link": "https://stackoverflow.com/questions/34572754/unable-to-compile-rust-0-9-on-os-x", "title": "Unable to compile Rust 0.9 on OS X", "body": "<p>I want to compile Rust 0.9 on OS X as <a href=\"https://github.com/rust-lang/rust/tree/0.10\" rel=\"nofollow\">explained in the documentation</a>. Unfortunately it fails during configuration.</p>\n\n<pre><code>$ ./configure   &lt;--------- fails here\n$ make &amp;&amp; make install\n</code></pre>\n\n<p>With the following error:</p>\n\n<pre><code>configure: CFG_PERL             := /usr/bin/perl \nconfigure: CFG_CURLORWGET       := /usr/bin/curl (curl 7.43.0 (x86_64-apple-darwin14.0) libcurl/7.43.0 SecureTransport zlib/1.2.5)\nconfigure: CFG_PYTHON           := /usr/bin/python2.7 \nconfigure: CFG_GIT              := /usr/bin/git (git version 2.3.2 (Apple Git-55))\nconfigure: git: no git directory. disabling submodules\nconfigure: CFG_CLANG            := /usr/bin/clang++ (Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn))\nconfigure: CFG_CCACHE           :=  \nconfigure: CFG_GCC              := /usr/bin/gcc (Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn))\nconfigure: CFG_LD               := /usr/bin/ld\nconfigure: on OS X 10.9, forcing use of clang\nconfigure: \nconfigure: CFG_ENABLE_CLANG     := 1 \nconfigure: error: bad CLANG version: 3.6.0svn, need &gt;=3.0svn\n</code></pre>\n\n<p>When I run the version check for <code>clang</code> on my box, I see that I have a higher version:</p>\n\n<pre><code>~/Downloads/rust-0.10$ clang --version\nApple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)\nTarget: x86_64-apple-darwin14.5.0\n</code></pre>\n\n<p>I'm confused as it seems that \"3.6.0svn\" should satisfy \"need >=3.0svn\".</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451754513, "post_id": 34568157, "comment_id": 56881022, "body": "FWIW, <i>lifetimes</i> are neither mutable nor immutable. <i>References</i> are mutable or immutable; lifetimes just represent how long the referred-to value lives."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 2, "creation_date": 1451761650, "post_id": 34568157, "comment_id": 56883603, "body": "The first version of your code works if you use <code>self</code> (or <code>&amp;*self</code>) and not <code>&amp;self</code> when constructing the <code>V</code> value, but I cannot figure out why this leads to a lifetime error and not a type error. In your first version, the value of <code>u</code> is a <code>&amp; &amp;mut U</code> when the type of <code>u</code> is <code>&amp;U</code>."}], "answers": [{"tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 4, "last_activity_date": 1451763595, "creation_date": 1451763595, "answer_id": 34569935, "question_id": 34568157, "link": "https://stackoverflow.com/questions/34568157/mutable-versus-immutable-lifetime/34569935#34569935", "title": "Mutable versus immutable lifetime", "body": "<pre><code>v.push(V { u: &amp;self, id: i });\n</code></pre>\n\n<p>is invoking <em>auto-deref</em>, so ends up as</p>\n\n<pre><code>v.push(V { u: *&amp;self, id: i });\n</code></pre>\n\n<p><code>&amp;self</code> is a <code>&amp;'k &amp;'a mut T</code> where <code>'k</code> is the scope <strong>of the <code>&amp;mut</code> pointer</strong> (not the pointed-to object). This means that borrows into this are at times restricted.</p>\n\n<p>The <code>self.make_ref</code> version does this differently; as a reborrow. This looks like <code>&amp;*self</code>. In this case the outer reference is into an object with lifetime <code>'a</code>, so can be of lifetime <code>'a</code>.</p>\n\n<p>Just writing <code>self</code> in this case will have this handled automatically.</p>\n\n<p>Credit goes to to @fjh for his comment, which clarified things nicely.</p>\n"}], "owner": {"reputation": 2567, "user_id": 994206, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/699bacad8f85a069dda312cc29e03baa?s=128&d=identicon&r=PG", "display_name": "Mokosha", "link": "https://stackoverflow.com/users/994206/mokosha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 34569935, "answer_count": 1, "score": 1, "last_activity_date": 1451763595, "creation_date": 1451752703, "last_edit_date": 1451753482, "question_id": 34568157, "link": "https://stackoverflow.com/questions/34568157/mutable-versus-immutable-lifetime", "title": "Mutable versus immutable lifetime", "body": "<p>I have a program that I'm not sure how to reason about. I have a concrete lifetime defined on a trait <code>A</code>, and <code>A</code> is parameterized by a type <code>T : A</code>. One of the trait functions <code>refine</code> of <code>A</code> takes a <code>&amp;'a mut self</code> parameter and returns a <code>Vec&lt;T&gt;</code>. </p>\n\n<p>Suppose I have two structs <code>U</code> and <code>V</code>, such that <code>V</code> has a field with type <code>&amp;'a U</code>, and <code>U</code> has a <code>refine</code> defined as:</p>\n\n<pre><code>fn refine(&amp;'a mut self) -&gt; Vec&lt;V&lt;'a&gt;&gt;\n</code></pre>\n\n<p>If I construct a <code>V</code> directly in the body of <code>U</code>'s implementation of <code>refine</code>, the compiler tells me that <code>self</code> doesn't live long enough. However, if I construct a <code>V</code> within an implementation function of <code>U</code>, let's call it <code>make_v</code>, whose signature is:</p>\n\n<pre><code>fn make_v&lt;'a&gt;(&amp;'a self) -&gt; V&lt;'a&gt;\n</code></pre>\n\n<p>It seems to work OK. I'm confused about how the lifetime requirements of the two are different. I have a <a href=\"http://is.gd/nbAmHU\" rel=\"nofollow\">rust playground</a> working example, and here it is again for posterity:</p>\n\n<pre><code>trait A&lt;'a, T : A&lt;'a&gt; = Self&gt; {\n    fn refine(&amp;'a mut self) -&gt; Vec&lt;T&gt;;\n}\n\n#[derive(Clone, Debug)]\nstruct V&lt;'a&gt; {\n    u: &amp;'a U,\n    id: usize\n}\n\n#[derive(Debug)]\nstruct U {\n    id: u64\n}\n\nimpl U {\n    fn make_v&lt;'a&gt;(&amp;'a self, i: usize) -&gt; V&lt;'a&gt; {\n        V { u: &amp;self, id: i }\n    }\n}\n\nimpl&lt;'a&gt; A&lt;'a&gt; for V&lt;'a&gt; {\n    fn refine(&amp;'a mut self) -&gt; Vec&lt;V&lt;'a&gt;&gt; {\n        vec![self.clone(), self.clone(), self.clone()]\n    }\n}\n\nimpl&lt;'a&gt; A&lt;'a, V&lt;'a&gt;&gt; for U {\n    fn refine(&amp;'a mut self) -&gt; Vec&lt;V&lt;'a&gt;&gt; {\n        let mut v = Vec::new();\n        for i in 0..3 {\n            // This doesn't compile\n            // v.push(V { u: &amp;self, id: i });\n\n            // This does compile...?\n            v.push(self.make_v(i));\n        }\n\n        v\n    }\n}\n\nfn main() {\n    let mut u = U { id: 0 };\n    println!(\"{:?}\", u.refine());\n}\n</code></pre>\n"}, {"tags": ["iterator", "rust", "lifetime"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1451782608, "post_id": 34564944, "comment_id": 56889561, "body": "It doesn&#39;t make sense to pass <code>self</code> to <code>op</code>s if they don&#39;t use <code>self</code>, and how they might use <code>self</code> changes whether this is even safe. I feel your example&#39;s lacking."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451947577, "post_id": 34565023, "comment_id": 56948235, "body": "<i>Assuming you don&#39;t intend to evaluate the same sequence of instructions more than once</i> \u2014 you can always <code>replace</code> the original vector after you are done iterating, restoring the object to the original state."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1451966312, "post_id": 34565023, "comment_id": 56953469, "body": "@Shepmaster Aye, but the question <i>then</i> becomes: what happens if the ops added ops to the now empty buffer?  Do you append those?  Preprend them?  Discard them?  I didn&#39;t feel like confusing the issue at the time.  :P"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1451966396, "post_id": 34565023, "comment_id": 56953492, "body": "Oh, absolutely. I know <i>you</i> knew you could put it back, I just wanted to make sure future readers realized it too!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1451731691, "creation_date": 1451731691, "answer_id": 34565023, "question_id": 34564944, "link": "https://stackoverflow.com/questions/34564944/apply-some-functions-on-a-struct-owning-those-functions/34565023#34565023", "title": "Apply some functions on a struct owning those functions", "body": "<p>You shouldn't really be trying to \"work around the borrow checker\".  It's preventing you from doing this because there's no guarantee that the <code>op</code>s you invoke won't mess with the buffer you're trying to iterate over.  In fact, your final code has the same problem: an <code>op</code> could <em>truncate</em> the buffer, leading to a panic when you try to read past the end of the vector.</p>\n\n<p>One way to do it safely would be to swap out the <code>buffer</code> when you evaluate it.  Assuming you don't intend to evaluate the same sequence of instructions more than once:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn evaluate(&amp;mut self) {\n    use std::mem;\n    for op in mem::replace(&amp;mut self.buffer, vec![]) {\n        op(self);\n    }\n}\n</code></pre>\n\n<p>In this case, the new buffer can be modified by the invoked <code>op</code>s without interfering with <code>evaluate</code>.</p>\n"}], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 34565023, "answer_count": 1, "score": 2, "last_activity_date": 1451900241, "creation_date": 1451731082, "last_edit_date": 1451900241, "question_id": 34564944, "link": "https://stackoverflow.com/questions/34564944/apply-some-functions-on-a-struct-owning-those-functions", "title": "Apply some functions on a struct owning those functions", "body": "<p>I want to apply some functions on a struct owning those functions.</p>\n\n<p>First try:</p>\n\n<pre><code>struct VM {\n    buffer: Vec&lt;fn(&amp;mut VM)&gt;,\n    stack: Vec&lt;isize&gt;,\n}\n\nimpl VM {\n    fn new() -&gt; VM {\n        VM {\n            buffer: vec![VM::op_zero, VM::op_drop],\n            stack: vec![],\n        }\n    }\n    fn op_zero(&amp;mut self) { self.stack.push(0); }\n    fn op_drop(&amp;mut self) {\n        match self.stack.pop() {\n            Some(i) =&gt; println!(\"drop {}\", i),\n            None =&gt; println!(\"stack underflow!\")\n        }\n    }\n    fn evaluate(&amp;mut self) {\n        for op in self.buffer {\n            op(self);\n        }\n    }\n}\n\nfn main() {\n    let mut vm = VM::new();\n    vm.evaluate();\n}\n</code></pre>\n\n<p>This doesn't work because of moving out of borrowed content. I added an <code>&amp;</code> before <code>self.buffer</code>, but it still doesn't work because <code>self.buffer</code> is also borrowed as immutable.</p>\n\n<pre><code>fn evaluate(&amp;mut self) {\n    for op in &amp;self.buffer {\n        op(self);\n    }\n}\n</code></pre>\n\n<p>Third try works, but has the overhead of runtime bounds checking on array indexing:</p>\n\n<pre><code>fn evaluate(&amp;mut self) {\n    let len = self.buffer.len();\n    for i in 0..len {\n        let op = self.buffer[i];\n        op(self);\n    }\n}\n</code></pre>\n\n<p>Is there a better way to work around the borrow checker?</p>\n"}, {"tags": ["string", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1508, "user_id": 3919805, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/9261f5cafc1016051e0d9fdae28ce9da?s=128&d=identicon&r=PG", "display_name": "rilut", "link": "https://stackoverflow.com/users/3919805/rilut"}, "edited": false, "score": 0, "creation_date": 1451680465, "post_id": 34559749, "comment_id": 56863052, "body": "Yeah I thought collecting to vector was inefficient too. I didn&#39;t know Split is the same iterator as iter. May I ask, which is faster from your solutions? Or are their speed roughly the same?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1508, "user_id": 3919805, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/9261f5cafc1016051e0d9fdae28ce9da?s=128&d=identicon&r=PG", "display_name": "rilut", "link": "https://stackoverflow.com/users/3919805/rilut"}, "edited": false, "score": 1, "creation_date": 1451680556, "post_id": 34559749, "comment_id": 56863087, "body": "@rilut you can ask, but I don&#39;t know the answer ^_^. Maybe someone will chime in, but you could also do some performance testing in your app and see for sure. I would probably <i>guess</i> that they are all the same."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1451699621, "post_id": 34559749, "comment_id": 56867347, "body": "Everyone&#39;s confused but at least the answer is flawless now :)"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 1508, "user_id": 3919805, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/9261f5cafc1016051e0d9fdae28ce9da?s=128&d=identicon&r=PG", "display_name": "rilut", "link": "https://stackoverflow.com/users/3919805/rilut"}, "edited": false, "score": 2, "creation_date": 1451725982, "post_id": 34559749, "comment_id": 56872020, "body": "@rilut It&#39;s not <i>the same</i> iterator in any way, but it&#39;s <i>an iterator</i> all the same."}, {"owner": {"reputation": 1508, "user_id": 3919805, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/9261f5cafc1016051e0d9fdae28ce9da?s=128&d=identicon&r=PG", "display_name": "rilut", "link": "https://stackoverflow.com/users/3919805/rilut"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1451747470, "post_id": 34559749, "comment_id": 56878436, "body": "@bluss Yes, that&#39;s what I meant :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 37, "last_activity_date": 1580156812, "last_edit_date": 1580156812, "creation_date": 1451680050, "answer_id": 34559749, "question_id": 34559640, "link": "https://stackoverflow.com/questions/34559640/what-is-the-correct-idiomatic-way-to-check-if-a-string-starts-with-a-certain-c/34559749#34559749", "title": "What is the correct &amp; idiomatic way to check if a string starts with a certain character in Rust?", "body": "<p>The error message gives useful hints on what to do:</p>\n\n<blockquote>\n  <p>frequently replaced by the <code>chars()</code> iterator, this method may be removed or possibly renamed in the future; it is normally replaced by <code>chars</code>/<code>char_indices</code> iterators or by getting the first char from a subslice (see <a href=\"https://github.com/rust-lang/rust/issues/27754\" rel=\"noreferrer\">issue #27754</a>)</p>\n</blockquote>\n\n<ol>\n<li><p>We could follow the error text:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for line in lines_of_text.split(\"\\n\") {\n    match line.chars().next() {\n        Some('#') =&gt; println!(\"Heading\"),\n        Some('&gt;') =&gt; println!(\"Quotation\"),\n        Some('-') =&gt; println!(\"Inline list\"),\n        Some('`') =&gt; println!(\"Code\"),\n        Some(_)   =&gt; println!(\"Other\"),\n        None      =&gt; println!(\"Empty string\"),\n    };\n}\n</code></pre>\n\n<p>Note that this exposes an error condition you were not handling! What if there <em>was no first character</em>?</p></li>\n<li><p>We could <em>slice</em> the string and then pattern match on string slices:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for line in lines_of_text.split(\"\\n\") {\n    match &amp;line[..1] {\n        \"#\" =&gt; println!(\"Heading\"),\n        \"&gt;\" =&gt; println!(\"Quotation\"),\n        \"-\" =&gt; println!(\"Inline list\"),\n        \"`\" =&gt; println!(\"Code\"),\n        _   =&gt; println!(\"Other\")\n    };\n}\n</code></pre>\n\n<p>Slicing a string operates <strong>by bytes</strong> and thus this will panic if your first character isn't exactly 1 byte (a.k.a. an ASCII character). It will also panic if the string is empty. You can choose to avoid these panics:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for line in lines_of_text.split(\"\\n\") {\n    match line.get(..1) {\n        Some(\"#\") =&gt; println!(\"Heading\"),\n        Some(\"&gt;\") =&gt; println!(\"Quotation\"),\n        Some(\"-\") =&gt; println!(\"Inline list\"),\n        Some(\"`\") =&gt; println!(\"Code\"),\n        _ =&gt; println!(\"Other\"),\n    };\n}\n</code></pre></li>\n<li><p>We could use the method that is a direct match to your problem statement, <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.starts_with\" rel=\"noreferrer\"><code>str::starts_with</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for line in lines_of_text.split(\"\\n\") {\n    if line.starts_with('#')      { println!(\"Heading\") }\n    else if line.starts_with('&gt;') { println!(\"Quotation\") }\n    else if line.starts_with('-') { println!(\"Inline list\") }\n    else if line.starts_with('`') { println!(\"Code\") }\n    else                          { println!(\"Other\") }\n}\n</code></pre>\n\n<p>Note that this solution doesn't panic if the string is empty or if the first character isn't ASCII. I'd probably pick this solution for those reasons. Putting the if bodies on the same line as the <code>if</code> statement is not normal Rust style, but I put it that way to leave it consistent with the other examples. You should look to see how separating them onto different lines looks.</p></li>\n</ol>\n\n<hr>\n\n<p>As an aside, you don't need <code>collect::&lt;Vec&lt;_&gt;&gt;().iter()</code>, this is just inefficient. There's no reason to take an iterator, build a vector from it, then iterate over the vector. Just use the original iterator.</p>\n"}], "owner": {"reputation": 1508, "user_id": 3919805, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/9261f5cafc1016051e0d9fdae28ce9da?s=128&d=identicon&r=PG", "display_name": "rilut", "link": "https://stackoverflow.com/users/3919805/rilut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 16106, "favorite_count": 6, "accepted_answer_id": 34559749, "answer_count": 1, "score": 27, "last_activity_date": 1580156812, "creation_date": 1451679220, "last_edit_date": 1510852598, "question_id": 34559640, "link": "https://stackoverflow.com/questions/34559640/what-is-the-correct-idiomatic-way-to-check-if-a-string-starts-with-a-certain-c", "title": "What is the correct &amp; idiomatic way to check if a string starts with a certain character in Rust?", "body": "<p>I want to check whether a string starts with some chars:</p>\n\n<pre><code>for line in lines_of_text.split(\"\\n\").collect::&lt;Vec&lt;_&gt;&gt;().iter() {\n    let rendered = match line.char_at(0) {\n        '#' =&gt; {\n            // Heading\n            Cyan.paint(*line).to_string()\n        }\n        '&gt;' =&gt; {\n            // Quotation\n            White.paint(*line).to_string()\n        }\n        '-' =&gt; {\n            // Inline list\n            Green.paint(*line).to_string()\n        }\n        '`' =&gt; {\n            // Code\n            White.paint(*line).to_string()\n        }\n        _ =&gt; (*line).to_string(),\n    };\n    println!(\"{:?}\", rendered);\n}\n</code></pre>\n\n<p>I've used <code>char_at</code>, but it reports an error due to its instability.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>main.rs:49:29: 49:39 error: use of unstable library feature 'str_char': frequently replaced by the chars() iterator, this method may be removed or possibly renamed in the future; it is normally replaced by chars/char_indices iterators or by getting the first char from a subslice (see issue #27754)\nmain.rs:49      let rendered = match line.char_at(0) {\n                                      ^~~~~~~~~~\n</code></pre>\n\n<p>I'm currently using Rust 1.5</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 151, "user_id": 10933532, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8608a9758f9c786589420708ea6399f5?s=128&d=identicon&r=PG&f=1", "display_name": "ericgithinji", "link": "https://stackoverflow.com/users/10933532/ericgithinji"}, "edited": false, "score": 0, "creation_date": 1602694662, "post_id": 34555837, "comment_id": 113804072, "body": "I guess you mean &#39;by field 1&#39;? (in your comment)"}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 29, "last_activity_date": 1451650067, "creation_date": 1451650067, "answer_id": 34555984, "question_id": 34555837, "link": "https://stackoverflow.com/questions/34555837/sort-hashmap-data-by-value/34555984#34555984", "title": "Sort HashMap data by value", "body": "<blockquote>\n  <p>Is this idiomatic Rust?</p>\n</blockquote>\n\n<p>There's nothing particularly <em>unidiomatic</em>, except <em>possibly</em> for the unnecessary full type constraint on <code>count_vec</code>; you could just use</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut count_vec: Vec&lt;_&gt; = count.iter().collect();\n</code></pre>\n\n<p>It's not difficult from context to work out what the full type of <code>count_vec</code> is.  You could <em>also</em> omit the type constraint for <code>count</code> <em>entirely</em>, but then you'd have to play shenanigans with your integer literals to have the correct value type inferred.  That is to say, an explicit annotation is eminently reasonable in this case.</p>\n\n<p>The <em>other</em> borderline change you could make <em>if you feel like it</em> would be to use <code>|a, b| a.1.cmp(b.1).reverse()</code> for the sort closure.  The <code>Ordering::reverse</code> method just reverses the result so that less-than becomes greater-than, and vice versa.  This makes it slightly more obvious that you <em>meant</em> what you wrote, as opposed to accidentally transposing two letters.</p>\n\n<blockquote>\n  <p>Can I construct the count_vec in a way so that it would consume the HashMaps data and owns it?</p>\n</blockquote>\n\n<p>Not in any meaningful way.  Just because <code>HashMap</code> is using memory doesn't mean that memory is in any way compatible with <code>Vec</code>.  You could use <code>count.into_iter()</code> to <em>consume</em> the <code>HashMap</code> and move the elements out (as opposed to iterating over pointers), but since both <code>char</code> and <code>u32</code> are trivially copyable, this doesn't really gain you anything.</p>\n"}, {"tags": [], "owner": {"reputation": 481, "user_id": 535315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9c0bac3779514546847f9e4405d6300?s=128&d=identicon&r=PG", "display_name": "Juan Vidal", "link": "https://stackoverflow.com/users/535315/juan-vidal"}, "is_accepted": false, "score": 5, "last_activity_date": 1579561634, "creation_date": 1579561634, "answer_id": 59832058, "question_id": 34555837, "link": "https://stackoverflow.com/questions/34555837/sort-hashmap-data-by-value/59832058#59832058", "title": "Sort HashMap data by value", "body": "<p>This could be another way to address the matter without the need of an intermediary vector.</p>\n\n<pre><code>// Count the frequency of each letter\nlet mut count: HashMap&lt;char, u32&gt; = HashMap::new();\nfor c in text.to_lowercase().chars() {\n    *count.entry(c).or_insert(0) += 1;\n}\n\nlet top_char = count.iter().max_by(|a, b| a.1.cmp(&amp;b.1)).unwrap();\n\nprintln!(\"Most frequent character in text: {}\", top_char.0);\n</code></pre>\n"}], "owner": {"reputation": 2378, "user_id": 3564517, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/uRAlt.jpg?s=128&g=1", "display_name": "Stefan Scherfke", "link": "https://stackoverflow.com/users/3564517/stefan-scherfke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13922, "favorite_count": 4, "accepted_answer_id": 34555984, "answer_count": 2, "score": 40, "last_activity_date": 1579561634, "creation_date": 1451648756, "last_edit_date": 1451669392, "question_id": 34555837, "link": "https://stackoverflow.com/questions/34555837/sort-hashmap-data-by-value", "title": "Sort HashMap data by value", "body": "<p>I want to sort HashMap data by value in Rust (e.g., when counting character frequency in a string).</p>\n\n<p>The Python equivalent of what I\u2019m trying to do is:</p>\n\n<pre><code>count = {}\nfor c in text:\n    count[c] = count.get('c', 0) + 1\n\nsorted_data = sorted(count.items(), key=lambda item: -item[1])\n\nprint('Most frequent character in text:', sorted_data[0][0])\n</code></pre>\n\n<p>My corresponding Rust code looks like this:</p>\n\n<pre><code>// Count the frequency of each letter\nlet mut count: HashMap&lt;char, u32&gt; = HashMap::new();\nfor c in text.to_lowercase().chars() {\n    *count.entry(c).or_insert(0) += 1;\n}\n\n// Get a sorted (by field 0 (\"count\") in reversed order) list of the\n// most frequently used characters:\nlet mut count_vec: Vec&lt;(&amp;char, &amp;u32)&gt; = count.iter().collect();\ncount_vec.sort_by(|a, b| b.1.cmp(a.1));\n\nprintln!(\"Most frequent character in text: {}\", count_vec[0].0);\n</code></pre>\n\n<p>Is this idiomatic Rust?  Can I construct the <code>count_vec</code> in a way so that it would consume the HashMaps data and owns it (e.g., using <code>map()</code>)?  Would this be more idomatic?</p>\n"}, {"tags": ["struct", "rust", "traits"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1451612234, "post_id": 34552927, "comment_id": 56848625, "body": "This looks weird to me. From your definitions, it looks like there&#39;s N algorithms for any given model, i.e. the optimizable trait is independent of any algorithms. And yet your model struct tries to link itself to a single algorithm. That feels like a violation of the contract you define in your traits, which may or may not be the reason why you have trouble expressing the requirements in code."}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1451612380, "post_id": 34552927, "comment_id": 56848646, "body": "I want my model struct to own an algorithm which can be specified on construction. So that for example a user could make a custom algorithm and plug it into a model. The idea is that there are multiple algorithms which can be used on any algorithm with the Optimizable trait."}], "answers": [{"comments": [{"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451620233, "post_id": 34553365, "comment_id": 56849556, "body": "This led me to this error further down the line:  E0275 This error occurs when there was a recursive trait requirement that overflowed before it could be evaluated. Often this means that there is unbounded recursion in resolving some type bounds."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451620683, "post_id": 34553365, "comment_id": 56849586, "body": "@user124784 D&#39;you have a MCVE for that? <a href=\"https://play.rust-lang.org/?gist=45d168596399214e013c&amp;version=stable\" rel=\"nofollow noreferrer\">Steven&#39;s code works for me.</a>"}, {"owner": {"reputation": 5160, "user_id": 553092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d161f230b3456d0bfd740154ae16e0a3?s=128&d=identicon&r=PG", "display_name": "Steven", "link": "https://stackoverflow.com/users/553092/steven"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451620708, "post_id": 34553365, "comment_id": 56849589, "body": "@user124784, please post the rest of your code. The code in the answer above compiles."}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451622016, "post_id": 34553365, "comment_id": 56849765, "body": "Heres a minimal version I put together on the playground: <a href=\"https://play.rust-lang.org/?gist=93e483be68190063682d&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 5160, "user_id": 553092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d161f230b3456d0bfd740154ae16e0a3?s=128&d=identicon&r=PG", "display_name": "Steven", "link": "https://stackoverflow.com/users/553092/steven"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451626494, "post_id": 34553365, "comment_id": 56850412, "body": "@user124784 Unfortunately, I don&#39;t know what&#39;s going on. I&#39;ve been able to &quot;fix&quot; it but I don&#39;t really understand the problem."}], "tags": [], "owner": {"reputation": 5160, "user_id": 553092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d161f230b3456d0bfd740154ae16e0a3?s=128&d=identicon&r=PG", "display_name": "Steven", "link": "https://stackoverflow.com/users/553092/steven"}, "is_accepted": false, "score": 4, "last_activity_date": 1451626391, "last_edit_date": 1451626391, "creation_date": 1451619726, "answer_id": 34553365, "question_id": 34552927, "link": "https://stackoverflow.com/questions/34552927/complex-trait-requirements-on-struct/34553365#34553365", "title": "Complex trait requirements on struct", "body": "<p>Just use <code>Model&lt;A&gt;</code> instead of <code>Self</code>. <code>Self</code> is only really useful in traits where one needs to be able to refer to the concrete type implementing the trait. Here, the concrete type is always <code>Model&lt;A&gt;</code>.</p>\n\n<pre><code>pub trait Optimizable {\n    type Data;\n    type Target;\n\n    // The contract //\n}\n\n/// Trait for optimization algorithms.\npub trait OptimAlgorithm&lt;M: Optimizable&gt; {\n\n    // The contract //\n}\npub struct Model&lt;A&gt; where A: OptimAlgorithm&lt;Model&lt;A&gt;&gt; {\n    alg: A,\n}\n\nimpl&lt;A&gt; Optimizable for Model&lt;A&gt;\n    where A: OptimAlgorithm&lt;Model&lt;A&gt;&gt;\n{\n    type Data = ();\n    type Target = ();\n}\n</code></pre>\n\n<hr>\n\n<p>In response to your updated code, the lifetime appears to be giving rust trouble. It appears you can make this work by using a higher-ranked lifetime but I don't know why.</p>\n\n<pre><code>pub trait Optimizable {\n    type Data;\n    type Target;\n\n    // The contract //\n}\n\n/// Trait for optimization algorithms.\npub trait OptimAlgorithm&lt;M: Optimizable&gt; {\n\n    // The contract //\n}\n\npub struct Algorithm;\n\nimpl Default for Algorithm {\n    fn default() -&gt; Algorithm { Algorithm }\n}\n\nimpl&lt;M: Optimizable&gt; OptimAlgorithm&lt;M&gt; for Algorithm {\n\n}\n\n\npub struct Model&lt;'a, A&gt; where for&lt;'b&gt; A: OptimAlgorithm&lt;Model&lt;'b, A&gt;&gt; {\n    layer_sizes: &amp;'a [usize],\n    alg: A,\n}\n\nimpl&lt;'a, A&gt; Model&lt;'a, A&gt;\n    where A: for&lt;'b&gt; OptimAlgorithm&lt;Model&lt;'b, A&gt;&gt;\n{\n    pub fn new(layers: &amp;'a [usize]) -&gt; Model&lt;Algorithm&gt; {\n        Model {\n            layer_sizes: layers,\n            alg: Algorithm::default(),\n        }\n    }\n}\n\nimpl&lt;'a, A&gt; Optimizable for Model&lt;'a, A&gt;\n    where A: for&lt;'b&gt; OptimAlgorithm&lt;Model&lt;'b, A&gt;&gt;\n{\n    type Data = ();\n    type Target = ();\n}\n\npub fn main() {\n    let layers = &amp;[1usize,2,3];\n    let a = Model::&lt;Algorithm&gt;::new(layers as &amp;[usize]);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1451842503, "post_id": 34577038, "comment_id": 56903752, "body": "Thanks for taking a look at this. I find it hard to differ between my lack of understanding and bugs."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456071089, "post_id": 34577038, "comment_id": 58765610, "body": "@user124784: The generic implementation of <code>Optimizable</code> at the bottom is weird. You implement <code>Optimizable</code> for an <code>Model&lt;&#39;a, A&gt;</code> if <code>A</code> implements <code>OptimAlgorithm&lt;Model&lt;&#39;a, A&gt;&gt;</code>, however the parameter of <code>OptimAlgorithm</code> MUST implement <code>Optimizable</code> already... this may well be the heart of the recursion the compiler is complaining about."}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456114167, "post_id": 34577038, "comment_id": 58779944, "body": "@MatthieuM. Thanks for taking the time to look at this. Maybe it&#39;s just that I&#39;ve spent to long staring at this - do you see any easy ways to get out of this weird loop? I had thought about just removing Optimizable and making OptimAlgorithm take a closure (but this doesn&#39;t feel very rusty)."}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456118292, "post_id": 34577038, "comment_id": 58781124, "body": "The reason the implementation is generic is that the model can be <code>optimized</code> with any <code>OptimAlgorithm</code>. But right now the <code>OptimAlgorithm</code> also requires the <code>Optimizable</code> model to be specified - so that it can access the optimizing function."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456125142, "post_id": 34577038, "comment_id": 58783762, "body": "@user124784: I am afraid I don&#39;t see any easy way out of this, and I don&#39;t have enough knowledge about your problem domain to be more helpful unfortunately."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456131909, "post_id": 34577038, "comment_id": 58787340, "body": "@user124784 well, it looks that types per se are fine (everything compiles without lifetimes). Compiler gets stuck with lifetimes on the bound on the Model struct. On the struct you say you want a <code>Model</code> that lives at least <code>&#39;a</code> to contain a <code>OptimAlgorithm</code> depending on a <code>Model</code> that lives at least <code>&#39;a</code>, which can&#39;t be proven at this time. In the <code>impl</code>, I think the same bound works because Rust can see that (at least in this example implementation) <code>OptimAlgorithm</code> does not really depend on the lifetime of <code>Model</code> and so it can prove that everything lives as long as it should."}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456161939, "post_id": 34577038, "comment_id": 58808197, "body": "@PaoloFalabella Thanks! Your comment helped me to figure out why Steven&#39;s solution worked (and also highlights how silly my current set up is). I still can&#39;t figure out a good way to restructure things though... The only way out I see is removing the Optimizable trait and making the OptimAlgorithm take a closure instead (which would be the equivalent of the function in the Optimizable trait)."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456164153, "post_id": 34577038, "comment_id": 58809550, "body": "@user124784 I would need to get a sense of what your real code would look like. Based on the example code only, it&#39;s hard to give you suggestions"}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456164427, "post_id": 34577038, "comment_id": 58809726, "body": "@PaoloFalabella I&#39;ve given a little more information here: <a href=\"https://www.reddit.com/r/rust/comments/46trxu/help_resolving_recursive_trait_dependency/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/46trxu/&hellip;</a> . In case you haven&#39;t seen that. I&#39;m afraid communicating my exact usage won&#39;t be easy in SO comments and will also take up a lot of your time!"}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1456165620, "post_id": 34577038, "comment_id": 58810403, "body": "That&#39;s not to say I&#39;m not happy to do so. I&#39;d love to talk you through it - just don&#39;t want to assume that you&#39;re willing to."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 2, "last_activity_date": 1459858339, "last_edit_date": 1459858339, "creation_date": 1451827743, "answer_id": 34577038, "question_id": 34552927, "link": "https://stackoverflow.com/questions/34552927/complex-trait-requirements-on-struct/34577038#34577038", "title": "Complex trait requirements on struct", "body": "<p>I think it's a bug. Or at least surprising behaviour. \nIf you take off the <code>where</code> bound on the <code>Model</code> struct (and just leave it on the <code>impl</code>), your edited code compiles.\nI'll try to reduce a bit more and file a bug.</p>\n\n<pre><code>pub trait Optimizable {\n    type Data;\n    type Target;\n\n    // The contract //\n}\n\n/// Trait for optimization algorithms.\npub trait OptimAlgorithm&lt;M: Optimizable&gt; {\n\n    // The contract //\n}\n\npub struct Algorithm;\n\nimpl Default for Algorithm {\n    fn default() -&gt; Algorithm { Algorithm }\n}\n\nimpl&lt;M: Optimizable&gt; OptimAlgorithm&lt;M&gt; for Algorithm {\n\n}\n\n\npub struct Model&lt;'a, A&gt; { // no bounds here\n    layer_sizes: &amp;'a [usize],\n    alg: A,\n}\n\nimpl&lt;'a, A&gt; Model&lt;'a, A&gt;\n    where A: OptimAlgorithm&lt;Model&lt;'a, A&gt;&gt;\n{\n    pub fn new(layers: &amp;[usize]) -&gt; Model&lt;Algorithm&gt; {\n        Model {\n            layer_sizes: layers,\n            alg: Algorithm::default(),\n        }\n    }\n}\n\nimpl&lt;'a, A&gt; Optimizable for Model&lt;'a, A&gt;\n    where A: OptimAlgorithm&lt;Model&lt;'a, A&gt;&gt;\n{\n    type Data = ();\n    type Target = ();\n}\n\npub fn main() {\n\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1f6f60b2adb7f723949d&amp;version=stable\" rel=\"nofollow\">playground</a></p>\n"}], "owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 354, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1459858339, "creation_date": 1451611884, "last_edit_date": 1451622108, "question_id": 34552927, "link": "https://stackoverflow.com/questions/34552927/complex-trait-requirements-on-struct", "title": "Complex trait requirements on struct", "body": "<p>I have a fairly complex trait set up and I'm having trouble lining the pieces up. Right now it looks roughly like this:</p>\n\n<pre><code>/// Trait for models which can be gradient-optimized.\npub trait Optimizable {\n    type Data;\n    type Target;\n\n    // The contract //\n}\n\n/// Trait for optimization algorithms.\npub trait OptimAlgorithm&lt;M : Optimizable&gt; {\n\n    // The contract //\n}\n</code></pre>\n\n<p>Now I want to be able to allow a struct implementing <code>OptimAlgorithm</code> to be a field in a struct implementing <code>Optimizable</code>. This would look something like this:</p>\n\n<pre><code>/// Model struct\npub struct Model&lt;A: OptimAlgorithm&lt;Self&gt;&gt; {\n    alg: A,\n}\n\nimpl Optimizable for Model&lt;A&gt; {\n...\n}\n</code></pre>\n\n<p>This doesn't work as the <code>Self</code> reference on the struct is nonsense. I tried using associated types for <code>OptimAlgorithm</code> but I need the algorithms to be generic over the models so this doesn't work. Is there a magic syntax I'm missing or does this need an overhaul?</p>\n\n<p>Edit --</p>\n\n<p>Here's a <a href=\"https://play.rust-lang.org/?gist=93e483be68190063682d&amp;version=stable\" rel=\"nofollow\">minimal example</a> which shows error E0275 as described in Steven's answer. It's a little closer to my source code but less messy.</p>\n"}, {"tags": ["arrays", "byte", "rust"], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1451572488, "post_id": 34546468, "comment_id": 56837355, "body": "Note the &quot;Assume <code>arr</code> may be of any length.&quot; part of the question."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 0, "last_activity_date": 1451565862, "last_edit_date": 1451565862, "creation_date": 1451564462, "answer_id": 34546468, "question_id": 34545347, "link": "https://stackoverflow.com/questions/34545347/adding-a-value-to-an-integer-stored-as-a-byte-array/34546468#34546468", "title": "Adding a value to an integer stored as a byte array", "body": "<p>You are basically implementing sum in base 256. One way of tackling this is to convert to decimal, add 350 and reconvert the result to base 256.</p>\n\n<p>I.e. <code>[0xFF, 0x01, 0xC3, 0x43]</code> is:</p>\n\n<pre><code>255 (FF) * 256^3 +\n1        * 256^2 +\n195 (C3) * 256^1 +\n67  (43) * 256^0 = 4,278,305,603 (base10)\n\n4,278,305,603 + 350 = 4_278_305_953\n</code></pre>\n\n<p>Now you need to reconvert this to base 256. This last bit might look like this in Rust:</p>\n\n<pre><code>// warning, does not handle overflows\nfn base10_to_256(n: u64) -&gt; [u8; 4] {\n    let mut converted_number = [0u8; 4];\n    let mut number_to_convert = n;\n    let base = 256u64;\n\n    for index in 0.. {\n         converted_number[3-index] = (number_to_convert % base) as u8;\n         number_to_convert = number_to_convert / base;\n         if number_to_convert == 0 { break; }\n    }\n\n    converted_number\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/544Rpr\" rel=\"nofollow\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1451653825, "post_id": 34548034, "comment_id": 56855589, "body": "Oh, I am surprised that <code>amount as u8</code> is not considered an overflow; I would have expected Rust to require the modulo to be explicit before casting. Do you know if this is here to stay, or should be wary of an overflow check being added in the future?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1451655134, "post_id": 34548034, "comment_id": 56855928, "body": "@MatthieuM. <a href=\"https://doc.rust-lang.org/nightly/book/casting-between-types.html#numeric-casts\" rel=\"nofollow noreferrer\">&quot;Casting from a larger integer to a smaller integer (e.g. u32 -&gt; u8) will truncate&quot;</a>"}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 5, "last_activity_date": 1451594518, "last_edit_date": 1451594518, "creation_date": 1451573568, "answer_id": 34548034, "question_id": 34545347, "link": "https://stackoverflow.com/questions/34545347/adding-a-value-to-an-integer-stored-as-a-byte-array/34548034#34548034", "title": "Adding a value to an integer stored as a byte array", "body": "<p>Not much to say here; just add and carry along the vector, back to front.</p>\n\n<p>It's possible for the number to overflow. I chose to return the carry; you might prefer to extend the vector. My solution uses mutation, since it's much more efficient than allocating a new vector, and since I wasn't changing the length I thought it was nicer to go generic over a mutable slice.</p>\n\n<pre><code>/// Increments the bytes, assuming the most significant\n/// bit is first, and returns the carry.\nfn increment_bytes(b256: &amp;mut [u8], mut amount: u64) -&gt; u64 {\n    let mut i = b256.len() - 1;\n\n    while amount &gt; 0 {\n        amount += b256[i] as u64;\n        b256[i] = amount as u8;\n        amount /= 256;\n\n        if i == 0 { break; }\n        i -= 1;\n    }\n\n    amount\n}\n\nfn main() {\n    let mut input = vec![0xFF, 0x01, 0xC3, 0x43];\n    println!(\"{}\", increment_bytes(&amp;mut input, 350));\n    println!(\"{:?}\", input);\n}\n</code></pre>\n"}], "owner": {"reputation": 608, "user_id": 2444031, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/TBayp.jpg?s=128&g=1", "display_name": "TJ Mazeika", "link": "https://stackoverflow.com/users/2444031/tj-mazeika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 576, "favorite_count": 0, "accepted_answer_id": 34548034, "answer_count": 2, "score": 2, "last_activity_date": 1451610155, "creation_date": 1451559264, "last_edit_date": 1451610155, "question_id": 34545347, "link": "https://stackoverflow.com/questions/34545347/adding-a-value-to-an-integer-stored-as-a-byte-array", "title": "Adding a value to an integer stored as a byte array", "body": "<p>What would be the best way to <em>add</em> (not <em>append</em>) a value to an array of bytes where the array is treated as a single integer?</p>\n\n<p>For example:</p>\n\n<pre><code>let arr = [0xFF, 0x01, 0xC3, 0x43];\n</code></pre>\n\n<p>Assume <code>arr</code> may be of any length. If I add 350 to this, for example, the new array should be: <code>[0xFF, 0x01, 0xC4, 0xA1]</code>. The solution I've come up with only works if we're incrementing by 1, therefore I'd need to call the method in a loop <code>amount</code> times, which can be inefficient with large <code>amount</code>'s (this example uses <code>Vec</code>'s instead of an array):</p>\n\n<pre><code>fn increment_byte_vec(vec: Vec&lt;u8&gt;) -&gt; Vec&lt;u8&gt; {\n    let mut done = false;\n\n    vec.iter().rev().map(|&amp;v| {\n        if done {\n            v\n        } else if v == 0xFF {\n            0\n        } else {\n            done = true;\n            v + 1\n        }\n    }).rev().collect::&lt;Vec&lt;_&gt;&gt;()\n}\n</code></pre>\n\n<p>How would I adapt the above so that the function can take an <code>amount</code> parameter?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1451667794, "post_id": 34542749, "comment_id": 56859402, "body": "Does your type compare and hash the same as <code>str</code>? If no, you can&#39;t implement <code>Borrow&lt;str&gt;</code>."}, {"owner": {"reputation": 1087, "user_id": 3484614, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/PkfbT.jpg?s=128&g=1", "display_name": "Ben S", "link": "https://stackoverflow.com/users/3484614/ben-s"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1451796782, "post_id": 34542749, "comment_id": 56891855, "body": "Is that a general rule or are you giving me advice specifically? :) I can\u2019t compare and hash the same as <code>str</code> because I have two strings in one of my variants."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1451823199, "post_id": 34542749, "comment_id": 56897492, "body": "That&#39;s a rule that <code>Borrow</code> impls need to abide by (documented by Borrow). By <i>can&#39;t</i> I did mean \u201cshould absolutely not\u201d."}], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 2, "creation_date": 1451555686, "post_id": 34544006, "comment_id": 56830573, "body": "In fact, it <i>is</i> kind of possible to return a value created inside the function from <code>Deref::deref</code>: this value must be a fat pointer. That&#39;s how <code>Deref</code> implementation on a <code>PathBuf</code> works - it returns <code>&amp;Path</code>, which is a fat pointer to an unsized <code>Path</code> struct. Naturally, this is limited to pointers to unsized types, and unfortunately it is not possible to write an unsized enum equivalent for <code>OwnedName</code> type, so such approach won&#39;t work in this case."}, {"owner": {"reputation": 1087, "user_id": 3484614, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/PkfbT.jpg?s=128&g=1", "display_name": "Ben S", "link": "https://stackoverflow.com/users/3484614/ben-s"}, "edited": false, "score": 0, "creation_date": 1451595103, "post_id": 34544006, "comment_id": 56845340, "body": "Aw, ok. It\u2019s the unsized type of <code>Path</code> inside <code>PathBuf</code> that I was trying to emulate - if I wanted to do that, I\u2019d have to use <code>str</code> instead of <code>&amp;str</code> here, and I can\u2019t do that in my particular enum."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1451553342, "creation_date": 1451553342, "answer_id": 34544006, "question_id": 34542749, "link": "https://stackoverflow.com/questions/34542749/how-can-i-implement-borrow-toowned-or-deref-for-an-enum/34544006#34544006", "title": "How can I implement Borrow, ToOwned, or Deref for an enum?", "body": "<p>There is no way to do this.</p>\n\n<p>Note that <code>Deref::deref</code>'s signature says it wants a pointer to a <code>Name</code> with the same lifetime as the thing being deref'ed.  Such a value <em>does not exist</em>.  You <em>cannot</em> return a pointer to something you created in the <code>deref</code> function, either, since it can't possibly outlive its own stack frame.</p>\n\n<p>The fundamental problem is that <code>Name</code> is basically a different <em>kind</em> of pointer (like <code>*const T</code> is to <code>&amp;T</code>), but <code>Deref</code> and other traits like it <em>only</em> allow you to return borrowed pointers.  At present, this is just no way around this.</p>\n\n<p>You can, however, do this if you just don't use <code>Deref</code> and other traits like it.  One possibility would be to <code>impl&lt;'a&gt; From&lt;&amp;'a OwnedName&gt; for Name&lt;'a&gt;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1087, "user_id": 3484614, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/PkfbT.jpg?s=128&g=1", "display_name": "Ben S", "link": "https://stackoverflow.com/users/3484614/ben-s"}, "edited": false, "score": 0, "creation_date": 1451594948, "post_id": 34544190, "comment_id": 56845308, "body": "Good idea, I didn\u2019t think of that."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 6, "last_activity_date": 1451554256, "creation_date": 1451554256, "answer_id": 34544190, "question_id": 34542749, "link": "https://stackoverflow.com/questions/34542749/how-can-i-implement-borrow-toowned-or-deref-for-an-enum/34544190#34544190", "title": "How can I implement Borrow, ToOwned, or Deref for an enum?", "body": "<p>I agree with @DK. Just adding that if your idea is to use them interchangeably, you may not need to have an <code>OwnedName</code> at all. \nYou can define Name to accept both <code>&amp;str</code> and <code>String</code>:</p>\n\n<pre><code>enum Name&lt;T&gt; where T:Borrow&lt;str&gt; {\n    Single(T),\n    Double(T, T),\n}\n\n// these both work now\nlet _a1 = Name::Single(\"hello\");\nlet _a2 = Name::Double(String::from(\"hello\"), String::from(\"world\"));\n</code></pre>\n"}], "owner": {"reputation": 1087, "user_id": 3484614, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/PkfbT.jpg?s=128&g=1", "display_name": "Ben S", "link": "https://stackoverflow.com/users/3484614/ben-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1335, "favorite_count": 0, "accepted_answer_id": 34544006, "answer_count": 2, "score": 7, "last_activity_date": 1451554256, "creation_date": 1451546494, "question_id": 34542749, "link": "https://stackoverflow.com/questions/34542749/how-can-i-implement-borrow-toowned-or-deref-for-an-enum", "title": "How can I implement Borrow, ToOwned, or Deref for an enum?", "body": "<p>I have a type that looks like this:</p>\n\n<pre><code>enum Name&lt;'a&gt; {\n    Single(&amp;'a str),\n    Double(&amp;'a str, &amp;'a str),\n}\n</code></pre>\n\n<p>And another, very similar type that looks like this:</p>\n\n<pre><code>enum OwnedName {\n    Single(String),\n    Double(String, String),\n}\n</code></pre>\n\n<p>I already have a method to convert a Name to an OwnedName. However, I cannot figure out a way to implement something like <code>Deref</code> or <code>Borrow</code> for this type to convert an OwnedName back to a Name. This means I have to write the same methods twice, which is annoying. I\u2019d like to have something that mimics the way <code>PathBuf</code>/<code>Path</code> or <code>String</code>/<code>str</code> work. I\u2019ve tried something like this:</p>\n\n<pre><code>impl ops::Deref for OwnedName {\n    type Target = Name;\n\n    fn deref(&amp;self) -&gt; &amp;Name {\n        match *self {\n            OwnedName::Single(ref s) =&gt; Name::Single(&amp;**s),\n            OwnedName::Double(ref s1, ref s2) =&gt; Name::Double(&amp;**s1, &amp;**s2),\n        }\n    }\n}\n</code></pre>\n\n<p>This errors with <code>wrong number of lifetime parameters: expected 1, found 0</code> on <code>type Target = Name</code>, which is completely understandable, as, well, it needs a lifetime. But I can\u2019t provide one. So is there a way for me to use <code>Deref</code>, or <code>Borrow</code>, or <code>ToOwned</code> in this way?</p>\n"}, {"tags": ["gcc", "linker", "mingw", "rust", "cross-compiling"], "comments": [{"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451534002, "post_id": 34540673, "comment_id": 56823566, "body": "@Shepmaster, thanks for your edit"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451592785, "post_id": 34540673, "comment_id": 56844746, "body": "This was <a href=\"https://www.reddit.com/r/rust/comments/3yvamc/mingw_cross_compiling_error_undefined_reference/\" rel=\"nofollow noreferrer\">cross-posted to Reddit</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1451692143, "post_id": 34560676, "comment_id": 56866037, "body": "OP is not compiling on Windows: &quot;<i>cross compile an exe from Linux for Windows</i>&quot;. If there&#39;s more specific information you think OP should provide, I&#39;d encourage you to add a comment to the question."}], "tags": [], "owner": {"reputation": 976, "user_id": 563335, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/73e25b660a60d4b902855b05b793540e?s=128&d=identicon&r=PG", "display_name": "Script and Compile", "link": "https://stackoverflow.com/users/563335/script-and-compile"}, "is_accepted": false, "score": -1, "last_activity_date": 1451687293, "creation_date": 1451687293, "answer_id": 34560676, "question_id": 34540673, "link": "https://stackoverflow.com/questions/34540673/mingw-cross-compiling-error-undefined-reference-to-mingw-get-msvcrt-handle/34560676#34560676", "title": "mingw cross compiling error - undefined reference to `__mingw_get_msvcrt_handle&#39;", "body": "<p>When compiling on windows it's <em>highly</em> suggested to use multirust instead of just rust. It looks to me like you are trying to mix msvc compiled rust with mingw in some fashion. Without more info it's not really clear how/where things are going wrong.</p>\n"}, {"tags": [], "owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "is_accepted": true, "score": 1, "last_activity_date": 1545417863, "last_edit_date": 1545417863, "creation_date": 1451888796, "answer_id": 34585763, "question_id": 34540673, "link": "https://stackoverflow.com/questions/34540673/mingw-cross-compiling-error-undefined-reference-to-mingw-get-msvcrt-handle/34585763#34585763", "title": "mingw cross compiling error - undefined reference to `__mingw_get_msvcrt_handle&#39;", "body": "<p>I have found the issue. </p>\n\n<p>I was referring to <a href=\"https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows\">this post</a> for the cross compilation. To have the <strong>rustlib</strong> for x86_64, I download the package <a href=\"http://static.rust-lang.org/dist/rustc-1.5.0-x86_64-pc-windows-gnu.tar.gz\" rel=\"nofollow noreferrer\">http://static.rust-lang.org/dist/rustc-1.5.0-x86_64-pc-windows-gnu.tar.gz</a> and copy the lib to the <strong>rustlib/x86_64-pc-windows-gnu</strong> under my rustc installation in Linux.</p>\n\n<p>However, the __mingw_get_msvcrt_handle is not defined in this rustlib from rustlang. I am using the cross compiler of <strong>mingw gcc</strong> and it seems that you must use the lib provided by mingw gcc. </p>\n\n<p>My solution is to copy all files (*.a, *.o, etc) in mingw gcc lib folder to the rustlib/x86_64-pc-windows-gnu. It works then. </p>\n"}], "owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 0, "accepted_answer_id": 34585763, "answer_count": 2, "score": 0, "last_activity_date": 1545417863, "creation_date": 1451532999, "last_edit_date": 1451533365, "question_id": 34540673, "link": "https://stackoverflow.com/questions/34540673/mingw-cross-compiling-error-undefined-reference-to-mingw-get-msvcrt-handle", "title": "mingw cross compiling error - undefined reference to `__mingw_get_msvcrt_handle&#39;", "body": "<p>I can successfully cross compile an exe from Linux for Windows of a simple hello world program. Now, I am trying to cross compile a more complicated program. It's a Rust program, but it is not the cause of the issue, as an .o has been produced.</p>\n\n<p>Any idea why I get an <strong>undefined reference to `__mingw_get_msvcrt_handle'</strong> error? I am using a toolchain prebuilt by <strong>rubenvb-4.7.0.</strong></p>\n\n<p>The command line is:</p>\n\n<pre><code>/inst_temp/mingw32_3/mingw64/bin/x86_64-w64-mingw32-gcc -Wl,--enable-long-section-names -fno-use-linker-plugin -Wl,--nxcompat -static-libgcc -m64 -L /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib /rust.code/study/prj3/target/x86_64-pc-windows-gnu/debug/study_cross_rust.0.o -o /rust.code/study/prj3/target/x86_64-pc-windows-gnu/debug/study_cross_rust.exe -Wl,--gc-sections -L /rust.code/study/prj3/target/x86_64-pc-windows-gnu/debug -L /rust.code/study/prj3/target/x86_64-pc-windows-gnu/debug/deps -L /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib -L /rust.code/study/prj3/.rust/lib/x86_64-pc-windows-gnu -L /rust.code/study/prj3/lib/x86_64-pc-windows-gnu -Wl,-Bstatic -Wl,-Bdynamic /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/libstd-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/libcollections-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/librustc_unicode-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/librand-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/liballoc-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/liballoc_jemalloc-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/liblibc-35c36e89.rlib /mytool/var/lib/rustlib/x86_64-pc-windows-gnu/lib/libcore-35c36e89.rlib -l ws2_32 -l userenv -l advapi32 -l compiler-rt\n</code></pre>\n\n<p>These are the error messages:</p>\n\n<pre><code>/inst_temp/mingw32_3/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/4.7.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o: In function `__mingw_prepare_except_for_msvcr80_and_higher':\n/home/ruben/mingw-w64/toolchain/src/mingw-w64/tags/v2.0.3/mingw-w64-crt/crt/crtexe.c:430: undefined reference to `__mingw_get_msvcrt_handle'\ncollect2: error: ld returned 1 exit status\n</code></pre>\n"}]