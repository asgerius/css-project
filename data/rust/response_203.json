[{"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1543451606, "post_id": 53529608, "comment_id": 93928776, "body": "Adding <code>where &lt;C as graphics::character::CharacterCache&gt;::Error : std::fmt::Debug</code> on the function that calls <code>expect</code> (and possibly other functions that call the first one) should solve the problem too."}, {"owner": {"reputation": 9968, "user_id": 312725, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/9GV9q.jpg?s=128&g=1", "display_name": "Max Yankov", "link": "https://stackoverflow.com/users/312725/max-yankov"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1543766550, "post_id": 53529608, "comment_id": 94027366, "body": "@FrancisGagn&#233; but then this function wouldn&#39;t be usable unless I actually fix the libraries I&#39;m using, and this question is exactly about whether I should do it"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1543770184, "post_id": 53529608, "comment_id": 94028418, "body": "Oh, I assumed the error types in question already implemented <code>Debug</code>. Nevermind then!"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 4, "last_activity_date": 1543450377, "last_edit_date": 1543450377, "creation_date": 1543450058, "answer_id": 53530001, "question_id": 53529608, "link": "https://stackoverflow.com/questions/53529608/is-it-good-practice-to-require-associated-error-types-implement-debug-trait/53530001#53530001", "title": "Is it good practice to require associated Error types implement Debug trait?", "body": "<blockquote>\n  <p>Is it good practice to require associated Error types implement Debug trait?</p>\n</blockquote>\n\n<p>Yes, when possible. Maybe they forget it.</p>\n\n<p>A way to solve this problem is to use <code>map_err()</code>, here a MCVE of the problem:</p>\n\n<pre><code>struct Error;\n\nfn foo() -&gt; Result&lt;(), Error&gt; {\n    Ok(())\n}\n\nfn main() {\n    foo().expect(\"no error\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `expect` found for type `std::result::Result&lt;(), Error&gt;` in the current scope\n --&gt; src/main.rs:8:11\n  |\n8 |     foo().expect(\"no error\");\n  |           ^^^^^^\n  |\n  = note: the method `expect` exists but the following trait bounds were not satisfied:\n          `Error : std::fmt::Debug`\n</code></pre>\n\n<p>Use <code>map_err()</code> to produce an error that implement Debug, that could be your own custom Error, In the following exemple, I just return <code>()</code> as Error:</p>\n\n<pre><code>struct Error;\n\nfn foo() -&gt; Result&lt;(), Error&gt; {\n    Ok(())\n}\n\nfn main() {\n    foo().map_err(|_| ()).expect(\"no error\");\n}\n</code></pre>\n"}], "owner": {"reputation": 9968, "user_id": 312725, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/9GV9q.jpg?s=128&g=1", "display_name": "Max Yankov", "link": "https://stackoverflow.com/users/312725/max-yankov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 53530001, "answer_count": 1, "score": 3, "last_activity_date": 1543450444, "creation_date": 1543447402, "last_edit_date": 1543450444, "question_id": 53529608, "link": "https://stackoverflow.com/questions/53529608/is-it-good-practice-to-require-associated-error-types-implement-debug-trait", "title": "Is it good practice to require associated Error types implement Debug trait?", "body": "<p>I've run into a problem with <code>piston2d-graphics</code> crate. When I try to use <code>expect()</code> method on <code>Result</code> that I get from <code>graphics::character::CharacterCache::character</code> method, it turns out I can't \u2014 because it requires the Error type of the Result to implement <code>std::fmt::Debug</code> trait:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `expect` found for type `std::result::Result&lt;graphics::character::Character&lt;'_, &lt;G as graphics::Graphics&gt;::Texture&gt;, &lt;C as graphics::character::CharacterCache&gt;::Error&gt;` in the current scope\n  --&gt; src/some_file.rs:44:53\n   |\n44 |             let ch_glyph = glyphs.character(34, ch).expect(\"Couldn't load character\");\n   |                                                     ^^^^^^\n   |\n   = note: the method `expect` exists but the following trait bounds were not satisfied:\n           `&lt;C as graphics::character::CharacterCache&gt;::Error : std::fmt::Debug`\n</code></pre>\n\n<p><code>Error</code> here is an associated (nested) type in <code>CharacterCache</code> trait. I can easily submit a PR that adds the requirement and then add it's implementation with a simple derive macro to all other crates. It seems reasonable, because <code>expect()</code> and other related methods are used in Rust all the time, but I'm not sure. Is it the Rust way, or are there reasons not to do it?</p>\n\n<hr>\n\n<p>I describe the question using example of it's occurrence, but it has nothing specific to do with Piston, my question is about general pattern in Rust. So tag <code>rust-piston</code> is unrelated, please don't add it to the question.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1543433833, "post_id": 53526572, "comment_id": 93922557, "body": "This has been asked before, but I can&#39;t find the duplicate right now. Essentially, you need to use <code>self.cache.entry(arg).or_insert_with(|| function(arg))</code>, with <code>let function = &amp;self.function</code>. (You can&#39;t use <code>self.function</code> inside the closure since this would borrow <code>self</code>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=39e0efdda221d45c1520c5c4180f832b\" rel=\"nofollow noreferrer\">Playground</a>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543434744, "post_id": 53526572, "comment_id": 93922994, "body": "@SvenMarnach FWIW, I found via <code>site:stackoverflow.com rust disjoint borrow</code>"}], "owner": {"reputation": 2897, "user_id": 2665591, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/17ire.png?s=128&g=1", "display_name": "DanielSank", "link": "https://stackoverflow.com/users/2665591/danielsank"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 319, "favorite_count": 0, "closed_date": 1543434628, "answer_count": 0, "score": 1, "last_activity_date": 1543434457, "creation_date": 1543432596, "last_edit_date": 1543434457, "question_id": 53526572, "link": "https://stackoverflow.com/questions/53526572/how-do-we-return-a-reference-to-a-hashmap-value-from-a-method-in-a-struct-that-o", "closed_reason": "Duplicate", "title": "How do we return a reference to a HashMap value from a method in a struct that owns the HashMap?", "body": "<p>Consider the following attempt to make a function memoizer (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=ef511c80195da647a0c90c96d036758e\" rel=\"nofollow noreferrer\">playground link</a>):</p>\n\n<pre><code>use std::collections::HashMap;\n\npub struct Cacher&lt;F, IN, OUT&gt; {\n    function: F,\n    cache: HashMap&lt;IN, OUT&gt;,\n}\n\nimpl&lt;F, IN, OUT&gt; Cacher&lt;F, IN, OUT&gt;\nwhere\n    F: Fn(IN) -&gt; OUT,\n    IN: std::cmp::Eq + std::hash::Hash + std::marker::Copy,\n    OUT: std::marker::Copy,\n{\n    fn new(function: F) -&gt; Cacher&lt;F, IN, OUT&gt; {\n        Cacher {\n            function: function,\n            cache: HashMap::new(),\n        }\n    }\n\n    fn at(&amp;mut self, arg: IN) -&gt; &amp;OUT {\n        match self.cache.get(&amp;arg) {\n            None =&gt; {\n                let val = (self.function)(arg);\n                self.cache.insert(arg, val);\n                &amp;val // FAIL!\n            }\n            Some(val) =&gt; val,\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>at</code> method fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `val` does not live long enough\n  --&gt; src/lib.rs:26:18\n   |\n26 |                 &amp;val // FAIL!\n   |                  ^^^ borrowed value does not live long enough\n27 |             }\n   |             - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 21:5...\n  --&gt; src/lib.rs:21:5\n   |\n21 | /     fn at(&amp;mut self, arg: IN) -&gt; &amp;OUT {\n22 | |         match self.cache.get(&amp;arg) {\n23 | |             None =&gt; {\n24 | |                 let val = (self.function)(arg);\n...  |\n29 | |         }\n30 | |     }\n   | |_____^\n\nerror[E0502]: cannot borrow `self.cache` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:25:17\n   |\n22 |         match self.cache.get(&amp;arg) {\n   |               ---------- immutable borrow occurs here\n...\n25 |                 self.cache.insert(arg, val);\n   |                 ^^^^^^^^^^ mutable borrow occurs here\n...\n30 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>My understanding is that in the case that the value must be computed, the returned <code>&amp;val</code> isn't known to live long enough.\nI tried a few things to explain to the compiler that the returned <code>&amp;val</code> should be expected to live as long as the <code>Cacher</code> that contains it, but so far I have not succeeded.</p>\n\n<p>How do we give the compiler the required information about <code>&amp;val</code>'s lifetime?</p>\n"}, {"tags": ["asynchronous", "rust", "connection", "pool", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1543428991, "post_id": 53523834, "comment_id": 93920233, "body": "Since this question in its current form appears off-topic, you may wish to look at other resources. More open-ended questions and discussions are welcome on <a href=\"https://chat.mibbit.com/?server=irc.mozilla.org&amp;channel=%23rust-beginners\" rel=\"nofollow noreferrer\">the Rust-Beginners IRC channel</a>, <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">the Rust subreddit</a>, or <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">the Rust users forum</a>. There is also a list of Rust IRC channels on <a href=\"https://www.rust-lang.org/en-US/community.html#irc-channels\" rel=\"nofollow noreferrer\">the community page</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543435863, "post_id": 53523834, "comment_id": 93923510, "body": "For what it&#39;s worth, there is <a href=\"https://github.com/khuey/bb8\" rel=\"nofollow noreferrer\">bb8</a>, which looks like an async version of r2d2, but it doesn&#39;t really seem to have docoumentation."}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1543473204, "post_id": 53523834, "comment_id": 93933944, "body": "It also seems a bit outdated, as it still uses tokio_core etc."}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1545770912, "post_id": 53523834, "comment_id": 94725234, "body": "I have implemented a simple pool that stores asynchronous connection objects in a <code>VecDeque</code>. There is no supervisor that keeps connections alive. So, if an acquired connection is dead, it is being renewed, used and put back in the queue. If all the connections are busy, some extra connections are allocated and then discarded (logging some warnings). So, it is a lazy-initialization pool without any inner threads. If there is a lot of traffic, connections will be used frequently enough to keep them alive."}, {"owner": {"reputation": 939, "user_id": 224186, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2fdb492685f891b34f7df3491029ba10?s=128&d=identicon&r=PG", "display_name": "Bryn Keller", "link": "https://stackoverflow.com/users/224186/bryn-keller"}, "edited": false, "score": 1, "creation_date": 1550213524, "post_id": 53523834, "comment_id": 96193900, "body": "It seems that <a href=\"https://github.com/khuey/bb8\" rel=\"nofollow noreferrer\">bb8</a> has been updated recently (and does have an adapter for redis). It&#39;s working well for me with current tokio."}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 367, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1545770912, "creation_date": 1543421899, "question_id": 53523834, "link": "https://stackoverflow.com/questions/53523834/the-asynchronous-connection-pool-implementation-in-rust", "title": "The asynchronous connection pool implementation in Rust", "body": "<p>I have a Tokio TCP back-end application, which, briefly, after receiving a request, reads something from Redis, writes something to PostgreSQL, uploads something via HTTP, sends something to RabbitMQ etc. Processing each request takes a lot of time, so a separate task for each request is created. As sharing connections is impossible in asynchronous models, some connection pooling is required. For now, new connections are established on each request, and it is extremely excessive.</p>\n\n<p>I have been looking for an asynchronous connection pool implementation in Rust, but have not found any of them up to date.</p>\n\n<p>I would like to hear some advice on how to implement it myself.</p>\n\n<p>The only idea I have come up with is:</p>\n\n<ol>\n<li>Implement a <code>Stream/Sink</code> object with an inner collection of connections. It does not matter whether it is LIFO or FIFO, since the connections are identical. On the application startup, N connections are allocated. </li>\n<li>Now I am not sure if it is possible to share such a pool among tasks, but if it were possible, tasks would poll the stream for a connection instance (instead of establishing their own one), use it, and then put back.</li>\n<li>If there were no connections available, the stream might establish more of them or ask the task to hang on (depending on its configuration).</li>\n<li>If a connection fails, it gets dropped and the pool now contains N-1 connections, so it may decide to allocate a new one on the next request.</li>\n</ol>\n\n<p>So I have two problems I cannot find proper answers anywhere:</p>\n\n<ol>\n<li><p>Must/can/should I share the stream/sink-pool among tasks in some way? Anyway, I see some <code>Shared</code> futures in the <code>futures</code> crate.</p></li>\n<li><p>There are some gloomy points in the tokio/futures tutorial. E.g. it does not explain how do I notify the uppermost task, that is, how do I implement the mythical innermost future, which does not pool anything itself, but still has to notify the upper futures.</p></li>\n</ol>\n\n<p>Or is my approach completely wrong? I could start playing with it by myself, but I have a strong suspicion that I have missed something, e.g. a one-click solution.</p>\n"}, {"tags": ["multithreading", "rust", "lifetime"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 4, "creation_date": 1543422253, "post_id": 53523312, "comment_id": 93916725, "body": "If your graph is only set once and you really really need the static lifetime, I recommend using <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow noreferrer\">lazy_static!</a> for this. But from a first glance, it seems to me like you don&#39;t really need a static lifetime. Instead, try wrapping your graph in an  <code>Arc&lt;RwLock&lt;Graph&gt;&gt;</code> and passing copies of it to the threads."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1543435829, "post_id": 53523312, "comment_id": 93923496, "body": "Is the external file known at compile time? If so, you could try to incorporate the construction of your <code>Graph</code> into <code>build.rs</code>."}], "owner": {"reputation": 1, "user_id": 10340291, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-yZ26e7Ohw68/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaMSyNce61cKQdl4j-0QtTBq1gT-zQ/mo/photo.jpg?sz=128", "display_name": "Sokol Makolli", "link": "https://stackoverflow.com/users/10340291/sokol-makolli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1543420231, "creation_date": 1543420231, "question_id": 53523312, "link": "https://stackoverflow.com/questions/53523312/rust-setting-static-lifetime-after-initialization", "title": "Rust Setting static lifetime after initialization", "body": "<p>I have a graph struct which looks like this:</p>\n\n<pre><code>pub struct Graph {\n   pub nodes: Vec&lt;Node&gt;,\n   pub edges: Vec&lt;Edge&gt;\n}\n</code></pre>\n\n<p>My program reads the nodes and edges from an external file and after that they will not be changed anymore.</p>\n\n<p>How can i set the Graph to have a static lifetime so i can use it in multiple threads?</p>\n"}, {"tags": ["string", "rust", "arguments", "traits"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401232, "post_id": 53517344, "comment_id": 93903493, "body": "Do you want to have a <code>String</code> or <code>&amp;str</code> in the end?"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401348, "post_id": 53517344, "comment_id": 93903551, "body": "Whichever, as long as I can pass it back into the same function without re-casting."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401421, "post_id": 53517344, "comment_id": 93903592, "body": "In Rust we don&#39;t use the term casting. Also, <i>&quot;pass it back into the same function&quot;</i>: are you speaking about recursion?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401545, "post_id": 53517344, "comment_id": 93903681, "body": "It is not very clear for me, what you want. Do you want to accept a string slice, e.g. something you can read chars of but not modify it or do you want a <code>String</code> which you can modify,e.g. replace, append, prepend, ... chars. It&#39;s a huge difference."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401576, "post_id": 53517344, "comment_id": 93903710, "body": "<code>let x = foo(&quot;abc&quot;); foo(x);</code>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401648, "post_id": 53517344, "comment_id": 93903763, "body": "Then accept a string slice and return it <code>fn foo(s: &amp;str) -&gt; &amp;str</code>. Call it with <code>foo(&quot;ABC&quot;)</code> or <code>foo(&amp;String::from(&quot;ABC&quot;))</code>"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401956, "post_id": 53517344, "comment_id": 93903952, "body": "Example: (doesn&#39;t compile) <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=a6b420adc6efd0f13701621b8a098de5\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> (will update Q when I understand)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543401993, "post_id": 53517344, "comment_id": 93903971, "body": "Of course that doesn&#39;t work, because rust doesn&#39;t support operater overloading"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543402038, "post_id": 53517344, "comment_id": 93904002, "body": "@hellow, yeah I&#39;m showing you what I&#39;m trying to get at. If I had the solution, I&#39;d post an answer."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543402175, "post_id": 53517344, "comment_id": 93904085, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/184390/discussion-between-hellow-and-petrus-theron\">continue this discussion in chat</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1543403216, "post_id": 53517344, "comment_id": 93904657, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=ad8b6acfe245fdde50ff623edffb8356\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543403456, "post_id": 53517344, "comment_id": 93904792, "body": "It will depend on the kind of trait. Without more information, we can only tell you to make two <code>impl</code> blocks. If you don&#39;t know how to implement traits yet, <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">the book</a> is your friend."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1543404267, "post_id": 53517344, "comment_id": 93905246, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-or\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543405583, "post_id": 53517344, "comment_id": 93906006, "body": "Updated my question. @E_net4iskindandwelcoming two traits is fine. I just want to reclaim usability, even at the cost of safety/perf. (in this case)."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543405992, "post_id": 53517344, "comment_id": 93906249, "body": "Two traits does not make sense here, since you can have just one for the intended behaviour (with multiple implementations). Note that immutability does not come to play when returning values from a function. More on this subject <a href=\"https://stackoverflow.com/q/28587698/1233251\">here</a> and <a href=\"https://stackoverflow.com/q/50124680/1233251\">here</a>."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543406356, "post_id": 53517344, "comment_id": 93906455, "body": "@E_net4iskindandwelcoming, thanks, but you suggested using two traits above. I don&#39;t really care about what the solution entails or Rust&#39;s design philosophy, I just want my code to compile and not care about strings or slices until a future version of the borrow checker can &quot;do the right thing&quot; and warn me about potential heap problems. I&#39;m just trying to get productive because I have a job to do, knowingly at the cost of doing &quot;the wrong thing&quot;."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543406457, "post_id": 53517344, "comment_id": 93906511, "body": "Actually, I said two <code>impl</code> blocks, which makes two implementations rather than two traits. I can indeed answer the question, but you are <i>strongly</i> advised to re-read the book on making and implementing traits."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543406886, "post_id": 53517344, "comment_id": 93906784, "body": "@E_net4iskindandwelcoming my mistake on &quot;two traits&quot;, I should have said &quot;two trait impls&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543404852, "post_id": 53518483, "comment_id": 93905577, "body": "I tried AsRef, but I got something about <code>T</code> cannot be safely shared between threads when using the result of <code>display()</code> when it has return value, i.e. <code>let x =&quot;abc&quot;.display()</code>. Will try to provide code to replicate."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 1, "creation_date": 1543405085, "post_id": 53518483, "comment_id": 93905720, "body": "@PetrusTheron This has nothing to do with your question. That&#39;s an issue about multithreading code."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543406619, "post_id": 53518483, "comment_id": 93906623, "body": "your example but returning a &amp;str: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=3fa379e099e74245ab6efe5fe497b499\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . I had to add a lifetime, but I can&#39;t get it to compile. Can you help me tweak it? Assume my machine has infinite memory."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543408836, "post_id": 53518483, "comment_id": 93907935, "body": "@PetrusTheron You should read more about Rust strings: <code>&amp;str</code> vs <code>String</code>. You can find a lot of useful links, for example: <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\" title=\"what are the differences between rusts string and str\">stackoverflow.com/questions/24158114/&hellip;</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1543404862, "last_edit_date": 1543404862, "creation_date": 1543404747, "answer_id": 53518483, "question_id": 53517344, "link": "https://stackoverflow.com/questions/53517344/rust-method-that-accepts-and-treats-any-kind-of-string-as-immutable-and-produces/53518483#53518483", "title": "Rust method that accepts and treats any kind of string as immutable and produces a new immutable string?", "body": "<p>If you want a borrowed string <code>&amp;str</code> at the end:</p>\n\n<pre><code>trait Foo {\n    fn display(&amp;self);\n}\n\nimpl&lt;T&gt; Foo for T where T: AsRef&lt;str&gt; {\n    fn display(&amp;self) {\n        println!(\"{}\", self.as_ref());\n    }\n}\n\nfn main() {\n    \"hello\".display();\n    String::from(\"world\").display();\n}\n</code></pre>\n\n<p>If you want an owned <code>String</code>:</p>\n\n<pre><code>trait Foo {\n    fn display(self);\n}\n\nimpl&lt;T&gt; Foo for T where T: Into&lt;String&gt; {\n    fn display(self) {\n        let s: String = self.into();\n        println!(\"{}\", s);\n    }\n}\n\nfn main() {\n    \"hello\".display();\n    String::from(\"world\").display();\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543406842, "post_id": 53519033, "comment_id": 93906756, "body": "Fantastic! Is there a way to return the String as immutable? The knowledge I was missing was how to write the lifetimes like, <code>impl&lt;&#39;a&gt; Foo for &amp;&#39;a str</code>. Obviously I have <i>not</i> read the book on traits :)."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1543407159, "post_id": 53519033, "comment_id": 93906954, "body": "Having the <code>String</code> immutable is imposed by the caller of the function instead, by keeping it in an immutable binding. The links I posted above should help you clear this out."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 1, "last_activity_date": 1543424446, "last_edit_date": 1543424446, "creation_date": 1543406496, "answer_id": 53519033, "question_id": 53517344, "link": "https://stackoverflow.com/questions/53517344/rust-method-that-accepts-and-treats-any-kind-of-string-as-immutable-and-produces/53519033#53519033", "title": "Rust method that accepts and treats any kind of string as immutable and produces a new immutable string?", "body": "<blockquote>\n  <p>Let's say <code>foo</code> is a method that doubled whatever input you give it.</p>\n</blockquote>\n\n<p>A <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">trait</a> is a perfectly good way to do this, since it makes one common behavior:</p>\n\n<pre><code>trait Foo {\n    fn foo(&amp;self) -&gt; String;\n}\n</code></pre>\n\n<p>... applied to multiple types:</p>\n\n<pre><code>impl Foo for String {\n    fn foo(&amp;self) -&gt; String {\n        let mut out = self.clone();\n        out += self;\n        out\n    }\n}\n\nimpl&lt;'a&gt; Foo for &amp;'a str {\n    fn foo(&amp;self) -&gt; String {\n        let mut out = self.to_string();\n        out += self;\n        out\n    }\n}\n</code></pre>\n\n<p>Using:</p>\n\n<pre><code>let x = \"abc\".foo();\nassert_eq!(&amp;x, \"abcabc\");\nlet z = \"shep\".to_string().foo();\nassert_eq!(&amp;z, \"shepshep\");\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=efcd3c3008336b0b8d3bfedd7f969f7f\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The output is an owned string. Whether this value immutable or not, as typical in Rust, only comes at play at the calling site.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28587698/1233251\">What&#39;s the difference between placing &quot;mut&quot; before a variable name and after the &quot;:&quot;?</a></li>\n</ul>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "accepted_answer_id": 53519033, "answer_count": 2, "score": 0, "last_activity_date": 1543424446, "creation_date": 1543401087, "last_edit_date": 1543405446, "question_id": 53517344, "link": "https://stackoverflow.com/questions/53517344/rust-method-that-accepts-and-treats-any-kind-of-string-as-immutable-and-produces", "title": "Rust method that accepts and treats any kind of string as immutable and produces a new immutable string?", "body": "<p>I'm new to Rust. I want to write a method (trait implementation?) that takes any of a String or a string slice, treats it as immutable, and returns a new immutable string. Let's say <code>foo</code> is a method that doubled whatever input you give it:</p>\n\n<pre><code>let x = \"abc\".foo(); // =&gt; \"abcabc\"\nlet y = x.foo(); // =&gt; \"abcabcabcabc\"\nlet z = \"def\".to_string().foo(); // =&gt; \"defdef\"\n</code></pre>\n\n<p>In this case, I do not care about safety or performance, I just want my code to compile for a throwaway test. If the heap grows infinitely, so be it. If this requires two trait implementations, that's fine.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 1, "creation_date": 1543415307, "post_id": 53511591, "comment_id": 93912106, "body": "why &quot;without creating a new block&quot;? Creating a block by opening a <code>{</code> before the borrow and closing it after the <code>a.push(2)</code> is the (pre-NLL) way to signal to Rust where a reference lifetime is expected to end."}], "answers": [{"tags": [], "owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "is_accepted": false, "score": 5, "last_activity_date": 1543404351, "last_edit_date": 1543404351, "creation_date": 1543378753, "answer_id": 53512067, "question_id": 53511591, "link": "https://stackoverflow.com/questions/53511591/is-it-possible-to-unborrow-a-mutable-reference-in-rust/53512067#53512067", "title": "Is it possible to unborrow a mutable reference in rust?", "body": "<p>You can't. The fields <code>x</code> and <code>y</code> are (mutably) borrowed, which means <code>Point</code> is (mutably) borrowed. All this happens in the same scope, as a result <code>Point</code> will remain mutably borrowed until the end of the scope and you can't have a (immutable or mutable) borrow to the data after it is mutably borrowed. <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">Interior Mutability</a> is what you need to have a look at. </p>\n\n<p>Using <code>RefCell&lt;T&gt;</code> :</p>\n\n<pre><code>use std::cell::RefCell;\n\n#[derive(Debug)]\nstruct Point {\n    x: RefCell&lt;Vec&lt;i32&gt;&gt;,\n    y: i32,\n}\n\nfn main() {\n    let p = Point {\n        x: RefCell::new(vec![1]),\n        y: 7,\n    };\n\n    (*p.x.borrow_mut()).push(2);\n\n    println!(\"{:?}\", p);\n}\n</code></pre>\n\n<p><strong>Edit 1:</strong>\nYes, It is possible as per <a href=\"https://stackoverflow.com/a/53512187/5081997\">Yusuke NOJIMA's answer</a>. You will need to add the attribute <code>#![feature(nll)]</code> to your code , using rust nightly.</p>\n\n<pre><code>#![feature(nll)]\n\n#[derive(Debug)]\nstruct Point {\n    x: Vec&lt;i32&gt;,\n    y: i32,\n}\n\n...\n...\n</code></pre>\n\n<p>For more, please refer the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md\" rel=\"nofollow noreferrer\">NLL RFC</a></p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543389255, "post_id": 53512187, "comment_id": 93896997, "body": "You can enable NLL even when you are not using Rust 2018, by using the nightly compiler and using <code>#![feature(nll)]</code>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543455007, "post_id": 53512187, "comment_id": 93929547, "body": "@hellow You don&#39;t even need to enable NLL on nightly. It&#39;s on by default and falls back to the lexical lifetime if NLL fails."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1543476670, "post_id": 53512187, "comment_id": 93935340, "body": "@TimDiekmann that&#39;s not entirely true: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=41a9963fad7d54d9bb60ac40fa3b15e1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 175, "user_id": 5552868, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-a-A4sZLavEI/AAAAAAAAAAI/AAAAAAAAAJI/gixpRwdzIzc/photo.jpg?sz=128", "display_name": "Yusuke NOJIMA", "link": "https://stackoverflow.com/users/5552868/yusuke-nojima"}, "is_accepted": false, "score": 10, "last_activity_date": 1543379590, "creation_date": 1543379590, "answer_id": 53512187, "question_id": 53511591, "link": "https://stackoverflow.com/questions/53511591/is-it-possible-to-unborrow-a-mutable-reference-in-rust/53512187#53512187", "title": "Is it possible to unborrow a mutable reference in rust?", "body": "<p>Use Rust 2018.</p>\n\n<p>In Rust 2018, which has NLL, your example is valid.</p>\n"}], "owner": {"reputation": 563, "user_id": 10714010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d1de8ea4503b597aab9c31e5654c197?s=128&d=identicon&r=PG&f=1", "display_name": "user10714010", "link": "https://stackoverflow.com/users/10714010/user10714010"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 970, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1543404351, "creation_date": 1543375097, "question_id": 53511591, "link": "https://stackoverflow.com/questions/53511591/is-it-possible-to-unborrow-a-mutable-reference-in-rust", "title": "Is it possible to unborrow a mutable reference in rust?", "body": "<p>Here is an example</p>\n\n<pre><code>#[derive(Debug)]\nstruct Point {\n    x: Vec&lt;i32&gt;,\n    y: i32,\n}\n\nlet mut p = Point { x: vec![1], y: 7 };\n\n// borrow out mutable reference p to a and b\nlet Point { x: a, y: b } = &amp;mut p;\n\n// mutate a\na.push(2); \n// how do I get p back?\nprintln!(\"{:?}\", p);\n</code></pre>\n\n<p>Is there a way to unborrow the reference without creating a new block or abstract into function?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1543354290, "post_id": 53508310, "comment_id": 93886787, "body": "To clarify - no vector of slices can live as long as the slices it references because, by defintion, a vector must always be dropped before the slices inside it are?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1543354719, "post_id": 53508310, "comment_id": 93886997, "body": "@jonny Edited to clarify what I meant by &quot;no vector&quot;."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "edited": false, "score": 0, "creation_date": 1543354903, "post_id": 53508310, "comment_id": 93887084, "body": "@jonny Your slices have &#39;src lifetime but your vector is created&amp;dropped inside &quot;scan&quot; function, which is a block will be executed in shorter lifetime than &#39;src, you can see this by setting explicit lifetime on your function -&gt;  <code>fn scan_token&lt;&#39;src,&#39;b&gt;(chars: &amp;&#39;b [&amp;&#39;src str]) -&gt; Option&lt;&amp;&#39;src str&gt;</code> ( &#39;src &gt; &#39;b )"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1543354691, "last_edit_date": 1543354691, "creation_date": 1543353656, "answer_id": 53508310, "question_id": 53507627, "link": "https://stackoverflow.com/questions/53507627/cant-reference-a-slice-of-str-because-it-doesnt-live-long-enough-even-though/53508310#53508310", "title": "Can&#39;t reference a slice of &amp;str because it doesn&#39;t live long enough, even though what it references does", "body": "<p>Your problem can be reduced to this:</p>\n\n<pre><code>pub fn scan&lt;'a&gt;(source: &amp;'a str) -&gt; Option&lt;&amp;'a str&gt; {\n    let chars: Vec&lt;&amp;str&gt; = source.split(\"\").collect();\n    scan_token(&amp;chars)\n}\n\npub fn scan_token&lt;'a&gt;(chars: &amp;'a [&amp;'a str]) -&gt; Option&lt;&amp;'a str&gt; {\n    chars.last().cloned()\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `chars` does not live long enough\n --&gt; src/lib.rs:3:17\n  |\n3 |     scan_token(&amp;chars)\n  |                 ^^^^^ borrowed value does not live long enough\n4 | }\n  | - borrowed value only lives until here\n  |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 1:13...\n --&gt; src/lib.rs:1:13\n  |\n1 | pub fn scan&lt;'a&gt;(source: &amp;'a str) -&gt; Option&lt;&amp;'a str&gt; {\n  |             ^^\n</code></pre>\n\n<p>The <code>scan_token</code> function requires that the reference to the slice and the references inside the slice have the <strong>same</strong> lifetime: <code>&amp;'a [&amp;'a str]</code>. Since the <code>Vec</code> lives for a shorter period of time, that's what the unified lifetime must be. However, the lifetime of the vector isn't long enough to return the value.</p>\n\n<p>Remove the unneeded lifetime:</p>\n\n<pre><code>pub fn scan_token&lt;'a&gt;(chars: &amp;[&amp;'a str]) -&gt; Option&lt;&amp;'a str&gt;\n</code></pre>\n\n<hr>\n\n<p>Applying these changes to your complete code, you see the core problem is repeated in the definition of <code>Token</code>:</p>\n\n<pre><code>struct Token&lt;'src&gt; {\n    lexeme: &amp;'src [&amp;'src str],\n}\n</code></pre>\n\n<p>This construction makes it definitely not possible for your code to compile as-is \u2014 there is no vector of slices that lives as long as the slices. Your code is simply not possible in this form.</p>\n\n<p>You <em>could</em> pass in a mutable reference to a <code>Vec</code> to use as storage, but this would be pretty unusual and has plenty of downsides you'd hit when you try to do anything larger: </p>\n\n<pre><code>impl Scanner {\n    pub fn scan&lt;'src&gt;(&amp;mut self, source: &amp;'src str, chars: &amp;'src mut Vec&lt;&amp;'src str&gt;) -&gt; Vec&lt;Token&lt;'src&gt;&gt; {\n        // ...\n        chars.extend(source.graphemes(true));\n        // ...\n        while let Some(_) = chars.get(offset) {\n            // ...\n            let token = self.scan_token(chars);\n            // ...\n        }\n        // ...\n    }\n\n    // ...    \n}\n\nfn main() {\n    // ...\n    let mut chars = Vec::new();\n    let tokens = scanner.scan(\"abcd\", &amp;mut chars);\n    // ...\n}\n</code></pre>\n\n<p>You probably just want <code>Token</code> to be <code>Vec&lt;&amp;'src str&gt;</code></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31067031/155423\">Cannot borrow as mutable more than once at a time in one code - but can in another very similar</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n</ul>\n"}], "owner": {"reputation": 2858, "user_id": 4070218, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/VNOHi.gif?s=128&g=1", "display_name": "jonny", "link": "https://stackoverflow.com/users/4070218/jonny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 1, "accepted_answer_id": 53508310, "answer_count": 1, "score": 3, "last_activity_date": 1543354691, "creation_date": 1543350570, "last_edit_date": 1543353845, "question_id": 53507627, "link": "https://stackoverflow.com/questions/53507627/cant-reference-a-slice-of-str-because-it-doesnt-live-long-enough-even-though", "title": "Can&#39;t reference a slice of &amp;str because it doesn&#39;t live long enough, even though what it references does", "body": "<p>I'm implementing a scanner in Rust. I have a <code>scan</code> method on a <code>Scanner</code> struct which takes a string slice as the source code, breaks that string into a <code>Vec&lt;&amp;str&gt;</code> of UTF-8 characters (using the crate <a href=\"https://unicode-rs.github.io/unicode-segmentation/unicode_segmentation/index.html\" rel=\"nofollow noreferrer\"><code>unicode_segmentation</code></a>), and then delegates each char to a <code>scan_token</code> method which determines its lexical token and returns it.</p>\n\n<pre><code>extern crate unicode_segmentation;\nuse unicode_segmentation::UnicodeSegmentation;\n\nstruct Scanner {\n    start: usize,\n    current: usize,\n}\n\n#[derive(Debug)]\nstruct Token&lt;'src&gt; {\n    lexeme: &amp;'src [&amp;'src str],\n}\n\nimpl Scanner {\n    pub fn scan&lt;'src&gt;(&amp;mut self, source: &amp;'src str) -&gt; Vec&lt;Token&lt;'src&gt;&gt; {\n        let mut offset = 0;\n        let mut tokens = Vec::new();\n        // break up the code into UTF8 graphemes\n        let chars: Vec&lt;&amp;str&gt; = source.graphemes(true).collect();\n        while let Some(_) = chars.get(offset) {\n            // determine which token this grapheme represents\n            let token = self.scan_token(&amp;chars);\n            // push it to the tokens array\n            tokens.push(token);\n            offset += 1;\n        }\n        tokens\n    }\n\n    pub fn scan_token&lt;'src&gt;(&amp;mut self, chars: &amp;'src [&amp;'src str]) -&gt; Token&lt;'src&gt; {\n        // get this lexeme as some slice of the slice of chars\n        let lexeme = &amp;chars[self.start..self.current];\n        let token = Token { lexeme };\n        token\n    }\n}\n\nfn main() {\n    let mut scanner = Scanner {\n        start: 0,\n        current: 0,\n    };\n    let tokens = scanner.scan(\"abcd\");\n    println!(\"{:?}\", tokens);\n}\n</code></pre>\n\n<p>The error I receive is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `chars` does not live long enough\n  --&gt; src/main.rs:22:42\n   |\n22 |             let token = self.scan_token(&amp;chars);\n   |                                          ^^^^^ borrowed value does not live long enough\n...\n28 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'src as defined on the method body at 15:17...\n  --&gt; src/main.rs:15:17\n   |\n15 |     pub fn scan&lt;'src&gt;(&amp;mut self, source: &amp;'src str) -&gt; Vec&lt;Token&lt;'src&gt;&gt; {\n   |                 ^^^^\n</code></pre>\n\n<p>I suppose I understand the logic behind why this doesn't work: the error makes it clear that <code>chars</code> needs to live as long as lifetime <code>'src</code>, because <code>tokens</code> contains slice references into the data inside <code>chars</code>. </p>\n\n<p>What I don't understand is, since <code>chars</code> is just a slice of references into an object which <em>does</em> have a lifetime of <code>'src</code> (namely <code>source</code>), why can't <code>tokens</code> reference this data after <code>chars</code> has been dropped? I'm fairly new to low-level programming and I suppose my intuition regarding references + lifetimes might be somewhat broken.</p>\n"}, {"tags": ["websocket", "rust", "client"], "owner": {"reputation": 11, "user_id": 3003190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37c56cad77f3400742ff8428a858a587?s=128&d=identicon&r=PG", "display_name": "mjrt", "link": "https://stackoverflow.com/users/3003190/mjrt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1543351925, "creation_date": 1543334644, "last_edit_date": 1543334881, "question_id": 53503620, "link": "https://stackoverflow.com/questions/53503620/how-do-i-give-an-mpsc-receiver-to-a-thread", "title": "How do I give an mpsc Receiver to a thread?", "body": "<p>I am trying to give the <code>mpsc::Receiver</code> object of a channel to a thread, it will only be called by a websocket client structure.</p>\n\n<p>I've messed around with lifetimes, arcs, mutexes and I don't have enough knowledge about Rust to get it to work appropriately.</p>\n\n<p>Thanks for any help you can give.</p>\n\n<pre><code>extern crate ws;\nuse ws::util::Token;\nuse ws::{connect, Handler, Handshake, Message, Result};\nuse std::sync::mpsc::{Receiver, SyncSender, sync_channel};\nuse std::thread;\n\nfn main() {\n    let (tx1, rx1) = sync_channel(100);\n    let (tx2, rx2) = sync_channel(100);\n\n    // set up rx2 and tx1\n\n    let client = Client::new_thread(rx1, tx2);\n\n    client.join().unwrap();\n}\n\n\npub struct Client {\n    pub out: ws::Sender,\n    tx: SyncSender&lt;Message&gt;,\n    rx: Receiver&lt;Message&gt;,\n}\n\nimpl Client {\n    pub fn new_thread(rx: Receiver&lt;Message&gt;, tx: SyncSender&lt;Message&gt;) -&gt; thread::JoinHandle&lt;()&gt; {\n        thread::spawn(move || {\n            connect(\"ws://localhost:8000/ws/server/main\", |out| Client {\n                out,\n                tx: tx.clone(),\n                rx: rx,\n            }).unwrap()\n        })\n    }\n}\n\nimpl Handler for Client {\n    fn on_open(&amp;mut self, _: Handshake) -&gt; Result&lt;()&gt; {\n        self.out.timeout(250, Token(1))\n    }\n    fn on_message(&amp;mut self, msg: Message) -&gt; Result&lt;()&gt; {\n        self.tx.send(msg).unwrap();\n        Ok(())\n    }\n    fn on_timeout(&amp;mut self, event: Token) -&gt; Result&lt;()&gt; {\n        //let msg = self.rx.recv()\n        //self.out.send(msg)\n        self.out.timeout(250, event)\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured outer variable in an `FnMut` closure                                                                         \n  --&gt; src/main.rs:31:21                                                                                                                                \n   |                                                                                                                                                   \n26 |     pub fn new_thread(rx: Receiver&lt;Message&gt;, tx: SyncSender&lt;Message&gt;) -&gt; thread::JoinHandle&lt;()&gt; {                                                 \n   |                       -- captured outer variable                                                                                                  \n...                                                                                                                                                    \n31 |                 rx: rx,                                                                                                                           \n   |                     ^^ cannot move out of captured outer variable in an `FnMut` closure\n</code></pre>\n"}, {"tags": ["string", "rust", "command-line-arguments", "child-process"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1543317813, "post_id": 53498415, "comment_id": 93866269, "body": "Or you can use the <a href=\"https://crates.io/crates/shell-words\" rel=\"nofollow noreferrer\">shell-words</a> crate to do this for you\u2026"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1543318978, "post_id": 53498415, "comment_id": 93866904, "body": "@Jmb shell-words takes a vector of strings, not a string. I was specifically interested in a quick hacky way to pass in a string from command line and have it &quot;just run&quot; so I can get on with it. Can downvoters post a better solution to my own problem?"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1543324091, "post_id": 53498415, "comment_id": 93869903, "body": "@Jmb, consider posting an alternative answer? Ideally don&#39;t want too require an additional dependency, but looking at the split function it&#39;s non-trivial. std::env::args() seems to deal with platform-specific arguments via sys::args::args(), but not sure if it can be used."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1543324098, "post_id": 53498415, "comment_id": 93869907, "body": "<a href=\"https://docs.rs/shell-words/0.1.0/shell_words/fn.split.html\" rel=\"nofollow noreferrer\"><code>shell_words::split</code></a> takes a <code>&amp;str</code>, not a vector of strings."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1543335471, "post_id": 53498415, "comment_id": 93877172, "body": "You can at least <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=04c8c711f66770ce1735efb0d8dd6195\" rel=\"nofollow noreferrer\">avoid creating the vector</a>."}], "tags": [], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "is_accepted": false, "score": -5, "last_activity_date": 1543317200, "creation_date": 1543317200, "answer_id": 53498415, "question_id": 53498414, "link": "https://stackoverflow.com/questions/53498414/how-do-i-pass-a-single-string-with-multiple-arguments-to-stdprocesscommand/53498415#53498415", "title": "How do I pass a single string with multiple arguments to std::process::Command?", "body": "<p>Implementation which does not support quoted arguments (but easy to add):</p>\n\n<pre><code>fn sh(command: &amp;str) -&gt; std::io::Result&lt;std::process::Output&gt; {\n    let mut the_args = command.split(' '); // todo: support quoted strings\n    let first: &amp;str = the_args.next().unwrap();\n    let rest: Vec&lt;&amp;str&gt; = the_args.collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n    std::process::Command::new(first).args(rest).output()\n}\n\nfn main() {\n    let output = sh(\"ls -la\").unwrap(); \n    let s = String::from_utf8_lossy(&amp;output.stdout).to_string();\n    println!(\"{:?}\", s);\n}\n</code></pre>\n\n<p>You have to do quite a bit of song and dance with iterators and string conversions. This tripped me up for a few days. I hope someone can chime in with a basic parser that handles quoted argument strings :).</p>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543410989, "post_id": 53518384, "comment_id": 93909247, "body": "I really like how the syntax highlighting is the best example how hard proper escaping of strings is. The <code>assert_eq!</code> lines do not look right"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 5, "last_activity_date": 1543420072, "last_edit_date": 1543420072, "creation_date": 1543404408, "answer_id": 53518384, "question_id": 53498414, "link": "https://stackoverflow.com/questions/53498414/how-do-i-pass-a-single-string-with-multiple-arguments-to-stdprocesscommand/53518384#53518384", "title": "How do I pass a single string with multiple arguments to std::process::Command?", "body": "<p>What shells do when splitting a command-line string into arguments is far from trivial, especially when you want to handle things like quoting. For example, your code should pass the following assertions:</p>\n\n<pre><code>assert_eq!(split(r#\"\"foo\\\"bar\"\"#), vec![\"foo\\\"bar\"]);\nassert_eq!(split(r#\"\"foo\"#), vec![\"\\\"foo\"]);          // Or error\n</code></pre>\n\n<p>Unless you think simply splitting on whitespace is enough for your use-case, you should really use a crate like <a href=\"https://crates.io/crates/shell-words\" rel=\"nofollow noreferrer\"><code>shell-words</code></a> or <a href=\"https://crates.io/crates/shlex\" rel=\"nofollow noreferrer\"><code>shlex</code></a>. <code>shlex</code> presents the advantage that it can return an iterator, thus avoiding unnecessary allocations, but on the other hand it makes it easy to miss the error in the second test above:</p>\n\n<pre><code>extern crate shell_words;\nextern crate shlex;\n\nuse shell_words::split;\nuse shlex::Shlex;\n\nfn main() {\n    assert_eq!(split(r#\"a b\"#).unwrap(), vec![\"a\", \"b\"]);\n    let mut lex = Shlex::new(r#\"a b\"#);\n    assert_eq!(lex.by_ref().collect::&lt;Vec&lt;_&gt;&gt;(), vec![\"a\", \"b\"]);\n    assert!(!lex.had_error);    // \u2190 Don't forget this check!\n\n    assert_eq!(split(r#\"a \"b c\"\"#).unwrap(), vec![\"a\", \"b c\"]);\n    let mut lex = Shlex::new(r#\"a \"b c\"\"#);\n    assert_eq!(lex.by_ref().collect::&lt;Vec&lt;_&gt;&gt;(), vec![\"a\", \"b c\"]);\n    assert!(!lex.had_error);    // \u2190 Don't forget this check!\n\n    assert_eq!(split(r#\"\"foo\\\"bar\"\"#).unwrap(), vec![\"foo\\\"bar\"]);\n    let mut lex = Shlex::new(r#\"\"foo\\\"bar\"\"#);\n    assert_eq!(lex.by_ref().collect::&lt;Vec&lt;_&gt;&gt;(), vec![\"foo\\\"bar\"]);\n    assert!(!lex.had_error);    // \u2190 Don't forget this check!\n\n    assert!(split(r#\"\"foo\"#).is_err());\n    // assert_eq!(Shlex::new(r#\"\"foo\"#).collect::&lt;Vec&lt;_&gt;&gt;(), vec![\"\\\"foo\"]);\n\n    let mut lex = Shlex::new(r#\"\"foo\"#);\n    lex.by_ref().for_each (drop);\n    assert!(lex.had_error);     // \u2190 Don't forget this check!\n}\n</code></pre>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 983, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1543420072, "creation_date": 1543317200, "last_edit_date": 1543335293, "question_id": 53498414, "link": "https://stackoverflow.com/questions/53498414/how-do-i-pass-a-single-string-with-multiple-arguments-to-stdprocesscommand", "title": "How do I pass a single string with multiple arguments to std::process::Command?", "body": "<p>Rust's <code>std::process::Command</code> type demands that process arguments be passed in individually via <code>.arg(\"-arg1\").arg(\"-arg2\")</code> or as a vector of strings via <code>.args(&amp;[\"-arg1\", \"-arg2\"])</code>. How do you split a string into a vector that can be passed as arguments?</p>\n"}, {"tags": ["rust", "cross-compiling", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 165, "user_id": 10513998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-SaMfZY3Hguw/AAAAAAAAAAI/AAAAAAAAAc0/DOepCxGzosQ/photo.jpg?sz=128", "display_name": "Alexander Lanin", "link": "https://stackoverflow.com/users/10513998/alexander-lanin"}, "edited": false, "score": 0, "creation_date": 1543330664, "post_id": 53496910, "comment_id": 93874051, "body": "Thank you. It was helpful. but I got stuck with the next step. error: failed to run custom build command for <code>openssl-sys v0.9.39</code> Problem with x86_64 build I solved by installing <code>libssl-dev</code> But installing libssl-dev:i386 did not solve error on crosscompile. btw it is not Ubuntu i have. Debian stretch"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 165, "user_id": 10513998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-SaMfZY3Hguw/AAAAAAAAAAI/AAAAAAAAAc0/DOepCxGzosQ/photo.jpg?sz=128", "display_name": "Alexander Lanin", "link": "https://stackoverflow.com/users/10513998/alexander-lanin"}, "edited": false, "score": 0, "creation_date": 1543330906, "post_id": 53496910, "comment_id": 93874195, "body": "The full error message would be helpful (and maybe worth another question)."}, {"owner": {"reputation": 165, "user_id": 10513998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-SaMfZY3Hguw/AAAAAAAAAAI/AAAAAAAAAc0/DOepCxGzosQ/photo.jpg?sz=128", "display_name": "Alexander Lanin", "link": "https://stackoverflow.com/users/10513998/alexander-lanin"}, "edited": false, "score": 0, "creation_date": 1543333658, "post_id": 53496910, "comment_id": 93875926, "body": "Problem resolved by pointing OPENSSL_DIR to right place. Yes, i should make a new question for it.  Thank you"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 2, "last_activity_date": 1543333986, "last_edit_date": 1543333986, "creation_date": 1543312320, "answer_id": 53496910, "question_id": 53496847, "link": "https://stackoverflow.com/questions/53496847/rust-compile-x86-library-on-x86-64-machine/53496910#53496910", "title": "rust compile x86 library on x86_64 machine", "body": "<p>Instead of changing your toolchain, you have to add the target to your current toolchain (make sure to switch back to your original toolchain first).</p>\n\n<pre><code>$ rustup target install i686-unknown-linux-gnu\n$ cargo build --target=i686-unknown-linux-gnu\n</code></pre>\n\n<p>Of course, you need to install the 32-bit libraries on your system as well, e.g. on ubuntu you install them by</p>\n\n<pre><code>$ sudo apt install gcc-multilib\n</code></pre>\n\n<p>(for more information about that see <a href=\"https://stackoverflow.com/questions/22355436/how-to-compile-32-bit-apps-on-64-bit-ubuntu\">How to Compile 32-bit Apps on 64-bit Ubuntu?</a>)</p>\n"}], "owner": {"reputation": 165, "user_id": 10513998, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-SaMfZY3Hguw/AAAAAAAAAAI/AAAAAAAAAc0/DOepCxGzosQ/photo.jpg?sz=128", "display_name": "Alexander Lanin", "link": "https://stackoverflow.com/users/10513998/alexander-lanin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2650, "favorite_count": 1, "accepted_answer_id": 53496910, "answer_count": 1, "score": 1, "last_activity_date": 1543333986, "creation_date": 1543312134, "last_edit_date": 1543312900, "question_id": 53496847, "link": "https://stackoverflow.com/questions/53496847/rust-compile-x86-library-on-x86-64-machine", "title": "rust compile x86 library on x86_64 machine", "body": "<p>I have ubuntu x86_64 container and <code>cargo build</code> goes well.\nBut i need to build x86 library version too.\nAs far as I understand i need to add i686 toolchain and target.</p>\n\n<pre><code>rustup target add i686-unknown-linux-gnu done successful\n</code></pre>\n\n\n\n<pre><code>rustup toolchain install stable-i686-unknown-linux-gnu finished with error\n</code></pre>\n\n\n\n<pre><code>$ rustup toolchain install stable-i686-unknown-linux-gnu\ninfo: syncing channel updates for 'stable-i686-unknown-linux-gnu'\ninfo: latest update on 2018-11-08, rust version 1.30.1 (1433507eb 2018-11-07)\ninfo: downloading component 'rustc'\ninfo: downloading component 'rust-std'\ninfo: downloading component 'cargo'\ninfo: downloading component 'rust-docs'\ninfo: installing component 'rustc'\ninfo: installing component 'rust-std'\ninfo: installing component 'cargo'\ninfo: installing component 'rust-docs'\n\n  stable-i686-unknown-linux-gnu installed - (error reading rustc version)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>$ rustup  default stable-i686\ninfo: using existing install for 'stable-i686-unknown-linux-gnu'\ninfo: default toolchain set to 'stable-i686-unknown-linux-gnu'\n\n  stable-i686-unknown-linux-gnu unchanged - (error reading rustc version)\n</code></pre>\n\n<p>Do I missed something or took wrong approach? </p>\n"}, {"tags": ["collections", "rust", "iterator"], "comments": [{"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1543307700, "post_id": 53494845, "comment_id": 93860583, "body": "@Stargateur clarified question and added the real offending line. The irony is I tried to post a minimal example, but by misunderstanding the error, I left out the offending line. Hopefully this will be useful to others."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1543308242, "post_id": 53494845, "comment_id": 93860835, "body": "@PetrusTheron the downvotes are here, because you are not giving us the real code to reproduce your problem. Use the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">playground</a> to write the code, that gives us exactly the error you encountered. Then we will be able to help you."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1543308496, "post_id": 53494845, "comment_id": 93860956, "body": "If you understood the error and think it&#39;s worth keeping the question in SO to help other users, please write the solution and explanation in a proper answer, not as an edit of the question. Right now it&#39;s messy"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1543310924, "post_id": 53494845, "comment_id": 93862291, "body": "@PetrusTheron please take a look at the edit E_net4 did and try to provide all the crucial information that are now in the question in the future by yourself. It helps us to help you!"}], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1543311209, "post_id": 53495452, "comment_id": 93862452, "body": "Might be worth noting that <code>Result</code>&#39;s implementation of <code>IntoIterator</code> discards the errors. You can take advantage of <code>Result</code>&#39;s implementation of <code>FromIterator</code> instead to raise the error on <code>collect</code> time."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 2, "last_activity_date": 1543308558, "last_edit_date": 1543308558, "creation_date": 1543307144, "answer_id": 53495452, "question_id": 53494845, "link": "https://stackoverflow.com/questions/53494845/how-to-call-to-socket-addrs-on-a-collection-of-addresses/53495452#53495452", "title": "How to call to_socket_addrs on a collection of addresses?", "body": "<p><a href=\"https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html\" rel=\"nofollow noreferrer\"><code>to_socket_addrs</code></a> returns a <code>Result</code> containing an iterator. <code>Result</code> itself implements <code>IntoIterator</code>, so <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a> flattens the result, but not the inner iterator, you need to do that in an extra step:</p>\n\n<pre><code>use std::net::ToSocketAddrs;\n\nfn main() {\n    let addrs = [\"127.0.0.1:8889\", \"127.0.0.1:0\"]\n        .iter()\n        .flat_map(|a| a.to_socket_addrs())\n        .flatten()\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    println!(\"addrs = {:?}!\", addrs);\n}\n</code></pre>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1543335175, "creation_date": 1543304368, "last_edit_date": 1543335175, "question_id": 53494845, "link": "https://stackoverflow.com/questions/53494845/how-to-call-to-socket-addrs-on-a-collection-of-addresses", "title": "How to call to_socket_addrs on a collection of addresses?", "body": "<p>How do I call <code>to_socket_addrs()</code> on an array or vector in Rust? The following code does not compile:</p>\n\n<pre><code>extern crate ws;\nuse std::net::ToSocketAddrs;\n\nfn main() {\n    let addrs = [\"127.0.0.1:8889\", \"127.0.0.1:0\"]\n        .iter()\n        .flat_map(|a| a.to_socket_addrs());\n    ws::listen(addrs, |out| move |msg| out.send(msg));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::iter::FlatMap&lt;std::slice::Iter&lt;'_, &amp;str&gt;, std::result::Result&lt;std::vec::IntoIter&lt;std::net::SocketAddr&gt;, std::io::Error&gt;, [closure@src/main.rs:7:19: 7:42]&gt;: std::net::ToSocketAddrs` is not satisfied\n --&gt; src/main.rs:8:5\n  |\n8 |     ws::listen(addrs, |out| move |msg| out.send(msg));\n  |     ^^^^^^^^^^ the trait `std::net::ToSocketAddrs` is not implemented for `std::iter::FlatMap&lt;std::slice::Iter&lt;'_, &amp;str&gt;, std::result::Result&lt;std::vec::IntoIter&lt;std::net::SocketAddr&gt;, std::io::Error&gt;, [closure@src/main.rs:7:19: 7:42]&gt;`\n  |\n  = note: required by `ws::listen`\n</code></pre>\n\n<p>It took me two hours to understand the error because \"trait <code>X</code> is not implemented for <code>std::iter::FlatMap</code>\" reads like the problem is caused by <code>flat_map</code>, instead of the demands of <code>ws::listen</code>.</p>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543302449, "post_id": 53493996, "comment_id": 93858294, "body": "It comes from nom\u2019s parser combinator crate"}, {"owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543303349, "post_id": 53493996, "comment_id": 93858686, "body": "The error is unexpected because String::from returns a String but the compiler is telling me it\u2019s a Result"}], "answers": [{"tags": [], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "is_accepted": true, "score": 3, "last_activity_date": 1543335108, "last_edit_date": 1543335108, "creation_date": 1543306639, "answer_id": 53495341, "question_id": 53493996, "link": "https://stackoverflow.com/questions/53493996/why-does-converting-a-nom-s-completestr-to-a-string-in-the-macro-named-return-a/53495341#53495341", "title": "Why does converting a nom\u2019s CompleteStr to a String in the macro named! return a Result?", "body": "<p><code>map_res!</code> expects a function that returns a <code>Result</code> as the second argument, which is why <code>map_res!</code> is named like this. You can also see it in its \"type\" in nom's doc:</p>\n\n<pre><code>map_res!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Result&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;\n</code></pre>\n\n<p>However, <code>String::from</code> does not return a result; so <code>String::from(s)</code> is the wrong type for <code>map_res!</code>. Instead, you should use the regular <code>map!</code>, which has this \"type\" <code>map!(I -&gt; IResult&lt;I,O&gt;, O -&gt; P) =&gt; I -&gt; IResult&lt;I, P&gt;</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate nom;\n\nuse nom::types::CompleteStr;\nuse nom::alpha;\n\nnamed!(letter_cs&lt;CompleteStr,String&gt;,\n    map!(\n        alpha,\n        |CompleteStr(s)| String::from(s)\n       )\n);\n</code></pre>\n"}], "owner": {"reputation": 1823, "user_id": 868540, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/82d71d3e4512f325a6a0c5b3eef16719?s=128&d=identicon&r=PG", "display_name": "Pumphouse", "link": "https://stackoverflow.com/users/868540/pumphouse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "accepted_answer_id": 53495341, "answer_count": 1, "score": 2, "last_activity_date": 1543335108, "creation_date": 1543300343, "last_edit_date": 1543335059, "question_id": 53493996, "link": "https://stackoverflow.com/questions/53493996/why-does-converting-a-nom-s-completestr-to-a-string-in-the-macro-named-return-a", "title": "Why does converting a nom\u2019s CompleteStr to a String in the macro named! return a Result?", "body": "<p>When I try to convert nom\u2019s <code>CompleteStr</code> to a <code>String</code> in <code>named!</code>, I get an error saying it\u2019s returning a <code>Result</code>.</p>\n\n<pre><code>named!(letter_cs&lt;CompleteStr,String&gt;,\n    map_res!(\n        alpha,\n        |CompleteStr(s)| String::from(s)\n       )\n); \n</code></pre>\n\n<p>will throw the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types                                                                                                                          \n  --&gt; src/year2015/day_7.rs:16:1                                                                                                                        \n   |                                                                                                                                                    \n16 | / named!(letter_cs&lt;CompleteStr,String&gt;,                                                                                                            \n17 | |     map_res!(                                                                                                                                    \n18 | |         alpha,                                                                                                                                   \n19 | |         |CompleteStr(s)| String::from(s)                                                                                                         \n20 | |          )                                                                                                                                       \n21 | | );                                                                                                                                               \n   | |__^ expected struct `std::string::String`, found enum `std::result::Result`                                                                       \n   |                                                                                                                                                    \n   = note: expected type `std::string::String`                                                                                                          \n              found type `std::result::Result&lt;_, _&gt;`                                                                                                    \n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info) \n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1543298363, "post_id": 53492774, "comment_id": 93856747, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=5f3af2a3d532ece1d8684bd1fae522ed\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> for exemple"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543302578, "post_id": 53492774, "comment_id": 93858358, "body": "Please use rustfmt to format your code properly next time."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1543295176, "creation_date": 1543295176, "answer_id": 53493079, "question_id": 53492774, "link": "https://stackoverflow.com/questions/53492774/nested-looping-prints-strange-results/53493079#53493079", "title": "nested looping prints strange results", "body": "<blockquote>\n  <p>Shouldn't this be printing out x:1 - x:10 10 times?</p>\n</blockquote>\n\n<p>Why would it?  You never set <code>x</code> back to zero after the inner loop is done.</p>\n\n<p>Besides which, this sort of iteration should be done with a <code>for</code> loop:</p>\n\n<pre><code>for x in 0..10 { ... }\n</code></pre>\n\n<blockquote>\n  <p>[...] when I looped back over the vectors using a nested for loops for each row, it counted out 60 indexes before exiting out.</p>\n</blockquote>\n\n<p>I don't know; you didn't post that code, and I can't see any reason it would do that.</p>\n"}], "owner": {"reputation": 179, "user_id": 2008301, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/9c2cfe5c1e45ed7d5052c4e8a81085d1?s=128&d=identicon&r=PG", "display_name": "Mike F", "link": "https://stackoverflow.com/users/2008301/mike-f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 53493079, "answer_count": 1, "score": -2, "last_activity_date": 1543302603, "creation_date": 1543292960, "last_edit_date": 1543302603, "question_id": 53492774, "link": "https://stackoverflow.com/questions/53492774/nested-looping-prints-strange-results", "title": "nested looping prints strange results", "body": "<p>Was trying to check a 2d vector and noticed some weird behavior that I haven't been able to find a explanation for.</p>\n\n<pre><code>fn main() {\n    let mut main_loop = vec![];\n    let mut x = 0;\n    let board_x = 10;\n    let mut y = 0;\n    let board_y = 10;\n\n    while y &lt; board_y {\n        let mut row = vec![];\n        while x &lt; board_x {\n            let v = random::&lt;bool&gt;();\n            println!(\"x:{}\", x);\n            row.push(v);\n            x = x + 1;\n        }\n        println!(\"y:{}\", y);\n        main_loop.push(row);\n        y = y + 1;\n    }\n}\n</code></pre>\n\n<p>This only prints</p>\n\n<pre><code>x:0\nx:1\nx:2\nx:3\nx:4\nx:5\nx:6\nx:7\nx:8\nx:9\ny:0\ny:1\ny:2\ny:3\ny:4\ny:5\ny:6\ny:7\ny:8\ny:9\n</code></pre>\n\n<p>Shouldn't this be printing out x:1 - x:10 10 times? Also what was even stranger was that when I looped back over the vectors using a nested for loops for each row, it counted out 60 indexes before exiting out. What am I missing?  </p>\n"}, {"tags": ["parsing", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1543280179, "post_id": 53490988, "comment_id": 93852698, "body": "serde is probably what you are looking for."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1543326449, "post_id": 53490988, "comment_id": 93871423, "body": "You may be interested in <a href=\"https://github.com/ron-rs/ron\" rel=\"nofollow noreferrer\">RON</a>, a data format that is something of a middle ground between JSON and what <code>Debug</code> outputs, and does support deserialization through serde."}, {"owner": {"reputation": 12759, "user_id": 2263631, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/WC0BS.jpg?s=128&g=1", "display_name": "Script47", "link": "https://stackoverflow.com/users/2263631/script47"}, "edited": false, "score": 0, "creation_date": 1543329348, "post_id": 53490988, "comment_id": 93873215, "body": "<a href=\"https://meta.stackoverflow.com/questions/377141/why-was-this-specific-question-about-rust-generics-put-on-hold\">This question is being discussed on meta.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1543327448, "last_edit_date": 1543327448, "creation_date": 1543326187, "answer_id": 53501097, "question_id": 53490988, "link": "https://stackoverflow.com/questions/53490988/is-it-possible-to-derive-a-parser-for-an-arbitrary-type-that-parses-the-correspo/53501097#53501097", "title": "Is it possible to derive a parser for an arbitrary type that parses the corresponding Debug format?", "body": "<p>No, there is no such feature. <code>Debug</code> is intended for human/programmer consumption, not for machines. </p>\n\n<p>There's no guarantee that the <code>Debug</code> output is even in a parseable format or that it contains the complete data of a type. </p>\n\n<p>I recommend using <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">Serde</a> instead, paired with an existing defined serialization format of your choice. </p>\n\n<p>If you wanted to, you could define your <em>own</em> <code>derive</code> attributes that implement <code>Debug</code> and <code>FromStr</code> by calling into Serde. </p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 1, "accepted_answer_id": 53501097, "answer_count": 1, "score": 2, "last_activity_date": 1543332335, "creation_date": 1543277713, "last_edit_date": 1543332335, "question_id": 53490988, "link": "https://stackoverflow.com/questions/53490988/is-it-possible-to-derive-a-parser-for-an-arbitrary-type-that-parses-the-correspo", "title": "Is it possible to derive a parser for an arbitrary type that parses the corresponding Debug format?", "body": "<p>In Haskell, it is possible, as a language feature, to <a href=\"https://doc.rust-lang.org/rust-by-example/trait/derive.html\" rel=\"nofollow noreferrer\">derive</a> a parser from a string to an arbitrary datatype: that's called the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Text-Read.html\" rel=\"nofollow noreferrer\"><code>Read</code> class</a>. Is it possible to do so in Rust? That is, given an arbitrary <code>enum</code> such as:</p>\n\n<pre><code>#[derive(Debug)]\nenum Foo {\n    A { x: u32, s: String },\n    B { v: Vec&lt;u8&gt; },\n}\n</code></pre>\n\n<p>and, given that Rust includes the <code>Debug</code> trait as a language feature that serializes an arbitrary datatype, is it possible to also automatically generate its corresponding <code>Parse</code> trait?</p>\n\n<p>In other words, is there a default Rust feature that allows me to derive a <code>parse(&amp;str) -&gt; Foo</code> function such that, for any string <code>s</code> either <code>parse(&amp;s) == None</code> or <code>format!(\"{:?}\", parse(&amp;s).unwrap()) == s</code>?  </p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543265891, "post_id": 53488328, "comment_id": 93847782, "body": "@Shepmaster good remark: in hindsight the question should have been &quot;[...] to implement serde::Serialize&quot;, which amounts to half an answer already..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1543266012, "post_id": 53488328, "comment_id": 93847841, "body": "I was hoping that was what you meant. I don&#39;t see any harm in having a more accurate title to catch future searchers."}], "answers": [{"comments": [{"owner": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "edited": false, "score": 0, "creation_date": 1543265090, "post_id": 53488654, "comment_id": 93847407, "body": "How come the playground error message is clearer? Newer (unstable?) version of Rust/compiler? I am on stable-x86_64-pc-windows-msvc, which uses rustc 1.30.1"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "edited": false, "score": 0, "creation_date": 1543265933, "post_id": 53488654, "comment_id": 93847810, "body": "@dlw I assume it&#39;s the <i>minimal</i> aspect. The playground is also using 1.30.1 (at the moment), but this example only has two crates in use."}, {"owner": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "edited": false, "score": 0, "creation_date": 1543266565, "post_id": 53488654, "comment_id": 93848080, "body": "Could you expand on the &quot;object-safety reasons&quot;? Why would I want to borrow from the unnamed object instead of passing ownership to <code>log()</code>? [unnamed object resulting from calls like <code>logger.info(FoundBar{ _bar: bar })</code>]"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "edited": false, "score": 0, "creation_date": 1543266793, "post_id": 53488654, "comment_id": 93848179, "body": "@dlw <i>Could you expand on</i> \u2014 that&#39;s what all 4 of the linked Q&amp;A are about; I didn&#39;t want to further duplicate existing information. <i>Why would I want to borrow</i> \u2014 that&#39;s up to you. Your original code took a reference trait object (<code>&amp;Log</code>), so switching to a reference to a generic type was the smallest change. You could also pick <code>impl Log</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1543264546, "creation_date": 1543264546, "answer_id": 53488654, "question_id": 53488328, "link": "https://stackoverflow.com/questions/53488328/how-to-specify-that-all-implementers-of-a-trait-must-also-implement-serialize/53488654#53488654", "title": "How to specify that all implementers of a trait must also implement Serialize?", "body": "<p>If you create a <a href=\"/help/mcve\">MCVE</a> of <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=90c020a162197f66f2803f6b8a1ef07c\" rel=\"nofollow noreferrer\">your problem on the playground</a>, you get a more accurate error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Self: serde::Serialize` is not satisfied\n --&gt; src/lib.rs:6:9\n  |\n6 |         serde_json::to_string(&amp;self).unwrap()\n  |         ^^^^^^^^^^^^^^^^^^^^^ the trait `serde::Serialize` is not implemented for `Self`\n  |\n  = help: consider adding a `where Self: serde::Serialize` bound\n  = note: required because of the requirements on the impl of `serde::Serialize` for `&amp;Self`\n  = note: required by `serde_json::ser::to_string`\n</code></pre>\n\n<p>Following the suggestion, but using the idiomatic supertrait syntax, answers your question:</p>\n\n<pre><code>trait Log: serde::Serialize {\n    fn to_log(&amp;self) -&gt; String {\n        serde_json::to_string(&amp;self).unwrap()\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>You'll need to change your log function for object-safety reasons:</p>\n\n<pre><code>fn log(log: &amp;impl Log) {\n    println!(\"serialized = {}\", log.to_log());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45116984/155423\">The trait cannot be made into an object</a></li>\n<li><a href=\"https://stackoverflow.com/q/39412626/155423\">Unable to create a polymorphic type because the trait cannot be made into an object</a></li>\n<li><a href=\"https://stackoverflow.com/q/50021897/155423\">How to implement `serde::Serialize` for a boxed trait object?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "is_accepted": false, "score": 1, "last_activity_date": 1543264700, "last_edit_date": 1543264700, "creation_date": 1543264669, "answer_id": 53488685, "question_id": 53488328, "link": "https://stackoverflow.com/questions/53488328/how-to-specify-that-all-implementers-of-a-trait-must-also-implement-serialize/53488685#53488685", "title": "How to specify that all implementers of a trait must also implement Serialize?", "body": "<p>Using trait inheritance works, but using the right Serde trait, not the compiler-suggested one:</p>\n\n<pre><code>trait Log: serde::Serialize {\n    fn to_log(&amp;self) -&gt; String {\n        serde_json::to_string(&amp;self).unwrap()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 304, "user_id": 1199670, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Etsm8.png?s=128&g=1", "display_name": "dlw", "link": "https://stackoverflow.com/users/1199670/dlw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 479, "favorite_count": 0, "accepted_answer_id": 53488654, "answer_count": 2, "score": 4, "last_activity_date": 1543265978, "creation_date": 1543263071, "last_edit_date": 1543265978, "question_id": 53488328, "link": "https://stackoverflow.com/questions/53488328/how-to-specify-that-all-implementers-of-a-trait-must-also-implement-serialize", "title": "How to specify that all implementers of a trait must also implement Serialize?", "body": "<p>I am curious to see how much boilerplate one can save through built-in reflection.</p>\n\n<h2>A little background</h2>\n\n<p>My idea behind structured logging is to use various small tailored types to separate content from representation. Instead of unstructured <code>logger.info(\"Found a bar with {} foos\", bar.foo)</code> one uses something like <code>logger.info(FoundBar{ _bar: bar })</code></p>\n\n<h2>My Rust-ish approach</h2>\n\n<ul>\n<li>define a <code>Log</code> trait</li>\n<li>provide a default implementation that calls the Serde machinery to serialize the type (to JSON in this example)</li>\n<li>define loggable types easily by letting them \"inherit\" the default implementation</li>\n<li>profit</li>\n</ul>\n\n<p>Define the trait, providing a default impl:</p>\n\n<pre><code>trait Log {\n    fn to_log(&amp;self) -&gt; String {\n        serde_json::to_string(&amp;self).unwrap()\n    }\n}\n</code></pre>\n\n<p>(RLS is already drawing angry red squiggles, but bear with me)</p>\n\n<p>Define a simple type to be logged:</p>\n\n<pre><code>#[derive(Serialize)]\nstruct Message {\n    msg: String,\n}\n</code></pre>\n\n<p>and let it use the default implementation:</p>\n\n<pre><code>impl Log for Message {}\n</code></pre>\n\n<p>and finally the polymorphic logging function defined in terms of the trait:</p>\n\n<pre><code>fn log(log: &amp;Log) {\n    println!(\"serialized = {}\", log.to_log());\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Self: _IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not satisfied\n --&gt; src\\main.rs:8:9\n  |\n8 |         serde_json::to_string(&amp;self).unwrap()\n  |         ^^^^^^^^^^^^^^^^^^^^^ the trait `_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not implemented for `Self`\n  |\n  = help: consider adding a `where Self: _IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` bound\n  = note: required because of the requirements on the impl of `_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` for `&amp;Self`\n  = note: required by `serde_json::ser::to_string`\n</code></pre>\n\n<p>Adding the <code>where Self</code> suggestion to my trait function only produces different errors (<code>error[E0433]: failed to resolve. Use of undeclared type or module _IMPL_DESERIALIZE_FOR_Message</code>), but apart from that it seems like a Bad Idea(TM) to have this implementation detail of Serde leak into my code.</p>\n\n<p>How do I portably constrain my trait (using <code>where</code>?) to only apply to types that have the correct derive? Even better, can I \"inject\" the derive functionality into types using the trait?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543251530, "post_id": 53485574, "comment_id": 93841252, "body": "So you want to use <code>arg</code> after collecting the members into <code>s</code>? Else I would say use <code>into_iter</code> and it&#39;s all done."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1543311699, "last_edit_date": 1543311699, "creation_date": 1543251895, "answer_id": 53485887, "question_id": 53485574, "link": "https://stackoverflow.com/questions/53485574/borrowed-value-does-not-live-long-enough-when-iterating-over-a-generic-value-wit/53485887#53485887", "title": "Borrowed value does not live long enough when iterating over a generic value with a lifetime on the function body", "body": "<p>The constraint <code>String: From&lt;&amp;'a T&gt;</code>, with emphasis on the function's lifetime parameter <code>'a</code>, would allow you to convert a reference to <code>T</code> to a <code>String</code>. However, the reference to the elements obtained from the iterator <em>is more restrictive</em> than <code>'a</code> (hence, they do not live long enough).</p>\n\n<p>Since the conversion is supposed to work fine for references of any lifetime, you may replace the constraint with a higher ranked trait bound (HRTB):</p>\n\n<pre><code>fn func&lt;T&gt;(arg: Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    for&lt;'a&gt; String: From&lt;&amp;'a T&gt;,\n{\n    let s: Vec&lt;String&gt; = arg.iter().map(|s| String::from(s)).collect();\n    do_something_else(arg);\n}\n</code></pre>\n\n<p>The use of <code>From</code> here to obtain an owned string is also not something I've seen in the wild. Perhaps you would be interested in the <code>Display</code> trait, so that you can call <code>to_string()</code>:</p>\n\n<pre><code>fn func&lt;T&gt;(arg: Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    T: Display,\n{\n    let _: Vec&lt;_&gt; = arg.iter().map(|s| s.to_string()).collect();\n    // ...\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44343166/155423\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 118, "user_id": 4532565, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_apC5d5zS8U/AAAAAAAAAAI/AAAAAAAAGB0/EVfOGaEjVts/photo.jpg?sz=128", "display_name": "nngg", "link": "https://stackoverflow.com/users/4532565/nngg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 0, "accepted_answer_id": 53485887, "answer_count": 1, "score": 4, "last_activity_date": 1543311699, "creation_date": 1543250720, "last_edit_date": 1543252420, "question_id": 53485574, "link": "https://stackoverflow.com/questions/53485574/borrowed-value-does-not-live-long-enough-when-iterating-over-a-generic-value-wit", "title": "Borrowed value does not live long enough when iterating over a generic value with a lifetime on the function body", "body": "<pre><code>fn func&lt;'a, T&gt;(arg: Vec&lt;Box&lt;T&gt;&gt;)\nwhere\n    String: From&lt;&amp;'a T&gt;,\n    T: 'a,\n{\n    let s: Vec&lt;String&gt; = arg.iter().map(|s| String::from(s)).collect();\n    do_something_else(arg);\n}\n\nfn do_something_else&lt;T&gt;(arg: Vec&lt;Box&lt;T&gt;&gt;) {}\n</code></pre>\n\n<p>The compiler complains that <code>arg</code> does not live long enough. Why though?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `arg` does not live long enough\n --&gt; src/lib.rs:6:26\n  |\n6 |     let s: Vec&lt;String&gt; = arg.iter().map(|s| String::from(s)).collect();\n  |                          ^^^ borrowed value does not live long enough\n7 |     do_something_else(arg);\n8 | }\n  | - borrowed value only lives until here\n  |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 1:9...\n --&gt; src/lib.rs:1:9\n  |\n1 | fn func&lt;'a, T&gt;(arg: Vec&lt;Box&lt;T&gt;&gt;)\n  |         ^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2897, "user_id": 2665591, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/17ire.png?s=128&g=1", "display_name": "DanielSank", "link": "https://stackoverflow.com/users/2665591/danielsank"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543251978, "post_id": 53485369, "comment_id": 93841462, "body": "@Shepmaster I&#39;d like to point out that the edited title contains words that may not be familiar to those who stand to benefit from this post."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543252235, "post_id": 53485369, "comment_id": 93841587, "body": "Which ones? While it&#39;s useful to have wide question titles for searching purposes, following that to the logical end results in &quot;code doesn&#39;t work, why&quot;-esque titles. The current title has all of the same words that your original title had, but now clearly distinguishes it from the existing question. If people search for &quot;access struct fields in a trait default method&quot; and don&#39;t click on a result with some extra words, there doesn&#39;t seem to be a lot of help we can give them."}, {"owner": {"reputation": 2897, "user_id": 2665591, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/17ire.png?s=128&g=1", "display_name": "DanielSank", "link": "https://stackoverflow.com/users/2665591/danielsank"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543252289, "post_id": 53485369, "comment_id": 93841616, "body": "@Shepmaster I didn&#39;t say the new title was worse."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1543251175, "last_edit_date": 1543251175, "creation_date": 1543250869, "answer_id": 53485609, "question_id": 53485369, "link": "https://stackoverflow.com/questions/53485369/how-do-i-use-a-borrowmut-supertrait-to-access-struct-fields-in-a-trait-default-m/53485609#53485609", "title": "How do I use a BorrowMut supertrait to access struct fields in a trait default method?", "body": "<blockquote>\n  <p>the answer was basically \"no\"</p>\n</blockquote>\n\n<p>The answer actually says (emphasis mine):</p>\n\n<blockquote>\n  <p>A default implementation can only use methods that are defined on the trait <strong>or in a super trait</strong>.</p>\n</blockquote>\n\n<p>That's what your snippet does:</p>\n\n<pre><code>trait Trait: BorrowMut&lt;Fields&gt;\n</code></pre>\n\n<hr>\n\n<p>To make it work, follow the advice from the post you are referencing:</p>\n\n<blockquote>\n  <p>all types which choose to implement <code>BorrowMut&lt;Foo&gt;</code></p>\n</blockquote>\n\n<p>Thus, you need to implement the trait for each of your types. I switched to <code>Borrow</code> because you don't need mutability here: </p>\n\n<pre><code>use std::borrow::Borrow;\n\nstruct Fields {\n    name: String,\n}\n\ntrait Trait: Borrow&lt;Fields&gt; {\n    fn show_name(&amp;self) {\n        let fields: &amp;Fields = self.borrow();\n        println!(\"{}\", fields.name);\n    }\n}\n\nstruct Foo {\n    fields: Fields,\n    things_and_stuff: usize,\n}\n\nimpl Borrow&lt;Fields&gt; for Foo {\n    fn borrow(&amp;self) -&gt; &amp;Fields {\n        &amp;self.fields\n    }\n}\n\nstruct Bar {\n    fields: Fields,\n    other_field: i32,\n}\n\nimpl Borrow&lt;Fields&gt; for Bar {\n    fn borrow(&amp;self) -&gt; &amp;Fields {\n        &amp;self.fields\n    }\n}\n\nimpl&lt;T&gt; Trait for T where T: Borrow&lt;Fields&gt; {}\n</code></pre>\n\n<p>I'm almost certain you won't like this solution because it</p>\n\n<blockquote>\n  <p>doesn't fix the problem of having duplicated code because both implementations [...] will be the same</p>\n</blockquote>\n\n<p>You may prefer to write a macro if your goal is to reduce the number of duplicate characters in your code.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29256519/155423\">I implemented a trait for another trait but cannot call methods from both traits</a></li>\n<li><a href=\"https://stackoverflow.com/q/28219730/155423\">Is it possible to access struct fields from within a trait?</a></li>\n</ul>\n"}], "owner": {"reputation": 2897, "user_id": 2665591, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/17ire.png?s=128&g=1", "display_name": "DanielSank", "link": "https://stackoverflow.com/users/2665591/danielsank"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "accepted_answer_id": 53485609, "answer_count": 1, "score": 1, "last_activity_date": 1543252248, "creation_date": 1543249936, "last_edit_date": 1543252248, "question_id": 53485369, "link": "https://stackoverflow.com/questions/53485369/how-do-i-use-a-borrowmut-supertrait-to-access-struct-fields-in-a-trait-default-m", "title": "How do I use a BorrowMut supertrait to access struct fields in a trait default method?", "body": "<p>Consider the following Rust code</p>\n\n<pre><code>trait Trait {\n    fn show_name(&amp;self) {}\n}\n\nstruct Foo {\n    name: String,\n    things_and_stuff: usize,\n}\n\nimpl Trait for Foo {\n    fn show_name(&amp;self) {\n        println!(\"{}\", self.name);\n    }\n}\n\nstruct Bar {\n    name: String,\n    other_field: i32,\n}\n\nimpl Trait for Bar {\n    fn show_name(&amp;self) {\n        println!(\"{}\", self.name);\n    }\n}\n</code></pre>\n\n<p>The two <code>show_name</code> functions have exactly the same code. It would be convenient if I could put that method as a default method on <code>Trait</code>, but that's not possible because traits cannot access struct fields.</p>\n\n<p>We could declare a <code>get_name(&amp;self) -&gt; &amp;str</code> method on <code>Trait</code> and implement it on <code>Foo</code> and <code>Bar</code>, but that doesn't fix the problem of having duplicated code because both implementations of <code>get_name</code> will be the same.</p>\n\n<p>It would be nice to avoid the code duplication. <a href=\"https://stackoverflow.com/questions/28219730/\">Another question</a> has already asked if field access is possible in traits, and the answer was basically \"no\".\nHowever, I found <a href=\"https://internals.rust-lang.org/t/fields-in-traits/6933/28\" rel=\"nofollow noreferrer\">a comment</a> in the rust-internals forum suggesting that it's <em>already</em> possible. Here's the code:</p>\n\n<pre><code>struct Fields {\n    name: String,\n}\n\ntrait Trait: BorrowMut&lt;Fields&gt; {\n    // methods go here\n}\n\nimpl&lt;T&gt; Trait for T where T: BorrowMut&lt;Fields&gt; {}\n</code></pre>\n\n<p>Presumably there's a way to make a type <code>T</code> be <code>BorrowMut&lt;Fields&gt;</code> and use that to allow <code>Trait</code> to access <code>Fields</code>'s fields, but so far I'm not sure how that would work.</p>\n\n<p>How is the code snippet shown above supposed to solve the problem of getting field access in traits?</p>\n\n<hr>\n\n<p>I know there are discussions of adding field access in traits to the language (<a href=\"https://internals.rust-lang.org/t/fields-in-traits/6933\" rel=\"nofollow noreferrer\">rust-internals</a>, <a href=\"https://github.com/nikomatsakis/fields-in-traits-rfc/blob/master/0000-fields-in-traits.md\" rel=\"nofollow noreferrer\">RFC</a>, <a href=\"https://github.com/rust-lang/rfcs/pull/1546\" rel=\"nofollow noreferrer\">another RFC</a>), but I'd like to know what's possible now.</p>\n"}, {"tags": ["unit-testing", "debugging", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1543234877, "post_id": 53480972, "comment_id": 93831582, "body": "@PeterHall The problem is that <code>cargo</code> does not hide stdout as in your link above in multi thread test case."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1543235022, "post_id": 53480972, "comment_id": 93831659, "body": "Oh I see. You can workaround it by implementing your own <code>print</code>, which writes to a shared buffer, and only print from the buffer in the main thread. Could be overly complex though.."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1543239013, "post_id": 53481726, "comment_id": 93833944, "body": "But is this bug in <code>cargo</code> and I should reports the issue, or this intented behaviour and should use your hack always when for some reason I need multiply threads in my test?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1543239329, "post_id": 53481726, "comment_id": 93834153, "body": "I&#39;m not sure if it&#39;s technically a bug. But it might be seen that way, and there is no harm in reporting it."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1543244390, "post_id": 53481726, "comment_id": 93837267, "body": "Thank your for answer and reply, I submit issue here: <a href=\"https://github.com/rust-lang/cargo/issues/6350\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/6350</a> and will wait one day before accept answer, may be somebody suggest something else."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1543237766, "last_edit_date": 1543237766, "creation_date": 1543237342, "answer_id": 53481726, "question_id": 53480972, "link": "https://stackoverflow.com/questions/53480972/how-do-i-suppress-output-from-multiple-threads-when-running-cargo-test/53481726#53481726", "title": "How do I suppress output from multiple threads when running cargo test?", "body": "<p>Here is a quick-and-dirty workaround.</p>\n\n<p>It works by sending messages to a receiver owned by a struct in the main thread. The receiver prints all of the accumulated messages when it is dropped - this is important so that panics caused by failed assertions don't prevent the printing.</p>\n\n<pre><code>use std::sync::mpsc::{channel, Sender, Receiver};\n\nstruct TestPrinter {\n    receiver: Receiver&lt;String&gt;,\n    sender: Sender&lt;String&gt;,\n}\n\nimpl TestPrinter {\n    fn new() -&gt; TestPrinter {\n        let (sender, receiver) = channel();\n        TestPrinter { receiver, sender }\n    }\n\n    fn sender(&amp;self) -&gt; Sender&lt;String&gt; {\n        self.sender.clone()\n    }\n}\n\nimpl Drop for TestPrinter {\n    fn drop(&amp;mut self) {\n        while let Some(v) = self.receiver.try_recv().ok() {\n            println!(\"later: {}\", v);\n        }\n    }\n}\n</code></pre>\n\n<p>And a convenience macro so it feels mostly like calling <code>println!</code>:</p>\n\n<pre><code>macro_rules! myprint {\n    ($send: expr, $($arg:tt)*) =&gt; { \n        (*&amp;$send).send(format!($($arg)*));\n     };\n}  \n</code></pre>\n\n<p>In order to send messages for printing, you have get a <code>sender</code> for each thread:</p>\n\n<pre><code>#[test]\nfn multi_thread_test() {\n    use std::thread;\n\n    let mut threads = vec![];\n    let printer = TestPrinter::new();\n\n    for _ in 0..100 {\n        let sender = printer.sender();\n        let t = thread::spawn(move || {\n            myprint!(sender, \"from thread\");\n        });\n        threads.push(t);\n    }\n\n    for thread in threads {\n        thread.join().unwrap();\n    }\n}\n</code></pre>\n\n<p>The actual printing happens when <code>printer</code> goes out of scope. It's in the main thread so it won't print during successful tests unless <code>--nocapture</code> is specified.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 53481726, "answer_count": 1, "score": 2, "last_activity_date": 1546955781, "creation_date": 1543234658, "last_edit_date": 1546955781, "question_id": 53480972, "link": "https://stackoverflow.com/questions/53480972/how-do-i-suppress-output-from-multiple-threads-when-running-cargo-test", "title": "How do I suppress output from multiple threads when running cargo test?", "body": "<p>If I execute the below testcases with <code>cargo test</code>, the output of <code>one_thread_test</code> will be suppressed as stated in the documentation.</p>\n\n<p>However the output from <code>multi_thread_test</code> will appear on stdout. Is it possible to match the behavior of single- and multi-threaded testcases?</p>\n\n<pre><code>#[test]\nfn one_thread_test() {\n    println!(\"A\");\n    println!(\"B\");\n}\n\n#[test]\nfn multi_thread_test() {\n    use std::thread;\n\n    let mut threads = vec![];\n    for _ in 0..100 {\n        let t = thread::spawn(move || {\n            println!(\"from thread\");\n        });\n        threads.push(t);\n    }\n    for thread in threads {\n        thread.join().unwrap();\n    }\n}\n</code></pre>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1543233647, "post_id": 53479802, "comment_id": 93830927, "body": "<i>&quot;But if I change the signature of swap_array to <code>fn swap_array&lt;T&gt;(x: &amp;mut [&amp;[T; LNGTH]])</code>&quot;</i> \u2014 that&#39;s what it already is. Did you mean to say <code>fn swap_array&lt;T&gt;(x: &amp;mut [&amp;[T]])</code>?"}, {"owner": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1543236992, "post_id": 53479802, "comment_id": 93832693, "body": "@PeterHall Thank you for pointing out to this typo. I fixed it now."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1543238270, "post_id": 53479802, "comment_id": 93833431, "body": "Note that in C the situation is similar: a two dimensional array <code>int x[5][10]</code> is not convertible to <code>int**</code> but to <code>int (*)[10]</code>."}, {"owner": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1543242253, "post_id": 53479802, "comment_id": 93836052, "body": "Thanks, @rodrigo. Your comment is very elucidating!"}], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 1, "last_activity_date": 1543249183, "last_edit_date": 1543249183, "creation_date": 1543232375, "answer_id": 53480320, "question_id": 53479802, "link": "https://stackoverflow.com/questions/53479802/pass-array-of-arrays-or-slice-of-slices-in-rust/53480320#53480320", "title": "Pass array of arrays (or slice of slices) in Rust", "body": "<p>Here is a slice-of-slices version:</p>\n\n<pre><code>const LEN: usize = 5;\n\nfn swap_array&lt;T&gt;(x: &amp;mut [&amp;[T]]) {\n    let temp = x[1];\n    x[1] = x[0];\n    x[0] = temp;\n}\n\nfn main() {\n    let x_array: [i32; LEN] = [5, 2, 8, 9, 1];\n    let x_other: [i32; LEN] = [6, 7, 6, 7, 6];\n    let mut y_array: [&amp;[i32]; 2] = [&amp;x_array, &amp;x_other];\n    println!(\"before : {:?}\", y_array);\n    swap_array(&amp;mut y_array);\n    println!(\"after  : {:?}\", y_array);\n}\n</code></pre>\n\n<p>You have to change the formal argument to slice of slices, and the elements of <code>y_array</code> must be slices, too (the latter is basically what the error message said).</p>\n"}], "owner": {"reputation": 1837, "user_id": 613016, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/o3Ywp.jpg?s=128&g=1", "display_name": "Pantelis Sopasakis", "link": "https://stackoverflow.com/users/613016/pantelis-sopasakis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1072, "favorite_count": 1, "accepted_answer_id": 53480320, "answer_count": 1, "score": 1, "last_activity_date": 1543249183, "creation_date": 1543230408, "last_edit_date": 1543236957, "question_id": 53479802, "link": "https://stackoverflow.com/questions/53479802/pass-array-of-arrays-or-slice-of-slices-in-rust", "title": "Pass array of arrays (or slice of slices) in Rust", "body": "<p>I need to pass a reference to an array of references to arrays (or slice of slices) to the following function in Rust</p>\n\n<pre><code>const LNGTH: usize = 5;\n\nfn swap_array&lt;T&gt;(x: &amp;mut [&amp;[T; LNGTH]]) {\n    let temp = x[1];\n    x[1] = x[0];\n    x[0] = temp;\n}\n</code></pre>\n\n<p>The problem is that it seems I have to specify an array length for the \"inner\" arrays (here: <code>LNGTH</code>).</p>\n\n<p>So, the following code works fine:</p>\n\n<pre><code>fn main() {\n    let x_array: [i32; LNGTH] = [5,2,8,9,1];\n    let x_other: [i32; LNGTH] = [6,7,6,7,6];        \n    let mut y_array: [&amp;[i32; LNGTH]; 2] = [&amp;x_array, &amp;x_other];\n    println!(\"before : {:?}\", y_array);\n    swap_array(&amp;mut y_array);\n    println!(\"after  : {:?}\", y_array);    \n} \n</code></pre>\n\n<p>But if I change the signature of <code>swap_array</code> to <code>fn swap_array&lt;T&gt;(x: &amp;mut [&amp;[T]])</code>, I get the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:14:16\n   |\n14 |     swap_array(&amp;mut y_array[..]);\n   |                ^^^^^^^^^^^^^^^^ expected slice, found array of 5 elements\n   |\n   = note: expected type `&amp;mut [&amp;[_]]`\n              found type `&amp;mut [&amp;[i32; 5]]`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: Could not compile `tut_arrays`.\n</code></pre>\n\n<p>From the perspective of C, I would like to have a function that accepts arguments of type <code>T**</code>. A corresponding function in C would look like that</p>\n\n<pre><code>void swap_arrays(my_type ** x) {\n    my_type* temp = x[1];\n    x[1] = x[0];\n    x[0] = temp;\n}\n</code></pre>\n"}, {"tags": ["visual-studio", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543229731, "post_id": 53479270, "comment_id": 93828945, "body": "Have you verified, that your link.exe is in your <code>PATH</code>? <a href=\"https://users.rust-lang.org/t/problems-with-installing-rust-on-windows/9349\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/problems-with-installing-rust-on-windo&zwnj;&#8203;ws/&hellip;</a>"}, {"owner": {"reputation": 52804, "user_id": 419956, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ab00b6c461dcf852df10c077a0a2b4eb?s=128&d=identicon&r=PG", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/419956/jeroen"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543230615, "post_id": 53479270, "comment_id": 93829393, "body": "No, I had not, but have just checked and &quot;The term &#39;link.exe&#39; is not recognized...&quot; if I try to invoke it."}], "answers": [{"tags": [], "owner": {"reputation": 6100, "user_id": 5984, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0d75735ed1574bba97c5f58dfc0aae52?s=128&d=identicon&r=PG", "display_name": "idursun", "link": "https://stackoverflow.com/users/5984/idursun"}, "is_accepted": false, "score": 3, "last_activity_date": 1543241003, "last_edit_date": 1543241003, "creation_date": 1543239249, "answer_id": 53482272, "question_id": 53479270, "link": "https://stackoverflow.com/questions/53479270/which-individual-component-from-the-visual-studio-installer-is-suitable-for-ru/53482272#53482272", "title": "Which &quot;Individual Component&quot; from the Visual Studio installer is suitable for Rust development?", "body": "<p>Installing any \"VC++ toolset\" should be enough to get <code>cargo run</code> to link properly. It <a href=\"https://github.com/rust-lang/rustup.rs/issues/1462\" rel=\"nofollow noreferrer\">looks like the minimum dependencies are</a>:</p>\n\n<blockquote>\n  <p>Required dependencies are <code>VC++ 2017 version 15.7 v14.14 latest v141 tools</code> and <code>Windows 10 SDK (10.0.17134.0)</code></p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1543244198, "last_edit_date": 1543244198, "creation_date": 1543243255, "answer_id": 53483481, "question_id": 53479270, "link": "https://stackoverflow.com/questions/53479270/which-individual-component-from-the-visual-studio-installer-is-suitable-for-ru/53483481#53483481", "title": "Which &quot;Individual Component&quot; from the Visual Studio installer is suitable for Rust development?", "body": "<p>Note that VC does <strong>not</strong> add its tools to the path (so that you can have multiple versions of the MS toolchain installed in parallel). Instead it adds entries to your Start menu like: \"VC++ 2017 version 15.9 v14.16 command prompt\" (not sure of the name), that allow you to start a command prompt with the proper path. This should also be possible from a VS toolbar button or menu entry.</p>\n\n<p>You can't start <code>cargo</code> from a generic command prompt, you need to open the prompt with one of the above solutions.</p>\n\n<p>Alternatively, you need to run <code>c:\\path\\to\\your\\VS\\installation\\VCVARS.BAT</code> inside your prompt to set the correct path before running <code>cargo</code>.</p>\n"}], "owner": {"reputation": 52804, "user_id": 419956, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ab00b6c461dcf852df10c077a0a2b4eb?s=128&d=identicon&r=PG", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/419956/jeroen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 841, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1543244198, "creation_date": 1543228570, "last_edit_date": 1543229676, "question_id": 53479270, "link": "https://stackoverflow.com/questions/53479270/which-individual-component-from-the-visual-studio-installer-is-suitable-for-ru", "title": "Which &quot;Individual Component&quot; from the Visual Studio installer is suitable for Rust development?", "body": "<p>I have a fully updated install of Visual Studio Enterprise 2017 (currently 15.9.2) on my machine, and I want to do some Rust coding. The Rust installer tells me to install \"Visual C++\" build tooling, but I can't seem to figure out which one is needed.</p>\n\n<p>That is, I tried installing \"VC++ 2017 version 15.9 v14.16\", but when I do <code>cargo run</code> on my hello world application, it halts with a message:</p>\n\n<blockquote>\n  <p>error: linker <code>link.exe</code> not found</p>\n</blockquote>\n\n<p>I don't want to go rampant and install <em>all</em> the C++ components in the installer, just the one I need. I'd prefer to install it as part of the Visual Studio installer, if possible.</p>\n\n<p><strong>Which \"Individual Component\" in the Visual Studio installer do I need for Rust?</strong></p>\n\n<p>Here's what's currently checked:</p>\n\n<p><a href=\"https://i.stack.imgur.com/O87LK.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/O87LK.png\" alt=\"C++ components\"></a></p>\n\n<p><a href=\"https://i.stack.imgur.com/GSh6H.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/GSh6H.png\" alt=\"C++ activities\"></a></p>\n\n<p>As a workaround, I was advised to run <code>rustup default stable-x86_64-pc-windows-gnu</code> which at least allows me to run the hello world example. (Or perhaps this is in fact a proper <em>solution</em> even?)</p>\n"}, {"tags": ["process", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543224924, "post_id": 53477846, "comment_id": 93826333, "body": "Does Windows really kill all child processes as soon as the parent process dies? It&#39;s been two decades since I did software development on Windows, but I don&#39;t remember this behaviour."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543225066, "post_id": 53477846, "comment_id": 93826396, "body": "@SvenMarnach I don&#39;t know for Windows as I don&#39;t have any box available right now. My requirement is to have it work on windows, linux and macos. I&#39;ll remove the OS tags (for a time maybe) to make it clear this isn&#39;t a Windows specific question."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543225580, "post_id": 53477846, "comment_id": 93826649, "body": "I missed there was also a Linux tag. Neither Linux nor Windows kill the child process when the parent process exits."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543225588, "post_id": 53477846, "comment_id": 93826656, "body": "Currently looking at the nix package which contains a execv function"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543225626, "post_id": 53477846, "comment_id": 93826675, "body": "@SvenMarnach You can test it on linux: nvim stops as soon as the parent stops."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543225788, "post_id": 53477846, "comment_id": 93826759, "body": "I just tried it on my Liniux box with <code>sleep 10</code>. The sleep process did not die when the parent exited. There must be something else going on."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1543230331, "post_id": 53477846, "comment_id": 93829249, "body": "@SvenMarnach because <code>process::spawn()</code> is setting up some pipes between parent and child. Have a <code>while true; echo foo; sleep 1; done</code> as the child, and you should see the failure."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543231125, "post_id": 53477846, "comment_id": 93829676, "body": "(Or maybe read from stdin; either way, the root cause is a SIGPIPE.)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543235553, "post_id": 53477846, "comment_id": 93831942, "body": "@FlorianMargaine The loop writing to stdout continues running even after the parent process died. Reading from stdin indeed fails, because stdin is closed. The child process does not seem to receive SIGPIPE though (and it shouldn&#39;t, since it is only sent to processes <i>writing</i> to a pipe)."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543236093, "post_id": 53477846, "comment_id": 93832229, "body": "@SvenMarnach a process reading from a dead pipe will also get a SIGPIPE."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543236460, "post_id": 53477846, "comment_id": 93832425, "body": "However, something&#39;s funny there. Launching <code>vim</code> indeed exits with <code>Vim: Error reading input, exiting...</code>. But launching with <code>strace</code> makes it work... grmbl."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543236824, "post_id": 53477846, "comment_id": 93832604, "body": "Even more fun: it looks like reading from stdin throws an EIO, not an EPIPE or EBADF. It looks related to the fact that stdin is a pty... digging more."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543237235, "post_id": 53477846, "comment_id": 93832824, "body": "@FlorianMargaine I don&#39;t think this is related to pipes at all (and for what it&#39;s worth, I don&#39;t think reading can ever lead to <code>SIGPIPE</code>). I just looked that up, and the <code>man 2 read</code> does not mention <code>EPIPE</code> as a possible error code; <code>man 7 pipe</code> states &quot;If  all  file descriptors referring to the read end of a pipe have been closed, then a write(2) will cause a SIGPIPE signal to be generated for the calling process.&quot; My understanding is that closing the write end of a pipe will simply close all readers, so you can never get SIGPIPE on the reading end."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543237528, "post_id": 53477846, "comment_id": 93833006, "body": "My bad. I just did a test and it indeed just ends with an EOF. Still looking at pty documentation..."}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543239039, "post_id": 53477846, "comment_id": 93833964, "body": "<code>read(2)</code> man page has the answer: <code>I&#47;O error. This will happen for example when the process is in a background process group, tries to read from its controlling terminal, and either it is ignoring or blocking SIGTTIN or its process group is orphaned.</code>"}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 1, "creation_date": 1543241442, "post_id": 53477846, "comment_id": 93835524, "body": "Which explains both why an <code>os.setsid()</code> in the beginning the process works, and why it&#39;s not reproducible with <code>strace</code> (stdin is not a pty)"}, {"owner": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543241645, "post_id": 53477846, "comment_id": 93835631, "body": "(PS: thanks for the discussion, I learnt a couple of things today!)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 50657, "user_id": 851498, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/3cRvS.png?s=128&g=1", "display_name": "Florian Margaine", "link": "https://stackoverflow.com/users/851498/florian-margaine"}, "edited": false, "score": 0, "creation_date": 1543242217, "post_id": 53477846, "comment_id": 93836025, "body": "@FlorianMargaine Thanks for the investigation \u2013 I didn&#39;t know about this behaviour as well."}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543226849, "post_id": 53478775, "comment_id": 93827349, "body": "If this is confirmed to be the right solution, and after confirmation it was already working on Windows, then I&#39;ll clean this fast written solution up."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543227551, "post_id": 53478775, "comment_id": 93827775, "body": "This does something different: the <code>execv()</code> function does not return on success, and the current process is replaced by the new process. Note that <code>Command::spawn()</code> also uses <code>execv()</code> under the hood, but only after <code>fork()</code>ing a child process. I recommend looking <a href=\"https://unix.stackexchange.com/a/158736/8070\">into this answer</a> to understand possible root causes of the behaviour you saw."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543227591, "post_id": 53478775, "comment_id": 93827808, "body": "@SvenMarnach My understanding is that avoiding <code>fork</code> was the goal"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543227752, "post_id": 53478775, "comment_id": 93827905, "body": "Then simply waiting for the subprocess would also work, and avoid platform-specific code."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1548247992, "last_edit_date": 1548247992, "creation_date": 1543226798, "answer_id": 53478775, "question_id": 53477846, "link": "https://stackoverflow.com/questions/53477846/start-another-program-then-quit/53478775#53478775", "title": "Start another program then quit", "body": "<p>Here's a working solution on linux, using a wrapping ot the <a href=\"https://linux.die.net/man/3/execv\" rel=\"nofollow noreferrer\"><code>execv</code></a> function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nuse nix::unistd;\nuse std::ffi::CString;\n\npub fn executev(args: &amp;[&amp;str]) {\n    let mut args: Vec&lt;CString&gt; = args.iter()\n        .map(|t| CString::new(*t).expect(\"not a proper CString\"))\n        .collect();\n    unistd::execv(\n        &amp;args[0],\n        &amp;args,\n    ).expect(\"failed\");\n}\n\nfn main() {\n    executev(&amp;[\"/usr/bin/nvim\", \"/home/dys/todo.txt\"]);\n}\n</code></pre>\n\n<p><strong>Note:</strong> This <em>does</em> start another program and quit but be wary that replacing the current process implies you properly closed open resources. If you can accept having your program kept alive, you probably want to <code>wait</code> as suggested by Sven Marnach.</p>\n"}, {"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543231239, "post_id": 53479765, "comment_id": 93829731, "body": "&quot;and what it does when run on my Linux machine&quot; Did you try with a real terminal program like vim and not just a sleep ? Your explanations are interesting but I don&#39;t see how you solve the problem."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543232919, "post_id": 53479765, "comment_id": 93830571, "body": "@DenysS&#233;guret I don&#39;t have &quot;nvim&quot; installed, so I didn&#39;t try that, by I tried <code>bash -c &#39;while true; do echo a; sleep 2; done&#39;</code>, and it still keeps running in the background."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543233788, "post_id": 53479765, "comment_id": 93831010, "body": "@DenysS&#233;guret I also suggested a simple solution that behaves similar to your answer in the comments to your answer \u2013 specifically, simply wait for the subprocess instead of immediately exiting. I did not include this in this answer, since it is in direct conflict with the requirements in the question (which asks that the caller program exits immediately)."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543238305, "post_id": 53479765, "comment_id": 93833449, "body": "thanks for the answer. An accept or not will only come after some more studies."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543418928, "post_id": 53479765, "comment_id": 93914456, "body": "@DenysS&#233;guret I adapted the answer to account for the findings in the comments."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1543422803, "post_id": 53479765, "comment_id": 93917036, "body": "The wording doesn&#39;t really respect the intent of the question but it&#39;s good as is (and <i>does</i> answer). Thanks."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1543418906, "last_edit_date": 1543418906, "creation_date": 1543230249, "answer_id": 53479765, "question_id": 53477846, "link": "https://stackoverflow.com/questions/53477846/start-another-program-then-quit/53479765#53479765", "title": "Start another program then quit", "body": "<p>After further discussion, we identified the actual problem: The program you are launching is supposed to stay in the foreground, so it can read from the terminal (which background processes can't do on Unix).</p>\n\n<p>There are two ways to achieve this. The first, and easiest, is to wait for the child process before the parent process exits:</p>\n\n<pre><code>use std::process::{Command, ExitStatus};\nuse std::io::Result;\n\npub fn execute(exe: &amp;str, args: &amp;[&amp;str]) -&gt; Result&lt;ExitStatus&gt; {\n    Command::new(exe).args(args).spawn()?.wait()\n}\n</code></pre>\n\n<p>This ensures the processes (parent and child) stay in the foreground, since the shell is waiting for the parent process, so the child process can read from the terminal.</p>\n\n<p>If for some reason you can't afford the parent process to linger on while the child process is running, you need platform-dependent code. On Unix, you can use some syscall from the <code>exec()</code> familiy to replace the image of the parent process with the image of the child process:</p>\n\n<pre><code>use std::process::Command;\nuse std::os::unix::process::CommandExt;\nuse std::io::Error;\n\npub fn execute(exe: &amp;str, args: &amp;[&amp;str]) -&gt; Error {\n    Command::new(exe).args(args).exec()\n}\n</code></pre>\n\n<p>The function only returns if there is an error. Otherwise, the process image is replaced by the new image. From the viewpoint of the shell, it's still the same process, so the shell will wait for the command you launched to finish.</p>\n\n<p>The advantages of the second approach seem slim. It does not work on Windows, since Windows does not support <code>exec()</code> and friends. You will have one less process around while running the command, but the resource usage of that process should be small in practice \u2013 it does not use any CPU, and the memory pages can be swapped out if necessary.</p>\n\n<h3>Original Answer</h3>\n\n<blockquote>\n  <p>From a program A written in rust, I want to start a program B, have A end, and have B normally run just like if it was manually launched from the same shell just after termination of A.</p>\n</blockquote>\n\n<p>This is more or less what your code is already doing. There are a few differences to a process launched directly from the shell on Unix systems, though:</p>\n\n<ul>\n<li>The new process will not be included in the shell's job list, so you can't use the shell's job control commands like <code>bg</code> and <code>fg</code>.</li>\n<li>The new process will run in the background, and the shell will immediately show a prompt after the Rust programs exits.</li>\n</ul>\n\n<blockquote>\n  <p>This fails because <em>nvim</em> is launched as a child and is killed as soon as the calling program stops.</p>\n</blockquote>\n\n<p>This is not true, neither for <a href=\"https://unix.stackexchange.com/a/158736/8070\">Unix</a> nor for <a href=\"https://docs.microsoft.com/en-us/windows/desktop/procthread/terminating-a-process#how-processes-are-terminated\" rel=\"nofollow noreferrer\">Windows</a>.</p>\n\n<blockquote>\n  <p>How can I write <em>execute</em> so the caller program immediately stops and lets <em>nvim</em> (or another program) properly run (even without any windowing system)?</p>\n</blockquote>\n\n<p>This should be exactly what your Rust code is doing (and what it does when run on my Linux machine). The code in your answer, on the other hand, does something else: It uses <code>execv()</code> to <em>replace</em> the Rust process with nvim. In effect, the process does <em>not</em> immediately stop, and the shell remaind blocked until nvim exits.</p>\n"}], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1227, "favorite_count": 1, "accepted_answer_id": 53479765, "answer_count": 2, "score": 12, "last_activity_date": 1548247992, "creation_date": 1543223630, "last_edit_date": 1543250739, "question_id": 53477846, "link": "https://stackoverflow.com/questions/53477846/start-another-program-then-quit", "title": "Start another program then quit", "body": "<p>From a program A written in rust, I want to start a program B, have A end, and have B normally run just like if it was manually launched from the same shell just after termination of A.</p>\n\n<p>My current program:</p>\n\n<pre><code>use std::process::Command;\n\npub fn execute(exe: &amp;str, args: &amp;[&amp;str]) {\n    Command::new(exe)\n        .args(args)\n        .spawn()\n        .expect(\"failed to start external executable\");\n}\n\nfn main() {\n    execute(\"/usr/bin/nvim\", &amp;[\"/home/dys/todo.txt\"]);\n}\n</code></pre>\n\n<p>This fails. <em>nvim</em> is launched as a child and is non-working as soon as the calling program stops.</p>\n\n<p>How can I write <code>execute</code> so the caller program immediately stops and lets <em>nvim</em> (or another program) properly run (even without any windowing system) ?</p>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 9, "last_activity_date": 1543197183, "creation_date": 1543197183, "answer_id": 53473834, "question_id": 53473474, "link": "https://stackoverflow.com/questions/53473474/how-can-i-append-a-char-or-str-to-a-string-without-first-converting-it-to-strin/53473834#53473834", "title": "How can I append a char or &amp;str to a String without first converting it to String?", "body": "<p>If you're trying to do something with a type, check the documentation.  From the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html\" rel=\"noreferrer\">documentation for <code>String</code></a>:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.push\" rel=\"noreferrer\"><code>push</code></a>: \"Appends the given <code>char</code> to the end of this <code>String</code>.\"</li>\n<li><a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.push_str\" rel=\"noreferrer\"><code>push_str</code></a>: \"Appends a given string slice onto the end of this <code>String</code>.\"</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1543232979, "creation_date": 1543232979, "answer_id": 53480492, "question_id": 53473474, "link": "https://stackoverflow.com/questions/53473474/how-can-i-append-a-char-or-str-to-a-string-without-first-converting-it-to-strin/53480492#53480492", "title": "How can I append a char or &amp;str to a String without first converting it to String?", "body": "<p>It's important to understand the differences between <code>String</code> and <code>&amp;str</code>, and why different methods accept and return each of them.</p>\n\n<p>A <code>&amp;str</code> or <code>&amp;mut str</code> are <a href=\"https://stackoverflow.com/q/40006219/493729\">usually preferred in function arguments</a> and return types. That's because they are just pointers to data so nothing needs to be copied or moved when they are passed around.</p>\n\n<p>A <code>String</code> is returned when a function needs to do some new allocation, while <code>&amp;str</code> and <code>&amp;mut str</code> are slices into an existing <code>String</code>. Even though <code>&amp;mut str</code> is mutable, you can't mutate it in a way that increases its length because that would require additional allocation.</p>\n\n<p>The <code>trim</code> function is able to return a <code>&amp;str</code> slice because that doesn't involve mutating the original string - a trimmed string is just a substring, which a slice perfectly describes. But sometimes that isn't possible; for example, a function that pads a string with an extra character would <em>have to</em> return a <code>String</code> because it would be allocating new memory.</p>\n\n<hr>\n\n<p>You can reduce the number of type conversions in your code by choosing different methods:</p>\n\n<pre><code>for c in chars {\n    append.push(c); // append += &amp;_char.to_string();\n    append = append.trim().to_string();\n\n    if append.contains(\"print\") {\n        println!(\"print found at: \\n{}\", append);\n        append.clear(); // append = \"\".to_string();\n    }\n}\n</code></pre>\n\n<p>There isn't anything like a <code>trim_in_place</code> method for <code>String</code>, so the way you have done it is probably the only way.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10538608"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1466, "favorite_count": 0, "accepted_answer_id": 53473834, "answer_count": 2, "score": 5, "last_activity_date": 1543286518, "creation_date": 1543192977, "last_edit_date": 1543286518, "question_id": 53473474, "link": "https://stackoverflow.com/questions/53473474/how-can-i-append-a-char-or-str-to-a-string-without-first-converting-it-to-strin", "title": "How can I append a char or &amp;str to a String without first converting it to String?", "body": "<p>I am attempting to write a lexer for fun, however something keeps bothering me.</p>\n\n<pre><code>let mut chars: Vec&lt;char&gt; = Vec::new();\nlet mut contents = String::new();\nlet mut tokens: Vec&lt;&amp;String&gt; = Vec::new();\nlet mut append = String::new();\n//--snip--\nfor _char in chars {\n    append += &amp;_char.to_string();\n    append = append.trim().to_string();\n\n    if append.contains(\"print\") {\n        println!(\"print found at: \\n{}\", append);\n        append = \"\".to_string();\n    }\n}\n</code></pre>\n\n<p>Any time I want to do something as simple as append a <code>&amp;str</code> to a <code>String</code> I have to convert it using <code>.to_string</code>, <code>String::from()</code>, <code>.to_owned</code>, etc.</p>\n\n<p>Is there something I am doing wrong, so that I don't have to constantly do this, or is this the primary way of appending?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1543184642, "post_id": 53471996, "comment_id": 93815724, "body": "The compiler isn&#39;t smart enough, however Rust give a lot of tool to make better code than this Iterator is the way to go or std::mem::uninitialized if you want keep an array is the &quot;trust me&quot; solution."}, {"owner": {"reputation": 1563, "user_id": 556141, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/febf4a6f28c25aa85ac8388e8ed8bb06?s=128&d=identicon&r=PG", "display_name": "Muffo", "link": "https://stackoverflow.com/users/556141/muffo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1543200134, "post_id": 53471996, "comment_id": 93818638, "body": "Thanks for pointing out std::mem::uninitialized.  A quick search brought me to this page that shows some code very similar to mine: <a href=\"https://doc.rust-lang.org/std/mem/fn.uninitialized.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/mem/fn.uninitialized.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1543239720, "post_id": 53471996, "comment_id": 93834390, "body": "See also <a href=\"https://stackoverflow.com/q/31360993/155423\">What is the proper way to initialize a fixed length array?</a>; <a href=\"https://stackoverflow.com/q/44182269/155423\">Initialize array holding struct more efficiently</a>; <a href=\"https://stackoverflow.com/q/26185618/155423\">Is there a way to not have to initialize arrays twice?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1563, "user_id": 556141, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/febf4a6f28c25aa85ac8388e8ed8bb06?s=128&d=identicon&r=PG", "display_name": "Muffo", "link": "https://stackoverflow.com/users/556141/muffo"}, "edited": false, "score": 0, "creation_date": 1543200068, "post_id": 53472025, "comment_id": 93818624, "body": "Thanks for the great explanation and for the link!"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 5, "last_activity_date": 1543182180, "last_edit_date": 1543182180, "creation_date": 1543180263, "answer_id": 53472025, "question_id": 53471996, "link": "https://stackoverflow.com/questions/53471996/why-does-the-rust-compiler-give-an-uninitialized-variable-error-when-initializin/53472025#53472025", "title": "Why does the Rust compiler give an uninitialized variable error when initializing an array in a loop?", "body": "<p>When you do a for loop, the code is sequential: the compiler first set the value at index 0, then 1, etc. but it has no clue that you are initializing the array that way. You could, for example, forgot the last index, and your code would be invalid.</p>\n\n<p>To say it simply: you can <strong>modify</strong> a variable only when it was <strong>initialized</strong>, and <code>arr</code> is your variable, not <code>arr[0]</code>.</p>\n\n<p>When you index something in Rust, this is desugared into the <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html#tymethod.index_mut\" rel=\"noreferrer\"><code>index_mut</code> method</a>. In your situation, you are calling a method of <code>arr</code> that is an uninitialized variable.</p>\n\n<hr>\n\n<p>As you said, the solution to your issue is to initialize your array first, with zeroes for example:</p>\n\n<pre><code>fn main() {\n    const LEN : usize = 5;\n    let mut arr = [0; LEN];\n\n    for i in 0..LEN {\n        arr[i] = fib(i as u32);\n    }\n\n    println!(\"{:?}\", arr);\n}\n\n\nfn fib(n: u32) -&gt; u32 {\n    match n {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        _ =&gt; fib(n-1) + fib(n-2)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1563, "user_id": 556141, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/febf4a6f28c25aa85ac8388e8ed8bb06?s=128&d=identicon&r=PG", "display_name": "Muffo", "link": "https://stackoverflow.com/users/556141/muffo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 53472025, "answer_count": 1, "score": 2, "last_activity_date": 1543239634, "creation_date": 1543180026, "last_edit_date": 1543239634, "question_id": 53471996, "link": "https://stackoverflow.com/questions/53471996/why-does-the-rust-compiler-give-an-uninitialized-variable-error-when-initializin", "title": "Why does the Rust compiler give an uninitialized variable error when initializing an array in a loop?", "body": "<p>The compiler complains a variable is not initialized, and it is right.\nHowever, the variable appears on the <em>left</em> side of the expression.</p>\n\n<p>I guess I could easily fix this by initializing the array, but I am more interested in understanding why the compiler thinks this is an error condition.</p>\n\n<p>I don't think this would be flagged as an error in other languages.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>fn main() {\n    const LEN: usize = 5;\n    let mut arr: [u32; LEN];\n\n    for i in 0..LEN {\n        arr[i] = fib(i as u32);\n    }\n\n    println!(\"{:?}\", arr);\n}\n\nfn fib(n: u32) -&gt; u32 {\n    match n {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        _ =&gt; fib(n - 1) + fib(n - 2),\n    }\n}\n</code></pre>\n\n<p>Here is the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `arr`\n --&gt; src/main.rs:6:9\n  |\n6 |         arr[i] = fib(i as u32);\n  |         ^^^^^^^^^^^^^^^^^^^^^^ use of possibly uninitialized `arr`\n\nerror[E0381]: use of possibly uninitialized variable: `arr`\n --&gt; src/main.rs:9:22\n  |\n9 |     println!(\"{:?}\", arr);\n  |                      ^^^ use of possibly uninitialized `arr`\n</code></pre>\n"}, {"tags": ["rust", "formatting"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1543179255, "post_id": 53471590, "comment_id": 93814323, "body": "Please, put the failing code. Without it, we can only guess what is your issue."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1543179616, "post_id": 53471590, "comment_id": 93814423, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=b3a70ab3e3dd4588240e1937484a865f\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1543218344, "post_id": 53471590, "comment_id": 93823302, "body": "An empty string slice, aka <code>&quot;&quot;</code> is totaly legit. <code>let a = &quot;&quot;;</code> will work! However, if you try to do something like <code>let a = &quot;&quot;&quot;&quot;</code> it will not work in any language I know of. You have to escape the inner quotations with <code>\\ </code>, e.g. <code>let a = &quot;\\&quot;\\&quot;&quot;;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 2642, "user_id": 7263027, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R6GoB.jpg?s=128&g=1", "display_name": "taygetos", "link": "https://stackoverflow.com/users/7263027/taygetos"}, "is_accepted": true, "score": 1, "last_activity_date": 1543179824, "creation_date": 1543179824, "answer_id": 53471958, "question_id": 53471590, "link": "https://stackoverflow.com/questions/53471590/how-do-i-write-a-literal-quotation-mark-when-using-the-formatting-macros/53471958#53471958", "title": "How do I write a literal quotation mark when using the formatting macros?", "body": "<p>I think your original approach is correct:</p>\n\n<pre><code>let mut file = File::create(\"model.json\").expect(\"fail creating file\");\nlet json = r#\"{\"key1\": \"value1\", \"key2\": \"value2\"}\"#;\nfile.write_all(json.as_bytes()).expect(\"fail writing data\");\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 10703307, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TjlHQ.jpg?s=128&g=1", "display_name": "Nikita Azarchenkov", "link": "https://stackoverflow.com/users/10703307/nikita-azarchenkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 650, "favorite_count": 0, "accepted_answer_id": 53471958, "answer_count": 1, "score": -1, "last_activity_date": 1543239990, "creation_date": 1543177567, "last_edit_date": 1543239990, "question_id": 53471590, "link": "https://stackoverflow.com/questions/53471590/how-do-i-write-a-literal-quotation-mark-when-using-the-formatting-macros", "title": "How do I write a literal quotation mark when using the formatting macros?", "body": "<p>I need to create a JSON file with some simple data, but the Rust compiler doesn't recognize <code>\" \"</code> as symbols in <code>file.write_all(b\" !HERE! \");</code>. These are necessary in JSON syntax. I tried <code>r#\"\"#</code> but it also doesn't work.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() {\n    let mut file = File::create(\"model.json\").expect(\"fail creating file\");\n\n    file.write_all(b\"!HERE!\").expect(\"fail writing data\");\n}\n</code></pre>\n\n<p>Is there a solution for this issue?</p>\n"}, {"tags": ["vector", "rust", "concatenation"], "answers": [{"comments": [{"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 1, "creation_date": 1543163187, "post_id": 53469328, "comment_id": 93809490, "body": "&quot;extending can easily cause needless reallocation&quot; This is technically possible, but extremely unlikely: I don&#39;t mean that during extending it reallocates more than once, just that after the clone it didn&#39;t even know about the second part that is going to be appended."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543166785, "post_id": 53469328, "comment_id": 93810539, "body": "My initial example code was a botched attempt to formalize the problem described, so the first part of the answer doesn&#39;t apply (some of it belongs with the first linked question instead.)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1543167851, "last_edit_date": 1543167851, "creation_date": 1543162089, "answer_id": 53469328, "question_id": 53469274, "link": "https://stackoverflow.com/questions/53469274/how-to-concatenate-immutable-vectors-in-one-line/53469328#53469328", "title": "How to concatenate immutable vectors in one line?", "body": "<blockquote>\n  <p>Editor's note: The OP changed their question after this answer was provided. Refer to the <a href=\"https://stackoverflow.com/revisions/53469274/3\">version of the question</a> this answer was created from.</p>\n</blockquote>\n\n<p>Your first example doesn't really make sense. You mention immutability, but since you are transferring ownership of the vectors to the <code>cat</code> function, it can choose what the mutability is of the variables. In this case, you might as well just reuse the allocation of one of them:</p>\n\n<pre><code>fn cat(mut a: Vec&lt;i32&gt;, b: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    a.extend(b);\n    a\n}\n</code></pre>\n\n<blockquote>\n  <p>extending can easily cause needless reallocation</p>\n</blockquote>\n\n<p>This is technically possible, but <strong>extremely unlikely</strong>. There's a reason that iterators have the method <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.size_hint\" rel=\"nofollow noreferrer\"><code>size_hint</code></a> \u2014 this allows collections to allocate exactly whenever possible.</p>\n\n<blockquote>\n  <p>a one-liner </p>\n</blockquote>\n\n<pre><code>a.into_iter().chain(b).collect::&lt;Vec&lt;_&gt;&gt;()\n</code></pre>\n\n<p>This destroys the allocation of the vectors <code>a</code> and <code>b</code> (not of the elements inside them) and creates a new allocation to hold all the items.</p>\n\n<hr>\n\n<p>If you had immutable <em>slices</em>, you can use the same technique:</p>\n\n<pre><code>fn cat&lt;T: Clone&gt;(a: &amp;[T], b: &amp;[T]) -&gt; Vec&lt;T&gt; {\n    a.iter().chain(b).cloned().collect()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543250534, "post_id": 53476705, "comment_id": 93840691, "body": "From my outsider point of view, this still mutates <code>a</code> and <code>b</code>: it moves them, making them unusable further in the code or in further iterations. But I&#39;m beginning to see the term immutable I stuck on the question doesn&#39;t mean untouchable in Rust, and doesn&#39;t have to. So this looks like the most elegant way to concatenate immutable vectors in my mind."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543251326, "post_id": 53476705, "comment_id": 93841129, "body": "@Stein It doesn&#39;t move them. <code>cat</code> accepts two slices. You can use <code>a</code> and <code>b</code> further in <code>main</code>. What do you mean by <i>&quot;untouchable&quot;</i>?"}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543252694, "post_id": 53476705, "comment_id": 93841793, "body": "You&#39;re right, I can simply <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=6ec3e82349560e4eee90702724309f4a\" rel=\"nofollow noreferrer\">turn your code into an iteration</a>. But not if I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=6431e07d2c39aa55d6fe937be8d64429\" rel=\"nofollow noreferrer\">try to avoid the intermediate function</a>. I&#39;ll try to understand that later."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543252847, "post_id": 53476705, "comment_id": 93841849, "body": "@Stein Look at the <a href=\"https://stackoverflow.com/posts/53476705/revisions\">revisions of my answer</a> (#1) and then you may be able to get your &quot;intermediate&quot; function work. Report please :)"}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 1, "creation_date": 1543253144, "post_id": 53476705, "comment_id": 93841975, "body": "Thanks, I got it now. An actual one-liner is <code>[a.as_slice(), b.as_slice()].concat()</code> and the function invocation does the slicy thing implicitly."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1543253515, "post_id": 53476705, "comment_id": 93842126, "body": "I tried to clartify <i>untouchable</i> (read-only? radical immutability?) versus immutable in the question. Is there an official word it? Something not declared as const but treated as const?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1543240953, "last_edit_date": 1543240953, "creation_date": 1543218636, "answer_id": 53476705, "question_id": 53469274, "link": "https://stackoverflow.com/questions/53469274/how-to-concatenate-immutable-vectors-in-one-line/53476705#53476705", "title": "How to concatenate immutable vectors in one line?", "body": "<p><a href=\"https://doc.rust-lang.org/std/slice/trait.SliceConcatExt.html#tymethod.concat\" rel=\"nofollow noreferrer\"><code>concat</code></a> does work, if used correctly:</p>\n\n<pre><code>fn cat(a: &amp;[i32], b: &amp;[i32]) -&gt; Vec&lt;i32&gt; {\n    [a, b].concat()\n}\n\nfn main() {\n    let a = vec![1, 2, 3];\n    let b = vec![7, 8, 9];\n    println!(\"{:?}\", cat(&amp;a, &amp;b));\n}\n</code></pre>\n"}], "owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2046, "favorite_count": 0, "accepted_answer_id": 53476705, "answer_count": 2, "score": 3, "last_activity_date": 1543268366, "creation_date": 1543161722, "last_edit_date": 1543268366, "question_id": 53469274, "link": "https://stackoverflow.com/questions/53469274/how-to-concatenate-immutable-vectors-in-one-line", "title": "How to concatenate immutable vectors in one line?", "body": "<p>I have immutable vectors <code>a</code> and <code>b</code> where the elements are cheap to copy and I want to create a vector that forms the concatenation of these existing vectors without changing them (*).</p>\n\n<p><a href=\"https://stackoverflow.com/questions/40792801/best-way-to-concatenate-vectors-in-rust\">An earlier question addressed it if one of the vectors is mutable</a>, so an obvious answer is to first clone vector <code>a</code>, e.g.</p>\n\n<pre><code>let mut r = a.clone();\nr.extend(&amp;b);\n</code></pre>\n\n<p>but that seems neither elegant nor efficient (extending can easily cause one needless reallocation, right?). The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=041b73f03a67d9fa69dadffb2c4f488e\" rel=\"nofollow noreferrer\">(corrected) best alternative I (being a Rust noob) come up with</a> is:</p>\n\n<pre><code>fn cat(a: &amp;Vec&lt;i32&gt;, b: &amp;Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut r = Vec::&lt;i32&gt;::with_capacity(a.len() + b.len());\n    r.extend(a);\n    r.extend(b);\n    r\n}\n</code></pre>\n\n<p>Since elements are cheap to copy, the answer to the <a href=\"https://stackoverflow.com/questions/31126048/concatenate-a-vector-of-vectors-of-strings\">more generic question for vectors of strings</a> should apply here, but <code>vec![a, b].concat()</code> only seems to work if you construct the vector of vectors by moving the vectors into it, because <code>vec![&amp;a, &amp;b].concat()</code>yields \"no method named <code>concat</code> found\".</p>\n\n<p>Is there a one-liner for this seemingly simple job, even if it's not optimal?</p>\n\n<hr>\n\n<p>(*) turns out there are two meanings to \"without changing\":</p>\n\n<ul>\n<li>just immutable, which in Rust means that if code compiles, it will not see the variable with a changed value; but the variable may be moved out, and further or future code cannot use it anymore</li>\n<li>actually read-only, leaving the variable untouched for further or future code</li>\n</ul>\n"}, {"tags": ["rust", "libc", "setsockopt"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543167908, "post_id": 53469206, "comment_id": 93810905, "body": "<i>cast to c_void</i> \u2014 this doesn&#39;t make any sense. <code>void</code> is a type that cannot exist; you cannot cast to it."}, {"owner": {"reputation": 417, "user_id": 2035417, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/be22c7b705fa45820b740d9256e1593e?s=128&d=identicon&r=PG", "display_name": "ruckc", "link": "https://stackoverflow.com/users/2035417/ruckc"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543168013, "post_id": 53469206, "comment_id": 93810931, "body": "You didn&#39;t read the linked SO question/answer then.  You can, and once my trueval type changes to a <code>u8</code> it works."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543168245, "post_id": 53469206, "comment_id": 93810995, "body": "<i>You didn&#39;t read the linked SO question/answer then</i> \u2014 I <b>wrote</b> the linked answer. You cannot cast a value to a <code>void</code>."}, {"owner": {"reputation": 417, "user_id": 2035417, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/be22c7b705fa45820b740d9256e1593e?s=128&d=identicon&r=PG", "display_name": "ruckc", "link": "https://stackoverflow.com/users/2035417/ruckc"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543168310, "post_id": 53469206, "comment_id": 93811026, "body": "Then why does changing the c_int type to u8 make it work, with the cast from the linked answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543168491, "post_id": 53469206, "comment_id": 93811097, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53469206/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0fedb7d7e7c9b7447f483ee62f651a78\" rel=\"nofollow noreferrer\">Running your code</a> produces errors that are different from what you report. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1543168864, "post_id": 53469206, "comment_id": 93811217, "body": "Your problem is simply a typo.  The code you provided says <code>&amp;trueval as *const _ as *const c_void</code> but the error message says <code>&amp;trueval as *const _ *const c_void</code>. You forgot the second <b><code>as</code></b> in whatever code you attempted first. The cast works just fine."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1543169214, "post_id": 53469206, "comment_id": 93811313, "body": "My point about <code>void</code> is that you aren&#39;t casting a value to void, you are casting a value to a pointer to void (<code>*const c_void</code> (Rust) / <code>void *</code> (C)). These have very  different meanings."}], "answers": [{"tags": [], "owner": {"reputation": 417, "user_id": 2035417, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/be22c7b705fa45820b740d9256e1593e?s=128&d=identicon&r=PG", "display_name": "ruckc", "link": "https://stackoverflow.com/users/2035417/ruckc"}, "is_accepted": false, "score": -2, "last_activity_date": 1543161469, "creation_date": 1543161469, "answer_id": 53469233, "question_id": 53469206, "link": "https://stackoverflow.com/questions/53469206/rust-libcsetsockopt-cast-to-c-void/53469233#53469233", "title": "rust libc::setsockopt cast to c_void", "body": "<p>Changing <code>trueval</code> to type <code>u8</code> allows the code to work.</p>\n"}], "owner": {"reputation": 417, "user_id": 2035417, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/be22c7b705fa45820b740d9256e1593e?s=128&d=identicon&r=PG", "display_name": "ruckc", "link": "https://stackoverflow.com/users/2035417/ruckc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 237, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1543168393, "creation_date": 1543161293, "last_edit_date": 1543168393, "question_id": 53469206, "link": "https://stackoverflow.com/questions/53469206/rust-libcsetsockopt-cast-to-c-void", "title": "rust libc::setsockopt cast to c_void", "body": "<p>I'm trying to call <a href=\"https://doc.rust-lang.org/1.8.0/libc/fn.setsockopt.html\" rel=\"nofollow noreferrer\"><code>setsockopt</code></a> but can't figure out the cast to <code>c_void</code>.  <code>IP_HDRINCL</code> isn't in <code>nix</code> or <code>socket</code> crates, so I have to use <code>libc</code>.  I'm following the example of <a href=\"https://stackoverflow.com/questions/40468685/how-to-set-the-socket-option-so-reuseport-in-rust\">How to set the socket option SO_REUSEPORT in Rust?</a></p>\n\n<pre><code>let trueval: c_int = 1;\nlet ret = setsockopt(mysocket, IPPROTO_IP, IP_HDRINCL, &amp;trueval as *const _ as *const c_void, mem::size_of_val(&amp;trueval) as socklen_t);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found keyword `const`\n  --&gt; src/igmp.rs:30:97\n   |\n30 |         let ret = setsockopt(mysocket, IPPROTO_IP, IP_HDRINCL, &amp;trueval as *const _ *const c_void, mem::size_of_val(&amp;trueval) as socklen_t);\n   |                                                                                      ^^^^^ expected expression\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "dynamic-programming", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543169695, "post_id": 53468807, "comment_id": 93811461, "body": "It appears that you&#39;ve put a lot of effort into your question, but unfortunately it does not seem like a good fit for Stack Overflow (yet?). I see two main problems: (1) it seems overly broad as it seems to want us to write large portions of your code for you (2) what code you have provided isn&#39;t a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. My advice is to drastically reduce your problem to something manageable. I bet that you don&#39;t need 5 enum variants to reproduce the core problem; there should be a function, etc. We should be able to reproduce your problem using the question itself, no links. Links are good for addl context."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543169707, "post_id": 53468807, "comment_id": 93811467, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53468807/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543169832, "post_id": 53468807, "comment_id": 93811499, "body": "You may be interested in <a href=\"https://stackoverflow.com/q/34747464/155423\">Implement graph-like datastructure in Rust</a> or <a href=\"https://stackoverflow.com/q/36167160/155423\">How do I express mutually recursive data structures in safe Rust?</a>."}], "owner": {"reputation": 319, "user_id": 7698902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/504b47ca61e2dea92102495da1750314?s=128&d=identicon&r=PG&f=1", "display_name": "vandenheuvel", "link": "https://stackoverflow.com/users/7698902/vandenheuvel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 211, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1543164075, "creation_date": 1543158316, "last_edit_date": 1543164075, "question_id": 53468807, "link": "https://stackoverflow.com/questions/53468807/multithreaded-branch-and-bound-search-in-rust", "title": "Multithreaded branch and bound search in Rust", "body": "<p>I am trying to solve a mathematical minimization problem using a branch and bound algorithm, in Rust. For simplicity, let's say that we're trying to find the objective value only.</p>\n\n<h2>Functional</h2>\n\n<p>Solving the problem requires solving an easier version (\"the relaxation\"), which then may give rise to precisely two subproblems. Solving a relaxation takes a long time and needs to happen on a separate thread.</p>\n\n<p>The difficulty is that a problem's subproblems are known only after the problem is solved. As such, the binary tree in which the problem and its subproblems live, grows during the computation. Moreover, the solving of a relaxation might result in nodes of the tree getting pruned. For each known problem, a sizable table has to be stored. Because of limited memory capacity, I want to search this tree in a depth-first order.</p>\n\n<h2>Non-functional</h2>\n\n<p>Performance of the tree doesn't matter as much; the vast majority of the time will be spent solving the relaxations. I would like to avoid using manual relative references and similar constructs, and instead use Rust's toolbox of references to solve this problem. As a bonus, I'd like to capture the life-cycle of the problem-nodes in the type system:</p>\n\n<ol>  <li>The problem is known</li>  <li>It is being solved</li>  <li>The relaxation is solved and    <ul>      <li>If the problem turns out to be feasible:        <ul>          <li>If the objective value of the relaxation below a global maximum, the subproblems are computed</li>          <li>If not, the problem is marked suboptimal, further subproblems are irrelevant</li>        </ul>      </li>      <li>If not, the problem is marked infeasible, further subproblems are irrelevant</li>    </ul>  </li>  <li>Both subproblems are solved and only the objective value of this problem is stored</li></ol>\n\n<h2>Example of attempt</h2>\n\n<p>I've attempted several approaches, but I keep running into problems. My latest approach is best summarized by the definition of the node in the tree. The problem data is stored in the <code>Tableau</code>.</p>\n\n<pre><code>enum Node&lt;'a, T, TP&gt; {\n    /// The problem to solve. Nothing is known.\n    Undecided {\n        parent: Option&lt;rc::Weak&lt;Self&gt;&gt;,\n        depth: u64,\n        tableau: Tableau&lt;'a, T, TP&gt;,\n    },\n    /// Being calculated\n    ActiveCalculation {\n        parent: Option&lt;rc::Weak&lt;Self&gt;&gt;,\n        depth: u64,\n        tableau: Arc&lt;Mutex&lt;Tableau&lt;'a, T, TP&gt;&gt;&gt;,\n        sender_to_active_thread: Sender&lt;PruneReason&gt;,\n    },\n    /// The problem is solved, and the children (if any) should be created while this variant is\n    /// being instantiated.\n    NodeOptimal {\n        parent: Option&lt;Weak&lt;Self&gt;&gt;,\n        relaxation_value: f64,\n        best_lower_bound: Cell&lt;Option&lt;f64&gt;&gt;,\n        lower: Rc&lt;Self&gt;,\n        upper: Rc&lt;Self&gt;,\n    },\n    /// This problem and all generated subproblems are solved.\n    SubTreeOptimal {\n        lower_bound: f64,\n    },\n    /// Pruned.\n    Pruned(PruneReason), // e.g. SubOptimal, Infeasible\n}\n</code></pre>\n\n<p>I tried to manage the tree with the main thread, while providing worker threads with an <code>Arc</code> to the problem data. The <code>sender_to_active_thread</code> field on the <code>ActiveCalculation</code> variant is used to terminate a calculation, when newly found information determines that the calculation could only yield a suboptimal result.</p>\n\n<p>The problem with the above attempt is that I don't know how to update the tree once a solution is found. See below the code that fetches the next problem from the tree, hands it off to a thread, and processes the result:</p>\n\n<pre><code>let (solution_sender, solution_receiver) = channel();\n\n    // Stop condition\n    while !tree.finished() {\n\n        let mut possible_next_problem = tree.next_problem();\n        // Wait condition\n        while active_threads == max_threads || possible_next_problem.is_some() {\n            // Wait for a signal, block until a thread has terminated\n            let (solved_problem, result) = solution_receiver.recv().unwrap();\n            active_threads -= 1;\n\n            let new_node = match result {\n                None =&gt; Node::Pruned(PruneReason::Infeasible),\n                Some((solution, objective_value)) =&gt; {\n                    unimplemented!()\n                }\n            };\n            tree.update(solved_problem, new_node);\n            possible_next_problem = tree.next_problem();\n        }\n        // Assumed to be of `Undecided` variant\n        let next_problem = possible_next_problem.unwrap();\n\n        let solution_sender_clone = solution_sender.clone();\n        let (termination_sender, termination_receiver) = channel();\n        *next_problem = next_problem.undecided_to_active_calculation(termination_sender);\n        let pointer_to_problem_in_tree = next_problem.clone();\n        if let Node::ActiveCalculation { tableau, .. } = *next_problem {\n            thread::spawn(move || {\n                let result = solve_in_separate_thread(&amp;mut *tableau.lock().expect(\"Should be of variant `Undecided`\"),\n                                                      termination_receiver);\n                solution_sender_clone.send((pointer_to_problem_in_tree, result)).unwrap();\n            });\n        } else { panic!(\"Should be of variant `ActiveCalculation`.\") };\n    }\n</code></pre>\n\n<p>The compiler tells me that just moving an <code>Arc&lt;Node&gt;</code> to the thread (and sending it to the main thread again) requires that <code>Node</code> and all its fields are <code>Sync</code>.</p>\n\n<p>The code can be found <a href=\"https://github.com/vandenheuvel/rust-lp/blob/branch_and_bound/src/algorithm/simplex/branch_and_bound/mod.rs\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1543156825, "post_id": 53468556, "comment_id": 93807626, "body": "Have you looked at the function signatures for <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.peekable\" rel=\"nofollow noreferrer\"><code>peekable()</code></a> ajd <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek\" rel=\"nofollow noreferrer\"><code>peek()</code></a>? The <a href=\"https://doc.rust-lang.org/src/core/iter/iterator.rs.html#768\" rel=\"nofollow noreferrer\">source for <code>peekable()</code></a> may also be useful. TL;DR: <code>peekable()</code> creates a <code>Peakable</code>, which <code>peek()</code> tries to borrow."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1543156864, "creation_date": 1543156864, "answer_id": 53468608, "question_id": 53468556, "link": "https://stackoverflow.com/questions/53468556/what-happens-when-you-borrow-from-a-temporary-peekable-iterator/53468608#53468608", "title": "What happens when you borrow from a temporary peekable iterator?", "body": "<blockquote>\n  <p>I can not figure out where the temporary value is</p>\n</blockquote>\n\n<p>It's the result of <code>args.peekable()</code>, as the compiler highlights in the error message. <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.peekable\" rel=\"nofollow noreferrer\"><code>peekable</code></a> returns a <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html\" rel=\"nofollow noreferrer\"><code>Peekable</code></a>. The code then calls <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek\" rel=\"nofollow noreferrer\"><code>peek</code></a>, which returns a reference to something inside the iterator:</p>\n\n<pre><code>pub fn peek(&amp;mut self) -&gt; Option&lt;&amp;&lt;I as Iterator&gt;::Item&gt;\n</code></pre>\n\n<p>To fix it, do as the compiler suggests:</p>\n\n<blockquote>\n  <p>consider using a <code>let</code> binding to increase its lifetime</p>\n</blockquote>\n\n<pre><code>let mut x = args.peekable();\nlet new_dir = x.peek().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 1857, "user_id": 6329187, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/WDkSs.jpg?s=128&g=1", "display_name": "sunfy", "link": "https://stackoverflow.com/users/6329187/sunfy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1543156864, "creation_date": 1543156490, "last_edit_date": 1543156644, "question_id": 53468556, "link": "https://stackoverflow.com/questions/53468556/what-happens-when-you-borrow-from-a-temporary-peekable-iterator", "title": "What happens when you borrow from a temporary peekable iterator?", "body": "<p>This code reads a line from stdin and I want to split it.</p>\n\n<pre><code>use std::io::stdin;\n\nfn example() {\n    let mut input = String::new();\n    stdin().read_line(&amp;mut input).expect(\"Failed to read line\");\n    let mut parts = input.trim().split_whitespace();\n    let args = parts;\n    let new_dir = args.peekable().peek().unwrap();\n    println!(\"{}\", new_dir);\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/lib.rs:8:19\n   |\n8  |     let new_dir = args.peekable().peek().unwrap();\n   |                   ^^^^^^^^^^^^^^^                - temporary value dropped here while still borrowed\n   |                   |\n   |                   temporary value does not live long enough\n9  |     println!(\"{}\", new_dir);\n10 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I understand that this means that <code>args.peekable()</code> creates a temporary value and <code>println!(\"{}\", new_dir);</code> borrows that value.</p>\n\n<p>I can not figure out where the temporary value is. I thought the borrowed value is from <code>args</code>, which won't be dropped here.</p>\n\n<p>What really happens in <code>args.peekable().peek().unwrap();</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 1, "last_activity_date": 1543154273, "last_edit_date": 1543154273, "creation_date": 1543153191, "answer_id": 53468043, "question_id": 53467880, "link": "https://stackoverflow.com/questions/53467880/flattening-a-nested-structure/53468043#53468043", "title": "Flattening a nested structure", "body": "<p>There are various solutions to this task. One would be to pass the result as an out-parameter to the function:</p>\n\n<pre><code>fn iter_els&lt;'el&gt;(el_top: &amp;'el El, result: &amp;mut Vec&lt;&amp;'el El&gt;) {\n    result.push(el_top);\n    for el in &amp;el_top.children {\n        iter_els(el, result);\n    }\n}\n\nfn main() {\n    // build top_el as you did\n    let mut result = Vec::new();\n    iter_els(&amp;top_el, &amp;mut result);\n    println!(\"{:?}\", result);\n}\n</code></pre>\n\n<p>Adapting your original approach imho results in a more complex implementation:</p>\n\n<pre><code>fn iter_els&lt;'el&gt;(prev_result: &amp;Vec&lt;&amp;'el El&gt;) -&gt; Vec&lt;&amp;'el El&gt; {\n    // Iterate over all elements from a tree, starting at the top-level element.\n    let mut result = prev_result.clone();\n\n    for el in prev_result {\n        for child in &amp;el.children {\n            result.push(&amp;child);\n        }\n        result.extend(iter_els(&amp;el.children.iter().collect()));\n    }\n    result\n}\n\nfn main() {\n    // build top_el as you did\n    println!(\"{:?}\", iter_els(&amp;vec![&amp;top_el]));\n}\n</code></pre>\n\n<p>Alternatively: </p>\n\n<pre><code>fn iter_els&lt;'el&gt;(prev_result: &amp;'el Vec&lt;El&gt;) -&gt; Vec&lt;&amp;'el El&gt; {\n    // Iterate over all elements from a tree, starting at the top-level element.\n    let mut result : Vec&lt;_&gt; = prev_result.iter().collect();\n\n    for el in prev_result {\n        for child in &amp;el.children {\n            result.push(child);\n        }\n        result.extend(iter_els(&amp;el.children));\n    }\n    result\n}\n\nfn main() {\n    // build top_el as you did\n    println!(\"{:?}\", iter_els(&amp;vec![top_el]));\n}\n</code></pre>\n\n<p>As you can see, the first approach only operates on an immutable <code>El</code>, and one single result <code>Vec</code>, while the other implementations do not get around <code>clone</code> and <code>collect</code>.</p>\n\n<p>Ideally, you would write a custom <code>Iterator</code> for your tree, but I think this could get quite cumbersome, because this iterator would have to keep track of the current state somehow (maybe can prove me wrong and show that it's actually easy to do).</p>\n"}], "owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 269, "favorite_count": 0, "accepted_answer_id": 53468043, "answer_count": 1, "score": 2, "last_activity_date": 1543154273, "creation_date": 1543152001, "question_id": 53467880, "link": "https://stackoverflow.com/questions/53467880/flattening-a-nested-structure", "title": "Flattening a nested structure", "body": "<p>Looks for wisdom on fixing this borrow-checker/lifetime issue in Rust. I'm trying to flatten a generic nested structure (into an impl Iterator or Vec). It's perhaps a few &amp;s and `s away from working:</p>\n\n<pre><code>fn iter_els(prev_result: Vec&lt;&amp;El&gt;) -&gt; Vec&lt;&amp;El&gt; {\n    // Iterate over all elements from a tree, starting at the top-level element.\n    let mut result = prev_result.clone();\n\n    for el in prev_result {\n        for child in &amp;el.children {\n            result.push(&amp;child.clone());\n        }\n        result.extend(iter_els(&amp;el.children));\n    }\n    result\n}\n</code></pre>\n\n<p>You'll note that the immediate exception this raises is that iter_els expects a Vec of refs, not a ref itself. When addressing this directly, other issues rear their mischievous heads, as in a game of oxidized, but safe wack-a-mole.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c67f1c2dc5fe43d646ba64a8af3eeb53\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "type-inference"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543152729, "post_id": 53467800, "comment_id": 93806461, "body": "You argue that there could be different types with <code>f32</code> as right-hand side, while there can be only one implementation with <code>f32</code> as left-hand side. This is not true, as you can see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=2acb93d1887f678fec966acb72cbd8ba\" rel=\"nofollow noreferrer\">in this example</a>. There is only a single implementation with <code>f32</code> as left-hand side, but there is also only a single implementation with <code>f32</code> as right-hand side, so I can&#39;t really see how this answer explains the assymetry."}, {"owner": {"reputation": 319, "user_id": 7698902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/504b47ca61e2dea92102495da1750314?s=128&d=identicon&r=PG&f=1", "display_name": "vandenheuvel", "link": "https://stackoverflow.com/users/7698902/vandenheuvel"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543156024, "post_id": 53467800, "comment_id": 93807367, "body": "My argument assumes that the OP doesn&#39;t manually implement <code>PartialOrd</code> for <code>f32</code>, in which case OP should have mentioned this, as it is relevant for the question. This is a reason the compiler is able to infer the type. I didn&#39;t state that there could be only one implementation of <code>PartialOrd</code> with <code>f32</code> as the left-hand side. Your example does however nicely demonstrate your answer."}], "tags": [], "owner": {"reputation": 319, "user_id": 7698902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/504b47ca61e2dea92102495da1750314?s=128&d=identicon&r=PG&f=1", "display_name": "vandenheuvel", "link": "https://stackoverflow.com/users/7698902/vandenheuvel"}, "is_accepted": false, "score": 3, "last_activity_date": 1543151472, "creation_date": 1543151472, "answer_id": 53467800, "question_id": 53467419, "link": "https://stackoverflow.com/questions/53467419/rust-type-inferencing-oddity/53467800#53467800", "title": "Rust type inferencing oddity", "body": "<p>The <code>&gt;</code> operator is sugar for a method; the <a href=\"https://doc.rust-lang.org/src/core/cmp.rs.html#903-910\" rel=\"nofollow noreferrer\"><code>partial_cmp</code></a> method of the <a href=\"https://doc.rust-lang.org/src/core/cmp.rs.html#198\" rel=\"nofollow noreferrer\"><code>PartialOrd</code></a> trait. The method is called with the left-hand side as the <code>self</code> argument; this determines which implementation of <code>PartialOrd</code> is used. Because you could implement the <code>PartialOrd</code> trait for different types with <code>f32</code> as the right-hand side type, the implementation of <code>PartialOrd</code> is only uniquely determined if the type of the left-hand side is known. This implementation of <code>PartialOrd</code>, in turn, determines the type required from <code>rand::random</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543225743, "post_id": 53467805, "comment_id": 93826736, "body": "Would you happen to know if this is a limitation of the language (impossible to resolve otherwise) or merely a limitation of the current implementation?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543226163, "post_id": 53467805, "comment_id": 93826950, "body": "@MatthieuM. The current language definition simply does not contain a process for inferring the type of the receiver. The definition of the method lookup process (see link in the answer) certainly requires that the type of the receiver is known in advance. If we wanted to infer the type of the receiver, we would need to invent different method lookup semantics for the case that the receiver is not known. I can&#39;t think of any reasonable and consistent way of defining semantics for this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543226855, "post_id": 53467805, "comment_id": 93827354, "body": "I think it should be possible by treating all arguments equally; select a list of candidate methods by simple name look-up (inherent + visible traits), then use inference on receiver &amp; argument to find which candidate could match, reject if there&#39;s any ambiguity. What I am not sure of is whether there are cases were the algorithmic complexity would explode, making it pratically impossible to resolve."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543227442, "post_id": 53467805, "comment_id": 93827708, "body": "@MatthieuM. You probably could define a language with these semantics, but it would be quite different from Rust."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543231917, "post_id": 53467805, "comment_id": 93830081, "body": "I may be naive, but I don&#39;t see any <i>semantic</i> difference here; just a difference in how to infer the types."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1543233512, "post_id": 53467805, "comment_id": 93830848, "body": "@MatthieuM. There are several problems. First, trait implementations can be generic, so it&#39;s simply not possible to find <i>all</i> implementations of a method in scope \u2013 there may be an infinite number of them. The second problem is that the current mechanism looks up methods on a list of candidate types <i>in a particular order</i>, and the first match is used. It is only an error if there is an ambiguity for a single type. The third problem is that the receiver is treated differently in other respects than type inference as well, so treating it the same as other arguments would change semantics."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1543152871, "last_edit_date": 1543152871, "creation_date": 1543151514, "answer_id": 53467805, "question_id": 53467419, "link": "https://stackoverflow.com/questions/53467419/rust-type-inferencing-oddity/53467805#53467805", "title": "Rust type inferencing oddity", "body": "<p>That's basically because Rust can never infer the type of the receiver. The type of the receiver must be known to perform method lookup, and since </p>\n\n<pre><code>rand::random() &lt; self.food_chance\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>std::cmp::PartialOrd::lt(&amp;rand::random(), &amp;self.food_chance);\n</code></pre>\n\n<p>the receiver is the left-hand operand.</p>\n\n<p>In the expression</p>\n\n<pre><code>self.food_chance &gt; rand::random()\n</code></pre>\n\n<p>on the other hand, the receiver is known, so Rust can perform method lookup. It will only find a single implementation for <code>f32</code> as the receiver, namely <code>PartialOrd&lt;f32&gt;</code>, which then in turn determines the type of the right-hand side. If there were implementations for different right-hand side types, Rust would not be able to infer the type in that case either.</p>\n\n<p>To understand <em>why</em> Rust can't infer the receiver, take a look at <a href=\"https://doc.rust-lang.org/reference/expressions/method-call-expr.html\" rel=\"noreferrer\">how Rust's method lookup process works</a>. The first step is to build a list of candidate types based on the type of the receiver. This obvious only works when you already <em>know</em> the type of the receiver.</p>\n"}], "owner": {"reputation": 57, "user_id": 8155019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7eca7b7cba4cad797666b8882852e798?s=128&d=identicon&r=PG&f=1", "display_name": "sapphie", "link": "https://stackoverflow.com/users/8155019/sapphie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 53467805, "answer_count": 2, "score": 4, "last_activity_date": 1543152871, "creation_date": 1543148792, "last_edit_date": 1543151446, "question_id": 53467419, "link": "https://stackoverflow.com/questions/53467419/rust-type-inferencing-oddity", "title": "Rust type inferencing oddity", "body": "<p>I ran into a weird situation earlier. I wrote: </p>\n\n<pre><code>if rand::random() &lt; self.food_chance {...}\n</code></pre>\n\n<p>(<code>self.food_chance</code> is of type <code>f32</code>)</p>\n\n<p>and I got a type inferencing error: </p>\n\n<pre><code>   |\n71 |             if rand::random() &lt; self.food_chance {\n   |                ^^^^^^^^^^^^ cannot infer type for `T`\n</code></pre>\n\n<p>However this code compiles</p>\n\n<pre><code>if self.food_chance &gt; rand::random() {...}\n</code></pre>\n\n<p>And I'm left wondering. Is there a reason for this behaviour?\nIs it even intended behaviour?</p>\n\n<p>I know a little bit about type inferencing theory, and I know that most of the algorithms are agnostic to lhs/rhs, so I'm tempted to think this is expected behaviour rather than straight up a bug.</p>\n\n<p>I tried searching around, but I never got anything close to this.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1543149451, "creation_date": 1543149451, "answer_id": 53467511, "question_id": 53466667, "link": "https://stackoverflow.com/questions/53466667/does-rust-have-an-equivalent-of-ofast-march-native/53467511#53467511", "title": "Does Rust have an equivalent of -Ofast -march=native?", "body": "<p>To optimise for the native CPU, you can use</p>\n\n<pre><code>RUSTFLAGS=\"-C target-cpu=native\"\n</code></pre>\n\n<p>I think LLVM optimises for speed (or more specifically, throughput) by default; I couldn't really find documentation on this, but this is what the <a href=\"http://llvm.org/doxygen/CostModel_8cpp_source.html\" rel=\"nofollow noreferrer\">source code</a> suggests.</p>\n\n<p>You should be able to select a different cost model using e.g.</p>\n\n<pre><code>RUSTFLAGS=\"-C target-cpu=native -C llvm-args='-cost-kind=latency'\"\n</code></pre>\n\n<p>but I haven't tried this, nor do I know any details about the effect of this switch.</p>\n"}], "owner": {"reputation": 1925, "user_id": 433717, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dab73f2c115bc0dc8f0d39e271eec30?s=128&d=identicon&r=PG&f=1", "display_name": "belteshazzar", "link": "https://stackoverflow.com/users/433717/belteshazzar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 691, "favorite_count": 0, "closed_date": 1612727042, "accepted_answer_id": 53467511, "answer_count": 1, "score": 3, "last_activity_date": 1613398838, "creation_date": 1543142450, "last_edit_date": 1613398838, "question_id": 53466667, "link": "https://stackoverflow.com/questions/53466667/does-rust-have-an-equivalent-of-ofast-march-native", "closed_reason": "Duplicate", "title": "Does Rust have an equivalent of -Ofast -march=native?", "body": "<p>Does Rust have an equivalent of GCC's C <code>CFLAGS=&quot;-Ofast -march=native&quot;</code> compiler optimizations?\n\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004\u2004</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1543136651, "post_id": 53465843, "comment_id": 93802824, "body": "C++ does essentially the same. Huge data structures can be dumped on the stack without the <code>&amp;</code> in the function or method declaration indicating that you want to pass a reference. (In my case that was a bug, 200K were dumped on a 16K stack in an embedded system. Since there was no memory protection several other stacks were also wiped out, and the system crashed shortly afterwards in unrelated code. Took me a few hours to find the single missing <code>&amp;</code>.)"}, {"owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1543138560, "post_id": 53465843, "comment_id": 93803231, "body": "@starblue  With or without <code>&amp;</code> can have lot of difference. Pass reference of a variable will share the same memory.  But without <code>&amp;</code> the copy constructor ( or simply copy ) will be used to create the argument variable ( it has no connection with the variable passed in after copy) . But <code>move</code> in c++ is used when we use <code>&amp;&amp;</code> and <code>std::move</code> to trigger move constructor. After being <code>moved</code> into a function, the variable cannot be used. So the move in C++ has nearly the same semantic with rust (without security provided by ownership system), but the performance is different."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1543174763, "post_id": 53465843, "comment_id": 93812974, "body": "And how would you move an array in a C++ move constructor ? Use box for big thing."}], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 3, "creation_date": 1543136240, "post_id": 53465956, "comment_id": 93802725, "body": "Or pass the function an <code>&amp;mut f</code> and return nothing, which would be idiomatic in this case."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1543136988, "post_id": 53465956, "comment_id": 93802890, "body": "In this particular case, the move could actually be avoided. The variable <code>f</code> is created in the stack frame of <code>main()</code>, and the compiler could statically determine that it&#39;s not necessary to move it into the stack frame of <code>foo()</code>, since it will be copied back to its original location anyway. But even in a release build with <code>foo()</code> marked as <code>#[inline(always)]</code>, the compiler still unnecessarily copies the array twice."}, {"owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "edited": false, "score": 0, "creation_date": 1543137850, "post_id": 53465956, "comment_id": 93803077, "body": "I understand how it works. But the ownership provide more information for compiler, with these information we can use same part of memory without any secure problem . I think it&#39;s a big optimization in some case. But rust haven&#39;t done this ( but actually when the function is inlined, it will use the same memory without copy )."}, {"owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543138772, "post_id": 53465956, "comment_id": 93803276, "body": "@SvenMarnach  I think the ownership moving ensures the copy can be avoided. Is there any counterexample?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "edited": false, "score": 1, "creation_date": 1543148536, "post_id": 53465956, "comment_id": 93805415, "body": "@YangKeao Even when inlining the function, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=a8f90c085c74cbf7a2225af50ed8e6fe\" rel=\"nofollow noreferrer\">the copy does not seem to get elided</a>, but maybe that&#39;s because of taking the addresses, and wouldn&#39;t happen if we remove the <code>println</code> invocations? My understanding so far has been that Rust should be able to optimise that case."}, {"owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543150176, "post_id": 53465956, "comment_id": 93805832, "body": "@SvenMarnach After removing <code>println!</code> in <code>foo</code>,  I check the <code>llvm-ir</code> and find no copy. But not only taking address,  some operation on <code>f</code> such as <code>println!(&quot;{}&quot;,f.a[0])</code> will make it copy. The weird thing is that adding <code>f.a[0]=10000</code> (and remove print) in <code>foo</code>, it will also not copy. So I don&#39;t know when return by copy will happen :("}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "edited": false, "score": 2, "creation_date": 1543150763, "post_id": 53465956, "comment_id": 93805982, "body": "@YangKeao I guess these kinds of optimisations aren&#39;t meant as guarantees. If you want to guarantee that no copy is happening, pass around references of boxes instead."}, {"owner": {"reputation": 3318, "user_id": 2138090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tbCkJ.jpg?s=128&g=1", "display_name": "Olle H&#228;rstedt", "link": "https://stackoverflow.com/users/2138090/olle-h%c3%a4rstedt"}, "edited": false, "score": 0, "creation_date": 1616861768, "post_id": 53465956, "comment_id": 118138356, "body": "If move copy or not depends if it&#39;s a stack or heap allocation, no?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 3318, "user_id": 2138090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/tbCkJ.jpg?s=128&g=1", "display_name": "Olle H&#228;rstedt", "link": "https://stackoverflow.com/users/2138090/olle-h%c3%a4rstedt"}, "edited": false, "score": 0, "creation_date": 1616877750, "post_id": 53465956, "comment_id": 118142725, "body": "@OlleH&#228;rstedt No, it copies by default, and then the compiler tries to optimize the copy away."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 9, "last_activity_date": 1543139808, "last_edit_date": 1543139808, "creation_date": 1543135716, "answer_id": 53465956, "question_id": 53465843, "link": "https://stackoverflow.com/questions/53465843/why-does-move-in-rust-not-actually-move/53465956#53465956", "title": "Why does &quot;move&quot; in Rust not actually move?", "body": "<p>A move is a memcpy followed by treating the source as non-existent.</p>\n\n<p>Your big array is on the stack. That's just the way Rust's memory model works: local variables are on the stack. Since the stack space of <code>foo</code> is going away when the function returns, there's nothing else the compiler can do except copy the memory to <code>main</code>'s stack space.</p>\n\n<p>In some cases, the compiler can rearrange things so that the move can be elided (source and destination are merged into one thing), but this is an optimization that cannot be relied on, especially for big things.</p>\n\n<p>If you don't want to copy the huge array around, allocate it on the heap yourself, either via a <code>Box&lt;[u64]&gt;</code>, or simply by using <code>Vec&lt;u64&gt;</code>.</p>\n"}], "owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1012, "favorite_count": 6, "answer_count": 1, "score": 12, "last_activity_date": 1543150295, "creation_date": 1543134662, "last_edit_date": 1543150295, "question_id": 53465843, "link": "https://stackoverflow.com/questions/53465843/why-does-move-in-rust-not-actually-move", "title": "Why does &quot;move&quot; in Rust not actually move?", "body": "<p>In the below example:</p>\n\n<pre><code>struct Foo {\n    a: [u64; 100000],\n}\n\nfn foo(mut f: Foo) -&gt; Foo {\n    f.a[0] = 99999;\n    f.a[1] = 99999;\n    println!(\"{:?}\", &amp;mut f as *mut Foo);\n\n    for i in 0..f.a[0] {\n        f.a[i as usize] = 21444;\n    }\n\n    return f;\n}\nfn main(){\n    let mut f = Foo {\n        a:[0;100000]\n    };\n\n    println!(\"{:?}\", &amp;mut f as *mut Foo);\n    f = foo(f);\n    println!(\"{:?}\", &amp;mut f as *mut Foo);\n}\n</code></pre>\n\n<p>I find that before and after passing into the function <code>foo</code>, the address of <code>f</code> is different. Why does Rust copy such a big struct everywhere but not actually move it (or achieve this optimization)?</p>\n\n<p>I understand how stack memory works. But with the information provided by ownership in Rust, I think the copy can be avoided. The compiler unnecessarily copies the array twice. Can this be an optimization for the Rust compiler?</p>\n"}, {"tags": ["rust", "lifetime", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 1, "last_activity_date": 1543399677, "creation_date": 1543399677, "answer_id": 53516878, "question_id": 53465548, "link": "https://stackoverflow.com/questions/53465548/lifetime-issue-with-actix-web/53516878#53516878", "title": "Lifetime issue with Actix Web", "body": "<p>Look at the <a href=\"https://actix.rs/api/actix-web/stable/actix_web/struct.App.html#method.route\" rel=\"nofollow noreferrer\"><code>App::route</code> signature</a>:</p>\n\n<pre><code>pub fn route&lt;T, F, R&gt;(self, path: &amp;str, method: Method, f: F) -&gt; App&lt;S&gt; \nwhere\n    F: WithFactory&lt;T, S, R&gt;,\n    R: Responder + 'static,\n    T: FromRequest&lt;S&gt; + 'static,\n</code></pre>\n\n<p><code>F</code> generic depends on <code>T</code> and <code>R</code> that in turn have <code>'static</code> lifetime requirement.</p>\n\n<p>Your closure captures an <code>&amp;Addr&lt;CacheActor&gt;</code> that it is not valid for <code>'static</code> lifetime and this generates the error.</p>\n\n<p>A possibility that I see is to use the <code>App</code> \"State\", directly from the <a href=\"https://actix.rs/docs/application/\" rel=\"nofollow noreferrer\">docs</a>:</p>\n\n<blockquote>\n  <p>Application state is shared with all routes and resources within the same application. When using an http actor, state can be accessed with the HttpRequest::state() as read-only, but interior mutability with RefCell can be used to achieve state mutability. State is also available for route matching predicates and middlewares.</p>\n</blockquote>\n\n<p>In this case should be something like:</p>\n\n<pre><code>extern crate actix_web;\n\nuse actix_web::actix::{Actor, Addr, Context, System};\nuse actix_web::{http, server, App, HttpRequest, HttpResponse, Result};\nuse std::collections::HashMap;\nuse actix_web::dev::Handler;\n\n#[derive(Clone)]\npub struct CacheActor {\n    caches: HashMap&lt;String, String&gt;,\n}\n\nimpl CacheActor {\n    pub fn new() -&gt; Self {\n        CacheActor {\n            caches: HashMap::new(),\n        }\n    }\n}\n\nimpl Actor for CacheActor {\n    type Context = Context&lt;Self&gt;;\n}\n\nimpl&lt;S&gt; Handler&lt;S&gt; for CacheActor {\n    type Result = String;\n\n    fn handle(&amp;self, _req: &amp;HttpRequest&lt;S&gt;) -&gt; Self::Result {\n        unimplemented!();\n    }\n}\n\nfn list_resources(req: &amp;HttpRequest&lt;Addr&lt;CacheActor&gt;&gt;) -&gt; Result&lt;HttpResponse&gt; {\n    Ok(HttpResponse::Found()\n        .header(http::header::LOCATION, format!(\"hello {}\", req.path()))\n        .finish())\n}\n\nfn main() {\n    let system = System::new(\"Example\");\n\n    server::new(|| {\n        let cache_addr = CacheActor::new().start();\n        App::with_state(cache_addr)\n            .resource(\"/world\", |r| r.method(http::Method::GET).f(list_resources))\n    })\n    .bind(\"127.0.0.1:8080\")\n    .unwrap()\n    .run();\n\n    system.run();\n}\n</code></pre>\n"}], "owner": {"reputation": 1546, "user_id": 588611, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/f1ef7d612f498f57d5c1f6b82cf83d12?s=128&d=identicon&r=PG", "display_name": "Shulhi Sapli", "link": "https://stackoverflow.com/users/588611/shulhi-sapli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 697, "favorite_count": 0, "accepted_answer_id": 53516878, "answer_count": 1, "score": 1, "last_activity_date": 1543399677, "creation_date": 1543131391, "last_edit_date": 1543225694, "question_id": 53465548, "link": "https://stackoverflow.com/questions/53465548/lifetime-issue-with-actix-web", "title": "Lifetime issue with Actix Web", "body": "<p>I'm implementing middleware with Actix-web and having an issue with lifetime that I couldn't figure out.</p>\n\n<pre><code>extern crate actix_web;\n\nuse actix_web::actix::{Actor, Addr, Context, System};\nuse actix_web::middleware::Middleware;\nuse actix_web::{http, server, App, HttpRequest, Responder};\nuse std::collections::HashMap;\n\npub struct CacheActor {\n    caches: HashMap&lt;String, String&gt;,\n}\n\nimpl CacheActor {\n    pub fn new() -&gt; Self {\n        CacheActor {\n            caches: HashMap::new(),\n        }\n    }\n}\n\nimpl Actor for CacheActor {\n    type Context = Context&lt;Self&gt;;\n}\n\nfn create_resource(req: HttpRequest, addr: &amp;Addr&lt;CacheActor&gt;) -&gt; impl Responder {\n    unimplemented!();\n    format!(\"Unimplemented\")\n}\n\nfn list_resources(req: HttpRequest, addr: &amp;Addr&lt;CacheActor&gt;) -&gt; impl Responder {\n    unimplemented!();\n    format!(\"Unimplemented\")\n}\n\npub trait TusMiddlewareTrait {\n    fn with_tus(self, addr: &amp;Addr&lt;CacheActor&gt;) -&gt; App;\n}\n\nimpl TusMiddlewareTrait for App {\n    fn with_tus(self, addr: &amp;Addr&lt;CacheActor&gt;) -&gt; App {\n        self.route(\"/files\", http::Method::GET, |req| list_resources(req, addr))\n            .route(\"/files\", http::Method::POST, |req| {\n                create_resource(req, addr)\n            })\n    }\n}\n\nfn main() {\n    let system = System::new(\"Example\");\n    let cache_addr = CacheActor::new().start();\n\n    server::new(|| App::new().with_tus(&amp;cache_addr))\n        .bind(\"127.0.0.1:8080\")\n        .unwrap()\n        .run();\n\n    system.run();\n}\n</code></pre>\n\n<p>The error that I get is the following, </p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/tus/middleware.rs:84:49\n   |\n84 |             .route(\"/files\", http::Method::GET, |req| list_resources(req, addr))\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 81:5...\n  --&gt; src/tus/middleware.rs:81:5\n   |\n81 | /     fn with_tus(self, addr: &amp;actix::Addr&lt;cache::CacheActor&gt;) -&gt; App {\n82 | |         self.middleware(TusMiddleware)\n83 | |             .route(\"/files\", http::Method::OPTIONS, tus_information)\n84 | |             .route(\"/files\", http::Method::GET, |req| list_resources(req, addr))\n...  |\n87 | |             })\n88 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;actix::address::Addr&lt;tus::cache::CacheActor&gt;\n              found &amp;&amp;actix::address::Addr&lt;tus::cache::CacheActor&gt;\n   = note: but, the lifetime must be valid for the static lifetime...\n</code></pre>\n\n<p>As for what I understand, I am passing <code>cache_addr</code> as a reference to <code>with_tus</code> function. Inside each closure in <code>route</code>, <code>addr</code> is also a reference. </p>\n\n<p>I don't understand why the compiler said <code>the lifetime cannot outlive the anonymous lifetime #1</code>. From what I can tell is that <code>cache_addr</code>'s lifetime still outlives the closure. The lifetime should cover up until <code>system.run()</code> line. Can someone enlighten me?</p>\n\n<p><strong>Edit</strong>:</p>\n\n<p>I updated the code above to MCVE (at least to a point that it is simple enough to copy the whole code and run cargo build while still preserving the same error message). I can't run it on rust-playground. It doesn't support <code>actix</code> crate at this point. I tried reducing it further but it's giving me a different error. Sorry, I am pretty new to Rust.</p>\n\n<p>My questions are twofold, one I like to understand what's the error telling me. Second, I like to know how to properly do this with <code>actix</code> thus why the sample code is dependent on <code>actix</code>.</p>\n"}, {"tags": ["android", "rust", "java-native-interface"], "comments": [{"owner": {"reputation": 52300, "user_id": 192373, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/83a45711c4c32eeeb3826d279e50f8ab?s=128&d=identicon&r=PG", "display_name": "Alex Cohn", "link": "https://stackoverflow.com/users/192373/alex-cohn"}, "edited": false, "score": 0, "creation_date": 1543137964, "post_id": 53464954, "comment_id": 93803099, "body": "Did you set <code>extern &quot;C&quot;</code> for the function in your cpp source?"}, {"owner": {"reputation": 2106, "user_id": 7191047, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EWSwl.png?s=128&g=1", "display_name": "Danila Kiver", "link": "https://stackoverflow.com/users/7191047/danila-kiver"}, "edited": false, "score": 0, "creation_date": 1543146058, "post_id": 53464954, "comment_id": 93804814, "body": "The library seems to be OK, I don&#39;t see issues with name mangling. I would suggest moving <code>static</code> with <code>loadLibrary()</code> into the class with native methods (this is pretty common approach), and then try troubleshooting linkage with <code>java -verbose:jni</code>."}], "answers": [{"tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": true, "score": 1, "last_activity_date": 1543224673, "last_edit_date": 1543224673, "creation_date": 1543150413, "answer_id": 53467630, "question_id": 53464954, "link": "https://stackoverflow.com/questions/53464954/cannot-resolve-corresponding-jni-function-java-com-mozilla-greetings-rustgreetin/53467630#53467630", "title": "Cannot resolve corresponding JNI function Java_com_mozilla_greetings_RustGreetings_greeting", "body": "<p>I solved it using <code>JNA</code> whcih I think is slower than <code>JNI</code>, I'll write my solution below using <code>JNA</code> hoping someone provide the required fix using <code>JNI</code></p>\n\n<p>My app structure is as below, using <code>kotlin</code>:</p>\n\n<ul>\n<li>I added the <code>libjnidispatch.so</code> to each library build folder, , this can be obtained by extracted the requiredandroid architecture from <a href=\"https://github.com/java-native-access/jna/tree/4.5.0/dist\" rel=\"nofollow noreferrer\">here</a>, download the required jar, then extract it to get the <code>libjnidispatch.so</code></li>\n<li>I created interbface for <code>jna</code></li>\n</ul>\n\n<p>JNA.kt</p>\n\n<pre><code>package com.mozilla.greetings\n\nimport com.sun.jna.Library\n\n   interface JNA : Library {\n      fun rust_greeting(pattern: String): String\n   }\n</code></pre>\n\n<ol start=\"3\">\n<li><p>I created wrapper for jna, RustGreetings.kt:</p>\n\n<pre><code>package com.mozilla.greetings\n\nimport com.sun.jna.Native\n\nclass RustGreetings {\n\nfun sayHello(to: String): String =\n        Native.loadLibrary&lt;JNA&gt;(\"greetings\", JNA::class.java).rust_greeting(to)\n}\n</code></pre></li>\n<li><p>Main activity, GreetingsActivity.kt:</p>\n\n<pre><code>package com.mozilla.greetings\n\nimport android.support.v7.app.AppCompatActivity\nimport android.os.Bundle\nimport kotlinx.android.synthetic.main.activity_greetings.*\n\n\nclass GreetingsActivity : AppCompatActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_greetings)\n\n    val g = RustGreetings()\n    val r = g.sayHello(\"Rust\")\n    greetingField.text = r\n}\n\ncompanion object {\n    init {\n        System.loadLibrary(\"greetings\")\n    }\n}\n}\n</code></pre></li>\n</ol>\n\n<p>Note:\nIn order to avoid using <code>findViewById</code> I used kotlin extension, as explained <a href=\"https://medium.com/coding-blocks/goodbye-findviewbyid-say-hello-to-synthetic-binding-in-kotlin-d3727bd8438e\" rel=\"nofollow noreferrer\">here</a> and addeding the below to the <code>build.gradle</code> (module):</p>\n\n<pre><code>apply plugin: 'kotlin-android-extensions'\n</code></pre>\n\n<p> </p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>It looks it is an IDE issue nothing with the code, the app had been executed.\nI re-wrote it using Kotlin, and it was executed smoothly as well, below my kotlin code:</p>\n\n<p>GreetingsActivity.kt</p>\n\n<pre><code>package com.mozilla.greetings\n\nimport android.support.v7.app.AppCompatActivity\nimport android.os.Bundle\nimport kotlinx.android.synthetic.main.activity_greetings.*\n\nclass GreetingsActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_greetings)\n\n        val g = RustGreetings()\n        val r = g.sayHello(\"My Rust\")\n        greetingField.text = r\n    }\n\n    companion object {\n\n        init {\n            System.loadLibrary(\"greetings\")\n        }\n    }\n}\n</code></pre>\n\n<p>RustGreetings.kt</p>\n\n<pre><code>package com.mozilla.greetings\n\nclass RustGreetings {\n\n    private external fun greeting(pattern: String): String\n\n    fun sayHello(to: String): String = greeting(to)\n}\n</code></pre>\n\n<p>build.gradle</p>\n\n<pre><code>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android-extensions'\n\napply plugin: 'kotlin-android'\n\napply plugin: 'kotlin-android-extensions'\n\nandroid {\n    compileSdkVersion 28\n    defaultConfig {\n        applicationId \"com.mozilla.greetings\"\n        minSdkVersion 28\n        targetSdkVersion 28\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    implementation 'com.android.support:appcompat-v7:28.0.0'\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'com.android.support.test:runner:1.0.2'\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'\n}\n</code></pre>\n\n<p>activity_greetings.xml</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;android.support.constraint.ConstraintLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".GreetingsActivity\"&gt;\n\n    &lt;TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Hello World!\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" android:id=\"@+id/greetingField\"/&gt;\n\n&lt;/android.support.constraint.ConstraintLayout&gt;\n</code></pre>\n\n<p>Below structure and execution, , the apk is <a href=\"https://drive.google.com/open?id=1j5gru4XCsOT4JSIhohdlJeaH6_SqBlgg\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/24JqF.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/24JqF.png\" alt=\"enter image description here\"></a> </p>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 1, "accepted_answer_id": 53467630, "answer_count": 1, "score": 1, "last_activity_date": 1543224673, "creation_date": 1543124236, "question_id": 53464954, "link": "https://stackoverflow.com/questions/53464954/cannot-resolve-corresponding-jni-function-java-com-mozilla-greetings-rustgreetin", "title": "Cannot resolve corresponding JNI function Java_com_mozilla_greetings_RustGreetings_greeting", "body": "<p>I'm trying to replicate the <a href=\"https://mozilla.github.io/firefox-browser-architecture/experiments/2017-09-21-rust-on-android.html\" rel=\"nofollow noreferrer\">this</a> tutorial for building and using Rust lib in Android app, I build the library successful, and uploaded the generated libs <a href=\"https://drive.google.com/file/d/18_dmyrmA68upP1mEksHX7t3_J6l1c5-i/view?usp=sharing\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>The function required to be called by Android using the <code>Java_&lt;Package&gt;_Class_function</code> theme is:</p>\n\n<pre><code>Java_com_mozilla_greetings_RustGreetings_greeting\n</code></pre>\n\n<p>My android app structure is as below:</p>\n\n<p><a href=\"https://i.stack.imgur.com/R51BG.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/R51BG.png\" alt=\"enter image description here\"></a></p>\n\n<p>I'm getting the below error at my JNI wrapper:</p>\n\n<blockquote>\n  <p>Cannot resolve corresponding JNI function\n  Java_com_mozilla_greetings_RustGreetings_greeting</p>\n</blockquote>\n\n<p>The JNI wrapper is:</p>\n\n<pre><code>package com.mozilla.greetings;\n\npublic class RustGreetings {\n\n    private static native String greeting(final String pattern);\n\n    public String sayHello(String to) {\n        return greeting(to);\n    }\n}\n</code></pre>\n\n<p>And the main class is:</p>\n\n<pre><code>package com.mozilla.greetings;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.widget.TextView;\n\npublic class GreetingsActivity extends AppCompatActivity {\n\n    static {\n        System.loadLibrary(\"greetings\");\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_greetings);\n\n        RustGreetings g = new RustGreetings();\n        String r = g.sayHello(\"world\");\n        ((TextView) findViewById(R.id.greetingField)).setText(r);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 2, "last_activity_date": 1543100447, "creation_date": 1543100447, "answer_id": 53463115, "question_id": 53462729, "link": "https://stackoverflow.com/questions/53462729/problems-with-rust-lifetime-specifier/53463115#53463115", "title": "Problems with rust lifetime specifier", "body": "<p>The lifetime situation in your function parameters is this:</p>\n\n<pre><code>fn step&lt;'a&gt;(source: &amp;'a str,\n            state: &amp;mut Vec&lt;&amp;'a str&gt;)\n</code></pre>\n\n<p>Let's name the reference that doesn't have an explicit name on the lifetime:</p>\n\n<pre><code>fn step&lt;'a, 'x&gt;(source: &amp;'a str,\n                state: &amp;'x mut Vec&lt;&amp;'a str&gt;)\n</code></pre>\n\n<p>There, now all the references have explicit lifetimes and we can see that the configuration in the struct does not correspond to how they relate to each other in the function parameters.</p>\n\n<p>If your struct should follow the same relations we want this:</p>\n\n<pre><code>struct MyStruct&lt;'a: 'x, 'x&gt; {\n    pub source: &amp;'a str,\n    pub state: &amp;'x mut Vec&lt;&amp;'a str&gt;,\n}\n</code></pre>\n\n<p>And since this is a type definition, we need to add that relation that was implicit in the function that <code>'a: 'x</code> \u201c'a outlives 'x\u201d</p>\n\n<p>Keep in mind you also need to scope the borrow that the <code>s</code> variable of type MyStruct holds -- it borrows the state mutably (mutably means exclusively). So you need to insert scopes around the line with <code>let s = ..</code> and <code>f(s)</code> so that <code>s</code>'s scope ends before the next step call:</p>\n\n<pre><code>{\n    let s = MyStruct{source: source, state: state};\n    func(s);\n}\n</code></pre>\n"}], "owner": {"reputation": 358, "user_id": 6779860, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/ff36a0f95a85d0007359761b99e9ce12?s=128&d=identicon&r=PG&f=1", "display_name": "Volker Wei&#223;mann", "link": "https://stackoverflow.com/users/6779860/volker-wei%c3%9fmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 53463115, "answer_count": 1, "score": 3, "last_activity_date": 1543100447, "creation_date": 1543096851, "question_id": 53462729, "link": "https://stackoverflow.com/questions/53462729/problems-with-rust-lifetime-specifier", "title": "Problems with rust lifetime specifier", "body": "<p>Consider the following Program:</p>\n\n<pre><code>fn func(source: &amp;str, state: &amp; Vec&lt;&amp;str&gt;) {\n    println!(\"{}\", source);\n    println!(\"{}\", state[0]);\n}\nfn step&lt;'a&gt;(source: &amp;'a str, state: &amp;mut Vec&lt;&amp;'a str&gt;) {\n    state.push(&amp;source[4..10]);\n    func(source, state);\n    state.push(&amp;source[4..10]);\n}\nfn main() {\n    let source = \"abcdefghijklmnopqrstuvwxyz\";\n    {\n        let mut state = Vec::&lt;&amp;str&gt;::new();\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n    }\n}\n</code></pre>\n\n<p>This compiles and runs without errors. I can totally understand why the lifetime specifier 'a is needed here, because otherwise you could run:</p>\n\n<pre><code>fn main() {\n    let mut state = Vec::&lt;&amp;str&gt;::new();\n    {\n        let source = \"abcdefghijklmnopqrstuvwxyz\";\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n    }\n    println!(\"{}\", state[0]);\n}\n</code></pre>\n\n<p>which would result in undefined output. My problem is that I want to pack both arguments of \"func\" into a structure, but I can't make this work:</p>\n\n<pre><code>struct MyStruct&lt;'a, 'b&gt; {\n    pub source: &amp;'a str,\n    pub state: &amp;'b mut Vec&lt;&amp;'b str&gt;,\n}\nfn func(arg: MyStruct) {\n    println!(\"{}\", arg.source);\n    println!(\"{}\", arg.state[0]);\n}\nfn step&lt;'a&gt;(source: &amp;'a str,\n            state: &amp;mut Vec&lt;&amp;'a str&gt;) {\n    state.push(&amp;source[4..10]);\n    let s = MyStruct{source: source, state: state};\n    func(s);\n    state.push(&amp;source[4..10]);\n}\nfn main() {\n    let source = \"abcdefghijklmnopqrstuvwxyz\";\n    {\n        let mut state = Vec::&lt;&amp;str&gt;::new();\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n        step(source, &amp;mut state);\n    }\n}\n</code></pre>\n\n<p>The code above does not compile with the error message:</p>\n\n<pre><code>107 |             state: &amp;mut Vec&lt;&amp;'a str&gt;) {\n    |             ----- consider changing the type of `state` to `&amp;'a mut std::vec::Vec&lt;&amp;'a str&gt;`\n108 |     state.push(&amp;source[4..10]);\n109 |     let s = MyStruct{source: source, state: state};\n    |                                             ^^^^^ lifetime `'a` required\n</code></pre>\n\n<p>If I change the state of state to &amp;'a mut Vec&lt;&amp;'a str>, the build failes with the following message:</p>\n\n<pre><code>117 |         step(source, &amp;mut state);\n    |                           ----- first mutable borrow occurs here\n118 |         step(source, &amp;mut state);\n    |                           ^^^^^ second mutable borrow occurs here\n119 |         step(source, &amp;mut state);\n120 |     }\n    |     - first borrow ends here\n</code></pre>\n\n<p>I would be thankful if anyone could tell me how to make this work.</p>\n\n<p>Note: In this example program, \"source\" is a String with static lifetime. In the \"real\" program \"source\" does not have a static lifetime, but the content of a file that the program reads during runtime. \"source\" lives as long or longer than \"state\"</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1543111439, "post_id": 53462653, "comment_id": 93799187, "body": "What are the crates (and versions thereof) that you are using? Please take a look at how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and edit your question so that people can easily run your code and see the same results."}], "answers": [{"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1543114569, "post_id": 53464243, "comment_id": 93799584, "body": "I believe this is only available in nightly as well, for reference."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1543115379, "post_id": 53464243, "comment_id": 93799696, "body": "@jhpratt I think OP must be using nightly to have gotten this far... I will add a note though."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1543124450, "post_id": 53464243, "comment_id": 93800896, "body": "I believe that as well. I&#39;m just stating that for others that may come across it."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1543115383, "last_edit_date": 1543115383, "creation_date": 1543114248, "answer_id": 53464243, "question_id": 53462653, "link": "https://stackoverflow.com/questions/53462653/why-does-the-rust-compiler-not-convert-from-a-library-error-to-my-error-using-th/53464243#53464243", "title": "Why does the Rust compiler not convert from a library error to my error using the From trait?", "body": "<blockquote>\n  <p>I don't understand what the <code>From&lt;!&gt;</code> trait is and trying to implement something like that gives an error for unnamed types.</p>\n</blockquote>\n\n<p><code>!</code> is the <a href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\" rel=\"nofollow noreferrer\">\"never\"</a> or <em>uninhabited</em> type; the type that has no possible values.</p>\n\n<p>If a <code>Result</code> has <code>!</code> for its error type, that means the operation cannot fail. It is impossible to convert from it to some other error type, because an error value cannot exist in the first place.</p>\n\n<p>The never type is currently an experimental feature, requiring a nightly build of Rust. As such, it likely has a few rough edges, and it isn't as ergonomic as it could be. For example, I would expect the final feature to provide a blanket <code>From&lt;T&gt;</code> implementation for all types that implement <code>TryFrom&lt;T&gt;</code> with associated type <code>Error = !</code>. It should be made easy to not have to handle the error that can't happen.</p>\n\n<p>To fix your immediate problem, you can map that error to <code>unreachable!()</code>. The only issue with that approach is forwards-compatibility - if the third party crate later introduces a reachable error then your code would have an unhandled error, and no compile-time error to protect you. That's probably a part of why <code>!</code> is not yet stabilised.</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 53464243, "answer_count": 1, "score": 0, "last_activity_date": 1543115383, "creation_date": 1543096054, "last_edit_date": 1543114333, "question_id": 53462653, "link": "https://stackoverflow.com/questions/53462653/why-does-the-rust-compiler-not-convert-from-a-library-error-to-my-error-using-th", "title": "Why does the Rust compiler not convert from a library error to my error using the From trait?", "body": "<p>Given this crate referencing an error from another crate, I would normally write a <code>From</code> implementation to convert types.</p>\n\n<pre><code>use xladd::variant::{Variant, XLAddError};\nuse failure::Fail;\nuse std::convert::TryInto;\nuse std::convert::From;\nuse std::error::Error;\n\n#[derive(Debug, Fail)]\nenum AARCError {\n    #[fail(display = \"F64 Conversion failure\")]\n    ExcelF64ConversionError,\n    #[fail(display = \"Bool Conversion failure\")]\n    ExcelBoolConversionError,\n    #[fail(display = \"Conversion failure\")]\n    ExcelStrConversionError,\n}\n\nimpl From&lt;XLAddError&gt; for AARCError {\n    fn from(err: XLAddError) -&gt; Self {\n        AARCError::ExcelF64ConversionError // Test for now\n    }\n}\n\npub fn normalize(array: Variant, min: Variant, max: Variant, scale: Variant) -&gt; Result&lt;Variant, AARCError&gt; {\n    let min: f64 = min.try_into().map_err(|e| AARCError::from(e))?;\n    Ok(Variant::from_str(\"foo\"))\n}\n</code></pre>\n\n<p>But in this case I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `basic_stats::AARCError: std::convert::From&lt;!&gt;` is not satisfied\n  --&gt; src\\basic_stats.rs:24:48\n   |\n24 |     let min: f64 = min.try_into().map_err(|e| AARCError::from(e))?;\n   |                                               ^^^^^^^^^^^^^^^ the trait `std::convert::From&lt;!&gt;` is not implemented for `basic_stats::AARCError`\n   |\n   = help: the following implementations were found:\n             &lt;basic_stats::AARCError as std::convert::From&lt;xladd::variant::XLAddError&gt;&gt;\n   = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>I don't understand what the <code>From&lt;!&gt;</code> trait is and trying to implement something like that gives an error for unnamed types.</p>\n\n<p>What should I be doing to enable Rust to convert the external crate's errors to my ones?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 5, "creation_date": 1543071689, "post_id": 53459215, "comment_id": 93790473, "body": "I&#39;d use <code>lines()</code> instead of <code>split(&#39;\\n&#39;)</code>"}], "tags": [], "owner": {"reputation": 202, "user_id": 6180554, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Hrvu_iz-_ks/AAAAAAAAAAI/AAAAAAAAAB0/ogWbvUPcaks/photo.jpg?sz=128", "display_name": "lightsing", "link": "https://stackoverflow.com/users/6180554/lightsing"}, "is_accepted": true, "score": 3, "last_activity_date": 1543071760, "last_edit_date": 1543071760, "creation_date": 1543070018, "answer_id": 53459215, "question_id": 53459167, "link": "https://stackoverflow.com/questions/53459167/how-to-split-a-string-multiple-times-in-rust/53459215#53459215", "title": "How to split a string multiple times in Rust?", "body": "<p>This will work.</p>\n\n<pre><code>fn main() {\n    let string: Vec&lt;Vec&lt;&amp;str&gt;&gt; = \"1 foo\\n2 bar\\n3 foobar\".split('\\n')\n        .map(|x: &amp;str| x.split(' ').collect())\n        .collect();\n    println!(\"{:?}\", string);\n}\n</code></pre>\n"}], "owner": {"reputation": 202, "user_id": 6180554, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Hrvu_iz-_ks/AAAAAAAAAAI/AAAAAAAAAB0/ogWbvUPcaks/photo.jpg?sz=128", "display_name": "lightsing", "link": "https://stackoverflow.com/users/6180554/lightsing"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 515, "favorite_count": 0, "accepted_answer_id": 53459215, "answer_count": 1, "score": 2, "last_activity_date": 1543159764, "creation_date": 1543069725, "last_edit_date": 1543159764, "question_id": 53459167, "link": "https://stackoverflow.com/questions/53459167/how-to-split-a-string-multiple-times-in-rust", "title": "How to split a string multiple times in Rust?", "body": "<p>With a string like <code>\"1 foo\\n2 bar\\n3 foobar\"</code>, how do I split it into:</p>\n\n<pre><code>[[\"1\", \"foo\"], [\"2\", \"bar\"] [\"3\", \"foobar\"]]\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7395, "user_id": 12386, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d6bf42c0a4a007ad5fd75a01918d1945?s=128&d=identicon&r=PG", "display_name": "stu", "link": "https://stackoverflow.com/users/12386/stu"}, "edited": false, "score": 0, "creation_date": 1584497521, "post_id": 53459260, "comment_id": 107452702, "body": "This is what I ended up having to do, it makes sense, but seems silly at first...    let ptr: *mut u8 = &amp;op_create as *const control_operation as *const u8 as *mut u8;"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 7395, "user_id": 12386, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d6bf42c0a4a007ad5fd75a01918d1945?s=128&d=identicon&r=PG", "display_name": "stu", "link": "https://stackoverflow.com/users/12386/stu"}, "edited": false, "score": 0, "creation_date": 1584523198, "post_id": 53459260, "comment_id": 107459317, "body": "@stu If you want to save some typing, and some irrelevant noise for people reading the code, you should also be able to use <code>&amp;op_create as *const _ as *const _ as *mut u8</code>."}, {"owner": {"reputation": 7395, "user_id": 12386, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d6bf42c0a4a007ad5fd75a01918d1945?s=128&d=identicon&r=PG", "display_name": "stu", "link": "https://stackoverflow.com/users/12386/stu"}, "edited": false, "score": 0, "creation_date": 1584544617, "post_id": 53459260, "comment_id": 107470282, "body": "interesting, it doesn&#39;t care what type you&#39;re coercing or casting to, just that you&#39;re casting to the const vs mut of it. neato thanks."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 7395, "user_id": 12386, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/d6bf42c0a4a007ad5fd75a01918d1945?s=128&d=identicon&r=PG", "display_name": "stu", "link": "https://stackoverflow.com/users/12386/stu"}, "edited": false, "score": 0, "creation_date": 1584546270, "post_id": 53459260, "comment_id": 107471073, "body": "The underscore tells the compiler to infer the type. There is only one valid type for each of these underscores, so we don&#39;t need to spell it out."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 5, "last_activity_date": 1543070392, "creation_date": 1543070392, "answer_id": 53459260, "question_id": 53458784, "link": "https://stackoverflow.com/questions/53458784/why-is-casting-a-const-reference-directly-to-a-mutable-reference-invalid-in-rust/53459260#53459260", "title": "Why is casting a const reference directly to a mutable reference invalid in Rust?", "body": "<p>The superficial answer to the question \"why?\" is that these simply are the rules of <code>as</code> expressions in Rust. Quoting from the <a href=\"https://doc.rust-lang.org/nomicon/casts.html\" rel=\"noreferrer\">Nomicon</a>:</p>\n\n<blockquote>\n  <p>Casting is not transitive, that is, even if <code>e as U1 as U2</code> is a valid\n  expression, <code>e as U2</code> is not necessarily so.</p>\n</blockquote>\n\n<p>With the <code>as</code> operator, you can either perform explicit <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"noreferrer\"><em>coercions</em></a> or <a href=\"https://doc.rust-lang.org/nomicon/casts.html\" rel=\"noreferrer\"><em>casts</em></a>.</p>\n\n<p>There is neither a cast nor a coercion to go directly from <code>&amp;u8</code> to <code>*mut u8</code>. However, there is a <em>pointer weakening coercion</em> from <code>&amp;T</code> to <code>*const T</code> and a <em>cast</em> from a pointer to a sized type to any other. The combination of the two results in the expression in your question.</p>\n\n<p>The deeper question is why the language was designed this way. I don't actually know, since I wasn't in the room when these decisions were made, and I couldn't find a rationale on the web. Rust in general tries to be very explicit with type casts, to avoid conversions that weren't actually intended and to keep the rules simple. These princilpes seem to have influenced this particular design decision as well.</p>\n"}], "owner": {"reputation": 95, "user_id": 8564979, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/7ddfb7151d9a693337d8183e1754c054?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/8564979/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1434, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1543159682, "creation_date": 1543067232, "last_edit_date": 1543159682, "question_id": 53458784, "link": "https://stackoverflow.com/questions/53458784/why-is-casting-a-const-reference-directly-to-a-mutable-reference-invalid-in-rust", "title": "Why is casting a const reference directly to a mutable reference invalid in Rust?", "body": "<p>This piece of code is correct:</p>\n\n<pre><code>fn f() {\n    let mut x = 11;\n    b(&amp;x as *const u8 as *mut u8);\n}\n\nfn b(x: *mut u8) {}\n</code></pre>\n\n<p>Why is <code>b(&amp;x as *const u8 as *mut u8)</code> is valid whereas <code>b(&amp;x as *mut u8)</code> is invalid? The compiler complains about: </p>\n\n<blockquote>\n  <p>error[E0606]: casting <code>&amp;u8</code> as <code>*mut u8</code> is invalid</p>\n</blockquote>\n"}, {"tags": ["asynchronous", "rust", "future", "shutdown", "rust-tokio"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1543090255, "post_id": 53458755, "comment_id": 93795297, "body": "Not familiar enough with Tokio or signal handling to answer, but there&#39;s a <a href=\"https://github.com/tokio-rs/tokio/tree/master/tokio-signal\" rel=\"nofollow noreferrer\"><code>tokio_signal</code></a> library in the main Tokio repo - perhaps that&#39;s one piece of the puzzle?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543160181, "post_id": 53458755, "comment_id": 93808621, "body": "Based on your question&#39;s construction, an answer that shows how to do this without involving <code>SIGTERM</code> would not be accepted, correct?"}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "edited": false, "score": 0, "creation_date": 1543168189, "post_id": 53458755, "comment_id": 93810972, "body": "Afaik, Linux server applications are usually stopped with an OS signal like SIGTERM (if you use systemctl or service) or SIGINT (from the terminal if it is running in one), so it is an idiomatic way. Therefore, signal handling is strongly preferred. Maybe it has something to do with the Runtime&#39;s shutdown_on_idle method, but I have no idea how to call it after handling a signal"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 10, "last_activity_date": 1543346467, "last_edit_date": 1543346467, "creation_date": 1543342492, "answer_id": 53505771, "question_id": 53458755, "link": "https://stackoverflow.com/questions/53458755/how-do-i-gracefully-shutdown-the-tokio-runtime-in-response-to-a-sigterm/53505771#53505771", "title": "How do I gracefully shutdown the Tokio runtime in response to a SIGTERM?", "body": "<p>Dealing with signals is tricky and it would be too broad to explain how to handle all possible cases. The implementation of signals is not standard across platforms, so my answer is specific to Linux. If you want to be more cross-platform, use the POSIX function <code>sigaction</code> combined with <code>pause</code>; this will offer you more control.</p>\n\n<p>One way to achieve what you want is to use the <a href=\"https://crates.io/crates/tokio-signal\" rel=\"noreferrer\">tokio_signal</a> crate to catch signals, like this: <a href=\"https://github.com/tokio-rs/tokio/blob/master/tokio-signal/examples/multiple.rs\" rel=\"noreferrer\">(doc example)</a></p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\nextern crate tokio_signal;\n\nuse futures::prelude::*;\nuse futures::Stream;\nuse std::time::{Duration, Instant};\nuse tokio_signal::unix::{Signal, SIGINT, SIGTERM};\n\nfn main() -&gt; Result&lt;(), Box&lt;::std::error::Error&gt;&gt; {\n    let mut runtime = tokio::runtime::Runtime::new()?;\n\n    let sigint = Signal::new(SIGINT).flatten_stream();\n    let sigterm = Signal::new(SIGTERM).flatten_stream();\n\n    let stream = sigint.select(sigterm);\n\n    let deadline = tokio::timer::Delay::new(Instant::now() + Duration::from_secs(5))\n        .map(|()| println!(\"5 seconds are over\"))\n        .map_err(|e| eprintln!(\"Failed to wait: {}\", e));\n\n    runtime.spawn(deadline);\n\n    let (item, _rest) = runtime\n        .block_on_all(stream.into_future())\n        .map_err(|_| \"failed to wait for signals\")?;\n\n    let item = item.ok_or(\"received no signal\")?;\n    if item == SIGINT {\n        println!(\"received SIGINT\");\n    } else {\n        assert_eq!(item, SIGTERM);\n        println!(\"received SIGTERM\");\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>This program will wait for all current tasks to complete and will catch the selected signals. This doesn't seem to work on Windows as it instantly shuts down the program.</p>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2862, "favorite_count": 2, "accepted_answer_id": 53505771, "answer_count": 1, "score": 8, "last_activity_date": 1543346467, "creation_date": 1543067008, "last_edit_date": 1543159539, "question_id": 53458755, "link": "https://stackoverflow.com/questions/53458755/how-do-i-gracefully-shutdown-the-tokio-runtime-in-response-to-a-sigterm", "title": "How do I gracefully shutdown the Tokio runtime in response to a SIGTERM?", "body": "<p>I have a <code>main</code> function, where I create a Tokio runtime and run two futures on it.</p>\n\n<pre><code>use tokio;\n\nfn main() {\n    let mut runtime = tokio::runtime::Runtime::new().unwrap();\n\n    runtime.spawn(MyMegaFutureNumberOne {});\n    runtime.spawn(MyMegaFutureNumberTwo {});\n\n    // Some code to 'join' them after receiving an OS signal\n}\n</code></pre>\n\n<p>How do I receive a <code>SIGTERM</code>, wait for all unfinished tasks (<code>NotReady</code>s) and exit the application?</p>\n"}, {"tags": ["postgresql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543159451, "post_id": 53456457, "comment_id": 93808393, "body": "<i>after some environment variable issues</i> \u2014 you most likely still have these issues. For example, do you have multiple versions of Postgres installed? Be sure that you&#39;ve configured whatever environment you are running <code>diesel.exe</code> in to be the same as the environment in which you built it."}, {"owner": {"reputation": 171, "user_id": 4527149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/856fd73864b4464722ebe2a10f2d6c79?s=128&d=identicon&r=PG&f=1", "display_name": "CdVr", "link": "https://stackoverflow.com/users/4527149/cdvr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1543257353, "post_id": 53456457, "comment_id": 93843828, "body": "Actually the problem was with the postgres version and not with the environment variables it seems, which has been resolved. Thanks a lot for your response @Shepmaster. Please accept the answer if you think it would help someone in future."}], "answers": [{"tags": [], "owner": {"reputation": 171, "user_id": 4527149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/856fd73864b4464722ebe2a10f2d6c79?s=128&d=identicon&r=PG&f=1", "display_name": "CdVr", "link": "https://stackoverflow.com/users/4527149/cdvr"}, "is_accepted": false, "score": 0, "last_activity_date": 1543257259, "creation_date": 1543257259, "answer_id": 53487097, "question_id": 53456457, "link": "https://stackoverflow.com/questions/53456457/ordinal-not-found-when-running-the-diesel-cli-tool/53487097#53487097", "title": "&quot;Ordinal Not Found&quot; when running the Diesel CLI tool", "body": "<p>Actually the issue was the postgreSQL version.\nAFAIK, Postgres 11 is not compatible for diesel setup. Even if i had libpq.dll in lib folder of my postgres/11/lib folder structure. It throws the \"pictured\" error in the question.</p>\n\n<p>Then, i tried uninstalling the postgres version 11.1 and installed the Postgres 10.6 version it works smoothly.</p>\n\n<p><strong>Note: After postgres install dn't forget to set environment variables</strong></p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 11182172, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-hXZzyjnclDc/AAAAAAAAAAI/AAAAAAAAAI8/DukqWgcK2Cg/photo.jpg?sz=128", "display_name": "Brian Meek", "link": "https://stackoverflow.com/users/11182172/brian-meek"}, "is_accepted": false, "score": 1, "last_activity_date": 1552626257, "last_edit_date": 1552626257, "creation_date": 1552620905, "answer_id": 55175174, "question_id": 53456457, "link": "https://stackoverflow.com/questions/53456457/ordinal-not-found-when-running-the-diesel-cli-tool/55175174#55175174", "title": "&quot;Ordinal Not Found&quot; when running the Diesel CLI tool", "body": "<p>I experienced the same error. </p>\n\n<p>When I dug into it I found that I had a incompatible version of <code>ssleay32.dll</code> on my system path as part of the Intel Wifi drivers. </p>\n\n<p>In my case this was in <code>C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\iCLS</code>. Removing this from my system path fixed the issue.</p>\n"}], "owner": {"reputation": 171, "user_id": 4527149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/856fd73864b4464722ebe2a10f2d6c79?s=128&d=identicon&r=PG&f=1", "display_name": "CdVr", "link": "https://stackoverflow.com/users/4527149/cdvr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 523, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1552626257, "creation_date": 1543047927, "last_edit_date": 1543159355, "question_id": 53456457, "link": "https://stackoverflow.com/questions/53456457/ordinal-not-found-when-running-the-diesel-cli-tool", "title": "&quot;Ordinal Not Found&quot; when running the Diesel CLI tool", "body": "<p>I tried to install <code>diesel_cli</code> and after some environment variable issues I installed it successfully.</p>\n\n<p>When I tried to setup Diesel for my project, it throws an error:</p>\n\n<blockquote>\n  <p>diesel.exe - Ordinal Not Found</p>\n  \n  <p>The ordinal 4701 could not be located in the dynamic link library \"C:\\Program Files\\PostgreSQL\\11\\lib\\LIBPQ.dll.\"</p>\n</blockquote>\n\n<p><img src=\"https://i.stack.imgur.com/Vb8Pm.png\" alt=\"error message dialog\"></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543014950, "post_id": 53453628, "comment_id": 93780193, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/44552219/how-to-multiply-divide-add-subtract-numbers-of-different-types\">How to multiply/divide/add/subtract numbers of different types?</a>"}, {"owner": {"reputation": 1229, "user_id": 3106795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0ee4c3cf4148a2c31d129965e86d6ad4?s=128&d=identicon&r=PG", "display_name": "Alexey", "link": "https://stackoverflow.com/users/3106795/alexey"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1543015155, "post_id": 53453628, "comment_id": 93780234, "body": "@E_net4iskindandwelcoming the linked question is more about floats vs integers, not mixed signedness"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1543015518, "post_id": 53453628, "comment_id": 93780291, "body": "The intuition, as well as the course of action, are the same. Arithmetic between integers of mixed signedness is tricky, and could have odd results if the compiler just chose an unexpected conversion ruleset (this is the case for C and C++). Just use the <code>from</code> associated function if the conversion is lossless (e.g. <code>i16::from(y)</code>) and the <code>as</code> operator otherwise."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1543016386, "post_id": 53453628, "comment_id": 93780440, "body": "<code>x = x.wrapping_add(y as u16);</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543016664, "post_id": 53453628, "comment_id": 93780486, "body": "Or better yet, <code>x.wrapping_add(i16::from(y))</code>, to conform with the <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless\" rel=\"nofollow noreferrer\"><code>cast_lossless</code></a> Clippy lint."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1543069253, "post_id": 53453628, "comment_id": 93789768, "body": "See also <a href=\"https://www.reddit.com/r/rust/comments/3mcwf7/adding_unsigned_and_signed_integers/\" rel=\"nofollow noreferrer\">this Reddit thread on the topic</a>, which discusses how to add an <code>isize</code> and a <code>usize</code>. The only way to get this right in all cases appears to be <code>(if signed &lt; 0 { unsigned - (-signed) as usize } else { unsigned + signed as usize })</code>."}, {"owner": {"reputation": 1229, "user_id": 3106795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0ee4c3cf4148a2c31d129965e86d6ad4?s=128&d=identicon&r=PG", "display_name": "Alexey", "link": "https://stackoverflow.com/users/3106795/alexey"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543759514, "post_id": 53453628, "comment_id": 94025339, "body": "@E_net4iskindandwelcoming, <code>x.wrapping_add(i16::from(y))</code> results in <code>expected u16, found i16 [E0308]</code>, as it&#39;s still adding a signed and an unsigned int together"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1543761585, "post_id": 53453628, "comment_id": 94025907, "body": "Yes, you&#39;d need to convert <code>x</code> as well. My comments were more focused on the existence of multiple numeric conversion methods."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1543043892, "post_id": 53455823, "comment_id": 93784177, "body": "I would not recommend doing this, but instead using the next, higher, signed value instead (in this case <code>i32</code>) and add them."}, {"owner": {"reputation": 1229, "user_id": 3106795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0ee4c3cf4148a2c31d129965e86d6ad4?s=128&d=identicon&r=PG", "display_name": "Alexey", "link": "https://stackoverflow.com/users/3106795/alexey"}, "edited": false, "score": 0, "creation_date": 1543079673, "post_id": 53455823, "comment_id": 93792572, "body": "Thank you, I forgot that that Rust panics on unsigned overflow, not just on signed."}, {"owner": {"reputation": 17700, "user_id": 50902, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/19d468858e7d32da4a5bb6e49394fd52?s=128&d=identicon&r=PG", "display_name": "kmkaplan", "link": "https://stackoverflow.com/users/50902/kmkaplan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1543133240, "post_id": 53455823, "comment_id": 93802178, "body": "@hellow care to elaborate? First this seem much more complicated and error prone, and secondly at some point (<code>u128</code>) you just can&#39;t."}], "tags": [], "owner": {"reputation": 17700, "user_id": 50902, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/19d468858e7d32da4a5bb6e49394fd52?s=128&d=identicon&r=PG", "display_name": "kmkaplan", "link": "https://stackoverflow.com/users/50902/kmkaplan"}, "is_accepted": true, "score": 4, "last_activity_date": 1543042215, "last_edit_date": 1543042215, "creation_date": 1543041689, "answer_id": 53455823, "question_id": 53453628, "link": "https://stackoverflow.com/questions/53453628/how-do-i-add-a-signed-integer-to-an-unsigned-integer-in-rust/53455823#53455823", "title": "How do I add a signed integer to an unsigned integer in Rust?", "body": "<ul>\n<li>Signed integers are twos complement</li>\n<li>numeric cast sign extends an <code>i8 as u16</code></li>\n</ul>\n\n<p>That means you can cast <code>y as u16</code> it will turn into a twos complement value that a wrapping_add will rightfully handle if <code>y</code> was negative.</p>\n\n<p>In short: do as @Veedrac said.</p>\n\n<pre><code>fn main() {\n    let mut x: u16 = 100;\n    let y: i8 = -1;\n    x = x.wrapping_add(y as u16);\n    println!(\"{}\", x);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 0, "last_activity_date": 1543239511, "last_edit_date": 1543239511, "creation_date": 1543179359, "answer_id": 53471892, "question_id": 53453628, "link": "https://stackoverflow.com/questions/53453628/how-do-i-add-a-signed-integer-to-an-unsigned-integer-in-rust/53471892#53471892", "title": "How do I add a signed integer to an unsigned integer in Rust?", "body": "<blockquote>\n  <p>In the real program <code>y</code> is calculated to change the index pointing into a 64K array , and wraparound is the desired behavior)</p>\n</blockquote>\n\n<p>There is no consensus of how things should be done, but here's my advice: Provide to the user two functions:</p>\n\n<pre><code>fn add(&amp;mut self, index: u16) -&gt; u16 { // return previous index why not\n    // ..\n}\n\nfn sub(&amp;mut self, index: u16) -&gt; u16 {\n    // ..\n}\n</code></pre>\n\n<p>You could also add a helper function that should not be used lightly:</p>\n\n<pre><code>fn offset(&amp;mut self, offset: i16) -&gt; u16 {\n    // ..\n}\n</code></pre>\n\n<p>The purpose is that the user should know whenever use sub or add, the user should manage only unsigned type. That question is opinion oriented so I understand if people don't agree.</p>\n\n<p>Full example:</p>\n\n<pre><code>use std::mem;\n\n#[derive(Debug, PartialEq, PartialOrd)]\nstruct MyIndex {\n    index: u16,\n}\n\nimpl MyIndex {\n    fn new(index: u16) -&gt; Self {\n        Self { index }\n    }\n\n    fn add(&amp;mut self, index: u16) -&gt; u16 {\n        let index = self.index.wrapping_add(index);\n        self.replace(index)\n    }\n\n    fn sub(&amp;mut self, index: u16) -&gt; u16 {\n        let index = self.index.wrapping_sub(index);\n        self.replace(index)\n    }\n\n    fn offset(&amp;mut self, offset: i16) -&gt; u16 {\n        if offset &gt; 0 {\n            self.add(offset as u16)\n        } else {\n            self.sub(offset as u16)\n        }\n    }\n\n    fn replace(&amp;mut self, index: u16) -&gt; u16 {\n        mem::replace(&amp;mut self.index, index)\n    }\n}\n\nfn main() {\n    let mut index = MyIndex::new(42);\n\n    let mut other_index = MyIndex::new(84);\n\n    let (x, first) = if index &gt; other_index {\n        (index.index - other_index.index, true)\n    }\n    else {\n        (other_index.index - index.index, false)\n    };\n\n    // ...\n\n    if first {\n        index.sub(x);\n    }\n    else {\n        other_index.sub(x);\n    }\n    println!(\"{:?} {:?}\", index, other_index);\n\n    index.sub(21);\n    println!(\"{:?}\", index);\n\n    index.offset(-1);\n    println!(\"{:?}\", index);\n}\n</code></pre>\n"}], "owner": {"reputation": 1229, "user_id": 3106795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0ee4c3cf4148a2c31d129965e86d6ad4?s=128&d=identicon&r=PG", "display_name": "Alexey", "link": "https://stackoverflow.com/users/3106795/alexey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2075, "favorite_count": 0, "accepted_answer_id": 53455823, "answer_count": 2, "score": 4, "last_activity_date": 1543239511, "creation_date": 1543013195, "question_id": 53453628, "link": "https://stackoverflow.com/questions/53453628/how-do-i-add-a-signed-integer-to-an-unsigned-integer-in-rust", "title": "How do I add a signed integer to an unsigned integer in Rust?", "body": "<p>Do I have to branch on the sign of the signed integer, like in the example below? (In the real program <code>y</code> is calculated to change the index pointing into a 64K array, and wraparound is the desired behavior)</p>\n\n<pre><code>fn main() {\n    let mut x: u16 = 100;\n    let y: i8 = -1;\n    //x += y;\n    if y &lt; 0 {\n        x -= i8::abs(y) as u16;\n    } else {\n        x += i8::abs(y) as u16;\n    }\n    println!(\"{}\", x);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1543014338, "post_id": 53453128, "comment_id": 93780073, "body": "Heavily related: <a href=\"https://stackoverflow.com/q/28225958/1233251\">stackoverflow.com/q/28225958/1233251</a>"}], "answers": [{"comments": [{"owner": {"reputation": 319, "user_id": 495026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7065b4130cadb4e8cb1b142b56b5a3c?s=128&d=identicon&r=PG", "display_name": "bm842", "link": "https://stackoverflow.com/users/495026/bm842"}, "edited": false, "score": 0, "creation_date": 1543038725, "post_id": 53453276, "comment_id": 93783403, "body": "Thanks for your answer. I thought only &#39;_&#39; was accepted as the default arm but it seems not. I can even add more &quot;whatever_identifier&quot; cases without the compiler to complain (except warnings)."}, {"owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "edited": false, "score": 4, "creation_date": 1543046463, "post_id": 53453276, "comment_id": 93784647, "body": "Any implicitly typed, unconstrained identifier can match any value."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 4, "last_activity_date": 1543009793, "creation_date": 1543009793, "answer_id": 53453276, "question_id": 53453128, "link": "https://stackoverflow.com/questions/53453128/why-does-a-match-expression-with-an-unknown-identifier-compile-and-run/53453276#53453276", "title": "Why does a match expression with an unknown identifier compile and run?", "body": "<p>Your example is a special case of something explained <a href=\"https://doc.rust-lang.org/1.5.0/book/match.html\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre><code>let x = 5;\n\nlet number = match x {\n    1 =&gt; \"one\",\n    2 =&gt; \"two\",\n    3 =&gt; \"three\",\n    4 =&gt; \"four\",\n    5 =&gt; \"five\",\n    _ =&gt; \"something else\",\n};\n</code></pre>\n\n<p>Consider the last case (<code>_</code>), which matches anything not mentioned before. The compiler does not complain about missing cases (since \"everything else\" is covered by the last branch).</p>\n\n<p>Your example is essentially the same: A <code>match</code> with one single arm that covers everything. You could also have written <code>_</code> instead of <code>_whatever_string</code>, or another identifier - that could then be used in the corresponding arm.</p>\n\n<p>So, this <code>match</code> just matches and executes the statements in its single arm. The compiler sees that the single branch covers everything and does not need to complain.</p>\n"}], "owner": {"reputation": 319, "user_id": 495026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7065b4130cadb4e8cb1b142b56b5a3c?s=128&d=identicon&r=PG", "display_name": "bm842", "link": "https://stackoverflow.com/users/495026/bm842"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1543157842, "creation_date": 1543008563, "last_edit_date": 1543157842, "question_id": 53453128, "link": "https://stackoverflow.com/questions/53453128/why-does-a-match-expression-with-an-unknown-identifier-compile-and-run", "title": "Why does a match expression with an unknown identifier compile and run?", "body": "<p>I would expect the Rust compiler to complain about the missing cases in match as well as the unknown identifier:</p>\n\n<pre><code>pub enum MyEnum {\n    Case1,\n    Case2,\n}\n\nimpl MyEnum {\n    fn my_func(&amp;self) {\n        match self {\n            _whatever_string =&gt; println!(\"Why am I printed ?\"),\n        }\n    }\n}\n\nfn main() {\n    let x = MyEnum::Case1;\n    x.my_func();\n}\n</code></pre>\n\n<p>Why does it compile and call the <code>println</code>?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 639, "user_id": 1319631, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b0d41aa1083c3684b987008bb3464e74?s=128&d=identicon&r=PG", "display_name": "Cardano", "link": "https://stackoverflow.com/users/1319631/cardano"}, "is_accepted": false, "score": 3, "last_activity_date": 1542991007, "creation_date": 1542991007, "answer_id": 53450249, "question_id": 53449947, "link": "https://stackoverflow.com/questions/53449947/why-can-i-not-pass-a-captured-token-to-a-nested-macro/53450249#53450249", "title": "Why can I not pass a captured token to a nested macro?", "body": "<p>After <a href=\"https://danielkeep.github.io/tlborm/book/mbe-min-captures-and-expansion-redux.html\" rel=\"nofollow noreferrer\">some more reading</a>, it turns out this is an instance of a typical stumbling block. After being captured the first time, <code>$T</code> takes the value of an <em>AST Node</em>. Substituting <code>$T</code> will not emplace a token, it will emplace that AST Node. So what I expected to be something like this:</p>\n\n<pre><code>inner_macro!(`f32` [token])\n</code></pre>\n\n<p>was actually</p>\n\n<pre><code>inner_macro!(&lt;Type&gt;f32&lt;/Type&gt;)\n</code></pre>\n\n<p>Unfortunately for users, the two invocations both get stringified the same way, to <code>inner_macro! ( f32 )</code>.</p>\n\n<p>The correct way to do this is to capture the token-to-be-substituted as a \"token tree\":</p>\n\n<pre><code>macro_rules! unknown {\n    ($T:tt) =&gt; {\n        inner_macro!($T)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 639, "user_id": 1319631, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b0d41aa1083c3684b987008bb3464e74?s=128&d=identicon&r=PG", "display_name": "Cardano", "link": "https://stackoverflow.com/users/1319631/cardano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1542991007, "creation_date": 1542989701, "question_id": 53449947, "link": "https://stackoverflow.com/questions/53449947/why-can-i-not-pass-a-captured-token-to-a-nested-macro", "title": "Why can I not pass a captured token to a nested macro?", "body": "<p>Multiple examples I've seen suggest that this should be possible, but it is apparently not:</p>\n\n<p><code>lib.rs</code>: </p>\n\n<pre><code>#![feature(trace_macros)]\n\n#[macro_export]\nmacro_rules! inner_macro (\n    (f32) =&gt; {\"float\"};\n);\n\n#[macro_export]\nmacro_rules! outer_macro {\n    ($T:ty) =&gt; {\n        inner_macro!($T)\n    }\n}\n\n#[cfg(test)]\nmod tests {\n\n    #[test]\n    fn test_nested() {\n        trace_macros!(true);\n        s1: String = String::from(outer_macro!(f32));\n        s2: String = String::from(inner_macro!(f32));\n        trace_macros!(false);\n    }\n}\n</code></pre>\n\n<p>Running <code>cargo test</code> gives the following output:</p>\n\n<pre><code>error: no rules expected the token `f32`\n  --&gt; src/lib.rs:11:22\n   |\n4  | / macro_rules! inner_macro (\n5  | |     (f32) =&gt; {\"float\"};\n6  | | );\n   | |__- when calling this macro\n...\n11 |           inner_macro!($T)\n   |                        ^^ no rules expected the token `f32`\n...\n21 |           s1: String = String::from(outer_macro!(f32));\n   |                                     ----------------- in this macro invocation\n</code></pre>\n\n<p>This is confusing, because there certainly appears to be a rule expecting the token <code>f32</code>.</p>\n\n<p>There are also notes from the expansion trace of the two macros. The first one does not work:</p>\n\n<pre><code>= note: expanding `outer_macro! { f32 }`\n= note: to `inner_macro ! ( f32 )`\n= note: expanding `inner_macro! { f32 }`\n</code></pre>\n\n<p>while the second one does:</p>\n\n<pre><code>= note: expanding `inner_macro! { f32 }`\n= note: to `\"float\"`\n</code></pre>\n\n<p><strong>Why does the first expansion of <code>inner_macro!</code> fail, while the exact same expansion succeeds when it is not nested inside another macro?</strong></p>\n\n<p>Edit: if we perform the substitution manually, it works and gives the expected output:</p>\n\n<pre><code>macro_rules! unknown {\n    ($T:ty) =&gt; {\n        inner_macro!(f32)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1542972723, "last_edit_date": 1542972723, "creation_date": 1542971074, "answer_id": 53445500, "question_id": 53445132, "link": "https://stackoverflow.com/questions/53445132/passing-a-string-slice-returning-a-string-slice-but-who-owns-it/53445500#53445500", "title": "Passing a string slice, returning a string slice. But who owns it?", "body": "<p>Your claims are mostly wrong, let me try to correct them.</p>\n\n<blockquote>\n  <p><em>Passing a string slice, returning a string slice</em></p>\n</blockquote>\n\n<p><code>fn reverse(input: &amp;str) -&gt; String</code> you are accepting a <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\">string slice</a>, but returning a <a href=\"https://doc.rust-lang.org/std/string/struct.String.html\" rel=\"nofollow noreferrer\"><code>String</code></a>. A <code>String</code> <em>\"has ownership over the contents of the string</em>\".</p>\n\n<hr>\n\n<blockquote>\n  <p><em>I understand this [a string slice] can't be modified</em></p>\n</blockquote>\n\n<p>You can modify a <code>&amp;mut str</code>, e.g. </p>\n\n<pre><code>fn to_lower(s: &amp;mut str) {\n    s.make_ascii_lowercase();\n}\n\nfn main() {\n    let mut a = String::from(\"ABC\");\n    println!(\"{}\", a);\n    to_lower(&amp;mut a);\n    println!(\"{}\", a);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=ccbf3668930609503144b9f8aad03f82\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<hr>\n\n<blockquote>\n  <p><em>So when we are collecting the reversed string, I think we are collecting it into a argument 1 of assert_eq!</em></p>\n</blockquote>\n\n<p>No. You collect it into a string, that is what <code>collect::&lt;String&gt;()</code> is for. Also your function <code>reverse</code> returns a <code>String</code>.<br>\nThis means, that you are calling the function <code>reverse</code>, which returns a <code>String</code> and you are passing that <code>String</code> as the first \"argument\" to the <code>assert_eq!</code> macro.</p>\n\n<hr>\n\n<blockquote>\n  <p><em>the memory needed keeps increasing. Does argument 1 of assert_eq! account for that?</em></p>\n</blockquote>\n\n<p>No, how should it? That's all done inside of the <code>reverse</code> function. <code>assert_eq!</code> just takes two parameters. Where they come from is uncertain and not needed to know.</p>\n\n<hr>\n\n<blockquote>\n  <p><code>assert_eq!(&amp;reverse(input), expected)</code></p>\n</blockquote>\n\n<p>What happens in this line is, that you are calling your <code>reverse</code> function with <code>input</code> as parameter. But normally you can't compare <code>&amp;T</code> with <code>T</code> (a reference to <em>something</em> with an actual instance of <em>something</em>), that's where the <code>&amp;</code> (ampersand) in front of <code>reverse</code> comes into play. <code>String</code> implements the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-Deref\" rel=\"nofollow noreferrer\"><code>Deref</code> trait</a> which means it can be seen as a <code>str</code> as well (see the <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\">doc for Deref</a>). But now you are trying to compare a <code>str</code> with <code>&amp;str</code>, which does not work and that's why you put <code>&amp;</code> in front, so you actually end up with <code>&amp;str</code> and <code>&amp;str</code> which you can <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\">compare</a> with <code>==</code>.</p>\n\n<hr>\n\n<blockquote>\n  <p><em>I would like to understand who ownes <code>robot</code> and <code>tobor</code>.</em></p>\n</blockquote>\n\n<p>Nobody. In fact they live inside of the data section in the ELF/Binary itself. They don't have an owner per se, but can be used as <code>&amp;str</code> wherever needed.</p>\n"}], "owner": {"reputation": 1778, "user_id": 5698740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faee64fe3fa6b806a89f84492ba6c431?s=128&d=identicon&r=PG&f=1", "display_name": "clmno", "link": "https://stackoverflow.com/users/5698740/clmno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 53445500, "answer_count": 1, "score": 1, "last_activity_date": 1542972723, "creation_date": 1542969744, "last_edit_date": 1542971483, "question_id": 53445132, "link": "https://stackoverflow.com/questions/53445132/passing-a-string-slice-returning-a-string-slice-but-who-owns-it", "title": "Passing a string slice, returning a string slice. But who owns it?", "body": "<p>I'm a beginner to Rust and just learning the ownership concept.</p>\n\n<p>I'm using this function to reverse a String</p>\n\n<pre><code>fn reverse(input: &amp;str) -&gt; String {\n    //we are receiving a borrowed value, \n    input\n    //get an iterator of chars from the string slice\n    .chars()\n    //Goes between two iterators. \n    //From the doc:  double-ended iterator with the direction inverted.\n    .rev()\n    //collect into a String\n    .collect::&lt;String&gt;()\n}\n\nfn process_reverse_case(input: &amp;str, expected: &amp;str) {\n    assert_eq!(&amp;reverse(input), expected)\n}\n\nfn main() {\n    process_reverse_case(\"robot\", \"tobor\");\n}\n</code></pre>\n\n<p>I would like to understand who owns <code>robot</code> and <code>tobor</code>.</p>\n\n<ul>\n<li>I'm passing a borrowed value. Which is a string slice.</li>\n<li>I understand this can't be modified. So when we are <em>collecting</em> the reversed string, I think we are collecting it into a <code>argument 1</code> of <code>assert_eq!</code>. Am I right?</li>\n<li>But as the process of reversing + collection happens inside <code>reverse</code>, the memory needed keeps increasing. Does <code>argument 1</code> of <code>assert_eq!</code> account for that?</li>\n<li>The above question might have been solved by the compiler at compile time. Am I right? </li>\n</ul>\n"}, {"tags": ["rust", "serial-port", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 5, "last_activity_date": 1543157221, "last_edit_date": 1543157221, "creation_date": 1542948978, "answer_id": 53440843, "question_id": 53440321, "link": "https://stackoverflow.com/questions/53440321/how-to-use-serial-port-in-multiple-threads-in-rust/53440843#53440843", "title": "How to Use Serial Port in Multiple Threads in Rust?", "body": "<p>You can wrap your port in a <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> and a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a>, then you can write something like:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nstruct Port;\nimpl Port {\n    pub fn read(&amp;mut self, _v: &amp;mut Vec&lt;u8&gt;) {\n        println!(\"READING...\");\n    }\n    pub fn write(&amp;mut self, _v: &amp;Vec&lt;u8&gt;) {\n        println!(\"WRITING...\");\n    }\n}\n\npub fn main() {\n    let mut port = Arc::new(Mutex::new(Port));\n    let p2 = port.clone();\n\n    let handle = thread::spawn(move || {\n        let mut buffer: Vec&lt;u8&gt; = Vec::new();\n        for j in 0..100 {\n            let _bytes_read = p2.lock().unwrap().read(&amp;mut buffer);\n            thread::sleep(Duration::from_millis(10));\n        }\n    });\n\n    let request_temperature: Vec&lt;u8&gt; = vec![0xAA];\n    for i in 0..10 {\n        port.lock().unwrap().write(&amp;request_temperature);\n        thread::sleep(Duration::from_millis(100));\n    }\n\n    handle.join();\n}\n</code></pre>\n\n<p>So that this will run on a  test machine, I've replaced the serial port with a stub class, reduced the sleeps and replaced the infinite loop with some finite loops.</p>\n\n<p>While this works, you'll probably actually want proper communication between the threads at some stage, at which point you'll want to look at <a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\"><code>std::sync::mpsc::channel</code></a></p>\n"}], "owner": {"reputation": 23, "user_id": 7727831, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_3pCnAaNtjw/AAAAAAAAAAI/AAAAAAAAE3E/qUpCDVX_zpk/photo.jpg?sz=128", "display_name": "Shane Snover", "link": "https://stackoverflow.com/users/7727831/shane-snover"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 615, "favorite_count": 1, "accepted_answer_id": 53440843, "answer_count": 1, "score": 2, "last_activity_date": 1543157221, "creation_date": 1542943652, "question_id": 53440321, "link": "https://stackoverflow.com/questions/53440321/how-to-use-serial-port-in-multiple-threads-in-rust", "title": "How to Use Serial Port in Multiple Threads in Rust?", "body": "<p>I am trying to read and write to my serial port on Linux to communicate with a microcontroller and I'm trying to do so in Rust.</p>\n\n<p>My normal pattern when developing in say C++ or Python is to have two threads: one which sends requests out over serial periodically and one which reads bytes out of the buffer and handles them.</p>\n\n<p>In Rust, I'm running into trouble with the borrow checker while using the serial crate. This makes sense to me why this is, but I'm unsure what designing for an asynchronous communication interface would look like in Rust. Here's a snippet of my source:</p>\n\n<pre><code>let mut port = serial::open(&amp;device_path.as_os_str()).unwrap();\nlet request_temperature: Vec&lt;u8&gt; = vec![0xAA];\n\nthread::spawn(|| {\n    let mut buffer: Vec&lt;u8&gt; = Vec::new();\n    loop {\n        let _bytes_read = port.read(&amp;mut buffer);\n        // process data\n        thread::sleep(Duration::from_millis(100));\n    }\n});\n\nloop {\n    port.write(&amp;request_temperature);\n    thread::sleep(Duration::from_millis(1000));\n}\n</code></pre>\n\n<p>How can I emulate this functionality where I have two threads holding onto a mutable resource in Rust? I know that since this specific example could be done in a single thread, but I'm thinking for an eventual larger program this would end up being multiple threads.</p>\n"}, {"tags": ["rust", "rwlock"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542957163, "post_id": 53439726, "comment_id": 93757021, "body": "While <code>Cursor</code> is alive, you want nobody else to modify your <code>HashMap</code>? Is that the purpose of all that?"}, {"owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542957723, "post_id": 53439726, "comment_id": 93757259, "body": "@hellow correct."}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1542959174, "post_id": 53439726, "comment_id": 93757879, "body": "<a href=\"https://github.com/Kimundi/owning-ref-rs\" rel=\"nofollow noreferrer\">This</a> could help?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1542959752, "post_id": 53439726, "comment_id": 93758083, "body": "Could you put your code into the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">playground</a> so that we can more easily play around with it?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542959831, "post_id": 53439726, "comment_id": 93758121, "body": "Btw. it is very unidiotmatic to use <code>return</code> as a last statement. Instead just remove <code>return</code> and the <code>;</code> , e.g. <code>fn foo() -&gt; u32 { 3 }</code>"}, {"owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1542961497, "post_id": 53439726, "comment_id": 93758792, "body": "@SebastianRedl Here you go: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=5e24db3ac05cef2402007243215429b3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542964686, "post_id": 53439726, "comment_id": 93760396, "body": "@hellow Even some of the core developers prefer to always use <code>return</code> for consistency, so I wouldn&#39;t call this &quot;unidiomatic&quot;; it&#39;s just a question of personal style."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542965564, "post_id": 53439726, "comment_id": 93760874, "body": "@SvenMarnach <a href=\"https://stackoverflow.com/questions/27961879/why-is-using-return-as-the-last-statement-in-a-function-considered-bad-style\" title=\"why is using return as the last statement in a function considered bad style\">stackoverflow.com/questions/27961879/&hellip;</a> <a href=\"https://doc.rust-lang.org/book/first-edition/functions.html#early-returns\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/first-edition/&hellip;</a>: <i>&quot;Using a <code>return</code> as the last line of a function works, but is considered poor style:&quot;</i>"}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1542966483, "post_id": 53439726, "comment_id": 93761349, "body": "Is it necessary for you have the iterator inside the <code>Cursor</code> ? If not, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0acecf4ddf8dc91640c6e858fe2ad74d\" rel=\"nofollow noreferrer\">this</a> is another way (may not be ideal)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1542968044, "post_id": 53439726, "comment_id": 93762229, "body": "@AymanMadkour You are essentially trying to create a self-referential struct, which is not easily possible in Rust (see <a href=\"https://stackoverflow.com/q/32300132/279627\">this question</a> for more information)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1542968347, "post_id": 53439726, "comment_id": 93762393, "body": "@hellow I know. There&#39;s also <a href=\"https://stackoverflow.com/q/27961879/279627\">this question</a> and a Clippy lint. I personally don&#39;t use the <code>return</code> in the last statement, but don&#39;t feel strongly about what other people should do."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1542982901, "post_id": 53439726, "comment_id": 93769503, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "edited": false, "score": 0, "creation_date": 1542988290, "post_id": 53449320, "comment_id": 93771899, "body": "Thanks a lot, @SvenMarnach. I guess I am still not used to the Rust mindset."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 5, "last_activity_date": 1542986830, "creation_date": 1542986830, "answer_id": 53449320, "question_id": 53439726, "link": "https://stackoverflow.com/questions/53439726/cursor-of-hashmap-records-with-rwlockguard-in-rust/53449320#53449320", "title": "Cursor of HashMap records with RwLockGuard in Rust", "body": "<p>As mentioned in the comments, the problem is that <a href=\"https://stackoverflow.com/q/32300132/279627\">structs generally can't be self-referential in Rust</a>. The <code>Cursor</code> struct you are trying to construct contains both the <code>MutexGuard</code> and the iterator borrowing the <code>MutexGuard</code>, which is not possible (for good reasons \u2013 see the linked question).</p>\n\n<p>The easiest fix in this case is to introduce a separate struct storing the <code>MutexGuard</code>, e.g.</p>\n\n<pre><code>struct StoreLock&lt;'a&gt; {\n    guard: RwLockReadGuard&lt;'a, SimpleCollection&gt;,\n}\n</code></pre>\n\n<p>On the <code>Store</code>, we can then introduce a method returning a <code>StoreLock</code></p>\n\n<pre><code>fn lock(&amp;self) -&gt; StoreLock {\n    StoreLock { guard: self.0.read().unwrap() }\n}\n</code></pre>\n\n<p>and the <code>StoreLock</code> can expose the actual <code>scan()</code> method (and possibly others requiring a persistent lock):</p>\n\n<pre><code>impl&lt;'a&gt; StoreLock&lt;'a&gt; {\n    fn scan(&amp;self) -&gt; Cursor {\n        Cursor { iter: self.guard.iter() }\n    }\n}\n</code></pre>\n\n<p>The <code>Cursor</code> struct itself only contains the iterator:</p>\n\n<pre><code>struct Cursor&lt;'a&gt; {\n    iter: Iter&lt;'a, String, String&gt;,\n}\n</code></pre>\n\n<p>Client code first needs to obtain the lock, then get the cursor:</p>\n\n<pre><code>let lock = s.lock();\nlet cursor = lock.scan();\n</code></pre>\n\n<p>This ensures that the lock lives long enough to finish scanning.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7557e130e7db5b978c6b4565bddaa031\" rel=\"noreferrer\">Full code on the playground</a></p>\n"}], "owner": {"reputation": 165, "user_id": 9676274, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Ayman Madkour", "link": "https://stackoverflow.com/users/9676274/ayman-madkour"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 477, "favorite_count": 2, "accepted_answer_id": 53449320, "answer_count": 1, "score": 4, "last_activity_date": 1542986830, "creation_date": 1542937210, "last_edit_date": 1542958424, "question_id": 53439726, "link": "https://stackoverflow.com/questions/53439726/cursor-of-hashmap-records-with-rwlockguard-in-rust", "title": "Cursor of HashMap records with RwLockGuard in Rust", "body": "<p>I am new to Rust, and I am trying to implement a simple, thread-safe memory key-value store, using a <code>HashMap</code> protected within a <code>RwLock</code>. My code looks like this:</p>\n\n<pre><code>use std::sync::{ Arc, RwLock, RwLockReadGuard };\nuse std::collections::HashMap;\nuse std::collections::hash_map::Iter;\n\ntype SimpleCollection = HashMap&lt;String, String&gt;;\n\nstruct Store(Arc&lt;RwLock&lt;SimpleCollection&gt;&gt;);\n\nimpl Store {\n    fn new() -&gt; Store { return Store(Arc::new(RwLock::new(SimpleCollection::new()))) }\n\n    fn get(&amp;self, key: &amp;str) -&gt; Option&lt;String&gt; {\n        let map = self.0.read().unwrap();\n        return map.get(&amp;key.to_string()).map(|s| s.clone());\n    }\n\n    fn set(&amp;self, key: &amp;str, value: &amp;str) {\n        let mut map = self.0.write().unwrap();\n        map.insert(key.to_string(), value.to_string());\n    }\n}\n</code></pre>\n\n<p>So far, this code works OK. The problem is that I am trying to implement a <code>scan()</code> function, which returns a <code>Cursor</code> object that can be used to iterate over all the records. I want the <code>Cursor</code> object to hold a <code>RwLockGuard</code>, which is not released until the cursor itself is released (basically I don't want to allow modifications while a Cursor is alive).</p>\n\n<p>I tried this:</p>\n\n<pre><code>use ...\n\ntype SimpleCollection = HashMap&lt;String, String&gt;;\n\nstruct Store(Arc&lt;RwLock&lt;SimpleCollection&gt;&gt;);\n\nimpl Store {\n    ...\n\n    fn scan(&amp;self) -&gt; Cursor {\n        let guard = self.0.read().unwrap();\n        let iter = guard.iter();\n        return Cursor { guard, iter };\n    }\n}\n\nstruct Cursor&lt;'l&gt; {\n    guard: RwLockReadGuard&lt;'l, SimpleCollection&gt;,\n    iter: Iter&lt;'l, String, String&gt;\n}\n\nimpl&lt;'l&gt; Cursor&lt;'l&gt; {\n    fn next(&amp;mut self) -&gt; Option&lt;(String, String)&gt; {\n        return self.iter.next().map(|r| (r.0.clone(), r.1.clone()));\n    }\n}\n</code></pre>\n\n<p>But that did not work, as I got this compilation error:</p>\n\n<pre><code>error[E0597]: `guard` does not live long enough\n  --&gt; src/main.rs:24:20\n   |\n24 |         let iter = guard.iter();\n   |                    ^^^^^ borrowed value does not live long enough\n25 |         return Cursor { guard, iter };\n26 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 22:5...\n  --&gt; src/main.rs:22:5\n   |\n22 | /     fn scan(&amp;self) -&gt; Cursor {\n23 | |         let guard = self.0.read().unwrap();\n24 | |         let iter = guard.iter();\n25 | |         return Cursor { guard, iter };\n26 | |     }\n   | |_____^\n</code></pre>\n\n<p>Any ideas?</p>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542932130, "post_id": 53439273, "comment_id": 93752154, "body": "Does <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=1511d37835ea7de771be838147f6a8dd\" rel=\"nofollow noreferrer\">this</a> help ?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542932424, "post_id": 53439273, "comment_id": 93752206, "body": "It&#39;s good to know this is possible, but my production program is using several arguments, not two alone... Iterating over all possible combinations would be a  pain :/"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1542932682, "post_id": 53439273, "comment_id": 93752252, "body": "I can&#39;t help you about something I can&#39;t see."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1542932811, "post_id": 53439273, "comment_id": 93752272, "body": "For example, instead of just arg1 and arg2, it has arg1 through arg10."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "edited": false, "score": 0, "creation_date": 1542933806, "post_id": 53439393, "comment_id": 93752422, "body": "It&#39;s a good point you raise! I created this with the expectation that only one arg would be true at once."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1542933979, "post_id": 53439393, "comment_id": 93752441, "body": "If only one is true at once, you really have an enum. I&#39;ll update the code to detail that too."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "edited": false, "score": 0, "creation_date": 1542934612, "post_id": 53439393, "comment_id": 93752537, "body": "I haven&#39;t yet gotten to the Enums chapter of The Book yet; but your code is perfect in my situation.. thank you!!"}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 3, "last_activity_date": 1542936983, "last_edit_date": 1542936983, "creation_date": 1542932996, "answer_id": 53439393, "question_id": 53439273, "link": "https://stackoverflow.com/questions/53439273/how-to-use-instanced-struct-values-in-a-match-statement/53439393#53439393", "title": "How to use instanced struct values in a match statement?", "body": "<p>It is unclear to me what you mean to happen for the case where you have both arg1 and arg2 set to <code>true</code> - do you just want the first branch of the if to be taken, or both? </p>\n\n<p>If its both - then really you should just use multiple ifs.</p>\n\n<pre><code>if args.arg1 { println!(\"Argument 1 is true!\") }\nif args.arg2 { println!(\"Argument 2 is true!\") }\n</code></pre>\n\n<p>If only one should occur preferring arg1, then you can use a <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/match/destructuring/destructure_structures.html\" rel=\"nofollow noreferrer\">struct destructure</a></p>\n\n<pre><code>match args {\n    Args { arg1:true, ..} =&gt; println!(\"Argument 1 is true!\"),\n    Args { arg2:true, ..} =&gt; println!(\"Argument 2 is true!\"),\n    _ =&gt; println!(\"Neither is true\")\n}\n</code></pre>\n\n<p>You can use the match to match more complex cases too</p>\n\n<pre><code>match args {\n   Args {arg1:true, arg2:false, ...} =&gt; println!(\"TF\"),\n}\n</code></pre>\n\n<p>However, if at most one argument can be true at once, you really have an enum and should probably handle it like </p>\n\n<pre><code>enum Arg {\n  None,\n  Arg1,\n  Arg2\n}\n\nfn main() {\n    let args:Args = get_argument();\n    match args {\n       Args::None =&gt; println!(\"none\"),\n       Args::Arg1 =&gt; println!(\"Argument 1 is true!\"),\n       Args::Arg2 =&gt; println!(\"Argument 2 is true!\")\n    }\n} \n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8408293"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 1, "accepted_answer_id": 53439393, "answer_count": 1, "score": -1, "last_activity_date": 1542936983, "creation_date": 1542931556, "question_id": 53439273, "link": "https://stackoverflow.com/questions/53439273/how-to-use-instanced-struct-values-in-a-match-statement", "title": "How to use instanced struct values in a match statement?", "body": "<p>I have an example instanced struct, named args, of the original struct Args.</p>\n\n<pre><code>struct Args {\n    arg1: bool,\n    arg2: bool,\n}\n</code></pre>\n\n<p>and the instanced struct being:</p>\n\n<pre><code>let args = Args {\n    arg1: true,\n    arg2: false,\n}\n</code></pre>\n\n<p>Using these arguments, I am attempting to avoid a jumble of if-else statments and just use a <code>match</code> statement. However, when attempting to perform the following:</p>\n\n<pre><code>match true {\n    args.arg1 =&gt; println!(\"Argument 1 is true!\"),\n    args.arg2 =&gt; println!(\"Argument 2 is true!\"),\n}\n</code></pre>\n\n<p>I am given the error </p>\n\n<pre><code>error: expected one of `=&gt;`, `@`, `if`, or `|`, found `.`\n  --&gt; src/main.rs:13:13\n   |\n13 |         args.arg1 =&gt; println!(\"Argument one is true\"),\n   |             ^ expected one of `=&gt;`, `@`, `if`, or `|` here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Is there an escape character sequence I should use to avoid this, or is this simply incorrect syntax?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1542922338, "last_edit_date": 1542922338, "creation_date": 1542921068, "answer_id": 53438022, "question_id": 53437869, "link": "https://stackoverflow.com/questions/53437869/proxy-method-for-implementing-iterator-conflicting-lifetime/53438022#53438022", "title": "Proxy method for implementing Iterator, conflicting lifetime", "body": "<p>One solution is to specify that <code>name</code> outlives the <code>IterStruct</code> it is contained in:</p>\n\n<pre><code>struct Element&lt;'a&gt;(&amp;'a str);\n\nstruct IterStruct&lt;'a&gt; {\n    name: &amp;'a str,\n}\n\nimpl&lt;'a&gt; IterStruct&lt;'a&gt; {\n    fn name&lt;'s&gt;(&amp;'s mut self) -&gt; Option&lt;Element&lt;'a&gt;&gt;\n    where\n        'a: 's, // &lt;- specify that name outlives self\n    {\n        Some(Element(self.name))\n    }\n}\n\nimpl&lt;'a&gt; Iterator for IterStruct&lt;'a&gt; {\n    type Item = Element&lt;'a&gt;;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.name()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": false, "score": 1, "last_activity_date": 1543065927, "last_edit_date": 1543065927, "creation_date": 1542984282, "answer_id": 53448750, "question_id": 53437869, "link": "https://stackoverflow.com/questions/53437869/proxy-method-for-implementing-iterator-conflicting-lifetime/53448750#53448750", "title": "Proxy method for implementing Iterator, conflicting lifetime", "body": "<p>Well you need to give borrow checker a way to infer the lifetimes. What's essentially missing is one of the following line</p>\n\n<pre><code>impl&lt;'a&gt; IterStruct&lt;'a&gt; {\n    fn name(&amp;mut self) -&gt; Option&lt;Element&gt; {\n//  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n        Some(Element(self.name))\n    }\n}\n</code></pre>\n\n<p>into <code>fn name(&amp;mut self) -&gt; Option&lt;Element&lt;'a&gt;&gt;</code>. The Rust borrow checker will take care of the rest <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=14459e8a2baeb88b43caae1fbdca7933\" rel=\"nofollow noreferrer\">[Playground link]</a>.</p>\n\n<p>Compiler seems smart enough to infer <code>'a</code> should outlive <code>'self</code>.</p>\n"}], "owner": {"reputation": 607, "user_id": 5076225, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f51749961a6a3233df8063d13375492c?s=128&d=identicon&r=PG&f=1", "display_name": "gauge", "link": "https://stackoverflow.com/users/5076225/gauge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1543065927, "creation_date": 1542920076, "last_edit_date": 1542922316, "question_id": 53437869, "link": "https://stackoverflow.com/questions/53437869/proxy-method-for-implementing-iterator-conflicting-lifetime", "title": "Proxy method for implementing Iterator, conflicting lifetime", "body": "<p>I'm trying to implement an iterator which simply proxies the <code>next</code> method to another method on the struct itself.</p>\n\n<pre><code>struct Element&lt;'a&gt;(&amp;'a str);\n\nstruct IterStruct&lt;'a&gt; {\n    name: &amp;'a str,\n}\n\nimpl&lt;'a&gt; IterStruct&lt;'a&gt; {\n    fn name(&amp;mut self) -&gt; Option&lt;Element&gt; {\n        Some(Element(self.name))\n    }\n}\n\nimpl&lt;'a&gt; Iterator for IterStruct&lt;'a&gt; {\n    type Item = Element&lt;'a&gt;;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.name()\n    }\n}\n</code></pre>\n\n<p>I'm getting the conflicting requirements for lifetime error though:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:16:14\n   |\n16 |         self.name()\n   |              ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 15:5...\n  --&gt; src/lib.rs:15:5\n   |\n15 | /     fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n16 | |         self.name()\n17 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:16:9\n   |\n16 |         self.name()\n   |         ^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 13:6...\n  --&gt; src/lib.rs:13:6\n   |\n13 | impl&lt;'a&gt; Iterator for IterStruct&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected std::iter::Iterator\n              found std::iter::Iterator\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=327ecfe7c70068b54275e9846bd93454\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>How can I resolve this?</p>\n"}, {"tags": ["generics", "rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 0, "creation_date": 1542920590, "post_id": 53437827, "comment_id": 93749582, "body": "Ah damn, because <code>R</code> (and it&#39;s slice) are dropped when <code>from</code> returns, whereas <code>SliceWrapper</code> is supposed to live afterwards... \ud83d\ude48"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1542922155, "post_id": 53437827, "comment_id": 93750039, "body": "That error isn&#39;t special to nightly; Rust 1.30 has the exact same one."}, {"owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "edited": false, "score": 0, "creation_date": 1542923421, "post_id": 53437827, "comment_id": 93750383, "body": "Yeah; the problem message was clear \u2013 I just didn\u2019t get it. Genetics confuse me sometimes \ud83d\ude05"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1542922104, "last_edit_date": 1542922104, "creation_date": 1542919768, "answer_id": 53437827, "question_id": 53437716, "link": "https://stackoverflow.com/questions/53437716/borrowed-value-does-not-live-long-enough-for-asref-result-even-if-its-self-l/53437827#53437827", "title": "Borrowed value does not live long enough for `AsRef` result even if its `self` lives long enough", "body": "<p>The full error message on nightly states quite clearly what's happening here. You move <code>slice</code> into the function <code>from()</code>, then borrow it using <code>as_ref()</code>, and then it gets dropped at the end of the scope:</p>\n\n<pre><code>8  | impl&lt;'a, T: Debug + Copy + 'a, R: AsRef&lt;[T]&gt; + 'a&gt; From&lt;R&gt; for SliceWrapper&lt;'a, T&gt; {\n   |      -- lifetime `'a` defined here\n9  |     fn from(slice: R) -&gt; Self {\n10 |         Self{ slice: slice.as_ref(), pos: 0 }\n   |                      ^^^^^---------\n   |                      |\n   |                      borrowed value does not live long enough\n   |                      argument requires that `slice` is borrowed for `'a`\n11 |     }\n   |     - `slice` dropped here while still borrowed\n</code></pre>\n\n<p>You are trying to create a borrow that lives for the lifetime <code>'a</code>, but the owner you are borrowing from, <code>slice</code>, does not live long enough.</p>\n\n<p>The <code>From</code> trait does not seem to be a good fit for this use case. The idea of that trait is to move ownership of some data to a new type, but your <code>SliceWrapper</code> does not take ownership. I suggest writing a custom constructor instead that takes <code>R</code> by reference.</p>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 1, "last_activity_date": 1543041865, "creation_date": 1543041865, "answer_id": 53455839, "question_id": 53437716, "link": "https://stackoverflow.com/questions/53437716/borrowed-value-does-not-live-long-enough-for-asref-result-even-if-its-self-l/53455839#53455839", "title": "Borrowed value does not live long enough for `AsRef` result even if its `self` lives long enough", "body": "<p>You can restrict the conversion to reference arguments, and then you have a nice way to express the borrowing you need \u2014 lifetime is taken from the input reference:</p>\n\n<pre><code>impl&lt;'a, T, R&gt; From&lt;&amp;'a R&gt; for SliceWrapper&lt;'a, T&gt;\nwhere\n    T: Debug + Copy + 'a,\n    R: AsRef&lt;[T]&gt;\n{\n    fn from(slice: &amp;'a R) -&gt; Self {\n        Self {\n            slice: slice.as_ref(),\n            pos: 0,\n        }\n    }\n}\n</code></pre>\n\n<p>Now you can follow your original reasoning.\nYou have AsRef giving you: <code>&amp;'x self -&gt; &amp;'x [T]</code> for any <code>'x</code> and you input a <code>&amp;'a R</code> into that, so you get a<code>&amp;'a [T]</code> out.</p>\n\n<p>Reference taking <code>From</code> sometimes exist, I think it's especially appropriate in reference-to-reference-like conversions. An example in std is <code>impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Cow&lt;'a, str&gt;</code></p>\n"}], "owner": {"reputation": 1209, "user_id": 2179822, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ec8ebff1de01237c23aa51bff540eb39?s=128&d=identicon&r=PG", "display_name": "K. Biermann", "link": "https://stackoverflow.com/users/2179822/k-biermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 53437827, "answer_count": 2, "score": 2, "last_activity_date": 1543041865, "creation_date": 1542918944, "last_edit_date": 1542959941, "question_id": 53437716, "link": "https://stackoverflow.com/questions/53437716/borrowed-value-does-not-live-long-enough-for-asref-result-even-if-its-self-l", "title": "Borrowed value does not live long enough for `AsRef` result even if its `self` lives long enough", "body": "<p>I have a struct that wraps some functionality around a slice:</p>\n\n<pre><code>use std::fmt::Debug;\n\nstruct SliceWrapper&lt;'a, T: Debug + Copy + 'a&gt; {\n    slice: &amp;'a [T],\n    pos: usize,\n}\n</code></pre>\n\n<p>I want to implement the <code>From</code> trait for each element that supports <code>AsRef&lt;T: Debug + Copy + 'a&gt;</code> like this:</p>\n\n<pre><code>impl&lt;'a, T: Debug + Copy + 'a, R: AsRef&lt;[T]&gt; + 'a&gt; From&lt;R&gt; for SliceWrapper&lt;'a, T&gt; {\n    fn from(slice: R) -&gt; Self {\n        Self {\n            slice: slice.as_ref(),\n            pos: 0,\n        }\n    }\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `slice` does not live long enough\n  --&gt; src/lib.rs:11:20\n   |\n11 |             slice: slice.as_ref(),\n   |                    ^^^^^ borrowed value does not live long enough\n...\n14 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 8:6...\n  --&gt; src/lib.rs:8:6\n   |\n8  | impl&lt;'a, T: Debug + Copy + 'a, R: AsRef&lt;[T]&gt; + 'a&gt; From&lt;R&gt; for SliceWrapper&lt;'a, T&gt; {\n   |      ^^\n</code></pre>\n\n<p>I don't understand this because I say that <code>R</code> (<code>slice</code>) must live as long as my <code>SliceWrapper</code> \u2013 and as far as I understand it, <code>AsRef&lt;_&gt;</code> inherits the lifetime from it's <code>self</code> (<code>slice</code>)...</p>\n"}, {"tags": ["rust", "dynamic-linking"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1542913808, "post_id": 53436626, "comment_id": 93747535, "body": "Please provide additional information: what program are you trying to build? Which compiler version, which toolchain, and which host OS?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1542922503, "post_id": 53436626, "comment_id": 93750129, "body": "Most operating systems come with tools to search the hard drive for files of a specific name. Have you tried one of those?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1542922672, "creation_date": 1542922672, "answer_id": 53438238, "question_id": 53436626, "link": "https://stackoverflow.com/questions/53436626/where-are-the-shared-and-static-libraries-of-the-rust-standard-library/53438238#53438238", "title": "Where are the shared and static libraries of the Rust standard library?", "body": "<p>The libraries are installed wherever <strong>you</strong> chose to install Rust. I use <a href=\"https://rustup.rs/\" rel=\"nofollow noreferrer\">rustup</a> on macOS, so they are installed in <code>~/.rustup/toolchains/*whatever*/lib/</code> for me.</p>\n\n<p>Use your operating system's tools to search for files of a specific name.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/13428910/155423\">How to set the environmental variable LD_LIBRARY_PATH in linux</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 2925, "user_id": 2544873, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1B6wh.png?s=128&g=1", "display_name": "Tinmarino", "link": "https://stackoverflow.com/users/2544873/tinmarino"}, "edited": false, "score": 0, "creation_date": 1616012898, "post_id": 53446356, "comment_id": 117873760, "body": "<code>export LD_LIBRARY_PATH+=:$(rustc --print=sysroot)&#47;lib</code> worked perfect for me"}], "tags": [], "owner": {"reputation": 425, "user_id": 9822601, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b674ac7657871036668c07a4c2f0e7ff?s=128&d=identicon&r=PG&f=1", "display_name": "\u5c24\u91d1\u5bf6 \u6f22\u5b50", "link": "https://stackoverflow.com/users/9822601/%e5%b0%a4%e9%87%91%e5%af%b6-%e6%bc%a2%e5%ad%90"}, "is_accepted": false, "score": 7, "last_activity_date": 1543157417, "last_edit_date": 1543157417, "creation_date": 1542974481, "answer_id": 53446356, "question_id": 53436626, "link": "https://stackoverflow.com/questions/53436626/where-are-the-shared-and-static-libraries-of-the-rust-standard-library/53446356#53446356", "title": "Where are the shared and static libraries of the Rust standard library?", "body": "<p>I got an <a href=\"https://www.reddit.com/r/rust/comments/9zgmv1/where_are_soa_file_of_rust/\" rel=\"noreferrer\">answer on Reddit</a>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --print=sysroot\n</code></pre>\n\n<p>In my case, the .so files are in <code>/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib</code> and .rlib are in <code>/home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib</code>.</p>\n"}], "owner": {"reputation": 425, "user_id": 9822601, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b674ac7657871036668c07a4c2f0e7ff?s=128&d=identicon&r=PG&f=1", "display_name": "\u5c24\u91d1\u5bf6 \u6f22\u5b50", "link": "https://stackoverflow.com/users/9822601/%e5%b0%a4%e9%87%91%e5%af%b6-%e6%bc%a2%e5%ad%90"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 920, "favorite_count": 2, "accepted_answer_id": 53438238, "answer_count": 2, "score": 4, "last_activity_date": 1543157417, "creation_date": 1542912152, "last_edit_date": 1542922453, "question_id": 53436626, "link": "https://stackoverflow.com/questions/53436626/where-are-the-shared-and-static-libraries-of-the-rust-standard-library", "title": "Where are the shared and static libraries of the Rust standard library?", "body": "<p>I am trying to compile my Rust project with dynamic linking to reduce the size and provide .so (or .dll on Windows) files with the application just like Qt does for Android. I read <a href=\"https://stackoverflow.com/questions/29008127/why-are-rust-executables-so-huge\">Why are Rust executables so huge?</a> and compiled with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo rustc  -- -C prefer-dynamic\n</code></pre>\n\n<p>When I run my program, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> % target/debug/t_pro \ntarget/debug/t_pro: error while loading shared libraries: libstd-a021829e87e39dcf.so: cannot open shared object file: No such file or directory\n</code></pre>\n"}, {"tags": ["rust", "filepath"], "comments": [{"owner": {"reputation": 1160, "user_id": 6949178, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-yW1nZs8m-_4/AAAAAAAAAAI/AAAAAAAAAIk/Je9U6NaDvuY/photo.jpg?sz=128", "display_name": "Stoogy", "link": "https://stackoverflow.com/users/6949178/stoogy"}, "edited": false, "score": 1, "creation_date": 1542888355, "post_id": 53430401, "comment_id": 93735152, "body": "I guess you can see this: <a href=\"https://github.com/rust-lang/rust/issues/16507\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/16507</a> discussion"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 1160, "user_id": 6949178, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-yW1nZs8m-_4/AAAAAAAAAAI/AAAAAAAAAIk/Je9U6NaDvuY/photo.jpg?sz=128", "display_name": "Stoogy", "link": "https://stackoverflow.com/users/6949178/stoogy"}, "edited": false, "score": 0, "creation_date": 1542907717, "post_id": 53430401, "comment_id": 93745453, "body": "@Stoogy thanks; I&#39;ve commented on the issue."}], "answers": [{"comments": [{"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1542888471, "post_id": 53430667, "comment_id": 93735210, "body": "Thanks, then how do I treat the incoming path as always relative?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1542888507, "post_id": 53430667, "comment_id": 93735226, "body": "FYI: <code>os.path.join</code> has the same behavior in Python. I am not sure <i>why</i>, but at least there&#39;s some consistency there."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 1, "creation_date": 1542888663, "post_id": 53430667, "comment_id": 93735318, "body": "@PetrusTheron I would suggest not using <code>&#47;</code> at all. You can omit them completly."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1542888748, "post_id": 53430667, "comment_id": 93735358, "body": "So...how do I strip the leading slash and ensure that paths are always descendants of a given folder? As you can probably tell from my example, the slash-prefix is coming from a browser. Would also like to avoid parent &quot;../../../../some-secret&quot; files from leaking out."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1542888850, "post_id": 53430667, "comment_id": 93735432, "body": "I would suggest using a crate ;) <a href=\"https://crates.io/crates/path-absolutize\" rel=\"nofollow noreferrer\">crates.io/crates/path-absolutize</a> or <a href=\"https://crates.io/crates/path-dedot\" rel=\"nofollow noreferrer\">crates.io/crates/path-dedot</a>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1542888945, "post_id": 53430667, "comment_id": 93735475, "body": "@hellow Wouldn&#39;t <i>path-canonicalize</i> a more precise name? <i>absolutize</i> sounds to me as <i>Make all paths absolut</i>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1542888984, "post_id": 53430667, "comment_id": 93735499, "body": "@TimDiekmann quoting the <a href=\"https://crates.io/crates/path-absolutize\" rel=\"nofollow noreferrer\">doc</a>: <i>&quot;The difference between absolutize and canonicalize methods is that absolutize does not care about whether the file exists and what the file really is.&quot;</i> ;)"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 1, "creation_date": 1542902087, "post_id": 53430667, "comment_id": 93742745, "body": "@PetrusTheron you can use <a href=\"https://doc.rust-lang.org/stable/std/path/struct.Path.html#method.strip_prefix\" rel=\"nofollow noreferrer\"><code>Path::strip_prefix</code></a> to remove the leading <code>&#47;</code>: <a href=\"https://play.integer32.com/?version=stable&amp;mode=release&amp;edition=2015&amp;gist=b67cfdcb0ccfa3814a953fa5e0626cd3\" rel=\"nofollow noreferrer\">playground</a>"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 5, "last_activity_date": 1542888520, "last_edit_date": 1542888520, "creation_date": 1542888411, "answer_id": 53430667, "question_id": 53430401, "link": "https://stackoverflow.com/questions/53430401/why-does-joining-paths-completely-replace-the-original-path-in-rust/53430667#53430667", "title": "Why does joining paths completely replace the original path in Rust?", "body": "<p>This is because <code>\"/js/main.js\"</code> is treated as an absolute path (<a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.push\" rel=\"nofollow noreferrer\">doc</a>)</p>\n\n<blockquote>\n  <p>If path is absolute, it replaces the current path.</p>\n  \n  <p>On Windows:</p>\n  \n  <ul>\n  <li>if <code>path</code> has a root but no prefix (e.g. \\windows), it replaces everything except for the prefix (if any) of <code>self</code>.</li>\n  <li>if <code>path</code> has a prefix but no root, it replaces <code>self</code>.</li>\n  </ul>\n</blockquote>\n\n<p>If you change your example to <code>\"js/main.js\"</code> and then use <code>join</code>, it will be properly constructed (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c87da10dc1631f6ba83f58b998c490e3\" rel=\"nofollow noreferrer\">playground</a>)</p>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 560, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1542921877, "creation_date": 1542887435, "last_edit_date": 1542921877, "question_id": 53430401, "link": "https://stackoverflow.com/questions/53430401/why-does-joining-paths-completely-replace-the-original-path-in-rust", "title": "Why does joining paths completely replace the original path in Rust?", "body": "<p>I don't understand how Rust concatenates file paths. Why doesn't this work:</p>\n\n<pre><code>fn main() {\n    let root = std::path::Path::new(\"resources/\");\n    let uri = std::path::Path::new(\"/js/main.js\");\n    let path = root.join(uri);\n    assert_eq!(path.to_str(), Some(\"resources/js/main.js\"));\n}\n</code></pre>\n\n<p>fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `Some(\"/js/main.js\")`,\n right: `Some(\"resources/js/main.js\")`', src/main.rs:5:5\n</code></pre>\n\n<p>I see in <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html\" rel=\"nofollow noreferrer\">the docs</a> that \"pushing an absolute path replaces the existing path\", but this seems like a terrible idea that will catch a lot of people.</p>\n\n<p>In that case, how do I safely strip the absolute path, or make it relative?</p>\n"}]