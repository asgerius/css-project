[{"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536172884, "post_id": 52188141, "comment_id": 91332856, "body": "<a href=\"https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par\">Specify <code>Fn</code> trait bound on struct definition without fixing one of the <code>Fn</code> parameters</a> is a similar question that you may find useful to read"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536173098, "post_id": 52188141, "comment_id": 91332940, "body": "And <a href=\"https://stackoverflow.com/q/40484154/3650362\">\u201cparameter <code>&#39;a</code> is never used\u201d error when &#39;a is used in type parameter bound</a> is also similar but with a lifetime parameter instead of a type."}], "answers": [{"comments": [{"owner": {"reputation": 5147, "user_id": 334761, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/ZXRM5.jpg?s=128&g=1", "display_name": "Stefan Majewsky", "link": "https://stackoverflow.com/users/334761/stefan-majewsky"}, "edited": false, "score": 0, "creation_date": 1536162504, "post_id": 52188475, "comment_id": 91327927, "body": "Good point, thanks! It looks like I was fixated on keeping the trait bound <code>H: Handler&lt;...&gt;</code> on the struct definition."}], "tags": [], "owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "is_accepted": true, "score": 7, "last_activity_date": 1536160656, "last_edit_date": 1536160656, "creation_date": 1536160345, "answer_id": 52188475, "question_id": 52188141, "link": "https://stackoverflow.com/questions/52188141/how-can-i-avoid-phantomdata-in-this-struct-definition/52188475#52188475", "title": "How can I avoid PhantomData in this struct definition?", "body": "<p>There is no need to enforce the constraints on the inner handler at the definition of the struct. You can delay them until you implement the <code>Handler</code> trait for <code>FirstHandler</code>.</p>\n\n<pre><code>trait Handler&lt;C&gt; {\n    fn handle(&amp;self, msg: &amp;Message, connection: &amp;mut C);\n}\n\nstruct FirstHandler&lt;H&gt; {\n    next: H\n}\n\nimpl&lt;C, H&gt; Handler&lt;C&gt; for FirstHandler&lt;H&gt;\nwhere\n    H: Handler&lt;C&gt;,\n    C: ConnectionThatWorksWithFirstHandler,\n{\n    fn handle(&amp;self, msg: &amp;Message, connection: &amp;mut C) {\n        //...\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5147, "user_id": 334761, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/ZXRM5.jpg?s=128&g=1", "display_name": "Stefan Majewsky", "link": "https://stackoverflow.com/users/334761/stefan-majewsky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 0, "accepted_answer_id": 52188475, "answer_count": 1, "score": 5, "last_activity_date": 1536160656, "creation_date": 1536159243, "question_id": 52188141, "link": "https://stackoverflow.com/questions/52188141/how-can-i-avoid-phantomdata-in-this-struct-definition", "title": "How can I avoid PhantomData in this struct definition?", "body": "<p>I have a trait that looks something like this:</p>\n\n<pre><code>trait Handler&lt;C&gt; {\n    fn handle(&amp;self, msg: &amp;Message, connection: &amp;mut C);\n}\n</code></pre>\n\n<p>Instances are supposed to be chained like you would chain middlewares for HTTP handlers:</p>\n\n<pre><code>let handler = FirstHandler {\n     next: SecondHandler {\n         next: FinalHandler {},\n     },\n};\n</code></pre>\n\n<p>Each handler type can impose additional constraints on the type <code>C</code>:</p>\n\n<pre><code>trait ConnectionThatWorksWithFirstHandler {\n    ...\n}\n\nstruct FirstHandler&lt;C: ConnectionThatWorksWithFirstHandler, H: Handler&lt;C&gt;&gt; {\n    next: H,\n    _phantom: PhantomData&lt;C&gt;,\n}\n</code></pre>\n\n<p>As you can see here, I need a <code>PhantomData&lt;C&gt;</code> to avoid error E0392 (<code>parameter C is never used</code>). However, PhantomData is semantically wrong because the handlers are not holding instances of <code>C</code>. This is ugly. For example, I manually have to provide the correct Sync/Send trait implementations:</p>\n\n<pre><code>unsafe impl&lt;C: ConnectionThatWorksWithFirstHandler, H: Handler&lt;C&gt;&gt; Send for Handler&lt;C, H&gt; where H: Send {}\nunsafe impl&lt;C: ConnectionThatWorksWithFirstHandler, H: Handler&lt;C&gt;&gt; Sync for Handler&lt;C, H&gt; where H: Sync {}\n</code></pre>\n\n<p>The auto trait implementations would have an additional <code>where C: Send/Sync</code> bound which is not appropriate here.</p>\n\n<p>Is there an alternative to PhantomData that allows me to encode the relation between <code>FirstHandler&lt;C&gt;</code> and <code>C</code> such that the Rust compiler is happy and I don't need more <code>unsafe</code> code?</p>\n\n<p><strong>I'm not looking for associated types.</strong> The handler trait and its implementors are defined in a library, and the concrete type for <code>C</code> is defined in the application consuming the library, so the concrete type <code>C</code> cannot be defined by the handlers' trait implementations.</p>\n\n<p>The idea with this design is to allow the chain of handlers to accumulate all the trait bounds for <code>C</code> that are required in the handler chain, so that when I have the <code>handler</code> variable as shown in the second snippet, then the implied trait bound is <code>C: ConnectionThatWorksWithFirstHandler + ConnectionThatWorksWithSecondHandler + ConnectionThatWorksWithFinalHandler</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1536162320, "post_id": 52187644, "comment_id": 91327817, "body": "<code>fn stack(&amp;self) -&gt; &amp;(Stack&lt;usize&gt; + &#39;static)</code> also fixes it, which suggests that you <i>could</i> implement <code>Stack&lt;usize&gt;</code> for a non-<code>&#39;static</code> type in such a way that <code>bad</code> would indeed be bad."}, {"owner": {"reputation": 450, "user_id": 2833231, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89c8eae37f471ea573662517bc90b9dd?s=128&d=identicon&r=PG&f=1", "display_name": "0e4ef622", "link": "https://stackoverflow.com/users/2833231/0e4ef622"}, "edited": false, "score": 1, "creation_date": 1536207565, "post_id": 52187644, "comment_id": 91342127, "body": "The <code>&#39;static</code> lifetime assumption is documented <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html?highlight=trait,object#inference-of-trait-object-lifetimes\" rel=\"nofollow noreferrer\">here</a>"}, {"owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "edited": false, "score": 0, "creation_date": 1536341478, "post_id": 52187644, "comment_id": 91403800, "body": "Thanks all of you. I now understand the cause of error."}], "answers": [{"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 4, "last_activity_date": 1536312421, "last_edit_date": 1536312421, "creation_date": 1536219508, "answer_id": 52198857, "question_id": 52187644, "link": "https://stackoverflow.com/questions/52187644/lifetime-must-be-valid-for-the-static-lifetime-so-that-the-types-are-compatible/52198857#52198857", "title": "lifetime must be valid for the static lifetime so that the types are compatible", "body": "<p>You are implementing a Trait (<code>Index</code>) for a Trait Object (<code>Stack&lt;T&gt;</code>).</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/reference/types.html#trait-object-lifetime-bounds\" rel=\"nofollow noreferrer\">Rust reference</a> states: </p>\n\n<blockquote>\n  <p>Since a trait object can contain references, the lifetimes of those references need to be expressed as part of the trait object. This lifetime is written as Trait + 'a. There are defaults that allow this lifetime to usually be inferred with a sensible choice.</p>\n</blockquote>\n\n<p>If You don't define a lifetime the compiler assume a default, in this case it is assumed <code>'static</code> (see <a href=\"https://doc.rust-lang.org/reference/lifetime-elision.html#default-trait-object-lifetimes\" rel=\"nofollow noreferrer\">here</a> for a detailed explanation)</p>\n\n<p>Your code is equivalent to:</p>\n\n<pre><code>impl&lt;T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; + 'static {\n    type Output = T;\n    fn index(&amp;self, i: usize) -&gt; &amp;T {\n        &amp;self.as_slice()[i]\n    }\n}\n</code></pre>\n\n<p>To resolve the <code>cannot infer an appropriate lifetime for autoref due to conflicting requirements</code> compilation error just declare that <code>stack()</code> method returns a trait object with <code>'static</code> lifetime.</p>\n\n<pre><code>trait Core {\n    fn stack(&amp;self) -&gt; &amp;'static Stack&lt;usize&gt;;\n    fn bad(&amp;mut self) -&gt; usize {\n       self.stack()[0]\n    }\n    fn good(&amp;mut self) -&gt; usize {\n       self.stack().as_slice()[0]\n    }\n}\n</code></pre>\n\n<p>Otherwise declare a generic lifetime for the <code>Stack&lt;T&gt;</code> trait object that impl <code>Index</code>:</p>\n\n<pre><code>impl&lt;'a, T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; + 'a {\n    type Output = T;\n    fn index(&amp;self, i: usize) -&gt; &amp;T {\n        &amp;self.as_slice()[i]\n    }\n}\n\ntrait Core {\n    fn stack(&amp;self) -&gt; &amp;Stack&lt;usize&gt;;\n    fn bad(&amp;mut self) -&gt; usize {\n       self.stack()[0]\n    }\n    fn good(&amp;mut self) -&gt; usize {\n       self.stack().as_slice()[0]\n    }\n}\n</code></pre>\n\n<p>At this point you should ask: why using <code>as_slice()</code> in <code>good()</code> works and using <code>index()</code> in <code>bad()</code> does not?</p>\n\n<p>To make same sense of it try read the comments embedded in the MVCE below.</p>\n\n<pre><code>use std::ops::Index;\n\ntrait Stack&lt;T&gt; {\n    fn as_slice(&amp;self) -&gt; &amp;[T];\n}\n\n// equivalent to: impl&lt;T&gt; Index&lt;usize&gt; for Stack&lt;T&gt;\n// just to expose the conflicting requirements error\n// the right declaration is:\n// impl&lt;'a, T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; + 'a\nimpl&lt;T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; + 'static {\n    type Output = T;\n    fn index(&amp;self, i: usize) -&gt; &amp;T {\n        &amp;self.as_slice()[i]\n    }\n}\n\ntrait Core {\n    fn stack(&amp;self) -&gt; &amp;Stack&lt;usize&gt;;\n    fn bad&lt;'a&gt;(&amp;'a mut self) -&gt; usize {\n       //self.stack()[0] syntactic sugar for:\n       *self.stack().index(0)\n\n       // self.stack() returns a trait object with a lifetime bound != 'static\n       // but Stack impl for Index requires a 'static lifetime bound: \n       // COMPILE ERROR: cannot infer an appropriate lifetime for\n       // autoref due to conflicting requirements\n    }\n    fn good&lt;'a&gt;(&amp;'a mut self) -&gt; usize {\n       // self.stack() returns a trait object with 'a lifetime bound\n       // this is congruent with as_slice() lifetime requirements\n       // see Catasta::as_slice() impl below\n       // NO COMPILE ERROR\n       self.stack().as_slice()[0]\n    }\n}\n\nstruct Catasta&lt;T&gt; {\n    pila: [T;4]\n}\n\nimpl&lt;T&gt; Stack&lt;T&gt; for Catasta&lt;T&gt; {\n\n    fn as_slice&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a [T] {\n        &amp;self.pila\n    }\n}\n\nstruct RealCore {\n    stk: Catasta&lt;usize&gt;\n}\n\nimpl Core for RealCore {\n    fn stack(&amp;self) -&gt; &amp;Stack&lt;usize&gt; {\n        &amp;self.stk\n    }\n}\n\nfn main() {\n    let mut core = RealCore {stk: Catasta {pila: [100, 2, 3, 4]} };\n    println!(\"pos [0] item: {}\", core.good());\n}\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2167, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1536312421, "creation_date": 1536157882, "last_edit_date": 1536163015, "question_id": 52187644, "link": "https://stackoverflow.com/questions/52187644/lifetime-must-be-valid-for-the-static-lifetime-so-that-the-types-are-compatible", "title": "lifetime must be valid for the static lifetime so that the types are compatible", "body": "<p>I'm aware of <a href=\"https://stackoverflow.com/questions/38884989/where-did-the-static-lifetime-come-from\">Where did the 'static lifetime come from</a> and <a href=\"https://stackoverflow.com/questions/41270052/cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conflicting-requirements\">Cannot infer an appropriate lifetime for autoref due to conflicting requirements</a>\u3002</p>\n\n<p>But I still do not understand the problem I've encountered:</p>\n\n<pre><code>use std::ops::Index;\n\ntrait Stack&lt;T&gt; {\n    fn as_slice(&amp;self) -&gt; &amp;[T];\n}\n\nimpl&lt;T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; {\n    type Output = T;\n    fn index(&amp;self, i: usize) -&gt; &amp;T {\n        &amp;self.as_slice()[i]\n    }\n}\n\ntrait Core {\n    fn stack(&amp;self) -&gt; &amp;Stack&lt;usize&gt;;\n    fn bad(&amp;mut self) -&gt; usize {\n       self.stack()[0]\n    }\n    fn good(&amp;mut self) -&gt; usize {\n       self.stack().as_slice()[0]\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>In the code above, <code>good()</code> gives no error, but <code>bad()</code> complains with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n--&gt; src/main.rs:18:14\n|\n18 |         self.stack()[0]\n|              ^^^^^\n|\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 17:5...\n--&gt; src/main.rs:17:5\n|\n17 | /     fn bad(&amp;mut self) -&gt; usize {\n18 | |         self.stack()[0]\n19 | |     }\n| |_____^\nnote: ...so that reference does not outlive borrowed content\n--&gt; src/main.rs:18:9\n|\n18 |         self.stack()[0]\n|         ^^^^\n= note: but, the lifetime must be valid for the static lifetime...\n= note: ...so that the types are compatible:\n        expected std::ops::Index&lt;usize&gt;\n            found std::ops::Index&lt;usize&gt;\n</code></pre>\n\n<p>There is no <code>Box</code> in this code, and I do not know where the static lifetime comes from.</p>\n\n<p>Edit: through try and error I found the compiler assume Stack + 'static. The following code compiles. But why? Please point me to some document.</p>\n\n<pre><code>impl&lt;'b, T&gt; Index&lt;usize&gt; for Stack&lt;T&gt; + 'b {\n    type Output = T;\n    fn index&lt;'a&gt;(&amp;'a self, i: usize) -&gt; &amp;'a T {\n        &amp;self.as_slice()[i]\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "mutability"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536159327, "post_id": 52186159, "comment_id": 91325972, "body": "Why do you need to borrow it mutably? All of the methods return immutable references to its contents?"}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536159786, "post_id": 52186159, "comment_id": 91326285, "body": "Which? The <code>HashMap</code> and the second <code>borrow_mut</code> call. I don&#39;t know. It complains more if I don&#39;t."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536159902, "post_id": 52186159, "comment_id": 91326373, "body": "Ah, I didn&#39;t notice that <code>insert_for_hmhs</code> calls <code>insert</code>."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536160128, "post_id": 52186159, "comment_id": 91326517, "body": "Oh, the <code>HashSet</code> -- yes, this part will fulfil the public interface of the struct. The HashMap is an implementation detail really."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536160417, "post_id": 52186159, "comment_id": 91326693, "body": "This is a tricky problem, and I wonder if you should try a different approach. For example, <a href=\"https://play.rust-lang.org/?gist=208ec1166fe2519d06b44194620b8912&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this</a> will get you half way - an abstracted smart pointer to the <code>HashSet</code>. But it&#39;s difficult to return an iterator to that."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536161068, "post_id": 52186159, "comment_id": 91327114, "body": "Probably you&#39;ll need to create an iterator over a cloned <code>HashSet</code>"}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536180436, "post_id": 52186159, "comment_id": 91336083, "body": "It&#39;s frustrating. The implementation is poking through. I could pre-instantiate the HashMap (actually possible in this case) I guess. But that&#39;s also unfortunate. It really should be lazy."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536233445, "post_id": 52186159, "comment_id": 91355100, "body": "Is the key (0) in <code>hs_for_hmhs</code> fixed, or is this a simplification of the question and it may vary?"}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 0, "creation_date": 1536250169, "post_id": 52186159, "comment_id": 91365790, "body": "It&#39;s a simplification. Actually, the key is not a int, but values defined at compile time, so it&#39;s bounded. I could instantiate everything first. But there are 50-100 keys and in many cases, the HashSet values will be empty for many of these 50. So I&#39;d rather not if I can avoid it."}], "answers": [{"tags": [], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "is_accepted": false, "score": 1, "last_activity_date": 1537318871, "last_edit_date": 1537318871, "creation_date": 1536261712, "answer_id": 52210866, "question_id": 52186159, "link": "https://stackoverflow.com/questions/52186159/struggling-with-interior-mutability/52210866#52210866", "title": "Struggling with interior mutability", "body": "<p>I found a solution -- extract the <code>HashMap</code> as a raw pointer. This in turn means that I can get to the <code>HashSet</code> without shenanigans including returning a iterator.</p>\n\n<p>I'm happy enough with this as a solution. The unsafe code is small and contained and if I understand the reason why the compiler is complaining without unsafe, it cannot occur in this code, since neither the <code>HashMap</code> nor the <code>HashSet</code> are ever removed or replaced after construction.</p>\n\n<p>That was a lot of effort. </p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::{HashMap, HashSet};\n\nstruct R {\n    hmhs: HashMap&lt;i64, HashSet&lt;i64&gt;&gt;,\n}\n\nimpl R {\n    fn hs_for_hmhs(&amp;mut self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n        if let None = self.hmhs.get(&amp;0) {\n            self.hmhs.insert(0, HashSet::new());\n        }\n\n        self.hmhs.get_mut(&amp;0).unwrap()\n    }\n\n    fn iter_for_hmhs&lt;'a&gt;(&amp;'a mut self) -&gt; impl Iterator&lt;Item = &amp;'a i64&gt; {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;mut self, i: i64) -&gt; bool {\n        self.hs_for_hmhs().insert(i)\n    }\n}\n\nstruct S {\n    hmhs: RefCell&lt;HashMap&lt;i64, HashSet&lt;i64&gt;&gt;&gt;,\n}\n\nimpl S {\n    fn hs_as_ptr(&amp;self) -&gt; *mut HashMap&lt;i64, HashSet&lt;i64&gt;&gt; {\n        self.hmhs.borrow_mut().entry(0).or_insert(HashSet::new());\n        self.hmhs.as_ptr()\n    }\n\n    fn mut_hs_for_hmhs(&amp;mut self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n        unsafe { (*self.hs_as_ptr()).get_mut(&amp;0).unwrap() }\n    }\n    fn hs_for_hmhs(&amp;self) -&gt; &amp;HashSet&lt;i64&gt; {\n        unsafe { (*self.hs_as_ptr()).get(&amp;0).unwrap() }\n    }\n\n    fn iter_for_hmhs&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a i64&gt; + 'a {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;mut self, i: i64) -&gt; bool {\n        self.mut_hs_for_hmhs().insert(i)\n    }\n}\n\nfn main() {\n    let mut r = R {\n        hmhs: HashMap::new(),\n    };\n    let mut s = S {\n        hmhs: RefCell::new(HashMap::new()),\n    };\n\n    r.insert_for_hmhs(10);\n    s.insert_for_hmhs(20);\n\n    println!(\"r next: {:?}\", r.iter_for_hmhs().next());\n    println!(\"s next: {:?}\", s.iter_for_hmhs().next());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3ed1977bdd5f9f82d144fe128f618979&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=3ed1977bdd5f9f82d144fe128f618979&amp;version=stable&amp;mode=debug&amp;edition=2015</a></p>\n"}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1537319030, "creation_date": 1536153502, "last_edit_date": 1537319030, "question_id": 52186159, "link": "https://stackoverflow.com/questions/52186159/struggling-with-interior-mutability", "title": "Struggling with interior mutability", "body": "<p>I have a data structure like this:</p>\n\n<pre><code>struct R {\n    hmhs: HashMap&lt;i64, HashSet&lt;i64&gt;&gt;,\n}\n\nimpl R {\n    fn hs_for_hmhs(&amp;mut self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n        if let None = self.hmhs.get(&amp;0) {\n            self.hmhs.insert(0, HashSet::new());\n        }\n\n        self.hmhs.get_mut(&amp;0).unwrap()\n    }\n\n    fn iter_for_hmhs&lt;'a&gt;(&amp;'a mut self) -&gt; impl Iterator&lt;Item = &amp;'a i64&gt; {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;mut self, i: i64) -&gt; bool {\n        self.hs_for_hmhs().insert(i)\n    }\n}\n</code></pre>\n\n<p>This seems to work, but all the methods require a mutable\nreference to <code>self</code> which is unfortunate. I tried to give\ninterior mutability a go:</p>\n\n<pre><code>struct S {\n    hmhs: RefCell&lt;HashMap&lt;i64, HashSet&lt;i64&gt;&gt;&gt;,\n}\n\nimpl S {\n    fn hs_for_hmhs(&amp;self) -&gt; &amp;HashSet&lt;i64&gt; {\n        if let None = self.hmhs.borrow().get(&amp;0) {\n            self.hmhs.borrow_mut().insert(0, HashSet::new());\n        }\n\n        self.hmhs.borrow_mut().get_mut(&amp;0).unwrap()\n    }\n\n    fn iter_for_hmhs(&amp;mut self) -&gt; impl Iterator&lt;Item = &amp;i64&gt; {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;mut self, i: i64) -&gt; bool {\n        self.hs_for_hmhs().insert(i)\n    }\n}\n</code></pre>\n\n<p>However, I constantly seem to hit problems. Mostly some variety of <a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a></p>\n\n<p>I have tried lots of variants here, but I am missing something\nfundamental in my understanding. Is there a way of achieving what I\nwant?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0d189d366f6a4175ade027f8c0e77c5d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Complete Code</a>:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::{HashMap, HashSet};\n\nstruct R {\n    hmhs: HashMap&lt;i64, HashSet&lt;i64&gt;&gt;,\n}\n\nimpl R {\n    fn hs_for_hmhs(&amp;mut self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n        if let None = self.hmhs.get(&amp;0) {\n            self.hmhs.insert(0, HashSet::new());\n        }\n\n        self.hmhs.get_mut(&amp;0).unwrap()\n    }\n\n    fn iter_for_hmhs&lt;'a&gt;(&amp;'a mut self) -&gt; impl Iterator&lt;Item = &amp;'a i64&gt; {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;mut self, i: i64) -&gt; bool {\n        self.hs_for_hmhs().insert(i)\n    }\n}\n\nstruct S {\n    hmhs: RefCell&lt;HashMap&lt;i64, HashSet&lt;i64&gt;&gt;&gt;,\n}\n\nimpl S {\n    fn hs_for_hmhs(&amp;self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n        if let None = self.hmhs.borrow().get(&amp;0) {\n            self.hmhs.borrow_mut().insert(0, HashSet::new());\n        }\n\n        self.hmhs.borrow_mut().get_mut(&amp;0).unwrap()\n    }\n\n    fn iter_for_hmhs(&amp;self) -&gt; impl Iterator&lt;Item = &amp;i64&gt; {\n        self.hs_for_hmhs().iter()\n    }\n\n    fn insert_for_hmhs(&amp;self, i: i64) -&gt; bool {\n        self.hs_for_hmhs().insert(i)\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Compiler Message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:36:9\n   |\n36 |         self.hmhs.borrow_mut().get_mut(&amp;0).unwrap()\n   |         ^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n37 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 31:5...\n  --&gt; src/main.rs:31:5\n   |\n31 | /     fn hs_for_hmhs(&amp;self) -&gt; &amp;mut HashSet&lt;i64&gt; {\n32 | |         if let None = self.hmhs.borrow().get(&amp;0) {\n33 | |             self.hmhs.borrow_mut().insert(0, HashSet::new());\n34 | |         }\n35 | |\n36 | |         self.hmhs.borrow_mut().get_mut(&amp;0).unwrap()\n37 | |     }\n   | |_____^\n</code></pre>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1536153761, "post_id": 52186081, "comment_id": 91322150, "body": "Relevant: <a href=\"https://stackoverflow.com/q/23061702/1233251\">stackoverflow.com/q/23061702/1233251</a> <a href=\"https://stackoverflow.com/q/27415011/1233251\">stackoverflow.com/q/27415011/1233251</a>"}, {"owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 0, "creation_date": 1553980829, "post_id": 52186081, "comment_id": 97588854, "body": "I run into this language limitation all the time.  It&#39;d make the code so much more pleasant to have this feature."}], "answers": [{"comments": [{"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 0, "creation_date": 1536156870, "post_id": 52186354, "comment_id": 91324274, "body": "Yeah, I had found <code>concat_idents!</code>, but it&#39;s not the right thing. Thanks anyway, good to know that it&#39;s not worth searching for."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1536182989, "post_id": 52186354, "comment_id": 91337024, "body": "Also, <code>concat_idents!</code> has a lot of downsides which such a macro probably would have as well."}, {"owner": {"reputation": 8096, "user_id": 173251, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/62bf00bc62feafce5c3585108b0c819f?s=128&d=identicon&r=PG", "display_name": "Bryan Henry", "link": "https://stackoverflow.com/users/173251/bryan-henry"}, "edited": false, "score": 0, "creation_date": 1598980517, "post_id": 52186354, "comment_id": 112629547, "body": "dtolnay&#39;s paste crate is a good way to do this now: <a href=\"https://crates.io/crates/paste\" rel=\"nofollow noreferrer\">crates.io/crates/paste</a>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1536154548, "last_edit_date": 1536154548, "creation_date": 1536154106, "answer_id": 52186354, "question_id": 52186081, "link": "https://stackoverflow.com/questions/52186081/is-it-possible-for-a-macro-to-turn-an-identifier-lowercase/52186354#52186354", "title": "Is it possible for a macro to turn an identifier lowercase?", "body": "<p>No, there isn't a macro that can perform this sort of string manipulation on identifiers.</p>\n\n<p>It is possible to create such a macro in the compiler, but it doesn't seem to be a popular need; today only the experimental <a href=\"https://doc.rust-lang.org/nightly/std/macro.concat_idents.html\" rel=\"nofollow noreferrer\"><code>concat_idents!</code></a> comes anything close to this (i.e. string-like operations for identifiers).</p>\n\n<p>Your workaround is currently the only available solution.</p>\n"}, {"comments": [{"owner": {"reputation": 3308, "user_id": 161250, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/74b00bbfe9ba0f647bb154ed5f923cb4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/161250/alex"}, "edited": false, "score": 0, "creation_date": 1574095325, "post_id": 55932189, "comment_id": 104099785, "body": "Note to anyone else coming by: This crate requires nightly, so it&#39;s no good if you&#39;re on stable."}], "tags": [], "owner": {"reputation": 5800, "user_id": 6163736, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/TKHBG.jpg?s=128&g=1", "display_name": "stacksonstacks", "link": "https://stackoverflow.com/users/6163736/stacksonstacks"}, "is_accepted": false, "score": 9, "last_activity_date": 1597008257, "last_edit_date": 1597008257, "creation_date": 1556690127, "answer_id": 55932189, "question_id": 52186081, "link": "https://stackoverflow.com/questions/52186081/is-it-possible-for-a-macro-to-turn-an-identifier-lowercase/55932189#55932189", "title": "Is it possible for a macro to turn an identifier lowercase?", "body": "<p>I just wrote a procedural macro (<a href=\"https://crates.io/crates/casey\" rel=\"nofollow noreferrer\">casey</a>) to do this.</p>\n<pre><code>#![feature(proc_macro_hygiene)]\n\nuse casey::lower;\n\nlower!(B); // would render as `b`\n\n</code></pre>\n<h2>Update</h2>\n<p><code>proc_macro_hygiene</code> is stable as of rust 1.45.0, so no longer requires nightly.</p>\n"}, {"tags": [], "owner": {"reputation": 8096, "user_id": 173251, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/62bf00bc62feafce5c3585108b0c819f?s=128&d=identicon&r=PG", "display_name": "Bryan Henry", "link": "https://stackoverflow.com/users/173251/bryan-henry"}, "is_accepted": false, "score": 4, "last_activity_date": 1598981262, "last_edit_date": 1598981262, "creation_date": 1598980723, "answer_id": 63692517, "question_id": 52186081, "link": "https://stackoverflow.com/questions/52186081/is-it-possible-for-a-macro-to-turn-an-identifier-lowercase/63692517#63692517", "title": "Is it possible for a macro to turn an identifier lowercase?", "body": "<p>The previous answers are all correct; standard declarative macros can't do this, and you can drop to procedural macros instead. However, a simpler alternative to procedural macros (especially if, like myself, that's an area of the language you haven't delved into yet) is dtolnay's <a href=\"https://crates.io/crates/paste\" rel=\"nofollow noreferrer\">paste crate</a>.</p>\n<p>An example from those docs:</p>\n<pre><code>use paste::paste;\n\npaste! {\n    // Defines a const called `QRST`.\n    const [&lt;Q R S T&gt;]: &amp;str = &quot;success!&quot;;\n}\n\nfn main() {\n    assert_eq!(\n        paste! { [&lt;Q R S T&gt;].len() },\n        8,\n    );\n}\n</code></pre>\n<p>Case conversion is also supported, e.g. <code>[&lt;ld_ $reg:lower _expr&gt;]</code></p>\n"}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2268, "favorite_count": 0, "closed_date": 1609270302, "accepted_answer_id": 52186354, "answer_count": 3, "score": 11, "last_activity_date": 1598981262, "creation_date": 1536153308, "last_edit_date": 1536154242, "question_id": 52186081, "link": "https://stackoverflow.com/questions/52186081/is-it-possible-for-a-macro-to-turn-an-identifier-lowercase", "closed_reason": "Duplicate", "title": "Is it possible for a macro to turn an identifier lowercase?", "body": "<p>Is it possible to generate a symbol or identifier in a Rust macro\nfrom a string? Or to perform string-like operations on a identifier?</p>\n\n<p>I wanted to generate a method given a symbol, but need to downcase it to\nobtain the method name.</p>\n\n<pre><code>get!(B);\n\n// should expand to\n\nfn b() -&gt; B {\n    // method body\n}\n</code></pre>\n\n<p>It's easy to get close...</p>\n\n<pre><code>macro_rules! get {\n    ($kind:ident, $method:ident)\n        =&gt;\n    {\n        fn $method() -&gt; $kind {\n           // method body\n        }\n    }\n}\n\nget!(B, b)\n</code></pre>\n\n<p>But dissatisfying.</p>\n"}, {"tags": ["rust", "function-composition"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1536149848, "post_id": 52184730, "comment_id": 91319568, "body": "For some reason I can&#39;t seem to be able to add the right tag, <code>piping</code>; the UNIX-related <code>pipe</code> is inserted instead :/."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 5, "creation_date": 1536150353, "post_id": 52184730, "comment_id": 91319902, "body": "Rust does not have functions that take an arbitrary number of arguments. You can implement this as a macro or accept some syntactic overhead. See <a href=\"https://stackoverflow.com/questions/45786955/how-to-compose-functions-in-rust\" title=\"how to compose functions in rust\">stackoverflow.com/questions/45786955/&hellip;</a> for the 2-argument version."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 2, "creation_date": 1536150549, "post_id": 52184730, "comment_id": 91320048, "body": "@SebastianRedl your link also provides the macro version for compose, so exactly what the OP asks"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1536150609, "post_id": 52184730, "comment_id": 91320081, "body": "@hellow So it does, didn&#39;t even notice."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1536151273, "post_id": 52184730, "comment_id": 91320460, "body": "Since I&#39;ve written it already, <a href=\"https://play.rust-lang.org/?gist=922f122728f05097ccd9738183ec4b48&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here</a> is an example for the three function case. But yes, the linked answer contains the general solution."}, {"owner": {"reputation": 4243, "user_id": 10319970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FUiGY.jpg?s=128&g=1", "display_name": "streletss", "link": "https://stackoverflow.com/users/10319970/streletss"}, "edited": false, "score": 0, "creation_date": 1536151429, "post_id": 52184730, "comment_id": 91320559, "body": "Thank you, guys. Sorry for duplication :("}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1536151689, "post_id": 52184730, "comment_id": 91320727, "body": "@streletss Don&#39;t worry! Duplicate questions are not necessarily a bad thing. It&#39;s really helpful to have multiple versions of the same question (with different formulations). That way, people can more easily find the answer."}], "owner": {"reputation": 4243, "user_id": 10319970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FUiGY.jpg?s=128&g=1", "display_name": "streletss", "link": "https://stackoverflow.com/users/10319970/streletss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 118, "favorite_count": 1, "closed_date": 1536151038, "answer_count": 0, "score": 4, "last_activity_date": 1537617046, "creation_date": 1536149192, "last_edit_date": 1537617046, "question_id": 52184730, "link": "https://stackoverflow.com/questions/52184730/how-to-implement-the-pipe-compose-function", "closed_reason": "Duplicate", "title": "How to implement the pipe / compose function?", "body": "<p>I'm trying to write a 'pipe' function, which is pretty straightforward in Javascript:</p>\n\n<pre><code>const pipe = (...funcs) =&gt; val =&gt; (\n  funcs.reduce((acc, func) =&gt; func(acc), val)\n)\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>const sqrt = v =&gt; Math.sqrt(v);\nconst half = v =&gt; v / 2;\nconst plusFive = v =&gt; v + 5;\n\nplusFive(half(sqrt(16))); // 7\n\nconst doStuff = pipe(sqrt, half, plusFive);\ndoStuff(16); // 7 \n</code></pre>\n\n<p>How to do same thing in Rust? Thanks!</p>\n"}, {"tags": ["hashmap", "rust", "hash-function"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1536148833, "post_id": 52184366, "comment_id": 91318931, "body": "You may enjoy reading <a href=\"https://bugs.php.net/bug.php?id=60623\" rel=\"nofollow noreferrer\">bugs.php.net/bug.php?id=60623</a>, <a href=\"https://arstechnica.com/information-technology/2011/12/huge-portions-of-web-vulnerable-to-hashing-denial-of-service-attack/\" rel=\"nofollow noreferrer\">arstechnica.com/information-technology/2011/12/&hellip;</a> and <a href=\"https://nikic.github.io/2014/12/22/PHPs-new-hashtable-implementation.html\" rel=\"nofollow noreferrer\">nikic.github.io/2014/12/22/&hellip;</a> or search for &quot;php5 hashtable collision&quot; :)"}, {"owner": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "edited": false, "score": 4, "creation_date": 1536149514, "post_id": 52184366, "comment_id": 91319380, "body": "It kinda boils down to opinions here: whether one <i>assumes</i> that is better to give &quot;secure&quot; to everybody (at the cost of performance for 95% not needing secure all the time) versus give &quot;fast&quot; to everybody (at the cost of missing the places where &quot;secure&quot; is required, not &quot;fast&quot;)."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "edited": false, "score": 1, "creation_date": 1536149623, "post_id": 52184366, "comment_id": 91319443, "body": "@GhostCat If 5% needs the security, it&#39;s still possible to <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.with_hasher\" rel=\"nofollow noreferrer\">provide a custom <code>BuildHasher</code></a>."}, {"owner": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1536149812, "post_id": 52184366, "comment_id": 91319551, "body": "@TimDiekmann See, how we get into a <i>discussion</i> here? There are multiple options to the underlying problem, and to a certain degree, we get into the business of having different opinions how to best solve things. Rendering the question a bit well, opinionated, in my eyes."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "edited": false, "score": 1, "creation_date": 1536149849, "post_id": 52184366, "comment_id": 91319570, "body": "@GhostCat This is why I already flagged as opinion based ;)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "edited": false, "score": 0, "creation_date": 1536150221, "post_id": 52184366, "comment_id": 91319814, "body": "@GhostCat I see what you mean, but I don&#39;t think this quesiton is &quot;primarily opinion based&quot;. The main question here is the bold thing at the end. So OP seems to want to understand why a cryptographically secure hash function is even important in a hash map. All three answers answer that question and stayed very neutral on the &quot;discussion part&quot;."}, {"owner": {"reputation": 126499, "user_id": 1531124, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/zw18i.png?s=128&g=1", "display_name": "GhostCat", "link": "https://stackoverflow.com/users/1531124/ghostcat"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1536150784, "post_id": 52184366, "comment_id": 91320178, "body": "@LukasKalbertodt Sure. I would say that, too, when I decided to answer the question ;-) ... but seriously: grey area. Therefore I didn&#39;t downvote ... even going to upvote stuff now."}, {"owner": {"reputation": 258, "user_id": 1841789, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f72caef53d17cd54745b6e51280a404a?s=128&d=identicon&r=PG", "display_name": "fraillt", "link": "https://stackoverflow.com/users/1841789/fraillt"}, "edited": false, "score": 0, "creation_date": 1536211909, "post_id": 52184366, "comment_id": 91343413, "body": "I kinda knew the answer in the first place, but I was hoping to find more use cases for when people might need a cryptographically secure hash function.  I still think it is a wrong default, because usually you never write your own web framework (you probably will use the best known one), so chances are very slim, that you&#39;ll ever need this functionality by default (I probably never required this in my 20years programming experience). So I guess Rust values security &lt;100x more than performance in this case."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1536220035, "post_id": 52184366, "comment_id": 91347008, "body": "Is there a simple way to get a more efficient hash function? I have a Project Euler solution where I would like to see how much faster a &quot;normal&quot; hash function is (i.e. a hash function comparable to what other programming languages do)."}], "answers": [{"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 2, "last_activity_date": 1536148741, "creation_date": 1536148741, "answer_id": 52184598, "question_id": 52184366, "link": "https://stackoverflow.com/questions/52184366/why-does-hashmap-need-a-cryptographically-secure-hashing-function/52184598#52184598", "title": "Why does HashMap need a cryptographically secure hashing function?", "body": "<p>If a server application stores user input (such as post data in a web application) in a hash table, a malicious user may try to provide a large number of inputs that all have the same hash value, leading to a large number of hash collisions and thus slowing down operations on the map significantly, to the point that it can be used as a DoS attack (as described in <a href=\"https://arstechnica.com/information-technology/2011/12/huge-portions-of-web-vulnerable-to-hashing-denial-of-service-attack/\" rel=\"nofollow noreferrer\">this article</a> for example).</p>\n\n<p>If the hash is cryptographically secure, attackers will have a much harder time trying to find inputs with the same hash value.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 16, "last_activity_date": 1536148950, "creation_date": 1536148950, "answer_id": 52184664, "question_id": 52184366, "link": "https://stackoverflow.com/questions/52184366/why-does-hashmap-need-a-cryptographically-secure-hashing-function/52184664#52184664", "title": "Why does HashMap need a cryptographically secure hashing function?", "body": "<p>Let's start backward: how do you DoS a HashMap?</p>\n\n<p>Over the years, there have been multiple attacks on various software stacks based on <a href=\"https://131002.net/siphash/siphashdos_appsec12_slides.pdf\" rel=\"noreferrer\">Hash Flooding</a>. If you know which framework a site is powered by, and therefore which hash function is used, and this hash function is <strong>not cryptographically secure</strong> then you may be able to pre-compute, offline, a large set of strings hashing to the same number.</p>\n\n<p>Then, you simply inject this set into the site, and for each (simple) request, it does a disproportionately large amount of work as inserting N elements takes O(N<sup>2</sup>) operations.</p>\n\n<hr>\n\n<p>Rust was conceived with the benefit of hindsight, and therefore attention was paid to avoiding this attack <em>by default</em>, reasoning that users who really need performance out of <code>HashMap</code> would simply switch the hash function.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 4, "last_activity_date": 1536149283, "creation_date": 1536149283, "answer_id": 52184751, "question_id": 52184366, "link": "https://stackoverflow.com/questions/52184366/why-does-hashmap-need-a-cryptographically-secure-hashing-function/52184751#52184751", "title": "Why does HashMap need a cryptographically secure hashing function?", "body": "<p>Let's say we use <code>HashMap</code>  to store some user data in a web-application. <strong>Suppose that users can choose (part of) the key in some way</strong> \u2013 maybe the key is a username or a filename of an uploaded file or anything like that.</p>\n\n<p>If we are not using a cryptographically secure hash function, this means that the attacker could possible <strong>craft multiple inputs that all map to the same output</strong>. Of course, a hash map has to deal with collisions, because they occur naturally. </p>\n\n<p>But when unnaturally many collisions occur, the hash map implementation might do strange things. For example, looking up some keys could have a <strong>runtime of O(n)</strong>. Or the hash map might think that it has to grow because of all the collisions; but growing won't solve the problem, so the hash map <strong>grows until all memory is used</strong>. In either case, it's bad. Hash maps just assume that statistically, collisions rarely occur. </p>\n\n<p>Of course, this is not a \"stealing user data\" attack -- at least not directly. But if one part of a system is weak, this makes it easier for attackers to find other weaknesses.</p>\n\n<p>A cryptographically secure hash function prevents this attack, since the attacker cannot possibly craft multiple keys that map to the same value (at least not without trying out all keys).</p>\n\n<hr>\n\n<blockquote>\n  <p>is not really relevant 99% (maybe even 99.99%) of the time for hash tables.</p>\n</blockquote>\n\n<p>Yes, <em>probably</em>. But this is difficult to balance. I guess we all would agree that if 20% of users would have security problems in their application due to an unsecure hash function (while 80% don't care), it's still a good idea to use the \"secure by default\" approach. What about 5%/95%? What about 1%/99%? Hard to tell where the threshold is, right?</p>\n\n<p>There has been a ton of discussion about this already. Because yes, most people only notice the slowness of the hash map. Maybe the situation I described above is incredibly rare and it isn't worth slowing down all other users' code by default. But this has been decided, the default hash function won't change, and luckily you can choose your own hash function.</p>\n"}], "owner": {"reputation": 258, "user_id": 1841789, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f72caef53d17cd54745b6e51280a404a?s=128&d=identicon&r=PG", "display_name": "fraillt", "link": "https://stackoverflow.com/users/1841789/fraillt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1101, "favorite_count": 3, "accepted_answer_id": 52184664, "answer_count": 3, "score": 13, "last_activity_date": 1536153388, "creation_date": 1536147893, "last_edit_date": 1536153388, "question_id": 52184366, "link": "https://stackoverflow.com/questions/52184366/why-does-hashmap-need-a-cryptographically-secure-hashing-function", "title": "Why does HashMap need a cryptographically secure hashing function?", "body": "<p>I'm reading a Rust book about <code>HashMap</code> <a href=\"https://doc.rust-lang.org/book/2018-edition/ch08-03-hash-maps.html#hashing-functions\" rel=\"noreferrer\">hashing functions</a>, and I can't understand these two sentences.</p>\n\n<blockquote>\n  <p>By default, HashMap uses a cryptographically secure hashing function that can provide resistance to Denial of Service (DoS) attacks. This is not the fastest hashing algorithm available, but the trade-off for better security that comes with the drop in performance is worth it.</p>\n</blockquote>\n\n<p>I know what a cryptographically secure hash function is, but don't I understand the rationale behind it. From my understanding a good hash function for <code>HashMap</code> should only have three properties: </p>\n\n<ul>\n<li>deterministic (the same object has same hash value)</li>\n<li>be VERY fast, </li>\n<li>has a uniform distribution of bits in hash value (meaning it will reduce collision)</li>\n</ul>\n\n<p>Other properties, in cryptographically secure hash function, are not really relevant 99% (maybe even 99.99%) of the time for hash tables.</p>\n\n<p>So my question is: <strong>What does \"resistance to DoS attack and better security\n\" even mean in the context of HashMap?</strong></p>\n"}, {"tags": ["version-control", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 11011, "user_id": 60003, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/FsbC4.jpg?s=128&g=1", "display_name": "womble", "link": "https://stackoverflow.com/users/60003/womble"}, "edited": false, "score": 1, "creation_date": 1536126839, "post_id": 52177470, "comment_id": 91305919, "body": "So <code>cargo package</code> just needs to modify the included <code>Cargo.toml</code> to set a static <code>version</code> parameter.  I found that issue in my travels, and bundler&#39;s tagging behaviour is well-known to me, but it&#39;s backwards.  I&#39;ve also found <a href=\"https://github.com/rust-lang/cargo/issues/5629\" rel=\"nofollow noreferrer\">this issue</a> which shows that bundling generated data is not out-of-bounds for cargo in general."}], "tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": false, "score": 0, "last_activity_date": 1536124234, "creation_date": 1536124234, "answer_id": 52177470, "question_id": 52176130, "link": "https://stackoverflow.com/questions/52176130/how-to-tell-cargo-to-use-git-tags-to-determine-the-crate-version/52177470#52177470", "title": "How to tell Cargo to use git tags to determine the crate version?", "body": "<p><a href=\"https://crates.io\" rel=\"nofollow noreferrer\">crates.io</a> <a href=\"https://doc.rust-lang.org/cargo/reference/publishing.html\" rel=\"nofollow noreferrer\">stores full snapshots of crates' sources without any VCS meta-information</a>. So this information about the crate must be encoded in <code>Cargo.toml</code> which is a part of a snapshot.</p>\n\n<p>There's also <a href=\"https://github.com/rust-lang/cargo/issues/841\" rel=\"nofollow noreferrer\">an old issue</a> about the idea of a reversed approach: make cargo subcommands create git tags when publishing a new version on crates.io.</p>\n"}], "owner": {"reputation": 11011, "user_id": 60003, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/FsbC4.jpg?s=128&g=1", "display_name": "womble", "link": "https://stackoverflow.com/users/60003/womble"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 139, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1538858658, "creation_date": 1536113406, "last_edit_date": 1538858658, "question_id": 52176130, "link": "https://stackoverflow.com/questions/52176130/how-to-tell-cargo-to-use-git-tags-to-determine-the-crate-version", "title": "How to tell Cargo to use git tags to determine the crate version?", "body": "<p>I'm chewing through the Rust book, and learning about Cargo.  In the description of the <code>Cargo.toml</code> format, it seems to require that you hard-code the version you're currently working on or have most recently released into that file, which is checked into revision control.  Since anyone sane tags their releases, this means that the version information is duplicated, and we all know what a bad idea it is to have the same information in two places.</p>\n\n<p>Given that Cargo seems admirably opinionated on the subject of revision control (creating a git repo on <code>cargo new</code>), I'm a bit surprised that I can't find a way to tell Cargo, \"grab version information from the annotated tags in the repo\".  Am I missing something, or is this a feature that is just out-and-out missing from Cargo entirely?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536135608, "post_id": 52175430, "comment_id": 91310681, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25214064/can-i-extend-an-enum-with-additional-values\">Can I extend an enum with additional values?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1536144289, "creation_date": 1536144289, "answer_id": 52183220, "question_id": 52175430, "link": "https://stackoverflow.com/questions/52175430/how-to-extend-errors-based-on-quick-error/52183220#52183220", "title": "How to extend errors based on quick-error?", "body": "<p>As described in <a href=\"https://stackoverflow.com/questions/25214064/can-i-extend-an-enum-with-additional-values\">Can I extend an enum with additional values?</a>, composition of other enums is possible and common practice for creating an extended sum type designated to errors. The same idea can be applied to error types created with <code>quick_error</code>, by passing other errors as the <strong>cause</strong> of your own type. Considering a hypothetical crate <code>lib2</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\nextern crate lib2;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum MyError {\n        Foo {\n            description(\"FooError\")\n        },\n        Lib2(err: lib2::Error) {\n            description(\"Failed to do something done by lib2\")\n            from() // derive `From&lt;lib2::Error&gt;`, very useful\n            cause(err)\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>from()</code> clause makes the compiler derive <code>From&lt;lib2::Error&gt;</code> for <code>MyError</code>. This is particularly useful, as it makes raising a <code>Result&lt;T, MyError&gt;</code> on a <code>lib2</code> error as simple as employing the <code>?</code> operator.</p>\n"}], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 1, "accepted_answer_id": 52183220, "answer_count": 1, "score": 1, "last_activity_date": 1536144289, "creation_date": 1536106385, "last_edit_date": 1536143236, "question_id": 52175430, "link": "https://stackoverflow.com/questions/52175430/how-to-extend-errors-based-on-quick-error", "title": "How to extend errors based on quick-error?", "body": "<p>Let's say I have a crate <code>Lib1</code> that declares something like:</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum MyError {\n        Foo {\n            description(\"FooError\")\n        }\n    }\n}\n</code></pre>\n\n<p>I have some another library <code>Lib2</code> that depends on <code>Lib1</code>. </p>\n\n<p>I would like to extend this <code>MyError</code> with some additional errors that are specific to <code>Lib2</code>. That way I can reuse all the base errors that were declared in <code>Lib1</code>. </p>\n\n<p>Btw, I have complete control on both libraries and I can modify them as much as I need to. I definitely would like to keep using <code>quick-error</code> for this. Is it possible to extend this somehow?</p>\n\n<p><em>Note: I already had a look at <a href=\"https://stackoverflow.com/questions/25214064/can-i-extend-an-enum-with-additional-values\">Can I extend an enum with additional values?</a> That was definitely something I knew about before opening the question. \nThis does not solve this specific problem. Ideally I would like to keep using <code>quick_error</code>. Plus using composition for error makes error handling downstream very complicated. Is there a nice pattern for extending errors in libraries?</em></p>\n"}, {"tags": ["reference", "rust", "ffi", "raw-pointer"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1536112678, "post_id": 52174925, "comment_id": 91302617, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48235267/conversion-between-a-rust-str-and-fficstring-and-back-again-partially-corrupts\">Conversion between a Rust str and ffi::CString and back again partially corrupts the string</a>"}, {"owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536114185, "post_id": 52174925, "comment_id": 91302845, "body": "@trentcl Didn&#39;t expect to see the warning if I keep staring at the introduction section of the page instead of the <code>as_ptr</code> function subsection explanation. My bad but &quot;recklessly&quot; is just too much. Thanks anyway for pointing out the reference. Also, the question you pointed out is much more lengthy and hard to grasp the key point."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536146677, "post_id": 52174925, "comment_id": 91317520, "body": "I&#39;m sorry for not linking directly to the relevant section, but I shouldn&#39;t have had to link it <i>at all</i>; it&#39;s your responsibility to guarantee any <code>unsafe</code> code you write and that includes reading the documentation for functions that return raw pointers, before dereferencing them. As for the dupe, I agree, that particular one is a bit long-winded. Actually <a href=\"https://stackoverflow.com/questions/31083223/how-to-stop-memory-leaks-when-using-as-ptr?noredirect=1&amp;lq=1\">How to stop memory leaks when using <code>as_ptr()</code>?</a> is probably better. However, I only get one close vote, so I can&#39;t change it now."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1558463449, "last_edit_date": 1558463449, "creation_date": 1536102898, "answer_id": 52175101, "question_id": 52174925, "link": "https://stackoverflow.com/questions/52174925/cstringnew-unwrap-as-ptr-gives-empty-const-c-char/52175101#52175101", "title": "CString::new().unwrap().as_ptr() gives empty *const c_char", "body": "<p>You are creating a <code>CString</code> in the same statement as creating a pointer to it. The <code>CString</code> is owned but not bound to a variable so it only lives as long as the enclosing statement, causing the pointer to become invalid. This is specifically warned about by the <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_ptr\" rel=\"nofollow noreferrer\">documentation for <code>as_ptr</code></a>:</p>\n\n<blockquote>\n  <p>For example, the following code will cause undefined behavior when ptr is used inside the unsafe block:</p>\n\n<pre><code>use std::ffi::{CString};\n\nlet ptr = CString::new(\"Hello\").expect(\"CString::new failed\").as_ptr();\nunsafe {\n    // `ptr` is dangling\n    *ptr;\n}\n</code></pre>\n  \n  <p>This happens because the pointer returned by <code>as_ptr</code> does not carry any lifetime information and the <code>CString</code> is deallocated immediately after the <code>CString::new(\"Hello\").expect(\"CString::new failed\").as_ptr()</code> expression is evaluated.</p>\n</blockquote>\n\n<p>You can fix the problem by introducing variables which will live for the entire function, and then create pointers to those variables:</p>\n\n<pre><code>fn main() {\n    let owned_test = CString::new(\"Hello World\").unwrap();\n    let _test_str: *const c_char = owned_test.as_ptr();\n    let owned_fmt = CString::new(\"%s\\n\").unwrap();\n    let fmt: *const c_char = owned_fmt.as_ptr();\n\n    unsafe {\n        libc::printf(fmt, _test_str);\n    }\n\n    unsafe {\n        let slice = CStr::from_ptr(_test_str);\n        println!(\n            \"string buffer size without nul terminator: {}\",\n            slice.to_bytes().len()\n        );\n    }\n\n    // owned_fmt is dropped here, making fmt invalid\n    // owned_test is dropped here, making _test_str invalid\n}\n</code></pre>\n\n<p>If you are working with raw pointers, you need to be extra careful that they are always pointing at live data. Introducing a variable is the best way to control exactly how long that data lives - it will live from the initialization of the variable to the moment the variable goes out of scope.</p>\n"}], "owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 906, "favorite_count": 1, "accepted_answer_id": 52175101, "answer_count": 1, "score": 3, "last_activity_date": 1575579293, "creation_date": 1536101461, "last_edit_date": 1575579293, "question_id": 52174925, "link": "https://stackoverflow.com/questions/52174925/cstringnew-unwrap-as-ptr-gives-empty-const-c-char", "title": "CString::new().unwrap().as_ptr() gives empty *const c_char", "body": "<p>I have a C function that expects <code>*const std::os::raw::c_char</code> and I have done the following in Rust:</p>\n\n<pre><code>use std::os::raw::c_char;\nuse std::ffi::{CString, CStr};\nextern crate libc;\n\nfn main() {\n    let _test_str: *const c_char = CString::new(\"Hello World\").unwrap().as_ptr();\n    let fmt: *const c_char = CString::new(\"%s\\n\").unwrap().as_ptr();\n    unsafe { libc::printf(fmt, _test_str); }\n\n    unsafe {\n        let slice = CStr::from_ptr(_test_str);\n        println!(\"string buffer size without nul terminator: {}\", slice.to_bytes().len());\n    }\n}\n</code></pre>\n\n<p>However, I cannot get <code>_test_str</code> print out and the output of the above program is simply</p>\n\n<pre><code>string buffer size without nul terminator: 0\n</code></pre>\n\n<p>If I pass the <code>_test_str</code> into some C function and see it is an empty string. What did I do wrong?</p>\n"}, {"tags": ["rust", "bitwise-operators"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536091062, "post_id": 52172090, "comment_id": 91297109, "body": "What is a flags ORed ? Please include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> your question is unclear, what is <code>FLAG1</code> for exemple ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1536091169, "post_id": 52172090, "comment_id": 91297168, "body": "My guess that you should use <a href=\"https://docs.rs/bitflags/1.0.4/bitflags/\" rel=\"nofollow noreferrer\">bitflags</a>"}], "answers": [{"comments": [{"owner": {"reputation": 397, "user_id": 4131596, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-dUHeMDfE0xw/AAAAAAAAAAI/AAAAAAAAANE/y-2iUXIrmU4/photo.jpg?sz=128", "display_name": "Ryan", "link": "https://stackoverflow.com/users/4131596/ryan"}, "edited": false, "score": 0, "creation_date": 1536124922, "post_id": 52172522, "comment_id": 91305207, "body": "I like this answer because you separate the data from the process of selecting it. Of course, this won&#39;t work as well if you have a complicated expression as the value that needs computed."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1536134537, "post_id": 52172522, "comment_id": 91310067, "body": "That <code>if let</code> is awkward. Why not use <code>unwrap_or</code>?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536135439, "post_id": 52172522, "comment_id": 91310584, "body": "@MatthieuM. thanks, totally forgot about that one :)."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 6, "last_activity_date": 1536135408, "last_edit_date": 1536135408, "creation_date": 1536087733, "answer_id": 52172522, "question_id": 52172090, "link": "https://stackoverflow.com/questions/52172090/bitwise-or-in-match/52172522#52172522", "title": "Bitwise or in match?", "body": "<p>You could work around this limitation by using an array of possible options:</p>\n\n<pre><code>const FLAG1: usize = 1;\nconst FLAG2: usize = 2;\nconst FLAG3: usize = 3;\n\nfn main() {\n    let x = 1;\n    let y = 10;\n\n    let options = [\n        (FLAG1 | FLAG2, 5), \n        (FLAG1 | FLAG3, 6), \n        (FLAG2 | FLAG3, y)\n    ];\n\n    let result = options.iter()\n                        .find(|(calc, _)| *calc == x)\n                        .map(|(_, ret)| *ret)\n                        .unwrap_or(0);\n}\n</code></pre>\n\n<p>Depending on the number of variants you want to cover this might be a viable solution.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536089295, "post_id": 52172555, "comment_id": 91296304, "body": "You could do a <code>match</code> with guards. <code>match x { x if x == FLAG1 | FLAG2 =&gt; 5,</code> etc."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536089567, "post_id": 52172555, "comment_id": 91296422, "body": "@trentcl You could. I&#39;m not convinced that it&#39;s nicer though. Perhaps a matter of preference, but I find it weird when it&#39;s the same x being matched in every arm."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1536090782, "post_id": 52172555, "comment_id": 91296978, "body": "It is a little weird, but it lines up nicer than <code>if ... else if ... else</code> and is more compact after rustfmt :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1536134428, "post_id": 52172555, "comment_id": 91310017, "body": "Note: since <code>if</code> is an expression, you don&#39;t actually need the <code>return</code> and <code>;</code> in the last case."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1536089731, "last_edit_date": 1536089731, "creation_date": 1536087883, "answer_id": 52172555, "question_id": 52172090, "link": "https://stackoverflow.com/questions/52172090/bitwise-or-in-match/52172555#52172555", "title": "Bitwise or in match?", "body": "<p>The left part of each arm of a <code>match</code> expression is a <em>pattern</em> not an <em>expression</em>. That means you can only do pattern matching there. You can't use operators, accessors and function calls.</p>\n\n<p>Unfortunately, I think you might be stuck with doing an <code>if..else</code>:</p>\n\n<pre><code>if x == FLAG1 | FLAG2 { return 5 }\nelse if x == FLAG1 | FLAG2 { return 6 }\nelse if x == FLAG1 | FLAG2 { return y }\nelse { return 0 };\n</code></pre>\n\n<p>But, since <code>if..else</code> (and <code>match</code>) are expressions, you can at least eliminate the repeated <code>return</code>:</p>\n\n<pre><code>return if x == FLAG1 | FLAG2 { 5 }\nelse if x == FLAG1 | FLAG2 { 6 }\nelse if x == FLAG1 | FLAG2 { y }\nelse { 0 };\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4690, "user_id": 2019549, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/900a3735d55a0473c975ba9266bf0c68?s=128&d=identicon&r=PG", "display_name": "cambunctious", "link": "https://stackoverflow.com/users/2019549/cambunctious"}, "is_accepted": false, "score": 1, "last_activity_date": 1597429286, "last_edit_date": 1597429286, "creation_date": 1597353374, "answer_id": 63403307, "question_id": 52172090, "link": "https://stackoverflow.com/questions/52172090/bitwise-or-in-match/63403307#63403307", "title": "Bitwise or in match?", "body": "<p>I wrote a little macro to transform your code into a <code>match</code> with <code>if</code> guards. I named it <code>switch!</code> since it works a little more like <code>switch</code> from other languages.</p>\n<p><a href=\"https://github.com/camsteffen/switch-statement-rust\" rel=\"nofollow noreferrer\">https://github.com/camsteffen/switch-statement-rust</a></p>\n<pre class=\"lang-rust prettyprint-override\"><code>switch! { x;\n    FLAG1 | FLAG2 =&gt; return 5,\n    FLAG1 | FLAG3 =&gt; return 6,\n    FLAG2 | FLAG3 =&gt; return y,\n    _ =&gt; return 0,\n}\n</code></pre>\n"}], "owner": {"reputation": 6583, "user_id": 931721, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7890aab3c851571d48e6c4f7459f187f?s=128&d=identicon&r=PG&f=1", "display_name": "Jakob Weisblat", "link": "https://stackoverflow.com/users/931721/jakob-weisblat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 585, "favorite_count": 0, "accepted_answer_id": 52172555, "answer_count": 3, "score": 4, "last_activity_date": 1597429286, "creation_date": 1536085692, "last_edit_date": 1536088154, "question_id": 52172090, "link": "https://stackoverflow.com/questions/52172090/bitwise-or-in-match", "title": "Bitwise or in match?", "body": "<p>I have a variable that consists of several flags ORed together, and I'd like to test which combination of them my value is and act on that. Unfortunately, the <code>|</code> operator has a different meaning in a <code>match</code> statement, so I can't write</p>\n\n<pre><code>match x {\n    (FLAG1 | FLAG2) =&gt; return 5;\n    (FLAG1 | FLAG3) =&gt; return 6;\n    (FLAG2 | FLAG3) =&gt; return y;\n    _ =&gt; return 0;\n}\n</code></pre>\n\n<p>and instead I need to precompute <code>(FLAG1 | FLAG2)</code> and so on, making my code ugly and unreadable. Is there a better way to do this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1536083038, "post_id": 52170281, "comment_id": 91293681, "body": "Can you also post your Cargo.lock?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1536089099, "post_id": 52170281, "comment_id": 91296211, "body": "It&#39;s possible that you have a new version of <code>rand</code> being pulled in by another dependency. I don&#39;t know if this will work in an older Rust, but maybe try installing cargo-tree: <code>cargo install cargo-tree</code>, and see what is going on."}, {"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 0, "creation_date": 1536121218, "post_id": 52170281, "comment_id": 91304224, "body": "<a href=\"https://users.rust-lang.org/t/cargo-rand-compilation-errors/20141\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/cargo-rand-compilation-errors/20141</a>"}], "owner": {"reputation": 37, "user_id": 10233671, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f2836463fb194c064072a67eca07bcc?s=128&d=identicon&r=PG&f=1", "display_name": "JRD", "link": "https://stackoverflow.com/users/10233671/jrd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 220, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1536088961, "creation_date": 1536077310, "last_edit_date": 1536088961, "question_id": 52170281, "link": "https://stackoverflow.com/questions/52170281/cargo-rand-compilation-errors", "title": "Cargo rand compilation errors", "body": "<p>This is a really basic question so please bear with me.</p>\n\n<p>I have a project that needs to use an old build of Rust (cargo 0.19.0-nightly c995e9e 2017-03-17). It uses <code>rand</code> so I added <code>rand=\"0.4.3\"</code> as a dependency. When the registry updates, <strong>rand 0.5.5</strong> (latest) is automatically downloaded and it also runs into \"break loop\" error which was stabilized a while ago. I am not sure how to suppress this error or make it not install the latest version.</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"hello-world\"\nversion = \"0.0.0\"\nauthors = [\"\"]\n\n[dependencies]\ntime = \"&gt;=0.1.0\"\nrand = \"=0.4.3\"\nrustc-serialize =\"0.3\"\nhistogram = \"*\"\n</code></pre>\n\n<p>I get this error. The repository is not cloned locally so I cannot apply the patch rust-lang/rust#37339.</p>\n\n<blockquote>\n  <p>Compiling rand v0.5.5 error: break with a value is experimental (see\n  issue #37339)\n  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs:674:25\n  | 674 | break d; | ^^^^^^^ |\n  = help: add #![feature(loop_break_value)] to the crate attributes to enable</p>\n  \n  <p>error: pub(restricted) syntax is experimental (see issue #32409)\n  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs:71:5\n  | 71 | pub(crate) trait IntoFloat { | ^^^^^ |\n  = help: add #![feature(pub_restricted)] to the crate attributes to enable</p>\n  \n  <p>error: pub(restricted) syntax is experimental (see issue #32409)\n  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs:174:27\n  | 174 | #[cfg(feature=\"std\")] pub(crate) mod thread; | ^^^^^ |\n  = help: add #![feature(pub_restricted)] to the crate attributes to enable</p>\n  \n  <p>error: aborting due to 3 previous errors</p>\n  \n  <p>error: Could not compile rand.</p>\n</blockquote>\n\n<p>What am i doing wrong? What is the right way to go about it?</p>\n"}, {"tags": ["rust", "wireshark", "python-2.x", "pcap", "libpcap"], "comments": [{"owner": {"reputation": 7068, "user_id": 6884590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b0b52ad2211a26c4e1cefb472e09cbe?s=128&d=identicon&r=PG", "display_name": "pchaigno", "link": "https://stackoverflow.com/users/6884590/pchaigno"}, "edited": false, "score": 0, "creation_date": 1536077543, "post_id": 52169131, "comment_id": 91291192, "body": "Could you add the output of <code>hexdump -n 56 temp.rawpcap</code> to your post? It should display the first few bytes (56) of your <code>.pcap</code> file and will make debugging much easier for anyone reading your question."}], "answers": [{"comments": [{"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "edited": false, "score": 0, "creation_date": 1536132799, "post_id": 52178813, "comment_id": 91309055, "body": "Thank you so much! I am aware of the endianness issue, both things are running on the same machine, so its fine."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1536149959, "last_edit_date": 1536149959, "creation_date": 1536130200, "answer_id": 52178813, "question_id": 52169131, "link": "https://stackoverflow.com/questions/52169131/write-pcap-packet-to-file-without-the-file-header/52178813#52178813", "title": "Write pcap packet to file without the file header", "body": "<p>According to <a href=\"https://wiki.wireshark.org/Development/LibpcapFileFormat#Record_.28Packet.29_Header\" rel=\"nofollow noreferrer\">the pcap data file specification</a>, the timestamp consists of two 32-bit values, but <a href=\"https://docs.rs/pcap/0.7.0/pcap/struct.PacketHeader.html\" rel=\"nofollow noreferrer\"><code>pcap::PacketHeader</code></a> uses a <a href=\"https://docs.rs/libc/0.2.29/libc/struct.timeval.html\" rel=\"nofollow noreferrer\"><code>timeval</code></a>, which consists of two 64-bit values.</p>\n\n<p>You can't write the header as raw, you will need to write its fields by hand:</p>\n\n<pre><code>temp.write_all(any_as_u8_slice(&amp;(packet.header.ts.tv_sec as u32))).unwrap();\ntemp.write_all(any_as_u8_slice(&amp;(packet.header.ts.tv_usec as u32))).unwrap();\ntemp.write_all(any_as_u8_slice(&amp;packet.header.caplen)).unwrap();\ntemp.write_all(any_as_u8_slice(&amp;packet.header.len)).unwrap();\n</code></pre>\n\n<p>Since you're not specifying byte-orders anywhere, you will also need to make sure that you run your Python script on a machine with the same endianness as the machine that runs the Rust code.</p>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 485, "favorite_count": 1, "accepted_answer_id": 52178813, "answer_count": 1, "score": 1, "last_activity_date": 1536149959, "creation_date": 1536073187, "last_edit_date": 1536089268, "question_id": 52169131, "link": "https://stackoverflow.com/questions/52169131/write-pcap-packet-to-file-without-the-file-header", "title": "Write pcap packet to file without the file header", "body": "<p>I have a <code>pcap::Packet</code> and would like to write it to file without the pcap file header and add the file header later in Python. I know about <code>pcap::Savefile</code> but unfortunately I cannot use this because it auto writes the pcap file header.</p>\n\n<p><a href=\"https://github.com/ebfull/pcap/blob/master/src/lib.rs#L793\" rel=\"nofollow noreferrer\">How the pcap crate writes the Packet</a></p>\n\n<p><a href=\"https://wiki.wireshark.org/Development/LibpcapFileFormat\" rel=\"nofollow noreferrer\">Description of the pcap data format</a></p>\n\n<p>I have tried something like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate pcap;\n\nuse std::{fs::OpenOptions, io::Write, mem, slice};\n\nconst DLT_IEEE802_11_RADIO: i32 = 127;\nconst SNAPLEN: i32 = 4096;\n\nunsafe fn any_as_u8_slice&lt;T: Sized&gt;(p: &amp;T) -&gt; &amp;[u8] {\n    slice::from_raw_parts((p as *const T) as *const u8, mem::size_of::&lt;T&gt;())\n}\n\nfn main() {\n    let mut capture = pcap::Capture::from_device(pcap::Device::lookup().unwrap())\n        .unwrap()\n        .timeout(1)\n        .rfmon(true)\n        .snaplen(SNAPLEN)\n        .open()\n        .unwrap();\n\n    capture\n        .set_datalink(pcap::Linktype(DLT_IEEE802_11_RADIO))\n        .unwrap();\n\n    let mut temp = OpenOptions::new()\n        .create(true)\n        .append(true)\n        .open(\"temp.rawpcap\")\n        .unwrap();\n\n    let mut count = 0;\n    while count &lt; 10 {\n        match capture.next() {\n            Ok(packet) =&gt; {\n                count += 1;\n                unsafe {\n                    temp.write_all(any_as_u8_slice(packet.header)).unwrap();\n                }\n                temp.write_all(&amp;packet.data).unwrap();\n            }\n            Err(pcap::Error::TimeoutExpired) =&gt; continue,\n            Err(e) =&gt; {\n                panic!(\"unhandled error: {:?}\", e);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>And am adding the header with</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import struct\n\nDLT_IEEE802_11_RADIO = 127\nSNAPLEN = 4096\n\npcap_file_header = struct.pack('IHHiIII', 0xa1b2c3d4, 0x2, 0x4, 0, 0, SNAPLEN, DLT_IEEE802_11_RADIO)\n\nwith open('temp.rawpcap', 'rb') as f:\n    data = f.read()\n\nwith open('temp.pcap', 'wb') as f:\n    f.write(pcap_file_header + data)\n</code></pre>\n\n<p>When I open the result <code>.pcap</code> file in Wireshark I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>The capture file appears to be damaged or corrupt.\n(pcap: File has 560197-byte packet, bigger than maximum of 262144)\n</code></pre>\n\n<p>Here is a hexdump of each file (1 packet taken at a SNAPLEN of 256):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ hexdump -n 56 temp.rawpcap\n0000000 d4 c5 8e 5b 00 00 00 00 43 78 02 00 00 00 00 00\n0000010 00 01 00 00 50 01 00 00 14 a0 2e 09 01 00 00 00\n0000020\n\n$ hexdump -n 56 temp.pcap\n0000000 d4 c3 b2 a1 02 00 04 00 00 00 00 00 00 00 00 00\n0000010 00 01 00 00 7f 00 00 00 d4 c5 8e 5b 00 00 00 00\n0000020 43 78 02 00 00 00 00 00 00 01 00 00 50 01 00 00\n0000030 14 a0 2e 09 01 00 00 00\n0000038\n</code></pre>\n"}, {"tags": ["oop", "rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1536063787, "post_id": 52166060, "comment_id": 91282063, "body": "Can you please try to create a MCVE, e.g. replace <code>User</code> by an other type (<code>&amp;str</code> for example)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536064136, "post_id": 52166060, "comment_id": 91282306, "body": "Why are you calling <code>to_string</code> at all? This will create an <i>owned</i> string, which will not have the <code>&#39;a</code> lifetime - it will only live as long as the <code>new_msg</code> function."}, {"owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536066503, "post_id": 52166060, "comment_id": 91283856, "body": "@PeterHall would it make sense calling &#39;to_owned&#39; instead of &#39;to_string&#39; or nothing at all?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536070687, "post_id": 52166060, "comment_id": 91286832, "body": "<code>to_owned</code> on a <code>&amp;str</code> is identical to <code>to_string</code>."}], "answers": [{"tags": [], "owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "is_accepted": false, "score": 0, "last_activity_date": 1536065254, "last_edit_date": 1536065254, "creation_date": 1536064345, "answer_id": 52166446, "question_id": 52166060, "link": "https://stackoverflow.com/questions/52166060/values-does-not-live-long-enough-in-constructor-and-setter-in-oop-rust/52166446#52166446", "title": "Values does not live long enough in constructor and setter in OOP Rust", "body": "<p>You don't need <code>to_string</code> if you want to store a reference to a string. Also, <code>set_user</code> must also take a reference, not a value (because there's no field in the struct to store it):</p>\n\n<pre><code>pub struct User&lt;'a&gt; {\n    pub data: &amp;'a u8,\n}\n\n/// Represents a simple text message.\npub struct SimpleMessage&lt;'a&gt; {\n    pub user: &amp;'a User&lt;'a&gt;,\n    pub content: &amp;'a str,\n}\n\nimpl&lt;'a&gt; SimpleMessage&lt;'a&gt; {\n    fn new_msg(user: &amp;'a User, content: &amp;'a str) -&gt; SimpleMessage&lt;'a&gt; {\n        SimpleMessage { user, content }\n    }\n\n    pub fn set_user(&amp;mut self, user: &amp;'a User&lt;'a&gt;) {\n        self.user = user;\n    }\n}\n\nfn main() {\n    let data1 = 1;\n    let data2 = 2;\n    let user1 = User { data: &amp;data1 };\n    let user2 = User { data: &amp;data2 };\n    let mut msg = SimpleMessage::new_msg(&amp;user1, \"test\");\n    msg.set_user(&amp;user2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bba43269e1513a94ede2ba59b520672a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>If you want to save strings that are created at runtime (for example, with <code>format!()</code> call) you may want to store a <code>String</code>:</p>\n\n<pre><code>pub struct SimpleMessage&lt;'a&gt; {\n    pub user: &amp;'a User&lt;'a&gt;,\n    pub content: String,\n}\n\n. . . \n\nfn new_msg(user: &amp;'a User, content: String) -&gt; SimpleMessage&lt;'a&gt; {\n    SimpleMessage { user, content }\n}\n\n. . . \n\nlet mut msg = SimpleMessage::new_msg(&amp;user1, format!(\"created at {}\", \"runtime\"));\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=13d5979a39364c7db87fc6180d70839e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1536064403, "creation_date": 1536064403, "answer_id": 52166464, "question_id": 52166060, "link": "https://stackoverflow.com/questions/52166060/values-does-not-live-long-enough-in-constructor-and-setter-in-oop-rust/52166464#52166464", "title": "Values does not live long enough in constructor and setter in OOP Rust", "body": "<p><code>str.to_string()</code> will create an <em>owned</em> <code>String</code>, which will not live longer than the <code>new_msg</code> method, so you will not be able to pass a slice of it anywhere. Instead, just use the <code>&amp;str</code> argument, since it is valid for the lifetime <code>'a</code>, which is what you need.</p>\n\n<pre><code>/// Creates a new SimpleMessage.\nfn new_msg(u: &amp;'a User, c: &amp;'a str) -&gt; SimpleMessage&lt;'a&gt; {\n    SimpleMessage { user: u, content: c, }\n}\n</code></pre>\n\n<p>The other method also has a problem. You are trying to give an owned <code>User</code>, but the <code>SimpleMessage</code> struct requires a reference. It should look like this:</p>\n\n<pre><code>/// Sets a User in a Message.\npub fn set_user(&amp;mut self, u: &amp;'a User&lt;'a&gt;){\n    self.user = u;\n}\n</code></pre>\n"}], "owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 52166464, "answer_count": 2, "score": 0, "last_activity_date": 1536066322, "creation_date": 1536063021, "last_edit_date": 1536066322, "question_id": 52166060, "link": "https://stackoverflow.com/questions/52166060/values-does-not-live-long-enough-in-constructor-and-setter-in-oop-rust", "title": "Values does not live long enough in constructor and setter in OOP Rust", "body": "<p>I have the following code:</p>\n\n<pre><code>//! # Messages\n\n/// Represents a simple text message.\npub struct SimpleMessage&lt;'a&gt; {\n    pub user: &amp;'a str,\n    pub content: &amp;'a str,\n}\n\nimpl&lt;'a&gt; SimpleMessage&lt;'a&gt; {\n\n    /// Creates a new SimpleMessage.\n    fn new_msg(u: &amp;'a str, c: &amp;'a str) -&gt; SimpleMessage&lt;'a&gt; {\n        SimpleMessage { user: u,\n                        content: &amp;c.to_string(), }\n    }\n\n    /// Sets a User in a Message.\n    pub fn set_user(&amp;mut self, u: User&lt;'a&gt;){\n        self.user = &amp;u;\n    }\n}\n</code></pre>\n\n<p>But <code>$ cargo run</code> returns:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/messages.rs:34:35\n   | \n34 |                         content: &amp;c.to_string(), }\n   |                                   ^^^^^^^^^^^^^ temporary value does not live long enough\n35 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 28:1...\n   |\n28 | impl&lt;'a&gt; SimpleMessage&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0597]: `u` does not live long enough\n   |\n54 |         self.user = &amp;u;\n   |                      ^ borrowed value does not live long enough\n55 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 28:1...\n  --&gt; src/messages.rs:28:1\n   |\n28 | impl&lt;'a&gt; SimpleMessage&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I've tried changing the borrowing format of the variables at the function signature and it's contents with no success, it doesn't seem as a borrowing issue, but I don't really understand it, as the lifetime <code>&lt;'a&gt;</code> defined at <code>pub struct SimpleMessage&lt;'a&gt;</code> clearly designates the longest lifetime to it's components, and the <code>impl&lt;'a&gt; SimpleMessage&lt;'a&gt;</code> uses the same lifetime.</p>\n\n<p>What am I missing?</p>\n\n<p><strong>Similar Question:</strong>\n<a href=\"https://stackoverflow.com/questions/28469667/borrowed-value-does-not-live-long-enough-when-using-the-builder-pattern\">\u201cborrowed value does not live long enough\u201d when using the builder pattern</a>\nDoesn't really help resolve this issue.</p>\n"}, {"tags": ["linker", "rust", "embedded", "libc"], "comments": [{"owner": {"reputation": 11381, "user_id": 4774918, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kQQAl.jpg?s=128&g=1", "display_name": "too honest for this site", "link": "https://stackoverflow.com/users/4774918/too-honest-for-this-site"}, "edited": false, "score": 0, "creation_date": 1536073019, "post_id": 52165793, "comment_id": 91288519, "body": "Nevertheless it&#39; a dupe. If the solution does not work, you should make clear <b>why</b> not and what you have tried to solve it already. As written, it&#39;s just an error report."}, {"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "reply_to_user": {"reputation": 11381, "user_id": 4774918, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kQQAl.jpg?s=128&g=1", "display_name": "too honest for this site", "link": "https://stackoverflow.com/users/4774918/too-honest-for-this-site"}, "edited": false, "score": 1, "creation_date": 1536073645, "post_id": 52165793, "comment_id": 91288904, "body": "@toohonestforthissite What extra information do you need? I think it&#39;s in my posting, that the code does exactly what is suggested there (putting the library with the duplicated symbols as the last source file). And the caused result from the linker is also shown in it. I would consider this a prove, that it&#39;s a different thing and not a duplicate."}, {"owner": {"reputation": 26689, "user_id": 5769463, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/71a28b5fac23ee656a32cc7ea6df54ec?s=128&d=identicon&r=PG&f=1", "display_name": "ead", "link": "https://stackoverflow.com/users/5769463/ead"}, "edited": false, "score": 0, "creation_date": 1536083787, "post_id": 52165793, "comment_id": 91293989, "body": "But this is not how you usually would pass a static library to the linker. You should do it via \u2018-L/parth_to_lib -ltbmodem\u2019 and only then will the linker be able to skip some definitions from the static library if they already known."}, {"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "reply_to_user": {"reputation": 26689, "user_id": 5769463, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/71a28b5fac23ee656a32cc7ea6df54ec?s=128&d=identicon&r=PG&f=1", "display_name": "ead", "link": "https://stackoverflow.com/users/5769463/ead"}, "edited": false, "score": 0, "creation_date": 1536086470, "post_id": 52165793, "comment_id": 91295170, "body": "@ead Thanks for the suggestion. During experimentation I often just specify the library file. Later I fix that and extend the configure.ac to nicely search for the correct path for -L. According to <code>man gcc</code> this should make no difference: &quot;The only difference between using an -l option and specifying a file name is that -l surrounds library with lib and .a and searches several directories.&quot; But to make sure I tried using -L and -l \u2026 but I got exactly the same error."}, {"owner": {"reputation": 3381, "user_id": 18961, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/b393e0dcc290c753de752f117866f833?s=128&d=identicon&r=PG", "display_name": "livingtech", "link": "https://stackoverflow.com/users/18961/livingtech"}, "edited": false, "score": 1, "creation_date": 1586532262, "post_id": 52165793, "comment_id": 108168527, "body": "This doesn&#39;t seem like exactly the same problem to me, though it&#39;s not in my typical wheelhouse. I have a friend who wants to post an answer to this question, and would do so if it were reopened."}], "answers": [{"tags": [], "owner": {"reputation": 875, "user_id": 805673, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b178fbd58e19ea54b1e72a18dc5df045?s=128&d=identicon&r=PG", "display_name": "Binabik", "link": "https://stackoverflow.com/users/805673/binabik"}, "is_accepted": false, "score": 0, "last_activity_date": 1603475137, "creation_date": 1603475137, "answer_id": 64504950, "question_id": 52165793, "link": "https://stackoverflow.com/questions/52165793/multiple-definition-of-memset-when-building-static-rust-library-to-be-used-for/64504950#64504950", "title": "multiple definition of `memset&#39; when building static rust library to be used for Nordic SDK program", "body": "<p>I had the same problem as you today and I can offer a possible answer (it works in my case) and a partial response why this works:</p>\n<p><strong>TL;DR:</strong> My solution was to place my Rust library <em>before</em> <code>libc</code> on the linker line. In your case, this would mean to change your call to:</p>\n<pre><code>arm-none-eabi-gcc [...] specs=nano.specs -ltbmodem -lc -lnosys [...]\n</code></pre>\n<p><strong>Explanation:</strong> Examining my Rust library shows, as in your case, that symbols for <code>memcpy</code>, <code>memset</code> and so forth are exported from my static library. Note that those are contained in an object with several other memory related functions:</p>\n<pre><code>$ nm librustlib.a\n[...]\ncompiler_builtins-17b2875688712538.compiler_builtins.eth5fjl6-cgu.100.rcgu.o:\n00000000 T bcmp\n00000000 T memcmp\n00000000 T memcpy\n00000000 T memmove\n00000000 T memset\n00000000 T _ZN17compiler_builtins3mem40__llvm_memcpy_element_unordered_atomic_117h2c6de8c0ed769de1E\n[... seven &quot;compiler_builtins&quot; functions more omitted ...]\n00000000 T _ZN17compiler_builtins3mem41__llvm_memmove_element_unordered_atomic_417h971099a5edfec01eE\n[...]\n</code></pre>\n<p>Some of those functions are also exported from <code>libc</code>, for example:</p>\n<pre><code>$ nm /usr/arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc_nano.a\n[...]\nlib_a-memcpy.o:\n\nlib_a-memcpy-stub.o:\n00000000 t $t\n00000001 T memcpy\n[...]\n</code></pre>\n<p>Specifically, the five functions without name-mangling (the functions with <em>normal</em> names) can be found in <code>libc_nano.a</code>.</p>\n<p>To understand if link order makes a difference here, I have read <a href=\"https://eli.thegreenplace.net/2013/07/09/library-order-in-static-linking\" rel=\"nofollow noreferrer\">Library Order in Static Linking</a> which contains the following interesting section:</p>\n<blockquote>\n<p>When the linker encounters a new library, things are a bit more interesting. The linker goes over all the objects in the library. For each one, it first looks at the symbols it exports.</p>\n<ul>\n<li>If any of the symbols it exports are on the undefined list, the object is added to the link and the next step is executed. Otherwise, the next step is skipped.</li>\n<li>If the object has been added to the link, it's treated as described above - its undefined and exported symbols get added to the symbol table.</li>\n<li>Finally, if any of the objects in the library has been included in the link, the library is rescanned again - it's possible that symbols imported by the included object can be found in other objects within the same library.</li>\n</ul>\n</blockquote>\n<p>So when the linker scans a library, every contained object is handled separately and can be used or be omitted from the final result, depending on whether it seems to be required to the linker, i.e. whether it defines a symbol that is still undefined. In the article above, this is stated as:</p>\n<blockquote>\n<p>Also note that when a library is examined, an object file within it can be left out of the link if it does not provide symbols that the symbol table needs. This is a very important feature of static linking. The C library I mentioned before makes a heavy use of this feature, by mostly splitting itself to an-object-per-function.</p>\n</blockquote>\n<p>For linking my Rust library with C code (and thus <code>libc</code>) this means specifically:</p>\n<ul>\n<li>If the Rust library is placed earlier than <code>libc</code> on the command-line, the &quot;compiler_builtins&quot;-object defining the memory-related functions will be linked in the final result. When <code>libc</code> is examined afterwards, the memory-related functions are already defined so that the corresponding objects from <code>libc</code> will be omitted.</li>\n<li>If the Rust library is placed later on the command-line, the memory-related functions from <code>libc</code> will be used. Then, the linker <em>also</em> uses the object from the Rust library, most probably because of the name-mangled functions are required. This leaves us with having <code>memcpy</code> and the like defined twice which is an error.</li>\n</ul>\n<p>I hope this information is still helpful or can be helpful to anyone who stumbles upon the same problem in the future.</p>\n"}], "owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 560, "favorite_count": 2, "answer_count": 1, "score": 3, "last_activity_date": 1603475137, "creation_date": 1536062184, "last_edit_date": 1536086927, "question_id": 52165793, "link": "https://stackoverflow.com/questions/52165793/multiple-definition-of-memset-when-building-static-rust-library-to-be-used-for", "title": "multiple definition of `memset&#39; when building static rust library to be used for Nordic SDK program", "body": "<blockquote>\n  <p><strong>Note:</strong> I do <em>not</em> see that this is a duplicate of the other question. It's\n  in my question, that I checked the suggetion provided there and this\n  doesn't help here (as shown below). If you see this differently, I would like to know which kind of information you are thinking of, when you write \u201cIf the solution does not work, you should make clear why not and what you have tried to solve it already.\u201d I'm happy to provide everything that is needed to understand the problem.</p>\n  \n  <p>That's way I wrote this question to ask for additional suggestions what I can test or where I could search for additional solutions.</p>\n  \n  <p>I know that this question is a long one. But the text I wrote is actually as short as possible. It's just the shell output I provide, that makes it long. So I think it actually is quite readable.</p>\n</blockquote>\n\n<p>I try to build a static library in Rust, that I want to use in an embedded program, that runs on a Nordic nRF52832 bluetooth low energy micro controller.</p>\n\n<p>The problem is that the static library that Rust generates contains symbols, that are also defined by libc_nano:</p>\n\n<pre><code>/usr/lib/gcc/arm-none-eabi/7.3.1/../../../arm-none-eabi/bin/ld: ../../modem/target/thumbv7em-none-eabihf/release/libtbmodem.a(compiler_builtins-ace0cbd4c713eeda.compiler_builtins.8gdoevk6-cgu.12.rcgu.o): in function `memset':\n/checkout/src/rustc/compiler_builtins_shim/../../libcompiler_builtins/src/mem.rs:47: multiple definition of `memset'; /usr/lib/gcc/arm-none-eabi/7.3.1/../../../arm-none-eabi/lib/thumb/v7e-m/fpv4-sp/hard/libc_nano.a(lib_a-memset.o):/build/newlib-4qXI0C/newlib-3.0.0.20180802/build_nano/arm-none-eabi/thumb/v7e-m/fpv4-sp/hard/newlib/libc/string/../../../../../../../../../newlib/libc/string/memset.c:41: first defined here\ncollect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>Looking at the output of <code>nm</code> is see, that indeed the library compiled by rust does define <code>memset</code> and some other typical libc functions:</p>\n\n<pre><code>$ nm target/thumbv7em-none-eabihf/release/libtbmodem.a|grep mem\n         U __aeabi_memclr\n         U __aeabi_memcpy\n         U __aeabi_memclr\n         U __aeabi_memcpy\n         U __aeabi_memcpy\n         U __aeabi_memmove\n         U __aeabi_memcpy\n         U __aeabi_memcpy\n         U __aeabi_memmove\n         U __aeabi_memcpy\n         U memcmp\n         U __aeabi_memcpy\n00000000 T memcmp\n00000000 T memcpy\n00000000 T memmove\n00000000 T memset\n00000000 W __aeabi_memclr\n00000000 W __aeabi_memclr4\n00000000 W __aeabi_memclr8\n00000000 W __aeabi_memcpy\n00000000 W __aeabi_memcpy4\n00000000 W __aeabi_memcpy8\n00000000 W __aeabi_memmove\n00000000 W __aeabi_memmove4\n00000000 W __aeabi_memmove8\n00000000 W __aeabi_memset\n00000000 W __aeabi_memset4\n00000000 W __aeabi_memset8\n         U memcmp\n00000000 T _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n00000000 T _ZN4core5slice6memchr7memrchr17hed16b4d75d82bdf8E\n         U __aeabi_memcpy\n         U memcmp\n         U _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n         U __aeabi_memclr4\n         U __aeabi_memcpy4\n         U memcmp\n         U __aeabi_memcpy\n         U __aeabi_memset\n         U memcmp\n         U _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n         U __aeabi_memclr4\n         U __aeabi_memcpy4\n         U __aeabi_memset\n         U __aeabi_memclr4\n         U __aeabi_memcpy4\n         U memcmp\n</code></pre>\n\n<p>Interestingly these colliding symbols aren't generated by Rust, when I compile for my host architecture <code>x86_64-unknown-linux-gnu</code>:</p>\n\n<pre><code>$ nm target/x86_64-unknown-linux-gnu/release/libtbmodem.a |grep mem\n                 U memcpy\n                 U memset\n                 U memcpy\n                 U memset\n                 U memcpy\n                 U memmove\n                 U memcpy\n                 U memcpy\n                 U memmove\n                 U memcmp\n                 U memcpy\n                 U memcpy\n0000000000000000 T _ZN17compiler_builtins3mem6memcmp17hd848cdf5fbc51bd1E\n0000000000000000 T _ZN17compiler_builtins3mem6memcpy17he0a8277ca9da5208E\n0000000000000000 T _ZN17compiler_builtins3mem6memset17h0fcc19dd786ae994E\n0000000000000000 T _ZN17compiler_builtins3mem7memmove17h75c47f31c61a641fE\n0000000000000000 T _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n0000000000000000 T _ZN4core5slice6memchr7memrchr17hed16b4d75d82bdf8E\n                 U memcmp\n                 U memcpy\n                 U _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n                 U memcmp\n                 U memcpy\n                 U memset\n                 U memcmp\n                 U memcpy\n                 U _ZN4core5slice6memchr6memchr17h3803f373e8c2e0b4E\n                 U memcpy\n                 U memset\n                 U memcmp\n                 U memcpy\n</code></pre>\n\n<p>What is the reason for Rust to define these symbols when compiling for ARM but not when compiling for x86_64?</p>\n\n<p>I know, that the same error is also discussed in <a href=\"https://stackoverflow.com/questions/50433610/multiple-definition-of-memcmp-error-when-linking-rust-staticlib-with-embedded\">&quot;multiple definition of `memcmp&quot; error when linking Rust staticlib with embedded C program</a>, but the solution provided there doesn't work for me. Actually I already have the static library produced by rust as the last argument to the linker call:</p>\n\n<blockquote>\n  <p>arm-none-eabi-gcc -DBUILD=\\\"<code>date +%F</code>\\\" -DBUILDY=<code>date +%Y</code> -DBUILDM=<code>date +%-m</code> -DBUILDD=<code>date +%-d</code> -mcpu=cortex-m4 -mthumb -mabi=aapcs -mfloat-abi=hard -mfpu=fpv4-sp-d16 -ffunction-sections -fdata-sections -fno-strict-aliasing -fno-builtin --short-enums -Iconfig -std=c99 -DNRF52 -DNRF52832_XXAA -DBOARD_CUSTOM -DBLE_STACK_SUPPORT_REQD -DNRF_SD_BLE_API_VERSION=6 -DNRF_DFU_SVCI_ENABLED -DNRF_DFU_TRANSPORT_BLE=1 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -Wall -Werror -DFLOAT_ABI_HARD -DCONFIG_GPIO_AS_PINRESET -DNRF52_PAN_74 -I/home/matthias/source/tbblue/libtrailer/src @sdk_include_paths -Og -g3 -DDEBUG -DDEBUG_NRF  -mthumb -mabi=aapcs -mcpu=cortex-m4 -Wl,--gc-sections --specs=nano.specs -lc -lnosys -lm -Wl,-Map=tbplatform.map,--wrap,_sbrk -L/home/matthias/source/tbblue/libtrailer/src -L /home/matthias/source/tbblue/nRF5_SDK//components/toolchain/gcc -T tbplatform.ld -o tbplatform .sdk/modules/nrfx/mdk/gcc_startup_nrf52.o nrfplatform.o base64.o bleinithelper.o ble_dfu_service.o broadcast.o config_service.o fw_version.o main.o mac_address.o modem.o nrf_ble_qwrs.o on_board_flash.o service.o system.o compartment_util.o saved_config.o temperature_util.o tick_util.o digitalinput/digital.o spi/spi.o spi/can/can_controller.o spi/can/can_interrupt.o spi/can/can_timer.o spi/can/can.o spi/uart/spi_uart.o uart/datacold500_uart.o uart/datacold600_uart.o uart/euroscan_uart.o uart/ibox_uart.o uart/uart.o .sdk/components/ble/ble_advertising/ble_advertising.o .sdk/components/ble/ble_services/ble_dfu/ble_dfu.o .sdk/components/ble/ble_services/ble_dfu/ble_dfu_unbonded.o .sdk/components/ble/common/ble_advdata.o .sdk/components/ble/common/ble_conn_params.o .sdk/components/ble/common/ble_conn_state.o .sdk/components/ble/common/ble_srv_common.o .sdk/components/ble/nrf_ble_gatt/nrf_ble_gatt.o .sdk/components/ble/peer_manager/gatt_cache_manager.o .sdk/components/ble/peer_manager/gatts_cache_manager.o .sdk/components/ble/peer_manager/id_manager.o .sdk/components/ble/peer_manager/peer_database.o .sdk/components/ble/peer_manager/peer_data_storage.o .sdk/components/ble/peer_manager/peer_id.o .sdk/components/ble/peer_manager/peer_manager.o .sdk/components/ble/peer_manager/pm_buffer.o .sdk/components/ble/peer_manager/pm_mutex.o .sdk/components/ble/peer_manager/security_dispatcher.o .sdk/components/ble/peer_manager/security_manager.o .sdk/components/boards/boards.o .sdk/components/libraries/atomic/nrf_atomic.o .sdk/components/libraries/atomic_fifo/nrf_atfifo.o .sdk/components/libraries/atomic_flags/nrf_atflags.o .sdk/components/libraries/balloc/nrf_balloc.o .sdk/components/libraries/bootloader/dfu/nrf_dfu_svci.o .sdk/components/libraries/crc16/crc16.o .sdk/components/libraries/experimental_log/src/nrf_log_default_backends.o .sdk/components/libraries/experimental_log/src/nrf_log_backend_rtt.o .sdk/components/libraries/experimental_log/src/nrf_log_backend_serial.o .sdk/components/libraries/experimental_log/src/nrf_log_backend_uart.o .sdk/components/libraries/experimental_log/src/nrf_log_frontend.o .sdk/components/libraries/experimental_log/src/nrf_log_str_formatter.o .sdk/components/libraries/experimental_memobj/nrf_memobj.o .sdk/components/libraries/experimental_section_vars/nrf_section_iter.o .sdk/components/libraries/fds/fds.o .sdk/components/libraries/fifo/app_fifo.o .sdk/components/libraries/fstorage/nrf_fstorage.o .sdk/components/libraries/fstorage/nrf_fstorage_sd.o .sdk/components/libraries/pwr_mgmt/nrf_pwr_mgmt.o .sdk/components/libraries/strerror/nrf_strerror.o .sdk/components/libraries/timer/app_timer.o .sdk/components/libraries/uart/app_uart_fifo.o .sdk/components/libraries/uart/retarget.o .sdk/components/libraries/util/app_error_weak.o .sdk/components/libraries/util/app_util_platform.o .sdk/components/softdevice/common/nrf_sdh.o .sdk/components/softdevice/common/nrf_sdh_ble.o .sdk/components/softdevice/common/nrf_sdh_soc.o .sdk/external/fprintf/nrf_fprintf.o .sdk/external/fprintf/nrf_fprintf_format.o .sdk/external/segger_rtt/SEGGER_RTT.o .sdk/external/segger_rtt/SEGGER_RTT_Syscalls_GCC.o .sdk/external/segger_rtt/SEGGER_RTT_printf.o .sdk/external/tiny-AES128/aes.o .sdk/integration/nrfx/legacy/nrf_drv_spi.o .sdk/integration/nrfx/legacy/nrf_drv_uart.o .sdk/modules/nrfx/drivers/src/nrfx_gpiote.o .sdk/modules/nrfx/drivers/src/nrfx_spis.o .sdk/modules/nrfx/drivers/src/nrfx_uart.o .sdk/modules/nrfx/drivers/src/nrfx_uarte.o .sdk/modules/nrfx/drivers/src/prs/nrfx_prs.o .sdk/modules/nrfx/drivers/src/nrfx_spim.o .sdk/modules/nrfx/mdk/system_nrf52.o -ltrailer ../../modem/target/thumbv7em-none-eabihf/release/libtbmodem.a</p>\n</blockquote>\n\n<p>(It's the file <code>libtbmodem.a</code>.)</p>\n\n<p>What else can I do to get the library linked?</p>\n"}, {"tags": ["matrix", "vector", "rust", "traits", "bounds"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536063855, "post_id": 52163383, "comment_id": 91282111, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/34630695/how-to-write-a-trait-bound-for-adding-two-references-of-a-generic-type\">How to write a trait bound for adding two references of a generic type?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536064479, "post_id": 52163383, "comment_id": 91282516, "body": "Hmm, I think I misread. Did you mean to add a <code>T</code> to a <code>Mat&lt;T&gt;</code> somewhere inside the implementation? That&#39;s what <code>T: for&lt;&#39;b&gt; Add&lt;&amp;&#39;b Mat&lt;T&gt;&gt;</code> would imply. I suspect you actually want <code>for&lt;&#39;b&gt; &amp;&#39;b Mat&lt;T&gt;: Add</code> (but that causes more problems)"}, {"owner": {"reputation": 13, "user_id": 9022084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/045f13a9880784a5cf658a3beb58f935?s=128&d=identicon&r=PG&f=1", "display_name": "hugo.r", "link": "https://stackoverflow.com/users/9022084/hugo-r"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536066663, "post_id": 52163383, "comment_id": 91283963, "body": "I&#39;m not sure I get what you&#39;re asking for, if you mean that i forgot to implement an Add function for a <code>T</code> and a <code>Mat&lt;T&gt;</code> then I don&#39;t think i would need one, since the forloop loops through both vectors in both functions, it would only ever need to add either <code>T + T</code> or <code>Mat&lt;T&gt; + Mat&lt;T&gt;</code>, right? Otherwise, if you mean if I tried to do <code>T + Mat&lt;T&gt;</code>, then no, the test I posted is the only test I have as of yet."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1536071859, "post_id": 52163383, "comment_id": 91287711, "body": "Your <code>where</code> clause is appropriate for <code>T + &amp;Mat&lt;T&gt;</code> but what you&#39;re actually doing inside the function is <code>&amp;Mat&lt;T&gt; + &amp;Mat&lt;T&gt;</code> (I think). But that&#39;s not the whole story because fixing the bound leads to other issues."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1536080184, "post_id": 52163383, "comment_id": 91292393, "body": "I think that, instead of <code>&amp;a[i] + &amp;b[i]</code>, you want <code>a[i].clone() + b[i].clone()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9022084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/045f13a9880784a5cf658a3beb58f935?s=128&d=identicon&r=PG&f=1", "display_name": "hugo.r", "link": "https://stackoverflow.com/users/9022084/hugo-r"}, "edited": false, "score": 0, "creation_date": 1536222522, "post_id": 52180393, "comment_id": 91348463, "body": "Edit: Nope, stupid me. Forgot to derive PartialEq and PartialOrd. As I said, thanks a lot! How&#39;s this not matrices btw? I&#39;ve had them described to me as vectors of vectors.  Thanks man, good explanation! Yeah, I agree that the <code>Mat&lt;Mat&lt;T&gt;&gt;</code> conceptually weak, but that was me just fighting the compiler. Even now that I&#39;ve copied over your code it wont compile if I leave the <code>Mat&lt;Mat&lt;T&gt;&gt;</code> tests in. Still the same error: &quot;An implementation of <code>std::ops::Add</code> might be missing for <code>Mat&lt;Mat&lt;i32&gt;&gt;</code>&quot;, and you saying that it worked for you is making me doubt the existence logic and reason."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 13, "user_id": 9022084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/045f13a9880784a5cf658a3beb58f935?s=128&d=identicon&r=PG&f=1", "display_name": "hugo.r", "link": "https://stackoverflow.com/users/9022084/hugo-r"}, "edited": false, "score": 0, "creation_date": 1536224243, "post_id": 52180393, "comment_id": 91349498, "body": "Usually a matrix is defined as multidimensional array with the same cardinality in each dimension. With your <code>Mat&lt;Mat&lt;T&gt;&gt;</code> type you can have rows of different size."}, {"owner": {"reputation": 13, "user_id": 9022084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/045f13a9880784a5cf658a3beb58f935?s=128&d=identicon&r=PG&f=1", "display_name": "hugo.r", "link": "https://stackoverflow.com/users/9022084/hugo-r"}, "edited": false, "score": 0, "creation_date": 1536239918, "post_id": 52180393, "comment_id": 91359137, "body": "Right, but it won&#39;t actually be able to count those malformed matrices. What would you suggest to fix that, a macro or maybe a <code>Mat::new()</code> member function that makes it conform to the right vector dimensions?"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 1, "last_activity_date": 1536136205, "last_edit_date": 1536136205, "creation_date": 1536135489, "answer_id": 52180393, "question_id": 52163383, "link": "https://stackoverflow.com/questions/52163383/rust-traits-the-bounds-might-not-be-implemented-and-the-traits-ive-implemente/52180393#52180393", "title": "Rust traits: The bounds might not be implemented, and the traits I&#39;ve implemented does not exist", "body": "<p>There are two problems: the wrong associated <code>Output</code> type and the type of <code>retvec</code></p>\n\n<p>Something like that should work:</p>\n\n<pre><code>impl&lt;'a, T&gt; Add for &amp;'a Mat&lt;Mat&lt;T&gt;&gt;\nwhere\n    T: PartialEq + PartialOrd + Add&lt;T&gt; + Clone,\n{\n    type Output = Option&lt;Mat&lt;Mat&lt;&lt;T as std::ops::Add&gt;::Output&gt;&gt;&gt;;\n\n    fn add(self, other: &amp;Mat&lt;Mat&lt;T&gt;&gt;) -&gt; Self::Output {\n        let a: &amp;Vec&lt;Mat&lt;T&gt;&gt; = self.pop();\n        let b: &amp;Vec&lt;Mat&lt;T&gt;&gt; = other.pop();\n        match a.len() == b.len() {\n            true =&gt; {\n                let mut retvec: Vec&lt;Mat&lt;&lt;T as std::ops::Add&gt;::Output&gt;&gt; = Vec::new();\n                for i in 0..a.len() {\n                    if let Some(x) = &amp;a[i] + &amp;b[i] {\n                        retvec.push(x);\n                    }\n                }\n                Some(Mat(retvec))\n            }\n            false =&gt; None,\n        }\n    }\n}\n</code></pre>\n\n<p>A part the compilation issue I think it is not correct to implement a trait for a \"recursive\" struct \nlike <code>Mat&lt;Mat&lt;T&gt;&gt;</code>, if you think <code>X</code> as <code>type X = Mat&lt;T&gt;</code> then the impl for <code>Mat&lt;T&gt;</code> suffices:</p>\n\n<pre><code>impl&lt;'a, T&gt; Add for &amp;'a Mat&lt;T&gt;\nwhere\n    T: PartialEq + PartialOrd + Add&lt;T&gt; + Clone\n</code></pre>\n\n<p>with the additional impl for <code>Mat&lt;T&gt;</code> values:</p>\n\n<pre><code>impl&lt;T&gt; Add for Mat&lt;T&gt;\nwhere\n    T: PartialEq + PartialOrd + Add&lt;T&gt; + Clone\n</code></pre>\n\n<p>Below I post a full working code, please note that the <code>Output</code> type is no more an <code>Option&lt;Mat&lt;T&gt;&gt;</code> but a plain <code>Mat&lt;T&gt;</code> object: \nthis avoids a lot of headaches and probably it is conceptually wrong if you want to impl some type of algebra.</p>\n\n<pre><code>use std::ops::*;\nuse std::vec::Vec;\n\n#[derive(Clone, Debug, PartialEq, PartialOrd)]\nstruct Mat&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl&lt;T&gt; Mat&lt;T&gt; {\n    fn pop(&amp;self) -&gt; &amp;Vec&lt;T&gt; {\n        &amp;self.0\n    }\n}\n\nimpl&lt;T&gt; Add for Mat&lt;T&gt;\nwhere\n    T: PartialEq + PartialOrd + Add&lt;T&gt; + Clone,\n{\n    type Output = Mat&lt;&lt;T as std::ops::Add&gt;::Output&gt;;\n\n    fn add(self, other: Mat&lt;T&gt;) -&gt; Self::Output {\n        let a: &amp;Vec&lt;T&gt; = self.pop();\n        let b: &amp;Vec&lt;T&gt; = other.pop();\n        match a.len() == b.len() {\n            true =&gt; {\n                let mut retvec: Vec&lt;&lt;T as std::ops::Add&gt;::Output&gt; = Vec::new();\n                for i in 0..a.len() {\n                    retvec.push(a[i].clone() + b[i].clone());\n                }\n                Mat(retvec)\n            }\n            false =&gt; Mat(Vec::new()),\n        }\n    }\n}\n\nimpl&lt;'a, T&gt; Add for &amp;'a Mat&lt;T&gt;\nwhere\n    T: PartialEq + PartialOrd + Add&lt;T&gt; + Clone,\n{\n    type Output = Mat&lt;&lt;T as std::ops::Add&gt;::Output&gt;;\n\n    fn add(self, other: &amp;Mat&lt;T&gt;) -&gt; Self::Output {\n        let a: &amp;Vec&lt;T&gt; = self.pop();\n        let b: &amp;Vec&lt;T&gt; = other.pop();\n        match a.len() == b.len() {\n            true =&gt; {\n                let mut retvec: Vec&lt;&lt;T as std::ops::Add&gt;::Output&gt; = Vec::new();\n                for i in 0..a.len() {\n                    retvec.push(a[i].clone() + b[i].clone());\n                }\n                Mat(retvec)\n            }\n            false =&gt; Mat(Vec::new()),\n        }\n    }\n}\n\n\n#[test]\nfn add_override_vectors() {\n    let vec: Mat&lt;Mat&lt;i32&gt;&gt; = Mat(vec![Mat(vec![2, 2, 2]), Mat(vec![3, 3, 3])]);\n    let newvec = &amp;vec + &amp;vec;\n\n    assert_eq!(*newvec.pop(), vec![Mat(vec![4, 4, 4]), Mat(vec![6, 6, 6])]);\n}\n\n#[test]\nfn add_wrong_vectors() {\n    let vec1: Mat&lt;Mat&lt;i32&gt;&gt; = Mat(vec![Mat(vec![2, 2, 2]), Mat(vec![4, 4, 4])]);\n    let vec2: Mat&lt;Mat&lt;i32&gt;&gt; = Mat(vec![Mat(vec![3, 3, 3]), Mat(vec![3, 3])]);\n    let newvec = &amp;vec1 + &amp;vec2;\n\n    assert_eq!(*newvec.pop(), vec![Mat(vec![5, 5, 5]), Mat(vec![])]);\n}\n\n\nfn main() {\n    let vec: Mat&lt;Mat&lt;i32&gt;&gt; = Mat(vec![Mat(vec![1, 2, 2]), Mat(vec![3, 3, 3])]);\n    let newvec = &amp;vec + &amp;vec;\n\n    println!(\"Hello, world!: {:?}\", newvec);\n}\n</code></pre>\n\n<p>PS: Your <code>Mat&lt;T&gt;</code> type is not a matrix in the classical sense, perhaps another name should be more appropriate to avoid confusion.</p>\n"}], "owner": {"reputation": 13, "user_id": 9022084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/045f13a9880784a5cf658a3beb58f935?s=128&d=identicon&r=PG&f=1", "display_name": "hugo.r", "link": "https://stackoverflow.com/users/9022084/hugo-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 1, "accepted_answer_id": 52180393, "answer_count": 1, "score": 0, "last_activity_date": 1536136205, "creation_date": 1536054152, "last_edit_date": 1536079048, "question_id": 52163383, "link": "https://stackoverflow.com/questions/52163383/rust-traits-the-bounds-might-not-be-implemented-and-the-traits-ive-implemente", "title": "Rust traits: The bounds might not be implemented, and the traits I&#39;ve implemented does not exist", "body": "<p>So I've been trying to implement a library for vector and matrix maths, and I created some functions that worked alright but wanted to generalize for all number primitives and add the functionality into the normal operators.</p>\n\n<p>My thought was that I'd create a container for a <code>Vec&lt;T&gt;</code>, that can contain either number types (like <code>i32</code>) or another container for <code>Vec</code>, so that matrices where possible. Ergo:</p>\n\n<pre><code>#[derive(Clone, Debug)]\nstruct Mat&lt;T&gt;(Vec&lt;T&gt;);\n</code></pre>\n\n<p>Then, to add together two vecs of any number I implement Add as:</p>\n\n<pre><code>impl&lt;'a, T&gt; Add for &amp;'a Mat&lt;T&gt;\nwhere T: PartialEq + PartialOrd + Add&lt;T&gt; + Sub&lt;T&gt; + Mul&lt;T&gt; + Div&lt;T&gt; + Rem&lt;T&gt; + Clone {\n    type Output = Option&lt;Mat&lt;&lt;T as std::ops::Add&gt;::Output&gt;&gt;;\n\n    fn add(self, other: &amp;Mat&lt;T&gt;) -&gt; Self::Output {\n        let a: &amp;Vec&lt;T&gt; = self.pop();\n        let b: &amp;Vec&lt;T&gt; = other.pop();\n        match a.len() == b.len() {\n            true =&gt; {\n                let mut retvec: Vec&lt;&lt;T as std::ops::Add&gt;::Output&gt; = Vec::new();\n                for i in 0..a.len() {\n                    retvec.push(a[i].clone() + b[i].clone());\n                }\n                Some(Mat(retvec))\n            },\n            false =&gt; None\n        }\n    }\n}\n</code></pre>\n\n<p>Edit: To further clarify, <code>Mat::pop()</code> is just the unwrap function, though probably poorly named.</p>\n\n<p>The basic scenario of adding together two vectors of any number seems to work.</p>\n\n<pre><code>#[test]\nfn add_override_vectors() {\n    let vec: Mat&lt;i32&gt; = Mat(vec![2, 2, 2]);\n    let newvec = &amp;vec + &amp;vec;\n\n    assert_eq!(*newvec.unwrap().pop(), vec![4,4,4]);\n}\n</code></pre>\n\n<p>But matrices are giving me a headache. For them, the add function looks very similar, except for the <code>let Some(x)</code> statement:</p>\n\n<pre><code>impl&lt;'a, T&gt; Add for &amp;'a Mat&lt;Mat&lt;T&gt;&gt;\nwhere T: Add&lt;&amp;'a Mat&lt;T&gt;&gt;{\n    type Output = Option&lt;Mat&lt;T&gt;&gt;;\n\n    fn add(self, other: &amp;Mat&lt;Mat&lt;T&gt;&gt;) -&gt; Self::Output {\n        let a: &amp;Vec&lt;Mat&lt;T&gt;&gt; = self.pop();\n        let b: &amp;Vec&lt;Mat&lt;T&gt;&gt; = other.pop();\n        match a.len() == b.len() {\n            true =&gt; {\n                let mut retvec: Vec&lt;T&gt; = Vec::new();\n                for i in 0..a.len() {\n                    if let Some(x) = &amp;a[i] + &amp;b[i] {\n                        retvec.push(x);\n                    }\n                }\n                Some(Mat(retvec))\n            },\n            false =&gt; None\n        }\n    }\n}\n</code></pre>\n\n<p>The error message I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;Mat&lt;T&gt;`\n  --&gt; src\\main.rs:46:38\n   |\n46 |                     if let Some(x) = &amp;a[i] + &amp;b[i] {\n   |                                      ^^^^^^^^^^^^^\n   |\n   = note: an implementation of `std::ops::Add` might be missing for `&amp;Mat&lt;T&gt;`\n</code></pre>\n\n<p>So the compiler says that <code>Add</code> might not be implemented for <code>&amp;Mat&lt;T&gt;</code>, but I thought that I've specified the bound so that it has that requirement in <code>where T: Add&lt;&amp;'a Mat&lt;T&gt;</code>. To me it seems that whatever is in <code>&amp;a[i]</code> should have the Add trait implemented. What am I doing wrong here? </p>\n\n<p>Just as extra clarification, my idea is that <code>Add for &amp;'a Mat&lt;Mat&lt;T&gt;&gt;</code> should be able to be called recursively until it boils down to the <code>Vec</code> with an actual number type in it. Then the <code>Add for &amp;'a Mat&lt;T&gt;</code> should be called.</p>\n"}, {"tags": ["rust", "arrayfire"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1536067020, "post_id": 52161468, "comment_id": 91284244, "body": "Why on earth would somebody vote to close this as opinion-based?"}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 5, "last_activity_date": 1536048373, "creation_date": 1536048373, "answer_id": 52161610, "question_id": 52161468, "link": "https://stackoverflow.com/questions/52161468/how-do-i-convert-an-arrayfire-array-to-a-rust-vec/52161610#52161610", "title": "How do I convert an Arrayfire Array to a Rust Vec?", "body": "<p>You use the <code>host</code> function of <code>Array</code>. Something like this should work:</p>\n\n<pre><code>let mut buffer = Vec::&lt;f64&gt;::new();\nbuffer.resize(ar.elements());\nar.host(&amp;mut buffer);\n// Buffer now contains a copy of the data.\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 7690423, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-htnfx0u3W_I/AAAAAAAAAAI/AAAAAAAAIEk/cge3iqgFzOg/photo.jpg?sz=128", "display_name": "Zwei Blali", "link": "https://stackoverflow.com/users/7690423/zwei-blali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 272, "favorite_count": 2, "accepted_answer_id": 52161610, "answer_count": 1, "score": 2, "last_activity_date": 1536080571, "creation_date": 1536047816, "last_edit_date": 1536080571, "question_id": 52161468, "link": "https://stackoverflow.com/questions/52161468/how-do-i-convert-an-arrayfire-array-to-a-rust-vec", "title": "How do I convert an Arrayfire Array to a Rust Vec?", "body": "<p>I'm new to Rust (and Arrayfire) and working on a small project. I'm trying to convert an Arrayfire Array (only real) back to a Rust Vec. </p>\n\n<p>After some research, I wasn't able to find a solution. The Rust Arrayfire documentation section to indexing only shows (as far as I can see) methods which return another Array.</p>\n\n<p>I found <a href=\"https://stackoverflow.com/questions/44684155/acessing-a-value-on-an-arrayfire-array\">this post</a> talking about the C++ Arrayfire but the Rust Arrayfire Array does not implement the indexing trait.</p>\n\n<p>Is there a way to convert an an Arrayfire Array to a Rust Vec or a method to index an Array returning one element (for example one i64) like v[0] does?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 4, "creation_date": 1536045694, "post_id": 52160842, "comment_id": 91271266, "body": "Once you have matched something using a specific matcher (eg. <code>block</code>), it won&#39;t ever be re-parsed into something else. <code>block</code> matches a block statement, and nothing else, in particular, a <code>struct</code> body is not a block statement. <a href=\"https://stackoverflow.com/questions/40302026/what-does-the-tt-metavariable-type-mean-in-rust-macros\">You might be interested into looking at <code>tt</code></a>."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1536048621, "post_id": 52160842, "comment_id": 91272870, "body": "Yes, you are right, tt does the job"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536063143, "post_id": 52160842, "comment_id": 91281668, "body": "I have mostly given up on trying to match Rust constructs in <code>macro_rules!</code>. I think it&#39;s more trouble than it&#39;s worth. There are plenty of cases of valid Rust syntax which are actually impossible to match."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536063543, "post_id": 52160842, "comment_id": 91281922, "body": "@PeterHall I need  to implement 50 structs, all with a lot of similarity. Macros are the only way to go."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536063903, "post_id": 52160842, "comment_id": 91282143, "body": "@PhilLord There are other approaches though. 1- You can invent your own syntax, which is easier to match, and generates the structs. 2- Use procedural macros."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536132176, "post_id": 52160842, "comment_id": 91308693, "body": "@PeterHall I don&#39;t want to invent syntax for the sake of it. Makes the code hard to read. As @mcarton says, <code>tt</code> works well anyway."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 2, "last_activity_date": 1538940569, "creation_date": 1538940569, "answer_id": 52692107, "question_id": 52160842, "link": "https://stackoverflow.com/questions/52160842/why-can-i-not-match-a-structs-body-using-the-block-matcher-in-a-rust-macro/52692107#52692107", "title": "Why can I not match a struct&#39;s body using the `block` matcher in a Rust macro?", "body": "<p>The <code>$:block</code> matcher is for block expressions, i.e. a set of curly braces containing zero or more Rust statements and items and an optional trailing return value. For example the following are blocks:</p>\n\n<pre><code>{\n    let x = 1;\n}\n</code></pre>\n\n\n\n<pre><code>{\n    #[derive(Default)]\n    struct S;\n    S::default()\n}\n</code></pre>\n\n<p>Examples of curly braces in Rust that are blocks are:</p>\n\n<ul>\n<li>function bodies,</li>\n<li><code>if</code> and <code>else</code> clauses,</li>\n<li>loop bodies of <code>for</code>, <code>while</code>, and <code>loop</code> loops.</li>\n</ul>\n\n<p>The curly braces around the fields of a struct are not a block because they are not supposed to contain zero or more Rust statements and items followed by an optional trailing return value. Instead they are supposed to contain the names and types of the struct fields.</p>\n\n<p>In a macro you can match an arbitrary set of curly braces using the pattern <code>{ $($tt:tt)* }</code>, which means \"curly braces containing any number of arbitrary tokens.\"</p>\n\n<pre><code>macro_rules! multi {\n    (struct $name:ident { $($tt:tt)* }) =&gt; {\n        struct $name { $($tt)* }\n    };\n}\n\nmulti! {\n    struct Fred {\n        a: String,\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 694, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1538941012, "creation_date": 1536045529, "last_edit_date": 1538941012, "question_id": 52160842, "link": "https://stackoverflow.com/questions/52160842/why-can-i-not-match-a-structs-body-using-the-block-matcher-in-a-rust-macro", "title": "Why can I not match a struct&#39;s body using the `block` matcher in a Rust macro?", "body": "<p>I am trying to match a <code>struct</code> in a Rust macro. I need to pull the\n<code>struct</code> apart somewhat to get its name. I figured that the block\nmatcher would do the trick. Consider, for example this:</p>\n\n<pre><code>macro_rules! multi {\n    (struct $name:ident $block:block) =&gt; {\n        enum George {$name}\n    }\n}\n\nmulti!{\n    struct Fred {\n        a:String\n    }\n}\n</code></pre>\n\n<p>which expands to</p>\n\n<pre><code>enum George { Fred, }\n</code></pre>\n\n<p>which is about right.</p>\n\n<p>However, if I turn this back into a <code>struct</code>, it fails.</p>\n\n<pre><code>macro_rules! multi {\n    (struct $name:ident $block:block) =&gt; {\n        struct $name $block\n    }\n}\n</code></pre>\n\n<p>which gives this error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> error: expected `where`, `{`, `(`, or `;` after struct name, found `{ a: String }`\n   --&gt; src/main.rs:64:22\n    |\n 64 |           struct $name $block\n    |                        ^^^^^^ expected `where`, `{`, `(`, or `;` after struct name\n</code></pre>\n\n<p>It looks like <code>{a: String}</code> is being treated as a single token, rather\nthan being re-parsed; but it is what should be going in there.</p>\n"}, {"tags": ["function", "oop", "rust", "parameter-passing", "variadic-functions"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1536041456, "post_id": 52158220, "comment_id": 91269210, "body": "In rust, there are no variadic functions, so that what you are doing is not working. You can only use macros for an unspecific amount of parameters, like <code>format!</code>, <code>println!</code>, <code>write!</code> (which will all fall back to <code>format!</code>)"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1536032723, "creation_date": 1536032723, "answer_id": 52158516, "question_id": 52158220, "link": "https://stackoverflow.com/questions/52158220/how-to-use-multiparameter-string-functions-in-rust/52158516#52158516", "title": "How to use multiparameter String functions in Rust?", "body": "<p>You probably meant to use the <code>format!</code> macro:</p>\n\n<pre><code>impl&lt;'b&gt; SimpleMessage&lt;'b&gt; {\n    /// Gets the elements of a Message and transforms them into a String.\n    pub fn to_str(&amp;self) -&gt; String {\n        let message_string =\n            format!(\"{}/{}/{}-{}:{} =&gt; {}\",\n                         &amp;self.moment.tm_mday,\n                         &amp;self.moment.tm_mon,\n                         &amp;self.moment.tm_year,\n                         &amp;self.moment.tm_min,\n                         &amp;self.moment.tm_hour,\n                         &amp;self.content);\n        return message_string;\n    }\n}\n</code></pre>\n\n<p><code>String::from</code> comes from the <a href=\"https://doc.rust-lang.org/stable/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>From</code></a> trait, which defines a <code>from</code> method that takes a single parameter (hence \"this function takes 1 parameter\" in the error message).</p>\n\n<p><code>format!</code> already produces a <code>String</code>, so no conversion is necessary.</p>\n"}], "owner": {"reputation": 145, "user_id": 9159340, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5NmP6.jpg?s=128&g=1", "display_name": "Dialvive", "link": "https://stackoverflow.com/users/9159340/dialvive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 52158516, "answer_count": 1, "score": 0, "last_activity_date": 1536059599, "creation_date": 1536030016, "last_edit_date": 1536059599, "question_id": 52158220, "link": "https://stackoverflow.com/questions/52158220/how-to-use-multiparameter-string-functions-in-rust", "title": "How to use multiparameter String functions in Rust?", "body": "<p>I want to make a <code>to_string()</code> fn in Rust with <code>&amp;self</code> as parameter, and calling the references of the elements of <code>&amp;self</code> inside the function:</p>\n\n<pre><code>//! # Messages\n//!\n//! Module that builds and returns messages with user and time stamps.\n\nuse time::{Tm};\n\n/// Represents a simple text message.\npub struct SimpleMessage&lt;'a, 'b&gt; {\n    pub moment: Tm,\n    pub content: &amp;'b str,\n}\n\nimpl&lt;'a, 'b&gt; SimpleMessage&lt;'a, 'b&gt; {\n\n    /// Gets the elements of a Message and transforms them into a String.\n    pub fn to_str(&amp;self) -&gt; String {\n        let mut message_string =\n            String::from(\"{}/{}/{}-{}:{} =&gt; {}\",\n                         &amp;self.moment.tm_mday,\n                         &amp;self.moment.tm_mon,\n                         &amp;self.moment.tm_year,\n                         &amp;self.moment.tm_min,\n                         &amp;self.moment.tm_hour,\n                         &amp;self.content);\n        return message_string;\n    }\n}\n</code></pre>\n\n<p>But <code>$ cargo run</code> returns:</p>\n\n<pre><code>    error[E0061]: this function takes 1 parameter but 8 parameters were supplied\n      --&gt; src/messages.rs:70:13\n       |\n    70 | /             String::from(\"{}/{}/{}-{}:{}, {}: {}\",\n    71 | |                          s.moment.tm_mday,\n    72 | |                          s.moment.tm_mon,\n    73 | |                          s.moment.tm_year,\n    ...  |\n    76 | |                          s.user.get_nick(),\n    77 | |                          s.content);\n       | |___________________________________^ expected 1 parameter\n</code></pre>\n\n<p>I really don't understand the problem of this syntax, what am I missing?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1536011309, "post_id": 52153792, "comment_id": 91263313, "body": "I think you should report this as a bug."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1536011687, "post_id": 52153792, "comment_id": 91263393, "body": "&quot;But I&#39;m still interested in understanding why the compiler can&#39;t figure that out automatically.&quot; black magic use a lot of mana so maybe it&#39;s run out of it."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1536012315, "post_id": 52153792, "comment_id": 91263525, "body": "@Stargateur I feel like the compiler should be able to figure this out. The <code>T</code> in the result is the same as the <code>T</code> parameter to the type and it is not possible for a different implementation to have the same return type."}, {"owner": {"reputation": 683, "user_id": 5099839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc83fe4beb1812855cec548e59f9b931?s=128&d=identicon&r=PG&f=1", "display_name": "Tey&#39;", "link": "https://stackoverflow.com/users/5099839/tey"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536255393, "post_id": 52153792, "comment_id": 91368295, "body": "@PeterHall I guess I will, thanks."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1536256029, "post_id": 52153792, "comment_id": 91368617, "body": "@Tey&#39; link it here (or in the <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">SO Rust chat</a>) when you&#39;ve made the report."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1536257181, "post_id": 52153792, "comment_id": 91369124, "body": "Funny thing is that if you remove the <code>impl Reader&lt;bool&gt; for File</code> it works!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537312008, "post_id": 52153792, "comment_id": 91736435, "body": "FWIW, you can write your <code>Vec&lt;T&gt;</code> implementation more idiomatically (and equally efficiently) as <code>std::iter::repeat_with(|| self.read()).take(count as usize).collect()</code>. You can collect to a <code>Result&lt;Vec&lt;T&gt;&gt;</code>."}, {"owner": {"reputation": 683, "user_id": 5099839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc83fe4beb1812855cec548e59f9b931?s=128&d=identicon&r=PG&f=1", "display_name": "Tey&#39;", "link": "https://stackoverflow.com/users/5099839/tey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537334759, "post_id": 52153792, "comment_id": 91741315, "body": "I&#39;ve reported it as an issue and added a reference to it in the question. @Shepmaster Thanks for the tip, but since <code>read()</code> returns a <code>Result</code>, handling errors would make the code less readable IMHO."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537311258, "post_id": 52395599, "comment_id": 91736272, "body": "<i>It&#39;s a compiler bug</i> \u2014 please link to the associated bug report for future reference."}, {"owner": {"reputation": 319, "user_id": 2809232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da0df83f7732c5e47505ac0072308426?s=128&d=identicon&r=PG&f=1", "display_name": "Aaron Miller", "link": "https://stackoverflow.com/users/2809232/aaron-miller"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537312665, "post_id": 52395599, "comment_id": 91736581, "body": "What does <code>?</code> become, then?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1537312751, "post_id": 52395599, "comment_id": 91736597, "body": "<code>try!</code> can be <a href=\"https://doc.rust-lang.org/src/core/macros.rs.html#299-307\" rel=\"nofollow noreferrer\">seen since it&#39;s a macro</a>. <code>?</code> is lowered into invocations of the <a href=\"https://doc.rust-lang.org/std/ops/trait.Try.html\" rel=\"nofollow noreferrer\"><code>Try</code> trait</a>. For example, <code>try!</code> does not work with <code>Option</code> while <code>?</code> does."}, {"owner": {"reputation": 319, "user_id": 2809232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da0df83f7732c5e47505ac0072308426?s=128&d=identicon&r=PG&f=1", "display_name": "Aaron Miller", "link": "https://stackoverflow.com/users/2809232/aaron-miller"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1537312991, "post_id": 52395599, "comment_id": 91736648, "body": "@Shepmaster as for the bug report, I searched the rust-lang/rust issues and didn&#39;t find anything. I don&#39;t think anybody&#39;s reported it yet."}, {"owner": {"reputation": 683, "user_id": 5099839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc83fe4beb1812855cec548e59f9b931?s=128&d=identicon&r=PG&f=1", "display_name": "Tey&#39;", "link": "https://stackoverflow.com/users/5099839/tey"}, "edited": false, "score": 1, "creation_date": 1537335458, "post_id": 52395599, "comment_id": 91741566, "body": "@AaronMiller Thanks for your answer, I&#39;ve upvoted it for the effort and the fact that it reminded me to report the issue in rust-lang/rust (which I&#39;ve just done). However, I&#39;m not sure I can accept it as a solution since the bug reason has already been given in comments by someone else (and there&#39;s no solution if it&#39;s a compiler bug anyway)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 683, "user_id": 5099839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc83fe4beb1812855cec548e59f9b931?s=128&d=identicon&r=PG&f=1", "display_name": "Tey&#39;", "link": "https://stackoverflow.com/users/5099839/tey"}, "edited": false, "score": 0, "creation_date": 1537819724, "post_id": 52395599, "comment_id": 91914585, "body": "@Tey&#39; <i>has already been given in comments by someone else</i> \u2014 that&#39;s meaningless here on Stack Overflow. Comments are considered extremely ephemeral and they can be deleted at any time. If the author of those comments wanted to take the time to provide an answer, they could have (and still can). You are of course welcome to continue to not accept an answer, but &quot;because someone said it in a comment&quot; isn&#39;t something that Stack Overflow participants care about."}], "tags": [], "owner": {"reputation": 319, "user_id": 2809232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da0df83f7732c5e47505ac0072308426?s=128&d=identicon&r=PG&f=1", "display_name": "Aaron Miller", "link": "https://stackoverflow.com/users/2809232/aaron-miller"}, "is_accepted": false, "score": 2, "last_activity_date": 1537817809, "last_edit_date": 1537817809, "creation_date": 1537310897, "answer_id": 52395599, "question_id": 52153792, "link": "https://stackoverflow.com/questions/52153792/why-does-the-rust-compiler-not-use-the-expected-trait-implementation-once-i-add/52395599#52395599", "title": "Why does the Rust compiler not use the expected trait implementation once I add an implementation for Vec&lt;T&gt;?", "body": "<p>There's no good reason why the compiler can't figure out that it should use the <code>Reader&lt;u32&gt;</code> implementation for <code>let count: u32 = ...</code>. It's a compiler bug because <code>T</code> has no connection to how <code>self.read()</code> is being used on that line. The return type of one <code>.read()</code> call seems to be determining the return type of another <code>.read()</code> call when it shouldn't be!</p>\n\n<p>Additionally, if it were not a bug, then it wouldn't make a difference what implementations of <code>Reader&lt;T&gt;</code> there are other than <code>Reader&lt;u8&gt;</code> and <code>Reader&lt;u32&gt;</code>, but as @rodrigo pointed out, the presence of a <code>Reader&lt;bool&gt;</code> implementation triggers this error.</p>\n\n<p>Note that the <code>?</code> (which is equivalent to the <code>match</code> shown below) has nothing to do with the bug, since you still get the error when the <code>Result&lt;u32&gt;</code> is gotten directly:</p>\n\n<pre><code>let count_result: Result&lt;u32&gt; = self.read(); // error happens here\nlet count: u32 = match count_result {\n    std::result::Result::Ok(val) =&gt; val,\n    std::result::Result::Err(err) =&gt; {\n        return std::result::Result::Err(std::convert::From::from(err))\n    }\n};\n</code></pre>\n"}], "owner": {"reputation": 683, "user_id": 5099839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc83fe4beb1812855cec548e59f9b931?s=128&d=identicon&r=PG&f=1", "display_name": "Tey&#39;", "link": "https://stackoverflow.com/users/5099839/tey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1537817809, "creation_date": 1535993818, "last_edit_date": 1537334161, "question_id": 52153792, "link": "https://stackoverflow.com/questions/52153792/why-does-the-rust-compiler-not-use-the-expected-trait-implementation-once-i-add", "title": "Why does the Rust compiler not use the expected trait implementation once I add an implementation for Vec&lt;T&gt;?", "body": "<p>I'm trying to implement a reader which could be able to extract values from different types from a file. There is a <code>File</code> struct which represents the file resource (and methods to access its content), and a <code>Reader</code> trait which makes it possible to extract values based on the resulting type. The (dummy) implementation looks like this (<a href=\"https://play.rust-lang.org/?gist=859160ad8016cafc2ce07c7e6b724fe7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::io::Result;\n\nmod file {\n    use std::io::Result;\n\n    pub struct File {/* ... */}\n\n    pub trait Reader&lt;T&gt; {\n        fn read(&amp;mut self) -&gt; Result&lt;T&gt;;\n    }\n\n    impl Reader&lt;u32&gt; for File {\n        fn read(&amp;mut self) -&gt; Result&lt;u32&gt; {\n            // Dummy implementation\n            Ok(10)\n        }\n    }\n\n    impl Reader&lt;u8&gt; for File {\n        fn read(&amp;mut self) -&gt; Result&lt;u8&gt; {\n            // Dummy implementation\n            Ok(0)\n        }\n    }\n\n    impl Reader&lt;bool&gt; for File {\n        fn read(&amp;mut self) -&gt; Result&lt;bool&gt; {\n            // Dummy implementation\n            Ok(false)\n        }\n    }\n}\n\nuse file::{File, Reader};\n\nimpl&lt;T: Default&gt; Reader&lt;Vec&lt;T&gt;&gt; for File\nwhere\n    File: Reader&lt;T&gt; + Reader&lt;u32&gt;,\n{\n    fn read(&amp;mut self) -&gt; Result&lt;Vec&lt;T&gt;&gt; {\n        let count: u32 = self.read()?;\n        let mut array: Vec&lt;T&gt; = Vec::with_capacity(count as usize);\n        for _ in 0..count {\n            let mut item: T = self.read()?;\n            array.push(item);\n        }\n\n        Ok(array)\n    }\n}\n\nfn main() {\n    let mut file = File {};\n    let _v: Vec&lt;u8&gt; = file.read().unwrap();\n}\n</code></pre>\n\n<p>Everything worked until I added the <code>Reader&lt;Vec&lt;T&gt;&gt;</code> implementation. Vectors are stored in the file as a <code>u32</code> indicating the number of elements followed by the element's representation. The compiler gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: try expression alternatives have incompatible types\n  --&gt; src/main.rs:41:26\n   |\n41 |         let count: u32 = self.read()?;\n   |                          ^^^^^^^^^^^^\n   |                          |\n   |                          expected u32, found type parameter\n   |                          help: try wrapping with a success variant: `Ok(self.read()?)`\n   |\n   = note: expected type `u32`\n              found type `T`\n</code></pre>\n\n<p>Even though I specified that <code>File</code> implements both <code>Reader&lt;T&gt;</code> and <code>Reader&lt;u32&gt;</code>, it seems to be stuck on <code>Reader&lt;T&gt;</code>.</p>\n\n<p>What's even more strange is that if I only keep 2 implementations of the <code>Reader</code> trait (removing <code>Reader&lt;bool&gt;</code> for instance), the code compiles without any issue (<a href=\"https://play.rust-lang.org/?gist=0b4ead500802fcd4662413ac4ef340ea&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>).</p>\n\n<p>Why can't the compiler find out it should use the <code>Reader&lt;u32&gt;</code> implementation for <code>count</code> initialization? What should I change?</p>\n\n<p>I've found a workaround, but I'm still interested in understanding why the compiler can't figure it out automatically:</p>\n\n<pre><code>let count: u32 = (self as &amp;mut Reader&lt;u32&gt;).read()?;\n</code></pre>\n\n<hr/>\n\n<p>Issue has been reported as <a href=\"https://github.com/rust-lang/rust/issues/54344\" rel=\"nofollow noreferrer\">rust-lang/rust#54344</a>.</p>\n"}, {"tags": ["compilation", "rust", "requirements"], "comments": [{"owner": {"reputation": 36654, "user_id": 107625, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/53a82f701ae492808834e621de2586eb?s=128&d=identicon&r=PG", "display_name": "Uwe Keim", "link": "https://stackoverflow.com/users/107625/uwe-keim"}, "edited": false, "score": 3, "creation_date": 1535993540, "post_id": 52153676, "comment_id": 91257628, "body": "You need to install the <a href=\"https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads\" rel=\"nofollow noreferrer\">C++ runtime libraries</a> in the correct version (the \u201e140\u201c indicates the version)."}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 36654, "user_id": 107625, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/53a82f701ae492808834e621de2586eb?s=128&d=identicon&r=PG", "display_name": "Uwe Keim", "link": "https://stackoverflow.com/users/107625/uwe-keim"}, "edited": false, "score": 1, "creation_date": 1535993736, "post_id": 52153676, "comment_id": 91257681, "body": "Thanks. I tried and it works now. This isn&#39;t on the documentation. Thanks again."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 36654, "user_id": 107625, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/53a82f701ae492808834e621de2586eb?s=128&d=identicon&r=PG", "display_name": "Uwe Keim", "link": "https://stackoverflow.com/users/107625/uwe-keim"}, "edited": false, "score": 2, "creation_date": 1536041543, "post_id": 52153676, "comment_id": 91269249, "body": "@UweKeim, don&#39;t answer questions in comments ;)"}], "answers": [{"tags": [], "owner": {"reputation": 36654, "user_id": 107625, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/53a82f701ae492808834e621de2586eb?s=128&d=identicon&r=PG", "display_name": "Uwe Keim", "link": "https://stackoverflow.com/users/107625/uwe-keim"}, "is_accepted": true, "score": 4, "last_activity_date": 1536042579, "creation_date": 1536042579, "answer_id": 52160045, "question_id": 52153676, "link": "https://stackoverflow.com/questions/52153676/what-is-the-requirements-for-running-a-rust-compiled-program-on-another-windows/52160045#52160045", "title": "What is the requirements for running a Rust compiled program on another Windows machine?", "body": "<p>You need to install the <a href=\"https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads\" rel=\"nofollow noreferrer\">Microsoft Visual C++ Redistributable Package</a> in the correct version. </p>\n\n<p>The \"140\" in the file name in your error message indicates the version, which should be the <a href=\"https://www.microsoft.com/en-US/download/details.aspx?id=48145\" rel=\"nofollow noreferrer\">Visual C++ Redistributable for Visual Studio 2015</a>.</p>\n\n<hr>\n\n<p>As a shortcut, here are the most common dowload links for other versions:</p>\n\n<ul>\n<li>Microsoft Visual C++ Redistributable 2017 \u2014 <a href=\"https://aka.ms/vs/15/release/vc_redist.x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"https://aka.ms/vs/15/release/vc_redist.x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2015 \u2014 <a href=\"https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2013 \u2014 <a href=\"http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2012 \u2014 <a href=\"http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2010 \u2014 <a href=\"http://download.microsoft.com/download/5/B/C/5BC5DBB3-652D-4DCE-B14A-475AB85EEF6E/vcredist_x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"http://download.microsoft.com/download/d/2/4/d242c3fb-da5a-4542-ad66-f9661d0a8d19/vcredist_x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2008 \u2014 <a href=\"http://download.microsoft.com/download/1/1/1/1116b75a-9ec3-481a-a3c8-1777b5381140/vcredist_x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"http://download.microsoft.com/download/d/2/4/d242c3fb-da5a-4542-ad66-f9661d0a8d19/vcredist_x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n<li>Microsoft Visual C++ Redistributable 2005 \u2014 <a href=\"http://download.microsoft.com/download/d/3/4/d342efa6-3266-4157-a2ec-5174867be706/vcredist_x86.exe\" rel=\"nofollow noreferrer\">32-bit (x86)</a>, <a href=\"http://download.microsoft.com/download/9/1/4/914851c6-9141-443b-bdb4-8bad3a57bea9/vcredist_x64.exe\" rel=\"nofollow noreferrer\">64-bit (x64)</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "is_accepted": false, "score": 5, "last_activity_date": 1536125039, "last_edit_date": 1536125039, "creation_date": 1536064880, "answer_id": 52166618, "question_id": 52153676, "link": "https://stackoverflow.com/questions/52153676/what-is-the-requirements-for-running-a-rust-compiled-program-on-another-windows/52166618#52166618", "title": "What is the requirements for running a Rust compiled program on another Windows machine?", "body": "<p>You can also statically link the CRT by adding</p>\n\n<pre><code>[target.x86_64-pc-windows-msvc]\nrustflags = [\"-Ctarget-feature=+crt-static\", \"-Zunstable-options\"]\n</code></pre>\n\n<p>to your <code>.cargo/config</code>. As pointed out in <a href=\"https://stackoverflow.com/a/44387312/2430485\">this Stack Overflow answer</a>.</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1148, "favorite_count": 3, "accepted_answer_id": 52160045, "answer_count": 2, "score": 5, "last_activity_date": 1536125039, "creation_date": 1535993085, "last_edit_date": 1535993877, "question_id": 52153676, "link": "https://stackoverflow.com/questions/52153676/what-is-the-requirements-for-running-a-rust-compiled-program-on-another-windows", "title": "What is the requirements for running a Rust compiled program on another Windows machine?", "body": "<p>I'm totally new to Rust. I installed Rust on my Windows 10 machine. Created a simple helloworld program like this:</p>\n\n<pre><code>fn main() {\n    print!(\"Hello world!\");\n}\n</code></pre>\n\n<p>And compiled it with <code>rustc rust.rs</code>. After that there are two files generated:</p>\n\n<pre><code>admin@myserver MINGW64 ~/Documents/rust_test\n$ ls -latrh\ntotal 1.6M\ndrwxr-xr-x 1 admin 197121    0 Sep  2 03:28 ..\n-rw-r--r-- 1 admin 197121   45 Sep  4 00:26 rust.rs\n-rwxr-xr-x 1 admin 197121 146K Sep  4 00:26 rust.exe\n-rw-r--r-- 1 admin 197121 1.5M Sep  4 00:26 rust.pdb\ndrwxr-xr-x 1 admin 197121    0 Sep  4 00:26 .\n</code></pre>\n\n<p>I can successfully run <code>rust.exe</code> and get the proper result. However, when I copy <code>rust.exe</code> to another newly created Windows 2016 virtual machine and run it, I got this error:</p>\n\n<p><a href=\"https://i.stack.imgur.com/eJ5QJ.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/eJ5QJ.png\" alt=\"enter image description here\"></a></p>\n\n<p>My question is, what's the requirement to run a Rust compiled program on a machine that doesn't have Rust installed? Do I need to install the <code>vc++ build tools</code> on it too (just as I did on the development machine)? </p>\n"}, {"tags": ["module", "rust", "static-methods"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 2, "creation_date": 1535991566, "post_id": 52152612, "comment_id": 91256893, "body": "Rust isn&#39;t really an &quot;OO&quot; language in the same way that Java is. If you try to write Java in Rust, you&#39;re going to run into a lot of issues."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1536012204, "post_id": 52152612, "comment_id": 91263504, "body": "And this has nothing linked to OO language this is just a question about grammar."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 7, "last_activity_date": 1535989682, "creation_date": 1535989682, "answer_id": 52152910, "question_id": 52152612, "link": "https://stackoverflow.com/questions/52152612/what-is-the-best-way-to-refer-to-a-static-method-from-another-static-method-of-t/52152910#52152910", "title": "What is the best way to refer to a static method from another static method of the same class in Rust?", "body": "<p>Yes it is intended, because rust is not Java ;)</p>\n\n<p>You just can write:</p>\n\n<pre><code>myStruct { x: myStruct::other() }\n</code></pre>\n\n<p>or</p>\n\n<pre><code>myStruct { x: Self::other() }\n</code></pre>\n\n<p>I can't tell you the exact design decision, why <code>Self</code> functions are not imported automatically, but you can \"work-around\" this, by using the correct path.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1535990811, "post_id": 52152947, "comment_id": 91256591, "body": "I cannot find any proof of what I say. The explicit <code>self</code> was implemented back to 2012: <a href=\"https://github.com/rust-lang/rust/pull/3974\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/3974</a> and there were no RFCs at this time."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1536042507, "post_id": 52152947, "comment_id": 91269647, "body": "Note that other languages (eg. Python) had an explicit <code>self</code> parameter for methods long before Rust came along, which may have influenced the design of Rust."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 16, "last_activity_date": 1536067557, "last_edit_date": 1536067557, "creation_date": 1535989809, "answer_id": 52152947, "question_id": 52152612, "link": "https://stackoverflow.com/questions/52152612/what-is-the-best-way-to-refer-to-a-static-method-from-another-static-method-of-t/52152947#52152947", "title": "What is the best way to refer to a static method from another static method of the same class in Rust?", "body": "<p>The Rust designers have made the following choice: everything related to the scope is explicit. So, just as you must type <code>self</code> to call a member function from another member function: <code>self.foo()</code>, you must call a static member with <code>Self</code>: <code>Self::bar()</code>.</p>\n\n<p>I think that it is the case because <code>self</code> could not be implicit: indeed it had to be added as a parameter either by value or borrowed, unlike in Java where <code>this</code> is always taken by value. Thus, because <code>self</code> was already an explicit parameter, it was needed as an explicit caller for consistency.</p>\n\n<p>Because of its memory model, Rust expliciteness permit to give better error messages. For example, consider this code:</p>\n\n<pre><code>struct Struct;\n\nimpl Struct {\n    fn foo(&amp;mut self) {\n        self.consume();\n    }\n\n    fn consume(self) {}\n}\n</code></pre>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:5:9\n  |\n5 |         self.consume();\n  |         ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Then the team made the choice of full expliciteness to maintain the grammar coherent.</p>\n"}], "owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3494, "favorite_count": 2, "accepted_answer_id": 52152947, "answer_count": 2, "score": 7, "last_activity_date": 1536067557, "creation_date": 1535988581, "last_edit_date": 1536059100, "question_id": 52152612, "link": "https://stackoverflow.com/questions/52152612/what-is-the-best-way-to-refer-to-a-static-method-from-another-static-method-of-t", "title": "What is the best way to refer to a static method from another static method of the same class in Rust?", "body": "<p>In a new Rust module, I can write:  </p>\n\n<pre><code>struct myStruct {\n    x : u32\n}\n\nimpl myStruct {\n    fn new() -&gt; myStruct{\n        myStruct{ x : other()}\n    }\n\n    fn other() -&gt; u32 {\n        6\n    }\n}\n</code></pre>\n\n<p>Coming from other OO languages, I would expect <code>other()</code> to be in scope for <code>new()</code>. That is, I would expect to be able to call one static method of a class from another static method of the same class. However, rustc produces the message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find function `other` in this scope\n --&gt; dummy_module.rs:9:23\n  |\n9 |         myStruct{ x : other()}\n  |                       ^^^^^ not found in this scope\n</code></pre>\n\n<p>In contrast, the following Java code compiles fine:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public class myStruct{\n    int x;\n\n    public myStruct(){\n        x = other();\n    }\n\n    private int other(){\n        return 5;\n    }\n}\n</code></pre>\n\n<p>I don't recall seeing any mention of this in the Rust book I'm using, and I can't seem to find a clear answer online. I can fix it by explicitly scoping the call to other with <code>myStruct::other()</code>, but this seems cumbersome. If I try <code>use myStruct</code>, then I get the cryptic message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>7 |     use myStruct;\n  |     ^^^ unexpected token\n</code></pre>\n\n<p>Is this explicit scoping always required? If so, why?</p>\n\n<p>Am I doing something incorrect? Is there an idiomatic workaround to this?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1535994958, "post_id": 52153566, "comment_id": 91258105, "body": "Thank you very much for taking time to consider this (rather convoluted) problem. You did crack it! What kept me away from Attempt #3 was indeed the polution of the API, and I didn&#39;t know the trick of using &quot;for &lt;&#39;a&gt;&quot;. Thanks again!"}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1536043503, "post_id": 52153566, "comment_id": 91270152, "body": "BTW, I implemented your solution in my github example project: <a href=\"https://github.com/pchampin/pair_trait\" rel=\"nofollow noreferrer\">github.com/pchampin/pair_trait</a>"}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1536044177, "post_id": 52153566, "comment_id": 91270492, "body": "As an aside, I disagree with you when you write that &quot;the idea of returning a &amp;Self::Item is slightly ill-formed, because the associated type Item already represents a borrowed value&quot;. Borrow&lt;str&gt; is not a borrowed value, it is something <i>from which</i> a str can be borrowed. In case, for example, Item = String, I don&#39;t want the String to be copied, I just want a reference."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1535992461, "creation_date": 1535992461, "answer_id": 52153566, "question_id": 52152052, "link": "https://stackoverflow.com/questions/52152052/how-do-i-implement-a-trait-for-a-type-with-rented-reference/52153566#52153566", "title": "How do I implement a trait for a type with &quot;rented&quot; reference", "body": "<p>Unfortunately, the fully intended design is currently unachievable. Still, we can adapt attempt #3 to <em>sort-of</em> work.</p>\n\n<p>The idea of returning a <code>&amp;Self::Item</code> is slightly ill-formed, because the associated type <code>Item</code> already represents a borrowed value. It makes more sense to return it directly:</p>\n\n<pre><code>pub trait Pair {\n    type Item: Borrow&lt;str&gt;;\n    fn first(&amp;self) -&gt; Self::Item;\n    fn second(&amp;self) -&gt; Self::Item;\n}\n</code></pre>\n\n<p>But then you would stumble with the incapability of describing this <code>Item</code> as a <code>Cow&lt;'a, str&gt;</code> where <code>'a</code> is the lifetime of <code>self</code>. Attempt 3 was close to a solution by adding a lifetime parameter to the trait itself, thus making this arbitrary lifetime a higher-ranked argument to the trait.</p>\n\n<pre><code>pub trait Pair&lt;'a&gt; {\n    type Item: 'a + Borrow&lt;str&gt;;\n    fn first(&amp;'a self) -&gt; Self::Item;\n    fn second(&amp;'a self) -&gt; Self::Item;\n}\n</code></pre>\n\n<p>This <code>Pair&lt;'a&gt;</code> now defines a pair of elements bound to <code>'a</code>, and are not necessarily contained by <code>self</code>. One possible implementation:</p>\n\n<pre><code>impl&lt;'a&gt; Pair&lt;'a&gt; for (String, String) {\n    type Item = Cow&lt;'a, str&gt;;\n\n    fn first(&amp;'a self) -&gt; Self::Item {\n        Cow::Borrowed(&amp;self.0)\n    }\n    fn second(&amp;'a self) -&gt; Self::Item {\n        Cow::Borrowed(&amp;self.1)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fde47beade53a2821c14b80ba4e508d1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Full example in the Rust Playground</a></p>\n\n<p>This approach comes at the expense of polluting all APIs relying on this trait with higher ranked trait bounds, so that we can implement <code>Pair&lt;'a&gt;</code> for all lifetimes <code>'a</code>. For example:</p>\n\n<pre><code>fn foo&lt;T&gt;(pair: T)\nwhere\n    for&lt;'a&gt; T: Pair&lt;'a&gt;,\n{\n    unimplemented!()\n}\n</code></pre>\n\n<hr>\n\n<p>In order to achieve this <code>'self</code> lifetime for constraining the associated type <code>Item</code>, we need <a href=\"https://github.com/rust-lang/rust/issues/44265\" rel=\"nofollow noreferrer\">Generic Associated Types</a> (GATs). Once implemented, we'll be able to write something like this:</p>\n\n<pre><code>pub trait Pair {\n    type Item&lt;'a&gt;: Borrow&lt;str&gt;;\n    fn first(&amp;'a self) -&gt; Self::Item&lt;'a&gt;;\n    fn second(&amp;'a self) -&gt; Self::Item&lt;'a&gt;;\n}\n\nimpl Pair for (String, String) {\n    type Item&lt;'a&gt; = Cow&lt;'a, str&gt;;\n\n    fn first(&amp;'a self) -&gt; Self::Item&lt;'a&gt; {\n        Cow::Borrowed(&amp;self.0)\n    }\n    fn second(&amp;'a self) -&gt; Self::Item&lt;'a&gt; {\n        Cow::Borrowed(&amp;self.1)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 52153566, "answer_count": 1, "score": 2, "last_activity_date": 1535992461, "creation_date": 1535986231, "question_id": 52152052, "link": "https://stackoverflow.com/questions/52152052/how-do-i-implement-a-trait-for-a-type-with-rented-reference", "title": "How do I implement a trait for a type with &quot;rented&quot; reference", "body": "<p>NB: I tried to keep this post as concise as possible, the full code can be found at <a href=\"https://github.com/pchampin/pair_trait\" rel=\"nofollow noreferrer\">https://github.com/pchampin/pair_trait</a>.</p>\n\n<h1>The problem</h1>\n\n<p>I have defined the following trait:</p>\n\n<pre><code>pub trait Pair {\n    type Item: Borrow&lt;str&gt;;\n    fn first(&amp;self) -&gt; &amp;Self::Item;\n    fn second(&amp;self) -&gt; &amp;Self::Item;\n}\n</code></pre>\n\n<p>I have generic implementations of this trait for <code>(T,T)</code> and <code>[T;2]</code> for any T implementing <code>Borrow&lt;str&gt;</code>.</p>\n\n<p>I also have a type, built with the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> crate, containing a <code>String</code> and two <code>Cow&lt;str&gt;</code> that borrow from that string:</p>\n\n<pre><code>#[rental(covariant)]\npub struct SelfSustainedPair {\n    line: String,\n    pair: (Cow&lt;'line, str&gt;, Cow&lt;'line, str&gt;),\n}\n</code></pre>\n\n<p>I would like this type to implement the <code>Pair</code> trait above, but I can't find a way to do it.</p>\n\n<h1>Attempt #0</h1>\n\n<pre><code>impl SelfSustainedPair {\n    pub fn first(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().first() }\n    pub fn second(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().second() }\n}\n</code></pre>\n\n<p>I know that this is not an implementation of the trait,\nbut I just wanted to be sure that I could implement the methods <code>first</code> and <code>second</code>. The answer is yes: the code above compiles.</p>\n\n<h1>Attempt #1</h1>\n\n<pre><code>impl Pair for SelfSustainedPair {\n    type Item = Cow&lt;str&gt;;\n    fn first(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().first() }\n    fn second(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().second() }\n}\n</code></pre>\n\n<p>This fails to compile, with the message \"expected lifetime parameter\" for the 2nd line.</p>\n\n<p>This is frustrating because it is so close to attempt #0 above.</p>\n\n<h1>Attempt #2</h1>\n\n<pre><code>impl&lt;'a&gt; Pair for SelfSustainedPair {\n    type Item = Cow&lt;'a, str&gt;;\n    fn first(&amp;self) -&gt; &amp;Cow&lt;'a, str&gt; { self.suffix().first() }\n    fn second(&amp;self) -&gt; &amp;Cow&lt;'a, str&gt; { self.suffix().second() }\n}\n</code></pre>\n\n<p>Here the compiler is complaining about an \"unconstrainted lifetime parameter\" for the first line (<code>impl&lt;'a&gt;</code>).</p>\n\n<h1>Attempt #3</h1>\n\n<p>I modified my trait <code>Pair</code> so that it expects a lifetime parameter. Surprisingly, this works, even if the liferime parameter is never used in the definition of the trait...</p>\n\n<p>I then wrote:</p>\n\n<pre><code>impl&lt;'a&gt; Pair&lt;'a&gt; for SelfSustainedPair {\n    type Item = Cow&lt;'a, str&gt;;\n    fn first(&amp;self) -&gt; &amp;Cow&lt;'a, str&gt; { self.suffix().first() }\n    fn second(&amp;self) -&gt; &amp;Cow&lt;'a, str&gt; { self.suffix().second() }\n}\n</code></pre>\n\n<p>Now the compiler complains that it \"cannot infer an appropriate lifetime for autoref\" in both methods...</p>\n\n<p>Anyway, my intuition is that this is not the right path: the lifetime for which the returned <code>Cow</code> can not be specified independantly of that of <code>self</code>...</p>\n\n<h1>Attempt #4</h1>\n\n<p>Ideally, this is what I would like to write:</p>\n\n<pre><code>impl Pair for SelfSustainedPair {\n    type Item = Cow&lt;'self, str&gt;;\n    fn first(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().first() }\n    fn second(&amp;self) -&gt; &amp;Cow&lt;str&gt; { self.suffix().second() }\n}\n</code></pre>\n\n<p>but obviously, the compiler doesn't know about the <code>self</code> lifetime.</p>\n"}, {"tags": ["rust", "future", "hyper", "rust-tokio"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1535956993, "post_id": 52143836, "comment_id": 91238471, "body": "Can you please provide the error?"}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 9663785, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1b3d32d73d51a80acb6fce7768a643e2?s=128&d=identicon&r=PG&f=1", "display_name": "Phillip Jay Doe", "link": "https://stackoverflow.com/users/9663785/phillip-jay-doe"}, "edited": false, "score": 0, "creation_date": 1535958919, "post_id": 52144565, "comment_id": 91239287, "body": "None of those solutions work. It seems like the type of the future has in it information about all the operations it went through. Should I post the compiler errors?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 25, "user_id": 9663785, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1b3d32d73d51a80acb6fce7768a643e2?s=128&d=identicon&r=PG&f=1", "display_name": "Phillip Jay Doe", "link": "https://stackoverflow.com/users/9663785/phillip-jay-doe"}, "edited": false, "score": 0, "creation_date": 1535962017, "post_id": 52144565, "comment_id": 91240838, "body": "Now at least the first works on the playground"}, {"owner": {"reputation": 25, "user_id": 9663785, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1b3d32d73d51a80acb6fce7768a643e2?s=128&d=identicon&r=PG&f=1", "display_name": "Phillip Jay Doe", "link": "https://stackoverflow.com/users/9663785/phillip-jay-doe"}, "edited": false, "score": 0, "creation_date": 1535962192, "post_id": 52144565, "comment_id": 91240935, "body": "It does. Thank you very much"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1554592463, "last_edit_date": 1554592463, "creation_date": 1535957786, "answer_id": 52144565, "question_id": 52143836, "link": "https://stackoverflow.com/questions/52143836/is-it-possible-to-have-futureand-then-conditionally-return-different-futures/52144565#52144565", "title": "Is it possible to have Future::and_then conditionally return different futures?", "body": "<p>The problem is that <a href=\"https://docs.rs/futures/0.2.1/futures/prelude/trait.FutureExt.html#method.map_err\" rel=\"nofollow noreferrer\"><code>map_err</code> returns a struct <code>MapErr</code></a>, while <a href=\"https://docs.rs/futures/0.2.1/futures/future/fn.err.html\" rel=\"nofollow noreferrer\"><code>err</code> returns a struct <code>FutureResult</code></a>.</p>\n\n<p>One way to solve your issue is to unify them like this:</p>\n\n<pre><code>let f = if do_i_want_to_get_the_full_page {\n    futures::future::ok(())\n} else {\n    futures::future::err(())\n};\nf.and_then (|_| { res.into_body().concat2().map_err(|_| ()) })\n</code></pre>\n\n<p>Another solution is to box your return value:</p>\n\n<pre><code>if do_i_want_to_get_the_full_page {\n    Box::&lt;Future&lt;_, _&gt;&gt;::new (res.into_body().concat2().map_err(|_| ()))\n} else {\n    Box::&lt;Future&lt;_, _&gt;&gt;::new (futures::future::err(()))\n}\n</code></pre>\n\n<p>A third solution is to always return a <code>MapErr</code>:</p>\n\n<pre><code>if do_i_want_to_get_the_full_page {\n    res.into_body().concat2().map_err(|_| ())\n} else {\n    futures::future::err(()).map_err(|_| ())\n}\n</code></pre>\n\n<p>However, then you get an issue because the error type for <code>client.get(\u2026).and_then(\u2026)</code> must implement <code>From&lt;hyper::Error&gt;</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;futures::AndThen&lt;futures::FutureResult&lt;(), ()&gt;, futures::MapErr&lt;futures::stream::Concat2&lt;hyper::Body&gt;, [closure@src/main.rs:34:70: 34:76]&gt;, [closure@src/main.rs:34:32: 34:77 res:_]&gt; as futures::IntoFuture&gt;::Error == hyper::Error`\n  --&gt; src/main.rs:28:18\n   |\n28 |                 .and_then(|res| {\n   |                  ^^^^^^^^ expected (), found struct `hyper::Error`\n   |\n   = note: expected type `()`\n              found type `hyper::Error`\n</code></pre>\n\n<p>If you don't care about the error, you can map it away before the <code>and_then</code>:</p>\n\n<pre><code>client\n    .get(uri)\n    .map_err (|_| ())\n    .and_then(|res| {\n        let f = if do_i_want_to_get_the_full_page {\n            futures::future::ok(())\n        } else {\n            futures::future::err(())\n        };\n        f.and_then(|_| res.into_body().concat2().map_err(|_| ()))\n    }).map(|body| {\n        println!(\"len is {}.\", body.len());\n    }).map_err(|e| {\n        println!(\"Error: {:?}\", e);\n    })\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=ccd6ce6a9976c43c26c21898246090a3&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>or use a type that implements <code>From&lt;hyper::Error&gt;</code> in your call to <code>futures::future::err</code>.</p>\n"}], "owner": {"reputation": 25, "user_id": 9663785, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1b3d32d73d51a80acb6fce7768a643e2?s=128&d=identicon&r=PG&f=1", "display_name": "Phillip Jay Doe", "link": "https://stackoverflow.com/users/9663785/phillip-jay-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1046, "favorite_count": 0, "closed_date": 1554592490, "accepted_answer_id": 52144565, "answer_count": 1, "score": 0, "last_activity_date": 1554592463, "creation_date": 1535954138, "last_edit_date": 1554592427, "question_id": 52143836, "link": "https://stackoverflow.com/questions/52143836/is-it-possible-to-have-futureand-then-conditionally-return-different-futures", "closed_reason": "Duplicate", "title": "Is it possible to have Future::and_then conditionally return different futures?", "body": "<p>In this simplified version of my code, I would like to sometimes execute the marked line and sometimes not, maybe returning an error instead:</p>\n\n<pre><code>extern crate futures; // 0.1.26\nextern crate hyper; // 0.12.25\n\nuse hyper::rt::{Future, Stream};\nuse std::str::FromStr;\n\nstruct MyStream {}\n\nimpl Stream for MyStream {\n    type Item = hyper::Uri;\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; Result&lt;futures::Async&lt;Option&lt;Self::Item&gt;&gt;, Self::Error&gt; {\n        Ok(futures::Async::Ready(Some(\n            hyper::Uri::from_str(\"http://www.google.com/\").unwrap(),\n        )))\n    }\n}\n\nfn main() {\n    let client = hyper::Client::new();\n    let futs = MyStream {}\n        .map(move |uri| {\n            client\n                .get(uri)\n                .and_then(|res| {\n                    res.into_body().concat2() // &lt;----------------\n                })\n                .map(|body| {\n                    println!(\"len is {}.\", body.len());\n                })\n                .map_err(|e| {\n                    println!(\"Error: {:?}\", e);\n                })\n        })\n        .buffer_unordered(2)\n        .for_each(|_| Ok(()));\n\n    hyper::rt::run(futs);\n}\n</code></pre>\n\n<p>I thought I could replace the line with something like this:</p>\n\n<pre><code>let do_i_want_to_get_the_full_page = true;\nif do_i_want_to_get_the_full_page {\n    res.into_body().concat2().map_err(|_| ())\n} else {\n    futures::future::err(())\n}\n</code></pre>\n\n<p>since the <code>Error</code> parts of the futures are the same, and the <code>Item</code> part could be inferred. However, it does not work. How could I do it?</p>\n\n<p>This is the error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: if and else have incompatible types\n  --&gt; src/main.rs:31:25\n   |\n28 | /                     if do_i_want_to_get_the_full_page {\n29 | |                         res.into_body().concat2().map_err(|_| ())\n   | |                         ----------------------------------------- expected because of this\n30 | |                     } else {\n31 | |                         futures::future::err(())\n   | |                         ^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `futures::MapErr`, found struct `futures::FutureResult`\n32 | |                     }\n   | |_____________________- if and else have incompatible types\n   |\n   = note: expected type `futures::MapErr&lt;futures::stream::Concat2&lt;hyper::Body&gt;, [closure@src/main.rs:29:59: 29:65]&gt;`\n              found type `futures::FutureResult&lt;_, ()&gt;`\n</code></pre>\n"}, {"tags": ["arrays", "loops", "for-loop", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1535953693, "post_id": 52142923, "comment_id": 91237309, "body": "Note that this is a bad idea to have a such big array, use vec for big size."}], "answers": [{"comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 3, "creation_date": 1535963787, "post_id": 52142995, "comment_id": 91241751, "body": "Tracking issue for the feature (const generics) that would lift the restrictions mentioned in the latter paragraph, in case anyone else was curious: <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/44580</a>. It&#39;s still a fair way off, but looks like there&#39;s been quite a lot of movement on it recently."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1535947296, "creation_date": 1535947296, "answer_id": 52142995, "question_id": 52142923, "link": "https://stackoverflow.com/questions/52142923/exit-code-101-iterating-over-array-with-array/52142995#52142995", "title": "Exit code 101 iterating over array with &amp;array", "body": "<p>In terms of performance, there's no difference since they use the exact same <code>Iterator</code> implementation.  You can verify this by looking at the <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"noreferrer\">implementations of <code>IntoIterator</code></a>; specifically, at the <code>IntoIter</code> types.</p>\n\n<p>The reason you can't use <code>&amp;array</code> for some sizes is because Rust doesn't have generic value parameters for generics.  This means there's no way for the standard library to express generics that are parameterised over some value.  Like, say, array length.  This means you need a distinct implementation of <code>IntoIterator</code> for <em>every possible size of array</em>.  This is obviously impossible, so the standard library only implements it for a few sizes; specifically, for arrays up to 32 elements in size.</p>\n"}], "owner": {"reputation": 3573, "user_id": 3142971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GvXzQ.png?s=128&g=1", "display_name": "Steampunkery", "link": "https://stackoverflow.com/users/3142971/steampunkery"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 52142995, "answer_count": 1, "score": 4, "last_activity_date": 1535947296, "creation_date": 1535946400, "question_id": 52142923, "link": "https://stackoverflow.com/questions/52142923/exit-code-101-iterating-over-array-with-array", "title": "Exit code 101 iterating over array with &amp;array", "body": "<p>I was recently trying to benchmark Rust for loops using different iteration styles when I ran into this interesting error. If I iterate using the code below, I will get <code>&amp;[i32; 1000000] is not an iterator; maybe try calling .iter() or a similar method</code>. <strong>I am aware that I can just use <code>iter()</code></strong>, however I am trying to find which is faster, <code>iter()</code> or <code>&amp;array</code>. </p>\n\n<p>Code:</p>\n\n<pre><code>extern crate time;\n\nfn main() {\n    let array: [i32; 1000000] = [0; 1000000]; // This will produce an error\n    // let array: [i32; 32] = [0; 32] produces no error\n\n    let start_time = time::precise_time_s();\n    for _x in &amp;array {\n    }\n    println!(\"{}\", time::precise_time_s() - start_time);\n}\n</code></pre>\n\n<p>My question is: Why can't I iterate over arrays larger than 32 with <code>&amp;array</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1181, "user_id": 2708904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b7b059287e83e57ccf1ffd04ccbd6314?s=128&d=identicon&r=PG&f=1", "display_name": "Innot Kauker", "link": "https://stackoverflow.com/users/2708904/innot-kauker"}, "reply_to_user": {"reputation": 240, "user_id": 3295105, "user_type": "registered", "profile_image": "https://graph.facebook.com/622977123/picture?type=large", "display_name": "Hellseher", "link": "https://stackoverflow.com/users/3295105/hellseher"}, "edited": false, "score": 0, "creation_date": 1535924525, "post_id": 52141148, "comment_id": 91232206, "body": "@Hellseher just tried - it doest&#39;t want to take an iterator instead of &amp;[u8] needed for conversion to Read."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1535934198, "post_id": 52141148, "comment_id": 91233740, "body": "Potential duplicate of <a href=\"https://stackoverflow.com/questions/41069865/how-to-create-an-in-memory-object-that-can-be-used-as-a-reader-or-writer-in-rust\">&quot;How to create an in-memory object that can be used as a Reader or Writer in Rust?&quot;</a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1535955457, "post_id": 52141148, "comment_id": 91237869, "body": "Please try to create a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> next time. It will help you and us to solve your problem easier."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1535955473, "post_id": 52141148, "comment_id": 91237873, "body": "<code>in</code> is a reserved keyword and cannot be used as a variable name."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1535963475, "last_edit_date": 1535963475, "creation_date": 1535955970, "answer_id": 52144196, "question_id": 52141148, "link": "https://stackoverflow.com/questions/52141148/unable-to-pass-a-vecu8-into-a-funtction-taking-mut-read/52144196#52144196", "title": "Unable to pass a Vec&lt;u8&gt; into a funtction taking &amp;mut Read", "body": "<p>Your example is fairly easy solveable, just borrow the slice!</p>\n\n<pre><code>use std::io::{copy, Read, Write};\n\nfn f(input: &amp;mut Read, output: &amp;mut Write) {\n    copy(input, output).unwrap();\n}\n\nfn main() {\n    let i = vec![0u8, 1, 2, 3];\n    let mut o = Vec::new();\n    f(&amp;mut &amp;i[..], &amp;mut o);\n    println!(\"{:?} {:?}\", i, o);\n}\n</code></pre>\n\n<p>Although I don't know, why you do <code>i[..]</code>, because read does not alter the reader in <strong>this specific case</strong> (note that it can alter the reader, because it takes a mutable reference, which can (e.g. on sockets) consume the bytes it reads).</p>\n\n<p>You could also just write</p>\n\n<pre><code>f(&amp;mut i.as_slice(), &amp;mut o);\n</code></pre>\n\n<p>if you are not compelled to clone the vec.</p>\n"}], "owner": {"reputation": 1181, "user_id": 2708904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b7b059287e83e57ccf1ffd04ccbd6314?s=128&d=identicon&r=PG&f=1", "display_name": "Innot Kauker", "link": "https://stackoverflow.com/users/2708904/innot-kauker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1128, "favorite_count": 0, "accepted_answer_id": 52144196, "answer_count": 1, "score": 0, "last_activity_date": 1535963475, "creation_date": 1535923523, "question_id": 52141148, "link": "https://stackoverflow.com/questions/52141148/unable-to-pass-a-vecu8-into-a-funtction-taking-mut-read", "title": "Unable to pass a Vec&lt;u8&gt; into a funtction taking &amp;mut Read", "body": "<p>I have a function with the following signature:</p>\n\n<pre><code>fn f(input: &amp;mut Read, output: &amp;mut Write)\n</code></pre>\n\n<p>And I try to pass <code>Vec&lt;u8&gt;</code>s as both input and output:</p>\n\n<pre><code>let mut in: Vec&lt;u8&gt; = Vec::new();\nlet mut out: Vec&lt;u8&gt; = Vec::new();\nf(&amp;mut in[..], &amp;mut out);\n</code></pre>\n\n<p>The compiler seems to be fine with <code>out</code>, but I get errors about <code>in</code>:</p>\n\n<pre><code>error[E0277]: the trait bound `[u8]: std::io::Read` is not satisfied\n--&gt; src/crypto.rs:109:25\n    |\n109 |     f(&amp;mut in[..], &amp;mut out);     \n            ^^^^^^^^^^^ the trait `std::io::Read` is not implemented for `[u8]`\n    |\n    = help: the following implementations were found:\n              &lt;&amp;'a [u8] as std::io::Read&gt;\n    = note: required for the cast to the object type `std::io::Read`\n\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied\n--&gt; src/crypto.rs:109:25\n    |\n109 |     f(&amp;mut in[..], &amp;mut out);\n    |       ^^^^^^^^^^^ `[u8]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n    = note: required for the cast to the object type `std::io::Read`\n</code></pre>\n\n<p>What is the right way to pass a Vec into such interface?</p>\n"}, {"tags": ["rust", "inline", "traits", "default-implementation"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1535953912, "post_id": 52141092, "comment_id": 91237376, "body": "&quot;I understand that the trait&#39;s method doesn&#39;t have a body, so there is nothing to inline.&quot; ???"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1535956182, "post_id": 52141092, "comment_id": 91238128, "body": "Possible duplicates: <a href=\"https://stackoverflow.com/questions/41733424/can-inline-be-used-in-both-trait-method-declarations-and-implementations\" title=\"can inline be used in both trait method declarations and implementations\">stackoverflow.com/questions/41733424/&hellip;</a> <a href=\"https://stackoverflow.com/questions/51698722/inline-a-common-method\" title=\"inline a common method\">stackoverflow.com/questions/51698722/inline-a-common-method</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1535959737, "creation_date": 1535959737, "answer_id": 52145012, "question_id": 52141092, "link": "https://stackoverflow.com/questions/52141092/can-compiler-do-a-default-implementations-inlining-of-the-traits-method/52145012#52145012", "title": "Can compiler do a default implementation&#39;s inlining of the trait&#39;s method?", "body": "<p>If I understand the question correctly, you are asking two things:</p>\n\n<ul>\n<li>Will the compiler inline calls to <code>magnitude</code>?</li>\n<li>Will the compiler be able to inline the call to <code>square_magnitude</code> inside <code>magnitude</code> if <code>square_magnitude</code> is itself declared <code>inline</code> even though the code for <code>square_magnitude</code> is not available in the trait?</li>\n</ul>\n\n<p>As to the first, there is no reason why it couldn't. As to the second the answer is yes, the compiler will be able to inline both functions because by the time it generates the code, the source for both functions is available. This can be seen in the <a href=\"https://rust.godbolt.org/z/eqHduA\" rel=\"nofollow noreferrer\">disassembly</a>:</p>\n\n<pre><code>trait Magnitude {\n    fn square_magnitude( &amp;self ) -&gt; f64;\n\n    #[inline]\n    fn magnitude( &amp;self ) -&gt; f64 {\n        self.square_magnitude().sqrt()\n    }\n}\n\nstruct Vector { x: f64, y: f64 }\n\nimpl Magnitude for Vector {\n    #[inline]\n    fn square_magnitude (&amp;self) -&gt; f64 {\n        self.x*self.x + self.y*self.y\n    }\n}\n\npub fn test (x: f64, y: f64) -&gt; f64 {\n    let v = Vector { x: x, y: y };\n    v.magnitude()\n}\n</code></pre>\n\n<p>Compiled with rustc v1.28.0 and option <code>-O</code>:</p>\n\n<pre><code>example::test:\n        mulsd   xmm0, xmm0\n        mulsd   xmm1, xmm1\n        addsd   xmm1, xmm0\n        xorps   xmm0, xmm0\n        sqrtsd  xmm0, xmm1\n        ret\n</code></pre>\n\n<p>Note however that the <a href=\"https://rust.godbolt.org/z/VuIrXQ\" rel=\"nofollow noreferrer\">compiler will <em>not</em> inline <code>square_magnitude</code> inside <code>magnitude</code> if <code>square_magnitude</code> is not declared <code>inline</code> itself</a>:</p>\n\n<pre><code>impl Magnitude for Vector {\n    fn square_magnitude (&amp;self) -&gt; f64 {\n        self.x*self.x + self.y*self.y\n    }\n}\n</code></pre>\n\n<p>Generates:</p>\n\n<pre><code>&lt;example::Vector as example::Magnitude&gt;::square_magnitude:\n        movsd   xmm1, qword ptr [rdi]\n        movsd   xmm0, qword ptr [rdi + 8]\n        mulsd   xmm1, xmm1\n        mulsd   xmm0, xmm0\n        addsd   xmm0, xmm1\n        ret\n\nexample::test:\n        mulsd   xmm0, xmm0\n        mulsd   xmm1, xmm1\n        addsd   xmm1, xmm0\n        xorps   xmm0, xmm0\n        sqrtsd  xmm0, xmm1\n        ret\n</code></pre>\n"}], "owner": {"reputation": 3263, "user_id": 854291, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/b2775d1bca7cc867a62dd53cee3d1cf7?s=128&d=identicon&r=PG", "display_name": "kbec", "link": "https://stackoverflow.com/users/854291/kbec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 52145012, "answer_count": 1, "score": 0, "last_activity_date": 1535959737, "creation_date": 1535922912, "last_edit_date": 1535924781, "question_id": 52141092, "link": "https://stackoverflow.com/questions/52141092/can-compiler-do-a-default-implementations-inlining-of-the-traits-method", "title": "Can compiler do a default implementation&#39;s inlining of the trait&#39;s method?", "body": "<p>I understand that the trait's method doesn't have a body, so there is nothing to inline. But is there any sense to mark its default implementation like this?</p>\n\n<pre><code>trait Magnitude {\n    fn square_magnitude( &amp;self ) -&gt; f64;\n\n    #[inline]\n    fn magnitude( &amp;self ) -&gt; f64 {\n        self.square_magnitude().sqrt()\n    }\n}\n</code></pre>\n\n<p>Do I need to rewrite whole method body and mark this impl's method with <code>#[inline]</code> when implementing the trait for type rather than marking just trait's method as above?</p>\n"}, {"tags": ["loops", "syntax", "rust", "iteration"], "answers": [{"tags": [], "owner": {"reputation": 121127, "user_id": 388520, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/dd7cc06b1b1c347e172c6ba532937173?s=128&d=identicon&r=PG", "display_name": "zwol", "link": "https://stackoverflow.com/users/388520/zwol"}, "is_accepted": true, "score": 14, "last_activity_date": 1614084892, "last_edit_date": 1614084892, "creation_date": 1535912952, "answer_id": 52139943, "question_id": 52139879, "link": "https://stackoverflow.com/questions/52139879/how-would-you-write-the-equivalent-of-this-c-loop-in-rust/52139943#52139943", "title": "How would you write the equivalent of this C++ loop in Rust", "body": "<p>You can always do a literal translation to a <code>while</code> loop.</p>\n<pre><code>let mut i = 2;\nwhile i * i &lt; n {\n    // code goes here\n    i += 1;\n}\n</code></pre>\n<p>You can also always write a <code>for</code> loop over an infinite range and break out on an arbitrary condition:</p>\n<pre><code>for i in 2.. {\n    if i * i &gt;= n { break }\n    // code goes here\n}\n</code></pre>\n<p>For this specific problem, you could also use <code>take_while</code>, but I don't know if that is actually more readable than breaking out of the for loop.  It would make more sense as part of a longer chain of &quot;combinators&quot;.</p>\n<pre><code>for i in (2..).take_while(|i| i * i &lt; n) {\n    // code goes here\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1535954108, "post_id": 52141236, "comment_id": 91237431, "body": "why did you put <code>-0.5</code> ? Are you sure it&#39;s safe with f64 accuracy ?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1535964035, "post_id": 52141236, "comment_id": 91241874, "body": "@Stargateur It&#39;s to ensure it always rounds down. The sqrt of a 9.0 could end up being slightly above or slightly below 3.0. At least this way, I know the answer is definitely 2.0."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1535984980, "post_id": 52141236, "comment_id": 91253689, "body": "&quot;avoid doing a comparison every iteration&quot; You mean multiplication, I think. You still have to compare on every iteration."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1535985864, "post_id": 52141236, "comment_id": 91254170, "body": "@trentcl It&#39;s both. This way it doesn&#39;t even need to compare <code>i</code> with <code>m</code>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1536136829, "last_edit_date": 1536136829, "creation_date": 1535924504, "answer_id": 52141236, "question_id": 52139879, "link": "https://stackoverflow.com/questions/52139879/how-would-you-write-the-equivalent-of-this-c-loop-in-rust/52141236#52141236", "title": "How would you write the equivalent of this C++ loop in Rust", "body": "<p>The <code>take_while</code> suggestion from <a href=\"https://stackoverflow.com/a/52139943/493729\">zwol's answer</a> is the most idiomatic, and therefore usually the best choice. All of the information about the loop is kept together in a single expression instead of getting mixed into the body of the loop.</p>\n\n<p>However, the <em>fastest</em> implementation is to precompute the square root of <code>n</code> (actually a weird sort of rounded-down square root). This lets you avoid doing a comparison every iteration, since you know this is always the final value of <code>i</code>.</p>\n\n<pre><code>let m = (n as f64 - 0.5).sqrt() as _;\nfor i in 2 ..= m {\n    // code goes here\n}\n</code></pre>\n\n<hr>\n\n<p>As a side note, I tried to benchmark these different loops. The <code>take_while</code> was the slowest. The version I just suggested always reported <code>0 ns/iter</code>, and I'm not sure if that's just due to some code being optimised to the point of not running at all, or if it really is too fast to measure. For most uses, the difference shouldn't be important though.</p>\n"}, {"tags": [], "owner": {"reputation": 772, "user_id": 2177445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70a2a5ad356c78484d79a3ad4b99209f?s=128&d=identicon&r=PG", "display_name": "likebike", "link": "https://stackoverflow.com/users/2177445/likebike"}, "is_accepted": false, "score": 0, "last_activity_date": 1571900549, "last_edit_date": 1571900549, "creation_date": 1571086897, "answer_id": 58384010, "question_id": 52139879, "link": "https://stackoverflow.com/questions/52139879/how-would-you-write-the-equivalent-of-this-c-loop-in-rust/58384010#58384010", "title": "How would you write the equivalent of this C++ loop in Rust", "body": "<p><strong>Update:</strong> I have learned more Rust since I wrote this answer.  This structure is still useful for some rare situations (like when the logic inside the loop needs to conditionally mutate the counter variable), but usually you'll want to use a Range Expression like zwol said.</p>\n\n<hr>\n\n<p>I like this form, since it keeps the increment at the top of the loop instead of the bottom:</p>\n\n<pre><code>let mut i = 2 - 1;    // You need to subtract 1 from the initial value.\nloop {\n    i+=1; if i*i &gt;= n { break }\n\n    // code goes here...\n}\n</code></pre>\n"}], "owner": {"reputation": 423, "user_id": 2481107, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/t7HcJ.jpg?s=128&g=1", "display_name": "Midas", "link": "https://stackoverflow.com/users/2481107/midas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 787, "favorite_count": 0, "accepted_answer_id": 52139943, "answer_count": 3, "score": 4, "last_activity_date": 1614084892, "creation_date": 1535912339, "last_edit_date": 1545502600, "question_id": 52139879, "link": "https://stackoverflow.com/questions/52139879/how-would-you-write-the-equivalent-of-this-c-loop-in-rust", "title": "How would you write the equivalent of this C++ loop in Rust", "body": "<p>Rust's <code>for</code> loops are a bit different than those in C-style languages. I am trying to figure out if I can achieve the same result below in a similar fashion in Rust. <em>Note the condition where the i^2 &lt; n.</em></p>\n\n<pre><code>for (int i = 2; i * i &lt; n; i++)\n{\n    // code goes here ...\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1535916110, "post_id": 52139667, "comment_id": 91230258, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48114390/why-does-a-lazy-static-value-claim-to-not-implement-a-trait-that-it-clearly-impl\">Why does a lazy-static value claim to not implement a trait that it clearly implements?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1756, "user_id": 8492116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22358b8a44a83a98115de7b8c6092529?s=128&d=identicon&r=PG&f=1", "display_name": "Aankhen", "link": "https://stackoverflow.com/users/8492116/aankhen"}, "is_accepted": true, "score": 1, "last_activity_date": 1535911809, "creation_date": 1535911809, "answer_id": 52139787, "question_id": 52139667, "link": "https://stackoverflow.com/questions/52139667/lazy-static-raises-error-as-no-rules-expected-the-token/52139787#52139787", "title": "lazy_static raises error as &quot;no rules expected the token&quot;", "body": "<p><a href=\"https://stackoverflow.com/a/48115258/8492116\">Under the hood, <code>lazy_static</code> creates a one-off object that dereferences to the actual value, which is computed lazily.</a> <code>_spdk_dir</code> is not a <code>String</code> but a value that evaluates to a <code>String</code>. You need to dereference the value to print it. One other thing you can do is use <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\"><code>unwrap_or_else</code></a> instead of the <code>match</code>:</p>\n\n<pre><code>lazy_static! {\n    static ref _spdk_dir: String = env::var(\"SPDK_DIR\")\n        .unwrap_or_else(|_| panic!(\"SPDK_DIR is not defined in the environment\"));\n    static ref _dpdk_dir: String = env::var(\"DPDK_DIR\")\n        .unwrap_or_else(|_| panic!(\"DPDK_DIR is not defined in the environment\"))\n}\n\nprintln!(\"cargo:warning={}\", *_spdk_dir);\n</code></pre>\n\n<p>(<code>ref</code> is part of <code>lazy_static</code>\u2019s syntax, so you can\u2019t leave it out.)</p>\n"}], "owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 0, "accepted_answer_id": 52139787, "answer_count": 1, "score": 0, "last_activity_date": 1535911809, "creation_date": 1535910932, "question_id": 52139667, "link": "https://stackoverflow.com/questions/52139667/lazy-static-raises-error-as-no-rules-expected-the-token", "title": "lazy_static raises error as &quot;no rules expected the token&quot;", "body": "<p>I'm trying to use <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">lazy_static</a> crate to initialize some static variables which assigned values by reading some environment variables in <code>build.rs</code>. What I'm trying to achieve is similar to <a href=\"https://stackoverflow.com/questions/37405835/populating-a-static-const-with-an-environment-variable-at-runtime-in-rust\">this post</a>.</p>\n\n<p>My code is following:</p>\n\n<pre><code>lazy_static! {\n\nstatic _spdk_dir : String = match env::var(\"SPDK_DIR\") {\n    Ok(val) =&gt; val,\n    Err(_e) =&gt; panic!(\"SPDK_DIR is not defined in the environment\")\n};\n\nstatic _dpdk_dir: String = match env::var(\"DPDK_DIR\") {\n    Ok(val) =&gt; val,\n    Err(_e) =&gt; panic!(\"DPDK_DIR is not defined in the environment\")\n};\n}\n</code></pre>\n\n<p>After running <code>cargo test</code>, the compiler gives <code>error: no rules expected the token _spdk_dir</code>. I can get rid of this error by adding the keyword <code>ref</code> after <code>static</code> \nbut doing so will lead another error when use the variable with <code>println!</code>:</p>\n\n<pre><code>println!(\"cargo:warning={}\", _spdk_dir);\n</code></pre>\n\n<p>The error is <code>_spdk_dir doesn't implement std::fmt::Display</code></p>\n\n<p>I'm wondering how can I solve the problem? Thanks!</p>\n"}, {"tags": ["rust", "rust-cargo", "rustdoc"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 9, "last_activity_date": 1588862249, "last_edit_date": 1588862249, "creation_date": 1535886247, "answer_id": 52136357, "question_id": 52136276, "link": "https://stackoverflow.com/questions/52136276/how-to-generate-documentation-for-private-items/52136357#52136357", "title": "How to generate documentation for private items", "body": "<p>This is because those modules are private, and the default behavior is to document public members only.</p>\n\n<p>As of <a href=\"https://blog.rust-lang.org/2018/09/13/Rust-1.29.html\" rel=\"nofollow noreferrer\">Rust 1.29.0</a>, <code>cargo doc</code> supports <code>--document-private-items</code>, to document private items.</p>\n\n<p>Before 1.29, <code>rustdoc</code> already supported the flag <code>--document-private-items</code>, which means you could generate documentation for your project using <code>cargo rustdoc -- --document-private-items</code>, but <code>cargo doc</code> did not support the flag.</p>\n"}], "owner": {"reputation": 201, "user_id": 5524929, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Q4PVrRADJv8/AAAAAAAAAAI/AAAAAAAAATk/_kl5UXFmBfU/photo.jpg?sz=128", "display_name": "bubulemaster", "link": "https://stackoverflow.com/users/5524929/bubulemaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 1, "accepted_answer_id": 52136357, "answer_count": 1, "score": 7, "last_activity_date": 1588862249, "creation_date": 1535885558, "last_edit_date": 1535886374, "question_id": 52136276, "link": "https://stackoverflow.com/questions/52136276/how-to-generate-documentation-for-private-items", "title": "How to generate documentation for private items", "body": "<p>I have a project with:</p>\n\n<pre><code>main.rs\nmodule_1/mod.rs\nmodule_2/mod.rs\nmodule_2/module_3/mod.rs\n</code></pre>\n\n<p>when I run <code>cargo doc</code>, I have just documentation for <code>main.rs</code>, not for modules.</p>\n\n<p>In my <code>main.rs</code> I have:</p>\n\n<pre><code>mod module_1;\nmod module_2;\n\nfn main() {\n...\n}\n</code></pre>\n\n<p>I have tried documenting modules using  <code>///</code> or <code>//!</code>.</p>\n\n<p>I can't find in <code>rustdoc</code>'s help how do that.</p>\n\n<p>Somebody can explain me?</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "is_accepted": true, "score": 4, "last_activity_date": 1535872132, "creation_date": 1535872132, "answer_id": 52134758, "question_id": 52134531, "link": "https://stackoverflow.com/questions/52134531/how-to-get-access-to-enum-variant-unnamed-field/52134758#52134758", "title": "How to get access to enum variant unnamed field?", "body": "<p>You can use a <code>match</code> statement or alternatively an <code>if let</code> statement to use the variant's associated value:</p>\n\n<pre><code>#[derive(Debug)]\nenum Coin {\n    Penny(String),\n    Nickel { id: String },\n}\n\nfn main() {\n    let penny = Coin::Penny(String::from(\"penny\"));\n    let nickel: Coin = Coin::Nickel {\n        id: String::from(\"nickel\"),\n    };\n\n    if let Coin::Penny(name) = penny {\n        println!(\"{}\", name);\n    }\n\n    if let Coin::Nickel{ id } = nickel {\n        println!(\"{}\", id);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d4436f3aad76a2c437aa7df557a423ba&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"comments": [{"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1609543302, "post_id": 52135439, "comment_id": 115864338, "body": "what if the value is dynamic and we dont know which variant"}], "tags": [], "owner": {"reputation": 637, "user_id": 6999141, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8056cd6d51c3c6f3dd6bd787259b4a1d?s=128&d=identicon&r=PG", "display_name": "Anatolii Kosorukov", "link": "https://stackoverflow.com/users/6999141/anatolii-kosorukov"}, "is_accepted": false, "score": 4, "last_activity_date": 1535902445, "last_edit_date": 1535902445, "creation_date": 1535878715, "answer_id": 52135439, "question_id": 52134531, "link": "https://stackoverflow.com/questions/52134531/how-to-get-access-to-enum-variant-unnamed-field/52135439#52135439", "title": "How to get access to enum variant unnamed field?", "body": "<p>Example using <code>match</code> statement:</p>\n\n<pre><code>#[derive(Debug)]\nenum Coin {\n    Penny(String),\n    Nickel { id: String },\n}\n\nfn main() {\n    let penny = Coin::Penny(String::from(\"penny\"));\n    let nickel: Coin = Coin::Nickel {\n        id: String::from(\"nickel\"),\n    };\n\n    match &amp;penny {\n        Coin::Penny(id) =&gt; {\n            println!(\"{}; {:?}\", id, penny);\n        }\n        _ =&gt; {}\n    }\n\n    match &amp;nickel {\n        Coin::Nickel { id } =&gt; {\n            println!(\"{}; {:?}\", id, nickel);\n        }\n        _ =&gt; {}\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=96d350af1d476a135b5d6ecf1c3de9e7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 637, "user_id": 6999141, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8056cd6d51c3c6f3dd6bd787259b4a1d?s=128&d=identicon&r=PG", "display_name": "Anatolii Kosorukov", "link": "https://stackoverflow.com/users/6999141/anatolii-kosorukov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1507, "favorite_count": 0, "accepted_answer_id": 52134758, "answer_count": 2, "score": 3, "last_activity_date": 1535902445, "creation_date": 1535869565, "last_edit_date": 1535878474, "question_id": 52134531, "link": "https://stackoverflow.com/questions/52134531/how-to-get-access-to-enum-variant-unnamed-field", "title": "How to get access to enum variant unnamed field?", "body": "<p>I would like to print data of tuple enum without named fields.</p>\n\n<p>A tuple is a general way of grouping together some number of other values with a variety of types into one compound type.</p>\n\n<pre><code>#[derive(Debug)]\nenum Coin {\n    Penny(String),\n    Nickel { id: String },\n}\n\nfn main() {\n    let penny = Coin::Penny(String::from(\"penny\"));\n    let nickel: Coin = Coin::Nickel { id: String::from(\"nickel\") };\n\n    println!(\"{} {:?} \", penny.0, penny);\n    println!(\"{:?}\", nickel);\n}\n</code></pre>\n\n<p>In this example, <code>Nickel</code> is a struct-like enum variant, whereas <code>Penny</code> is simply called an <a href=\"https://doc.rust-lang.org/reference/items/enumerations.html\" rel=\"nofollow noreferrer\">enum variant</a>. </p>\n\n<p>I get a compiler error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0609]: no field `0` on type `Coin`\nFor more information about this error, try `rustc --explain E0609`.\n</code></pre>\n"}, {"tags": ["module", "rust", "singleton"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1535879067, "post_id": 52133796, "comment_id": 91220784, "body": "Just a small hint for the future: try sticking to Rust&#39;s coding conventions. In particular, types are <code>UpperCamelCase</code> (e.g. <code>ReadingInStatic</code>) and modules and functions are <code>snake_case</code> (e.g. <code>reading_in_static</code> and <code>test_thing</code>). Using correct names also means that the compiler won&#39;t emit a bunch of warnings. Additionally, proper indentation and spacing also vastly increases readability. You should really use correct formatting in your code. If you&#39;re unsure, try <code>rustfmt</code>."}], "answers": [{"tags": [], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "is_accepted": true, "score": 2, "last_activity_date": 1535873802, "creation_date": 1535873802, "answer_id": 52134916, "question_id": 52133796, "link": "https://stackoverflow.com/questions/52133796/rust-cant-import-singleton-from-global-space-into-another-module-in-another-fil/52134916#52134916", "title": "Rust Can&#39;t import Singleton From global space into another module in another file", "body": "<p><code>::GAMEDATA</code> refers to some value called <code>GAMEDATA</code> in the crate root of the <code>gamedata</code> crate. However where you defined <code>GAMEDATA</code> was not in that crate, it was in your <code>main.rs</code> file which has <code>gamedata</code> as a dependency.</p>\n\n<p>So what you're trying to do here is reach out of a crate use something from the crate that is depending on you, which I'm not sure but I don't think is allowed.</p>\n\n<p>You could consider inverting this and instead initialising GAMEDATA inside your <code>gamedata</code> crate instead and if you need to use it in main you can just <code>use</code> it normally:</p>\n\n<pre><code>extern crate gamedata;\n\nuse gamedata::GAMEDATA;\n\nfn main(){\n    println!(\"Game Data:{}\", *GAMEDATA);\n\n    ...\n}\n</code></pre>\n\n<p>Alternatively if <code>GAMEDATA</code> is not something your game data crate should know how to define, you could construct it inside main and pass it to some function in the <code>gamedata</code> crate as a parameter.</p>\n"}], "owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 52134916, "answer_count": 1, "score": 0, "last_activity_date": 1535878796, "creation_date": 1535859908, "last_edit_date": 1535878796, "question_id": 52133796, "link": "https://stackoverflow.com/questions/52133796/rust-cant-import-singleton-from-global-space-into-another-module-in-another-fil", "title": "Rust Can&#39;t import Singleton From global space into another module in another file", "body": "<p>Using the <code>lazy_static</code> library to create a singleton. I am unable to access that singleton in a module in another file. If the module is defined below the main function I can access it fine.</p>\n\n<p>Given a main file such as the following, <code>test_stuff</code> can access gamedata fine:</p>\n\n<pre><code>extern crate gamedata;\n#[macro_use]\nextern crate lazy_static;\n\n\nlazy_static! {\n    pub static ref GAMEDATA: &amp;'static str = \"I am a test STrings\";\n} \n\nfn main() {\n    println!(\"Game Data:{}\",*GAMEDATA);\n    let obj = gamedata::readinginstatic::readinginstatic {\n        structure:\"working\".to_string()\n    };\n    obj.print_static();\n}\n\nmod test_stuff {\n    use ::GAMEDATA;\n    fn printthing() {\n        println!(\"herenow:{}\", *GAMEDATA);\n    }\n}\n</code></pre>\n\n<p>With a <code>lib.rs</code> file such as:</p>\n\n<pre><code>pub mod readinginstatic;\n</code></pre>\n\n<p>And a module in another file <code>readinginstatic.rs</code> as described below:</p>\n\n<pre><code>use ::GAMEDATA;\n\npub struct readinginstatic {\n    pub structure:String,\n}\n\nimpl readinginstatic {\n    pub fn print_static(&amp;self) {\n        println!(\"In Print static width:{}\", *::GAMEDATA);\n    }\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<blockquote>\n  <p>not found in the crate root</p>\n</blockquote>\n\n<p>When trying to import <code>GAMEDATA</code>.</p>\n\n<p>Is it possible to access a <code>lazy_static</code> singleton in another module if it is defined in another file?</p>\n\n<p>To insure I have provided a Minimal, Complete, and Verifiable example here is my whole example code on GitHub: <a href=\"https://github.com/camccar/moduleError\" rel=\"nofollow noreferrer\">https://github.com/camccar/moduleError</a></p>\n"}, {"tags": ["list", "generics", "collections", "rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1535879380, "post_id": 52134683, "comment_id": 91220855, "body": "Note: in Rust 2018, we prefer to prefix traits that are used as trait objects with the <code>dyn</code> keyword. So <code>Vec&lt;Box&lt;dyn Event&gt;&gt;</code> would be more idiomatic :)"}, {"owner": {"reputation": 15, "user_id": 9142730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ec5690967271136031e3b6bd4b1f9a2?s=128&d=identicon&r=PG&f=1", "display_name": "Christopher Leggett", "link": "https://stackoverflow.com/users/9142730/christopher-leggett"}, "edited": false, "score": 0, "creation_date": 1535891197, "post_id": 52134683, "comment_id": 91223601, "body": "Thanks! I hadn&#39;t known about smart pointers yet, but your explanation was very helpful!"}], "tags": [], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "is_accepted": true, "score": 2, "last_activity_date": 1535871306, "creation_date": 1535871306, "answer_id": 52134683, "question_id": 52133767, "link": "https://stackoverflow.com/questions/52133767/how-do-i-make-a-collection-of-generically-typed-structs-in-rust/52134683#52134683", "title": "How do I make a Collection of Generically Typed Structs in Rust?", "body": "<p>The Rust compiler needs to know how big each element in your Vec will be to decide how to lay out memory (each element must take up the same amount of space). Your <code>Space</code> struct has a type parameter <code>T</code> so it's not clear how much space a <code>Space</code> will take unless you provide the type parameter too. E.g. <code>Vec&lt;Space&lt;i32&gt;&gt;</code> would work.</p>\n\n<p>If you want a <code>Vec</code> of differently sized objects, a common approach is to use a vector of <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a>. In your example you could have a <code>Vec&lt;Box&lt;Event&gt;&gt;</code>, a vector of objects that implement the <code>Event</code> trait, each element of the vec here is a Box (smart pointer) to a heap-allocated type that implements <code>Event</code>.</p>\n\n<pre><code>pub trait Event {\n    fn event(&amp;self);\n}\n\npub struct Property {\n    message: String,\n}\n\nimpl Property {\n    pub fn new(message: String) -&gt; Property {\n        Property { message }\n    }\n}\n\nimpl Event for Property {\n    fn event(&amp;self) {\n        println!(\"{}\", &amp;self.message);\n    }\n}\n\npub struct Utility {\n    message: String,\n}\n\nimpl Utility {\n    pub fn new(message: String) -&gt; Utility {\n        Utility { message }\n    }\n}\n\nimpl Event for Utility {\n    fn event(&amp;self) {\n        println!(\"{}\", &amp;self.message);\n    }\n}\n\npub struct Game {\n    pub spaces: Vec&lt;Box&lt;Event&gt;&gt;,\n}\n\nfn main () {\n    let game = Game{ \n        spaces: vec![\n            Box::new(Utility::new(String::from(\"Water works\"))),\n            Box::new(Property::new(String::from(\"Fleet Street\"))),\n            Box::new(Utility::new(String::from(\"Electric company\"))),\n            Box::new(Property::new(String::from(\"Bond Street\"))),\n        ] \n    };\n\n    for space in game.spaces {\n        space.event();\n    }\n}\n\n// Water works\n// Fleet Street\n// Electric company\n// Bond Street\n</code></pre>\n"}], "owner": {"reputation": 15, "user_id": 9142730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ec5690967271136031e3b6bd4b1f9a2?s=128&d=identicon&r=PG&f=1", "display_name": "Christopher Leggett", "link": "https://stackoverflow.com/users/9142730/christopher-leggett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 1, "accepted_answer_id": 52134683, "answer_count": 1, "score": 1, "last_activity_date": 1535879278, "creation_date": 1535859251, "last_edit_date": 1535879278, "question_id": 52133767, "link": "https://stackoverflow.com/questions/52133767/how-do-i-make-a-collection-of-generically-typed-structs-in-rust", "title": "How do I make a Collection of Generically Typed Structs in Rust?", "body": "<p>I am creating a text based monopoly game in Rust as a personal project. My current setup is to have the various kinds of spaces as their own structs (for example, <code>Property</code>)</p>\n\n<pre><code>use space::Event;\n\npub struct Property {\n    message: String,\n}\n\nimpl Property {\n    pub fn new() -&gt; Property {\n        let message = String::from(\"Hello World!\");\n        Property { message: message }\n    }\n}\n\nimpl Event for Property {\n    fn event(&amp;self) {\n        print!(\"{}\", &amp;self.message);\n    }\n}\n</code></pre>\n\n<p>and a generic <code>Space</code> struct that contains an instance of one of the types of spaces (<code>Space&lt;Property&gt;</code> or <code>Space&lt;Chance&gt;</code> for example).</p>\n\n<pre><code>pub trait Event {\n    fn event(&amp;self);\n}\n\npub struct Space&lt;T&gt; {\n    item: T,\n}\n\nimpl&lt;T: Event&gt; Space&lt;T&gt; {\n    pub fn new(item: T) -&gt; Space&lt;T&gt; {\n        Space { item: item }\n    }\n\n    pub fn event(&amp;self) {\n        &amp;self.item.event();\n    }\n}\n</code></pre>\n\n<p>Each type of space implements a trait that requires it to have an \"event\" method, which the generic Space struct can call. Then I have a <code>Game</code> struct that will contain some sort of collection of spaces (among other things).</p>\n\n<pre><code>pub struct Game {\n    spaces: Vec&lt;Space&gt;, // Does not work\n}\n</code></pre>\n\n<p>Unfortunately I'm running into an issue creating this collection. No matter which one I try it tells me I have to specify a type argument for Space. How can I make a collection of structs that are generically typed? It would be preferable if I can pull up a particular space by its index, as that will make it easier when I start to implement certain <code>Chance</code> cards that move you to particular spaces later down the line. Apologies if I'm missing something obvious, I'm new-ish to Rust so I don't always necessarily know what to look for.</p>\n"}, {"tags": ["vector", "parameters", "rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1535847992, "creation_date": 1535847992, "answer_id": 52133119, "question_id": 52132914, "link": "https://stackoverflow.com/questions/52132914/is-it-possible-to-expand-a-collection-to-multiple-parameters-of-a-function/52133119#52133119", "title": "Is it possible to expand a collection to multiple parameters of a function", "body": "<p>No. Macros work on the syntax trees, and cannot deconstruct an existing variable like this.</p>\n\n<p>However, using the <code>table!</code> macro isn't the only way to construct a <code>prettytable::Table</code>. If you look at the doc, you will notice that there is <a href=\"https://docs.rs/prettytable-rs/0.7.0/prettytable/struct.Table.html#impl-From%3CT%3E\" rel=\"nofollow noreferrer\">an implementation of</a>:</p>\n\n<pre><code>impl&lt;T, A, B&gt; From&lt;T&gt; for Table where\n    B: ToString,\n    A: IntoIterator&lt;Item = B&gt;,\n    T: IntoIterator&lt;Item = A&gt;, \n</code></pre>\n\n<p>which means that you can construct a table from anything that is a doubly iterable, yielding something that implements <code>ToString</code>.</p>\n\n<p>This allows to construct the table like this:</p>\n\n<pre><code>#[macro_use]\nextern crate prettytable;\nuse prettytable::Table;\n\nfn main() {\n    let v = vec![\n        [\"ABC\", \"DEFG\", \"HIJKLMN\"],\n        [\"foobar\", \"bar\", \"foo\"],\n        [\"foobar2\", \"bar2\", \"foo2\"],\n    ];\n\n    let table = prettytable::Table::from(v.iter());\n\n    // Print the table to stdout\n    table.printstd();\n}\n</code></pre>\n"}], "owner": {"reputation": 1021, "user_id": 1733823, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a76ed49769b056df6083cf7c93fbd2e6?s=128&d=identicon&r=PG", "display_name": "Afaq", "link": "https://stackoverflow.com/users/1733823/afaq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 52133119, "answer_count": 1, "score": 0, "last_activity_date": 1535847992, "creation_date": 1535844706, "last_edit_date": 1535847069, "question_id": 52132914, "link": "https://stackoverflow.com/questions/52132914/is-it-possible-to-expand-a-collection-to-multiple-parameters-of-a-function", "title": "Is it possible to expand a collection to multiple parameters of a function", "body": "<p>I have a <code>Vec</code> which has following elements:</p>\n\n<pre><code>let v = vec!([\"ABC\", \"DEFG\", \"HIJKLMN\"],\n             [\"foobar\", \"bar\", \"foo\"],\n             [\"foobar2\", \"bar2\", \"foo2\"])\n</code></pre>\n\n<p>I am using a macro <code>table!</code> from library <code>prettytable-rs</code> which accepts parameters as follows:</p>\n\n<pre><code>let table = table!([\"ABC\", \"DEFG\", \"HIJKLMN\"],\n                   [\"foobar\", \"bar\", \"foo\"],\n                   [\"foobar2\", \"bar2\", \"foo2\"]);\n\ntable.printstd();\n</code></pre>\n\n<p>Basically I want to explode the <code>Vec</code> <code>v</code> and pass its elements as multiple parameters to macro <code>table!</code> or any function/method for that matter. Is it possible to do so?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1535846970, "creation_date": 1535846970, "answer_id": 52133060, "question_id": 52132807, "link": "https://stackoverflow.com/questions/52132807/how-to-omit-top-level-type-parameter-in-generic-nested-structs/52133060#52133060", "title": "How to omit top-level type parameter in generic / nested structs?", "body": "<p>A simple solution is to use associated type in the trait, rather than a generic:</p>\n\n<pre><code>trait Element {}\n\ntrait Storage { // not generic\n    type Element: Element;\n}\n\nstruct Disk&lt;E&gt;\nwhere\n    E: Element,\n{\n    data: E,\n}\n\nimpl&lt;E&gt; Storage for Disk&lt;E&gt;\nwhere\n    E: Element,\n{\n    type Element = E;\n}\n\nstruct Database&lt;S&gt;\nwhere\n    S: Storage,\n    S::Element: Element,\n{\n    storage: S,\n}\n</code></pre>\n\n<p>(<a href=\"https://play.integer32.com/?gist=cd0d9b1ce46a63e82a1f0dd7dd91d664&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">link to playground</a>)</p>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/32059370/when-is-it-appropriate-to-use-an-associated-type-versus-a-generic-type\">When is it appropriate to use an associated type versus a generic type?</a></p>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 52133060, "answer_count": 1, "score": 0, "last_activity_date": 1535846970, "creation_date": 1535843198, "question_id": 52132807, "link": "https://stackoverflow.com/questions/52132807/how-to-omit-top-level-type-parameter-in-generic-nested-structs", "title": "How to omit top-level type parameter in generic / nested structs?", "body": "<p>I want to create a database structure that I can use like this:</p>\n\n<pre><code>let c: Database&lt;Disk&lt;u8&gt;&gt; = ...\n</code></pre>\n\n<p>However, when I naively implement it:</p>\n\n<pre><code>trait Element {}\n\ntrait Storage&lt;E&gt; where E: Element {}\n\nstruct Disk&lt;E&gt; where E: Element {\n    data: E,\n}  \n\nimpl&lt;E&gt; Storage&lt;E&gt; for Disk&lt;E&gt; where E: Element {}\n\nstruct Database&lt;S&gt;\nwhere\n    S: Storage&lt;E&gt;, \n    E: Element,\n{\n    storage: S,\n}\n</code></pre>\n\n<p>I get an error that <code>E</code> is unknown:</p>\n\n<pre><code>error[E0412]: cannot find type `E` in this scope\n  --&gt; src/main.rs:30:16\n   |\n30 |     S: Storage&lt;E&gt;, // &lt;-- Error: E not found.\n   |                ^ did you mean `Eq`?\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?gist=d857a644f486f9da3eac57f87ec15c6e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I could obviously make <code>E</code> explicit such as:</p>\n\n<pre><code>struct DatabaseUgly&lt;S, E&gt;\nwhere\n    S: Storage&lt;E&gt;,\n    E: Element \n</code></pre>\n\n<p>But then I would have to repeat the element type:</p>\n\n<pre><code>let c: DatabaseUgly&lt;Disk&lt;u8&gt;, u8&gt; = ...\n</code></pre>\n\n<p>How can I make <code>Database</code> work?</p>\n\n<hr>\n\n<p>Note: Since it happened more than once, please <em>do not edit the title</em> of my question without discussing it first. I might not be using the right terminology, but if I knew what exactly to look for I would probably not be asking / searching this way.</p>\n"}, {"tags": ["iterator", "rust", "lifetime"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1535848479, "post_id": 52132686, "comment_id": 91216718, "body": "On the Rust tag it is usual to include all necessary <code>use</code> in the code example, and when appropriate, a link to <a href=\"https://play.rust-lang.org//\" rel=\"nofollow noreferrer\">the playground</a> as well. This helps people that want to answer the question to help you! Right now I don&#39;t have time to find those missing <code>use</code> and make some tests, but looking quickly, it looks like you are missing a lifetime on <code>self</code> itself: <code>fn next(&amp;&#39;a mut self) -&gt; Option&lt;XlsxSheet&lt;&#39;a&gt;&gt;</code>"}, {"owner": {"reputation": 11, "user_id": 10304951, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DdLReglO6m8/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaNALdw_VMMgeLhE4ef6TbOpaJNgCA/mo/photo.jpg?sz=128", "display_name": "curve 25519", "link": "https://stackoverflow.com/users/10304951/curve-25519"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1535877660, "post_id": 52132686, "comment_id": 91220544, "body": "@mcarton I&#39;ve added import statements and a main method. I also tried to use <code>fn next(&amp;&#39;a mut self)</code> but then it started giving me different error msg.  error[E0308]: method not compatible with trait   --&gt; src/xlsx_read.rs:46:5    | 46 |     fn next(&amp;&#39;a mut self) -&gt; Option&lt;XlsxSheet&lt;&#39;a&gt;&gt; {    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch    |    = note: expected type <code>fn(&amp;mut xlsx_read::XlsxFile&lt;&#39;a&gt;) -&gt; std::option::Option&lt;xlsx_read::XlsxSheet&lt;&#39;_&gt;&gt;</code>               found type <code>fn(&amp;&#39;a mut xlsx_read::XlsxFile&lt;&#39;a&gt;) -&gt; std::option::Option&lt;xlsx_read::XlsxSheet&lt;&#39;a&gt;&gt;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 10304951, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DdLReglO6m8/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaNALdw_VMMgeLhE4ef6TbOpaJNgCA/mo/photo.jpg?sz=128", "display_name": "curve 25519", "link": "https://stackoverflow.com/users/10304951/curve-25519"}, "edited": false, "score": 0, "creation_date": 1535949189, "post_id": 52135624, "comment_id": 91236157, "body": "I&#39;ve already commented the line where the easy solution can be used (<code>&#47;&#47; works fine if String::from(file_name) is used</code>). I&#39;m actually looking to explore lifetimes in Rust much deeper with this problem. The other approaches don&#39;t compile successfully."}], "tags": [], "owner": {"reputation": 552, "user_id": 1972246, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/85624a7fbb43b64c4b8d5da2959f82ee?s=128&d=identicon&r=PG", "display_name": "Mike Manilone", "link": "https://stackoverflow.com/users/1972246/mike-manilone"}, "is_accepted": false, "score": 0, "last_activity_date": 1535880947, "last_edit_date": 1535880947, "creation_date": 1535880407, "answer_id": 52135624, "question_id": 52132686, "link": "https://stackoverflow.com/questions/52132686/lifetime-inference-problem-when-implementing-iterator-with-refs/52135624#52135624", "title": "Lifetime inference problem when implementing iterator with refs", "body": "<p><strong>Easy Solution</strong>: This problem can be trivially fixed by using <code>String</code> instead of <code>&amp;'a str</code>.</p>\n\n<p><strong>Explanation</strong>:</p>\n\n<p>I don't know the definition of <code>by_index</code>, which seems to be quite crucial to this problem. The following reasoning is pure guess and it's not reliable. It's offered only for reference.</p>\n\n<ol>\n<li><code>self.archive</code> borrows <code>self</code> (which is valid over the entire scope, let's say the lifetime is named <code>'me</code>), and has lifetime <code>'me</code>.</li>\n<li>Thus the return value of <code>by_index</code> has lifetime <code>'me</code>.</li>\n<li>Oops, <code>XlsxSheet&lt;'me&gt;</code> is not compatible with <code>XlsxSheet&lt;'a&gt;</code> (which is expected)!</li>\n</ol>\n\n<p>What we want here is <code>XlsxSheet&lt;'me&gt;</code> being a subtype of <code>XlsxSheet&lt;'a&gt;</code>, which in turn implies <code>'me</code> being a subtype of <code>'a</code>, if <code>XlsxSheet</code> is covariant. Therefore, you can state them explicitly</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;XlsxSheet&lt;'a&gt;&gt; where Self: 'a\n// or\nimpl&lt;'a&gt; Iterator for XlsxFile&lt;'a&gt; + 'a\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 10304951, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DdLReglO6m8/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaNALdw_VMMgeLhE4ef6TbOpaJNgCA/mo/photo.jpg?sz=128", "display_name": "curve 25519", "link": "https://stackoverflow.com/users/10304951/curve-25519"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 256, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1535880947, "creation_date": 1535841662, "last_edit_date": 1535877264, "question_id": 52132686, "link": "https://stackoverflow.com/questions/52132686/lifetime-inference-problem-when-implementing-iterator-with-refs", "title": "Lifetime inference problem when implementing iterator with refs", "body": "<p>I'm implementing a simple Iterator for a struct that contains a ref:\n</p>\n\n<pre><code>extern crate zip;\nextern crate quick_xml;\nextern crate chrono;\n\nuse std::io::{Seek, Write, Read, Error};\nuse std::fs::File;\nuse xlsx_read::zip::read::ZipFile;\nuse xlsx_read::zip::result::ZipResult;\nuse xlsx_read::zip::ZipArchive;\nuse xlsx_read::zip::write::{FileOptions, ZipWriter};\nuse xlsx_read::quick_xml::Reader as XmlReader;\nuse xlsx_read::quick_xml::events::Event;\nuse std::io::BufReader;\nuse xlsx_read::chrono::prelude::*;\n\npub struct XlsxFile&lt;'a&gt; {\n    path: &amp;'a str,\n    archive: ZipArchive&lt;File&gt;,\n    sheet_count: usize,\n    curr: usize,\n}\n\nimpl&lt;'a&gt; XlsxFile&lt;'a&gt; {\n    pub fn from(path: &amp;'a str) -&gt; Result&lt;XlsxFile, Error&gt; {\n        let file = File::open(path)?;\n        let archive = ZipArchive::new(file)?;\n        let sheet_count = archive.len();\n\n        Ok(XlsxFile {\n            path: path,\n            archive: archive,\n            sheet_count,\n            curr: 0,\n        })\n    }\n}\n\npub struct XlsxSheet&lt;'a&gt; {\n    pub name: &amp;'a str,\n    pub index: usize,\n}\n\nimpl&lt;'a&gt; Iterator for XlsxFile&lt;'a&gt; {\n    type Item = XlsxSheet&lt;'a&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;XlsxSheet&lt;'a&gt;&gt; {\n        loop {\n            if self.sheet_count &gt; 0 &amp;&amp;\n                self.sheet_count &gt; self.curr {\n                let zip_file = self.archive.by_index(self.curr).unwrap();\n                let file_name = zip_file.name();\n                if file_name.contains(\"xl/worksheets/sheet\") {\n                    let sheet = XlsxSheet {\n                        name: file_name, // works fine if String::from(file_name) is used\n                        index: self.curr,\n                    };\n                    self.curr += 1;\n                    return Some(sheet);\n                }\n                self.curr += 1;\n                continue;\n            } else {\n                break;\n            }\n        }\n        return None;\n    }\n}\n\nstatic XLSX_FILE: &amp;'static str = \"&lt;location_to_xlsx_file&gt;\";\n\nfn main() {\n    let mut file = xlsx_read::XlsxFile::from(XLSX_FILE).unwrap();\n\n    file.for_each(|s| println!(\"idx: {:?}\", s.name));\n}\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/xlsx_read.rs:50:45\n   |\n50 |                 let zip_file = self.archive.by_index(self.curr).unwrap();\n   |                                             ^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 46:5...\n  --&gt; src/xlsx_read.rs:46:5\n   |\n46 | /     fn next(&amp;mut self) -&gt; Option&lt;XlsxSheet&lt;'a&gt;&gt; {\n47 | |         loop {\n48 | |             if self.sheet_count &gt; 0 &amp;&amp;\n49 | |                 self.sheet_count &gt; self.curr {\n...  |\n66 | |         return None;\n67 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/xlsx_read.rs:50:32\n   |\n50 |                 let zip_file = self.archive.by_index(self.curr).unwrap();\n   |                                ^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 43:1...\n  --&gt; src/xlsx_read.rs:43:1\n   |\n43 | impl&lt;'a&gt; Iterator for XlsxFile&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the expression is assignable:\n           expected std::option::Option&lt;xlsx_read::XlsxSheet&lt;'a&gt;&gt;\n              found std::option::Option&lt;xlsx_read::XlsxSheet&lt;'_&gt;&gt;\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0495`.\n</code></pre>\n\n<p>My question is, how to tell Rust compiler to use appropriate lifetime here? Even though I've defined XlsxSheet&lt;'a> with lifetime modifier and want to tie name to &amp;'a str but somehow this doesn't translate into a valid Rust code.</p>\n"}, {"tags": ["data-structures", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1535841321, "post_id": 52132497, "comment_id": 91215814, "body": "Do you have a case in mind where you feel it would be an issue? It would be easier to help you understand with an example to discuss."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1535841892, "post_id": 52132497, "comment_id": 91215904, "body": "A naive implementation of <code>Vec</code> isn&#39;t thread-safe if you allow mutable references to it to be shared between threads. Many languages do allow that but Rust does not. In Rust, you need to wrap the value in things like <code>Arc</code>s and <code>Mutex</code>es which allow controlled mutation with safety guarantees."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1536234625, "last_edit_date": 1536234625, "creation_date": 1535842346, "answer_id": 52132744, "question_id": 52132497, "link": "https://stackoverflow.com/questions/52132497/why-does-vec-have-trait-sync/52132744#52132744", "title": "Why does Vec have trait Sync?", "body": "<p>Implementing <code>Sync</code> means that a type guarantees that references to its values can be shared between threads, without risk of a data race in safe Rust.</p>\n\n<p>Values of type <code>&amp;Vec&lt;T&gt;</code> are immutable, so it's always safe to share them. The Rust borrow checker already forbids a mutable reference to exist at the same time as any other reference to the same object so this works automatically as a result of Rust's borrowing rules. Nothing can mutate a <code>Vec</code> while it's shared, so a data race is impossible. Of course, if <code>unsafe</code> code comes into the picture then the guarantees are gone.</p>\n\n<p>Most types are <code>Sync</code> in fact. The ones that aren't (for example <code>RefCell</code>) tend to have interior mutability, or otherwise manage references outside of the control of the compile-time borrow checker.</p>\n"}], "owner": {"reputation": 555, "user_id": 4637817, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/849a2d4951995c9fcb2b9aec36faaf2c?s=128&d=identicon&r=PG&f=1", "display_name": "Remagpie", "link": "https://stackoverflow.com/users/4637817/remagpie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 472, "favorite_count": 2, "accepted_answer_id": 52132744, "answer_count": 1, "score": 5, "last_activity_date": 1547817473, "creation_date": 1535839244, "last_edit_date": 1547817473, "question_id": 52132497, "link": "https://stackoverflow.com/questions/52132497/why-does-vec-have-trait-sync", "title": "Why does Vec have trait Sync?", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#synthetic-implementations\" rel=\"nofollow noreferrer\">documentation</a>, <code>Vec&lt;T&gt;</code> implements <code>Sync</code> if <code>T</code> implements <code>Sync</code>. It seems it's generated automatically by some magic, but I feel this is counter-intuitive since a naive implementation for vectors is not thread-safe.</p>\n\n<p>Is <code>Vec&lt;T&gt;</code> in Rust really <code>Sync</code>?</p>\n"}, {"tags": ["rust", "immutability", "interior-mutability"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535835083, "post_id": 52131870, "comment_id": 91214635, "body": "How is the data from LibraryStruct made available to A? I presume you cannot add methods to the LibraryStruct or change its data structure?"}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535835636, "post_id": 52131870, "comment_id": 91214759, "body": "a method returns clone of the rc. Note I&#39;m writing the &quot;Library&quot; code and want to prevent the issue if possible."}], "answers": [{"comments": [{"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535836437, "post_id": 52132186, "comment_id": 91214920, "body": "The library struct / data is modifiable, would this still be the best solution?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535836488, "post_id": 52132186, "comment_id": 91214930, "body": "If you can change the library, and you don&#39;t want it edited outside of that code, then you should keep it private and prevent modifications. I&#39;m just updating the answer to reflect that."}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535836687, "post_id": 52132186, "comment_id": 91214961, "body": "I believe the first solution won&#39;t work because I can&#39;t keep an active Ref sitting around because it will cause a panic when LibraryStruct modifies data?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535836854, "post_id": 52132186, "comment_id": 91214987, "body": "If you need the borrow to last longer, so it can be mutated in the meantime, then this won&#39;t work. You may need to write something custom that can only borrow immutably. But then you&#39;ll also run into problems with the Rc wrapper because the type will be different for each."}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535837712, "post_id": 52132186, "comment_id": 91215143, "body": "I basically want to give out pointers that point to the LibraryStruct.data that are only immutable. I probably need to redesign how this whole part works, seems to be going against the rust way."}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "edited": false, "score": 0, "creation_date": 1535837937, "post_id": 52132186, "comment_id": 91215186, "body": "Your updated solution could work as Rc&lt;RefCell&lt;X&gt;&gt; alternative. Thanks"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1535839398, "last_edit_date": 1535839398, "creation_date": 1535836024, "answer_id": 52132186, "question_id": 52131870, "link": "https://stackoverflow.com/questions/52131870/is-there-an-alternative-or-way-to-have-rcrefcellx-that-restricts-mutability/52132186#52132186", "title": "Is there an alternative or way to have Rc&lt;RefCell&lt;X&gt;&gt; that restricts mutability of X?", "body": "<p>If you share a <code>RefCell</code> then it will always be possible to mutate it - that's essentially the whole point of it. Given that you are able to change the implementation of <code>LibraryStruct</code>, you can make sure that <code>data</code> is not public, and control how it is exposed to its users through a getter method:</p>\n\n<pre><code>pub struct LibraryStruct {\n    // note: not pub\n    data: Rc&lt;RefCell&lt;LibraryData&gt;&gt;\n}\n\nimpl LibraryStruct {\n    // could also have returned `Ref&lt;'a, LibraryData&gt; but this hides your \n    // implementation better\n    pub fn data&lt;'a&gt;(&amp;'a self) -&gt; impl Deref&lt;Target = LibraryData&gt; + 'a {\n        self.data.borrow()\n    }\n}\n</code></pre>\n\n<p>In your other struct, you can keep things simple, by just treating it as a reference:</p>\n\n<pre><code>pub struct A&lt;'a&gt; {\n    data: &amp;'a LibraryData,\n}\n\nimpl&lt;'a&gt; A&lt;'a&gt; {\n    pub fn do_something(&amp;self) {\n        // self.data is only available immutably here because it's just a reference\n    }\n}\n\nfn main() { \n    let ld = LibraryData {};\n    let ls = LibraryStruct { data: Rc::new(RefCell::new(ld)) };\n\n    let a = A { data: &amp;ls.data() };\n}\n</code></pre>\n\n<p>If you need to hold the reference for longer, during which time the original <code>RefCell</code> needs to be mutably borrowed in the library code, then you need to make a custom wrapper which can manage that. It's possible that there's a standard library type for this, but I don't know of it and it's easy to make something specifically for your use case:</p>\n\n<pre><code>// Wrapper to manage a RC&lt;RefCell&gt; and make it immutably borrowable\npub struct ReadOnly&lt;T&gt; {\n    // not public\n    inner: Rc&lt;RefCell&lt;T&gt;&gt;,\n}\n\nimpl&lt;T&gt; ReadOnly&lt;T&gt; {\n    pub fn borrow&lt;'a&gt;(&amp;'a self) -&gt; impl Deref&lt;Target = T&gt; + 'a {\n        self.inner.borrow()\n    }\n}\n</code></pre>\n\n<p>Now return this in your library code:</p>\n\n<pre><code>impl LibraryStruct {\n    pub fn data&lt;'a&gt;(&amp;'a self) -&gt; ReadOnly&lt;LibraryData&gt; {\n        ReadOnly { inner: self.data.clone() }\n    }\n}\n</code></pre>\n\n<p>And when you use it, the inner <code>RefCell</code> will not be directly accessible and the data is only available to borrow immutably:</p>\n\n<pre><code>pub struct A {\n    data: ReadOnly&lt;LibraryData&gt;,\n}\n\nimpl A {\n    pub fn do_something(&amp;self) {\n        //  data is immutable here\n        let data = self.data.borrow();\n    }\n}\n\nfn main() { \n    let ld = LibraryData {};\n    let ls = LibraryStruct { data: Rc::new(RefCell::new(ld)) };\n\n    let a = A { data: ls.data() };\n}\n</code></pre>\n"}], "owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 817, "favorite_count": 1, "accepted_answer_id": 52132186, "answer_count": 1, "score": 7, "last_activity_date": 1545154225, "creation_date": 1535833123, "last_edit_date": 1545154225, "question_id": 52131870, "link": "https://stackoverflow.com/questions/52131870/is-there-an-alternative-or-way-to-have-rcrefcellx-that-restricts-mutability", "title": "Is there an alternative or way to have Rc&lt;RefCell&lt;X&gt;&gt; that restricts mutability of X?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=84d7c453e016af21ec06f2478ac6cafc&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">For example given this code</a>:  </p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\n// Don't want to copy for performance reasons\nstruct LibraryData {\n    // Fields ...\n}\n\n// Creates and mutates data field in methods\nstruct LibraryStruct {\n    // Only LibraryStruct should have mutable access to this\n    data: Rc&lt;RefCell&lt;LibraryData&gt;&gt;\n}\n\nimpl LibraryStruct {\n    pub fn data(&amp;self) -&gt; Rc&lt;RefCell&lt;LibraryData&gt;&gt; {\n        self.data.clone()\n    }\n}\n\n// Receives data field from LibraryStruct.data()\nstruct A {\n    data: Rc&lt;RefCell&lt;LibraryData&gt;&gt;\n}\n\nimpl A {\n    pub fn do_something(&amp;self) {\n        // Do something with self.data immutably\n\n        // I want to prevent this because it can break LibraryStruct\n        // Only LibraryStruct should have mutable access \n        let data = self.data.borrow_mut();\n        // Manipulate data\n    }\n}\n</code></pre>\n\n<p>How can I prevent <code>LibraryData</code> from being mutated outside of <code>LibraryStruct</code>? <code>LibraryStruct</code> should be the only one able to mutate <code>data</code> in its methods. Is this possible with <code>Rc&lt;RefCell&lt;LibraryData&gt;&gt;</code> or is there an alternative? Note I'm writing the \"library\" code so I can change it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1535817946, "post_id": 52129713, "comment_id": 91210120, "body": "You might find <a href=\"https://doc.rust-lang.org/book/2018-edition/ch06-00-enums.html\" rel=\"nofollow noreferrer\">this</a> or <a href=\"https://doc.rust-lang.org/book/2018-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">this</a> useful"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1572375434, "last_edit_date": 1572375434, "creation_date": 1535818855, "answer_id": 52130027, "question_id": 52129713, "link": "https://stackoverflow.com/questions/52129713/generic-function-to-take-struct-as-parameter/52130027#52130027", "title": "Generic function to take struct as parameter?", "body": "<p>In your example, there is no relationship between <code>Item1</code> and <code>Item2</code>, and Rust's generics are not duck-typed, like C++ templates or Python functions are.</p>\n\n<p>If you want a function to work on several types, the way to go is usually to make it generic, and have some trait that defines what those types have in common:</p>\n\n<pre><code>trait HasA {\n    fn get_a(&amp;self) -&gt; u8;\n}\n\nimpl HasA for Item1 {\n    fn get_a(&amp;self) -&gt; u8 {\n        self.a\n    }\n}\n\nimpl HasA for Item2 {\n    fn get_a(&amp;self) -&gt; u8 {\n        self.a\n    }\n}\n\nfn some_helper_function&lt;T: HasA&gt;(item: T) {\n    println!(\"The value of `item.a` is {}\", item.get_a());\n}\n</code></pre>\n\n<hr>\n\n<p>There has been <a href=\"https://internals.rust-lang.org/t/fields-in-traits/6933\" rel=\"nofollow noreferrer\">a proposal</a> to had fields to traits, which would let you use <code>item.a</code> from a generic (you would still have to implement the trait for each type). But it has been postponed. It seems that there was too little gain and some questions unresolved with this proposal, and that it was not seen as a priority.</p>\n"}], "owner": {"reputation": 572, "user_id": 1990568, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/508fd57193155e08c8114cf732efdcf0?s=128&d=identicon&r=PG&f=1", "display_name": "Pramod", "link": "https://stackoverflow.com/users/1990568/pramod"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 882, "favorite_count": 0, "accepted_answer_id": 52130027, "answer_count": 1, "score": 2, "last_activity_date": 1572375434, "creation_date": 1535816561, "last_edit_date": 1572375406, "question_id": 52129713, "link": "https://stackoverflow.com/questions/52129713/generic-function-to-take-struct-as-parameter", "title": "Generic function to take struct as parameter?", "body": "<pre><code>struct Item1 {\n    a: u32,\n}\n\nstruct Item2 {\n    a: u32,\n    b: u32,\n}\n\nfn some_helper_function(item: Item1) {\n    // Basically `item` could be of type `Item1` or `Item2`.\n    // How I create generic function to take any one of them?\n    // Some implementation goes here.\n}\n</code></pre>\n\n<p>How can I create a generic <code>some_helper_function</code> function whose parameter can have multiple derived data type like <code>Item2</code> or <code>Item1</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1535769133, "post_id": 52124334, "comment_id": 91199905, "body": "<i>so I&#39;m hoping there&#39;s a better solution in Rust 2018</i> There is not. If someone finds one, they should add it to the duplicate \u2014 we update Q&amp;A over time to account for language changes."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1535769927, "post_id": 52124334, "comment_id": 91200009, "body": "The difference between <code>|mi| &amp;mi.vec</code> (as in the other question) and <code>|mi| &amp;mi.get(&amp;key)</code> is that <code>get</code> returns an <code>Option</code> which is then owned by the closure, so you&#39;re not trying to return a reference to the inside of <code>mi</code>, you&#39;re now trying to return a reference to a local. So that&#39;s why it doesn&#39;t work. Unfortunately I can&#39;t think of a solution, although I think <code>Ref</code> could be extended with a <code>try_map</code> function to support a fallible <code>f</code> argument."}, {"owner": {"reputation": 650, "user_id": 1376941, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6b368d290fc872ee616794d15bcf8f7f?s=128&d=identicon&r=PG", "display_name": "Cheezey", "link": "https://stackoverflow.com/users/1376941/cheezey"}, "edited": false, "score": 0, "creation_date": 1535770573, "post_id": 52124334, "comment_id": 91200065, "body": "All right, thanks. Sorry for the duplicate."}], "owner": {"reputation": 650, "user_id": 1376941, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6b368d290fc872ee616794d15bcf8f7f?s=128&d=identicon&r=PG", "display_name": "Cheezey", "link": "https://stackoverflow.com/users/1376941/cheezey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 460, "favorite_count": 0, "closed_date": 1535769154, "answer_count": 0, "score": 1, "last_activity_date": 1535769211, "creation_date": 1535768263, "last_edit_date": 1535769211, "question_id": 52124334, "link": "https://stackoverflow.com/questions/52124334/return-a-value-from-a-hashmap-that-is-inside-a-refcell", "closed_reason": "Duplicate", "title": "Return a value from a HashMap that is inside a RefCell", "body": "<p>I have a struct that contains a <code>HashMap</code> which is inside a <code>RefCell</code>. I want to implement a method on the struct that essentially is just a layer over the <code>HashMap</code>'s <code>get</code> method. Here's a distilled version of the model:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::cell::Ref;\nuse std::ops::Deref;\nuse std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Bar {\n    content: String\n}\n\nstruct Foo {\n    map: RefCell&lt;HashMap&lt;i32, Bar&gt;&gt;,\n}\n\nimpl Foo {\n    pub fn get_val(&amp;self, key: i32) -&gt; Option&lt;&amp;Bar&gt; {\n        self.map.borrow().get(&amp;key)\n    }\n}\n</code></pre>\n\n<p>This fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:21:9\n   |\n21 |         self.map.borrow().get(&amp;key)\n   |         ^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n22 |     }\n   |     - temporary value only lives until here\n   |\n</code></pre>\n\n<p>I tried doing something similar to an answer from <a href=\"https://stackoverflow.com/a/51341957/1376941\">this similar question</a>:</p>\n\n<pre><code>pub fn get_val(&amp;self, key: i32) -&gt; impl Deref&lt;Target = Option&lt;&amp;Bar&gt;&gt; + '_ {\n    Ref::map(self.map.borrow(), |mi| &amp;mi.get(&amp;key))\n}\n</code></pre>\n\n<p>But it doesn't work either:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:18:46\n   |\n18 |         Ref::map(self.map.borrow(), |mi| &amp;mi.get(&amp;key))\n   |                                              ^^^\n   |\n</code></pre>\n\n<p>Is it possible to do what I'm trying to do? Or should I rethink my object model?</p>\n\n<p>There is an <a href=\"https://stackoverflow.com/q/42676541/1376941\">identical question</a> that was asked in 2015, and the answer suggested putting an <code>Rc</code> inside the <code>HashMap</code>. However, that was before <code>Ref::map</code> was introduced, so I'm hoping there's a better solution in Rust 2018.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9460f4fb86dba4b7c8222f4ad019e2d4&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here</a> is a playground link.</p>\n"}, {"tags": ["rust", "sdl-2"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1535766158, "creation_date": 1535766158, "answer_id": 52124212, "question_id": 52124100, "link": "https://stackoverflow.com/questions/52124100/cannot-find-function-get-platform-in-sdl2-0-31-0/52124212#52124212", "title": "cannot find function `get_platform` in sdl2 0.31.0", "body": "<p>The documentation you are reading is is not for the version you are using. Build it yourself (<code>cargo doc --open</code>) or <a href=\"https://docs.rs/sdl2/0.31.0/sdl2/\" rel=\"nofollow noreferrer\">view it on docs.rs</a>.</p>\n\n<p>That function was <a href=\"https://github.com/Rust-SDL2/rust-sdl2/commit/07723632dfa7a019ab4d3e153dc9b808337460fd\" rel=\"nofollow noreferrer\">added recently</a> and has not been released yet. Perhaps you should file an issue for the authors of the crate to let them know that having documentation that doesn't correspond to any released code is confusing.</p>\n\n<p>In the meantime, you can use <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-git-repositories\" rel=\"nofollow noreferrer\">a git dependency</a> if you really need it.</p>\n"}], "owner": {"reputation": 185, "user_id": 4521803, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a8253632f50dcd23b28b04dfb53cb657?s=128&d=identicon&r=PG&f=1", "display_name": "Giorgio Napolitano", "link": "https://stackoverflow.com/users/4521803/giorgio-napolitano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 52124212, "answer_count": 1, "score": 1, "last_activity_date": 1535766178, "creation_date": 1535764211, "last_edit_date": 1535766178, "question_id": 52124100, "link": "https://stackoverflow.com/questions/52124100/cannot-find-function-get-platform-in-sdl2-0-31-0", "title": "cannot find function `get_platform` in sdl2 0.31.0", "body": "<p>I'm using the latest version of sdl2 (0.31.0) but cannot access <a href=\"https://rust-sdl2.github.io/rust-sdl2/sdl2/fn.get_platform.html\" rel=\"nofollow noreferrer\"><code>get_platform</code></a>:</p>\n\n<pre><code>extern crate sdl2;\n\npub fn main() {\n    println!(\"{}\", sdl2::get_platform());\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n   Compiling repro v0.1.0 (file:///private/tmp/repro)\nerror[E0425]: cannot find function `get_platform` in module `sdl2`\n --&gt; src/main.rs:4:30\n  |\n4 |         println!(\"{}\", sdl2::get_platform());\n  |                              ^^^^^^^^^^^^ not found in `sdl2`\n</code></pre>\n\n<p>I tried with <code>use sdl2::*;</code> and with <code>cargo +nightly run</code>, but neither removed the error.</p>\n"}, {"tags": ["reference", "rust", "smart-pointers", "borrowing"], "comments": [{"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535763744, "post_id": 52124007, "comment_id": 91199235, "body": "I was trying to be vague about C&#39;s field type because it can not be <code>&amp;&#39;a A</code>. Struct B and C exist at the same time in Container and there would be a mutability issue as there would be an immutable reference in C and B needs mutability at times."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535763791, "post_id": 52124007, "comment_id": 91199244, "body": "Ok, so ideally you want <code>C</code>&#39;s <code>a</code> to be a <code>RefCell</code>, but that won&#39;t work with the library function?"}, {"owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535764003, "post_id": 52124007, "comment_id": 91199267, "body": "Yes because you cannot get a &amp;A from RefCell only Ref&lt;A&gt; / RefMut&lt;A&gt;"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535764624, "post_id": 52124007, "comment_id": 91199352, "body": "I just made some changes, which I think communicates what you were getting at. And I think the answer is to just <code>Rc&lt;RefCell&lt;A&gt;&gt;</code> and then pass it to the library function as <code>library_struct.function(&amp;self.a.borrow());</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1535765407, "post_id": 52124007, "comment_id": 91199458, "body": "This works because both <code>Ref</code> implements <code>Deref</code>. If a function accepts a <code>&amp;</code>-reference, then you can pass a reference to any type that implements <code>Deref</code>, as in <a href=\"https://play.rust-lang.org/?gist=3f32df819027cfe84183cbd34bf42cc7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this example</a>."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1535768376, "last_edit_date": 1535768376, "creation_date": 1535765344, "answer_id": 52124158, "question_id": 52124007, "link": "https://stackoverflow.com/questions/52124007/how-can-i-obtain-an-a-reference-from-a-rcrefcella/52124158#52124158", "title": "How can I obtain an &amp;A reference from a Rc&lt;RefCell&lt;A&gt;&gt;?", "body": "<p>If a function has an argument which is a of type <code>&amp;A</code>, then you can call it with a reference to any type that dereferences to <code>A</code>, which includes things like <code>&amp;Ref&lt;A&gt;</code>. The concept of one type dereferencing to another is captured by the <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> trait. This is also the reason why a function that accepts <code>&amp;str</code> can be called with <code>&amp;String</code> (<code>String: Deref&lt;Target = str&gt;</code>).</p>\n\n<p>So, if you keep <code>a</code> as a <code>Rc&lt;RefCell&lt;A&gt;&gt;</code>, you can fix your code quite easily like this:</p>\n\n<pre><code>library_struct.function(&amp;*self.a.borrow());\n</code></pre>\n\n<p>Note that this dereferences <code>A</code> and then <em>reborrows</em> it so that it can be coerced to a trait object.</p>\n"}], "owner": {"reputation": 175, "user_id": 10302129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bdafc0e5dbcfe004f3c17337a1e99667?s=128&d=identicon&r=PG&f=1", "display_name": "Jake", "link": "https://stackoverflow.com/users/10302129/jake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1357, "favorite_count": 1, "accepted_answer_id": 52124158, "answer_count": 1, "score": 5, "last_activity_date": 1547660477, "creation_date": 1535762659, "last_edit_date": 1547660477, "question_id": 52124007, "link": "https://stackoverflow.com/questions/52124007/how-can-i-obtain-an-a-reference-from-a-rcrefcella", "title": "How can I obtain an &amp;A reference from a Rc&lt;RefCell&lt;A&gt;&gt;?", "body": "<p>I have design issue that I would like solve with safe Rust that I haven't been able to find a viable solution. I can't use a <code>RefCell</code> because you can't get a &amp; reference to the data, only <code>Ref</code> / <code>RefMut</code>.</p>\n\n<p>Here is a <a href=\"https://play.rust-lang.org/?gist=621c2b77ea2b2785e9ae95960427fb2e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">simplified example with irrelevant fields / methods removed</a></p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct LibraryStruct {}\nimpl LibraryStruct {\n    fn function(&amp;self, _a: &amp;TraitFromLibrary) {}\n}\n\ntrait TraitFromLibrary {\n    fn trait_function(&amp;self, library_struct: LibraryStruct);\n}\n\n// I don't want to copy this, bad performance\nstruct A {\n    // fields...\n}\n\nimpl TraitFromLibrary for A {\n    fn trait_function(&amp;self, library_struct: LibraryStruct) {\n        // custom A stuff\n    }\n}\n\n// B manipulates A's in data\nstruct B {\n    data: Vec&lt;A&gt;,\n}\n\nstruct C {\n    // This type doesn't have to be &amp; for solution. C just needs immutable access\n    a: Rc&lt;RefCell&lt;A&gt;&gt;,\n}\n\nimpl&lt;'a&gt; TraitFromLibrary for C {\n    fn trait_function(&amp;self, library_struct: LibraryStruct) {\n        // custom C stuff\n\n        // Takes generic reference &amp;, this is why Ref / RefCell doesn't work\n        library_struct.function(&amp;self.a.borrow());\n    }\n}\n\n// B and C's constructed in Container and lifetime matches Container\n// Container manipulates fields b and c\nstruct Container {\n    b: B,\n    c: Vec&lt;C&gt;,\n}\n\nfn main() {}\n</code></pre>\n\n<p>I would be able to solve this with <code>Rc&lt;RefCell&lt;A&gt;&gt;</code> but I am being restricted from the library requiring <code>&amp;A</code>.   </p>\n\n<p>This produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::cell::Ref&lt;'_, A&gt;: TraitFromLibrary` is not satisfied\n  --&gt; src/main.rs:33:33\n   |\n33 |         library_struct.function(&amp;self.a.borrow());\n   |                                 ^^^^^^^^^^^^^^^^ the trait `TraitFromLibrary` is not implemented for `std::cell::Ref&lt;'_, A&gt;`\n   |\n   = note: required for the cast to the object type `TraitFromLibrary`\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1535733487, "creation_date": 1535733487, "answer_id": 52119641, "question_id": 52119123, "link": "https://stackoverflow.com/questions/52119123/rss-crate-is-installed-but-cannot-find-the-function-channelfrom-url/52119641#52119641", "title": "rss crate is installed, but cannot find the function Channel::from_url", "body": "<p>If you re-read <a href=\"https://docs.rs/rss/1.5.0/rss/index.html\" rel=\"nofollow noreferrer\">the documentation</a>, emphasis mine:</p>\n\n<blockquote>\n  <h1>From a URL</h1>\n  \n  <p>A channel can also be read from a URL.</p>\n  \n  <p><strong>Note: This requires enabling the <code>from_url</code> feature</strong>.</p>\n\n<pre><code>use rss::Channel;\n\nlet channel = Channel::from_url(\"http://example.com/feed.xml\").unwrap();\n</code></pre>\n</blockquote>\n\n<p>Thus, you need to enable the feature in your <strong>Cargo.toml</strong>:</p>\n\n<pre><code>rss = { version = \"1.5.0\", features = [\"from_url\"] }\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 10300908, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-bHQobbCVoPg/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaNqu8iiSPLYIyT4r6hhHhIZ_Giw_A/mo/photo.jpg?sz=128", "display_name": "Philippe NOEL", "link": "https://stackoverflow.com/users/10300908/philippe-noel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 52119641, "answer_count": 1, "score": 1, "last_activity_date": 1535733487, "creation_date": 1535731230, "last_edit_date": 1535733239, "question_id": 52119123, "link": "https://stackoverflow.com/questions/52119123/rss-crate-is-installed-but-cannot-find-the-function-channelfrom-url", "title": "rss crate is installed, but cannot find the function Channel::from_url", "body": "<p>I tried to use the RSS crate in a project. I added <code>rss = \"1.5.0\"</code> to the dependencies in Cargo.toml and built my code:</p>\n\n<pre><code>extern crate regex;\nextern crate rss;\n\nuse rss::Channel;\n\nfn main() {\n    let channel = Channel::from_url(\"https://feedpress.me/usererror.xml\");\n}\n</code></pre>\n\n<p>When I run cargo build, I have the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n   Compiling rss_f v0.1.0 (file:///home/philippe/test/rss_f)\nerror[E0599]: no function or associated item named `from_url` found for type `rss::Channel` in the current scope\n --&gt; src/main.rs:7:19\n  |\n7 |     let channel = Channel::from_url(\"https://feedpress.me/usererror.xml\");\n  |                   ^^^^^^^^^^^^^^^^^ function or associated item not found in `rss::Channel`\n</code></pre>\n\n<p>When I highlight the function in VScode, I have an error from RLS and at the same time Racer gives me the definition of the function. So the crate is installed but Cargo can't use it.</p>\n"}, {"tags": ["ssl", "rust"], "owner": {"reputation": 3276, "user_id": 1541707, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3d6fe0d8e5155f47ba6f2ddb70770aea?s=128&d=identicon&r=PG", "display_name": "Yoshua Wuyts", "link": "https://stackoverflow.com/users/1541707/yoshua-wuyts"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 142, "favorite_count": 2, "answer_count": 0, "score": 4, "last_activity_date": 1535800277, "creation_date": 1535722501, "last_edit_date": 1535800277, "question_id": 52116642, "link": "https://stackoverflow.com/questions/52116642/how-can-i-use-rustls-to-encrypt-a-byte-slice-using-a-known-public-key-and-pkcs1", "title": "How can I use RusTLS to encrypt a byte slice using a known public key and PKCS1 padding?", "body": "<p>In order to create GitHub releases from Travis CI, you need to use <a href=\"https://docs.travis-ci.com/user/encryption-keys/\" rel=\"nofollow noreferrer\">public keys they provide</a> to encrypt secrets which can be checked into a project.</p>\n\n<p>I've successfully managed to do this using <a href=\"https://docs.rs/openssl/0.10.11/openssl/\" rel=\"nofollow noreferrer\">the openssl crate (v0.10.11)</a>:</p>\n\n<pre><code>extern crate base64;\nextern crate openssl;\n\nuse openssl::rsa::{Padding, Rsa};\nuse std::{error, fs};\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn error::Error&gt;&gt; {\n  let data = b\"some data\";\n\n  let pub_key = fs::read_to_string(\"./key.pem\")?; // Read the public key.\n  let rsa = Rsa::public_key_from_pem(pub_key.as_bytes())?;\n\n  let mut res = vec![0; rsa.size() as usize];\n  rsa.public_encrypt(data, &amp;mut res, Padding::PKCS1)?;\n\n  let encrypted = base64::encode(&amp;res);\n  println!(\"Encrypted Data: \\n{}\", encrypted);\n  Ok(())\n}\n</code></pre>\n\n<p><a href=\"https://github.com/yoshuawuyts/repro-stackoverflow-keys\" rel=\"nofollow noreferrer\"><em>link to repro</em></a></p>\n\n<p>However, using OpenSSL comes with a few tradeoffs. Most notably: getting cross platform builds to work <a href=\"https://github.com/sfackler/rust-openssl/issues/977\" rel=\"nofollow noreferrer\">requires some work</a>.</p>\n\n<p>I've been looking at <a href=\"https://docs.rs/rustls/0.13.1/rustls/\" rel=\"nofollow noreferrer\">rustls</a> as an alternative, and was wondering what the equivalent of the code above is.</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1535712363, "post_id": 52110203, "comment_id": 91177967, "body": "It would not be the first Rust API to start conservative, and loosen the requirements over time, so I don&#39;t think it&#39;s necessary so much as it was <i>obviously</i> correct and therefore helped get the release out of the door."}], "tags": [], "owner": {"reputation": 373, "user_id": 6020072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7acfb926231c1c4e62746da7a21c5917?s=128&d=identicon&r=PG&f=1", "display_name": "Mildred", "link": "https://stackoverflow.com/users/6020072/mildred"}, "is_accepted": false, "score": 3, "last_activity_date": 1535719029, "last_edit_date": 1535719029, "creation_date": 1535699274, "answer_id": 52110203, "question_id": 52110164, "link": "https://stackoverflow.com/questions/52110164/why-does-tokios-runtimeblock-on-all-require-a-future-with-a-static-lifetime/52110203#52110203", "title": "Why does Tokio&#39;s Runtime::block_on_all require a future with a &#39;static lifetime?", "body": "<p>Looking a little further, it seems I'm right and they have an issue about it: <a href=\"https://github.com/tokio-rs/tokio/issues/431\" rel=\"nofollow noreferrer\">#431 Drop <code>'static</code> bound on <code>Runtime::block_on[_all]</code></a></p>\n"}], "owner": {"reputation": 373, "user_id": 6020072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7acfb926231c1c4e62746da7a21c5917?s=128&d=identicon&r=PG&f=1", "display_name": "Mildred", "link": "https://stackoverflow.com/users/6020072/mildred"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1057, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1535719029, "creation_date": 1535699053, "last_edit_date": 1535719016, "question_id": 52110164, "link": "https://stackoverflow.com/questions/52110164/why-does-tokios-runtimeblock-on-all-require-a-future-with-a-static-lifetime", "title": "Why does Tokio&#39;s Runtime::block_on_all require a future with a &#39;static lifetime?", "body": "<p>When dealing with Tokio and futures, the futures passed to the Tokio runtime must have a <code>'static</code> lifetime most of the time. I understand that because the future might be moved to another thread where it can potentially outlive the place it was defined.</p>\n\n<p>There is a method <a href=\"https://docs.rs/tokio/0.1.8/tokio/runtime/struct.Runtime.html#method.block_on_all\" rel=\"nofollow noreferrer\"><code>Runtime::block_on_all</code></a> which guarantees that the future called will be terminated by the end of the call, it even returns the result of running this future.</p>\n\n<p>In that case, I don't get (except for simplicity of the Tokio code) why the future must be <code>'static</code>.</p>\n\n<p>Can anyone shed some light on this?</p>\n"}, {"tags": ["scope", "rust", "singleton"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1535700282, "post_id": 52107765, "comment_id": 91171370, "body": "If you&#39;re willing to make a game, did you see a framework like amethyst?"}, {"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1535717850, "post_id": 52107765, "comment_id": 91181052, "body": "Yeah I saw it. I want to make my own engine using sdl. I&#39;m just doing 2d stuff right now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1535719211, "post_id": 52107765, "comment_id": 91181884, "body": "Your code <b>isn&#39;t valid Rust syntax</b> and does not produce the error you say it does. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52107765/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1535719323, "post_id": 52107765, "comment_id": 91181960, "body": "Also, this question has <i>nothing</i> to do with <code>lazy_static</code>; you&#39;d have the same problem for <i>any</i> symbol at the root of your crate."}], "answers": [{"comments": [{"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 0, "creation_date": 1535718962, "post_id": 52108194, "comment_id": 91181728, "body": "I feel like this is close, but now it says no GAMEDATA in root. Perhaps because these are in different files with a lib.rs. IS there a way to address it from a different file?"}], "tags": [], "owner": {"reputation": 1187, "user_id": 1137004, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b5ebaa8eb2711795cbf1c9cdda773328?s=128&d=identicon&r=PG", "display_name": "kiyomi", "link": "https://stackoverflow.com/users/1137004/kiyomi"}, "is_accepted": false, "score": 0, "last_activity_date": 1535746300, "last_edit_date": 1535746300, "creation_date": 1535687278, "answer_id": 52108194, "question_id": 52107765, "link": "https://stackoverflow.com/questions/52107765/access-a-singleton-across-multiple-modules/52108194#52108194", "title": "Access a singleton across multiple modules", "body": "<p>You need <code>use</code> to import <code>GAMEDATA</code> into the current scope, as described in the <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-00-modules.html\" rel=\"nofollow noreferrer\">modules section in the book</a>.</p>\n\n<p>Example code (<a href=\"https://play.rust-lang.org/?gist=d560b772bf82af8b88fea3f70a1738d7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static; // 1.1.0\n\nlazy_static! {\n    static ref GAMEDATA: String = \"hello\".to_string();\n}\n\nmod foo {\n    use GAMEDATA;\n    pub fn bar() {\n        println!(\"{}\", *GAMEDATA);\n    }\n}\n\nfn main() {\n    foo::bar();\n}\n</code></pre>\n\n<p>However, the singleton pattern is not recommended in Rust. For beginners in the learning phase, you'd best avoid singletons. (see <a href=\"https://stackoverflow.com/a/52108202/155423\">bzim's answer</a>)</p>\n"}, {"comments": [{"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 0, "creation_date": 1535722485, "post_id": 52108202, "comment_id": 91184063, "body": "This is great advice but doesn\u2019t actually solve the problem"}, {"owner": {"reputation": 951, "user_id": 6253996, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/XUk8U.jpg?s=128&g=1", "display_name": "bzim", "link": "https://stackoverflow.com/users/6253996/bzim"}, "reply_to_user": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 1, "creation_date": 1535728995, "post_id": 52108202, "comment_id": 91187957, "body": "What happened? What did you try to do and what was the outcome?"}, {"owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "edited": false, "score": 0, "creation_date": 1535744019, "post_id": 52108202, "comment_id": 91194665, "body": "It says it says no GAMEDATA in root when trying Brews solution. I believe because the module is in a different file. I&#39;m about to start working on it again and if I can&#39;t figure it out I will edit my question with a git hub example or something."}], "tags": [], "owner": {"reputation": 951, "user_id": 6253996, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/XUk8U.jpg?s=128&g=1", "display_name": "bzim", "link": "https://stackoverflow.com/users/6253996/bzim"}, "is_accepted": false, "score": 2, "last_activity_date": 1535746681, "last_edit_date": 1535746681, "creation_date": 1535687405, "answer_id": 52108202, "question_id": 52107765, "link": "https://stackoverflow.com/questions/52107765/access-a-singleton-across-multiple-modules/52108202#52108202", "title": "Access a singleton across multiple modules", "body": "<p>If your static variable is in another non-parent module, your problem seems to be a missing <code>pub</code> modifier before <code>static</code>. Also, as others pointed out, the code in which you use the variable (the <code>impl</code> block) is not valid Rust syntax. </p>\n\n<p>Besides that, you will need to import the static variable with <code>use</code> (E.g. <code>use GAMEDATA;</code>), see <a href=\"https://stackoverflow.com/a/52108194/155423\">Quan Brew's answer</a>.</p>\n\n<p>However, I want to discuss about the use of static and singleton pattern in Rust. </p>\n\n<h1>Static variables in Rust</h1>\n\n<p>In Rust we generally avoid static variables. In most cases they could be replaced with a proper constant via <code>const</code>. Because static variables may be shared between threads, having them with external mutability is <code>unsafe</code> in Rust. This is why you cannot have external mutability with lazy_static.</p>\n\n<p>Although statics with external mutability do have their uses, they are kind of specific, should be justified and avoided otherwise. Interior mutability, as described in <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">this section of the Rust Book</a> is not even allowed to be shared among threads.</p>\n\n<h1>Singleton Pattern in Rust</h1>\n\n<p>I don't think it is a good idea to use static to have singleton pattern. This pattern is not common in Rust. We generally pass all mutable things as arguments.</p>\n\n<h1>Solutions if you need immutable data</h1>\n\n<ol>\n<li><p>Make it a constant with <code>const</code>.</p></li>\n<li><p>If there is too much data, use <code>static</code>.</p></li>\n<li><p>If you need non-constant initialization, you can keep lazy_static.</p></li>\n</ol>\n\n<h1>Solutions if you need to mutate data</h1>\n\n<ol>\n<li><p>Put your singleton into a <code>Mutex</code> or another lock. This will ensure correct concurrent accesses.</p></li>\n<li><p>Make it thread local with <a href=\"https://doc.rust-lang.org/std/macro.thread_local.html\" rel=\"nofollow noreferrer\">thread_local macro</a> + <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\">inner mutability with RefCell</a></p></li>\n<li><p>Give up the \"singleton pattern\" idea and pass the structure via arguments (recommended).</p></li>\n</ol>\n"}], "owner": {"reputation": 622, "user_id": 1710501, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e308decda9992832f6c0634f134fb7b1?s=128&d=identicon&r=PG", "display_name": "camccar", "link": "https://stackoverflow.com/users/1710501/camccar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1552, "favorite_count": 1, "closed_date": 1535985131, "answer_count": 2, "score": -3, "last_activity_date": 1536142827, "creation_date": 1535683224, "last_edit_date": 1536142827, "question_id": 52107765, "link": "https://stackoverflow.com/questions/52107765/access-a-singleton-across-multiple-modules", "closed_reason": "Duplicate", "title": "Access a singleton across multiple modules", "body": "<p>I am trying to use the lazy_static crate to create a singleton and use it in a different module. Is that possible or even recommended? I'm still learning how Rust programs should be structured and have been making every file its own module.</p>\n\n<p>I have the following in main.rs and I can access its values</p>\n\n<pre><code>lazy_static! {\n    static ref GAMEDATA: gamedata::data::GameDataS =\n        gamedata::data::load_data(\"./src/assets/data.json\".to_string());\n}\n\nfn main() {\n    println!(\"data{}\", GAMEDATA.width);\n}\n</code></pre>\n\n<p>When trying to access <code>GAMEDATA</code> in a different module, I get</p>\n\n<blockquote>\n  <p>not found in this scope</p>\n</blockquote>\n\n<p>for example in a module called <code>game</code></p>\n\n<pre><code>pub struct Game {}\nimpl Game {\n    println!(\"data{}\", GAMEDATA.width);\n}\n</code></pre>\n\n<p>Is it possible to make a global variable across all modules? Is there some other way I should be thinking about it? Perhaps not using modules as often?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1535673164, "post_id": 52106562, "comment_id": 91164415, "body": "Where&#39;s the file with <code>mod engine</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1535673221, "post_id": 52106562, "comment_id": 91164427, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/48071513/155423\">How to use one module from another module in a Rust cargo project?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52106562/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1535673346, "post_id": 52106562, "comment_id": 91164447, "body": "See also <a href=\"https://stackoverflow.com/q/44073359/155423\">How does the import/module system in Rust work?</a>; <a href=\"https://stackoverflow.com/q/26388861/155423\">How to include module from another file from the same project?</a>; <a href=\"https://stackoverflow.com/q/20922091/155423\">How do you use parent module imports in Rust?</a>; <a href=\"https://stackoverflow.com/q/30670129/155423\">Access submodule from another submodule when both submodules are in the same main module</a>; or really <a href=\"https://www.google.com/search?q=site:stackoverflow.com%20rust%20module\" rel=\"nofollow noreferrer\">anything in the tag with the word &quot;module&quot;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1535673428, "post_id": 52106562, "comment_id": 91164468, "body": "I also recommend re-reading the <b>official, high-quality, and free</b> book <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>, specifically <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-01-mod-and-the-filesystem.html\" rel=\"nofollow noreferrer\"><code>mod</code> and the Filesystem</a>."}, {"owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "edited": false, "score": 0, "creation_date": 1570802443, "post_id": 52106562, "comment_id": 103040802, "body": "I believe the question is about having source files in subfolders. So their file structure must be /src/engine/world/map.rs"}], "owner": {"reputation": 177, "user_id": 8864013, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-7FwvRQkpvg8/AAAAAAAAAAI/AAAAAAAAANM/mhTJH_iAhck/photo.jpg?sz=128", "display_name": "James Mclaughlin", "link": "https://stackoverflow.com/users/8864013/james-mclaughlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 3653, "favorite_count": 0, "closed_date": 1535673493, "answer_count": 0, "score": 6, "last_activity_date": 1535673543, "creation_date": 1535670913, "last_edit_date": 1535673129, "question_id": 52106562, "link": "https://stackoverflow.com/questions/52106562/accessing-subdirectories-in-rust-using-mod-keyword", "closed_reason": "Duplicate", "title": "Accessing subdirectories in rust using mod keyword", "body": "<p>I have the file structure: engine and utils folder on same level.\nEngine contains world folder (which contains mod.rs and map.rs) and mod.rs. Utils contains mod.rs and reader.rs.</p>\n\n<p>I'm trying to access map from reader but cannot get the 'use' statement to work.</p>\n\n<p><strong>utils/mod.rs</strong></p>\n\n<pre><code>pub mod reader;\n</code></pre>\n\n<p><strong>engine/mod.rs</strong></p>\n\n<pre><code>pub mod world;\n</code></pre>\n\n<p><strong>world/mod.rs</strong></p>\n\n<pre><code>pub mod map;\n\npub struct World;\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve. Maybe a missing `extern crate engine;`?\n --&gt; src\\utils\\reader.rs:5:5\n  |\n5 | use engine::world::map;\n  |     ^^^^^^ Maybe a missing `extern crate engine;`?\n</code></pre>\n\n<p>Can you not declare modules inside of subdirectories, or am I missing something stupid? I've been messing about with use statements for about half an hour now and can't get it to work. </p>\n"}, {"tags": ["generics", "functional-programming", "rust", "lifetime", "currying"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1535670438, "post_id": 52106409, "comment_id": 91163857, "body": "Which version of the compiler are you using? The latest stable seems to provide a more useful error message for this situation. Here&#39;s <a href=\"https://play.rust-lang.org/?gist=4da5f1ad8314d557390674e0751ff436&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">your code in the Rust Playground</a> (you might wish to include it in the question)."}, {"owner": {"reputation": 629, "user_id": 4727280, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/38762034473fd7e48dcce03fc091e343?s=128&d=identicon&r=PG&f=1", "display_name": "fmg", "link": "https://stackoverflow.com/users/4727280/fmg"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1535671841, "post_id": 52106409, "comment_id": 91164144, "body": "The version of the compiler active in the playground gave a much more useful error message: <code>consider adding an explicit lifetime bound Z: &#39;static&#39;...so that the type &#39;closure@src&#47;main.rs:6:32: 6:48 f:fn(i32, i32) -&gt; Z, x:i32]&#39; will meet its required lifetime bounds</code>. So I changed <code>fn curry2&lt;Z&gt;(...</code> to <code>fn curry2&lt;Z: &#39;static&gt;(...</code> and all is well. Looks like it&#39;s time to update my local rust installation. &lt;a href=&quot;<a href=\"https://play.rust-lang.org/?gist=bb08515f6e5fa9ae1c6e79371940541d&amp;version=stable&amp;mode=debug&amp;edition=2015&quot;&gt;Updated\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> playground link&lt;/a&gt;."}, {"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 1, "creation_date": 1535679666, "post_id": 52106409, "comment_id": 91165615, "body": "@fmg Do you want to post the details of that as an answer to the question? This seems like something a lot of people might want to know about in the future (or at least, I probably will)."}], "owner": {"reputation": 629, "user_id": 4727280, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/38762034473fd7e48dcce03fc091e343?s=128&d=identicon&r=PG&f=1", "display_name": "fmg", "link": "https://stackoverflow.com/users/4727280/fmg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1535712553, "creation_date": 1535669782, "last_edit_date": 1535673819, "question_id": 52106409, "link": "https://stackoverflow.com/questions/52106409/how-can-i-describe-the-lifetimes-for-a-currying-function-that-returns-generic-ty", "title": "How can I describe the lifetimes for a currying function that returns generic types?", "body": "<p>I'm trying to write a function that curries a function of two variables into a function-valued function of one variable.</p>\n\n<p>When the types involved are all simple, there's no problem:</p>\n\n<pre><code>fn curry1(f: fn(i32, i32) -&gt; i32) -&gt; Box&lt;Fn(i32) -&gt; Box&lt;Fn(i32) -&gt; i32&gt;&gt; {\n    Box::new(move |x| Box::new(move |y| f(x, y)))\n}\n</code></pre>\n\n<p>Once I try to make any of the parameters generic I run into lifetime issues that I can't solve:</p>\n\n<pre><code>fn curry2&lt;Z&gt;(f: fn(i32, i32) -&gt; Z) -&gt; Box&lt;Fn(i32) -&gt; Box&lt;Fn(i32) -&gt; Z&gt;&gt; {\n    Box::new(move |x| Box::new(move |y| f(x, y)))\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>the parameter type Z may not live long enough to satisfy its required lifetime bounds\n</code></pre>\n\n<p>How can I properly describe and annotate the relevant lifetimes?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1535658797, "post_id": 52104167, "comment_id": 91159996, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52104167/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, we don&#39;t know what <code>rng</code> or <code>Flo</code>  are. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 3, "creation_date": 1535660732, "post_id": 52104167, "comment_id": 91160811, "body": "Please read the <i>complete</i> error message. And then follow its suggestion and remove the <code>&amp;mut</code> inside the function."}, {"owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "edited": false, "score": 0, "creation_date": 1535701066, "post_id": 52104167, "comment_id": 91171727, "body": "Thanks, following the compiler suggestion and removing the <code>&amp;mut</code> works. Unfortunately, VSCode displays only the beginning of the message; I had to use the CLI to read the (excellent) hint!"}], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1535700501, "post_id": 52110493, "comment_id": 91171485, "body": "I find it interesting that taking a reference of a reference still refers to the underlying data, i.e. somehow chains of references are flattened by Rust. I still don&#39;t have a good mental model of that."}, {"owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "edited": false, "score": 0, "creation_date": 1535701676, "post_id": 52110493, "comment_id": 91172022, "body": "Indeed. That is what confused me. I guess it&#39;s the price we have to pay to avoid writing <code>(*foo).bar()</code> all the time."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 4, "last_activity_date": 1535700388, "creation_date": 1535700388, "answer_id": 52110493, "question_id": 52104167, "link": "https://stackoverflow.com/questions/52104167/mutable-ref-becomes-immutable-inside-closure/52110493#52110493", "title": "Mutable ref becomes immutable inside closure", "body": "<p>Technically, because the formal argument <code>r</code> of <code>random_vecs</code> is not mutable, and by the <code>&amp;mut r</code> in the body you are trying to construct a mutable reference to it.</p>\n\n<p>Here is a simplified example with the essentials of what you are doing:</p>\n\n<pre><code>fn modify0(r: &amp;mut usize) {\n    *r += 1;\n}\n\nfn modify1(r: &amp;mut usize) {\n    modify0(&amp;mut r);\n}\n\nfn main() {\n    let mut a = 1;\n    modify1(&amp;mut a);\n\n    println!(\"Hello, {:?}!\", a);\n}\n</code></pre>\n\n<p>The error message is</p>\n\n<pre>\nerror[E0596]: cannot borrow immutable argument `r` as mutable\n --> src/main.rs:6:18\n  |\n6 |     modify0(&mut r);\n  |                  ^ cannot borrow mutably\nhelp: consider removing the `&mut`, as it is an immutable binding to a mutable reference\n</pre>\n\n<p>To fix it, you could make it mutable (don't, it's not a good idea, even though it works here):</p>\n\n<pre><code>fn modify1(mut r: &amp;mut usize) {\n    modify0(&amp;mut r);\n}\n</code></pre>\n\n<p>Better is to follow the suggestion in the error message and remove the superfluous <code>&amp;mut</code>:</p>\n\n<pre><code>fn modify1(r: &amp;mut usize) {\n    modify0(r);\n}\n</code></pre>\n"}], "owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 52110493, "answer_count": 1, "score": 0, "last_activity_date": 1535700388, "creation_date": 1535657492, "question_id": 52104167, "link": "https://stackoverflow.com/questions/52104167/mutable-ref-becomes-immutable-inside-closure", "title": "Mutable ref becomes immutable inside closure", "body": "<p>I have this function to generate a random vector.</p>\n\n<pre><code>pub fn random_vec(r: &amp;mut rng::Rng, n: u32) -&gt; Vec&lt;Flo&gt; {\n    (0..n).map(|_| r.next_normal()).collect()\n}\n</code></pre>\n\n<p>I use it to generate a vector of 3 random vectors like this.</p>\n\n<pre><code>let xs: Vec&lt;Vec&lt;Flo&gt;&gt; =\n    (0..3).map(|_| random_vec(&amp;mut r, n)).collect();\n</code></pre>\n\n<p>This works fine. Now I try to extract this line into a function.</p>\n\n<pre><code>fn random_vecs(r: &amp;mut rng::Rng, n: u32) -&gt; Vec&lt;Vec&lt;Flo&gt;&gt; {\n    (0..3).map(|_| random_vec(&amp;mut r, n)).collect()\n}\n</code></pre>\n\n<p>This fails with message: \"closure cannot assign to immutable argument `r`\". Why does Rust want <code>r</code> to be immutable?</p>\n"}, {"tags": ["static", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1535630142, "post_id": 52096336, "comment_id": 91142961, "body": "Use <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">lazy_static</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1535630264, "post_id": 52096336, "comment_id": 91143036, "body": "String need to allocate at runtime so this can&#39;t be achieve at compile time. The only solution is lazy static or str."}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2029, "favorite_count": 0, "closed_date": 1535630284, "answer_count": 0, "score": 0, "last_activity_date": 1535634602, "creation_date": 1535629744, "question_id": 52096336, "link": "https://stackoverflow.com/questions/52096336/how-to-initialize-a-static-non-primitive-type-in-rust", "closed_reason": "Duplicate", "title": "How to initialize a static non-primitive type in Rust?", "body": "<p>I need to have a static std::string::String . I tried initializing it in several ways but in vain. One of them being - </p>\n\n<pre><code>static mut DURATION_HEX:String = \"0\".to_string();\n</code></pre>\n\n<p>I get a note saying :</p>\n\n<blockquote>\n  <p>note: a limited form of compile-time function evaluation is available\n  on a nightly compiler via <code>const fn</code></p>\n</blockquote>\n\n<p>I am not able to initialize it. I cannot leave it without initialization as well. \nHow do I create a static variable of non-primitive type in rust?</p>\n"}, {"tags": ["types", "reference", "rust"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 5, "last_activity_date": 1535623127, "last_edit_date": 1535623127, "creation_date": 1535621712, "answer_id": 52093734, "question_id": 52093493, "link": "https://stackoverflow.com/questions/52093493/hash-map-macro-refuses-to-type-check-failing-with-a-misleading-and-seemingly-b/52093734#52093734", "title": "Hash map macro refuses to type-check, failing with a misleading (and seemingly buggy) error message?", "body": "<p>Minimal reproduction:</p>\n\n<pre><code>fn main() {\n    use std::collections::HashMap;\n    use std::iter::FromIterator;\n\n    let _ = HashMap::from_iter([(\"key\", \"value\")].iter());\n}\n</code></pre>\n\n<p>You must iterate over owned tuples, not borrowed, hence the strange error message:</p>\n\n<pre><code>fn main() {\n    use std::collections::HashMap;\n    use std::iter::FromIterator;\n\n    let _: HashMap&lt;_, _&gt; = HashMap::from_iter([(\"key\", \"value\")].iter().cloned());\n}\n</code></pre>\n\n<p>You can also use <code>collect</code> as said in the documentation of <code>FromIterator</code>:</p>\n\n<blockquote>\n  <p><code>FromIterator</code>'s <code>from_iter</code> is rarely called explicitly, and is instead used through <code>Iterator</code>'s <code>collect</code> method. See <code>collect</code>'s documentation for more examples.</p>\n</blockquote>\n\n<pre><code>fn main() {\n    use std::collections::HashMap;\n\n    let _: HashMap&lt;_, _&gt; = [(\"key\", \"value\")].iter().cloned().collect();\n    // or\n    let _: HashMap&lt;_, _&gt; = vec![(\"key\", \"value\")].into_iter().collect();\n}\n</code></pre>\n\n<hr>\n\n<p>Note that the error message is more understandable with <code>collect</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::collections::HashMap&lt;_, _&gt;: std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not satisfied\n --&gt; src/main.rs:4:54\n  |\n4 |     let _: HashMap&lt;_, _&gt; = [(\"key\", \"value\")].iter().collect();\n  |                                                      ^^^^^^^ a collection of type `std::collections::HashMap&lt;_, _&gt;` cannot be built from an iterator over elements of type `&amp;(&amp;str, &amp;str)`\n  |\n  = help: the trait `std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not implemented for `std::collections::HashMap&lt;_, _&gt;`\n</code></pre>\n\n<p>The last line is the more helpful: the iterator must iterate over tuples and not references to tuples:</p>\n\n<pre><code>impl&lt;K, V, S&gt; FromIterator&lt;(K, V)&gt; for HashMap&lt;K, V, S&gt; \n</code></pre>\n"}], "owner": {"reputation": 1322, "user_id": 2693146, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KTITg.jpg?s=128&g=1", "display_name": "Isiah Meadows", "link": "https://stackoverflow.com/users/2693146/isiah-meadows"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 52093734, "answer_count": 1, "score": 2, "last_activity_date": 1535637324, "creation_date": 1535620980, "last_edit_date": 1535637324, "question_id": 52093493, "link": "https://stackoverflow.com/questions/52093493/hash-map-macro-refuses-to-type-check-failing-with-a-misleading-and-seemingly-b", "title": "Hash map macro refuses to type-check, failing with a misleading (and seemingly buggy) error message?", "body": "<p>I've got these two related macros here:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! hash_map {\n    ( $( $key:expr =&gt; $value:expr ),* ) =&gt; {\n        {\n            use ::std::iter::FromIterator;\n            ::std::collections::HashMap::from_iter(&amp;[$(($key, $value)),*])\n        }\n    };\n}\n\n#[macro_export]\nmacro_rules! hash_set {\n    ( $( $x:expr ),* ) =&gt; {\n        {\n            use ::std::iter::FromIterator;\n            ::std::collections::HashSet::from_iter(&amp;[$($x),*])\n        }\n    };\n}\n</code></pre>\n\n<p>I'm primarily using it in tests, like this:</p>\n\n<pre><code>assert!(foo.one == hash_map!{});\nassert!(foo.two == hash_set![String::from(\"some value\")]);\n</code></pre>\n\n<p>But for some reason, I'm getting a very misleading and nonsensical error message out of it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;&amp;[_; 0] as std::iter::IntoIterator&gt;::Item == (_, _)`\n   --&gt; src/common.rs:M:N\n    |\n6   |             ::std::collections::HashMap::from_iter(&amp;[$(($key, $value)),*])\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found tuple\n    | \n   ::: src/foo.rs:M:N\n    |\n154 |         assert!(foo.one == hash_map!{});\n    |                                         ----------- in this macro invocation\n    |\n    = note: expected type `&amp;_`\n               found type `(_, _)`\n    = note: required by `std::iter::FromIterator::from_iter`\n\nerror[E0308]: mismatched types\n   --&gt; src/common.rs:M:N\n    |\n16  |             ::std::collections::HashSet::from_iter(&amp;[$($x),*])\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference\n    | \n   ::: src/foo.rs:M:N\n    |\n150 |     fn it_can_do_things() {\n    |                                - help: try adding a return type: `-&gt; std::collections::HashSet&lt;&amp;std::string::String, _&gt;`...\n155 |         assert!(foo.two == hash_set![String::from(\"some value\")]);\n    |                                  -------------------------------------------- in this macro invocation\n    |\n    = note: expected type `std::collections::HashSet&lt;std::string::String, std::collections::hash_map::RandomState&gt;`\n               found type `std::collections::HashSet&lt;std::string::String, std::collections::hash_map::RandomState&gt;`\n               found type `std::collections::HashSet&lt;&amp;std::string::String, _&gt;`\n</code></pre>\n\n<p>I've tried making the tuple a reference itself for the first, but that didn't help.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;&amp;[_; 0] as std::iter::IntoIterator&gt;::Item == (_, _)`\n   --&gt; src/common.rs:M:N\n    |\n6   |             ::std::collections::HashMap::from_iter(&amp;[$(&amp;($key, $value)),*])\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found tuple\n    | \n   ::: src/foo.rs:M:N\n    |\n154 |         assert!(foo.one == hash_map!{});\n    |                                         ----------- in this macro invocation\n    |\n    = note: expected type `&amp;_`\n               found type `(_, _)`\n    = note: required by `std::iter::FromIterator::from_iter`\n</code></pre>\n\n<p>My goal is to try to get the hash map to reserve and add everything in a single batch, but I just can't get it to work correctly. Note that the hash map/set I'm creating owns its values.</p>\n"}, {"tags": ["rust", "conditional-compilation"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1535617981, "post_id": 52092413, "comment_id": 91134927, "body": "Also see <a href=\"https://stackoverflow.com/questions/27632660/how-do-i-use-conditional-compilation-with-cfg-and-cargo\">How do I use conditional compilation with <code>cfg</code> and Cargo?</a>"}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1535618321, "post_id": 52092413, "comment_id": 91135117, "body": "@ljedrz Thanks, very helpful"}], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1535617907, "answer_count": 0, "score": 0, "last_activity_date": 1535622702, "creation_date": 1535617601, "last_edit_date": 1535622702, "question_id": 52092413, "link": "https://stackoverflow.com/questions/52092413/how-to-conditionally-compile-in-rust", "closed_reason": "Duplicate", "title": "How to conditionally compile in Rust", "body": "<p>From my experience from C/C++ domains, it would be very useful for a system programing language to be able to compile different codes based on different conditions.</p>\n\n<p>I already know in Rust we got <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">Attributes</a>, attributes like <code>windows_subsystem</code> can enable/disable code fragments based on current OS.</p>\n\n<p>What I still can not figure out is, custom situation, like for example in C/C++:</p>\n\n<pre><code>#if ENABLE_VIDEO\n // ... code for video only\n#endif\n</code></pre>\n\n<p>How can I achive similar in Rust?</p>\n"}]