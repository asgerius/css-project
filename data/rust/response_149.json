[{"tags": ["rust", "fold", "rust-result"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510786462, "post_id": 47317883, "comment_id": 81588574, "body": "Wouldn&#39;t <code>let sum = sum?;</code> be shorter?"}], "tags": [], "owner": {"reputation": 4143, "user_id": 1034255, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/08361c2fe2bb01912c7a64ac848db2fd?s=128&d=identicon&r=PG", "display_name": "jupp0r", "link": "https://stackoverflow.com/users/1034255/jupp0r"}, "is_accepted": false, "score": 2, "last_activity_date": 1510786906, "last_edit_date": 1510786906, "creation_date": 1510782597, "answer_id": 47317883, "question_id": 47317724, "link": "https://stackoverflow.com/questions/47317724/fold-with-closure-that-returns-a-result/47317883#47317883", "title": "Fold with closure that returns a Result", "body": "<p>Take a closer look at the type signature for <code>fold</code>:</p>\n\n<pre><code>fn fold&lt;B, F&gt;(self, init: B, f: F) -&gt; B\n where\n    F: FnMut(B, Self::Item) -&gt; B,\n{ ... }\n</code></pre>\n\n<p><code>init</code> has to have the same type as the return value of <code>f</code>. This is also what the compiler tells you in the error message. You could do</p>\n\n<pre><code>fn apply_decoding_step(sum: Result&lt;i32&gt;, capture: regex::Captures&lt;&gt;) -&gt; Result&lt;i32&gt; {\n    match sum {\n        Err(_) =&gt; sum,\n        Ok(s) =&gt; {      \n            let number = parse_number(&amp;capture[2])?;\n            match  &amp;capture[1] {\n                \"+\" =&gt; Ok(s + number),\n                \"-\" =&gt; Ok(s - number),\n                \"*\" =&gt; Ok(s * number),\n                \"/\" =&gt; Ok(s / number),\n                _ =&gt; bail!(\"Unknown step operator\"),\n           }\n       }\n    }\n}\n</code></pre>\n\n<p>And then call it with an <code>Ok</code> seed:</p>\n\n<pre><code>.fold(Ok(seed), apply_decoding_step);\n</code></pre>\n\n<p>Now, if any failure occurs, your <code>fold</code> returns an <code>Err</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1566412170, "last_edit_date": 1566412170, "creation_date": 1510785488, "answer_id": 47318534, "question_id": 47317724, "link": "https://stackoverflow.com/questions/47317724/fold-with-closure-that-returns-a-result/47318534#47318534", "title": "Fold with closure that returns a Result", "body": "<p>As <a href=\"https://stackoverflow.com/a/47317883/155423\">jupp0r states</a>, the initial value of <code>Iterator::fold</code> must be of the same type as the return value of the closure.</p>\n\n<h1>Rust 1.26</h1>\n\n<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.try_fold\" rel=\"nofollow noreferrer\"><code>Iterator::try_fold</code></a> instead. This will exit iteration on the first failure:</p>\n\n<pre><code>let result = x.iter().try_fold(0, |acc, &amp;i| apply_decoding_step(acc, i));\n</code></pre>\n\n<p>Complete example:</p>\n\n<pre><code>fn main() {\n    let x = [(\"+\", \"10\"), (\"-\", \"20\"), (\"*\", \"2\")];\n\n    let result = x.iter().try_fold(0, |acc, &amp;i| apply_decoding_step(acc, i));\n\n    println!(\"{:?}\", result);\n}\n\nfn apply_decoding_step(sum: i32, capture: (&amp;str, &amp;str)) -&gt; Result&lt;i32, ()&gt; {\n    let number: i32 = capture.1.parse().expect(\"nope\");\n\n    match capture.0 {\n        \"+\" =&gt; Ok(sum + number),\n        \"-\" =&gt; Ok(sum - number),\n        \"*\" =&gt; Ok(sum * number),\n        \"/\" =&gt; Ok(sum / number),\n        _ =&gt; Err(()),\n    }\n}\n</code></pre>\n\n<h1>Rust 1.0</h1>\n\n<p>I'd recommend using <code>Result::and_then</code> to skip nothing in the fold when an error has occurred:</p>\n\n<pre><code>let result = x.iter().fold(Ok(0), |acc, &amp;i| {\n    acc.and_then(|acc| apply_decoding_step(acc, i))\n});\n</code></pre>\n\n<p>The problem here is that the <code>fold</code> body is executed for every element in the iterator, even once an error occurs.</p>\n\n<p>Here's an enterprise-grade solution where the main benefit is that iteration will end as soon as the first <code>Err</code> is encountered, instead of spinning through the rest of the list. Secondary benefits include the ability to write very fine-grained tests for each piece (parsing from a string, arithmetic operations, accumulation, etc.):</p>\n\n<pre><code>fn main() {\n    let x = [(\"+\", \"10\"), (\"-\", \"20\"), (\"*\", \"2\")];\n\n    let result: Result&lt;Accumulator, ()&gt; = x\n        .iter()\n        .map(|&amp;(op, val)| {\n            let op = op.parse::&lt;Op&gt;()?;\n            let val = val.parse::&lt;i32&gt;().map_err(|_| ())?;\n            Ok((op, val))\n        })\n        .collect();\n\n    println!(\"{:?}\", result);\n}\n\nuse std::iter::FromIterator;\nuse std::str::FromStr;\n\n#[derive(Debug)]\nenum Op {\n    Add,\n    Sub,\n    Mul,\n    Div,\n}\n\nimpl Op {\n    fn apply(&amp;self, a: i32, b: i32) -&gt; i32 {\n        use Op::*;\n\n        match *self {\n            Add =&gt; a + b,\n            Sub =&gt; a - b,\n            Mul =&gt; a * b,\n            Div =&gt; a / b,\n        }\n    }\n}\n\nimpl FromStr for Op {\n    type Err = ();\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, ()&gt; {\n        use Op::*;\n\n        match s {\n            \"+\" =&gt; Ok(Add),\n            \"-\" =&gt; Ok(Sub),\n            \"*\" =&gt; Ok(Mul),\n            \"/\" =&gt; Ok(Div),\n            _ =&gt; Err(()),\n        }\n    }\n}\n\n#[derive(Debug)]\nstruct Accumulator(i32);\n\nimpl&lt;'a&gt; FromIterator&lt;(Op, i32)&gt; for Accumulator {\n    fn from_iter&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = (Op, i32)&gt;,\n    {\n        Accumulator(\n            iter.into_iter()\n                .fold(0, |acc, (op, val)| op.apply(acc, val)),\n        )\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 0, "last_activity_date": 1510785844, "creation_date": 1510785844, "answer_id": 47318605, "question_id": 47317724, "link": "https://stackoverflow.com/questions/47317724/fold-with-closure-that-returns-a-result/47318605#47318605", "title": "Fold with closure that returns a Result", "body": "<p>You could extend <code>Iterator</code> by a custom <code>fold_result</code> function like this (using the full path to <code>Result</code> because it seems you're importing a <code>Result</code> type generated by <code>error_chain</code>):</p>\n\n<pre><code>trait IterExtFoldResult: Iterator + Sized {\n    #[inline]\n    fn fold_result&lt;B, F, E&gt;(self, mut init: B, mut f: F) -&gt; ::std::result::Result&lt;B, E&gt;\n    where\n        F: FnMut(B, Self::Item) -&gt; ::std::result::Result&lt;B, E&gt;,\n    {\n        for i in self {\n            init = f(init, i)?;\n        }\n        Ok(init)\n    }\n}\nimpl&lt;I: Iterator&gt; IterExtFoldResult for I {}\n</code></pre>\n\n<p>and use it like <code>.fold_result(0, apply_decoding_step)</code>.</p>\n\n<p>That way <code>fold</code> aborts when <code>f</code> returned an error; if you forward the error in <code>f</code> the compiler might or might not optimize to an early return.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=58b5800d0a6fd0a35f7e08af8ce8e3a1&amp;version=stable\" rel=\"nofollow noreferrer\">Full example in playground</a></p>\n"}], "owner": {"reputation": 1113, "user_id": 969295, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/dea809ef5ac9770fb400f1eb65544443?s=128&d=identicon&r=PG", "display_name": "Sassa", "link": "https://stackoverflow.com/users/969295/sassa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2761, "favorite_count": 0, "answer_count": 3, "score": 4, "last_activity_date": 1566412170, "creation_date": 1510781963, "last_edit_date": 1556752383, "question_id": 47317724, "link": "https://stackoverflow.com/questions/47317724/fold-with-closure-that-returns-a-result", "title": "Fold with closure that returns a Result", "body": "<p>I'm using the regex crate to find some text with this regex:</p>\n\n<pre><code>lazy_static! {\n    static ref FIND_STEPS_RE: Regex =\n        Regex::new(r\"my regex\").unwrap();\n}\n</code></pre>\n\n<p>I want to find all possible captures and iterate over them:</p>\n\n<pre><code>FIND_STEPS_RE.captures_iter(script_slice)\n</code></pre>\n\n<p>Each captured element consists of 2 values: an operation and a number. For example, the output could be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[(\"+\", \"10\"), (\"-\", \"20\"), (\"*\", \"2\")]\n</code></pre>\n\n<p>I want to iterate over it, parse the numbers and apply the operation.</p>\n\n<p>I tried:</p>\n\n<pre><code>let e = FIND_STEPS_RE.captures_iter(script_slice)\n    .fold(0, |sum, value| apply_decoding_step)?;\n</code></pre>\n\n<p>where <code>apply_decoding_step</code> is:</p>\n\n<pre><code>fn apply_decoding_step(sum: i32, capture: regex::Captures&lt;&gt;) -&gt; Result&lt;i32&gt; {\n    let number = parse_number(&amp;capture[2])?;\n\n    match  &amp;capture[1] {\n        \"+\" =&gt; Ok(s + number),\n        \"-\" =&gt; Ok(s - number),\n        \"*\" =&gt; Ok(s * number),\n        \"/\" =&gt; Ok(s / number),\n        _ =&gt; bail!(\"Unknown step operator\"),\n    }\n}\n</code></pre>\n\n<p>But I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;fn(i32, regex::Captures&lt;'_&gt;) -&gt; std::result::Result&lt;i32, Error&gt; {apply_decoding_step} as std::ops::FnOnce&lt;(i32, regex::Captures&lt;'_&gt;)&gt;&gt;::Output == i32`\n   --&gt; src/main.rs:122:10\n    |\n122 |         .fold(seed, apply_decoding_step);\n    |          ^^^^ expected enum `std::result::Result`, found i32\n    |\n    = note: expected type `std::result::Result&lt;i32, Error&gt;`\n               found type `i32`\n</code></pre>\n\n<p>I assume this is because I'm trying to fold a <code>Result</code> into a <code>i32</code>, but since I need to parse the second capture value and also need that <code>otherwise</code> case in my <code>match</code>, how can I fix that?</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510761078, "post_id": 47311290, "comment_id": 81574216, "body": "AFAIK, you cannot use concat! for what you want, as it will produce a string starting with the characters &#39;r&#39; and &#39;#&#39;, not actually espacing anothing how you want. Also, include! will include actual files, which is definitely not what you want to do here. Why did you use that macro? Did you plan on creating a file that has an escaped text in it and then parse it again?"}, {"owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510761707, "post_id": 47311290, "comment_id": 81574712, "body": "@JanNilsFerner Thank you for that insight. I edited my answer to remove include! and improved concat! usage a bit. Still doesn&#39;t seem to work though."}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510763263, "post_id": 47311290, "comment_id": 81575820, "body": "That clears things up. Your approach will unfortunately still not work, see my answer for details on why."}], "answers": [{"tags": [], "owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "is_accepted": false, "score": 5, "last_activity_date": 1510763003, "last_edit_date": 1510763003, "creation_date": 1510762160, "answer_id": 47312170, "question_id": 47311290, "link": "https://stackoverflow.com/questions/47311290/how-do-i-change-the-following-from-str-macro-to-from-json/47312170#47312170", "title": "How do I change the following from_str macro to from_json?", "body": "<p>Your macro doesn't work because <code>concat!</code> cannot be used to append identifiers to each other in a syntactically sound way. It instead concatenates identifiers into a string. Yours now looks like <code>\"r#\\\" ~your JSON~ \\\"#\"</code>, with the <code>r#</code> and <code>#</code> being literal characters in it.</p>\n\n<p>Your approach won't work until <a href=\"https://github.com/rust-lang/rust/issues/29599\" rel=\"nofollow noreferrer\">a stabilized, extended <code>concat_idents!</code> is implemented</a>.</p>\n\n<p>You will have to parse the JSON syntax by hand in your macro. For inspiration, take a look at <a href=\"https://docs.serde.rs/serde_json/macro.json.html\" rel=\"nofollow noreferrer\">how Serde does it</a>.</p>\n\n<p><a href=\"https://crates.io/crates/serde_json\" rel=\"nofollow noreferrer\">serde_json</a> in general seems to fit your use case quite well. If possible, I suggest removing custom implementations of any JSON parsing and use serde_json instead, as it is the de-facto standard choice for all things JSON in Rust.</p>\n\n<p>This is a minimal example of how to convert your JSON into a raw string with serde_json:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_json;\n\nfn main() {\n    let as_json_value = json!({\n        \"appName\": \"Demo App\",\n        \"appVersion\": \"1.0\",\n        \"database\": {\n            \"host\": \"dev.database.com\",\n            \"port\": 3000\n        }\n    });\n    let as_string = format!(\"{}\", as_json_value);\n    println!(\"{}\", as_string);\n}\n</code></pre>\n\n<p>Although you probably will want to rewrite your <code>StringContent</code> enum to be built from a <code>serde_json::Value</code>, as it is already neatly parsed for you.</p>\n"}, {"comments": [{"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510763160, "post_id": 47312192, "comment_id": 81575731, "body": "Note that you don&#39;t need to include <code>serde</code> itself, only <code>serde_json</code>. Also, OP wants to work with a <code>&amp;str</code>, not a <code>serde_json::Value</code>, although he probably should rethink that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510763296, "post_id": 47312192, "comment_id": 81575852, "body": "@JanNilsFerner the <code>extern crate serde;</code> is defensive programming (since it&#39;s needed for serde_derive), so I just always include it once I have any other serde crate in play."}, {"owner": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510763789, "post_id": 47312192, "comment_id": 81576218, "body": "Fair enough, that sounds reasonable."}, {"owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "reply_to_user": {"reputation": 2959, "user_id": 5903309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/665cdb14fb46d20c11a176c92e6ed663?s=128&d=identicon&r=PG", "display_name": "Jan Nils Ferner", "link": "https://stackoverflow.com/users/5903309/jan-nils-ferner"}, "edited": false, "score": 0, "creation_date": 1510766262, "post_id": 47312192, "comment_id": 81577860, "body": "@JanNilsFerner This is what I ended up doing. Also I included the serde json! macro within my own to achieve my objective. Only negative I see now is that I have to do #[macro_use] on extern crate serde_json in addition to doing the same on my crate as both macros are required. Guess I&#39;d have to live with that for now. Thank you for all your support."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1524939741, "last_edit_date": 1524939741, "creation_date": 1510762220, "answer_id": 47312192, "question_id": 47311290, "link": "https://stackoverflow.com/questions/47311290/how-do-i-change-the-following-from-str-macro-to-from-json/47312192#47312192", "title": "How do I change the following from_str macro to from_json?", "body": "<p>I'd just use the <a href=\"https://docs.serde.rs/serde_json/macro.json.html\" rel=\"nofollow noreferrer\"><code>json</code> macro provided by serde_json</a>, which works with your exact syntax:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_json;\nextern crate serde;\n\nfn main() {\n    let x = json!({\n        \"appName\": \"Demo App\",\n        \"appVersion\": \"1.0\",\n        \"database\": {\n            \"host\": \"dev.database.com\",\n            \"port\": 3000\n        }\n    });\n}\n</code></pre>\n\n<p>This creates a <a href=\"https://docs.serde.rs/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>Value</code></a> struct. If for some reason you really needed it back as a string, you'd need to re-serialize it using it's <code>Display</code> implementation:</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_json;\n\nstruct StringContent(String);\n\nmacro_rules! from_json {\n    ($x:tt) =&gt; {{\n        StringContent(json!($x).to_string())\n    }}\n}\n\nfn main() {\n    let x = from_json!({\n            \"appName\": \"Demo App\",\n            \"appVersion\": \"1.0\",\n            \"database\": {\n                \"host\": \"dev.database.com\",\n                \"port\": 3000\n            }\n        });\n\n    println!(\"{}\", x.0)\n}\n</code></pre>\n"}], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 47312192, "answer_count": 2, "score": 3, "last_activity_date": 1524939741, "creation_date": 1510759808, "last_edit_date": 1510763378, "question_id": 47311290, "link": "https://stackoverflow.com/questions/47311290/how-do-i-change-the-following-from-str-macro-to-from-json", "title": "How do I change the following from_str macro to from_json?", "body": "<p>I have the following macro. Note that <code>StringContent</code> is an enum item.</p>\n\n<pre><code>#[macro_export]\nmacro_rules! from_str {  \n    ($json:expr) =&gt; {         \n        StringContent(String::from($json))\n    }\n}\n</code></pre>\n\n<p>which allows me to write code like</p>\n\n<pre><code>from_str!(r#\"{\n    \"appName\": \"Demo App\",\n    \"appVersion\": \"1.0\",\n    \"database\": {\n        \"host\": \"dev.database.com\",\n        \"port\": 3000\n    }\n}\"#)\n</code></pre>\n\n<p>Now I want another macro <code>from_json!</code> which allows me to do get rid of the <code>r#\"\"#</code> like so</p>\n\n<pre><code>from_json!({\n    \"appName\": \"Demo App\",\n    \"appVersion\": \"1.0\",\n    \"database\": {\n        \"host\": \"dev.database.com\",\n        \"port\": 3000\n    }\n})\n</code></pre>\n\n<p>I've tried the following which does not seem to work</p>\n\n<pre><code>#[macro_export]\nmacro_rules! from_json {  \n    ($t:tt) =&gt; {         \n        StringContent(String::from(concat!(r#\"r#\"\"#, stringify!($t), r#\"\"\"# , r#\"#\"#)))\n    }\n}\n</code></pre>\n\n<p>How can I get <code>from_json</code> to work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 3, "creation_date": 1510753512, "post_id": 47308807, "comment_id": 81568336, "body": "If your crate is named <code>vk</code>, you don&#39;t need to wrap everything into a module <code>vk</code> in your <code>libr.rs</code> - the crate name(space) is prefixed to your names by default."}, {"owner": {"reputation": 1537, "user_id": 274249, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0717e91d392d7e0fc3aeca3eb79271ec?s=128&d=identicon&r=PG&f=1", "display_name": "ashleysmithgpu", "link": "https://stackoverflow.com/users/274249/ashleysmithgpu"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510755194, "post_id": 47308807, "comment_id": 81569508, "body": "@Stefan, ah, that&#39;s it, thank-you!"}], "owner": {"reputation": 1537, "user_id": 274249, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0717e91d392d7e0fc3aeca3eb79271ec?s=128&d=identicon&r=PG&f=1", "display_name": "ashleysmithgpu", "link": "https://stackoverflow.com/users/274249/ashleysmithgpu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 27, "favorite_count": 0, "closed_date": 1510753894, "answer_count": 0, "score": 0, "last_activity_date": 1510754196, "creation_date": 1510752884, "last_edit_date": 1510754196, "question_id": 47308807, "link": "https://stackoverflow.com/questions/47308807/is-there-a-way-to-use-only-one-namespace-qualifier-when-importing-modules-in-rus", "closed_reason": "Duplicate", "title": "Is there a way to use only one namespace qualifier when importing modules in Rust?", "body": "<p>I have a module</p>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>pub mod vk {\n    pub struct Instance { /* ... */ }\n}\n</code></pre>\n\n<p>And some code that uses the module</p>\n\n<p><strong>src/examples/test.rs</strong></p>\n\n<pre><code>extern crate vk;\n\n// What \"use\" statement do I put here?\n\nfn main() {\n    let x = vk::Instance::new();\n}\n</code></pre>\n\n<p>I'd like to use <code>vk::Instance</code> but none of the use statements I try seem to work:</p>\n\n<pre><code>use vk::*;\nuse vk::vk;\nuse vk::{Instance};\nuse vk;\n</code></pre>\n\n<p>I <em>can</em> do the following, but is there a way to only need to use <code>vk::Instance</code> ?</p>\n\n<pre><code>use vk::vk::*;\nlet x = Instance::new();\n\nlet x = vk::vk::Instance::new();\n</code></pre>\n"}, {"tags": ["compilation", "rust", "code-generation", "rust-cargo", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1510753670, "last_edit_date": 1510753670, "creation_date": 1510734123, "answer_id": 47302501, "question_id": 47302294, "link": "https://stackoverflow.com/questions/47302294/is-there-a-macro-or-similar-workaround-to-include-the-source-folder-src-path-a/47302501#47302501", "title": "Is there a macro or similar workaround to include the source folder (src) path at compile time?", "body": "<p>No, but you can get close using <a href=\"https://doc.rust-lang.org/std/macro.file.html\" rel=\"nofollow noreferrer\"><code>file!</code></a>:</p>\n\n<pre><code>const FILE: &amp;'static str = concat!(env!(\"CARGO_MANIFEST_DIR\"), \"/\", file!());\n\nfn main() {\n    use std::path::Path;\n\n    println!(\"FILE: {:?}\", FILE);\n    println!(\"src path: {:?}\", Path::new(FILE).parent());\n}\n</code></pre>\n\n<p>Outputs, <a href=\"https://play.rust-lang.org/?gist=eb9a53a84e5fdecb6d08da20bb718173&amp;version=stable\" rel=\"nofollow noreferrer\">on the playground</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>FILE: \"/playground/src/main.rs\"\nsrc path: Some(\"/playground/src\")\n</code></pre>\n"}], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 0, "accepted_answer_id": 47302501, "answer_count": 1, "score": 2, "last_activity_date": 1510753670, "creation_date": 1510733385, "question_id": 47302294, "link": "https://stackoverflow.com/questions/47302294/is-there-a-macro-or-similar-workaround-to-include-the-source-folder-src-path-a", "title": "Is there a macro or similar workaround to include the source folder (src) path at compile time?", "body": "<p>Is there a Rust macro or a similar workaround to include the path of the 'src' folder created via <code>cargo new</code> in my source file as a string literal at compile time or specifically when doing <code>cargo build</code>?</p>\n\n<p>I have successfully done something similar where I use <code>include_str!</code> to include file content but I need to know if it is possible to directly include the src path in the code. </p>\n"}, {"tags": ["rust", "mutex"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510714975, "post_id": 47298623, "comment_id": 81548756, "body": "<i>and I need to be able to call <code>terminate</code> once all instances have gone out of scope.</i> \u2014 and what happens if the outer application then decides to create another instance? <i>I can&#39;t use <code>INSTANCES</code> inside of a struct function call.</i> \u2014 you certainly can, as the duplicate shows."}, {"owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510715177, "post_id": 47298623, "comment_id": 81548798, "body": "I will call <code>GPIO_INIT = Once::new();</code> right after terminating."}, {"owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510715450, "post_id": 47298623, "comment_id": 81548853, "body": "Can you explain why in the <code>lazy_static</code> implementation inside <code>GPIO::init</code> I get the error <code>cannot find value &#39;INSTANCES&#39; in this scope</code>? Shouldn&#39;t this be global?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510715544, "post_id": 47298623, "comment_id": 81548881, "body": "Because of normal variable scoping rules. If you declare a variable inside a function, only that function can see it. A variable needs to be declared outside of functions if multiple functions need to see it. The variable itself continues to live beyond the function, it&#39;s just not accessible."}, {"owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510715916, "post_id": 47298623, "comment_id": 81548961, "body": "I&#39;m confused. In the post you linked, you do the same thing with <code>ARRAY</code> inside <code>do_a_call()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510716175, "post_id": 47298623, "comment_id": 81549022, "body": "I don&#39;t understand what you mean. <a href=\"https://gist.github.com/2f2573b5864d1c4b353a169b2e26ad69\" rel=\"nofollow noreferrer\">Does this answer your question</a>? The location where the variable is <i>declared</i> is important."}, {"owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510716558, "post_id": 47298623, "comment_id": 81549109, "body": "Ah, I had <code>#[macro_use(lazy_static)]</code> instead of <code>#[macro_use]</code> and that was saying <code>INSTANCES</code> was out of scope. Thanks for the help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510716767, "post_id": 47298623, "comment_id": 81549162, "body": "Do you mean something <a href=\"https://play.integer32.com/?gist=21a9333b8a38ac2ecfe8404f38452a61&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a>? That generates <b>2</b> errors \u2014 the first stating that another macro is missing (<code>__lazy_static_internal</code>). If you want to do that, you need to <a href=\"https://play.integer32.com/?gist=cf5e197a53ed6c3c3bceb39600af443c&amp;version=stable\" rel=\"nofollow noreferrer\">import all 3 macros, it looks like</a>."}, {"owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510716938, "post_id": 47298623, "comment_id": 81549185, "body": "Yep, that was the problem."}], "owner": {"reputation": 25, "user_id": 3994033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0a567484265b8af128757b497b51eac?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Deegan", "link": "https://stackoverflow.com/users/3994033/martin-deegan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 24, "favorite_count": 0, "closed_date": 1510714819, "answer_count": 0, "score": 0, "last_activity_date": 1510714863, "creation_date": 1510714667, "last_edit_date": 1510714863, "question_id": 47298623, "link": "https://stackoverflow.com/questions/47298623/how-do-i-create-a-static-global-mutex-to-count-the-number-of-instances-of-a-ffi", "closed_reason": "Duplicate", "title": "How do I create a static, global Mutex to count the number of instances of a FFI being used?", "body": "<p>I'm trying to keep track of the number of instances of my C wrapper have been initialized.</p>\n\n<p>I'm using <code>std::sync::Once</code> to initialize the C library a single time and I need to be able to call <code>terminate</code> once all instances have gone out of scope.</p>\n\n<p>Currently, I have</p>\n\n<pre><code>static INSTANCES: usize = 0;\nstatic mut VERSION: i32 = 0;\nstatic GPIO_INIT: Once = ONCE_INIT;\n\nfn init_gpio_lib() -&gt; i32 {\n    println!(\"GPIOs initialized.\");\n    64\n}\n\nfn terminate_gpio_lib() {\n    println!(\"GPIO lib terminated!\");\n}\n\nstruct GPIO {\n    version: i32\n}\n\nimpl GPIO {\n    fn init() -&gt; GPIO {\n        GPIO_INIT.call_once(|| {\n            unsafe {\n                VERSION = init_gpio_lib();        \n            }\n        });\n\n\n        unsafe {\n            INSTANCES += 1;\n        }\n\n        unsafe {\n            GPIO {\n                version: VERSION\n            }\n        }\n\n    }\n\n    fn terminate(&amp;mut self) {\n        unsafe {\n            INSTANCES -= 1;\n            if INSTANCES == 0 {\n                terminate_gpio_lib();\n            }\n        }\n    }\n}\n\nimpl Drop for GPIO {\n    fn drop(&amp;mut self) {\n        self.terminate();\n    }\n}\n</code></pre>\n\n<p>I'm trying to make it safe, but I can't figure out how.\nThe two things I've tried are</p>\n\n<ol>\n<li><code>static INSTANCES: Mutex&lt;usize&gt; = Mutex::new(0)</code> In this case, I\ncan't call <code>Mutex::new(0)</code> here. </li>\n<li><code>lazy_static!{ static ref INSTANCES: Mutex&lt;usize&gt; = Mutex::new(0) }</code> In this case,\n    I can't use <code>INSTANCES</code> inside of a struct function call.</li>\n</ol>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 1958, "user_id": 5387193, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/10153188054047336/picture?type=large", "display_name": "ChickenFeet", "link": "https://stackoverflow.com/users/5387193/chickenfeet"}, "edited": false, "score": 0, "creation_date": 1510712354, "post_id": 47298336, "comment_id": 81548136, "body": "Convert both strings to lowercase first using <code>fn to_lowercase(&amp;self) -&gt; String</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510713343, "post_id": 47298336, "comment_id": 81548371, "body": "<i>If I want to get the occurrences count of a string</i> \u2014 <code>matches(...).count()</code>"}, {"owner": {"reputation": 81, "user_id": 7324205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Wvr4o.jpg?s=128&g=1", "display_name": "Meet Sinojia", "link": "https://stackoverflow.com/users/7324205/meet-sinojia"}, "edited": false, "score": 1, "creation_date": 1601909399, "post_id": 47298336, "comment_id": 113545194, "body": "If you just want to do a case-insensitive string comparison with ASCII strings, then use <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.eq_ignore_ascii_case\" rel=\"nofollow noreferrer\">eq_ignore_ascii_case</a>."}], "answers": [{"comments": [{"owner": {"reputation": 3862, "user_id": 142456, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e084f5673214074a5c737c131f082a43?s=128&d=identicon&r=PG", "display_name": "fostandy", "link": "https://stackoverflow.com/users/142456/fostandy"}, "edited": false, "score": 1, "creation_date": 1577159977, "post_id": 47298395, "comment_id": 105107852, "body": "I know it wasn&#39;t meant like this, but statements like &quot;other exciting things beyond the Basic Multilingual Plane&quot; really has sort of lovecraftian connotations. As if strings, like the old gods, are beyond human comprehension and to delve into a <i>true</i> understanding of them would drive you insane. After the rust book introduced me to the notion of grapheme clusters... I kind of agree!"}, {"owner": {"reputation": 3685, "user_id": 5812238, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/b99072b57c3ba6f1c4049e21767571cb?s=128&d=identicon&r=PG&f=1", "display_name": "diralik", "link": "https://stackoverflow.com/users/5812238/diralik"}, "edited": false, "score": 0, "creation_date": 1579304424, "post_id": 47298395, "comment_id": 105734187, "body": "Question is about strings, so <a href=\"https://docs.rs/regex/1.3.3/regex/fn.escape.html\" rel=\"nofollow noreferrer\"><code>escape</code></a> function could be useful: <code>RegexBuilder::new(regex::escape(needle))</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 13, "last_activity_date": 1612878892, "last_edit_date": 1612878892, "creation_date": 1510712764, "answer_id": 47298395, "question_id": 47298336, "link": "https://stackoverflow.com/questions/47298336/case-insensitive-string-matching-in-rust/47298395#47298395", "title": "Case-insensitive string matching in Rust", "body": "<p>You can always convert both strings to the same casing. This will work for some cases:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let needle = &quot;\u03bc\u03c4\u03c2&quot;;\nlet haystack = &quot;\u039c\u03a4\u03a3&quot;;\n\nlet needle = needle.to_lowercase();\nlet haystack = haystack.to_lowercase();\n\nfor i in haystack.matches(&amp;needle) {\n    println!(&quot;{:?}&quot;, i);\n}\n</code></pre>\n<p>See also <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.to_ascii_lowercase\" rel=\"nofollow noreferrer\"><code>str::to_ascii_lowercase</code></a> for ASCII-only variants.</p>\n<p>In other cases, the regex crate <a href=\"https://docs.rs/regex/1.4.3/regex/struct.RegexBuilder.html#method.case_insensitive\" rel=\"nofollow noreferrer\">might do enough case-folding</a> (potentially <a href=\"https://docs.rs/regex/1.4.3/regex/struct.RegexBuilder.html#method.unicode\" rel=\"nofollow noreferrer\">Unicode</a>) for you:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use regex::RegexBuilder; // 1.4.3\n\nfn main() {\n    let needle = &quot;\u03bc\u03c4\u03c2&quot;;\n    let haystack = &quot;\u039c\u03a4\u03a3&quot;;\n\n    let needle = RegexBuilder::new(needle)\n        .case_insensitive(true)\n        .build()\n        .expect(&quot;Invalid Regex&quot;);\n\n    for i in needle.find_iter(haystack) {\n        println!(&quot;{:?}&quot;, i);\n    }\n}\n</code></pre>\n<p>However, remember that ultimately Rust's strings are <strong>UTF-8</strong>. Yes, you need to deal with all of UTF-8. This means that picking upper- or lower-case might change your results. Likewise, the only correct way to change text casing <a href=\"https://en.wikipedia.org/wiki/Dotted_and_dotless_I\" rel=\"nofollow noreferrer\">requires that you know the <em>language</em> of the text</a>; it's not an inherent property of the bytes. Yes, you can have strings which contain emoji and other exciting things <a href=\"https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane\" rel=\"nofollow noreferrer\">beyond the Basic Multilingual Plane</a>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40250988/155423\">How can I case fold a string in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/38406793/155423\">Why is capitalizing the first letter of a string so convoluted in Rust?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 181, "user_id": 5046650, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153420115071726/picture?type=large", "display_name": "Rumpelstiltskin Koriat", "link": "https://stackoverflow.com/users/5046650/rumpelstiltskin-koriat"}, "is_accepted": false, "score": 4, "last_activity_date": 1525963245, "last_edit_date": 1525963245, "creation_date": 1525950591, "answer_id": 50271550, "question_id": 47298336, "link": "https://stackoverflow.com/questions/47298336/case-insensitive-string-matching-in-rust/50271550#50271550", "title": "Case-insensitive string matching in Rust", "body": "<p>If you're using <a href=\"https://crates.io/crates/regex\" rel=\"nofollow noreferrer\">the regex crate</a>, you can make the pattern case insensitive:</p>\n\n<pre><code>let re = Regex::new(r\"(?i)\u03bc\u03c4\u03c2\").unwrap();\nlet mat = re.find(\"\u039c\u03a4\u03a3\").unwrap();\n</code></pre>\n"}], "owner": {"reputation": 525, "user_id": 7056165, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-vXh257HgVEM/AAAAAAAAAAI/AAAAAAAAAAo/jGKIY2iq0Iw/photo.jpg?sz=128", "display_name": "Ala Douagi", "link": "https://stackoverflow.com/users/7056165/ala-douagi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8742, "favorite_count": 1, "accepted_answer_id": 47298395, "answer_count": 2, "score": 14, "last_activity_date": 1612878892, "creation_date": 1510712252, "last_edit_date": 1510712459, "question_id": 47298336, "link": "https://stackoverflow.com/questions/47298336/case-insensitive-string-matching-in-rust", "title": "Case-insensitive string matching in Rust", "body": "<p>Is there a simple way to use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.matches\" rel=\"noreferrer\"><code>str::matches</code></a> <strong>case-insensitively</strong>? </p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510709922, "post_id": 47297993, "comment_id": 81547543, "body": "Don&#39;t. Just return the <code>Vec</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510710611, "post_id": 47297993, "comment_id": 81547720, "body": "Next time, take a few more minutes to take a look at the question you&#39;ve asked \u2014 does it look correctly formatted? Is the code you&#39;ve provided syntactically correct (not missing any closing <code>}</code>, for example)? Review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. You are likely to gather large amounts of downvotes on Stack Overflow with your apparent lack of care."}, {"owner": {"reputation": 634, "user_id": 8942245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UxBSr.jpg?s=128&g=1", "display_name": "Algebra8", "link": "https://stackoverflow.com/users/8942245/algebra8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510710816, "post_id": 47297993, "comment_id": 81547773, "body": "Ok, thanks for the insight. This is my first time uploading anything to stack overflow, I didn&#39;t even know there is a downvote!"}, {"owner": {"reputation": 634, "user_id": 8942245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UxBSr.jpg?s=128&g=1", "display_name": "Algebra8", "link": "https://stackoverflow.com/users/8942245/algebra8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510710867, "post_id": 47297993, "comment_id": 81547793, "body": "Also, I am asked to return a reference to a vector so I have to return it. thanks though!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510711046, "post_id": 47297993, "comment_id": 81547845, "body": "To reiterate the duplicate&#39;s answer \u2014 it is 100% completely <b>invalid</b> to create a <code>Vec</code> in a function and return a reference to it (and impossible to do in safe Rust). Whoever &quot;asked&quot; you to do it either doesn&#39;t understand what they are asking or you and they have a miscommunication about what you are supposed to do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510711441, "post_id": 47297993, "comment_id": 81547946, "body": "If your task is to &quot;return a reference to a vector&quot;, that&#39;s easy: <code>fn hello(v: &amp;Vec&lt;i32&gt;) -&gt; &amp;Vec&lt;i32&gt; { v }</code>"}, {"owner": {"reputation": 634, "user_id": 8942245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UxBSr.jpg?s=128&g=1", "display_name": "Algebra8", "link": "https://stackoverflow.com/users/8942245/algebra8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510714625, "post_id": 47297993, "comment_id": 81548670, "body": "that clarifies a lot, I&#39;ve been sitting here and pondering and reading what I did wrong and couldn&#39;t get an answer. Thank you for the insight. I&#39;m sure that I misunderstood what I am supposed to do then. Would you happen to know where I can read up on this myself, so as to get better acquainted with this information? Where can I read why I can&#39;t create a Vec in a function and return a reference to it? thank you for your time"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510717612, "post_id": 47297993, "comment_id": 81549317, "body": "Of course, I suggest the linked duplicate. The issue isn&#39;t specific to a particular type (<code>Vec</code> or <code>String</code> or ...). More fundamentally, the entire <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> is a good place; they have an <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">entire chapter on ownership</a>, for example."}, {"owner": {"reputation": 634, "user_id": 8942245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UxBSr.jpg?s=128&g=1", "display_name": "Algebra8", "link": "https://stackoverflow.com/users/8942245/algebra8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510786437, "post_id": 47297993, "comment_id": 81588563, "body": "perfect, thanks so much!"}], "owner": {"reputation": 634, "user_id": 8942245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UxBSr.jpg?s=128&g=1", "display_name": "Algebra8", "link": "https://stackoverflow.com/users/8942245/algebra8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1510709909, "answer_count": 0, "score": 0, "last_activity_date": 1510709575, "creation_date": 1510709575, "question_id": 47297993, "link": "https://stackoverflow.com/questions/47297993/how-to-return-a-reference-to-a-vector-rust", "closed_reason": "Duplicate", "title": "how to return a reference to a vector, rust", "body": "<p>I am trying to return a reference to a vector and cannot get it to work. \nMy code looks like this:</p>\n\n<p>fn hello&lt;'a>(z: &amp;'a [i32]) -> &amp;'a Vec {</p>\n\n<pre><code>let mut space: Vec&lt;i32&gt; = Vec::new();\n\n\n\nfor elements in z.iter() {\n\n\n    space.push(*elements);\n\n\n}\n</code></pre>\n\n<p>println!(\"space is {:?}\", &amp;a);</p>\n\n<p>the compiler gives me the error:\nexpected struct <code>std::vec::Vec</code>, found ()</p>\n\n<p>I expect it might have something to do with ownership, but my research has led me now where. </p>\n\n<p>PS I am new to programming. </p>\n\n<p>Thank you</p>\n"}, {"tags": ["rust", "closures", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510698516, "post_id": 47295884, "comment_id": 81543913, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String) or Vec (&amp;Vec) as a function argument?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510698678, "post_id": 47295884, "comment_id": 81543974, "body": "<b>Please</b> read <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch13-01-closures.html#using-closures-with-generic-parameters-and-the-fn-traits\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> which already addresses topics like how to pass closures."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1510698358, "creation_date": 1510698358, "answer_id": 47296276, "question_id": 47295884, "link": "https://stackoverflow.com/questions/47295884/passing-a-closure-to-a-function-expecting-a-stdopsfn/47296276#47296276", "title": "Passing a closure to a function expecting a std::ops::Fn", "body": "<p>The second error was the more important one:</p>\n\n<pre><code>error[E0277]: the trait bound `for&lt;'r&gt; std::ops::Fn(&amp;'r std::vec::Vec&lt;i32&gt;) -&gt; f64 + 'static: std::marker::Sized` is not satisfied\n</code></pre>\n\n<p>In short: <code>Fn(&amp;Vec&lt;i32&gt;) -&gt; f64</code> is not a sized type, and cannot be passed by value.  You can only pass <a href=\"https://doc.rust-lang.org/stable/reference/types.html#trait-objects\" rel=\"nofollow noreferrer\">trait objects</a> (references or boxes), or values of (sized) types implementing a trait.  In this case you probably want the latter:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a09e292ba3006fbed47a961db6318242&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>fn stat_query&lt;F&gt;(dataset: &amp;Vec&lt;Vec&lt;i32&gt;&gt;, query: F) -&gt; f64\nwhere\n    F: Fn(&amp;Vec&lt;i32&gt;) -&gt; f64,\n{\n    // takes in a dataset of feature vectors and a query,\n    // returns the average of the query on the dataset\n    if dataset.len() == 0 {\n        0.\n    } else {\n        dataset.iter().map(|ref fv| query(&amp;fv)).sum::&lt;f64&gt;() / (dataset.len() as f64)\n    }\n}\n\nfn main() {\n    // build dataset\n    let fv1: Vec&lt;i32&gt; = vec![1, 1, 1, 1, 1];\n    let fv2: Vec&lt;i32&gt; = vec![1, 0, 1, 0, 1];\n    let my_dataset = vec![fv1, fv2];\n\n    // query checks whether sum of features is greater than a threshold\n    fn my_query(ref fv: &amp;Vec&lt;i32&gt;, threshold: i32) -&gt; f64 {\n        if fv.iter().sum::&lt;i32&gt;() &gt; threshold {\n            1.\n        } else {\n            0.\n        }\n    }\n\n    // run query on dataset with threshold 3\n    println!(\"{}\", stat_query(&amp;my_dataset, |ref fv| my_query(fv, 3)));\n}\n</code></pre>\n"}], "owner": {"reputation": 696, "user_id": 2509572, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1cd622d403da42df85c9bc318708b00d?s=128&d=identicon&r=PG", "display_name": "firechant", "link": "https://stackoverflow.com/users/2509572/firechant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1967, "favorite_count": 0, "closed_date": 1510698776, "accepted_answer_id": 47296276, "answer_count": 1, "score": 3, "last_activity_date": 1510698596, "creation_date": 1510696545, "last_edit_date": 1510698596, "question_id": 47295884, "link": "https://stackoverflow.com/questions/47295884/passing-a-closure-to-a-function-expecting-a-stdopsfn", "closed_reason": "Duplicate", "title": "Passing a closure to a function expecting a std::ops::Fn", "body": "<p>I'm trying to use a closure to call a function on a bunch of feature vectors.  The most important code lines here are the first line, where we say what type <code>query</code> must be and the last line, where we try to give a closure.</p>\n\n<pre><code>fn stat_query(dataset: &amp;Vec&lt;Vec&lt;i32&gt;&gt;, query: Fn(&amp;Vec&lt;i32&gt;) -&gt; f64) -&gt; f64 {\n    // takes in a dataset of feature vectors and a query,\n    // returns the average of the query on the dataset\n    if dataset.len() == 0 {\n        0.\n    } else {\n        dataset.iter().map(|ref fv| query(&amp;fv)).sum() / (dataset.len() as f64)\n    }\n}\n\nfn main() {\n    // build dataset\n    let fv1: Vec&lt;i32&gt; = vec![1, 1, 1, 1, 1];\n    let fv2: Vec&lt;i32&gt; = vec![1, 0, 1, 0, 1];\n    let my_dataset = vec![fv1, fv2];\n\n    // query checks whether sum of features is greater than a threshold\n    fn my_query(ref fv: &amp;Vec&lt;i32&gt;, threshold: i32) -&gt; f64 {\n        if fv.iter().sum() &gt; threshold {\n            1.\n        } else {\n            0.\n        }\n    }\n\n    // run query on dataset with threshold 3\n    println!(\"{}\", stat_query(&amp;my_dataset, |ref fv| my_query(fv, 3)));\n}\n</code></pre>\n\n<p>When I run this, I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'r&gt; std::ops::Fn(&amp;'r std::vec::Vec&lt;i32&gt;) -&gt; f64 + 'static: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:1:40\n  |\n1 | fn stat_query(dataset: &amp;Vec&lt;Vec&lt;i32&gt;&gt;, query: Fn(&amp;Vec&lt;i32&gt;) -&gt; f64) -&gt; f64 {\n  |                                        ^^^^^ `for&lt;'r&gt; std::ops::Fn(&amp;'r std::vec::Vec&lt;i32&gt;) -&gt; f64 + 'static` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `for&lt;'r&gt; std::ops::Fn(&amp;'r std::vec::Vec&lt;i32&gt;) -&gt; f64 + 'static`\n  = note: all local variables must have a statically known size\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:27:44\n   |\n27 |     println!(\"{}\", stat_query(&amp;my_dataset, |ref fv| my_query(fv, 3)));\n   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ expected trait std::ops::Fn, found closure\n   |\n   = note: expected type `for&lt;'r&gt; std::ops::Fn(&amp;'r std::vec::Vec&lt;i32&gt;) -&gt; f64 + 'static`\n              found type `[closure@src/main.rs:27:44: 27:68]`\n</code></pre>\n\n<p>I thought closures <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">implemented <code>Fn</code></a> (or <code>FnOnce</code> or <code>FnMut</code>)?  Is it not valid to provide a closure when you expect a <code>Fn</code>? I assume I need to specify something else about the <code>Fn</code> in the first line?  But what?</p>\n\n<p>I assume I have incorrectly specified the type of either the <code>query: Fn(&amp;Vec&lt;i32&gt;) -&gt; f64</code> parameter of my first function, or have written the closure wrong <code>|ref fv| my_query(fv, 3)</code>.</p>\n\n<p>I read <a href=\"https://stackoverflow.com/questions/41664325/passing-closure-to-trait-method-expected-type-parameter-found-closure\">Passing closure to trait method: expected type parameter, found closure</a>, but that seems to be more about passing a closure that isn't the only kind of thing the function is accepting.</p>\n"}, {"tags": ["compiler-errors", "rust", "immutability", "mutable", "borrow-checker"], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 98, "favorite_count": 0, "closed_date": 1510666370, "answer_count": 0, "score": 1, "last_activity_date": 1510666553, "creation_date": 1510663876, "last_edit_date": 1510664523, "question_id": 47286396, "link": "https://stackoverflow.com/questions/47286396/how-do-i-solve-cannot-borrow-self-as-mutable-because-self-bundles-is-also", "closed_reason": "Duplicate", "title": "How do I solve &quot;cannot borrow `*self` as mutable because `self.bundles` is also borrowed as immutable&quot; in the following context?", "body": "<p>I have the following code in my lib.rs</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\nextern crate build_script_file_gen;\n\nuse serde_json::Value;\nuse serde_json::from_str;\nuse std::fs::File;\nuse std::io::Read;\nuse std::collections::HashMap;\n\npub enum ConfigurationSource {\n    StringContent(String),\n    FileContent(String)    \n}\n\npub struct ConfigurationBuilder {\n    config: Value,\n    bundles: HashMap&lt;String, Vec&lt;ConfigurationSource&gt;&gt;    \n}\n\nimpl&lt;'a&gt; ConfigurationBuilder{\n\n    pub fn new(base_source: ConfigurationSource) -&gt; ConfigurationBuilder{\n        let base_config: Value = from_str(\"{}\").unwrap();\n\n        let mut config_builder = ConfigurationBuilder{\n            config: base_config,\n            bundles: HashMap::new()\n        };\n\n        config_builder.merge_source(&amp;base_source);\n\n        return config_builder;\n    }\n\n    pub fn merge_sources(&amp;mut self, config_sources: &amp;Vec&lt;ConfigurationSource&gt;){        \n        for source in config_sources{\n            self.merge_source(source);\n        }\n    }\n\n    pub fn merge_source(&amp;mut self, config_source: &amp;ConfigurationSource){            \n        match config_source {\n            &amp;ConfigurationSource::StringContent(ref content) =&gt; {                \n                let config_override: Value = from_str(&amp;content[..]).unwrap();\n                merge(&amp;mut self.config, config_override);\n                //merge(&amp;mut config, &amp;json_override);\n            },\n            &amp;ConfigurationSource::FileContent(ref path) =&gt; {\n                let mut config_file = File::open(path).unwrap();\n                let mut config_file_content = String::new();\n                config_file.read_to_string(&amp;mut config_file_content).unwrap();\n\n                let config_override: Value = from_str(&amp;config_file_content[..]).unwrap();\n                merge(&amp;mut self.config, config_override);\n            }\n        }      \n    }\n\n    pub fn merge_bundle(&amp;mut self, bundle_key: &amp;str){\n        let sources = self.bundles.get(bundle_key).unwrap();\n        self.merge_sources(sources);\n    }\n}\n\nfn merge(a: &amp;mut Value, b: Value) {\n    match (a, b) {\n        (a @ &amp;mut Value::Object(_), Value::Object(b)) =&gt; {\n            let a = a.as_object_mut().unwrap();\n            for (k, v) in b {\n                merge(a.entry(k).or_insert(Value::Null), v);\n            }\n        }\n        (a, b) =&gt; *a = b,\n    }\n}\n</code></pre>\n\n<p>I get the following error when compiling</p>\n\n<pre><code>error[E0502]: cannot borrow `*self` as mutable because `self.bundles` is also borrowed as immutable\n  --&gt; src/lib.rs:62:9\n   |\n61 |         let sources = self.bundles.get(bundle_key).unwrap();\n   |                       ------------ immutable borrow occurs here\n62 |         self.merge_sources(sources);\n   |         ^^^^ mutable borrow occurs here\n63 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<ol>\n<li>How is the statement <code>let sources = self.bundles.get(bundle_key).unwrap();</code> imply an immutable borrow?</li>\n<li>How is <code>self</code> a mutable borrow? i.e. <code>self</code> is not assigned to any variable here using <code>let mut</code></li>\n<li>How do I avoid the aforementioned compile error. Note that if I comment out the whole <code>merge_bundle</code> method implementation, it compiles successfully.</li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 39, "user_id": 8936822, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bae11eeb709c79578e32c52ca3d24bb?s=128&d=identicon&r=PG&f=1", "display_name": "mochi", "link": "https://stackoverflow.com/users/8936822/mochi"}, "edited": false, "score": 0, "creation_date": 1510639512, "post_id": 47278709, "comment_id": 81508051, "body": "I get &quot;match arms have incompatible types&quot; error.     If I modify this line to Some(Type) =&gt; *Type, then I get &quot;cannot move out of borrowed content&quot;. How to make this work ? :("}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 0, "creation_date": 1510639589, "post_id": 47278709, "comment_id": 81508078, "body": "Show the full compiler error, in your question. That helps."}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 0, "creation_date": 1510639678, "post_id": 47278709, "comment_id": 81508099, "body": "Your <code>Type</code> is the enum name (or type), not its values, while <code>Type::TyInt</code> is a enum value. These are not the same type, as per the error message. It&#39;s perhaps similar to return a <code>f64</code> in one arm, and returning a <code>1.0</code> in another arm."}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 0, "creation_date": 1510639880, "post_id": 47278709, "comment_id": 81508181, "body": "Try matching with <code>Some(x) =&gt; x,</code> instead. <code>x</code> should be of <code>Type</code>, and you&#39;ll want to return its value (as far as I understand your code)."}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 0, "creation_date": 1510639970, "post_id": 47278709, "comment_id": 81508214, "body": "In all likelihood (again, if I understand your code correctly), you should probably use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>unwrap_or</code></a>: that&#39;ll return the value inside an option, or a default."}, {"owner": {"reputation": 39, "user_id": 8936822, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bae11eeb709c79578e32c52ca3d24bb?s=128&d=identicon&r=PG&f=1", "display_name": "mochi", "link": "https://stackoverflow.com/users/8936822/mochi"}, "edited": false, "score": 0, "creation_date": 1510640094, "post_id": 47278709, "comment_id": 81508265, "body": "I tried this &quot;Some(x) =&gt; x&quot; but get error &quot;match arms have incompatible types [E0308]: expected type <code>main::Type</code>    found type <code>&amp;main::Type</code> match arm with an incompatible type expected enum <code>main::Type</code>, found &amp;main::Type&quot;.   If I modify it to &quot;Some(x) =&gt; *x&quot; then I get error &quot;cannot move out of borrowed content&quot; :("}, {"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 0, "creation_date": 1510641223, "post_id": 47278709, "comment_id": 81508684, "body": "You can&#39;t move it, because it still belongs to the hashmap. That&#39;s why you see the second error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510666874, "post_id": 47278709, "comment_id": 81524598, "body": "<b>Please</b> read up on what idiomatic Rust code looks like. Variables should be <code>snake_case</code>, <i>not</i> <code>PascalCase</code>."}], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1510661301, "post_id": 47283421, "comment_id": 81520753, "body": "Whilst possibly an oversight by the OP, you&#39;ve not fixed the ownership issue with <code>TypeEnv</code>. The <code>getv</code> function takes ownership of <code>self</code> ... and therefore <a href=\"http://play.integer32.com/?gist=e9e3223c80ef59a490f8979c290500e9&amp;version=stable\" rel=\"nofollow noreferrer\">you can&#39;t actually use this type in a useful way</a>... even though it compiles when you don&#39;t use it."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1510662322, "post_id": 47283421, "comment_id": 81521404, "body": "@SimonWhitehead Good point, I&#39;ve now fixed <code>getv</code> to accept <code>&amp;self</code>, which is almost certainly what the OP intended. Rust&#39;s type system is so good that it almost spoils us with &quot;if it compiles, it&#39;s perfect&quot; mindset."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 7, "last_activity_date": 1510672523, "last_edit_date": 1510672523, "creation_date": 1510655532, "answer_id": 47283421, "question_id": 47278709, "link": "https://stackoverflow.com/questions/47278709/how-to-handle-the-value-i-get-from-a-hashmap/47283421#47283421", "title": "How to handle the value I get from a HashMap", "body": "<p><code>HashMap::get</code> returns an <code>Option&lt;&amp;Type&gt;</code>, not an <code>Option&lt;Type&gt;</code>, which is why just returning the matched value fails to compile.</p>\n\n<p><code>get</code> provides a reference because in Rust you cannot simply return the actual value that is in the hash table - you need to either <em>clone</em> it (make a copy, potentially expensive), <em>remove</em> it from the container and transfer it to the caller, or return a <em>reference</em> to the value inside. <code>HashMap::get</code> chooses the last option because it is cheap while providing the greatest flexibility to the caller, which can choose to either inspect the value or clone it.</p>\n\n<p>For your enum that consists of a single machine word, copying the value would be the optimal approach. (For more complex enums, a better approach is to return a reference as shown in <a href=\"https://stackoverflow.com/a/47285228/1600898\">Simon's answer</a>.) Copying requires:</p>\n\n<ul>\n<li><p>making <code>Type</code> copyable, by marking it with the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a> trait using the <code>#[derive(Copy, Clone)]</code> directive at the type definition.</p></li>\n<li><p>returning the copy from <code>getv</code> by dereferencing the matched value using <code>*matched_value</code>, or by using <code>&amp;</code> in the pattern.</p></li>\n</ul>\n\n<p>Finally, your <code>getv</code> method consumes the object, which means that you can call it only once. This is almost certainly not what was intended - it should accept <code>&amp;self</code> instead. With those changes, the resulting code looks like this:</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Copy, Clone)]\nenum Type {\n    TyInt,\n    TyBool,\n}\n\nstruct TypeEnv {\n    env: HashMap&lt;char, Type&gt;,\n}\n\nimpl TypeEnv {\n    fn set(&amp;mut self, name: char, ty: Type) {\n        self.env.insert(name, ty);\n    }\n\n    fn getv(&amp;self, name: char) -&gt; Type {\n        match self.env.get(&amp;name) {\n            Some(&amp;v) =&gt; v,\n            None =&gt; Type::TyInt,\n        }\n    }\n}\n</code></pre>\n\n<p>If the type needs to contain non-<code>Copy</code> data, then you can make it only <code>Clone</code> instead, and return <code>v.clone()</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1510662492, "post_id": 47285228, "comment_id": 81521520, "body": "If <code>Type</code> is something as simple as a C-style enum, i.e. if it fits into a machine word, then it makes no sense to return it by reference, just like it rarely makes sense to return an <code>usize</code> by reference. Doing so is valid Rust, but it carries no performance benefits (and can in fact cause penalties), while negatively impacting ergonomics of the API."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1510665451, "post_id": 47285228, "comment_id": 81523580, "body": "A fair point you make @user4815162342. I figured offering an alternative still helps the OP. I generally work off the assumption that the example provided is much smaller in scope than what the actual problem is, since we do kind of expect an MCVE and sometimes people reach for small/fast copyable types."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1510670953, "post_id": 47285228, "comment_id": 81527669, "body": "Agreed - if <code>Type</code> is at all heavy, you&#39;d want to avoid copying it. To clarify what I meant by &quot;negatively impacting ergonomics&quot;, notice the unnatural block enclosing the first usage of <code>arg</code>. This is a consequence of <code>arg</code> being a shared reference to data inside <code>te</code> whose continued existence precludes creating a mutable reference to <code>te</code> required by <code>TypeEnv::set</code>."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 3, "last_activity_date": 1510661490, "last_edit_date": 1510661490, "creation_date": 1510660563, "answer_id": 47285228, "question_id": 47278709, "link": "https://stackoverflow.com/questions/47278709/how-to-handle-the-value-i-get-from-a-hashmap/47285228#47285228", "title": "How to handle the value I get from a HashMap", "body": "<p>You don't <em>have</em> to make your type <code>Copy</code> or <code>Clone</code> ... if you're happy working with the reference.</p>\n\n<p>When things like this pop up while writing Rust, its generally best to re-evaluate how you're calling the code. Can it be made simpler?</p>\n\n<p>You can either have the caller expect the <code>Option&lt;&amp;V&gt;</code>, or just force <em>something</em> out... perhaps like this:</p>\n\n<pre><code>fn getv(&amp;self, name: char) -&gt; &amp;Type {\n    self.env.get(&amp;name).unwrap_or(&amp;Type::TyInt)\n}\n</code></pre>\n\n<p>This simplifies your code and makes it pretty clear what you're after. <a href=\"http://play.integer32.com/?gist=ec52f29a1e3a78f5efa6d3f0332d8bf6&amp;version=stable\" rel=\"nofollow noreferrer\">Here it is in action</a>:</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\nenum Type {\n    TyInt,\n    TyBool,\n}\n\nstruct TypeEnv {\n    env: HashMap&lt;char, Type&gt;,\n}\n\nimpl TypeEnv {\n    fn set(&amp;mut self, name: char, ty: Type) {\n        self.env.insert(name, ty);\n    }\n\n    fn getv(&amp;self, name: char) -&gt; &amp;Type {\n        self.env.get(&amp;name).unwrap_or(&amp;Type::TyInt)\n    }\n}\n\nfn main() {\n    let mut te = TypeEnv {\n        env: HashMap::new(),\n    };\n    {\n        let arg = te.getv('c');\n\n        println!(\"{:?}\", arg); // \"TyInt\" - because nothing was found\n    }\n\n    te.set('c', Type::TyBool);\n\n    let arg = te.getv('c'); // \"TyBool\" - because we stored it in the line above.\n\n    println!(\"{:?}\", arg);\n}\n</code></pre>\n\n<p>Also, your existing implementation of <code>getv</code> takes ownership of <code>self</code> ... notice how I added the reference <code>getv(&amp;self)</code>. If you don't have this, this type (as far as I can tell) becomes <a href=\"http://play.integer32.com/?gist=e9e3223c80ef59a490f8979c290500e9&amp;version=stable\" rel=\"nofollow noreferrer\">basically useless</a>.</p>\n"}], "owner": {"reputation": 39, "user_id": 8936822, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1bae11eeb709c79578e32c52ca3d24bb?s=128&d=identicon&r=PG&f=1", "display_name": "mochi", "link": "https://stackoverflow.com/users/8936822/mochi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2027, "favorite_count": 2, "answer_count": 2, "score": 2, "last_activity_date": 1510672523, "creation_date": 1510639439, "last_edit_date": 1510666782, "question_id": 47278709, "link": "https://stackoverflow.com/questions/47278709/how-to-handle-the-value-i-get-from-a-hashmap", "title": "How to handle the value I get from a HashMap", "body": "<p>I want my <code>getv()</code> function return the value from a <code>HashMap</code>. I get errors no matter how I modify my code:</p>\n\n<pre><code>enum Type {\n    TyInt,\n    TyBool,\n}\n\nstruct TypeEnv {\n    Env: HashMap&lt;char, Type&gt;,\n}\nimpl TypeEnv {\n    fn set(&amp;mut self, name: char, ty: Type) {\n        self.Env.insert(name, ty);\n    }\n\n    fn getv(self, name: char) -&gt; Type {\n        match self.Env.get(&amp;name) {\n            Some(Type) =&gt; Type, // &lt;------- Always error here\n            None =&gt; Type::TyInt,\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["loops", "for-loop", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 13, "creation_date": 1510616869, "post_id": 47275339, "comment_id": 81502040, "body": "<code>for n in (0..max).rev()</code>"}], "owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 5131, "favorite_count": 0, "closed_date": 1510616774, "answer_count": 0, "score": 4, "last_activity_date": 1510617947, "creation_date": 1510616450, "last_edit_date": 1510617947, "question_id": 47275339, "link": "https://stackoverflow.com/questions/47275339/how-to-write-a-loop-in-rust-with-a-decreasing-range-including-the-0", "closed_reason": "Duplicate", "title": "How to write a loop in Rust with a decreasing range including the 0?", "body": "<p>I need to write a loop in Rust that runs its body from a value down to and including <code>n = 0</code>.  At first, I wrote it like this:</p>\n\n<pre><code>for n in max..0 {\n    // ...\n}\n</code></pre>\n\n<p>However, it just runs until <code>n = 1</code>.</p>\n\n<p>The best alternative I can think of is this:</p>\n\n<pre><code>let mut n = max;\nloop {\n    // ...\n\n    if n == 0 {\n        break;\n    }\n    n -= 1;\n}\n</code></pre>\n\n<p>This solution is really clumsy and doesn't satisfy me. Is there a better way of writing that loop, e.g. a for-loop with a range including the right boundary value of the <code>..</code>?</p>\n"}, {"tags": ["powershell", "cmd", "colors", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 10781, "user_id": 447901, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/11ea5dd4ad290e75422e32e1e340772e?s=128&d=identicon&r=PG", "display_name": "lit", "link": "https://stackoverflow.com/users/447901/lit"}, "edited": false, "score": 0, "creation_date": 1510614067, "post_id": 47273198, "comment_id": 81501219, "body": "This sounds like a change in the <code>cargo</code> project. Have you posted at <a href=\"https://github.com/rust-lang/cargo/issues/\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues</a>"}, {"owner": {"reputation": 53, "user_id": 5455712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/am33b.png?s=128&g=1", "display_name": "Andy Bitz", "link": "https://stackoverflow.com/users/5455712/andy-bitz"}, "reply_to_user": {"reputation": 10781, "user_id": 447901, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/11ea5dd4ad290e75422e32e1e340772e?s=128&d=identicon&r=PG", "display_name": "lit", "link": "https://stackoverflow.com/users/447901/lit"}, "edited": false, "score": 0, "creation_date": 1510619661, "post_id": 47273198, "comment_id": 81502778, "body": "Wanted to do this first, but I tried it on other devices with the same windows version (or lower ones) and it worked. I guess this is a problem on my pc, but I have no idea where it could come from. But thanks, I&#39;ll probably post it there too."}, {"owner": {"reputation": 53, "user_id": 5455712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/am33b.png?s=128&g=1", "display_name": "Andy Bitz", "link": "https://stackoverflow.com/users/5455712/andy-bitz"}, "reply_to_user": {"reputation": 10781, "user_id": 447901, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/11ea5dd4ad290e75422e32e1e340772e?s=128&d=identicon&r=PG", "display_name": "lit", "link": "https://stackoverflow.com/users/447901/lit"}, "edited": false, "score": 0, "creation_date": 1510621280, "post_id": 47273198, "comment_id": 81503180, "body": "Well, I just tested it on another device with the same Windows version and it had the same bug."}], "answers": [{"tags": [], "owner": {"reputation": 53, "user_id": 5455712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/am33b.png?s=128&g=1", "display_name": "Andy Bitz", "link": "https://stackoverflow.com/users/5455712/andy-bitz"}, "is_accepted": true, "score": 1, "last_activity_date": 1510998572, "creation_date": 1510998572, "answer_id": 47364648, "question_id": 47273198, "link": "https://stackoverflow.com/questions/47273198/color-codes-are-shown-instead-of-colors/47364648#47364648", "title": "Color codes are shown instead of colors", "body": "<p><a href=\"https://github.com/rust-lang/cargo/issues/4722\" rel=\"nofollow noreferrer\">Issue on Github</a>.</p>\n\n<p>The problem was the <code>term</code> environment variable which doesn't work properly with the <a href=\"https://crates.io/crates/termcolor\" rel=\"nofollow noreferrer\">termcolor</a> crate used by cargo.</p>\n"}], "owner": {"reputation": 53, "user_id": 5455712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/am33b.png?s=128&g=1", "display_name": "Andy Bitz", "link": "https://stackoverflow.com/users/5455712/andy-bitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 559, "favorite_count": 0, "accepted_answer_id": 47364648, "answer_count": 1, "score": 2, "last_activity_date": 1510998572, "creation_date": 1510605708, "last_edit_date": 1510702921, "question_id": 47273198, "link": "https://stackoverflow.com/questions/47273198/color-codes-are-shown-instead-of-colors", "title": "Color codes are shown instead of colors", "body": "<p>Whenever I execute <code>cargo run</code>, all colors in the console are displayed as color-codes. Other programs which display colors work normal and show the color.</p>\n\n<p>When I redirect stdout like <code>cargo run &gt; output.txt</code> all colors are shown just fine. This is the same for cmd, powershell and hyper (terminal emulator I use).</p>\n\n<p><img src=\"https://i.gyazo.com/2b3c73251850710f2f59ed23fa83c43e.png\" alt=\"color codes\"></p>\n\n<p>cargo 0.20.0 works as expected, but cargo 0.21.1 has the same bug as cargo@0.22.0.</p>\n\n<p>I'm using Windows 10 16299.19. I'm not using the legacy console and I already deleted the <code>Computer\\HKEY_CURRENT_USER\\Console</code> in the registry to reset the cmd colors.</p>\n\n<p>I then tried it on an other account on my machine and everything worked. A clean install of windows didn't help.</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510598408, "post_id": 47271178, "comment_id": 81493408, "body": "Do you understand that <code>IntoFuture</code> is a trait and there&#39;s no way to &quot;just&quot; make something into a trait in stable Rust?"}, {"owner": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510598839, "post_id": 47271178, "comment_id": 81493630, "body": "@Shepmaster I understand it&#39;s a Trait. I&#39;m hoping I can add some explicit type hints or casting or something. It&#39;s easy enough to have each of the arms return an actual future using e.g., future::ok() but then I run into problems where some of the resulting impls are AndThen and some are FutureResult and when I try to assign them to a variable typed with a Trait they should all have in common, it complains about not being marked for Sized. Maybe I should be taking some completely different approach?"}], "answers": [{"comments": [{"owner": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "edited": false, "score": 0, "creation_date": 1510603707, "post_id": 47271465, "comment_id": 81496324, "body": "Could you add some clarification around creating an &quot;enum for each variant and ... implementing Future ... by delegating to each inner implementation&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "edited": false, "score": 0, "creation_date": 1510627077, "post_id": 47271465, "comment_id": 81504634, "body": "@steamer25 I played a bit with the enum but didn&#39;t really like it so I put up an alternative. I see your original had <code>RecurseUrls(Vec&lt;RecurseUrl&gt;)</code> \u2014 is it possible to take a single URI and then need to search <i>multiple</i> from that?"}, {"owner": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "edited": false, "score": 0, "creation_date": 1510670799, "post_id": 47271465, "comment_id": 81527520, "body": "Haven&#39;t looked through the updated answer yet (big thanks!) but yeah, my thought is to handle redirects and links to subsequent pages using the same logic. I.e., the HTTP response might send a redirect for the requested page or it might send HTML with a bunch of hrefs for new pages to chase. The depth of recursion should be limited in either case."}, {"owner": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "edited": false, "score": 0, "creation_date": 1510673161, "post_id": 47271465, "comment_id": 81529283, "body": "Thanks again. The Future implementation example gives me a better understanding of the framework. I&#39;ll probably end up with some sort of queuing for the recursion, potentially allowing them to be processed in other threads/event-loops."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "edited": false, "score": 0, "creation_date": 1510673363, "post_id": 47271465, "comment_id": 81529435, "body": "@steamer25 not for the pure <i>recursion</i> of the redirects \u2014 that&#39;s already handled by this future implementation. If you mean for continuing to crawl the outgoing links, then yes, a queue would make sense. I have an idea in the back of my head that I&#39;ll work on sometime later today."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1510685356, "last_edit_date": 1510685356, "creation_date": 1510598960, "answer_id": 47271465, "question_id": 47271178, "link": "https://stackoverflow.com/questions/47271178/wrap-enum-variants-in-intofuture/47271465#47271465", "title": "Wrap enum variants in IntoFuture?", "body": "<blockquote>\n  <p>I want all of the match arms to be taken as <code>futures::future::IntoFuture</code>, since that's what the outer <code>and_then</code> is expecting from the callback/closure/delegate.</p>\n</blockquote>\n\n<p><code>and_then</code> expects that the return type of the closure to be a <strong>single concrete type</strong> that <em>implements the trait</em> <code>IntoFuture</code>. Your <code>match</code> returns multiple concrete types \u2014 this is not allowed in Rust as the compiler wouldn't know how much stack space to allocate.</p>\n\n<p>You need to convert all the various types into a single unified type. The <em>easiest</em> is to box them all, creating a trait object (<code>Box&lt;Future&lt;Item = FetchResult, Error = hyper::Error&gt;&gt;</code>):</p>\n\n<pre><code>let work = client.get(url).and_then(|res| -&gt; Box&lt;Future&lt;Item = FetchResult, Error = hyper::Error&gt;&gt; {\n        match res.status() {\n            StatusCode::TemporaryRedirect =&gt; Box::new(handle_redirect(&amp;res)),\n            StatusCode::PermanentRedirect =&gt; Box::new(handle_redirect(&amp;res)),\n            StatusCode::Ok =&gt; Box::new(\n                res.body()\n                    .concat2()\n                    .map(move |body| FetchResult::NothingUseful()),\n            ),\n            _ =&gt; Box::new(future::ok(FetchResult::NothingUseful())),\n        }\n    },\n);\n</code></pre>\n\n<p>You could also create your own type and implement <code>Future</code> for that. This allows you to avoid any allocation:</p>\n\n<pre><code>#[macro_use]\nextern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse futures::{Async, Future, Poll};\nuse hyper::client::{FutureResponse, HttpConnector};\nuse hyper::{Client, Response, StatusCode, Uri};\nuse tokio_core::reactor::Core;\n\nstruct RecurseUrl {\n    client: Client&lt;HttpConnector&gt;,\n    future: FutureResponse,\n    remaining_attempts: u8,\n}\n\nimpl RecurseUrl {\n    fn new(client: Client&lt;HttpConnector&gt;, uri: Uri) -&gt; Self {\n        let future = client.get(uri);\n        Self {\n            client,\n            future,\n            remaining_attempts: 3,\n        }\n    }\n}\n\nimpl Future for RecurseUrl {\n    type Item = hyper::Response;\n    type Error = hyper::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        let response = try_ready!(self.future.poll());\n\n        match response.status() {\n            StatusCode::TemporaryRedirect | StatusCode::PermanentRedirect =&gt; {\n                if self.remaining_attempts == 0 {\n                    panic!(\"return a real error\")\n                }\n\n                let next_uri = get_redirect_uri_from_response(&amp;response);\n                let next_future = self.client.get(next_uri);\n                self.future = next_future;\n                self.remaining_attempts -= 1;\n\n                Ok(Async::NotReady)\n            }\n            StatusCode::Ok =&gt; Ok(Async::Ready(response)),\n            _ =&gt; panic!(\"return a real error\"),\n        }\n    }\n}\n\nfn get_redirect_uri_from_response(_response: &amp;Response) -&gt; Uri {\n    unimplemented!()\n}\n\nfn main() {\n    let uri = \"http://someurl.com\".parse().expect(\"Unable to parse URL\");\n\n    let mut core = Core::new().expect(\"Unable to instantiate Tokio Core\");\n    let client = Client::new(&amp;core.handle());\n\n    let work = RecurseUrl::new(client, uri);\n    core.run(work).expect(\"Problem running work\");\n}\n</code></pre>\n\n<p>You could then handle reading URIs out of the bodies of the responses with something like this:</p>\n\n<pre><code>use futures::stream::{Stream, FuturesUnordered, Concat2};\n\nstruct WebCrawler {\n    client: Client&lt;HttpConnector&gt;,\n    to_fetch: FuturesUnordered&lt;FutureResponse&gt;,\n    fetching: FuturesUnordered&lt;Concat2&lt;hyper::Body&gt;&gt;,\n}\n\nimpl WebCrawler {\n    fn new(client: Client&lt;HttpConnector&gt;, uri: Uri) -&gt; Self {\n        let future = client.get(uri);\n        let to_fetch: FuturesUnordered&lt;_&gt; = Some(future).into_iter().collect();\n\n        Self {\n            client,\n            to_fetch,\n            fetching: FuturesUnordered::new(),\n        }\n    }\n}\n\nimpl Stream for WebCrawler {\n    type Item = hyper::Chunk;\n    type Error = hyper::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        loop {\n            match self.to_fetch.poll()? {\n                Async::Ready(Some(s)) =&gt; {\n                    self.fetching.push(s.body().concat2())\n                },\n                Async::Ready(None) | Async::NotReady =&gt; break,\n            }\n        }\n\n        loop {\n            match self.fetching.poll()? {\n                Async::Ready(Some(body)) =&gt; {\n                    for uri in get_uris_from_body(&amp;body) {\n                        self.to_fetch.push(self.client.get(uri));\n                    }\n                    return Ok(Async::Ready(Some(body)));\n                },\n                Async::Ready(None) | Async::NotReady =&gt; break,\n            }\n        }\n\n        if self.to_fetch.is_empty() &amp;&amp; self.fetching.is_empty() {\n            Ok(Async::Ready(None))\n        } else {\n            Ok(Async::NotReady)\n        }\n    }\n}\n\nfn get_uris_from_body(_body: &amp;hyper::Chunk) -&gt; Vec&lt;Uri&gt; {\n    unimplemented!()\n}\n</code></pre>\n\n<p>This implementation was cribbed from that of <a href=\"https://github.com/alexcrichton/futures-rs/blob/0.1.17/src/stream/buffer_unordered.rs\" rel=\"nofollow noreferrer\"><code>BufferUnordered</code></a>. You'd need to enhance it to pass the depth of the crawl around and manage it, but I think this is a good sketch of what is possible.</p>\n"}], "owner": {"reputation": 8285, "user_id": 93345, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c40d2fd90802e59e9b9ee70cc84c5e?s=128&d=identicon&r=PG", "display_name": "steamer25", "link": "https://stackoverflow.com/users/93345/steamer25"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 0, "closed_date": 1558568274, "accepted_answer_id": 47271465, "answer_count": 1, "score": 1, "last_activity_date": 1510685356, "creation_date": 1510597865, "last_edit_date": 1510599291, "question_id": 47271178, "link": "https://stackoverflow.com/questions/47271178/wrap-enum-variants-in-intofuture", "closed_reason": "Duplicate", "title": "Wrap enum variants in IntoFuture?", "body": "<p>I'm trying to compile something like the following code. It seems like I need to help it understand that I want all of the match arms to be taken as <code>futures::future::IntoFuture</code>, since that's what the outer <a href=\"https://docs.rs/futures/0.1.16/futures/future/trait.Future.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a> is expecting from the callback/closure/delegate.</p>\n\n<p>For now all of the arms are stubbed with the simplest enum variant, <code>NothingUseful()</code>, but my goal is ultimately to take various actions depending on the returned HTTP status code and/or body contents when applicable.</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse futures::{future, Future, Stream};\nuse hyper::{Client, Error as HyperError, Response, StatusCode, Uri};\nuse tokio_core::reactor::Core;\n\nstruct RecurseUrl {\n    uri: Uri,\n    remaining_attempts: u8,\n}\n\nenum FetchResult {\n    SimpleData(u16),\n    RecurseUrls(Vec&lt;RecurseUrl&gt;),\n    NothingUseful(),\n}\n\nfn handle_redirect(res: &amp;Response) -&gt; future::FutureResult&lt;FetchResult, HyperError&gt; {\n    future::ok(FetchResult::NothingUseful())\n}\n\nfn main() {\n    let url = \"http://someurl.com\"\n        .parse()\n        .expect(\"Unable to parse URL\");\n\n    let mut core = Core::new().expect(\"Unable to instantiate Tokio Core\");\n    let client = Client::new(&amp;core.handle());\n\n    let work = client.get(url).and_then(|res| {\n\n        match res.status() {\n            StatusCode::TemporaryRedirect =&gt; handle_redirect(&amp;res),\n            StatusCode::PermanentRedirect =&gt; handle_redirect(&amp;res),\n            StatusCode::Ok =&gt; {\n                res.body().concat2().and_then(move |body| {\n                    Ok(FetchResult::NothingUseful())\n                })\n            },\n            _ =&gt; {\n                Ok(FetchResult::NothingUseful())\n            }\n        }\n    });\n\n    core.run(work).expect(\"Problem running work\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0308]: match arms have incompatible types\n  --&gt; main.rs:34:13\n   |\n34 | /             match res.status() {\n35 | |                 StatusCode::TemporaryRedirect =&gt; handle_redirect(&amp;res),\n36 | |                 StatusCode::PermanentRedirect =&gt; handle_redirect(&amp;res),\n37 | |                 StatusCode::Ok =&gt; {\n...  |\n44 | |                 }\n45 | |             }\n   | |_____________^ expected struct `futures::FutureResult`, found struct `futures::AndThen`\n   |\n   = note: expected type `futures::FutureResult&lt;FetchResult, hyper::Error&gt;`\n              found type `futures::AndThen&lt;futures::stream::Concat2&lt;hyper::Body&gt;, std::result::Result&lt;FetchResult, hyper::Error&gt;, [closure@main.rs:38:51: 40:22]&gt;`\nnote: match arm with an incompatible type\n  --&gt; main.rs:37:35\n   |\n37 |                   StatusCode::Ok =&gt; {\n   |  ___________________________________^\n38 | |                     res.body().concat2().and_then(move |body| {\n39 | |                         Ok(FetchResult::NothingUseful())\n40 | |                     })\n41 | |                 },\n   | |_________________^\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1510596366, "post_id": 47268434, "comment_id": 81492325, "body": "<code>n == fixed.len()</code> is redundant with <code>read_to_end</code>, since <code>n</code> always equals <code>buf.len()</code> and <code>buf == fixed</code> must compare the lengths of the slices first."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1510596511, "post_id": 47268434, "comment_id": 81492395, "body": "@trentcl a partial read would mean that <code>buf.len()</code> is shorter, but yeah, the equality check does the length anyway."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1510597050, "post_id": 47268434, "comment_id": 81492699, "body": "However, it took me long enough to confirm that that it might be better just to leave the check in rather than make assumptions. :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1510597976, "last_edit_date": 1510597976, "creation_date": 1510588637, "answer_id": 47268434, "question_id": 47268301, "link": "https://stackoverflow.com/questions/47268301/how-to-compare-a-slice-with-a-vector-in-rust/47268434#47268434", "title": "How to compare a slice with a vector in Rust?", "body": "<p>As the error message states:</p>\n\n<blockquote>\n  <p>the trait <code>std::cmp::PartialEq&lt;std::vec::Vec&lt;u8&gt;&gt;</code> is not implemented for <code>[u8]</code></p>\n</blockquote>\n\n<p>However, the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-PartialEq%3C%26%27b%20%5BB%5D%3E\" rel=\"noreferrer\">opposite direction <em>is</em> implemented</a>:</p>\n\n<pre><code>Ok(n) =&gt; Ok(n == fixed.len() &amp;&amp; buf == fixed),\n</code></pre>\n\n<hr>\n\n<p>Additionally, you will need to mark your parameter as mutable: <code>mut reader: R</code>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\" rel=\"noreferrer\"><code>Read::read_exact</code></a> performs the <code>n == fixed.len()</code> check for you.</p>\n\n<p>Allocating a vector full of zeroes is not as efficient as it could be. You could instead limit the input and read into a vector, allocating as you go:</p>\n\n<pre><code>fn parse&lt;R&gt;(reader: R, fixed: &amp;[u8]) -&gt; io::Result&lt;bool&gt;\nwhere\n    R: Read,\n{\n    let mut buf = Vec::with_capacity(fixed.len());\n    reader\n        .take(fixed.len() as u64)\n        .read_to_end(&amp;mut buf)\n        .map(|_| buf == fixed)\n}\n</code></pre>\n\n<p>The implementation of equality for slices already compares the lengths of the two sides, so I've also removed that, while switching to using combinators.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4512, "favorite_count": 0, "accepted_answer_id": 47268434, "answer_count": 1, "score": 6, "last_activity_date": 1510597976, "creation_date": 1510588180, "last_edit_date": 1510588660, "question_id": 47268301, "link": "https://stackoverflow.com/questions/47268301/how-to-compare-a-slice-with-a-vector-in-rust", "title": "How to compare a slice with a vector in Rust?", "body": "<p>How do I compare an array slice with a vector in Rust? The code in question:</p>\n\n<pre><code>fn parse&lt;R: io::Read&gt;(reader: R, fixed: &amp;[u8]) -&gt; io::Result&lt;bool&gt; {\n    let mut buf = vec![0; fixed.len()];\n    match reader.read(&amp;mut buf) {\n        Ok(n) =&gt; Ok(n == fixed.len() &amp;&amp; fixed == &amp;mut buf),\n        Err(e) =&gt; Err(e)\n    }\n}\n</code></pre>\n\n<p>The error that I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[u8]: std::cmp::PartialEq&lt;std::vec::Vec&lt;u8&gt;&gt;` is not satisfied\n  --&gt; src/main.rs:32:47\n   |\n32 |         Ok(n) =&gt; Ok(n == fixed.len() &amp;&amp; fixed == &amp;mut buf),\n   |                                               ^^ can't compare `[u8]` with `std::vec::Vec&lt;u8&gt;`\n   |\n   = help: the trait `std::cmp::PartialEq&lt;std::vec::Vec&lt;u8&gt;&gt;` is not implemented for `[u8]`\n</code></pre>\n\n<p>The answer must be simple but it is eluding me.</p>\n"}, {"tags": ["casting", "rust", "arrayfire"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1510586399, "post_id": 47267613, "comment_id": 81485984, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, otherwise we will be blindly guessing over what the concrete issue might be."}], "answers": [{"comments": [{"owner": {"reputation": 384, "user_id": 1723676, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/y8ILT.jpg?s=128&g=1", "display_name": "Ronny", "link": "https://stackoverflow.com/users/1723676/ronny"}, "edited": false, "score": 0, "creation_date": 1510593452, "post_id": 47268171, "comment_id": 81490721, "body": "Thanks a lot! didn&#39;t know about the turbofish syntax."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 1, "last_activity_date": 1510587826, "creation_date": 1510587826, "answer_id": 47268171, "question_id": 47267613, "link": "https://stackoverflow.com/questions/47267613/casting-of-arrayfirearray/47268171#47268171", "title": "Casting of `arrayfire::Array`", "body": "<p>The signature for <a href=\"http://arrayfire.org/arrayfire-rust/arrayfire/struct.Array.html#method.cast\" rel=\"nofollow noreferrer\"><code>cast</code></a> is <code>cast&lt;T: HasAfEnum&gt;(&amp;self) -&gt; Array</code></p>\n\n<p><code>Array</code> type doesn't have type parameters. It is the <code>cast</code> method which has one. You need to provide type parameter to the <code>cast</code> method using turbofish syntax <code>::&lt;_&gt;</code></p>\n\n<p><code>let im2 = im.cast::&lt;u8&gt;();</code></p>\n"}], "owner": {"reputation": 384, "user_id": 1723676, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/y8ILT.jpg?s=128&g=1", "display_name": "Ronny", "link": "https://stackoverflow.com/users/1723676/ronny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 47268171, "answer_count": 1, "score": -1, "last_activity_date": 1510597342, "creation_date": 1510586200, "last_edit_date": 1510597342, "question_id": 47267613, "link": "https://stackoverflow.com/questions/47267613/casting-of-arrayfirearray", "title": "Casting of `arrayfire::Array`", "body": "<p>I'm using the <a href=\"https://crates.io/crates/arrayfire\" rel=\"nofollow noreferrer\">arrayfire</a> crate to open an image with <code>af::load_image</code>. This gives me a <code>f32</code> array that I can do some processing on. After I am done, I would like to save it as an <code>u8</code> image using <code>af::save_image</code>:</p>\n\n<pre><code>extern crate arrayfire as af;\n\nfn main() {\n    let im = af::load_image(\"image\".into(), false);\n    //let im2: af::Array = im.cast(); // Error: cannot infer type for T\n    //let im2: af::Array&lt;DType::U8&gt; = im.cast(); // Error: expected no type arguments\n}\n</code></pre>\n\n<p>I can't figure out how to convert the array into a <code>u8</code> type. I looked into the <code>from</code> method but I have no idea how to use it.</p>\n"}, {"tags": ["github", "rust"], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": true, "score": 3, "last_activity_date": 1510567841, "creation_date": 1510567841, "answer_id": 47261792, "question_id": 47260455, "link": "https://stackoverflow.com/questions/47260455/how-to-know-if-a-closed-github-issue-was-fixed-or-not/47261792#47261792", "title": "How to know if a closed GitHub issue was fixed or not?", "body": "<p>From the comment chain you can see </p>\n\n<blockquote>\n  <p>rust-highfive closed this on 25 Dec 2014</p>\n</blockquote>\n\n<p>You can also see the same user added a comment just before closing the issue</p>\n\n<blockquote>\n  <p>This issue has been moved to the RFCs repo: <a href=\"https://github.com/rust-lang/rfcs/issues/542\" rel=\"nofollow noreferrer\">rust-lang/rfcs#542</a></p>\n</blockquote>\n\n<p>The linked RFC (Request for Comments) is still open implying that it is still open for discussion. </p>\n\n<p>The lifetime for Rust RFCs can be seen at <a href=\"https://github.com/rust-lang/rfcs#the-rfc-life-cycle\" rel=\"nofollow noreferrer\">the-rfc-life-cycle</a>.</p>\n\n<p>It appears the most popular consensus is to current use the <a href=\"https://crates.io/crates/maplit\" rel=\"nofollow noreferrer\">maplit</a> crate.</p>\n"}], "owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 47261792, "answer_count": 1, "score": 1, "last_activity_date": 1510578549, "creation_date": 1510563867, "last_edit_date": 1510578549, "question_id": 47260455, "link": "https://stackoverflow.com/questions/47260455/how-to-know-if-a-closed-github-issue-was-fixed-or-not", "title": "How to know if a closed GitHub issue was fixed or not?", "body": "<p>There is <a href=\"https://github.com/rust-lang/rust/issues/14726\" rel=\"nofollow noreferrer\">an issue</a> on the <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">Rust GitHub repository</a> that someone else opened where I am interested in a solution being provided. The issue is closed, but I don't know if it has been solved or not.</p>\n\n<p>I read the GitHub help pages about issues, but I didn't find what I am looking for.</p>\n\n<p>How can I find out the reason of the closing of that issue? Is this issue fixed? Did they include macros for creating e.g. <code>HashMap</code>s with initial values into the standard library?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1510521506, "post_id": 47253965, "comment_id": 81458532, "body": "Are you already familiar with <code>Cow</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510522302, "post_id": 47253965, "comment_id": 81458781, "body": "Highly related: <a href=\"https://stackoverflow.com/q/47225805/155423\">Is there a way to write a function which accepts a reference, a move, or a conversion using only traits from the standard library?</a>"}, {"owner": {"reputation": 145, "user_id": 2923678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c8707cd05b22a6555b0b0a565d209e?s=128&d=identicon&r=PG&f=1", "display_name": "10101", "link": "https://stackoverflow.com/users/2923678/10101"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510522562, "post_id": 47253965, "comment_id": 81458869, "body": "Oh, I wasn&#39;t aware of <code>Cow</code>.. That&#39;s pretty much what I was looking for, must have missed it. Although, it does seem unnecessary to wrap an input in an enum in some cases (i.e. <code>Cow</code> is to dynamic dispatch as my <code>TraitInQuestion</code> is to static dispatch, if that analogy makes sense)"}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 2, "last_activity_date": 1510566185, "last_edit_date": 1510566185, "creation_date": 1510557865, "answer_id": 47259016, "question_id": 47253965, "link": "https://stackoverflow.com/questions/47253965/generic-cloneable-movable-parameter-as-function-argument/47259016#47259016", "title": "Generic cloneable/movable parameter as function argument", "body": "<p>As @Shepmaster pointed out there is <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>; but you'd need to manually create the <code>Cow::Borrowed(&amp;a)</code> or <code>Cow::Owned(a)</code> instances, and the wrapped (<code>Owned</code>) type must always implement <code>Clone</code> (for <code>T: ToOwned&lt;Owned=T&gt;</code>).</p>\n\n<p>(The <code>Clone</code> for <code>ToOwned::Owned</code> might not be strictly necessary with custom <code>ToOwned</code> implementations; but <code>.borrow().to_owned()</code> acts like a <code>.clone()</code>, so there is no reason to hide it.)</p>\n\n<p>Your own trait is a nice start for an alternative, although you should use generic implementations.  That way you don't require a type to implement <code>Clone</code> as long as you don't pass a reference:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b209753a9c1439b7fc60773c6c48a755&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>trait CloneOrNoOp&lt;T&gt; {\n    fn clone_or_no_op(self) -&gt; T;\n}\n\nimpl&lt;T&gt; CloneOrNoOp&lt;T&gt; for T {\n    fn clone_or_no_op(self) -&gt; T {\n        self\n    }\n}\n\nimpl&lt;'a, T: Clone&gt; CloneOrNoOp&lt;T&gt; for &amp;'a T {\n    fn clone_or_no_op(self) -&gt; T {\n        self.clone()\n    }\n}\n\nstruct MyStructNoClone;\n\n#[derive(Debug)]\nstruct MyStruct {\n    value: u64,\n}\n\nimpl Clone for MyStruct {\n    fn clone(&amp;self) -&gt; Self {\n        println!(\"cloning {:?}\", self);\n        MyStruct { value: self.value }\n    }\n}\n\nfn test&lt;T: CloneOrNoOp&lt;MyStruct&gt;&gt;(t: T) {\n    let _owned = t.clone_or_no_op();\n}\n\n// if `I` implement `Clone` this takes either `&amp;I` or `I`; if `I` doesn't\n// implement `Clone` it still will accept `I` (but not `&amp;I`).\nfn test2&lt;I, T: CloneOrNoOp&lt;I&gt;&gt;(t: T) {\n    let _owned: I = t.clone_or_no_op();\n}\n\nfn main() {\n    let a = MyStruct { value: 8675309 };\n\n    println!(\"borrowing to be cloned\");\n    test(&amp;a);\n    // cannot infer `I`, could be `&amp;MyStruct` or `MyStruct`:\n    // test2(&amp;a);\n    test2::&lt;MyStruct,_&gt;(&amp;a);\n    test2::&lt;&amp;MyStruct,_&gt;(&amp;a);\n\n    println!(\"moving\");\n    test(a);\n\n    let a = MyStructNoClone;\n    test2(&amp;a);\n    // the previous line is inferred as (\"cloning\" the reference):\n    test2::&lt;&amp;MyStructNoClone,_&gt;(&amp;a);\n    // not going to work (because it can't clone):\n    // test2::&lt;MyStructNoClone,_&gt;(&amp;a);\n\n    test2(a);\n}\n</code></pre>\n\n<p>Sadly it seems impossible for now to base <code>CloneOrNoOp</code> on <code>ToOwned</code> (instead of <code>Clone</code>) like this:</p>\n\n<pre><code>impl&lt;'a, B&gt; CloneOrNoOp&lt;B::Owned&gt; for &amp;'a B\nwhere\n    B: ToOwned,\n{\n    fn clone_or_no_op(self) -&gt; B::Owned {\n        self.to_owned()\n    }\n}\n</code></pre>\n\n<p>The compiler sees conflicting implementations of \"<code>CloneOrNoOp&lt;&amp;_&gt;</code> for type <code>&amp;_</code>\" (someone crazy might implement <code>ToOwned for Foo { type Owned = &amp;'static Foo; ... }</code>; traits can't distinguish implementations based on lifetime differences).</p>\n\n<p>But similar to <code>ToOwned</code> you can implement specific customizations, like:</p>\n\n<pre><code>impl&lt;'a&gt; CloneOrNoOp&lt;String&gt; for &amp;'a str {\n    fn clone_or_no_op(self) -&gt; String {\n        self.to_owned()\n    }\n}\n</code></pre>\n\n<p>Now you can pass any of <code>&amp;str</code>, <code>&amp;String</code> or <code>String</code> if you want to get a <code>String</code>:</p>\n\n<pre><code>test2::&lt;String,_&gt;(\"abc\");\ntest2::&lt;String,_&gt;(&amp;String::from(\"abc\"));\ntest2::&lt;String,_&gt;(String::from(\"abc\"));\n</code></pre>\n"}], "owner": {"reputation": 145, "user_id": 2923678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07c8707cd05b22a6555b0b0a565d209e?s=128&d=identicon&r=PG&f=1", "display_name": "10101", "link": "https://stackoverflow.com/users/2923678/10101"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1510566185, "creation_date": 1510520697, "last_edit_date": 1510521232, "question_id": 47253965, "link": "https://stackoverflow.com/questions/47253965/generic-cloneable-movable-parameter-as-function-argument", "title": "Generic cloneable/movable parameter as function argument", "body": "<p>For an arbitrary struct that implements <code>Clone</code>, I would like to have a single generic function that takes either:</p>\n\n<ul>\n<li>a <code>&amp;MyStruct</code> in which case it can be conditionally cloned by the function</li>\n<li>a <code>MyStruct</code> in which case the clone is unnecessary since it can be moved</li>\n</ul>\n\n<p>I've implemented this on my own:</p>\n\n<pre><code>use std::clone::Clone;\n\n#[derive(Debug)]\nstruct MyStruct {\n    value: u64,\n}\n\nimpl Clone for MyStruct {\n    fn clone(&amp;self) -&gt; Self {\n        println!(\"cloning {:?}\", self);\n        MyStruct { value: self.value }\n    }\n}\n\ntrait TraitInQuestion&lt;T&gt; {\n    fn clone_or_no_op(self) -&gt; T;\n}\n\nimpl TraitInQuestion&lt;MyStruct&gt; for MyStruct {\n    fn clone_or_no_op(self) -&gt; MyStruct {\n        self\n    }\n}\n\nimpl&lt;'a&gt; TraitInQuestion&lt;MyStruct&gt; for &amp;'a MyStruct {\n    fn clone_or_no_op(self) -&gt; MyStruct {\n        self.clone()\n    }\n}\n\nfn test&lt;T: TraitInQuestion&lt;MyStruct&gt;&gt;(t: T) {\n    let owned = t.clone_or_no_op();\n}\n\nfn main() {\n    let a = MyStruct { value: 8675309 };\n\n    println!(\"borrowing to be cloned\");\n    test(&amp;a);\n\n    println!(\"moving\");\n    test(a);\n}\n</code></pre>\n\n<p>and the output is as expected:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>borrowing to be cloned\ncloning MyStruct { value: 8675309 }\nmoving\n</code></pre>\n\n<p>Is this functionality already derived somehow by implementing <code>Clone</code>? If not, <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html\" rel=\"nofollow noreferrer\"><code>std::borrow::ToOwned</code></a> sounds like what I want, but I can't get it to work:</p>\n\n<pre><code>use std::clone::Clone;\nuse std::borrow::Borrow;\n\n#[derive(Debug)]\nstruct MyStruct {\n    value: u64,\n}\n\nimpl Clone for MyStruct {\n    fn clone(&amp;self) -&gt; Self {\n        println!(\"cloning {:?}\", self);\n        MyStruct { value: self.value }\n    }\n}\n\nfn test&lt;T: ToOwned&lt;Owned = MyStruct&gt;&gt;(a: T) {\n    let owned = a.to_owned();\n}\n\nfn main() {\n    let a = MyStruct { value: 8675309 };\n\n    println!(\"borrowing to be cloned\");\n    test(&amp;a);\n\n    println!(\"moving\");\n    test(a);\n}\n</code></pre>\n\n<p>Compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `MyStruct: std::borrow::Borrow&lt;T&gt;` is not satisfied\n  --&gt; src/main.rs:16:1\n   |\n16 | / fn test&lt;T: ToOwned&lt;Owned = MyStruct&gt;&gt;(a: T) {\n17 | |     let owned = a.to_owned();\n18 | | }\n   | |_^ the trait `std::borrow::Borrow&lt;T&gt;` is not implemented for `MyStruct`\n   |\n   = help: consider adding a `where MyStruct: std::borrow::Borrow&lt;T&gt;` bound\n   = note: required by `std::borrow::ToOwned`\n</code></pre>\n\n<p>Doing what the compiler suggests by changing <code>test</code>:</p>\n\n<pre><code>fn test&lt;T: ToOwned&lt;Owned = MyStruct&gt;&gt;(a: T) -&gt; ()\nwhere\n    MyStruct: Borrow&lt;T&gt;,\n{\n    let owned = a.to_owned();\n}\n</code></pre>\n\n<p>And the resulting error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:27:10\n   |\n27 |     test(&amp;a);\n   |          ^^ expected struct `MyStruct`, found &amp;MyStruct\n   |\n   = note: expected type `MyStruct`\n              found type `&amp;MyStruct`\n</code></pre>\n\n<p>If I try to implement <code>ToOwned</code> for <code>&amp;MyStruct</code></p>\n\n<pre><code>impl&lt;'a&gt; ToOwned for &amp;'a MyStruct {\n    type Owned = MyStruct;\n\n    fn to_owned(&amp;self) -&gt; Self::Owned {\n        self.clone()\n    }\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::borrow::ToOwned` for type `&amp;MyStruct`:\n  --&gt; src/main.rs:16:1\n   |\n16 | / impl&lt;'a&gt; ToOwned for &amp;'a MyStruct {\n17 | |     type Owned = MyStruct;\n18 | |\n19 | |     fn to_owned(&amp;self) -&gt; Self::Owned {\n20 | |         self.clone()\n21 | |     }\n22 | | }\n   | |_^\n   |\n   = note: conflicting implementation in crate `alloc`\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510522818, "post_id": 47252563, "comment_id": 81458966, "body": "This was <a href=\"https://users.rust-lang.org/t/cannot-borrow-mutably-from-a-refcell-fnmut/13836?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the user&#39;s forum</a>."}], "owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "closed_date": 1510513967, "answer_count": 0, "score": 4, "last_activity_date": 1510513949, "creation_date": 1510512500, "last_edit_date": 1510513389, "question_id": 47252563, "link": "https://stackoverflow.com/questions/47252563/cannot-borrow-mutably-from-a-refcellfnmut", "closed_reason": "Duplicate", "title": "Cannot borrow mutably from a RefCell&lt;FnMut&gt;", "body": "<p>I am having an issue with a chunk of code and I fail to see what the problem is</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\nstruct Order {\n    id: u64,\n}\n\nfn main() {\n    respond(\n        Order { id: 0 },\n        Rc::new(RefCell::new(|ord| {\n            ord;\n            ()\n        })),\n    );\n}\n\nfn respond(order: Order, func: Rc&lt;RefCell&lt;FnMut(Order) -&gt; ()&gt;&gt;) -&gt; () {\n    let mut caller = func.borrow_mut();\n    caller(order);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=ec3d6fa950fb8d982011df47ed9b5874&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content as mutable\n  --&gt; src/main.rs:20:5\n   |\n20 |     caller(order);\n   |     ^^^^^^ cannot borrow as mutable\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1510492788, "post_id": 47249206, "comment_id": 81448673, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.splice\" rel=\"nofollow noreferrer\"><code>Vec::splice</code></a> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510505943, "post_id": 47249206, "comment_id": 81453088, "body": "Specifically: <code>let mut v = vec![1.0, 2.0, 3.0]; v.splice(0..2, [4.0, 5.0].iter().cloned());</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510572567, "post_id": 47249206, "comment_id": 81477251, "body": "@Shepmaster The duplicate is about <i>inserting</i> multiple elements into a vector, while this question is about <i>replacing</i> multiple elements.  Do you really think that&#39;s the same question?  I don&#39;t think so, even though the answers to these questions are similar."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1510579475, "post_id": 47249206, "comment_id": 81481370, "body": "The question is not a duplicate (or at least not a duplicate of the question you linked), even if the answer to the other question happens to cover both use cases."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510579986, "post_id": 47249206, "comment_id": 81481670, "body": "user4815162342 is correct \u2014 the <i>question</i> is not an exact duplicate, but the <i>answer</i> is. The targeted question is actually a slightly broader interpretation of this question. You&#39;ve helped out the site by providing a unique set of keywords that will point future visitors to to canonical answer \u2014 remember that <b>duplicates are not a bad thing</b>!  Think of it this way: &quot;how do I add 1 and 1&quot; is not a duplicate of &quot;how do I add 2 and 9&quot;, but they&#39;d both be a duplicate of &quot;how do I add two integers&quot;; the equivalent is true here."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510586268, "post_id": 47249206, "comment_id": 81485879, "body": "@Shepmaster Fair enough."}], "owner": {"reputation": 4689, "user_id": 1755847, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/tTDlX.png?s=128&g=1", "display_name": "manabreak", "link": "https://stackoverflow.com/users/1755847/manabreak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1500, "favorite_count": 1, "closed_date": 1510499881, "answer_count": 0, "score": 2, "last_activity_date": 1510499930, "creation_date": 1510492421, "last_edit_date": 1510499930, "question_id": 47249206, "link": "https://stackoverflow.com/questions/47249206/how-to-replace-a-part-of-vec-with-a-slice", "closed_reason": "Duplicate", "title": "How to replace a part of Vec with a slice?", "body": "<p>I have a <code>Vec&lt;f32&gt;</code> like this:</p>\n\n<pre><code>let mut v: Vec&lt;f32&gt; = Vec::new();\nv.push(1.0);\nv.push(2.0);\nv.push(3.0);\n</code></pre>\n\n<p>Is there an idiomatic way to replace a portion of the contents with a slice? I have a function like this:</p>\n\n<pre><code>fn replace(&amp;mut v: Vec&lt;f32&gt;, start: usize, vals: &amp;[f32]) {\n    // ...\n}\n</code></pre>\n\n<p>In this case, I'd like to replace the values in <code>v</code> with values from <code>vals</code>, starting from the index <code>start</code> of <code>v</code>. If I have the aforementioned <code>Vec</code>, I'd like to do this:</p>\n\n<pre><code>// Before v contains (1.0, 2.0, 3.0)\nreplace(&amp;v, 0, &amp;[4.0, 5.0]);\n// Now v would contain (4.0, 5.0, 3.0)\n</code></pre>\n\n<p>I guess this could be done by iterating starting from the <code>start</code> index, but is there a more idiomatic Rust way of doing this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1510490160, "post_id": 47248738, "comment_id": 81447838, "body": "Ok so <code>if let Ok(lines) = lines_from_file(filename) {...} else { println!(&quot;Error&quot;); }</code> would be a reasonable approach."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 3, "creation_date": 1510490460, "post_id": 47248738, "comment_id": 81447944, "body": "@Ronnie It would work, but of course, you wouldn&#39;t print any information about the error. So I&#39;d recommend you to just use <code>match</code> like in your first example."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 14, "last_activity_date": 1510489525, "creation_date": 1510489525, "answer_id": 47248738, "question_id": 47248583, "link": "https://stackoverflow.com/questions/47248583/what-is-the-idiomatic-way-of-using-an-if-let-binding-when-matching-a-result-an/47248738#47248738", "title": "What is the idiomatic way of using an if-let binding when matching a `Result` and still being able to capture the error?", "body": "<blockquote>\n  <p>[...] using an if-let binding when matching a Result and still being able to capture the error?</p>\n</blockquote>\n\n<p>This is fundamentally impossible with one <code>if let</code>. The <code>if let</code> construct's only purpose is to make life easier in the case where you only want to destructure one pattern. If you want to destructure both cases of a <code>Result</code>, you have to use <code>match</code> (or multiple <code>if let</code> or <code>unwrap()</code>, but this is not a good solution). Why you don't want to use <code>match</code> in the first place?</p>\n\n<p>Regarding your compiler error: you added the <code>Ok()</code> on the wrong side:</p>\n\n<pre><code>if let Ok(lines) = lines_from_file(filename) { ... }\n</code></pre>\n\n<p>This is the correct way of using <code>if let</code>: the destructuring pattern to the left, the expression producing a value to the right.</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5411, "favorite_count": 0, "accepted_answer_id": 47248738, "answer_count": 1, "score": 7, "last_activity_date": 1510500171, "creation_date": 1510488379, "last_edit_date": 1510500171, "question_id": 47248583, "link": "https://stackoverflow.com/questions/47248583/what-is-the-idiomatic-way-of-using-an-if-let-binding-when-matching-a-result-an", "title": "What is the idiomatic way of using an if-let binding when matching a `Result` and still being able to capture the error?", "body": "<pre><code>fn lines_from_file&lt;F&gt;(filename: F) -&gt; Result&lt;io::Lines&lt;BufReader&lt;File&gt;&gt;, io::Error&gt;\nwhere\n    F: std::convert::AsRef&lt;std::path::Path&gt;,\n{\n    let file = File::open(filename)?;\n    Ok(io::BufReader::new(file).lines())\n}\n\nfn main() {\n    let filename: &amp;str = \"input.pdl\";\n    // This works fine\n    match lines_from_file(filename) {\n        Ok(lines) =&gt; {\n            for line in lines {\n                println!(\"{:?}\", line);\n            },\n        }\n        Err(e) =&gt; println!(\"Error {:?}\", e),\n    }\n}\n</code></pre>\n\n<p>I'd like to use this instead:</p>\n\n<pre><code>if let lines = Ok(lines_from_file(filename)) {\n    for line in lines {\n        println!(\"{:?}\", line);\n    }\n} else {\n    println!(\"Error {:?}\" /*what goes here?*/,)\n}\n</code></pre>\n\n<p>But that gives an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>| if let lines = Ok(lines_from_file(filename)) {\n|                ^^ cannot infer type for `E`\n</code></pre>\n\n<p>What is the idiomatic way of using an if-let binding when matching a <code>Result</code> and still being able to capture the error?</p>\n"}, {"tags": ["struct", "compiler-errors", "hashmap", "rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 5, "last_activity_date": 1510487193, "creation_date": 1510487193, "answer_id": 47248419, "question_id": 47248268, "link": "https://stackoverflow.com/questions/47248268/how-do-i-solve-lifetime-of-reference-outlives-lifetime-of-borrowed-content-in/47248419#47248419", "title": "How do I solve &quot;lifetime of reference outlives lifetime of borrowed content&quot; in the following context?", "body": "<p>Your input parameters for <code>define_bundle</code> have lifetimes that the compiler does not know either meet, or outlive the ones defined for the struct.</p>\n\n<p>Telling the compiler they expect the same lifetimes will do the trick:</p>\n\n<pre><code>pub fn define_bundle(&amp;mut self, bundle_key: &amp;'a str, sources: &amp;'a Vec&lt;ConfigurationSource&gt;) {\n    //                                       ^^----------------^^ same lifetimes as the struct fields expect\n    self.bundles.insert(bundle_key, sources);\n}\n</code></pre>\n"}], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1339, "favorite_count": 0, "accepted_answer_id": 47248419, "answer_count": 1, "score": 5, "last_activity_date": 1510487193, "creation_date": 1510486267, "question_id": 47248268, "link": "https://stackoverflow.com/questions/47248268/how-do-i-solve-lifetime-of-reference-outlives-lifetime-of-borrowed-content-in", "title": "How do I solve &quot;lifetime of reference outlives lifetime of borrowed content&quot; in the following context?", "body": "<p>I have the following struct in my lib.rs</p>\n\n<pre><code>pub enum ConfigurationSource {\n    StringContent(String),\n    FileContent(PathBuf)    \n}\n\npub struct ConfigurationBuilder&lt;'a&gt; {\n    config: Value,\n    bundles: HashMap&lt;&amp;'a str, &amp;'a Vec&lt;ConfigurationSource&gt;&gt;    \n}\n\nimpl&lt;'a&gt; ConfigurationBuilder&lt;'a&gt;{\n    pub fn new(base_source: &amp;ConfigurationSource) -&gt; ConfigurationBuilder{\n        let base_config: Value = from_str(\"{}\").unwrap();\n\n        let mut config_builder = ConfigurationBuilder{\n            config: base_config,\n            bundles: HashMap::new()\n        };\n\n        config_builder.merge_source(&amp;base_source);\n\n        return config_builder;\n    }\n\n    //more code here\n\n    pub fn define_bundle(&amp;mut self, bundle_key: &amp;str, sources: &amp;Vec&lt;ConfigurationSource&gt;){\n        self.bundles.insert(bundle_key, sources);\n    }\n}\n</code></pre>\n\n<p>I do not want the bundles Hashmap in the ConfigurationBuilder instances to own the <code>bundle_key</code>s or <code>source</code>s passed into the <code>define_bundle</code> method.</p>\n\n<p>I get the following two compile errors at build time</p>\n\n<pre><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src\\lib.rs:67:41\n   |\n67 |         self.bundles.insert(bundle_key, sources);\n   |                                         ^^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 27:1...\n  --&gt; src\\lib.rs:27:1\n   |\n27 | / impl&lt;'a&gt; ConfigurationBuilder&lt;'a&gt;{\n28 | |\n29 | |     pub fn new(base_source: &amp;ConfigurationSource) -&gt; ConfigurationBuilder{\n30 | |         let base_config: Value = from_str(\"{}\").unwrap();\n...  |\n89 | |     }\n90 | | }\n   | |_^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #3 defined on the method\n body at 66:5\n  --&gt; src\\lib.rs:66:5\n   |\n66 | /     pub fn define_bundle(&amp;mut self, bundle_key: &amp;str, sources: &amp;Vec&lt;ConfigurationSource&gt;){\n67 | |         self.bundles.insert(bundle_key, sources);\n68 | |     }\n   | |_____^\n\nerror[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src\\lib.rs:67:29\n   |\n67 |         self.bundles.insert(bundle_key, sources);\n   |                             ^^^^^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 27:1...\n  --&gt; src\\lib.rs:27:1\n   |\n27 | / impl&lt;'a&gt; ConfigurationBuilder&lt;'a&gt;{\n28 | |\n29 | |     pub fn new(base_source: &amp;ConfigurationSource) -&gt; ConfigurationBuilder{\n30 | |         let base_config: Value = from_str(\"{}\").unwrap();\n...  |\n89 | |     }\n90 | | }\n   | |_^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #2 defined on the method\n body at 66:5\n  --&gt; src\\lib.rs:66:5\n   |\n66 | /     pub fn define_bundle(&amp;mut self, bundle_key: &amp;str, sources: &amp;Vec&lt;ConfigurationSource&gt;){\n67 | |         self.bundles.insert(bundle_key, sources);\n68 | |     }\n   | |_____^\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["json", "vector", "struct", "rust", "serde"], "comments": [{"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510461890, "post_id": 47245397, "comment_id": 81441422, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/158788/discussion-between-greg-and-shepmaster\">continue this discussion in chat</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510522910, "post_id": 47245397, "comment_id": 81458991, "body": "This was <a href=\"https://users.rust-lang.org/t/how-to-insert-the-contents-of-a-json-object-into-a-struct-containing-vectors/13830?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the user&#39;s forum</a>."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1510464863, "creation_date": 1510464863, "answer_id": 47245817, "question_id": 47245397, "link": "https://stackoverflow.com/questions/47245397/how-to-collate-an-array-of-json-objects-by-a-property-into-a-struct-containing-v/47245817#47245817", "title": "How to collate an array of JSON objects by a property into a struct containing vectors of each object&#39;s properties?", "body": "<p>Something like this should work. It uses <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">Serde</a> to read each JSON array element into a helper struct with a required sensor name <code>String</code>, and <code>Option&lt;String&gt;</code> data for each value of the sensor. Then it loops over those readings and inserts them into a map in which the key is the sensor name and the value is a vector of data for each sensor value.</p>\n\n<hr>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_json;\n\nuse std::collections::BTreeMap as Map;\nuse std::error::Error;\n\n#[derive(Debug, Default)]\nstruct Data {\n    luminosity: Vec&lt;Option&lt;String&gt;&gt;,\n    color: Vec&lt;Option&lt;String&gt;&gt;,\n}\n\nfn main() {\n    let input = r##\"[\n                      {\n                        \"sensor\": \"left\",\n                        \"luminosity\": \"50\",\n                        \"color\": \"(255,0,0)\"\n                      },\n                      {\n                        \"sensor\": \"left\",\n                        \"color\": \"#0f0\"\n                      },\n                      {\n                        \"sensor\": \"right\",\n                        \"luminosity\": \"20\"\n                      },\n                      {\n                        \"sensor\": \"right\",\n                        \"luminosity\": \"40\",\n                        \"color\": \"(255,0,0)\"\n                      },\n                      {\n                        \"sensor\": \"left\",\n                        \"luminosity\": \"30\"\n                      },\n                      {\n                        \"sensor\": \"top\",\n                        \"luminosity\": \"10\"\n                      },\n                      {\n                        \"sensor\": \"right\",\n                        \"color\": \"(0,0,0)\"\n                      }\n                    ]\"##;\n    let m = read_sensor_data(input).unwrap();\n    println!(\"{:#?}\", m);\n}\n\nfn read_sensor_data(input: &amp;str) -&gt; Result&lt;Map&lt;String, Data&gt;, Box&lt;Error&gt;&gt; {\n    // Private helper struct that matches the format of the raw JSON\n    #[derive(Deserialize)]\n    struct RawReading {\n        sensor: String,\n        luminosity: Option&lt;String&gt;,\n        color: Option&lt;String&gt;,\n    }\n\n    // Deserialize the raw data\n    let raw_readings: Vec&lt;RawReading&gt; = serde_json::from_str(input)?;\n\n    // Loop over raw data and insert each reading into the right sensor's struct\n    let mut m = Map::new();\n    for raw in raw_readings {\n        // Look up this sensor's Data struct\n        let sensor = m.entry(raw.sensor).or_insert_with(Data::default);\n\n        // One push for every vector in the struct, even for missing observations\n        sensor.luminosity.push(raw.luminosity);\n        sensor.color.push(raw.color);\n    }\n    Ok(m)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1510505254, "creation_date": 1510505254, "answer_id": 47251326, "question_id": 47245397, "link": "https://stackoverflow.com/questions/47245397/how-to-collate-an-array-of-json-objects-by-a-property-into-a-struct-containing-v/47251326#47251326", "title": "How to collate an array of JSON objects by a property into a struct containing vectors of each object&#39;s properties?", "body": "<p>You can be <em>slightly</em> more efficient at the expense of more code. Deserializing the <code>Vec</code> is not necessary if you create your own <code>Visitor</code> implementation:</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nuse std::collections::HashMap;\nuse std::fmt;\nuse serde::de::{Deserialize, Deserializer, Visitor};\n\n#[derive(Debug, Default)]\nstruct Data {\n    luminosity: Vec&lt;Option&lt;String&gt;&gt;,\n    color: Vec&lt;Option&lt;String&gt;&gt;,\n}\n\nstruct Wrapper(HashMap&lt;String, Data&gt;);\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Wrapper {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        deserializer.deserialize_seq(WrapperVisitor)\n    }\n}\n\nstruct WrapperVisitor;\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for WrapperVisitor {\n    type Value = Wrapper;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"a sequence of measurement objects\")\n    }\n\n    fn visit_seq&lt;A&gt;(self, mut seq: A) -&gt; Result&lt;Self::Value, A::Error&gt;\n    where\n        A: serde::de::SeqAccess&lt;'de&gt;,\n    {\n        #[derive(Debug, Deserialize)]\n        struct DataPoint {\n            sensor: String,\n            luminosity: Option&lt;String&gt;,\n            color: Option&lt;String&gt;,\n        }\n\n        let mut all_data = HashMap::new();\n\n        while let Some(data_point) = seq.next_element::&lt;DataPoint&gt;()? {\n            let data = all_data\n                .entry(data_point.sensor)\n                .or_insert_with(Data::default);\n            data.luminosity.push(data_point.luminosity);\n            data.color.push(data_point.color);\n        }\n\n        Ok(Wrapper(all_data))\n    }\n}\n\nfn main() {\n    let input = r###\"\n[\n    {\n        \"sensor\": \"left\",\n        \"luminosity\": \"50\",\n        \"color\": \"(255,0,0)\"\n    },\n    {\n        \"sensor\": \"left\",\n        \"color\": \"#0f0\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"luminosity\": \"20\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"luminosity\": \"40\",\n        \"color\": \"(255,0,0)\"\n    },\n    {\n        \"sensor\": \"left\",\n        \"luminosity\": \"30\"\n    },\n    {\n        \"sensor\": \"top\",\n        \"luminosity\": \"10\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"color\": \"(0,0,0)\"\n    }\n]\n\"###;\n\n    let data = serde_json::from_str::&lt;Wrapper&gt;(input).expect(\"Nope\");\n    let data = data.0;\n\n    println!(\"{:#?}\", data);\n}\n</code></pre>\n\n<p>This produces the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>{\n    \"left\": Data {\n        luminosity: [\n            Some(\"50\"),\n            None,\n            Some(\"30\")\n        ],\n        color: [\n            Some(\"(255,0,0)\"),\n            Some(\"#0f0\"),\n            None\n        ]\n    },\n    \"right\": Data {\n        luminosity: [\n            Some(\"20\"),\n            Some(\"40\"),\n            None\n        ],\n        color: [\n            None,\n            Some(\"(255,0,0)\"),\n            Some(\"(0,0,0)\")\n        ]\n    },\n    \"top\": Data {\n        luminosity: [\n            Some(\"10\")\n        ],\n        color: [\n            None\n        ]\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 708, "favorite_count": 0, "accepted_answer_id": 47245817, "answer_count": 2, "score": 1, "last_activity_date": 1510505254, "creation_date": 1510460490, "last_edit_date": 1510504430, "question_id": 47245397, "link": "https://stackoverflow.com/questions/47245397/how-to-collate-an-array-of-json-objects-by-a-property-into-a-struct-containing-v", "title": "How to collate an array of JSON objects by a property into a struct containing vectors of each object&#39;s properties?", "body": "<p>I am receiving a stream of sensor data which I need to aggregate and perform basic statistics on (average, max, min, etc.). There are multiple values but the sensor data can be inconsistent and some of the values can be missing. </p>\n\n<p>From reading the book, it seems like <code>Option</code> should be used when the values of <code>luminosity</code> or <code>color</code> are missing but I am confused about this.</p>\n\n<p>This is an example of my sensor data:</p>\n\n<pre><code>[\n    {\n        \"sensor\": \"left\",\n        \"luminosity\": \"50\",\n        \"color\": \"(255,0,0)\"\n    },\n    {\n        \"sensor\": \"left\",\n        \"color\": \"#0f0\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"luminosity\": \"20\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"luminosity\": \"40\",\n        \"color\": \"(255,0,0)\"\n    },\n    {\n        \"sensor\": \"left\",\n        \"luminosity\": \"30\"\n    },\n    {\n        \"sensor\": \"top\",\n        \"luminosity\": \"10\"\n    },\n    {\n        \"sensor\": \"right\",\n        \"color\": \"(0,0,0)\"\n    }\n]\n</code></pre>\n\n<p>Each sensor's data will be stored in an instance of the following struct:</p>\n\n<pre><code>struct Data {\n    pub luminosity: Vec&lt;String&gt;,\n    pub color: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>I want to iterate over the above JSON object, match the sensor to the correct struct instance (\"right\" sensors to the \"right\" sensor struct) and push the contents of each JSON observation onto the vectors (inside each struct instance).</p>\n\n<p>Missing values need to be recorded so that for each \"observation\" there is one push action for every vector in the struct for the corresponding sensor's struct instance.</p>\n"}, {"tags": ["rust", "immutability", "mutable"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510437879, "post_id": 47242768, "comment_id": 81437125, "body": "The next time you have an error, I suggest using your favorite search engine to search for the error text. Many times, an existing Stack Overflow question will be the top result (especially if you limit your search to this domain)."}], "answers": [{"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 2, "last_activity_date": 1510444793, "last_edit_date": 1510444793, "creation_date": 1510434850, "answer_id": 47242844, "question_id": 47242768, "link": "https://stackoverflow.com/questions/47242768/variable-said-to-be-immutable-even-if-declared-as-mutable/47242844#47242844", "title": "Variable said to be immutable even if declared as mutable", "body": "<p>The type of <code>shorter</code> is a <em>reference</em>, more precisely a <code>&amp;Vec&lt;bool&gt;</code>, which means it refers to a <code>Vec&lt;bool&gt;</code> which it is not allowed to mutate<sup>1</sup>.</p>\n\n<p>Declaring the variable as <code>mut shorter</code> only makes the <code>shorter</code> variable mutable, allowing you to e.g. use <code>shorter = ...</code> assignment to make it refer to a different <code>Vec&lt;bool&gt;</code>. Regardless of the variable's mutability, a shared reference of type <code>&amp;Vec&lt;bool&gt;</code> is not allowed to mutate the object it refers to.</p>\n\n<p>What you need to do is make a mutable reference of type <code>&amp;mut Vec&lt;bool&gt;</code>, using <code>&amp;mut bit_vec0</code> and <code>&amp;mut bit_vec1</code>. This change makes the code compile, and at that point <code>shorter</code> no longer needs to be <code>mut</code>.</p>\n\n<p>Finally, and this is unrelated to the question, <code>match_lengths</code> accepts <code>bit_vec0</code> and <code>bit_vec1</code> by value, modifies them, and returns them. Although that certainly works, it is more idiomatic to accept mutable references. Such an approach is more ergonomic for the caller, and more clearly signals the fact that the function doesn't really \"return\" anything, it really modifies existing objects.</p>\n\n<p>With those modifications, the function looks like this:</p>\n\n<pre><code>fn match_lengths(bit_vec0: &amp;mut Vec&lt;bool&gt;, bit_vec1: &amp;mut Vec&lt;bool&gt;) {\n    let (shorter, longer) = if bit_vec0.len() &lt; bit_vec1.len() {\n        (bit_vec0, bit_vec1)\n    } else {\n        (bit_vec1, bit_vec0)\n    };\n    let bit_sign = match shorter.last() {\n        Some(content) =&gt; *content,\n        None =&gt; false,\n    };\n    for _ in shorter.len()..longer.len() {\n        shorter.push(bit_sign);\n    }\n}\n</code></pre>\n\n<p><sup>1</sup>\nThis sounds much like C++'s <code>const</code>, but the guarantee in Rust is even stronger than that of <code>const</code>: not only is a shared (non-<code>mut</code>) reference not allowed to mutate the object it refers to, but neither is anyone else! Rust's compiler and runtime prevent creation of a <code>mut</code> reference to an object while any shared references to that object exist.</p>\n"}], "owner": {"reputation": 5, "user_id": 3657774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/570b1134c78a358fbcb9d981a3b79483?s=128&d=identicon&r=PG&f=1", "display_name": "Davraine", "link": "https://stackoverflow.com/users/3657774/davraine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "closed_date": 1510437830, "accepted_answer_id": 47242844, "answer_count": 1, "score": 0, "last_activity_date": 1510444793, "creation_date": 1510434304, "last_edit_date": 1510437611, "question_id": 47242768, "link": "https://stackoverflow.com/questions/47242768/variable-said-to-be-immutable-even-if-declared-as-mutable", "closed_reason": "Duplicate", "title": "Variable said to be immutable even if declared as mutable", "body": "<p>I am recreating the arithmetic operations in binary by representing numbers with a vector of booleans. Since the size of each vector can vary, I made a function to match the length of each vector:</p>\n\n<pre><code>fn match_lengths(mut bit_vec0: Vec&lt;bool&gt;, mut bit_vec1: Vec&lt;bool&gt;) -&gt; (Vec&lt;bool&gt;, Vec&lt;bool&gt;) {\n    {\n        let (mut shorter, longer) = if bit_vec0.len() &lt; bit_vec1.len() {\n            (&amp;bit_vec0, &amp;bit_vec1)\n        } else {\n            (&amp;bit_vec1, &amp;bit_vec0)\n        };\n        let bit_sign = match shorter.last() {\n            Some(content) =&gt; *content,\n            None =&gt; false,\n        };\n\n        for _ in shorter.len()..longer.len() {\n            shorter.push(bit_sign);\n        }\n    }\n\n    (bit_vec0, bit_vec1)\n}\n</code></pre>\n\n<p>I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content `*shorter` as mutable\n  --&gt; src/main.rs:15:13\n   |\n15 |             shorter.push(bit_sign); // Error here\n   |             ^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>Even though I declared it with the <code>mut</code> specifier.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510413137, "post_id": 47239301, "comment_id": 81428915, "body": "<i>(I&#39;ll put them in the question if anyone wants to see them).</i> \u2014 <b>Always</b> provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> (no &quot;oh this is defined elsewhere but I won&#39;t tell you what it is) and include the complete error message."}], "answers": [{"comments": [{"owner": {"reputation": 769, "user_id": 6155692, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/0e4ef26e040c1b1fbc5f10777e5b0649?s=128&d=identicon&r=PG&f=1", "display_name": "Zac", "link": "https://stackoverflow.com/users/6155692/zac"}, "edited": false, "score": 0, "creation_date": 1510414005, "post_id": 47239448, "comment_id": 81429182, "body": "Thanks, it worked! I completely forgot about the lifetime parameter on the <code>outer</code> parameter"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 1, "creation_date": 1538911110, "post_id": 47239448, "comment_id": 92303009, "body": "Nice trick: when facing such issues, putting the implicit lifetimes into the declarations simplifies reasoning, as it makes the issue immediately visible!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1510413414, "creation_date": 1510413414, "answer_id": 47239448, "question_id": 47239301, "link": "https://stackoverflow.com/questions/47239301/cannot-infer-an-appropriate-lifetime-due-to-conflicting-requirements-in-a-recurs/47239448#47239448", "title": "Cannot infer an appropriate lifetime due to conflicting requirements in a recursive struct", "body": "<p>This is because you haven't met the obligations that you require.</p>\n\n<p>Due to lifetime elision, your code is equivalent to:</p>\n\n<pre><code>pub fn inside&lt;'b&gt;(outer: &amp;'a mut Context&lt;'b&gt;) -&gt; Context&lt;'a&gt;\n</code></pre>\n\n<p>Change your code to </p>\n\n<pre><code>pub fn inside(outer: &amp;'a mut Context&lt;'a&gt;) -&gt; Context&lt;'a&gt;\n</code></pre>\n\n<p>And it will compile.</p>\n"}], "owner": {"reputation": 769, "user_id": 6155692, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/0e4ef26e040c1b1fbc5f10777e5b0649?s=128&d=identicon&r=PG&f=1", "display_name": "Zac", "link": "https://stackoverflow.com/users/6155692/zac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4685, "favorite_count": 0, "accepted_answer_id": 47239448, "answer_count": 1, "score": 7, "last_activity_date": 1510413414, "creation_date": 1510412565, "last_edit_date": 1510413082, "question_id": 47239301, "link": "https://stackoverflow.com/questions/47239301/cannot-infer-an-appropriate-lifetime-due-to-conflicting-requirements-in-a-recurs", "title": "Cannot infer an appropriate lifetime due to conflicting requirements in a recursive struct", "body": "<p>When I try to compile this code:</p>\n\n<pre><code>pub struct Context&lt;'a&gt; {\n    pub outer: Option&lt;&amp;'a mut Context&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Context&lt;'a&gt; {\n    pub fn inside(outer: &amp;'a mut Context) -&gt; Context&lt;'a&gt; {\n        Context { outer: Some(outer) }\n    }\n}\n</code></pre>\n\n<p>I'm getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n --&gt; src/main.rs:7:9\n  |\n7 |         Context { outer: Some(outer) }\n  |         ^^^^^^^\n  |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the impl at 5:1...\n --&gt; src/main.rs:5:1\n  |\n5 | / impl&lt;'a&gt; Context&lt;'a&gt; {\n6 | |     pub fn inside(outer: &amp;'a mut Context) -&gt; Context&lt;'a&gt; {\n7 | |         Context { outer: Some(outer) }\n8 | |     }\n9 | | }\n  | |_^\nnote: ...so that expression is assignable (expected Context&lt;'a&gt;, found Context&lt;'_&gt;)\n --&gt; src/main.rs:7:9\n  |\n7 |         Context { outer: Some(outer) }\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the method body at 6:5...\n --&gt; src/main.rs:6:5\n  |\n6 | /     pub fn inside(outer: &amp;'a mut Context) -&gt; Context&lt;'a&gt; {\n7 | |         Context { outer: Some(outer) }\n8 | |     }\n  | |_____^\nnote: ...so that expression is assignable (expected &amp;mut Context&lt;'_&gt;, found &amp;mut Context&lt;'_&gt;)\n --&gt; src/main.rs:7:31\n  |\n7 |         Context { outer: Some(outer) }\n  |                               ^^^^^\n</code></pre>\n\n<p>Why this is happening?</p>\n"}, {"tags": ["rust", "dereference", "coercion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510414690, "post_id": 47237733, "comment_id": 81429432, "body": "Does <a href=\"https://stackoverflow.com/a/43346583/155423\">stackoverflow.com/a/43346583/155423</a> answer your question?"}, {"owner": {"reputation": 107, "user_id": 8774173, "user_type": "registered", "profile_image": "https://graph.facebook.com/1867733163540531/picture?type=large", "display_name": "Kenta Nakajima", "link": "https://stackoverflow.com/users/8774173/kenta-nakajima"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510461205, "post_id": 47237733, "comment_id": 81441312, "body": "It&#39;s a bit different in that my question seems to be about transitive coercions, whereas @Shepmaster &#39;s Q&amp;A link is about DST coercion itself."}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 8774173, "user_type": "registered", "profile_image": "https://graph.facebook.com/1867733163540531/picture?type=large", "display_name": "Kenta Nakajima", "link": "https://stackoverflow.com/users/8774173/kenta-nakajima"}, "edited": false, "score": 0, "creation_date": 1510462708, "post_id": 47240867, "comment_id": 81441544, "body": "I see. The coercion in &quot;auto-dereferencing rules&quot; is counted as once, whereas the coercions in the code <code>let arr: &amp;[i32] = &amp;&amp;&amp;[1, 2, 3, 4, 5];</code> are more than once. The diffrerence between the two occurs because transitive coercions are still unimplemented. Thanks a lot!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 107, "user_id": 8774173, "user_type": "registered", "profile_image": "https://graph.facebook.com/1867733163540531/picture?type=large", "display_name": "Kenta Nakajima", "link": "https://stackoverflow.com/users/8774173/kenta-nakajima"}, "edited": false, "score": 0, "creation_date": 1510516539, "post_id": 47240867, "comment_id": 81456737, "body": "@KentaNakajima Yep, pretty much. I&#39;m slightly surprised this isn&#39;t a better known issue, given how useful coercions are. Although to be honest, I never really thought much about it; I guess that&#39;s true for most users."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 8, "last_activity_date": 1552934955, "last_edit_date": 1592644375, "creation_date": 1510421755, "answer_id": 47240867, "question_id": 47237733, "link": "https://stackoverflow.com/questions/47237733/why-doesnt-a-nested-reference-to-an-array-coerce-to-a-slice/47240867#47240867", "title": "Why doesn&#39;t a nested reference to an array coerce to a slice?", "body": "<p>This kind of coercion is intended to work, but not implemented.</p>\n<p><a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"noreferrer\">Arrays</a> do not implement <code>Deref</code>, so the coercion <code>&amp;[T; n] -&gt; &amp;[T]</code> is not a deref coercion and does not work in quite the same way as one. Instead, it's called an &quot;unsized coercion&quot; because it turns a sized type (<code>[T; n]</code>) into an unsized one (<code>[T]</code>).</p>\n<p>That said, the <a href=\"https://doc.rust-lang.org/reference/type-coercions.html\" rel=\"noreferrer\">language reference</a> (which is not normative and may be outdated, but bear with me) lists the possible coercions, including the following (emphasis added):</p>\n<blockquote>\n<ul>\n<li><p><code>T_1</code> to <code>T_3</code> where <code>T_1</code> coerces to <code>T_2</code> and <code>T_2</code> coerces to <code>T_3</code> (<em>transitive case</em>)</p>\n<p><strong>Note that this is not fully supported yet</strong></p>\n</li>\n<li><p><code>&amp;T</code> to <code>&amp;U</code> if <code>T</code> implements <code>Deref&lt;Target = U&gt;</code>.</p>\n</li>\n<li><p>TyCtor(<code>T</code>) to TyCtor(<code>U</code>), where TyCtor(<code>T</code>) is one of</p>\n<ul>\n<li><code>&amp;T</code></li>\n<li><code>&amp;mut T</code></li>\n<li><code>*const T</code></li>\n<li><code>*mut T</code></li>\n<li><code>Box&lt;T&gt;</code></li>\n</ul>\n<p>and where <code>T</code> can be obtained from <code>U</code> by <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#unsized-coercions\" rel=\"noreferrer\">unsized coercion</a>.</p>\n</li>\n</ul>\n</blockquote>\n<p>The last bullet, unsized coercion, is what allows <code>&amp;[T; n]</code> to coerce to <code>&amp;[T]</code>. Notably, this only describes one layer of referencing; it doesn't cover the <code>&amp;&amp;[T; n]</code> -&gt; <code>&amp;[T]</code> case (for which we also need <code>Deref</code> coercion).</p>\n<p>Back to your non-working example:</p>\n<pre><code>let arr: &amp;[i32] = &amp;&amp;&amp;[1, 2, 3, 4, 5];\n</code></pre>\n<p>The intended coercion is <code>&amp;&amp;&amp;[i32; 5]</code> -&gt; <code>&amp;[i32]</code>. We can work out how this coercion <em>ought</em> to work:</p>\n<ol>\n<li><code>&amp;[i32; 5]</code> coerces to <code>&amp;[i32]</code> by unsizing;</li>\n<li><code>&amp;&amp;[i32; 5]</code> coerces to <code>&amp;[i32; 5]</code> by <code>Deref</code>;</li>\n<li>therefore, <code>&amp;&amp;[i32; 5]</code> coerces to <code>&amp;[i32]</code> by transitivity.</li>\n<li><code>&amp;&amp;&amp;[i32; 5]</code> coerces to <code>&amp;&amp;[i32; 5]</code> by <code>Deref</code>;</li>\n<li>therefore, <code>&amp;&amp;&amp;[i32; 5]</code> coerces to <code>&amp;[i32]</code> by transitivity.</li>\n</ol>\n<p>But it doesn't. The quote above hints at why: under the transitive case, it says &quot;Note that this is not fully supported yet&quot;. As far as I can tell, according to <a href=\"https://github.com/rust-lang/rust/issues/18602\" rel=\"noreferrer\">issue #18602</a>, &quot;not fully supported&quot; is a hedge; it would be more accurate to say &quot;unimplemented&quot;. So, for now, <strong>coercion via transitivity is not possible at all</strong>. Apparently this issue is not a high priority, probably because sized arrays aren't very common. (I suspect this might become a more common complaint when const generics land, since that may make arrays more useful.)</p>\n<p>So why <em>does</em> <code>arr.first()</code> work? Well, the <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules?noredirect=1&amp;lq=1\">&quot;auto-dereferencing rules&quot;</a> used to find methods invoked with the <code>.</code> (dot) operator are an <em>extension</em> of the coercion rules. Autoderef is similar to manually dereferencing any number of times until you get something (that can be coerced to a type) with the given method. This means you don't need transitivity to find method calls through autoderef (which RFC 401 calls &quot;receiver coercion&quot;).</p>\n<hr />\n<h3>Further reading</h3>\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md\" rel=\"noreferrer\">RFC #401</a> describes <em>intended</em> semantics of most coercions. This RFC was merged over 5 years ago. Many things have changed since then, but it is still not fully implemented (its tracking issue is <a href=\"https://github.com/rust-lang/rust/issues/18469\" rel=\"noreferrer\">#18469</a>), so RFC 401 does not accurately describe any past, present, or future version of Rust. Nevertheless, RFC 401 <em>also</em> would permit coercion of <code>&amp;&amp;&amp;[i32; 5]</code> to <code>&amp;[i32]</code> and by almost the same logic.</p>\n<p>The <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"noreferrer\">Rustonomicon</a> also has a chapter on coercions and appears to agree with the reference book.</p>\n"}], "owner": {"reputation": 107, "user_id": 8774173, "user_type": "registered", "profile_image": "https://graph.facebook.com/1867733163540531/picture?type=large", "display_name": "Kenta Nakajima", "link": "https://stackoverflow.com/users/8774173/kenta-nakajima"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 666, "favorite_count": 1, "accepted_answer_id": 47240867, "answer_count": 1, "score": 6, "last_activity_date": 1552934955, "creation_date": 1510402221, "last_edit_date": 1510415040, "question_id": 47237733, "link": "https://stackoverflow.com/questions/47237733/why-doesnt-a-nested-reference-to-an-array-coerce-to-a-slice", "title": "Why doesn&#39;t a nested reference to an array coerce to a slice?", "body": "<p>I read <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules/28552082#28552082\">What are Rust&#39;s exact auto-dereferencing rules?</a> from beginning to end, but I still have a question about the coercion from array to slice.</p>\n\n<p>Let us think about the following code:</p>\n\n<pre><code>let arr: &amp;[i32; 5] = &amp;&amp;&amp;[1, 2, 3, 4, 5];\n// let arr: &amp;[i32] = &amp;&amp;&amp;[1, 2, 3, 4, 5]; // Error; expected slice, found reference\n</code></pre>\n\n<p>I would expect that <code>&amp;&amp;&amp;[1, 2, 3, 4, 5]</code> has the type, <code>&amp;&amp;&amp;[i32; 5]</code> and dereferences to  <code>&amp;&amp;[i32; 5]</code> => <code>&amp;[i32; 5]</code> => <code>&amp;[i32; 5]</code> => <code>&amp;[i32]</code>,\nbut the result is different from what I expected.</p>\n\n<p>I tried to run the following code:</p>\n\n<pre><code>let arr: &amp;&amp;&amp;[i32; 5] = &amp;&amp;&amp;[1, 2, 3, 4, 5];\nlet n = arr.first().unwrap(); // 1\n</code></pre>\n\n<p>That's the correct code. The type of <code>arr</code> is coerced to <code>&amp;&amp;&amp;[i32; 5]</code> => <code>&amp;&amp;[i32; 5]</code> => <code>&amp;[i32; 5]</code> => <code>&amp;[i32]</code> and matches to the first argument of <code>first</code> in slice, <code>&amp;self</code>.</p>\n\n<p>What's the condition that arrays coerce to slices? I don't understand the difference between the former and the latter code.</p>\n\n<p>I also checked <a href=\"https://github.com/rust-lang/rust/tree/69ee5a8a9787336f8635ec12ed0c6199a70505e0/src/librustc_typeck/check/method#method-lookup\" rel=\"nofollow noreferrer\">the documentation in the source code</a>, and guess that the above question has something to do with the sentence cited below;</p>\n\n<blockquote>\n  <p>However we sometimes do other adjustments and coercions along the way, in particular unsizing (e.g., converting from [T; n] to [T]).`</p>\n</blockquote>\n"}, {"tags": ["json", "rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 10750, "user_id": 213334, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f7d036a88299407f3258b7426829f011?s=128&d=identicon&r=PG", "display_name": "sfactor", "link": "https://stackoverflow.com/users/213334/sfactor"}, "edited": false, "score": 0, "creation_date": 1510413991, "post_id": 47237374, "comment_id": 81429178, "body": "The function that uses the tuples was from another rust project. But I asked the author of that to change it into struct and it worked. Thanks !"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1510423684, "post_id": 47237374, "comment_id": 81432740, "body": "@Shepmaster Please consider not editing minor whitespace &quot;issues&quot;, see <a href=\"https://meta.stackoverflow.com/a/263120/1478356\">meta.stackoverflow.com/a/263120/1478356</a> - I&#39;d like to keep them my way (no spaces in <code>derive(..)</code> and <code>use {...}</code>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1510424365, "post_id": 47237374, "comment_id": 81433007, "body": "@Stefan Everyone is entitled to their own style of course, but I edit <i>every</i> question and answer to the current accepted Rust style as determined by running <code>rustfmt</code>. This allows every future reader of a Q&amp;A to not have to deal with an arbitrary posters chosen style. I encourage you to adopt the community standards and perhaps participate in setting them."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1510424952, "post_id": 47237374, "comment_id": 81433200, "body": "@Shepmaster I think those edits are considered &quot;not ok&quot; by the stackoverflow community, and I think you know it. How about you adopt the edit rules of the community, and perhaps participate in setting them? Maybe the community is open to reconsider style edits when a formatting tool is available."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1510425781, "post_id": 47237374, "comment_id": 81433463, "body": "@Stefan you are always welcome to rollback your code, as you have. I will continue editing Q&amp;A to adhere to the Rust style guide as part of my normal editing (e.g. grammar, typos, formatting, providing complete error messages, etc.) and upvoting Q&amp;A that meet those conditions. I completely and honestly believe that my edits (1) do not harm anyone and (2) make the overall state of Stack Overflow better for  people searching for Rust Q&amp;A. You are welcome to submit me to the Meta tribunal or flag my comments / edits for a moderator if you truly believe I am harming the community."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510426009, "post_id": 47237374, "comment_id": 81433545, "body": "And, before I forget, I apologize for offending you via my edits, that was not my intention."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510426359, "post_id": 47237374, "comment_id": 81433667, "body": "No offense taken, and I appreciate the work you do most of the time :) Not sure I want to escalate this; but please consider that many people find it rude if you edit code they wrote just to make it look the way you like it (even if you&#39;re backed by a code formatting tool), which is the part that imho harms the community."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1510437455, "post_id": 47237374, "comment_id": 81437014, "body": "<i>consider that many people find it rude if you edit</i> \u2014 yes, I am unfortunately aware of this; I&#39;ve had multiple people threaten to quit Stack Overflow because I&#39;ve corrected something in their post (spelling, grammar, formatting, indentation). <i>the way you like it</i> \u2014 who said that <b>I</b> like everything that rustfmt does? <i>harms the community</i> \u2014  perhaps it does harm a subset of the community of people who ask and answer questions; I&#39;m concerning myself with helping every single person who comes to a Q&amp;A from a search engine and doesn&#39;t want to learn a new Rust format just to get an answer."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 4, "last_activity_date": 1510424958, "last_edit_date": 1510424958, "creation_date": 1510399560, "answer_id": 47237374, "question_id": 47237256, "link": "https://stackoverflow.com/questions/47237256/how-to-convert-vector-of-tuples-to-json-objects/47237374#47237374", "title": "How to convert vector of tuples to JSON objects?", "body": "<p>Why are you using tuples? If your tuple fields have \"semantic\" names you should consider a struct instead, which should also solve your serialization issue:</p>\n\n<pre><code>#[derive(Clone,PartialEq,Eq,PartialOrd,Ord,Hash,Debug,Serialize,Deserialize)]\nstruct Entry {\n    pub score: i32,\n    pub text: String,\n}\n</code></pre>\n"}], "owner": {"reputation": 10750, "user_id": 213334, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f7d036a88299407f3258b7426829f011?s=128&d=identicon&r=PG", "display_name": "sfactor", "link": "https://stackoverflow.com/users/213334/sfactor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1278, "favorite_count": 0, "accepted_answer_id": 47237374, "answer_count": 1, "score": 3, "last_activity_date": 1510424958, "creation_date": 1510398735, "last_edit_date": 1510413616, "question_id": 47237256, "link": "https://stackoverflow.com/questions/47237256/how-to-convert-vector-of-tuples-to-json-objects", "title": "How to convert vector of tuples to JSON objects?", "body": "<p>I am creating a REST API in rocket.rs and have a function that returns a vector of tuples that I need to return to the web frontend. The vector is of the form <code>[(1, \"abc\"), (2, \"mno\"), (3, \"xyz\")]</code>.</p>\n\n<p>I need to be send out as a JSON list form <code>[{\"score\": 1, \"text\": \"abc\"}, {\"score\": 2, \"text\": \"mno\"}, {\"score\": 3, \"text\": \"xyz\"}]</code>.</p>\n\n<p>How do I do that in Rust? I tested it using <code>serde</code> as</p>\n\n<pre><code>let my_list: Vec&lt;(i32, String)&gt; = vec![\n    (1, \"abc\".to_string()),\n    (2, \"feg\".to_string()),\n    (3, \"xyz\".to_string()),\n];\nlet serialized = serde_json::to_string(&amp;my_list).unwrap();\n\nprintln!(\"serialized = {}\", serialized);\n</code></pre>\n\n<p>I would need a way to create the key, value pairs and convert. What is the way to do that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1510356437, "post_id": 47232601, "comment_id": 81416039, "body": "If you want to mutate <code>travel</code> why are you cloning it? <a href=\"https://play.rust-lang.org/?gist=a7a21ff881217d703b53209307254b88&amp;version=nightly\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> works just fine. Perhaps your real code is more complex and does more complex stuff with the closures?"}, {"owner": {"reputation": 4461, "user_id": 715458, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qINdT.jpg?s=128&g=1", "display_name": "Bojan Kogoj", "link": "https://stackoverflow.com/users/715458/bojan-kogoj"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1510398161, "post_id": 47232601, "comment_id": 81424481, "body": "Because I&#39;m a complete beginner in rust and cloning is the only way I know to avoid &quot;move&quot; issue, or not running in &quot;already borrowed&quot; or panic. I would like to increment date inside travel so the last one would print 5 (by reference?), which is why I&#39;m asking here."}, {"owner": {"reputation": 4461, "user_id": 715458, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qINdT.jpg?s=128&g=1", "display_name": "Bojan Kogoj", "link": "https://stackoverflow.com/users/715458/bojan-kogoj"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1510398193, "post_id": 47232601, "comment_id": 81424491, "body": "And yes, real code is more complex, this is a simplified version of the problem."}], "answers": [{"comments": [{"owner": {"reputation": 4461, "user_id": 715458, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qINdT.jpg?s=128&g=1", "display_name": "Bojan Kogoj", "link": "https://stackoverflow.com/users/715458/bojan-kogoj"}, "edited": false, "score": 0, "creation_date": 1511168070, "post_id": 47239545, "comment_id": 81729259, "body": "I simplified example too much, while this fixed this example it didn&#39;t the real code. Real example had <code>move</code> closures which needed to change <code>DateTime</code>. Had to use <code>Rc&lt;RefCell&lt;....&gt;&gt;</code> with <code>borrow_mut()</code> to get that working. Thanks anyway"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1510414062, "creation_date": 1510414062, "answer_id": 47239545, "question_id": 47232601, "link": "https://stackoverflow.com/questions/47232601/how-can-i-modify-a-value-outside-of-a-closure-from-the-closure/47239545#47239545", "title": "How can I modify a value outside of a closure from the closure?", "body": "<p>I'd highly recommend going back and re-reading <em>The Rust Programming Language</em>, second edition, <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-01-what-is-ownership.html#ways-variables-and-data-interact-clone\" rel=\"nofollow noreferrer\">specifically the chapter on ownership</a>. After that, check out the documentation for <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Clone</code></a>, emphasis mine:</p>\n\n<blockquote>\n  <p>A common trait for the ability to <strong>explicitly duplicate</strong> an object.</p>\n</blockquote>\n\n<p>When you call <code>.clone()</code>, you create a new copy of the object, completely distinct from the original. Any changes to the clone do not apply to the original.</p>\n\n<p>As said in the comments, you need to remove all references to <code>t1</code> or <code>t2</code> and replace them with <code>travel</code>:</p>\n\n<pre><code>{\n    let first = || {\n        travel.forward();\n        println!(\"{:?}\", travel); // 3\n        travel.forward();\n        println!(\"{:?}\", travel); // 4\n    };\n    first();\n}\n\n{\n    let second = || {\n        travel.forward();\n        println!(\"{:?}\", travel); //5\n    };\n    second();\n}\n</code></pre>\n"}], "owner": {"reputation": 4461, "user_id": 715458, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qINdT.jpg?s=128&g=1", "display_name": "Bojan Kogoj", "link": "https://stackoverflow.com/users/715458/bojan-kogoj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 47239545, "answer_count": 1, "score": -3, "last_activity_date": 1510414137, "creation_date": 1510356037, "last_edit_date": 1510414137, "question_id": 47232601, "link": "https://stackoverflow.com/questions/47232601/how-can-i-modify-a-value-outside-of-a-closure-from-the-closure", "title": "How can I modify a value outside of a closure from the closure?", "body": "<p>I'm trying to change value of <code>date</code> in <code>TimeTravel</code>. Comments indicate what values I would like, but it's not what I get.</p>\n\n<pre><code>use std::cell::Cell;\n\n#[derive(Debug, Clone)]\npub struct TimeTravel {\n    pub date: Cell&lt;i32&gt;,\n}\n\nimpl TimeTravel {\n    pub fn new() -&gt; Self {\n        TimeTravel { date: Cell::new(1) }\n    }\n\n    pub fn forward(&amp;self) -&gt; &amp;Self {\n        let d = self.date.get();\n        self.date.set(d + 1);\n        self\n    }\n}\n\nfn main() {\n    let travel: TimeTravel = TimeTravel::new();\n    println!(\"{:?}\", travel); // 1\n    travel.forward();\n    println!(\"{:?}\", travel); // 2\n\n    {\n        let t1 = travel.clone();\n        let first = || {\n            t1.forward();\n            println!(\"{:?}\", t1); // 3\n            t1.forward();\n            println!(\"{:?}\", t1); // 4\n        };\n        first();\n    }\n\n    {\n        let t2 = travel.clone();\n        let second = || {\n            t2.forward();\n            println!(\"{:?}\", t2); //5\n        };\n        second();\n    }\n}\n</code></pre>\n\n<p>However I get this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>TimeTravel { date: Cell { value: 1 } }\nTimeTravel { date: Cell { value: 2 } }\nTimeTravel { date: Cell { value: 3 } }\nTimeTravel { date: Cell { value: 4 } }\nTimeTravel { date: Cell { value: 3 } }\n</code></pre>\n\n<p>If I understand correctly what is happening, I am changing the value in <code>t1</code> and <code>t2</code>, and not <code>travel</code>. How can I change value of <code>travel</code> inside a closure? </p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a7a21ff881217d703b53209307254b88&amp;version=nightly\" rel=\"nofollow noreferrer\">Example in Rust Playground</a></p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 14346, "user_id": 1251219, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/838f87f5c3a511d3f65fad7d80d55596?s=128&d=identicon&r=PG", "display_name": "Fleshgrinder", "link": "https://stackoverflow.com/users/1251219/fleshgrinder"}, "edited": false, "score": 0, "creation_date": 1510358470, "post_id": 47231363, "comment_id": 81416545, "body": "Now everything starts to make sense, many thanks. =)"}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 8, "last_activity_date": 1510349220, "creation_date": 1510349220, "answer_id": 47231363, "question_id": 47230890, "link": "https://stackoverflow.com/questions/47230890/yet-again-expected-type-parameter-found-struct/47231363#47231363", "title": "Yet again: &quot;expected type parameter, found struct&quot;", "body": "<p>The error message is not that far off in this case, I think.  Your <code>impl</code> says:</p>\n\n<pre><code>impl&lt;R: Read + Seek&gt; S&lt;R&gt;\n</code></pre>\n\n<p>so your <code>new</code> function should create a type which is variable in <code>R</code>, but you only supply a fixed type, <code>Cursor&lt;String&gt;</code>.  Try this instead:</p>\n\n<pre><code>use std::io::{Cursor, Read, Seek};\n\npub struct S&lt;R: Read + Seek&gt; {\n    p: R,\n}\n\nimpl&lt;R: Read + Seek&gt; S&lt;R&gt; {\n    pub fn new(p: R) -&gt; Self {\n        S { p }\n    }\n\n}\n\nimpl S&lt;Cursor&lt;String&gt;&gt; {\n    pub fn from_string(s: String) -&gt; Self {\n        S::new(Cursor::new(s))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 14346, "user_id": 1251219, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/838f87f5c3a511d3f65fad7d80d55596?s=128&d=identicon&r=PG", "display_name": "Fleshgrinder", "link": "https://stackoverflow.com/users/1251219/fleshgrinder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1550, "favorite_count": 0, "closed_date": 1510361063, "accepted_answer_id": 47231363, "answer_count": 1, "score": 3, "last_activity_date": 1510361032, "creation_date": 1510346943, "last_edit_date": 1510361032, "question_id": 47230890, "link": "https://stackoverflow.com/questions/47230890/yet-again-expected-type-parameter-found-struct", "closed_reason": "Duplicate", "title": "Yet again: &quot;expected type parameter, found struct&quot;", "body": "<p>There are already a couple of questions regarding this particular error message. I read them all, but I cannot figure out what the exact problem is that I am facing here, nor how I can fix it.</p>\n\n<p>I have a <code>struct</code> that has a requirement on the argument that is passed in, and I want to provide a few convenience functions for constructing a new instance. Here it comes:</p>\n\n<pre><code>use std::io::{Cursor, Read, Seek};\n\npub struct S&lt;R: Read + Seek&gt; {\n    p: R,\n}\n\nimpl&lt;R: Read + Seek&gt; S&lt;R&gt; {\n    pub fn new(p: R) -&gt; Self {\n        S { p }\n    }\n\n    pub fn from_string(s: String) -&gt; Self {\n        S::new(Cursor::new(s))\n    }\n}\n</code></pre>\n\n<p>The above minimal example gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:13:16\n   |\n13 |         S::new(Cursor::new(s))\n   |                ^^^^^^^^^^^^^^ expected type parameter, found struct `std::io::Cursor`\n   |\n   = note: expected type `R`\n              found type `std::io::Cursor&lt;std::string::String&gt;`\n   = help: here are some functions which might fulfill your needs:\n           - .into_inner()\n</code></pre>\n\n<p>I tried many variations, but I always end up with the same error. Also note that calling <code>S::new</code> with a cursor from somewhere else (e.g. <code>main</code>) works as expected. I know that it has to do with the generic, and so on (from the answers to other similar questions) but: <em>How can I provide such <code>from_*</code> methods along the <code>impl</code> of my <code>struct</code>?</em></p>\n"}, {"tags": ["loops", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1510334388, "post_id": 47227956, "comment_id": 81406387, "body": "I enjoy the level of detail in this question :)."}, {"owner": {"reputation": 43, "user_id": 7647313, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9OJaCnyRaB0/AAAAAAAAAAI/AAAAAAAAABs/Ug_Z3p8SjrE/photo.jpg?sz=128", "display_name": "Aryadev Chavali", "link": "https://stackoverflow.com/users/7647313/aryadev-chavali"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1510335272, "post_id": 47227956, "comment_id": 81406816, "body": "Thank you, I&#39;d rather have a complete report with no discrepancies than an incomplete one that requires constant additions. It is also a new programming language for me, so I really want to get the best solution possible."}], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 7647313, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9OJaCnyRaB0/AAAAAAAAAAI/AAAAAAAAABs/Ug_Z3p8SjrE/photo.jpg?sz=128", "display_name": "Aryadev Chavali", "link": "https://stackoverflow.com/users/7647313/aryadev-chavali"}, "edited": false, "score": 0, "creation_date": 1510335574, "post_id": 47228168, "comment_id": 81406960, "body": "So should I use <code>.trim()</code> for the input? Would this be a solution?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 43, "user_id": 7647313, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9OJaCnyRaB0/AAAAAAAAAAI/AAAAAAAAABs/Ug_Z3p8SjrE/photo.jpg?sz=128", "display_name": "Aryadev Chavali", "link": "https://stackoverflow.com/users/7647313/aryadev-chavali"}, "edited": false, "score": 1, "creation_date": 1510336581, "post_id": 47228168, "comment_id": 81407498, "body": "You could use <code>read_line</code> instead of <code>read!()</code> and trim the returned line before comparing with <code>[yYnN]</code>."}, {"owner": {"reputation": 43, "user_id": 7647313, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9OJaCnyRaB0/AAAAAAAAAAI/AAAAAAAAABs/Ug_Z3p8SjrE/photo.jpg?sz=128", "display_name": "Aryadev Chavali", "link": "https://stackoverflow.com/users/7647313/aryadev-chavali"}, "edited": false, "score": 0, "creation_date": 1510343410, "post_id": 47228168, "comment_id": 81410829, "body": "Thank you very much, it turned out very well. Compilation and execution is working perfectly! =)"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 4, "last_activity_date": 1510395529, "last_edit_date": 1510395529, "creation_date": 1510334826, "answer_id": 47228168, "question_id": 47227956, "link": "https://stackoverflow.com/questions/47227956/loop-is-running-twice/47228168#47228168", "title": "loop{} is running twice?", "body": "<p>I guess pressing enter leads to <code>CRLF</code> (<code>\\r\\n</code>) (on Windows; on Linux it seems to work fine), i.e. two whitespace characters.  <code>read!</code> will only read one of them, and the next <code>read_line</code> call will return an empty line (string with only <code>\\n</code> (<code>0x0a</code>)).</p>\n"}], "owner": {"reputation": 43, "user_id": 7647313, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9OJaCnyRaB0/AAAAAAAAAAI/AAAAAAAAABs/Ug_Z3p8SjrE/photo.jpg?sz=128", "display_name": "Aryadev Chavali", "link": "https://stackoverflow.com/users/7647313/aryadev-chavali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 47228168, "answer_count": 1, "score": 4, "last_activity_date": 1510395529, "creation_date": 1510333937, "last_edit_date": 1510361221, "question_id": 47227956, "link": "https://stackoverflow.com/questions/47227956/loop-is-running-twice", "title": "loop{} is running twice?", "body": "<p>I have fully coded the program from \"The Rust Programming Language\" book online, <a href=\"https://doc.rust-lang.org/book/second-edition/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">chapter 2</a>. I have also developed it a tiny bit further than provided: by adding a simple question/response where the user gets to play again by inputting \"y\". </p>\n\n<p>However, I am experiencing a slight bug in my program. When a user opts to run the game again, the text output \"Please input a (number) guess\" is repeated twice. Of course, this does <strong>not</strong> take away from the main functionality of the program (it still functions fine after the repeat), but it does seem weird and I'd prefer to remove the issue now rather than leaving it. </p>\n\n<p>I have done some debugging, which has resulted in me concluding it is definitely happening in the [figure 3] area in the code. To see how I did so, go to the debugging area below. </p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>extern crate rand;\n#[macro_use]\nextern crate text_io;\n\nuse rand::Rng;\nuse std::io;\nuse std::cmp::Ordering;\n\n//Main code\nfn main() {\n    // Generate random number, create premise\n    println!(\"Guess the number!\");\n    let mut breaking_choice = false;\n    while !breaking_choice {\n        let secret_number = rand::thread_rng().gen_range(1, 101);\n        // **Problem area**\n        loop {\n            println!(\"Please input a (number) guess\");\n            println!(\"1\"); // [**REFERENCE 1**]\n            let mut guess = String::new();\n            io::stdin()\n                .read_line(&amp;mut guess)\n                .expect(\"Failed to read line\");\n            println!(\"2\"); // [**REFERENCE 2**]\n            let guess: u32 = match guess.trim().parse() { // [FIGURE 3]\n                Ok(num) =&gt; num,                           // [FIGURE 3]\n                Err(_) =&gt; continue,                       // [FIGURE 3]\n            };\n\n            // ...until correct\n            match guess.cmp(&amp;secret_number) {\n                Ordering::Less =&gt; println!(\"Too small\"),\n                Ordering::Greater =&gt; println!(\"Too big\"),\n                Ordering::Equal =&gt; {\n                    println!(\"Correct!\");\n                    break;\n                }\n            }\n        }\n\n        // **Possible problem area**\n        println!(\"Would you like to continue playing? Y or N\");\n        let choice: String = read!();\n\n        if choice == \"N\" {\n            breaking_choice = true\n        } else if choice == \"n\" {\n            breaking_choice = true\n        } else if choice == \"Y\" {\n            continue;\n        } else if choice == \"y\" {\n            continue;\n        }\n    }\n}\n</code></pre>\n\n<p><strong>Debugging</strong></p>\n\n<p>The first thing I did was place some simple <code>println!</code> commands at the main processing areas of the questionable code: [Reference 1] and [Reference 2]. This allowed me to see whether any of the commands were the problem in between them to give me a slightly better angle as to what is happening. I also replaced the random number generator with a set number (<code>let secret_number = 5;</code>)</p>\n\n<p>This is what happened in compilation:</p>\n\n<p><img src=\"https://i.stack.imgur.com/xbmgH.png\" /></p>\n\n<p>and this is what happened in execution:</p>\n\n<p><img src=\"https://i.stack.imgur.com/oZmHd.png\" /></p>\n\n<p>From these results, I believe that the error is occurring in [FIGURE 3] (main input verification) because that is where it seems to stop. </p>\n\n<p>I have put <code>println!(\"3\");</code> just before <code>//...until correct</code>, which doesn't output in the first loop. Therefore, it is at [FIGURE 3] that the program is having the problem.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510327948, "post_id": 47226185, "comment_id": 81402499, "body": "Is there some way to hint the compiler? Or custom traits is way to go here?"}, {"owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510328033, "post_id": 47226185, "comment_id": 81402554, "body": "Yep, that does not seem very ergonomic (which was original intention of acceptation many things at once anyway). I will go with custom traits then."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 1, "creation_date": 1510328096, "post_id": 47226185, "comment_id": 81402601, "body": "@usamec it kind of feels like you might be on the edge of the <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a> \u2014 what are you ultimately trying to do?"}, {"owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510328128, "post_id": 47226185, "comment_id": 81402626, "body": "Wrapper around this: <a href=\"https://github.com/Microsoft/CNTK/blob/release/2.2/Source/CNTKv2LibraryDll/API/CNTKLibrary.h\" rel=\"nofollow noreferrer\">github.com/Microsoft/CNTK/blob/release/2.2/Source/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510328165, "post_id": 47226185, "comment_id": 81402651, "body": "Which function, specifically?"}, {"owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510328185, "post_id": 47226185, "comment_id": 81402664, "body": "All of them. The problem is you have function like plus, which has signature: fn (x: Variable, y: Variable) -&gt; FunctionPtr  But FunctionPtr can be converted into Variable (in C++)."}, {"owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 0, "creation_date": 1510328311, "post_id": 47226185, "comment_id": 81402738, "body": "But maybe the solution is to not allow borrow and go only with .clone (since everything in that lib is shared_ptr anyway)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "edited": false, "score": 1, "creation_date": 1510328807, "post_id": 47226185, "comment_id": 81403022, "body": "@usamec You can also <code>impl&lt;&#39;a&gt; From&lt;&amp;&#39;a Variable&gt; for Variable</code> as well as <code>From&lt;FunctionPtr&gt;</code> and <code>From&lt;&amp;&#39;a FunctionPtr&gt;</code>, as appropriate."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1510327992, "last_edit_date": 1510327992, "creation_date": 1510327746, "answer_id": 47226185, "question_id": 47225805, "link": "https://stackoverflow.com/questions/47225805/is-there-a-way-to-write-a-function-which-accepts-a-reference-a-move-or-a-conve/47226185#47226185", "title": "Is there a way to write a function which accepts a reference, a move, or a conversion using only traits from the standard library?", "body": "<p>This is disallowed because there's the possibility of multiple paths. For example, the type passed in might implement <code>Into&lt;A&gt;</code> <strong>and</strong> <code>Into&lt;B&gt;</code>. If  both <code>A</code> and <code>B</code> implement <code>Borrow&lt;X&gt;</code>, it would be ambiguous which conversion would be appropriate.</p>\n\n<p>As the error message states, you can use type annotations (a.k.a. the <em>turbofish</em>) to tell the compiler which intermediate type you wish to convert into:</p>\n\n<pre><code>foo::&lt;_, X&gt;(X);\n</code></pre>\n"}], "owner": {"reputation": 1810, "user_id": 1391392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e02980bdb58baa615c3c7f0d8952b9b9?s=128&d=identicon&r=PG", "display_name": "usamec", "link": "https://stackoverflow.com/users/1391392/usamec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 47226185, "answer_count": 1, "score": 0, "last_activity_date": 1510327992, "creation_date": 1510326578, "last_edit_date": 1510327348, "question_id": 47225805, "link": "https://stackoverflow.com/questions/47225805/is-there-a-way-to-write-a-function-which-accepts-a-reference-a-move-or-a-conve", "title": "Is there a way to write a function which accepts a reference, a move, or a conversion using only traits from the standard library?", "body": "<p>I can write a function which accepts <code>X</code> and <code>&amp;X</code>:</p>\n\n<pre><code>fn foo&lt;T: Borrow&lt;X&gt;&gt;(x: T)\n</code></pre>\n\n<p>I can write a function which accepts <code>X</code>, <code>Y</code> and <code>&amp;Y</code>, assuming the <code>Into</code> trait is implemented on <code>Borrow&lt;Y&gt;</code>:</p>\n\n<pre><code>fn foo&lt;T: Into&lt;X&gt;&gt;(x: T)\n</code></pre>\n\n<p>Is there a way to write a function which accepts <code>X</code>, <code>&amp;X</code>, <code>Y</code> and <code>&amp;Y</code> using only standard traits? I can do it using custom traits, but using standard ones would be much better.</p>\n\n<p>I tried:</p>\n\n<pre><code>use std::borrow::Borrow;\n\nfn foo&lt;TT: Into&lt;T&gt;, T: Borrow&lt;X&gt;&gt;(x: TT) {}\n\nstruct X;\n\nfn main() {\n    foo(X);\n}\n</code></pre>\n\n<p>But I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: std::borrow::Borrow&lt;X&gt;`\n --&gt; src/main.rs:8:5\n  |\n8 |     foo(X);\n  |     ^^^\n  |\n  = note: required by `foo`\n</code></pre>\n"}, {"tags": ["ssl", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 160, "user_id": 2869674, "user_type": "registered", "profile_image": "https://graph.facebook.com/100002681476958/picture?type=large", "display_name": "Arthur  Bulakaiev", "link": "https://stackoverflow.com/users/2869674/arthur-bulakaiev"}, "edited": false, "score": 1, "creation_date": 1608297047, "post_id": 47284049, "comment_id": 115546838, "body": "It helps me, but now the syntax changed to: [source.crates-io] replace-with = &#39;my-awesome-registry&#39; [source.my-awesome-registry] registry = &#39;file:///C:/Users/someuser/crates.io-index.git&#39;"}], "tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 6, "last_activity_date": 1510657325, "creation_date": 1510657325, "answer_id": 47284049, "question_id": 47221811, "link": "https://stackoverflow.com/questions/47221811/cargo-ssl-download-error-behind-proxy-on-windows/47284049#47284049", "title": "cargo ssl download error behind proxy on windows", "body": "<p>I struggled with this a while but finally figured out a work around. I post this here as a possible solution for those behind corporate firewalls. It does, sadly, reduce adoption of rust if people can't install it easily at work.</p>\n\n<p>Download the crates-io from github</p>\n\n<pre><code>git clone --bare https://github.com/rust-lang/crates.io-index.git\n</code></pre>\n\n<p>In $HOME/.cargo/config file set the registry like</p>\n\n<pre><code>[registry]\nindex = \"file:///C:/Users/someuser/crates.io-index.git\"\n</code></pre>\n\n<p>This stops the registry download via libgit-curl which apparently doesn't support https_proxy.</p>\n\n<p>A longer term solution I think (but I've not tested this yet), is to rebuild cargo with libgit-curl supporting https.</p>\n"}, {"comments": [{"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1549028779, "post_id": 54480083, "comment_id": 95768426, "body": "No that doesn&#39;t work as cargo/rustup don&#39;t seem to obey the SSPI authentication on windows. A more robust way is to use <a href=\"https://github.com/genotrance/px\" rel=\"nofollow noreferrer\">github.com/genotrance/px</a> that is written to solve this specific issue and can work with other apps too"}, {"owner": {"reputation": 3984, "user_id": 4121573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kxnXk.png?s=128&g=1", "display_name": "Adonis", "link": "https://stackoverflow.com/users/4121573/adonis"}, "reply_to_user": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1549030626, "post_id": 54480083, "comment_id": 95769502, "body": "@Ronnie Funnily enough it worked from my LAN with a HTTP proxy"}, {"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 1, "creation_date": 1549039384, "post_id": 54480083, "comment_id": 95774440, "body": "it seems to different based on different companies I&#39;ve worked - go figure."}], "tags": [], "owner": {"reputation": 3984, "user_id": 4121573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/kxnXk.png?s=128&g=1", "display_name": "Adonis", "link": "https://stackoverflow.com/users/4121573/adonis"}, "is_accepted": false, "score": 1, "last_activity_date": 1549031819, "last_edit_date": 1549031819, "creation_date": 1549026007, "answer_id": 54480083, "question_id": 47221811, "link": "https://stackoverflow.com/questions/47221811/cargo-ssl-download-error-behind-proxy-on-windows/54480083#54480083", "title": "cargo ssl download error behind proxy on windows", "body": "<p>Now (not sure if it was possible at the time) you have another possible solution for this issue, by updating your <code>~/.cargo/config</code> this way :</p>\n\n<pre><code>[http]\nproxy = \"http://&lt;user&gt;:&lt;password&gt;@&lt;proxy_url&gt;\"\ncheck-revoke = false\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2426, "favorite_count": 4, "answer_count": 2, "score": 5, "last_activity_date": 1549031819, "creation_date": 1510313343, "question_id": 47221811, "link": "https://stackoverflow.com/questions/47221811/cargo-ssl-download-error-behind-proxy-on-windows", "title": "cargo ssl download error behind proxy on windows", "body": "<p>I cannot get cargo to commence any downloads under windows behind an authenticated proxy. </p>\n\n<p>Here are my proxy settings:-</p>\n\n<pre><code>C:\\Users\\ukb99427\\Downloads\n\u03bb set | grep http\nhttps_proxy=http://user:pass@corporate.proxy:8080\nhttp_proxy=http://user:pass@corporate.proxy:8080\n</code></pre>\n\n<p>Note the http<strong>s</strong>_proxy has a <strong>http</strong> address. This allows something like git and incidentally rustup-init and rustup to work fine. Output from those are</p>\n\n<pre><code>\u03bb rustup update\ninfo: syncing channel updates for 'stable-x86_64-pc-windows-msvc'\ninfo: syncing channel updates for 'nightly-x86_64-pc-windows-msvc'\ninfo: latest update on 2017-11-10, rust version 1.23.0-nightly (d6b06c63a 2017-11-09)\ninfo: downloading component 'rustc'\n 33.4 MiB /  33.4 MiB (100 %)   2.7 MiB/s ETA:   0 s\n</code></pre>\n\n<p>But when running an equivalent <code>cargo install</code> command I get the following</p>\n\n<pre><code>\u03bb cargo install libc\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nwarning: spurious network error (2 tries remaining): [12/-2] [56] Failure when receiving data from the peer\nwarning: spurious network error (1 tries remaining): [12/-2] [56] Failure when receiving data from the peer\n</code></pre>\n\n<p>As a test I can run <strong>curl</strong></p>\n\n<pre><code>\u03bb curl --insecure https://github.com/rust-lang/crates.io-index -o registry.html\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  785k    0  785k    0     0   389k      0 --:--:--  0:00:02 --:--:--  393k\n</code></pre>\n\n<p>Alternatively I try setting the https_proxy to <strong>https</strong>://user:pass@corporate.proxy:8080</p>\n\n<p>and get the following</p>\n\n<pre><code>\u03bb cargo install libc\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nwarning: spurious network error (2 tries remaining): [12/-2] [4] A requested feature, protocol or option was not found built-in in this libcurl due to a build-time decision. (Unsupported proxy 'https://user:pass@corporate.proxy:8080', libcurl is built without the HTTPS-proxy support.)\nwarning: spurious network error (1 tries remaining): [12/-2] [4] A requested feature, protocol or option was not found built-in in this libcurl due to a build-time decision. (Unsupported proxy 'https://user:pass@corporate.proxy:8080', libcurl is built without the HTTPS-proxy support.)\nerror: failed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n  [12/-2] [4] A requested feature, protocol or option was not found built-in in this libcurl due to a build-time decision. (Unsupported proxy 'https://user:pass@corporate.proxy:8080', libcurl is built without the HTTPS-proxy support.)\n</code></pre>\n\n<p>For reference curl --version outputs</p>\n\n<pre><code>\u03bb curl --version\ncurl 7.53.0 (x86_64-w64-mingw32) libcurl/7.53.0 OpenSSL/1.0.2k zlib/1.2.11 libssh2/1.8.0 nghttp2/1.19.0 librtmp/2.3\nProtocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smtp smtps telnet tftp\nFeatures: IPv6 Largefile SSPI Kerberos SPNEGO NTLM **SSL** libz TLS-SRP HTTP2 HTTPS-proxy Metalink\n</code></pre>\n\n<p>Cargo version</p>\n\n<pre><code>\u03bb cargo version\ncargo 0.24.0-nightly (b83550edc 2017-11-04)\n</code></pre>\n\n<p>Is there any way to get cargo to use the same settings as rustup,git or curl? Other apps work ok, with sslverify=false (such as git), which is at best a work around, but would get me somewhere as opposed to nowhere.</p>\n\n<p>This is all on Windows10, behind a authenticated proxy. With no user/pass given, it (and any application) exits with http error 407 which makes sense. For windows apps, they use the IE settings which work fine (for applications like Visual Studio Code or anything similar)</p>\n\n<p>The only alternative I can think of is to force everything to use http only, but I don't know of any settings to make that happen for cargo.</p>\n\n<p>Any thoughts on what else I can try?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1510299850, "creation_date": 1510299850, "answer_id": 47217912, "question_id": 47217869, "link": "https://stackoverflow.com/questions/47217869/interpolate-macro-matcher-into-a-string-literal/47217912#47217912", "title": "Interpolate macro matcher into a string literal", "body": "<p><a href=\"https://doc.rust-lang.org/std/macro.stringify.html\" rel=\"nofollow noreferrer\">Yes</a>.</p>\n\n<pre><code>macro_rules! print_ident {\n    ($i:ident) =&gt; {\n        println!(stringify!($i));  \n    };\n}\n\nfn main() {\n    print_ident!(foo);\n}\n</code></pre>\n"}], "owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "closed_date": 1510329380, "accepted_answer_id": 47217912, "answer_count": 1, "score": 2, "last_activity_date": 1510323273, "creation_date": 1510299621, "last_edit_date": 1510323273, "question_id": 47217869, "link": "https://stackoverflow.com/questions/47217869/interpolate-macro-matcher-into-a-string-literal", "closed_reason": "Duplicate", "title": "Interpolate macro matcher into a string literal", "body": "<p>This snippet prints <code>$i</code>, but I would like it to print <code>foo</code>. I've tried a few variations on this theme which didn't work, nor was I able to find anything in the documentation about this behavior. Is there syntax to make this possible?</p>\n\n<pre><code>macro_rules! print_ident {\n    ($i:ident) =&gt; {\n        println!(\"$i\");  \n    };\n}\n\nfn main() {\n    print_ident!(foo);\n}\n</code></pre>\n"}, {"tags": ["build", "rust", "embedded-resource", "rust-cargo", "build-script"], "answers": [{"tags": [], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "is_accepted": false, "score": 10, "last_activity_date": 1578729781, "last_edit_date": 1578729781, "creation_date": 1510298083, "answer_id": 47217507, "question_id": 47217283, "link": "https://stackoverflow.com/questions/47217283/how-do-i-generate-a-text-file-during-compile-time-and-include-its-content-in-the/47217507#47217507", "title": "How do I generate a text file during compile time and include its content in the output?", "body": "<p>The trick was </p>\n\n<pre><code>concat!(env!(\"OUT_DIR\"), \"/file_path.txt\")\n</code></pre>\n\n<p>I changed my main.rs as follows and it worked.</p>\n\n<pre><code>fn main() {\n\n    static LONG_STRING: &amp;'static str = include_str!(concat!(env!(\"OUT_DIR\"), \"/file_path.txt\"));\n\n    println!(\"{}\", LONG_STRING);\n}\n</code></pre>\n\n<p>The following crates.io documentation helped</p>\n\n<p><a href=\"http://doc.crates.io/build-script.html\" rel=\"noreferrer\">http://doc.crates.io/build-script.html</a></p>\n\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"noreferrer\">https://doc.rust-lang.org/cargo/reference/environment-variables.html</a></p>\n"}, {"tags": [], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "is_accepted": false, "score": 2, "last_activity_date": 1510323439, "last_edit_date": 1510323439, "creation_date": 1510311052, "answer_id": 47221085, "question_id": 47217283, "link": "https://stackoverflow.com/questions/47217283/how-do-i-generate-a-text-file-during-compile-time-and-include-its-content-in-the/47221085#47221085", "title": "How do I generate a text file during compile time and include its content in the output?", "body": "<p>If anyone is interested in a more convenient way to achieve the same, I also created the <a href=\"https://crates.io/crates/build_script_file_gen\" rel=\"nofollow noreferrer\">build_script_file_gen crate</a> which can be used as follows</p>\n\n<h3>build.rs</h3>\n\n<pre><code>extern crate build_script_file_gen;\nuse build_script_file_gen::gen_file_str;\n\nfn main() {\n    let file_content = \"Hello World!\";\n    gen_file_str(\"hello.txt\", &amp;file_content);\n}\n</code></pre>\n\n<h3>main.rs</h3>\n\n<pre><code>#[macro_use]\nextern crate build_script_file_gen;\n\nfn main() {\n    println!(include_file_str!(\"hello.txt\"));\n}\n</code></pre>\n"}], "owner": {"reputation": 4030, "user_id": 454378, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/35ecec2dbfe92776f966832447c8ac2d?s=128&d=identicon&r=PG", "display_name": "Harindaka", "link": "https://stackoverflow.com/users/454378/harindaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1391, "favorite_count": 2, "answer_count": 2, "score": 6, "last_activity_date": 1578729781, "creation_date": 1510297187, "last_edit_date": 1510323403, "question_id": 47217283, "link": "https://stackoverflow.com/questions/47217283/how-do-i-generate-a-text-file-during-compile-time-and-include-its-content-in-the", "title": "How do I generate a text file during compile time and include its content in the output?", "body": "<p>I'm trying to do almost the same as <a href=\"https://stackoverflow.com/questions/32956050/how-to-create-a-static-string-at-compile-time\">How to create a static string at compile time</a>.</p>\n\n<h3>build.rs</h3>\n\n<pre><code>use std::{env};\nuse std::path::Path;\nuse std::io::{Write, BufWriter};\nuse std::fs::File;\n\nfn main() {\n    let out_dir = env::var(\"OUT_DIR\").unwrap();\n    let dest_path = Path::new(&amp;out_dir).join(\"file_path.txt\");\n    let mut f = BufWriter::new(File::create(&amp;dest_path).unwrap());\n\n    let long_string = dest_path.display();\n    write!(f, \"{}\", long_string).unwrap();\n}\n</code></pre>\n\n<h3>main.rs</h3>\n\n<pre><code>fn main() {\n\n    static LONG_STRING: &amp;'static str = include_str!(\"file_path.txt\");\n    println!(\"{}\", LONG_STRING);\n}\n</code></pre>\n\n<p>Upon <code>cargo build</code> I'm getting the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: couldn't read src\\file_path.txt: The system cannot find the file specified. (os error 2)\n --&gt; src\\main.rs:3:40\n  |\n3 |     static LONG_STRING: &amp;'static str = include_str!(\"file_path.txt\");\n  |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I can see that the file is generated at </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>X:\\source\\github\\rust-build-script-example\\target\\debug\\build\\rust-build-script-example-f2a03ef7abfd6b23\\out\\file_path.txt\n</code></pre>\n\n<ol>\n<li>What is the environment variable I have to use instead of OUT_DIR in order to get the <code>file_path.txt</code> to be output to the <code>src</code> directory?</li>\n<li>If #1 is not possible, then how do I <code>include_str!</code> the generated file in the above directory without hardcoding it in code (since the path seems to have a randomly generated partial <code>rust-build-script-example-f2a03ef7abfd6b23</code> in it)</li>\n</ol>\n\n<p><a href=\"https://github.com/harindaka/rust-build-script-example/tree/7b212769d628d149389482be05551004f6b03a06\" rel=\"noreferrer\">My GitHub repository</a></p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 2215, "user_id": 243058, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/172c852982356639c7c85dbc6f78b451?s=128&d=identicon&r=PG", "display_name": "bow", "link": "https://stackoverflow.com/users/243058/bow"}, "edited": false, "score": 1, "creation_date": 1510239480, "post_id": 47204707, "comment_id": 81358612, "body": "A workaround is to use type aliases for the chained iterator, I think. I don&#39;t think returning abstract types (which in this case would be returning an iterator from <code>short_lines</code> is possible yet in stable rust. Check out the discussion on <code>impl Trait</code>for this (here&#39;s the tracking issue: <a href=\"https://github.com/rust-lang/rust/issues/34511\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/34511</a>). You can already do some of this using the nightly toolchain"}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510240289, "post_id": 47205007, "comment_id": 81359201, "body": "I think the <code>&#39;r</code> lifetime isn&#39;t needed and could be removed."}, {"owner": {"reputation": 130791, "user_id": 266795, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3b59ae9a92deace346db01f415789f20?s=128&d=identicon&r=PG", "display_name": "Peter Lyons", "link": "https://stackoverflow.com/users/266795/peter-lyons"}, "edited": false, "score": 2, "creation_date": 1510240365, "post_id": 47205007, "comment_id": 81359262, "body": "Thanks for this! Please consider that I&#39;m learning rust and long complex type signatures are new to me and just because I understand basically &quot;the types are wrong&quot; I can&#39;t necessarily understand a 100-character type signature yet and how to interpret the compiler messages meaningfully."}, {"owner": {"reputation": 130791, "user_id": 266795, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3b59ae9a92deace346db01f415789f20?s=128&d=identicon&r=PG", "display_name": "Peter Lyons", "link": "https://stackoverflow.com/users/266795/peter-lyons"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510240776, "post_id": 47205007, "comment_id": 81359595, "body": "@Stefan yes I confirm <code>&#39;r</code> is not required."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1510246857, "last_edit_date": 1510246857, "creation_date": 1510239487, "answer_id": 47205007, "question_id": 47204707, "link": "https://stackoverflow.com/questions/47204707/extract-chain-of-iterator-calls-to-a-helper-function/47205007#47205007", "title": "Extract chain of iterator calls to a helper function", "body": "<blockquote>\n  <p>I can't figure out the type signatures to get this to compile.</p>\n</blockquote>\n\n<p>The compiler <em>told you</em> what it was.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:35:5\n   |\n35 |     reader.lines().map(unwrap).filter(is_short)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found fn item\n   |\n   = note: expected type `std::iter::Filter&lt;std::iter::Map&lt;_, &amp;'a for&lt;'r&gt; std::ops::FnMut(&amp;'r str, bool) + 'a&gt;, &amp;'a for&lt;'r&gt; std::ops::FnMut(&amp;'r str, bool) + 'a&gt;`\n              found type `std::iter::Filter&lt;std::iter::Map&lt;_, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String {unwrap}&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool {is_short}&gt;`\n</code></pre>\n\n<p>Now, granted, you can't just copy+paste this directly.  You have to replace the <code>_</code> type with the actual one you already had (it left it out because it was already correct).  Secondly, you need to delete the <code>{unwrap}</code> and <code>{is_short}</code> bits; those are because function items have unique types, and that's how the compiler annotates them.  Sadly, you can't actually <em>write</em> these types out.</p>\n\n<p>Recompile and...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:35:5\n   |\n32 |      -&gt; std::iter::Filter&lt;std::iter::Map&lt;std::io::Lines&lt;T&gt;, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool&gt;\n   |         -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- expected `std::iter::Filter&lt;std::iter::Map&lt;std::io::Lines&lt;T&gt;, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool&gt;` because of return type\n...\n35 |     reader.lines().map(unwrap).filter(is_short)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected fn pointer, found fn item\n   |\n   = note: expected type `std::iter::Filter&lt;std::iter::Map&lt;_, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool&gt;`\n              found type `std::iter::Filter&lt;std::iter::Map&lt;_, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String {unwrap}&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool {is_short}&gt;`\n</code></pre>\n\n<p>Remember what I said about function items have unique types?  Yeah, that.  To fix <em>that</em>, we cast from a function item to a function pointer.  We don't even need to specify what we're casting to, we just have to let the compiler know we want it to do a cast.</p>\n\n<pre><code>fn short_lines&lt;'a, T&gt;\n    (reader: &amp;'a T)\n     -&gt; std::iter::Filter&lt;std::iter::Map&lt;std::io::Lines&lt;T&gt;, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool&gt;\n    where T: io::BufRead\n{\n    reader.lines().map(unwrap as _).filter(is_short as _)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:41:29\n   |\n41 |     let count = short_lines(reader).count();\n   |                             ^^^^^^ expected reference, found struct `std::io::BufReader`\n   |\n   = note: expected type `&amp;_`\n              found type `std::io::BufReader&lt;&amp;std::fs::File&gt;`\n   = help: try with `&amp;reader`\n</code></pre>\n\n<p>Again, the compiler tells you exactly what to do.  Make the change and...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:35:5\n   |\n35 |     reader.lines().map(unwrap as _).filter(is_short as _)\n   |     ^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Right, that's because you got the <em>input</em> of <code>short_lines</code> wrong.  One more change:</p>\n\n<pre><code>fn short_lines&lt;T&gt;\n    (reader: T)\n     -&gt; std::iter::Filter&lt;std::iter::Map&lt;std::io::Lines&lt;T&gt;, fn(std::result::Result&lt;std::string::String, std::io::Error&gt;) -&gt; std::string::String&gt;, for&lt;'r&gt; fn(&amp;'r std::string::String) -&gt; bool&gt;\n    where T: io::BufRead\n{\n    reader.lines().map(unwrap as _).filter(is_short as _)\n}\n</code></pre>\n\n<p>And now all you have to deal with are warnings.</p>\n\n<p>In short: read the compiler messages.  They're useful.</p>\n"}, {"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "edited": false, "score": 1, "creation_date": 1510254020, "post_id": 47205050, "comment_id": 81368263, "body": "@MihailsStrasuns I make no assumptions about the constraints of the asker, nor was it the point of the question. With today&#39;s computers memory is rarely an issue and for a simple task like this it might be a totally valid solution. How about an alternative perspective: the fact how easy are Rust users with casually reading the same file twice (while doing things in memory is an order of magnitude faster) is one of the biggest problems with the language ecosystem :P."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "edited": false, "score": 1, "creation_date": 1510254479, "post_id": 47205050, "comment_id": 81368524, "body": "@MihailsStrasuns hahaha! I&#39;d actually say it&#39;s the other way \u2014 many Rustaceans are <i>overly</i> worried about writing efficient code but neglecting programmer efficiency! I&#39;d love to be pointed at some references you have where people are overly using memory allocation. Rust&#39;s references and lifetimes actually make it much <i>easier</i> to pass references around, avoiding &quot;just in case&quot; allocations."}, {"owner": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1510309046, "post_id": 47205050, "comment_id": 81390295, "body": "@Shepmaster you don&#39;t have to look far - the very <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/io/trait.BufRead.html#method.lines</a> allocates each line as new string. And the fact that this was considered acceptable for standard library primitive tells a lot about dominant attitude.  Micro-optimizations are bad but here we are talking about O(n) memory allocations for a task that inherently requires O(1) memory footprint (and a single file pass) and can be expressed efficiently with a similar amount of code. For small specializeds app that can result in huge performance penalty."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "edited": false, "score": 0, "creation_date": 1510323780, "post_id": 47205050, "comment_id": 81399659, "body": "@MihailsStrasuns yes, there&#39;s <a href=\"https://stackoverflow.com/q/30422177/155423\">a current language limitation about returning references into the iterator itself</a>, so unfortunately that&#39;s the only way to write the iterator version <i>right now</i>. However, <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line\" rel=\"nofollow noreferrer\"><code>BufRead::read_line</code></a> exists on the exact same trait (so it&#39;s equally easy to find) and gives you exactly the performance characteristics that you are seeking."}, {"owner": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "edited": false, "score": 0, "creation_date": 1510328904, "post_id": 47205050, "comment_id": 81403080, "body": "I know about the limitation, even wrote blog post once investigating how it affects difference between Rust iterators and D ranges. My point is that language has happily reached 1.0 with such fundamental design problem being known - it wasn&#39;t considered important enough to put major effort into it in time. And by now it is too late because libraries are already getting written.  There is no inherent reason why <code>lines</code> can&#39;t be as efficient as <code>read_line</code>. It is simply not considered important enough and that is extremely sad."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3679, "user_id": 186556, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8a468d0d197f658d97dfe7d169ad2f4?s=128&d=identicon&r=PG", "display_name": "Mihails Strasuns", "link": "https://stackoverflow.com/users/186556/mihails-strasuns"}, "edited": false, "score": 2, "creation_date": 1510329890, "post_id": 47205050, "comment_id": 81403723, "body": "@MihailsStrasuns <i>it is simply not considered important enough</i> \u2014 then I&#39;m sure you will be pleased to hear that the Rust community <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">is working hard on making it possible</a>. Yes, it&#39;s disappointing that it wasn&#39;t in Rust 1.0, but major projects have been built without it, and I&#39;d say having a thriving ecosystem is more important than theoretical purity. I&#39;ll disagree that it&#39;s &quot;too late&quot; as I strongly believe that the community will pick up new tools and techniques and use them effectively."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1510252976, "last_edit_date": 1510252976, "creation_date": 1510239598, "answer_id": 47205050, "question_id": 47204707, "link": "https://stackoverflow.com/questions/47204707/extract-chain-of-iterator-calls-to-a-helper-function/47205050#47205050", "title": "Extract chain of iterator calls to a helper function", "body": "<p>I'd suggest doing it the simple way - collecting the iterator into a vector:</p>\n\n<pre><code>use std::fs;\nuse std::io;\nuse std::io::prelude::*;\n\nconst WORDS_PATH: &amp;str = \"/usr/share/dict/words\";\n\nfn main() {\n    let file = fs::File::open(WORDS_PATH).unwrap();\n    let reader = io::BufReader::new(&amp;file);\n    let short_lines = reader.lines()\n                            .map(|l| l.unwrap())\n                            .filter(|l| l.len() &lt; 7)\n                            .collect::&lt;Vec&lt;_&gt;&gt;(); // the element type can just be inferred\n    let count = short_lines.len();\n    println!(\"{:?}\", count);\n\n    let sample_size = (0.05 * count as f32) as usize; // 5% sample\n\n    for line in &amp;short_lines[0..sample_size] {\n        println!(\"{}\", line);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 130791, "user_id": 266795, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3b59ae9a92deace346db01f415789f20?s=128&d=identicon&r=PG", "display_name": "Peter Lyons", "link": "https://stackoverflow.com/users/266795/peter-lyons"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "closed_date": 1510324377, "accepted_answer_id": 47205007, "answer_count": 2, "score": 2, "last_activity_date": 1510252976, "creation_date": 1510238653, "last_edit_date": 1510246912, "question_id": 47204707, "link": "https://stackoverflow.com/questions/47204707/extract-chain-of-iterator-calls-to-a-helper-function", "closed_reason": "Duplicate", "title": "Extract chain of iterator calls to a helper function", "body": "<p>I'm trying to write a function that will encapsulate a series of chained iterator method calls (<code>.lines().map(...).filter(...)</code>) which I currently have duplicated. I can't figure out the type signatures to get this to compile. If this is impossible or highly unidiomatic for Rust, I'm open to suggestions for an idiomatic approach.</p>\n\n<pre><code>use std::fs;\nuse std::io;\nuse std::io::prelude::*;\nuse std::iter;\n\nconst WORDS_PATH: &amp;str = \"/usr/share/dict/words\";\n\nfn is_short(word: &amp;String) -&gt; bool {\n    word.len() &lt; 7\n}\n\nfn unwrap(result: Result&lt;String, io::Error&gt;) -&gt; String {\n    result.unwrap()\n}\n\nfn main_works_but_code_dupe() {\n    let file = fs::File::open(WORDS_PATH).unwrap();\n    let reader = io::BufReader::new(&amp;file);\n    let count = reader.lines().map(unwrap).filter(is_short).count();\n    println!(\"{:?}\", count);\n\n    let mut reader = io::BufReader::new(&amp;file);\n    reader.seek(io::SeekFrom::Start(0));\n    let sample_size = (0.05 * count as f32) as usize; // 5% sample\n\n    // This chain of iterator logic is duplicated\n    for line in reader.lines().map(unwrap).filter(is_short).take(sample_size) {\n        println!(\"{}\", line);\n    }\n}\n\nfn short_lines&lt;'a, T&gt;\n    (reader: &amp;'a T)\n     -&gt; iter::Filter&lt;std::iter::Map&lt;std::io::Lines&lt;T&gt;, &amp;FnMut(&amp;str, bool)&gt;, &amp;FnMut(&amp;str, bool)&gt;\n    where T: io::BufRead\n{\n    reader.lines().map(unwrap).filter(is_short)\n}\n\nfn main_dry() {\n    let file = fs::File::open(WORDS_PATH).unwrap();\n    let reader = io::BufReader::new(&amp;file);\n    let count = short_lines(reader).count();\n    println!(\"{:?}\", count);\n\n    // Would like to do this instead:\n    let mut reader = io::BufReader::new(&amp;file);\n    reader.seek(io::SeekFrom::Start(0));\n    let sample_size = (0.05 * count as f32) as usize; // 5% sample\n    for line in short_lines(reader).take(sample_size) {\n        println!(\"{}\", line);\n    }\n}\n\n\nfn main() {\n    main_works_but_code_dupe();\n}\n</code></pre>\n"}, {"tags": ["string", "iterator", "rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 6, "last_activity_date": 1510203001, "last_edit_date": 1510203001, "creation_date": 1510202178, "answer_id": 47193986, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars/47193986#47193986", "title": "Is there an owned version of String::chars?", "body": "<p><code>std::vec::IntoIter</code> is an owned version of every iterator, in a sense.</p>\n\n<pre><code>use std::vec::IntoIter;\n\nstruct Chunks {\n    remaining: IntoIter&lt;char&gt;,\n}\n\nimpl Chunks {\n    fn new(s: String) -&gt; Self {\n        Chunks {\n            remaining: s.chars().collect::&lt;Vec&lt;_&gt;&gt;().into_iter(),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=74be704c5cc0f81bcc27c41c51576a61&amp;version=stable\" rel=\"noreferrer\">Playground link</a></p>\n\n<p>Downside is additional allocation and a space overhead, but I am not aware of the iterator for your specific case.</p>\n"}, {"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1510222547, "post_id": 47197085, "comment_id": 81346840, "body": "<a href=\"https://play.rust-lang.org/?gist=8a5cc326c0fa08cafe7733251ac53546&amp;version=stable\" rel=\"nofollow noreferrer\">The same thing</a>, but using <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental crate</a>. Unfortunately, it doesn&#39;t work in playground."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1510236690, "post_id": 47197085, "comment_id": 81356459, "body": "Why is the extra box necessary? <code>S</code> can only be <code>String</code>, <code>Box&lt;str&gt;</code> or some other kind of owning <code>str</code> reference, right? So the storage must be heap allocated (if it&#39;s not <code>&#39;static</code>) and therefore won&#39;t move until the <code>S</code> is dropped. (As long as <code>OwnedChars</code> doesn&#39;t <code>push</code> things on or otherwise trigger a move.)"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510237369, "post_id": 47197085, "comment_id": 81356995, "body": "I could create a string storage type with small-string optimization (see <a href=\"https://crates.io/crates/smallvec\" rel=\"nofollow noreferrer\"><code>smallvec</code></a> create)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1510239089, "post_id": 47197085, "comment_id": 81358314, "body": "@Stefan Ah, true. But it seems like the normal use for this struct is when you have a <code>String</code> in hand and in that case it&#39;s double boxed. Do you think it would be safe to store a <code>Box&lt;str&gt;</code> instead and have <code>new&lt;S: Into&lt;Box&lt;str&gt;&gt;&gt;</code>? That would work for any reference as well as owned <code>String</code>s, only copies the contents when necessary, and doesn&#39;t double-box."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1510239690, "post_id": 47197085, "comment_id": 81358752, "body": "I&#39;m not sure about the allocation overhead of converting <code>String</code> to <code>Box&lt;str&gt;</code> - if it reuses the <code>Vec</code> memory this should be faster, yes. If you know you only want to do this for <code>String</code>s you can just use that (unboxed) instead too of course - afaict <code>String</code> guarantees heap allocation."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 2, "last_activity_date": 1510216126, "last_edit_date": 1510216126, "creation_date": 1510215819, "answer_id": 47197085, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars/47197085#47197085", "title": "Is there an owned version of String::chars?", "body": "<p>You could implement your own iterator, or wrap <code>Chars</code> like this (with just one small <code>unsafe</code> block):</p>\n\n<pre><code>// deriving Clone would be buggy. With Rc&lt;&gt;/Arc&lt;&gt; instead of Box&lt;&gt; it would work though.\nstruct OwnedChars {\n    // struct fields are dropped in order they are declared,\n    // see https://stackoverflow.com/a/41056727/1478356\n    // with `Chars` it probably doesn't matter, but for good style `inner`\n    // should be dropped before `storage`.\n\n    // 'static lifetime must not \"escape\" lifetime of the struct\n    inner: ::std::str::Chars&lt;'static&gt;,\n    // we need to box anyway to be sure the inner reference doesn't move when\n    // moving the storage, so we can erase the type as well.\n    // struct OwnedChar&lt;S: AsRef&lt;str&gt;&gt; { ..., storage: Box&lt;S&gt; } should work too\n    storage: Box&lt;AsRef&lt;str&gt;&gt;,\n}\n\nimpl OwnedChars {\n    pub fn new&lt;S: AsRef&lt;str&gt;+'static&gt;(s: S) -&gt; Self {\n        let storage = Box::new(s) as Box&lt;AsRef&lt;str&gt;&gt;;\n        let raw_ptr : *const str = storage.as_ref().as_ref();\n        let ptr : &amp;'static str = unsafe { &amp;*raw_ptr };\n        OwnedChars{\n            storage: storage,\n            inner: ptr.chars(),\n        }\n    }\n\n    pub fn as_str(&amp;self) -&gt; &amp;str {\n        self.inner.as_str()\n    }\n}\n\nimpl Iterator for OwnedChars {\n    // just `char` of course\n    type Item = &lt;::std::str::Chars&lt;'static&gt; as Iterator&gt;::Item;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.inner.next()\n    }\n}\n\nimpl DoubleEndedIterator for OwnedChars {\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.inner.next_back()\n    }\n}\n\nimpl Clone for OwnedChars {\n    fn clone(&amp;self) -&gt; Self {\n        // need a new allocation anyway, so simply go for String, and just\n        // clone the remaining string\n        OwnedChars::new(String::from(self.inner.as_str()))\n    }\n}\n\nimpl ::std::fmt::Debug for OwnedChars {\n    fn fmt(&amp;self, f: &amp;mut ::std::fmt::Formatter) -&gt; ::std::fmt::Result {\n        let storage : &amp;str = self.storage.as_ref().as_ref();\n        f.debug_struct(\"OwnedChars\")\n            .field(\"storage\", &amp;storage)\n            .field(\"inner\", &amp;self.inner)\n            .finish()\n    }\n}\n\n// easy access\ntrait StringExt {\n    fn owned_chars(self) -&gt; OwnedChars;\n}\nimpl&lt;S: AsRef&lt;str&gt;+'static&gt; StringExt for S {\n    fn owned_chars(self) -&gt; OwnedChars {\n        OwnedChars::new(self)\n    }\n}\n</code></pre>\n\n<p>See <a href=\"https://play.rust-lang.org/?gist=dc0ea470357b79d740e982c7c8b78e2a&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1526580149, "last_edit_date": 1526580149, "creation_date": 1510246437, "answer_id": 47207490, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars/47207490#47207490", "title": "Is there an owned version of String::chars?", "body": "<p>As copied from <a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a>:</p>\n\n<pre><code>use std::mem;\nuse std::str::Chars;\n\n/// I believe this struct to be safe because the String is\n/// heap-allocated (stable address) and will never be modified\n/// (stable address). `chars` will not outlive the struct, so\n/// lying about the lifetime should be fine.\n///\n/// TODO: What about during destruction?\n///       `Chars` shouldn't have a destructor...\nstruct OwningChars {\n    _s: String,\n    chars: Chars&lt;'static&gt;,\n}\n\nimpl OwningChars {\n    fn new(s: String) -&gt; Self {\n        let chars = unsafe { mem::transmute(s.chars()) };\n        OwningChars { _s: s, chars }\n    }\n}\n\nimpl Iterator for OwningChars {\n    type Item = char;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.chars.next()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1603738773, "last_edit_date": 1603738773, "creation_date": 1526652153, "answer_id": 50413062, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars/50413062#50413062", "title": "Is there an owned version of String::chars?", "body": "<h1>Ouroboros</h1>\n<p>You can use the <a href=\"https://crates.io/crates/ouroboros\" rel=\"nofollow noreferrer\">ouroboros</a> crate to create a self-referential struct containing the <code>String</code> and a <code>Chars</code> iterator:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use ouroboros::self_referencing; // 0.4.1\nuse std::str::Chars;\n\n#[self_referencing]\npub struct IntoChars {\n    string: String,\n    #[borrows(string)]\n    chars: Chars&lt;'this&gt;,\n}\n\n// All these implementations are based on what `Chars` implements itself\n\nimpl Iterator for IntoChars {\n    type Item = char;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.next())\n    }\n\n    #[inline]\n    fn count(mut self) -&gt; usize {\n        self.with_mut(|me| me.chars.count())\n    }\n\n    #[inline]\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.with(|me| me.chars.size_hint())\n    }\n\n    #[inline]\n    fn last(mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.last())\n    }\n}\n\nimpl DoubleEndedIterator for IntoChars {\n    #[inline]\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.with_mut(|me| me.chars.next_back())\n    }\n}\n\nimpl std::iter::FusedIterator for IntoChars {}\n\n// And an extension trait for convenience\n\ntrait IntoCharsExt {\n    fn into_chars(self) -&gt; IntoChars;\n}\n\nimpl IntoCharsExt for String {\n    fn into_chars(self) -&gt; IntoChars {\n        IntoCharsBuilder {\n            string: self,\n            chars_builder: |s| s.chars(),\n        }\n        .build()\n    }\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a></li>\n</ul>\n<h1>Rental</h1>\n<p>You can use the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> crate to create a self-referential struct containing the <code>String</code> and a <code>Chars</code> iterator:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate rental;\n\nrental! {\n    mod into_chars {\n        pub use std::str::Chars;\n\n        #[rental]\n        pub struct IntoChars {\n            string: String,\n            chars: Chars&lt;'string&gt;,\n        }\n    }\n}\n\nuse into_chars::IntoChars;\n\n// All these implementations are based on what `Chars` implements itself\n\nimpl Iterator for IntoChars {\n    type Item = char;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.next())\n    }\n\n    #[inline]\n    fn count(mut self) -&gt; usize {\n        self.rent_mut(|chars| chars.count())\n    }\n\n    #[inline]\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.rent(|chars| chars.size_hint())\n    }\n\n    #[inline]\n    fn last(mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.last())\n    }\n}\n\nimpl DoubleEndedIterator for IntoChars {\n    #[inline]\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.rent_mut(|chars| chars.next_back())\n    }\n}\n\nimpl std::iter::FusedIterator for IntoChars {}\n\n// And an extension trait for convenience \n\ntrait IntoCharsExt {\n    fn into_chars(self) -&gt; IntoChars;\n}\n\nimpl IntoCharsExt for String {\n    fn into_chars(self) -&gt; IntoChars {\n        IntoChars::new(self, |s| s.chars())\n    }\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 3711, "user_id": 55965, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83dd2a385c44fc42d52f14fccd9d992a?s=128&d=identicon&r=PG", "display_name": "Adrian Heine", "link": "https://stackoverflow.com/users/55965/adrian-heine"}, "is_accepted": false, "score": 2, "last_activity_date": 1542629633, "creation_date": 1542629633, "answer_id": 53374413, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars/53374413#53374413", "title": "Is there an owned version of String::chars?", "body": "<p>There's also the <a href=\"https://github.com/durka/owned-chars\" rel=\"nofollow noreferrer\">owned-chars crate</a>, which</p>\n\n<blockquote>\n  <p>provides an extension trait for String with two methods, into_chars and into_char_indices. These methods parallel String::chars and String::char_indices, but the iterators they create consume the String instead of borrowing it.</p>\n</blockquote>\n"}], "owner": {"reputation": 769, "user_id": 7065821, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/iLZC7.png?s=128&g=1", "display_name": "Challenger5", "link": "https://stackoverflow.com/users/7065821/challenger5"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1439, "favorite_count": 0, "accepted_answer_id": 47193986, "answer_count": 5, "score": 6, "last_activity_date": 1603738773, "creation_date": 1510199301, "last_edit_date": 1526855078, "question_id": 47193584, "link": "https://stackoverflow.com/questions/47193584/is-there-an-owned-version-of-stringchars", "title": "Is there an owned version of String::chars?", "body": "<p>The following code does not compile:</p>\n\n<pre><code>use std::str::Chars;\n\nstruct Chunks {\n    remaining: Chars,\n}\n\nimpl Chunks {\n    fn new(s: String) -&gt; Self {\n        Chunks {\n            remaining: s.chars(),\n        }\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:4:16\n  |\n4 |     remaining: Chars,\n  |                ^^^^^ expected lifetime parameter\n</code></pre>\n\n<p><code>Chars</code> doesn't own the characters it iterates over and it can't outlive the <code>&amp;str</code> or <code>String</code> it was created from.</p>\n\n<p>Is there an owned version of <code>Chars</code> that does not need a lifetime parameter or do I have to keep a <code>Vec&lt;char&gt;</code> and an index myself?</p>\n"}]