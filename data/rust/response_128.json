[{"tags": ["rust"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1498077126, "post_id": 44685633, "comment_id": 76355588, "body": "AFAIK, casting between signed and unsigned integers of the same size causes no actual codegen; i.e. the only change is the type, not the value-representation. I&#39;m not positive though..."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498081311, "post_id": 44685633, "comment_id": 76357486, "body": "<a href=\"https://godbolt.org/g/NGtEqL\" rel=\"nofollow noreferrer\">Food for thought</a>"}, {"owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "edited": false, "score": 0, "creation_date": 1498088445, "post_id": 44685633, "comment_id": 76359739, "body": "Seems like the comments answered it."}, {"owner": {"reputation": 341, "user_id": 1317464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/aa2e9bd3a4509c9d56939abad40202e3?s=128&d=identicon&r=PG", "display_name": "Pethor", "link": "https://stackoverflow.com/users/1317464/pethor"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498108318, "post_id": 44685633, "comment_id": 76364609, "body": "@ildjarn Thanks for the link. I didn&#39;t think of checking the assembly. I am quite surprised, that Rust forces explicit type conversion instead of allowing to coerce differently signed integers of same size."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 3, "creation_date": 1498109243, "post_id": 44685633, "comment_id": 76364950, "body": "@Pethor : Comparison between signed and unsigned types is a <i>notorious</i> source of bugs in C and C++. This is one case where I&#39;m 100% in favor of explicitness."}, {"owner": {"reputation": 341, "user_id": 1317464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/aa2e9bd3a4509c9d56939abad40202e3?s=128&d=identicon&r=PG", "display_name": "Pethor", "link": "https://stackoverflow.com/users/1317464/pethor"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498109544, "post_id": 44685633, "comment_id": 76365078, "body": "@ildjarn Hmm I didn&#39;t know that. I guess learning some Rust will benefit my coding style quite a bit."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 19, "last_activity_date": 1498081076, "creation_date": 1498081076, "answer_id": 44686688, "question_id": 44685633, "link": "https://stackoverflow.com/questions/44685633/is-casting-between-integers-expensive/44686688#44686688", "title": "Is casting between integers expensive?", "body": "<p><strong>It depends</strong></p>\n\n<p>It's basically impossible to answer your question in isolation. These types of low-level things can be aggressively combined with operations that have to happen anyway, so any amount of inlining can change the behavior. Additionally, it strongly depends on your processor; changing to a 64-bit number on an 8-bit microcontroller is probably pretty expensive!</p>\n\n<p>My general advice is to not worry. Keep your types consistent, get the right answers, then profile your code and fix the issues you find.</p>\n\n<p>Pragmatically, <em>what are you going to do instead</em>?</p>\n\n<hr>\n\n<p>That said, here's some concrete stuff for x86-64 and Rust 1.18.0.</p>\n\n<h2>Same size, changing sign</h2>\n\n<p>Basically no impact. If these were inlined, then you probably would never even see any assembly.</p>\n\n<pre><code>#[inline(never)]\npub fn signed_to_unsigned(i: isize) -&gt; usize {\n    i as usize\n}\n\n#[inline(never)]\npub fn unsigned_to_signed(i: usize) -&gt; isize {\n    i as isize\n}\n</code></pre>\n\n<p>Each generates the assembly</p>\n\n<pre><code>movq    %rdi, %rax\nretq\n</code></pre>\n\n<h2>Extending a value</h2>\n\n<p>These have to sign- or zero-extend the value, so some kind of minimal operation has to occur to fill those extra bits:</p>\n\n<pre><code>#[inline(never)]\npub fn u8_to_u64(i: u8) -&gt; u64 {\n    i as u64\n}\n\n#[inline(never)]\npub fn i8_to_i64(i: i8) -&gt; i64 {\n    i as i64\n}\n</code></pre>\n\n<p>Generates the assembly</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>movzbl  %dil, %eax\nretq\n\nmovsbq  %dil, %rax\nretq\n</code></pre>\n\n<h3>Truncating a value</h3>\n\n<p>Truncating is again just another move, basically no impact.</p>\n\n<pre><code>#[inline(never)]\npub fn u64_to_u8(i: u64) -&gt; u8 {\n    i as u8\n}\n\n#[inline(never)]\npub fn i64_to_i8(i: i64) -&gt; i8 {\n    i as i8\n}\n</code></pre>\n\n<p>Generates the assembly</p>\n\n<pre><code>movl    %edi, %eax\nretq\n\nmovl    %edi, %eax\nretq\n</code></pre>\n\n<hr>\n\n<p>All these operations boil down to a single instruction on x86-64. Then you get into complications around \"how long does an operation take\" and that's even <em>harder</em>.</p>\n"}], "owner": {"reputation": 341, "user_id": 1317464, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/aa2e9bd3a4509c9d56939abad40202e3?s=128&d=identicon&r=PG", "display_name": "Pethor", "link": "https://stackoverflow.com/users/1317464/pethor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1560, "favorite_count": 1, "accepted_answer_id": 44686688, "answer_count": 1, "score": 10, "last_activity_date": 1498081076, "creation_date": 1498076623, "last_edit_date": 1498076978, "question_id": 44685633, "link": "https://stackoverflow.com/questions/44685633/is-casting-between-integers-expensive", "title": "Is casting between integers expensive?", "body": "<p>I am working on a project where I am doing a lot of index-based calculation. I have a few lines like:</p>\n\n<pre><code>let mut current_x: usize = (start.x as isize + i as isize * delta_x) as usize;\n</code></pre>\n\n<p><code>start.x</code> and <code>i</code> are <code>usize</code>s and <code>delta_x</code> is of type <code>isize</code>. Most of my data is unsigned, therefore storing it signed would not make much sense. On the other hand, when I manipulate an array I am accessing a lot I have to convert everything back to <code>usize</code> as seen above. </p>\n\n<p>Is casting between integers expensive? Does it have an impact on runtime performance at all? </p>\n\n<p>Are there other ways to handle index arithmetics easier / more efficiently? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1498050605, "post_id": 44677049, "comment_id": 76338274, "body": "It seems at first glance that you could use a <a href=\"https://doc.rust-lang.org/stable/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>CoW</code></a>. :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498050637, "post_id": 44677049, "comment_id": 76338304, "body": "Why Foo does not own the buffer?"}, {"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498050786, "post_id": 44677049, "comment_id": 76338403, "body": "@Boiethios I&#39;d like to allow Foo to be de-serialized from a slice. Foo provides methods that inspect the slice (e.g. how many items in the buffer are set to 42) but it never mutates the buffer"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 2, "last_activity_date": 1498050913, "creation_date": 1498050913, "answer_id": 44677236, "question_id": 44677049, "link": "https://stackoverflow.com/questions/44677049/can-i-have-struct-that-can-be-constructed-both-from-a-slice-and-from-an-owning-b/44677236#44677236", "title": "Can I have struct that can be constructed both from a slice and from an owning buffer?", "body": "<p>You can use <code>std::borrow::Cow</code>; as the <a href=\"https://doc.rust-lang.org/stable/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\">docs</a> state:</p>\n\n<blockquote>\n  <p>it can enclose and provide immutable access to borrowed data, and clone the data lazily when mutation or ownership is required</p>\n</blockquote>\n\n<pre><code>use std::borrow::Cow;\n\nstruct Foo&lt;'a&gt; {\n    buffer: Cow&lt;'a, [u8]&gt;,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn create_builder() -&gt; FooBuilder {\n        FooBuilder::new()\n    }\n\n    fn from_slice(slice: &amp;[u8]) -&gt; Foo {\n        Foo { buffer: slice.into() } // note .into()\n    }\n}\n\nstruct FooBuilder {\n    in_progress_buffer: Vec&lt;u8&gt;,\n}\n\nimpl&lt;'a&gt; FooBuilder {\n    fn new() -&gt; FooBuilder {\n        FooBuilder { in_progress_buffer: Vec::new() }\n    }\n\n    fn push(&amp;mut self, item: u8) {\n        self.in_progress_buffer.push(item);\n    }\n\n    fn build_foo(self) -&gt; Foo&lt;'a&gt; {\n            Foo { buffer: self.in_progress_buffer.into() } // note .into()\n    }\n}\n</code></pre>\n\n<p>In addition, you will need to make <code>foo_builder</code> mutable in order to be able to perform <code>push</code> on it.</p>\n"}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 44677236, "answer_count": 1, "score": 3, "last_activity_date": 1498051376, "creation_date": 1498050409, "last_edit_date": 1498051376, "question_id": 44677049, "link": "https://stackoverflow.com/questions/44677049/can-i-have-struct-that-can-be-constructed-both-from-a-slice-and-from-an-owning-b", "title": "Can I have struct that can be constructed both from a slice and from an owning buffer?", "body": "<p>I'll try to be as clear as possible. Let's suppose I have:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    buffer: &amp;'a [u8],\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn create_builder() -&gt; FooBuilder {\n        FooBuilder::new()\n    }\n\n    fn from_slice(slice: &amp;[u8]) -&gt; Foo {\n        Foo { buffer: slice }\n    }\n}\n\nstruct FooBuilder {\n    in_progress_buffer: Vec&lt;u8&gt;,\n}\n\nimpl FooBuilder {\n    fn new() -&gt; FooBuilder {\n        FooBuilder { in_progress_buffer: Vec::new() }\n    }\n\n    fn push(&amp;mut self, item: u8) {\n        self.in_progress_buffer.push(item);\n    }\n\n    fn build_foo(self) -&gt; Foo {\n        Foo { buffer: self.in_progress_buffer }\n    }\n}\n\nfn main() {\n    // Option1: Gradually construct Foo from FooBuilder\n    let mut foo_builder = FooBuilder::new();\n    foo_builder.push(7);\n    let foo = foo_builder.build_foo();\n\n    // Option2: Construct Foo from a slice\n    let v = vec![7];\n    let foo2 = Foo::from_slice(&amp;v);\n}\n</code></pre>\n\n<p>This gives a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:28:27\n   |\n28 |     fn build_foo(self) -&gt; Foo {\n   |                           ^^^ expected lifetime parameter\n   |\n   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n   = help: consider giving it a 'static lifetime\n</code></pre>\n\n<p>Is this pattern possible? How can I fix the compilation error?\nI'm not sure what lifetime specifier to give since in the <code>FooBuilder</code> version, the <code>FooBuilder</code> owns the buffer, and I don't want to force <code>Foo</code> users to keep the <code>FooBuilder</code> in scope for the entire duration <code>Foo</code> is used</p>\n"}, {"tags": ["memory-management", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498037794, "post_id": 44672193, "comment_id": 76328766, "body": "Why do you post this code ? Your question don&#39;t need that, no ? The article too don&#39;t deserve the question."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1498037882, "post_id": 44672193, "comment_id": 76328839, "body": "They&#39;re definitely not equal, but I&#39;d like to understand what kind of answer you are looking for. Can you please quote the minimal relevant parts from that article and code snippet?"}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498037887, "post_id": 44672193, "comment_id": 76328846, "body": "@Stargateur hmm, I just wanted to make a clear question. Do you want me to remove the link?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498038223, "post_id": 44672193, "comment_id": 76329097, "body": "@AfshinMehrabani This is your question."}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1498038232, "post_id": 44672193, "comment_id": 76329101, "body": "Yiour llink is meaningless, starting with the first sentence: &#39;Compared to other Unices, GNU is outrageously fast.&#39; The GNU C and C++ compilers are not implementations of Unix."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 0, "creation_date": 1498039105, "post_id": 44672193, "comment_id": 76329743, "body": "Well, I really want to know why this question is &quot;off-topic&quot;? This is just my question and I suppose this could be the question of many other beginners in Rust."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498039203, "post_id": 44672193, "comment_id": 76329814, "body": "Remove your project and the article: your question &quot;Is <code>String::with_capacity()</code> equal to <code>malloc</code>?&quot; make sense. Don&#39;t need the context."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1498039724, "post_id": 44672193, "comment_id": 76330212, "body": "Personally, I don&#39;t agree with the close vote. Right now the minimal pieces of code necessary are there. Eventually, the reason for the down-vote could be lack of effort: if you searched other resources before asking, the question does not show that."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498039861, "post_id": 44672193, "comment_id": 76330306, "body": "@E_net4 I see, I tried to search for a few hours but I do see what you mean. I will take your advices into account for the next questions, thanks."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498038439, "post_id": 44672359, "comment_id": 76329259, "body": "But I thing the OP want to compare with C not C++. Your answer is off topic. &quot;is equal to malloc in C?&quot;"}, {"owner": {"reputation": 51, "user_id": 8193326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a848e35668e3b09ff1e535b56970f5c?s=128&d=identicon&r=PG&f=1", "display_name": "user8193326", "link": "https://stackoverflow.com/users/8193326/user8193326"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498038575, "post_id": 44672359, "comment_id": 76329366, "body": "@Stargateur Rust&#39;s <code>String</code> is similar to C++&#39;s <code>std::string</code>. There is no similar construct in C, so such a comparison would be meaningless."}, {"owner": {"reputation": 51, "user_id": 8193326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a848e35668e3b09ff1e535b56970f5c?s=128&d=identicon&r=PG&f=1", "display_name": "user8193326", "link": "https://stackoverflow.com/users/8193326/user8193326"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1498038689, "post_id": 44672359, "comment_id": 76329431, "body": "So &quot;This isn&#39;t accurate&quot; (translation: no) followed by what it&#39;s actually more similar to doesn&#39;t answer the question? Good to know."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498038767, "post_id": 44672359, "comment_id": 76329484, "body": "@Stargateur We can not be entirely sure whether that is true without improvements to the question. So far, this answer has shown to be of good quality and to address the question in its literal sense. And that is certainly on-topic, even with a chance of the question having a different intent."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498038990, "post_id": 44672359, "comment_id": 76329655, "body": "@E_net4 The OP <b>clearly</b> say &quot;is equal to malloc in C?&quot;, what is not clear for you ? Imagine with this logic I could make a answer that compare with haskell... This answer would be perfect if the OP want a comparison with C++."}, {"owner": {"reputation": 51, "user_id": 8193326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a848e35668e3b09ff1e535b56970f5c?s=128&d=identicon&r=PG&f=1", "display_name": "user8193326", "link": "https://stackoverflow.com/users/8193326/user8193326"}, "edited": false, "score": 2, "creation_date": 1498039363, "post_id": 44672359, "comment_id": 76329951, "body": "The question could ask if it&#39;s equal to Trump&#39;s haircut. My answer would still be the same. The obvious intent of the question is to achieve a similar effect to malloc; however, I point out that malloc does not behave the way they expect it to. A more analogous approach would to get a pointer to uninitialized memory, however one would do that in Rust."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498039514, "post_id": 44672359, "comment_id": 76330070, "body": "Arguably, the differences between C&#39;s <code>malloc</code> and C++&#39;s <code>malloc</code> are minute and irrelevant in this context. And since C can not reproduce the automatic memory management mechanisms found in C++ and Rust, providing examples in C++ is easier. But sure, a C counterpart could be considered. <i>On the other hand</i>, not having one isn&#39;t enough of a reason to make it off-topic or not an answer, according to SO standards."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 0, "creation_date": 1498039547, "post_id": 44672359, "comment_id": 76330096, "body": "@user8193326 thanks for this answer, helped me to understand the context but I can only accept one answer. cheers."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498044010, "post_id": 44672359, "comment_id": 76333178, "body": "@Stargateur : The only people capable of asking a perfect question are those who already know the answer \u2013 one <b>must</b> assume the question is imperfect. Consequently, getting hung up on the details of a question rather than its <i>intent</i> is misguided, and downvoting even when the OP acknowledges the answer is helpful is just silly."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498044595, "post_id": 44672359, "comment_id": 76333578, "body": "@ildjarn Do you judge me ? I have my opinion, you have no right to judge of my vote. Whatever I put my vote a lot before the OP comment so how this could influence my vote ? I still think the answer is not good, point. I say why so please unless you give the some reason like a meta post with an answer approved by the community about this kind of situation who will said that I shouldn&#39;t down vote this question. I will reconsidered. But I don&#39;t think that you could find that."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498044673, "post_id": 44672359, "comment_id": 76333622, "body": "@Stargateur : I&#39;m telling you why everyone is disagreeing with you and why yours is the only downvote. If you <i>want</i> to be contrary, it&#39;s your prerogative of course."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498044751, "post_id": 44672359, "comment_id": 76333675, "body": "@ildjarn &quot;is just silly&quot;, do you insult people frequently when you &quot;I&#39;m telling you why everyone is disagreeing with you&quot; ? Whatever, bye! Plus prove that &quot;everyone is disagreeing with you&quot;"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498045034, "post_id": 44672359, "comment_id": 76333899, "body": "@ildjarn Maybe you will be surprise but let me learn you something, when 3 people talk to you and tell you &quot;you are wrong&quot; and that you are alone. Yes, this is easy to take it as offense. And 3 is not every one."}], "tags": [], "owner": {"reputation": 51, "user_id": 8193326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a848e35668e3b09ff1e535b56970f5c?s=128&d=identicon&r=PG&f=1", "display_name": "user8193326", "link": "https://stackoverflow.com/users/8193326/user8193326"}, "is_accepted": false, "score": 3, "last_activity_date": 1498037932, "creation_date": 1498037932, "answer_id": 44672359, "question_id": 44672193, "link": "https://stackoverflow.com/questions/44672193/is-stringwith-capacity-equal-to-malloc/44672359#44672359", "title": "Is `String::with_capacity()` equal to `malloc`?", "body": "<p>That isn't quite accurate. It'd make more sense to say <code>String::with_capacity</code> is similar to <code>std::string::reserve</code>. From the documentation:</p>\n\n<blockquote>\n  <p>Creates a new empty String with a particular capacity.</p>\n  \n  <p>Strings have an internal buffer to hold their data. The capacity is\n  the length of that buffer, and can be queried with the capacity\n  method. This method creates an empty String, but one with an initial\n  buffer that can hold capacity bytes. This is useful when you may be\n  appending a bunch of data to the String, reducing the number of\n  reallocations it needs to do.</p>\n  \n  <p>If the given capacity is 0, no allocation will occur, and this method\n  is identical to the new method.</p>\n</blockquote>\n\n<p>Whether or not it uses something similar to <code>malloc</code> for managing the internal buffer is an implementation detail.</p>\n\n<p>In response to your edit:</p>\n\n<p>You are explicitly allocating memory, whereas in C++ a memory allocation for <code>std::string::reserve</code> only occurs if the argument passed to <code>reserve</code> is greater than the existing capacity. Note that Rust's <code>String</code> <em>does</em> have a <code>reserve</code> method, but C++'s string does not have a <code>with_capacity</code> equivalent . </p>\n"}, {"comments": [{"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 0, "creation_date": 1498039037, "post_id": 44672714, "comment_id": 76329690, "body": "Perfect, this answer clarifies my question, thanks. Then, what is the best or the most accurate way to achieve something like <code>malloc</code> in Rust? (excuse me for expanding my question with a comment)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "edited": false, "score": 5, "creation_date": 1498039409, "post_id": 44672714, "comment_id": 76329990, "body": "@AfshinMehrabani Most likely, you don&#39;t want to do that. If you just want a byte buffer, <code>Vec</code> is fine. For implementing low-level data structures, one can use unstable APIs such as <a href=\"https://doc.rust-lang.org/alloc/heap/fn.allocate.html\" rel=\"nofollow noreferrer\"><code>allocate</code></a>."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 8, "last_activity_date": 1498039041, "last_edit_date": 1498039041, "creation_date": 1498038770, "answer_id": 44672714, "question_id": 44672193, "link": "https://stackoverflow.com/questions/44672193/is-stringwith-capacity-equal-to-malloc/44672714#44672714", "title": "Is `String::with_capacity()` equal to `malloc`?", "body": "<p>It is not \"equal\", Rust's <code>String</code> is a composite object; <code>String::with_capacity</code> creates a <a href=\"https://doc.rust-lang.org/stable/src/collections/string.rs.html#263-265\" rel=\"noreferrer\"><code>String</code></a> which is not only a buffer; it is a wrapper around a <code>Vec&lt;u8&gt;</code>:</p>\n\n<pre><code>pub struct String {\n    vec: Vec&lt;u8&gt;,\n}\n</code></pre>\n\n<p>And a <a href=\"https://doc.rust-lang.org/stable/src/collections/vec.rs.html#356-361\" rel=\"noreferrer\"><code>Vec</code></a> is not just a section in memory - it also contains a <code>RawVec</code> and its length:</p>\n\n<pre><code>pub struct Vec&lt;T&gt; {\n    buf: RawVec&lt;T&gt;,\n    len: usize,\n}\n</code></pre>\n\n<p>And a <a href=\"https://doc.rust-lang.org/stable/src/alloc/raw_vec.rs.html#47-50\" rel=\"noreferrer\"><code>RawVec</code></a> is not a primitive either:</p>\n\n<pre><code>pub struct RawVec&lt;T&gt; {\n    ptr: Unique&lt;T&gt;,\n    cap: usize,\n}\n</code></pre>\n\n<p>So when you call <a href=\"https://doc.rust-lang.org/stable/src/collections/string.rs.html#395-397\" rel=\"noreferrer\"><code>String::with_capacity</code></a>:</p>\n\n<pre><code>pub fn with_capacity(capacity: usize) -&gt; String {\n    String { vec: Vec::with_capacity(capacity) }\n}\n</code></pre>\n\n<p>You are doing much more than just reserving a section of memory.</p>\n"}, {"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 2, "last_activity_date": 1498110868, "creation_date": 1498110868, "answer_id": 44691189, "question_id": 44672193, "link": "https://stackoverflow.com/questions/44672193/is-stringwith-capacity-equal-to-malloc/44691189#44691189", "title": "Is `String::with_capacity()` equal to `malloc`?", "body": "<p>Two things:</p>\n\n<ol>\n<li>If you link to an allocator, well, just call malloc.</li>\n<li>The hook into the default global allocator is still unstable, but if you're on nightly, you can call it directly.</li>\n</ol>\n\n<p>On stable Rust today, the closest thing you can get is Vec if you want to use the global allocator, but it's not equivalent for reasons spelled out in other answers.</p>\n"}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 44672714, "answer_count": 3, "score": -1, "last_activity_date": 1498110868, "creation_date": 1498037593, "last_edit_date": 1498039284, "question_id": 44672193, "link": "https://stackoverflow.com/questions/44672193/is-stringwith-capacity-equal-to-malloc", "title": "Is `String::with_capacity()` equal to `malloc`?", "body": "<p>I read <a href=\"https://www.reddit.com/r/unix/comments/6gxduc/how_is_gnu_yes_so_fast/?st=j3v3iw3c&amp;sh=5651ea3c\" rel=\"nofollow noreferrer\">this article</a> a few days ago and I thought what is the best way to implement such a thing in Rust. The article suggests to use a buffer instead of printing the string after each iteration. </p>\n\n<p>Is this correct to say <code>String::with_capacity()</code> (or <code>Vec</code>) is equal to <code>malloc</code> in C?</p>\n\n<p>Example from the codes:</p>\n\n<pre><code>String::with_capacity(size * 4096)\n</code></pre>\n\n<p>equal to:</p>\n\n<pre><code>char *buf = malloc(size * 4096);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1498030100, "post_id": 44668155, "comment_id": 76323484, "body": "I upvoted. IMO, this is not a stupid question, since the <code>?</code> operator is a little cryptic, and it is counter intuitive that the code example cannot be put in a <code>main</code>. If I well remember, there is a RFC for permitting to use <code>Result</code> in a main."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1498030691, "post_id": 44668155, "comment_id": 76323875, "body": "For me the error log is confuse so upvote too."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498037158, "post_id": 44668155, "comment_id": 76328298, "body": "Relevant answer: <a href=\"https://stackoverflow.com/a/43395610/1233251\">stackoverflow.com/a/43395610/1233251</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2264, "user_id": 948645, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/541e744d6552b91e24db6691f33b62ed?s=128&d=identicon&r=PG", "display_name": "alexbirkett", "link": "https://stackoverflow.com/users/948645/alexbirkett"}, "edited": false, "score": 0, "creation_date": 1498035232, "post_id": 44668363, "comment_id": 76326863, "body": "I saw the run button and noted the code was different. My first thought was that one or other versions was out-of-date. I suspected also that it had something to do with the <code>?</code> but being brand new to rust I did not know what <code>?</code> did."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 4, "last_activity_date": 1498026701, "last_edit_date": 1498026701, "creation_date": 1498026599, "answer_id": 44668363, "question_id": 44668155, "link": "https://stackoverflow.com/questions/44668155/rust-file-examples-dont-compile/44668363#44668363", "title": "Rust File examples don&#39;t compile", "body": "<p>They <em>do</em> compile.  They just don't compile in a <code>main</code> function like that.  If you look at the examples, they all have a big \"Run\" button on them.  Click that and it opens the full, unabridged example on the playpen.</p>\n\n<p>The one you've used above expands to this code:</p>\n\n<pre><code>fn main() {\n    use std::fs::File;\n    use std::io::prelude::*;\n\n    fn foo() -&gt; std::io::Result&lt;()&gt; {\n        let mut file = File::open(\"foo.txt\")?;\n        let mut contents = String::new();\n        file.read_to_string(&amp;mut contents)?;\n        assert_eq!(contents, \"Hello, world!\");\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>That code doesn't compile because you've put code that propagates a <code>Result</code> into a function (<code>main</code> in this case) that doesn't return a <code>Result</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1498031172, "last_edit_date": 1498031172, "creation_date": 1498030503, "answer_id": 44669619, "question_id": 44668155, "link": "https://stackoverflow.com/questions/44668155/rust-file-examples-dont-compile/44669619#44669619", "title": "Rust File examples don&#39;t compile", "body": "<p><code>?</code> is a syntactic sugar that checks a <code>Result</code>: if the result is <code>Err</code>, it is returned <em>as if</em>. If there is no error (aka <code>Ok</code>), the function continue. When you type this:</p>\n\n<pre><code>fn main() {\n    use std::fs::File;\n\n    let _ = File::open(\"foo.txt\")?;\n}\n</code></pre>\n\n<p>that means:</p>\n\n<pre><code>fn main() {\n    use std::fs::File;\n\n    let _ = match File::open(\"foo.txt\") {\n        Err(e)  =&gt; return Err(e),\n        Ok(val) =&gt; val,\n    };\n}\n</code></pre>\n\n<p>Then you understand that for now, you cannot use <code>?</code> in the main, because main returns unit <code>()</code> and not <code>Result</code>. If you want this stuff to work, you can put it in a function that returns a <code>Result</code> and check it from main:</p>\n\n<pre><code>fn my_stuff() -&gt; std::io::Result&lt;()&gt; {\n    use std::fs::File;\n    use std::io::prelude::*;\n\n    let mut file = File::open(\"foo.txt\")?;\n    let mut contents = String::new();\n    file.read_to_string(&amp;mut contents)?;\n    // do whatever you want with `contents`\n    Ok(())\n}\n\n\nfn main() {\n    if let Err(_) = my_stuff() {\n        // manage your error\n    }\n}\n</code></pre>\n\n<p>PS: There is a <a href=\"http://github.com/rust-lang/rfcs/pull/1937\" rel=\"noreferrer\">proposition</a> to make work <code>?</code> in the main.</p>\n"}], "owner": {"reputation": 2264, "user_id": 948645, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/541e744d6552b91e24db6691f33b62ed?s=128&d=identicon&r=PG", "display_name": "alexbirkett", "link": "https://stackoverflow.com/users/948645/alexbirkett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 451, "favorite_count": 0, "closed_date": 1498049397, "accepted_answer_id": 44669619, "answer_count": 2, "score": 2, "last_activity_date": 1498031172, "creation_date": 1498025786, "last_edit_date": 1498026332, "question_id": 44668155, "link": "https://stackoverflow.com/questions/44668155/rust-file-examples-dont-compile", "closed_reason": "Duplicate", "title": "Rust File examples don&#39;t compile", "body": "<p>The Rust <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\">file examples</a> don't appear compile with Rust 1.18.0.</p>\n\n<p>For <a href=\"https://play.rust-lang.org/?gist=366a4e89c6c880ab467b43da30fb0d94&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">example</a>:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\nfn main() {\n    let mut file = File::open(\"foo.txt\")?;\n    let mut contents = String::new();\n    file.read_to_string(&amp;mut contents)?;\n    assert_eq!(contents, \"Hello, world!\");\n}\n</code></pre>\n\n<p>Error log:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.18.0 (03fc9d622 2017-06-06)\nerror[E0277]: the trait bound `(): std::ops::Carrier` is not satisfied\n --&gt; &lt;anon&gt;:4:20\n  |\n4 |     let mut file = File::open(\"foo.txt\")?;\n  |                    ----------------------\n  |                    |\n  |                    the trait `std::ops::Carrier` is not implemented for `()`\n  |                    in this macro invocation\n  |\n  = note: required by `std::ops::Carrier::from_error`\n\nerror[E0277]: the trait bound `(): std::ops::Carrier` is not satisfied\n --&gt; &lt;anon&gt;:6:5\n  |\n6 |     file.read_to_string(&amp;mut contents)?;\n  |     -----------------------------------\n  |     |\n  |     the trait `std::ops::Carrier` is not implemented for `()`\n  |     in this macro invocation\n  |\n  = note: required by `std::ops::Carrier::from_error`\n\nerror: aborting due to 2 previous errors\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 19, "last_activity_date": 1498009862, "last_edit_date": 1592644375, "creation_date": 1498003582, "answer_id": 44664851, "question_id": 44664703, "link": "https://stackoverflow.com/questions/44664703/whats-the-difference-between-extern-fn-and-extern-c-fn-in-rust/44664851#44664851", "title": "What&#39;s the difference between extern fn and extern &quot;C&quot; fn in Rust?", "body": "<p>There is no difference because, as <a href=\"https://doc.rust-lang.org/reference/items.html#external-blocks\" rel=\"noreferrer\">the reference</a> says:</p>\n<blockquote>\n<p>By default external blocks assume that the library they are calling uses the standard C ABI on the specific platform.</p>\n<p><code>extern &quot;C&quot;</code> -- This is the same as <code>extern fn foo();</code> whatever the default your C compiler supports.</p>\n</blockquote>\n<p>An <a href=\"https://github.com/rust-lang/rfcs/pull/697\" rel=\"noreferrer\">issue</a> was created to always require explicitly stating <code>extern &quot;C&quot;</code> but the <a href=\"https://github.com/ranma42/rfcs/blob/explicit-abi/text/0000-explicit-abi.md\" rel=\"noreferrer\">RFC has been refused</a>.</p>\n<p>There is an <a href=\"https://github.com/rust-lang-nursery/fmt-rfcs/issues/52\" rel=\"noreferrer\">issue</a> in <a href=\"https://github.com/rust-lang-nursery/fmt-rfcs\" rel=\"noreferrer\">fmt-rfcs</a> about &quot;should we format <code>extern &quot;C&quot; fn</code> as that or <code>extern fn</code>?&quot;.</p>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2658, "favorite_count": 1, "accepted_answer_id": 44664851, "answer_count": 1, "score": 17, "last_activity_date": 1498009862, "creation_date": 1498002469, "question_id": 44664703, "link": "https://stackoverflow.com/questions/44664703/whats-the-difference-between-extern-fn-and-extern-c-fn-in-rust", "title": "What&#39;s the difference between extern fn and extern &quot;C&quot; fn in Rust?", "body": "<p>I've tried reading various github issues trying to track down what the difference is and just ended up confused.</p>\n\n<pre><code>#[no_mangle]\npub extern fn foo() {\n   ...\n}\n</code></pre>\n\n<p>vs.</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn foo() {\n   ...\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 103, "user_id": 8068176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d6264f5b21a54dcccc34c76406c3407?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/8068176/avi"}, "edited": false, "score": 0, "creation_date": 1498002009, "post_id": 44664638, "comment_id": 76314753, "body": "because I forgot the word uninstall and <code>cargo help</code> does not list <code>cargo uninstall</code>"}], "answers": [{"tags": [], "owner": {"reputation": 103, "user_id": 8068176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d6264f5b21a54dcccc34c76406c3407?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/8068176/avi"}, "is_accepted": true, "score": 0, "last_activity_date": 1498001940, "creation_date": 1498001940, "answer_id": 44664639, "question_id": 44664638, "link": "https://stackoverflow.com/questions/44664638/how-can-a-binary-installed-with-cargo-install-be-removed/44664639#44664639", "title": "How can a binary installed with cargo install be removed?", "body": "<p>Global binary crates like <code>rustfmt</code> can be removed with the command <code>cargo uninstall [options] &lt;spec&gt;</code>. Use <code>cargo help uninstall</code> to get more detail.</p>\n"}], "owner": {"reputation": 103, "user_id": 8068176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d6264f5b21a54dcccc34c76406c3407?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/8068176/avi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 44664639, "answer_count": 1, "score": 0, "last_activity_date": 1509487625, "creation_date": 1498001940, "last_edit_date": 1509487625, "question_id": 44664638, "link": "https://stackoverflow.com/questions/44664638/how-can-a-binary-installed-with-cargo-install-be-removed", "title": "How can a binary installed with cargo install be removed?", "body": "<p>How can a crate like <code>rustfmt</code> be removed after being installed with <code>cargo install</code></p>\n"}, {"tags": ["macos", "rust"], "answers": [{"comments": [{"owner": {"reputation": 5768, "user_id": 3088572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/769f723b0fd6eb8c99d5f65b39392b18?s=128&d=identicon&r=PG&f=1", "display_name": "alvits", "link": "https://stackoverflow.com/users/3088572/alvits"}, "edited": false, "score": 0, "creation_date": 1498000430, "post_id": 44664333, "comment_id": 76314332, "body": "Spot on! And very helpful for those starting to learn the language."}, {"owner": {"reputation": 5768, "user_id": 3088572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/769f723b0fd6eb8c99d5f65b39392b18?s=128&d=identicon&r=PG&f=1", "display_name": "alvits", "link": "https://stackoverflow.com/users/3088572/alvits"}, "edited": false, "score": 0, "creation_date": 1498001496, "post_id": 44664333, "comment_id": 76314615, "body": "@Stargateur - I don&#39;t have this problem. I don&#39;t think I can accept an answer to someone else&#39;s issue. I praised the poster for his comprehensive explanation. I think you need to take the <a href=\"https://stackoverflow.com/tour\">tour</a>."}, {"owner": {"reputation": 17, "user_id": 8191095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c264b0c1338f68a1ba6eed62680d1903?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Chow", "link": "https://stackoverflow.com/users/8191095/michael-chow"}, "edited": false, "score": 0, "creation_date": 1498011012, "post_id": 44664333, "comment_id": 76316736, "body": "@Shepmaster, That solved my problem, thank you! I was initially using that book you linked, however, I was looking for an IDE and I didn&#39;t have any clear guidance on that so I searched for a comprehensive Rust tutorial for Mac on youtube, hoping to find something that starts from installation to which text editor to use, etc"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 17, "user_id": 8191095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c264b0c1338f68a1ba6eed62680d1903?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Chow", "link": "https://stackoverflow.com/users/8191095/michael-chow"}, "edited": false, "score": 1, "creation_date": 1498011370, "post_id": 44664333, "comment_id": 76316827, "body": "@MichaelChow Now, I can say my speech. If this answer solve your problem, consider to accepting it, <a href=\"https://stackoverflow.com/tour\">tour</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1498001017, "last_edit_date": 1498001017, "creation_date": 1497999819, "answer_id": 44664333, "question_id": 44664127, "link": "https://stackoverflow.com/questions/44664127/trying-to-run-my-rust-program-on-macos-has-the-error-use-command-not-found/44664333#44664333", "title": "Trying to run my Rust program on macOS has the error &quot;use: command not found&quot;", "body": "<p>You are trying to execute the source code file, not a compiled binary. The point of compilation is to take source code and produce an executable. You want</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc hello_world.rs\n./hello_world\n</code></pre>\n\n<hr>\n\n<p>Let's go into all the other issues:</p>\n\n<ol>\n<li><p>Most importantly, you appear to be actively avoiding using the existing <strong>amazing</strong> and <strong>free</strong> resources for learning Rust. Specifically, I'd <em>strongly</em> recommend that you stop what you are doing and go read the first few chapters of <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"noreferrer\"><em>The Rust Programming Language</em>, second edition</a>. How to invoke the compiler and execute code is covered there. Hint: Very few people execute <code>rustc</code> directly and all of them have very good reasons to do so. </p></li>\n<li><p>The Rust compiler will tell you a world of useful hints. These are called <em>lints</em>. However, it appears that you are attempting to <em>disable the lints</em> via <code>-A warning</code>. Ignoring hints from the compiler is a very bad idea as a beginner.</p></li>\n<li><p><code>-A warning</code> isn't even <em>valid</em>. Trying to use it, I get the error</p>\n\n<blockquote>\n  <p>error: unknown lint: `warning`</p>\n</blockquote>\n\n<p>I'd be interested to know where you learned of this so we can attempt to correct the misinformation at the source.</p></li>\n<li><p>You have imported <em>way</em> more things than you need. <strong>None</strong> of the lines imported via <code>use</code> are needed \u2014 the compiler tells you that when you read the warnings.</p></li>\n</ol>\n\n<hr>\n\n<p>A little bit more exploration of the problem...</p>\n\n<p>Somehow, you have saved your source code file and marked it as executable. When you attempt to execute it, the operating system and/or shell checks to see if it's a binary file. If it's not, it attempts to treat the file as a <em>shell script</em>. Shell scripts have a special line called the <em>shebang</em> (<code>#!</code>) at the beginning to tell which <em>interpreter</em> should be used. Since this file doesn't have that, it's assumed to be a shell script for the <code>/bin/sh</code> interpreter. </p>\n\n<p>Thus, <code>/bin/sh</code> is handed your Rust code and tries to run it, line-by-line. That's what all the errors are - the shell complaining that each line it attempts isn't syntactically valid.</p>\n"}], "owner": {"reputation": 17, "user_id": 8191095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c264b0c1338f68a1ba6eed62680d1903?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Chow", "link": "https://stackoverflow.com/users/8191095/michael-chow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1498001017, "creation_date": 1497998542, "last_edit_date": 1497999530, "question_id": 44664127, "link": "https://stackoverflow.com/questions/44664127/trying-to-run-my-rust-program-on-macos-has-the-error-use-command-not-found", "title": "Trying to run my Rust program on macOS has the error &quot;use: command not found&quot;", "body": "<p>This is my code in Atom, with the Atom-Language-Rust package installed: </p>\n\n<pre><code>use std::{i8, i16, i32, i64, u8, u16, u32, u64, isize, usize, f32, \nf64};\n\nuse std::io::stdin;\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>This is what I'm inputting into the terminal: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc hello_world.rs -A warning\n./hello_world.rs\n</code></pre>\n\n<p>This is the error message: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./hello_world.rs: line 1: use: command not found\n./hello_world.rs: line 2: use: command not found\n./hello_world.rs: line 4: syntax error near unexpected token `('\n./hello_world.rs: line 4: `fn main() {'\n</code></pre>\n\n<p>What did I do wrong in code or in setup? </p>\n"}, {"tags": ["vector", "struct", "rust", "filtering"], "answers": [{"comments": [{"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "edited": false, "score": 0, "creation_date": 1497991323, "post_id": 44662455, "comment_id": 76310950, "body": "I see now the little but important <code>&amp;</code>. Totally overlooked that. I don&#39;t understand the problem with using the reference to a <code>Vocabulary</code> and just giving me the object at the reference. Is it about unknown size of the object (struct, containing another Vec etc.)?  For me only the (1) first solution works, because (2) <code>std::clone::Clone</code> is also not satisfied and (3) is still mismatched type: <code>app_structs::Vocabulary</code> vs <code>&amp;app_structs::Vocabulary</code>. I&#39;ll read up on <code>into_iter</code> again. I read it was destructive and actually wanted a copy of the contained elements, so cloning might make sense."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "edited": false, "score": 0, "creation_date": 1497995068, "post_id": 44662455, "comment_id": 76312634, "body": "<i>and just giving me the object at the reference</i> \u2014 What would you propose would happen to the thing that currently has the object? If you took ownership, then that would be left in an undefined state and any further usage of it would cause memory unsafety."}, {"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "edited": false, "score": 0, "creation_date": 1497997067, "post_id": 44662455, "comment_id": 76313336, "body": "Hm, that&#39;s strange. I thought because all of this happens in the same scope (ok maybe I borrow it in between to &quot;subscopes&quot;, but they return ownership anyway), I would not need to worry about such a thing. Couldn&#39;t the compiler figure that out? I mean filter and so on are predefined functions after all, which it could reason about. Are you sure it is not about unknown size rather than ownership?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "edited": false, "score": 1, "creation_date": 1498030590, "post_id": 44662455, "comment_id": 76323820, "body": "@Zelphir, the compiler figured out that you want to get <code>Vec&lt;Vocabulary&gt;</code> from iterator that provides <code>&amp;Vocabulary</code> references. <code>filter</code> is just a usual method of a trait. All the compiler knows about it is its signature <code>fn collect&lt;B&gt;(self) -&gt; B where\u00a0B: FromIterator&lt;Self::Item&gt;</code>, so it checks whether type <code>Vec&lt;Vocabulary&gt;</code> implements trait <code>FromIterator&lt;&amp;Vocabulary&gt;</code>, finds out that it does not and reports error."}, {"owner": {"reputation": 10336, "user_id": 10990737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lYeEB.jpg?s=128&g=1", "display_name": "Ifaruki", "link": "https://stackoverflow.com/users/10990737/ifaruki"}, "edited": false, "score": 0, "creation_date": 1607674541, "post_id": 44662455, "comment_id": 115351599, "body": "i am new to rust. could you explain or show me some resources what this means <code>|voc|</code> i come from JS and have never saw something like that"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10336, "user_id": 10990737, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lYeEB.jpg?s=128&g=1", "display_name": "Ifaruki", "link": "https://stackoverflow.com/users/10990737/ifaruki"}, "edited": false, "score": 0, "creation_date": 1607971957, "post_id": 44662455, "comment_id": 115434245, "body": "@Ifaruki <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch13-01-closures.html</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 54, "last_activity_date": 1570541951, "last_edit_date": 1570541951, "creation_date": 1497990606, "answer_id": 44662455, "question_id": 44662312, "link": "https://stackoverflow.com/questions/44662312/how-to-filter-a-vector-of-custom-structs-in-rust/44662455#44662455", "title": "How to filter a vector of custom structs in Rust?", "body": "<p>It's <strong>very important</strong> programming skill to learn how to create a <a href=\"/help/mcve\">minimal, reproducible example</a>. Your problem can be reduced to this:</p>\n\n<pre><code>struct Vocabulary;\n\nfn main() {\n    let numbers = vec![Vocabulary];\n    let other_numbers: Vec&lt;Vocabulary&gt; = numbers.iter().collect();\n}\n</code></pre>\n\n<p>Let's look at the error message for your case:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;Vocabulary&gt;` cannot be built from an iterator over elements of type `&amp;Vocabulary`\n --&gt; src/main.rs:5:57\n  |\n5 |     let other_numbers: Vec&lt;Vocabulary&gt; = numbers.iter().collect();\n  |                                                         ^^^^^^^ a collection of type `std::vec::Vec&lt;Vocabulary&gt;` cannot be built from `std::iter::Iterator&lt;Item=&amp;Vocabulary&gt;`\n  |\n  = help: the trait `std::iter::FromIterator&lt;&amp;Vocabulary&gt;` is not implemented for `std::vec::Vec&lt;Vocabulary&gt;`\n</code></pre>\n</blockquote>\n\n<p>This says that a <code>Vec&lt;Vocabulary&gt;</code> cannot be built from an iterator of <code>&amp;Vocabulary</code>. Do you see the difference? You have an iterator of references (<code>&amp;</code>), <strong>not</strong> an iterator of values. How would <code>Vec</code> know how to convert your references into values?</p>\n\n<hr>\n\n<p>How do you fix it? I don't know what works best in your situation:</p>\n\n<ol>\n<li><p>Don't iterate over references, iterate over the values themselves. The default choice requires that you have ownership of the vector. Use <code>into_iter</code> instead of <code>iter</code>:</p>\n\n<pre><code>let the_vocabulary: Vec&lt;Vocabulary&gt; = vocabulary_context\n    .vocabularies\n    .into_iter()\n    .filter(|voc| voc.metadata.identifier == vocabulary_id)\n    .collect();\n</code></pre>\n\n<p>You could also <em>drain</em> the iterator if you have a mutable reference:</p>\n\n<pre><code>let the_vocabulary: Vec&lt;Vocabulary&gt; = vocabulary_context\n    .vocabularies\n    .drain(..)\n    .filter(|voc| voc.metadata.identifier == vocabulary_id)\n    .collect();\n</code></pre></li>\n<li><p>Duplicate the objects by cloning them. This requires that the type you are iterating on implements <code>Clone</code>. If you pair this with filtering, you should call <code>cloned()</code> after filtering and before calling <code>collect()</code> to avoid cloning something you discard.</p>\n\n<pre><code>let the_vocabulary: Vec&lt;Vocabulary&gt; = vocabulary_context\n    .vocabularies\n    .iter()\n    .filter(|voc| voc.metadata.identifier == vocabulary_id)\n    .cloned()\n    .collect();\n</code></pre></li>\n<li><p>Don't collect values, collect a <code>Vec</code> of references. This requires that however you use the items afterwards can take an item by reference instead of by value:</p>\n\n<pre><code>let the_vocabulary: Vec&lt;&amp;Vocabulary&gt; = vocabulary_context\n    .vocabularies\n    .iter()\n    .filter(|voc| voc.metadata.identifier == vocabulary_id)\n    .collect();\n</code></pre></li>\n</ol>\n\n<p>Note that I removed the redundant type specifiers (the turbofish <code>::&lt;&gt;</code> on <code>collect</code>). You only need to specify the type of the variable or on <code>collect</code>, not both. In fact, all three examples could start with <code>let the_vocabulary: Vec&lt;_&gt;</code> to let the compiler infer the type inside the collection based on the iterator. This is the idiomatic style but I've kept the explicit types for demonstration purposes.</p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34733811/155423\">What is the difference between iter and into_iter?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27882800/155423\">When should I use `drain` vs `into_iter`?</a></li>\n</ul>\n"}], "owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22002, "favorite_count": 6, "accepted_answer_id": 44662455, "answer_count": 1, "score": 24, "last_activity_date": 1570541951, "creation_date": 1497990029, "question_id": 44662312, "link": "https://stackoverflow.com/questions/44662312/how-to-filter-a-vector-of-custom-structs-in-rust", "title": "How to filter a vector of custom structs in Rust?", "body": "<p>I am trying to filter a <code>Vec&lt;Vocabulary&gt;</code> where <code>Vocabulary</code> is a custom <code>struct</code>, which itself contains a <code>struct</code> <code>VocabularyMetadata</code> and a <code>Vec&lt;Word&gt;</code>:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct Vocabulary {\n    pub metadata: VocabularyMetadata,\n    pub words: Vec&lt;Word&gt;\n}\n</code></pre>\n\n<p>This is for handling a route in a web application, where the route looks like this: <code>/word/&lt;vocabulary_id&gt;/&lt;word_id&gt;</code>.</p>\n\n<p>Here is my current code trying to <code>filter</code> the <code>Vec&lt;Vocabulary&gt;</code>:</p>\n\n<pre><code>let the_vocabulary: Vec&lt;Vocabulary&gt; = vocabulary_context.vocabularies.iter()\n    .filter(|voc| voc.metadata.identifier == vocabulary_id)\n    .collect::&lt;Vec&lt;Vocabulary&gt;&gt;();\n</code></pre>\n\n<p>This does not work. The error I get is:</p>\n\n<pre><code> the trait `std::iter::FromIterator&lt;&amp;app_structs::Vocabulary&gt;` is not implemented for `std::vec::Vec&lt;app_structs::Vocabulary&gt;` [E0277]\n</code></pre>\n\n<p>I don't know how to implement any <code>FromIterator</code>, nor why that would be necessary. In another route in the same web app, same file I do the following, which works:</p>\n\n<pre><code>let result: Vec&lt;String&gt; = vocabulary_context.vocabularies.iter()\n    .filter(|voc| voc.metadata.identifier.as_str().contains(vocabulary_id))\n    .map(encode_to_string)\n    .collect::&lt;Vec&lt;String&gt;&gt;();\n    result.join(\"\\n\\n\")  // returning\n</code></pre>\n\n<p>So it seems that <code>String</code> implements <code>FromIterator</code>.</p>\n\n<p>However, I don't get, why I cannot simple get back the Elements of the <code>Vec</code> from the <code>filter</code> or <code>collect</code> method.</p>\n\n<p>How can I <code>filter</code> my <code>Vec</code> and simply get the elements of the <code>Vec&lt;Vocabulary&gt;</code>, for which the condition is true?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 511, "user_id": 507527, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/e3efac094e515c031ac64a989a8168fb?s=128&d=identicon&r=PG", "display_name": "Refefer", "link": "https://stackoverflow.com/users/507527/refefer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497979975, "post_id": 44658098, "comment_id": 76304315, "body": "Not sure why you were having issues.  Added the two imports and an empty main function."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497980303, "post_id": 44658098, "comment_id": 76304519, "body": "<i>Not sure why you were having issues</i> \u2014  because <a href=\"https://stackoverflow.com/posts/44658098/revisions\">you changed your code</a> between the different versions. (<code>&amp;&#39;a</code>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497981612, "post_id": 44658098, "comment_id": 76305327, "body": "You may be be interested in Itertools&#39; <a href=\"https://docs.rs/itertools/0.6.0/itertools/trait.Itertools.html#method.group_by\" rel=\"nofollow noreferrer\"><code>group_by</code></a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1497982663, "post_id": 44658098, "comment_id": 76305961, "body": "@Refefer, BTW, if this code worked, in the case when you didn&#39;t iterate over first group and just skipped to the next, iterator will not advance and you&#39;ll end up with the first group again."}], "owner": {"reputation": 511, "user_id": 507527, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/e3efac094e515c031ac64a989a8168fb?s=128&d=identicon&r=PG", "display_name": "Refefer", "link": "https://stackoverflow.com/users/507527/refefer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1497981377, "answer_count": 0, "score": 0, "last_activity_date": 1497981433, "creation_date": 1497975032, "last_edit_date": 1497981433, "question_id": 44658098, "link": "https://stackoverflow.com/questions/44658098/cannot-infer-an-appropriate-lifetime-when-building-an-iterator-that-returns-anot", "closed_reason": "Duplicate", "title": "Cannot infer an appropriate lifetime when building an iterator that returns another iterator over a member variable", "body": "<p>I'm trying to figure out how to handle lifetimes properly to allow for a zero-copy group by iterator.  The plan is to have the <code>GroupBy</code> struct own a peekable iterator, check the next element, and then yield a <code>GroupByInner</code> struct which iterates from a mutable reference of that iterator while the peeked key is true.  However, I'm fighting lifetime issues and am not sure how to proceed.</p>\n\n<p>I've attached some of the code below</p>\n\n<pre><code>use std::iter::Iterator;\nuse std::iter::Peekable;\n\nstruct GroupByInner&lt;'a, I, K, V&gt;\nwhere\n    I: 'a + Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq,\n{\n    key: K,\n    it: &amp;'a mut Peekable&lt;I&gt;,\n}\n\nimpl&lt;'a, I, K, V&gt; GroupByInner&lt;'a, I, K, V&gt;\nwhere\n    I: 'a + Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq + Clone,\n{\n    fn new(p: &amp;'a mut Peekable&lt;I&gt;) -&gt; Option&lt;Self&gt; {\n        let ok = p.peek().map(|&amp;(ref k, _)| k.clone());\n        match ok {\n            Some(k) =&gt; Some(GroupByInner { key: k, it: p }),\n            None =&gt; None,\n        }\n    }\n}\n\nimpl&lt;'a, I, K, V&gt; Iterator for GroupByInner&lt;'a, I, K, V&gt;\nwhere\n    I: 'a + Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq,\n{\n    type Item = V;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let isMatched = match self.it.peek() {\n            Some(&amp;(ref k, _)) =&gt; k == &amp;self.key,\n            _ =&gt; false,\n        };\n        if isMatched {\n            self.it.next().map(|x| x.1)\n        } else {\n            None\n        }\n    }\n}\n\n#[test]\nfn test_GBI() {\n    let v = vec![(1, 2), (1, 3), (1, 4), (2, 2), (3, 2)];\n    let mut it = v.into_iter().peekable();\n    for _ in 0..2 {\n        let gbi = GroupByInner::new(&amp;mut it).unwrap();\n        for (i, v) in gbi.enumerate() {\n            assert_eq!(i, v - 2);\n        }\n    }\n}\n\nstruct GroupBy&lt;I, K, V&gt;\nwhere\n    I: Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq,\n{\n    it: Peekable&lt;I&gt;,\n}\n\nimpl&lt;I, K, V&gt; GroupBy&lt;I, K, V&gt;\nwhere\n    I: Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq,\n{\n    fn new(it: I) -&gt; Self {\n        GroupBy::&lt;I, K, V&gt; { it: it.peekable() }\n    }\n}\n\nimpl&lt;'a, I, K, V&gt; Iterator for &amp;'a mut GroupBy&lt;I, K, V&gt;\nwhere\n    I: Iterator&lt;Item = (K, V)&gt;,\n    K: PartialEq + Clone,\n{\n    type Item = GroupByInner&lt;'a, I, K, V&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        GroupByInner::new(&amp;mut self.it)\n    }\n}\n\n#[test]\nfn test_GB() {\n    let v = vec![(1, 2), (1, 3), (1, 4), (2, 2), (3, 2)];\n    let mut it = v.into_iter();\n    for sit in GroupBy::new(it) {\n        for (i, v) in sit.enumerate() {\n            assert_eq!(i, v - 2);\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This blows up with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:85:27\n   |\n85 |         GroupByInner::new(&amp;mut self.it)\n   |                           ^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 84:45...\n  --&gt; src/main.rs:84:46\n   |\n84 |       fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n   |  ______________________________________________^\n85 | |         GroupByInner::new(&amp;mut self.it)\n86 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:85:27\n   |\n85 |         GroupByInner::new(&amp;mut self.it)\n   |                           ^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the body at 84:45...\n  --&gt; src/main.rs:84:46\n   |\n84 |       fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n   |  ______________________________________________^\n85 | |         GroupByInner::new(&amp;mut self.it)\n86 | |     }\n   | |_____^\nnote: ...so that types are compatible (expected std::iter::Iterator, found std::iter::Iterator)\n  --&gt; src/main.rs:84:46\n   |\n84 |       fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n   |  ______________________________________________^\n85 | |         GroupByInner::new(&amp;mut self.it)\n86 | |     }\n   | |_____^\n</code></pre>\n\n<p>How does one go about this?  Am I doing it all wrong?</p>\n"}, {"tags": ["rust", "32bit-64bit", "cpu-architecture"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1497968509, "post_id": 44655115, "comment_id": 76296725, "body": "Basically a duplicate of <a href=\"https://stackoverflow.com/questions/2401756/how-to-find-if-the-machine-is-32bit-or-64bit\">how to find if the machine is 32bit or 64bit</a>."}, {"owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497968585, "post_id": 44655115, "comment_id": 76296782, "body": "@Shepmaster that question is about <a href=\"https://stackoverflow.com/questions/tagged/c\">c</a> while this one is about <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1497968692, "post_id": 44655115, "comment_id": 76296850, "body": "So? The question has nothing to do with Rust. By definition, it&#39;s asking about how to query the OS for information, which neither Rust the language nor Rust&#39;s standard library deal with."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497968717, "post_id": 44655115, "comment_id": 76296868, "body": "Also a duplicate of <a href=\"https://stackoverflow.com/questions/2140619/correct-way-to-check-if-windows-is-64-bit-or-not-on-runtime-c\">https://stackoverflow.com/q/2140619/155423</a>"}, {"owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497969301, "post_id": 44655115, "comment_id": 76297343, "body": "I don&#39;t think this question is a duplicate of the ones you linked since they don&#39;t provide any information which would help me answer this question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497969309, "post_id": 44655115, "comment_id": 76297353, "body": "You probably also need to define <i>which</i> operating systems you need to care about. macOS, Linux, Windows, one of the BSDs, Redox, etc. Rust also allows targeting systems that don&#39;t have operating systems."}, {"owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497969663, "post_id": 44655115, "comment_id": 76297670, "body": "Well I was looking for a general solution but since that&#39;s not possible: Mac OS, Linux &amp; Windows. Let us <a href=\"http://chat.stackoverflow.com/rooms/147176/discussion-between-tversteeg-and-shepmaster\">continue this discussion in chat</a>."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1497978518, "post_id": 44655115, "comment_id": 76303535, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit\">How to check in Rust if architecture is 32 or 64 bit?</a>"}, {"owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "reply_to_user": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1497983034, "post_id": 44655115, "comment_id": 76306209, "body": "@Daniel that question is about compile time, I want to know it runtime"}], "answers": [{"comments": [{"owner": {"reputation": 28253, "user_id": 1139830, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/fAXTi.jpg?s=128&g=1", "display_name": "mason", "link": "https://stackoverflow.com/users/1139830/mason"}, "edited": false, "score": 1, "creation_date": 1497968544, "post_id": 44655636, "comment_id": 76296754, "body": "The question is asking if the OS is 64 or 32 bit. Not the application."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 28253, "user_id": 1139830, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/fAXTi.jpg?s=128&g=1", "display_name": "mason", "link": "https://stackoverflow.com/users/1139830/mason"}, "edited": false, "score": 2, "creation_date": 1497969612, "post_id": 44655636, "comment_id": 76297631, "body": "@mason that part is addressed by the paragraph with &quot;To find our whether your program actually runs on a 32 bit architecture or just in a 32 bit compatibility mode ...&quot;"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1497968338, "creation_date": 1497968338, "answer_id": 44655636, "question_id": 44655115, "link": "https://stackoverflow.com/questions/44655115/is-there-a-way-to-check-if-the-os-of-the-application-is-running-in-is-32-or-64/44655636#44655636", "title": "Is there a way to check if the OS of the application is running in is 32- or 64-bit?", "body": "<p>In the best case your program is already compiled for the correct architecture/target. This means that you already know at compile time whether or not the program is being compiled for a 32bit or 64bit target. You can check that by using the <a href=\"https://doc.rust-lang.org/book/first-edition/conditional-compilation.html\" rel=\"nofollow noreferrer\"><code>cfg()</code> attribute</a> or the <a href=\"https://doc.rust-lang.org/std/macro.cfg.html\" rel=\"nofollow noreferrer\"><code>cfg!()</code> macro</a>:</p>\n\n<pre><code>fn is_compiled_for_64_bit() -&gt; bool {\n    cfg!(target_pointer_width = \"64\")\n}\n\n#[cfg(target_pointer_width = \"32\")]\nfn foo() {\n    println!(\"foo compiled for 32 bit\");\n}\n\n#[cfg(target_pointer_width = \"64\")]\nfn foo() {\n    println!(\"foo compiled for 64 bit\");\n}\n</code></pre>\n\n<p>But in case you want to ship only 32-bit binaries to your users, your program is then executed either natively by the user's 32 bit hardware <em>or</em> in compatibility mode by the user's 64 bit hardware. To find our whether your program actually runs on a 32 bit architecture or just in a 32 bit compatibility mode is more difficult and depends on your operating system. I'm not aware of any easy cross platform way to do that. I would advise you to compile separately for each architecture you're targeting anyway.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498238080, "post_id": 44726334, "comment_id": 76436001, "body": "<a href=\"https://stackoverflow.com/a/44655636/155423\">Lukas Kalbertodt&#39;s answer</a> already says what this answer does; perhaps you could be clear about what this new answer brings? This also has the same limitations - it won&#39;t report 64 bits when run in a compatibility environment."}, {"owner": {"reputation": 638, "user_id": 6772989, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a05dc0e117ea9018de89f926894ea906?s=128&d=identicon&r=PG&f=1", "display_name": "Bulat M.", "link": "https://stackoverflow.com/users/6772989/bulat-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1516205954, "post_id": 44726334, "comment_id": 83596135, "body": "@Shepmaster, where to find list of valid values for &quot;target_os&quot; and similar parameters? Thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 638, "user_id": 6772989, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a05dc0e117ea9018de89f926894ea906?s=128&d=identicon&r=PG&f=1", "display_name": "Bulat M.", "link": "https://stackoverflow.com/users/6772989/bulat-m"}, "edited": false, "score": 0, "creation_date": 1516207995, "post_id": 44726334, "comment_id": 83597423, "body": "@BulatM. a <a href=\"https://www.google.com/search?q=site:stackoverflow.com%20rust%20%20valid%20values%20for%20%22target_os%22\" rel=\"nofollow noreferrer\">basic Google search</a> leads to <a href=\"https://stackoverflow.com/q/41742046/155423\">Is there a list of all cfg features?</a>."}], "tags": [], "owner": {"reputation": 1, "user_id": 8206265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3753f1c48b2eac4479b158fe0eae9df1?s=128&d=identicon&r=PG&f=1", "display_name": "lolman", "link": "https://stackoverflow.com/users/8206265/lolman"}, "is_accepted": false, "score": -1, "last_activity_date": 1498238103, "last_edit_date": 1498238103, "creation_date": 1498236223, "answer_id": 44726334, "question_id": 44655115, "link": "https://stackoverflow.com/questions/44655115/is-there-a-way-to-check-if-the-os-of-the-application-is-running-in-is-32-or-64/44726334#44726334", "title": "Is there a way to check if the OS of the application is running in is 32- or 64-bit?", "body": "<p>You can use this:</p>\n\n<pre><code>#[cfg(target_os=\"your operating system here\")]\n// code here\n</code></pre>\n\n<p>This literally just checks if the operating system the program was compiled on is the recommended one. Then I guess you can do this to check the bits of the operating system:</p>\n\n<pre><code>#[cfg(all(unix, target_pointer_width = \"32\"))]\n// code here\n</code></pre>\n\n<p>Where unix is the operating system (just a placeholder, should support Windows etc.), and 32 is the OS bitness.</p>\n"}], "owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1114, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1498238103, "creation_date": 1497966979, "last_edit_date": 1497968631, "question_id": 44655115, "link": "https://stackoverflow.com/questions/44655115/is-there-a-way-to-check-if-the-os-of-the-application-is-running-in-is-32-or-64", "title": "Is there a way to check if the OS of the application is running in is 32- or 64-bit?", "body": "<p>A boolean determining if it's 64-bit is perfect but an integer representing the amount of bits would also be fine.</p>\n\n<p>I want to capture some information about the PC's architecture for statistics purposes.</p>\n"}, {"tags": ["arrays", "rust", "slice", "lifetime"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1497931017, "post_id": 44643430, "comment_id": 76272527, "body": "But <code>buffer</code> is a local variable here ? What is the link with <code>self</code> ? Why don&#39;t just move the value ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497960929, "post_id": 44643430, "comment_id": 76290691, "body": "<i>I know the reason why above code doesn&#39;t work</i> \u2014 Would you care to share why you think it <i>should</i> work?"}, {"owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "edited": false, "score": 0, "creation_date": 1558590289, "post_id": 44643430, "comment_id": 99152668, "body": "It seems that I didn&#39;t understand much about Rust. Thanks all of your answers!"}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 4, "last_activity_date": 1497931707, "creation_date": 1497931707, "answer_id": 44643661, "question_id": 44643430, "link": "https://stackoverflow.com/questions/44643430/how-can-i-return-a-reference-to-a-local-variable-specifying-that-its-lifetime-is/44643661#44643661", "title": "How can I return a reference to a local variable specifying that its lifetime is the same as self?", "body": "<p>Explicit lifetime annotation of a reference cannot extend lifetime of an object it refers to. <code>bytes</code> is a local variable and it will be destroyed when function ends.</p>\n\n<p>One option is to return an array</p>\n\n<pre><code>fn to_bytes(&amp;self) -&gt; [u8;16] {\n    ...\n    // return array\n    bytes\n}\n</code></pre>\n\n<p>Another one is to pass mutable slice into function</p>\n\n<pre><code>fn to_bytes(&amp;self, bytes: &amp;mut [u8]) {\n    ...\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1497964096, "post_id": 44645769, "comment_id": 76293130, "body": "It&#39;s also possible if the reference points to something with the <code>&#39;static</code> lifetime."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 4, "last_activity_date": 1497941330, "creation_date": 1497941330, "answer_id": 44645769, "question_id": 44643430, "link": "https://stackoverflow.com/questions/44643430/how-can-i-return-a-reference-to-a-local-variable-specifying-that-its-lifetime-is/44645769#44645769", "title": "How can I return a reference to a local variable specifying that its lifetime is the same as self?", "body": "<p>When you want a function to return a reference:</p>\n\n<pre><code>fn to_bytes(&amp;self) -&gt; &amp;[u8]\n</code></pre>\n\n<p>It is possible only if that reference points to its argument (in this case <code>self</code>), because it has a longer lifetime than the function. Example (with a slice-friendly <code>SomeData</code>):</p>\n\n<pre><code>struct SomeData([u8; 16]);\n\nimpl SomeData {\n    fn to_bytes(&amp;self) -&gt; &amp;[u8] {\n        &amp;self.0[8..]\n    }\n}\n</code></pre>\n\n<p>In your case you are attempting to return a slice of a local variable and since that variable's lifetime ends by the time the <code>to_bytes</code> function returns, the compiler refuses to provide a reference to it.</p>\n"}], "owner": {"reputation": 111, "user_id": 7679205, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1785230388414883/picture?type=large", "display_name": "Atsuki Takahashi", "link": "https://stackoverflow.com/users/7679205/atsuki-takahashi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 680, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1497960843, "creation_date": 1497929885, "last_edit_date": 1497960843, "question_id": 44643430, "link": "https://stackoverflow.com/questions/44643430/how-can-i-return-a-reference-to-a-local-variable-specifying-that-its-lifetime-is", "title": "How can I return a reference to a local variable specifying that its lifetime is the same as self?", "body": "<p>I'd like to write some code like below</p>\n\n<pre><code>struct SomeData(u8, u8);\n\nimpl SomeData {\n    fn to_bytes(&amp;self) -&gt; &amp;[u8] {\n        let mut bytes: [u8; 16] = [0; 16];\n\n        // fill up buffer with some data in `SomeData`.\n        bytes[0] = self.0;\n        bytes[1] = self.1;\n\n        // return slice\n        &amp;bytes[..]\n    }\n}\n</code></pre>\n\n<p>I know the reason why above code doesn't work. How can I return a reference specifying that its lifetime is the same as <code>self</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": true, "score": 8, "last_activity_date": 1497925348, "creation_date": 1497925348, "answer_id": 44642807, "question_id": 44642662, "link": "https://stackoverflow.com/questions/44642662/how-does-rust-know-which-trait-methods-are-required-or-provided/44642807#44642807", "title": "How does Rust know which trait methods are required or provided?", "body": "<p>It is rather simple: the provided (optional) functions have a default implementation, not the required. </p>\n\n<p>Note that you can re-implement the provided functions if you wish so it can perform better than the default one for your particular struct/enum.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1497927590, "creation_date": 1497927590, "answer_id": 44643102, "question_id": 44642662, "link": "https://stackoverflow.com/questions/44642662/how-does-rust-know-which-trait-methods-are-required-or-provided/44643102#44643102", "title": "How does Rust know which trait methods are required or provided?", "body": "<blockquote>\n  <p>except for the <code>#[inline]</code> attribute, there is no difference between required and provided methods</p>\n</blockquote>\n\n<p>There is a huge difference, you just are ignoring the (lack of) formatting. Allow me to reformat for you:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n\nfn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) { // Starting with `{`\n    (0, None)                                   //\n}                                               // Ending with `}`\n</code></pre>\n\n<p>All the default methods <em>have a function body</em>. The required methods do not.</p>\n\n<p>I'd highly recommend rereading <a href=\"https://doc.rust-lang.org/stable/book/second-edition\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>, specifically <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-02-traits.html#default-implementations\" rel=\"noreferrer\">the chapter about traits and default implementations</a>. This resource is a much better way to get started with introductory topics like this than reading arbitrary snippets of the standard library.</p>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 723, "favorite_count": 1, "accepted_answer_id": 44642807, "answer_count": 2, "score": 2, "last_activity_date": 1497927648, "creation_date": 1497924299, "last_edit_date": 1497927648, "question_id": 44642662, "link": "https://stackoverflow.com/questions/44642662/how-does-rust-know-which-trait-methods-are-required-or-provided", "title": "How does Rust know which trait methods are required or provided?", "body": "<p>From the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>std::iter::Iterator</code></a> documentation, I can see that only the <code>next</code> method is required:  </p>\n\n<blockquote>\n  <p>Required Methods</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;\n</code></pre>\n</blockquote>\n\n<p>But from the <a href=\"https://doc.rust-lang.org/src/core/iter/iterator.rs.html#31-2165\" rel=\"nofollow noreferrer\">source code</a>, after removing comments:  </p>\n\n<pre><code>pub trait Iterator {\n    /// The type of the elements being iterated over.\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    type Item;\n    ......\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n    ......\n    #[inline]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) { (0, None) }\n    ......\n}\n</code></pre>\n\n<p>I can see, except for the <code>#[inline]</code> attribute, there is no difference between required and provided methods. How does Rust know which method is required or provided?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1497919206, "post_id": 44641830, "comment_id": 76269854, "body": "<code>&#39;a</code> lifetime don&#39;t match with <code>line</code> lifetime. <a href=\"https://play.rust-lang.org/?gist=3f510b31e0009af23d637c04660d4586&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1497920274, "post_id": 44641830, "comment_id": 76270098, "body": "Oh my... so simple change. I was assuming that all <code>&amp;str</code> and <code>Vec&lt;&amp;str&gt;</code> need to be of same lifetime and thus made it <code>Vec&lt;&amp;&#39;a str&gt;</code>. Did not expect <i>this</i> to be the cause of trouble. You do obviously have a trained eye - thank you so much, @Stargateur!"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1497920374, "post_id": 44641830, "comment_id": 76270123, "body": "Not only is <code>&#39;a</code> left unrestricted, there&#39;s nothing owning the test data fetched from the reader. You might want to use <code>String</code> rather than non-owning strings."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "edited": false, "score": 0, "creation_date": 1498159232, "post_id": 44643295, "comment_id": 76398284, "body": "Greetings @Shepmaster, thanks for explaining! Will take a look at parsers written in Rust. I am not fully sure though about what is meant when you write <i>references have to point to something</i> or <i>have to be owned by somebody</i>: To my understanding, a <code>&amp;str</code> points to a character string = region in memory and it can then be attached to a data <code>struct</code>ure and that can be returned to the caller, who owns/receives the returned result data structure. That is at least how my mental model is, coming from other PLs. Rust seems to require a different way of thinking. Greetings"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "edited": false, "score": 0, "creation_date": 1498161700, "post_id": 44643295, "comment_id": 76399693, "body": "@ERnsTL there&#39;s no drastic difference between Rust and other languages in what happens. The difference is that Rust ensures your references are always valid (unlike C or C++) and does so without using a garbage collector (unlike Java, C#, Ruby, etc.). In a language like Java, every <code>Object</code> is actually a type of reference and the language / VM ensures that the thing that is referred to will be around as long as needed. Your code is trying to have a reference without the referred-to-thing; this is akin to having an address without a house present; visiting the address will lead to Bad Things."}, {"owner": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "edited": false, "score": 0, "creation_date": 1498334709, "post_id": 44643295, "comment_id": 76462189, "body": "Thanks again for explaining - it&#39;s clearly not enough to understand a bit of Rust syntax; knowing the ownership system is a must, it has consequences all over. The <i>Rust book</i> in chapter <i>Understanding Ownership</i> (references, borrowing, slices) and <i>Common Collections</i> (Strings and slices) explain why the code above does not work. In chapter 5 (2. Ed. draft) <i>Ownership of struct data</i> has exactly an example like above with the solution in chapter 10: <i>Generic Types, Traits and Lifetimes</i>. Studying zero-copy parsers like Nom and tutorials (eg. <i>Rusty Buffers</i>) also helps greatly."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1497929553, "last_edit_date": 1497929553, "creation_date": 1497928757, "answer_id": 44643295, "question_id": 44641830, "link": "https://stackoverflow.com/questions/44641830/cannot-split-a-string-into-string-slices-with-explicit-lifetimes-because-the-str/44643295#44643295", "title": "Cannot split a string into string slices with explicit lifetimes because the string does not live long enough", "body": "<p>Your problem can be reduced to this:</p>\n\n<pre><code>fn foo&lt;'a&gt;() {\n    let thing = String::from(\"a b\");\n    let parts: Vec&lt;&amp;'a str&gt; = thing.split(\" \").collect();\n}\n</code></pre>\n\n<p>You create a <code>String</code> inside your function, then declare that references to that string are <strong>guaranteed</strong> to live for the lifetime <code>'a</code>. Unfortunately, the lifetime <code>'a</code> <em>isn't under your control</em> \u2014 the caller of the function gets to pick what the lifetime is. That's how generic parameters work!</p>\n\n<p>What would happen if the caller of the function specified the <code>'static</code> lifetime? How would it be possible for your code, which allocates a value at runtime, to guarantee that the value lives longer than even the <code>main</code> function? It's not possible, which is why the compiler has reported an error.</p>\n\n<p>Once you've gained a bit more experience, the function signature <code>fn foo&lt;'a&gt;()</code> will jump out at you like a red alert \u2014 there's a generic parameter that <em>isn't used</em>. That's most likely going to mean bad news.</p>\n\n<hr>\n\n<blockquote>\n  <p>return a populated struct filled mostly with <code>&amp;'a str</code></p>\n</blockquote>\n\n<p>You cannot possibly do this with the current organization of your code. References have to point to <em>something</em>. You are not providing anywhere for the pointed-at values to live. You cannot <a href=\"https://stackoverflow.com/q/29428227/155423\">return an allocated <code>String</code> as a string slice</a>.</p>\n\n<p>Before you jump to it, no you <a href=\"https://stackoverflow.com/q/32300132/155423\">cannot store a value and a reference to that value in the same struct</a>.</p>\n\n<p>Instead, you need to split the code that creates the <code>String</code> and that which parses a <code>&amp;str</code> and returns more <code>&amp;str</code> references. That's how all the existing zero-copy parsers work. You could look at those for inspiration.</p>\n\n<blockquote>\n  <p><code>String</code> has lower performance than <code>&amp;str</code> </p>\n</blockquote>\n\n<p>No, it really doesn't. Creating lots of extraneous <code>String</code>s is a bad idea, sure, just like allocating too much is a bad idea in any language.</p>\n"}, {"tags": [], "owner": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "is_accepted": false, "score": 0, "last_activity_date": 1498406494, "last_edit_date": 1498406494, "creation_date": 1498405767, "answer_id": 44748016, "question_id": 44641830, "link": "https://stackoverflow.com/questions/44641830/cannot-split-a-string-into-string-slices-with-explicit-lifetimes-because-the-str/44748016#44748016", "title": "Cannot split a string into string slices with explicit lifetimes because the string does not live long enough", "body": "<p>Maybe the following program gives clues for others who also also having their first problems with lifetimes:</p>\n\n<pre><code>fn main() {\n    // using String und &amp;str Slice\n    let my_str: String = \"fire\".to_owned();\n    let returned_str: MyStruct = my_func_str(&amp;my_str);\n    println!(\"Received return value: {ret}\", ret = returned_str.version);\n\n    // using Vec&lt;u8&gt; und &amp;[u8] Slice\n    let my_vec: Vec&lt;u8&gt; = \"fire\".to_owned().into_bytes();\n    let returned_u8: MyStruct2 = my_func_vec(&amp;my_vec);\n    println!(\"Received return value: {ret:?}\", ret = returned_u8.version);\n}\n\n\n// using String -&gt; str\nfn my_func_str&lt;'a&gt;(some_str: &amp;'a str) -&gt; MyStruct&lt;'a&gt; {\n    MyStruct {\n        version: &amp;some_str[0..2],\n    }\n}\n\nstruct MyStruct&lt;'a&gt; {\n    version: &amp;'a str,\n}\n\n\n// using Vec&lt;u8&gt; -&gt; &amp; [u8]\nfn my_func_vec&lt;'a&gt;(some_vec: &amp;'a Vec&lt;u8&gt;) -&gt; MyStruct2&lt;'a&gt; {\n    MyStruct2 {\n        version: &amp;some_vec[0..2],\n    }\n}\n\nstruct MyStruct2&lt;'a&gt; {\n    version: &amp;'a [u8],\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 5120003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/416bf885a8366286056825f8be41b1a4?s=128&d=identicon&r=PG&f=1", "display_name": "ERnsTL", "link": "https://stackoverflow.com/users/5120003/ernstl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1047, "favorite_count": 0, "accepted_answer_id": 44643295, "answer_count": 2, "score": 0, "last_activity_date": 1498406494, "creation_date": 1497918020, "last_edit_date": 1497929455, "question_id": 44641830, "link": "https://stackoverflow.com/questions/44641830/cannot-split-a-string-into-string-slices-with-explicit-lifetimes-because-the-str", "title": "Cannot split a string into string slices with explicit lifetimes because the string does not live long enough", "body": "<p>I'm writing a library that should read from something implementing the <code>BufRead</code> trait; a network data stream, standard input, etc. The first function is supposed to read a data unit from that reader and return a populated struct filled mostly with <code>&amp;'a str</code> values parsed from a frame from the wire.</p>\n\n<p>Here is a minimal version:</p>\n\n<pre><code>mod mymod {\n    use std::io::prelude::*;\n    use std::io;\n\n    pub fn parse_frame&lt;'a, T&gt;(mut reader: T)\n    where\n        T: BufRead,\n    {\n        for line in reader.by_ref().lines() {\n            let line = line.expect(\"reading header line\");\n            if line.len() == 0 {\n                // got empty line; done with header\n                break;\n            }\n            // split line\n            let splitted = line.splitn(2, ':');\n            let line_parts: Vec&lt;&amp;'a str&gt; = splitted.collect();\n\n            println!(\"{} has value {}\", line_parts[0], line_parts[1]);\n        }\n        // more reads down here, therefore the reader.by_ref() above\n        // (otherwise: use of moved value).\n    }\n}\n\nuse std::io;\n\nfn main() {\n    let stdin = io::stdin();\n    let locked = stdin.lock();\n    mymod::parse_frame(locked);\n}\n</code></pre>\n\n<p>An error shows up which I cannot fix after trying different solutions:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `line` does not live long enough\n  --&gt; src/main.rs:16:28\n   |\n16 |             let splitted = line.splitn(2, ':');\n   |                            ^^^^ does not live long enough\n...\n20 |         }\n   |         - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 8:4...\n  --&gt; src/main.rs:8:5\n   |\n8  | /     {\n9  | |         for line in reader.by_ref().lines() {\n10 | |             let line = line.expect(\"reading header line\");\n11 | |             if line.len() == 0 {\n...  |\n22 | |         // (otherwise: use of moved value).\n23 | |     }\n   | |_____^\n</code></pre>\n\n<p>The lifetime <code>'a</code> is defined on a struct and implementation of a data keeper structure because the <code>&amp;str</code> requires an explicit lifetime. These code parts were removed as part of the minimal example.</p>\n\n<p><code>BufReader</code> has a <code>lines()</code> method which returns <code>Result&lt;String, Err&gt;</code>. I handle errors using <code>expect</code> or <code>match</code> and thus unpack the <code>Result</code> so that the program now has the bare <code>String</code>. This will then be done multiple times to populate a data structure.</p>\n\n<p>Many answers say that the <code>unwrap</code> result needs to be bound to a variable otherwise it gets lost because it is a temporary value. But I already saved the unpacked <code>Result</code> value in the variable <code>line</code> and I still get the error.</p>\n\n<ol>\n<li><p>How to fix this error - could not get it working after hours trying.</p></li>\n<li><p>Does it make sense to do all these lifetime declarations just for <code>&amp;str</code> in a data keeper struct?  This will be mostly a readonly data structure, at most replacing whole field values. <code>String</code> could also be used, but have found articles saying that <code>String</code> has lower performance than <code>&amp;str</code> - and this frame parser function will be called many times and is performance-critical.</p></li>\n</ol>\n\n<p>Similar questions exist on Stack Overflow, but none quite answers the situation here.</p>\n\n<p>For completeness and better understanding, following is an excerpt from complete source code as to why lifetime question came up:</p>\n\n<p>Data structure declaration:</p>\n\n<pre><code>// tuple\npub struct Header&lt;'a&gt;(pub &amp;'a str, pub &amp;'a str);\n\npub struct Frame&lt;'a&gt; {\n    pub frameType: String,\n    pub bodyType: &amp;'a str,\n    pub port: &amp;'a str,\n    pub headers: Vec&lt;Header&lt;'a&gt;&gt;,\n    pub body: Vec&lt;u8&gt;,\n}\n\nimpl&lt;'a&gt; Frame&lt;'a&gt; {\n    pub fn marshal(&amp;'a self) {\n        //TODO\n        println!(\"marshal!\");\n    }\n}\n</code></pre>\n\n<p>Complete function definition:</p>\n\n<pre><code>pub fn parse_frame&lt;'a, T&gt;(mut reader: T) -&gt; Result&lt;Frame&lt;'a&gt;, io::Error&gt; where T: BufRead {\n</code></pre>\n"}, {"tags": ["macos", "opengl", "graphics", "rust", "glsl"], "answers": [{"tags": [], "owner": {"reputation": 340504, "user_id": 77567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f74022962edfb2f4bf9e7f497cd14eb?s=128&d=identicon&r=PG", "display_name": "rob mayoff", "link": "https://stackoverflow.com/users/77567/rob-mayoff"}, "is_accepted": false, "score": 2, "last_activity_date": 1497917423, "last_edit_date": 1592644375, "creation_date": 1497917083, "answer_id": 44641705, "question_id": 44641535, "link": "https://stackoverflow.com/questions/44641535/why-does-this-opengl-app-run-horrendously-slowly-on-certain-macs/44641705#44641705", "title": "Why does this OpenGL app run horrendously slowly on certain Macs?", "body": "<p>You can force your OpenGL context to use only a hardware renderer by specifying certain pixel format attributes when you create it. As described in <a href=\"https://developer.apple.com/library/content/qa/qa1502/_index.html\" rel=\"nofollow noreferrer\">Technical Q&amp;A QA1502 Ensuring hardware accelerated rendering for your OpenGL application</a>:</p>\n<blockquote>\n<p>A simple way to select a hardware accelerated renderer without the choice of software fallback is by selecting the following pixel format attributes:</p>\n<p>For CGL:</p>\n<p><code>kCGLPFAAccelerated</code> and <code>kCGLPFANoRecovery</code></p>\n<p>For AGL:</p>\n<p><code>AGL_ACCELERATED</code> and <code>AGL_NO_RECOVERY</code></p>\n<p>For NSOpenGL:</p>\n<p><code>NSOpenGLPFAAccelerated</code> and <code>NSOpenGLPFANoRecovery</code></p>\n</blockquote>\n<p>QA1502 also describes how you can ask the content whether it is using the GPU for vertex and fragment processing.</p>\n<p>You can consult Apple's <a href=\"https://developer.apple.com/opengl/OpenGL-Capabilities-Tables.pdf\" rel=\"nofollow noreferrer\">OpenGL Capabilities Tables</a> to see if you're using a feature that is not supported in your target hardware. Note that this document contains three tables (for 10.7.5, 10.8.5, and 10.9), each of which is several pages long. Either there have been no changes in macOS OpenGL hardware capabilities since 10.9, or Apple just hasn't bothered documenting them.</p>\n<p>There's also a link to the tables as a Numbers spreadsheet on Apple's <a href=\"https://developer.apple.com/opengl/\" rel=\"nofollow noreferrer\">OpenGL for macOS</a> developer page.</p>\n<p>If you're looking at the capabilities tables, you'll probably find <a href=\"https://support.apple.com/en-us/HT202823\" rel=\"nofollow noreferrer\">this document</a> useful for figuring out which GPU hardware is in your target Mac.</p>\n<p>You can use the OpenGL Profiler to see what OpenGL calls your app is issuing and how long they take. This might help you figure out what's wrong. The OpenGL Profiler is part of <a href=\"https://developer.apple.com/download/more/\" rel=\"nofollow noreferrer\">Additional Tools for Xcode</a>.</p>\n<p>However, the profiler has been broken for all of macOS Sierra's lifetime: it makes your app crash if you try to attach to the running app, and it never finishes attaching if you use the profiler to launch your app. I investigated the problem with the responsible Apple engineer at WWDC 2017 and we found that the profiler in \u201cAdditional Tools for Xcode 9 beta\u201d works in macOS Sierra 10.12.5, but not in macOS High Sierra 10.13 beta 1. So if you're running macOS Sierra, use that version.</p>\n<p>Apparently the problem is that Apple keeps creating entitlements (restrictions) that the profiler needs in order to work properly, without issuing new profiler versions signed with those entitlements. I expect a version of the profiler that works with High Sierra to be available by beta 3 (maybe beta 2, but probably not).</p>\n"}], "owner": {"reputation": 1589, "user_id": 469722, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac0ed9efe05910cd536b5022b005c80a?s=128&d=identicon&r=PG", "display_name": "keegan", "link": "https://stackoverflow.com/users/469722/keegan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "closed_date": 1497918705, "answer_count": 1, "score": -3, "last_activity_date": 1497917423, "creation_date": 1497915628, "question_id": 44641535, "link": "https://stackoverflow.com/questions/44641535/why-does-this-opengl-app-run-horrendously-slowly-on-certain-macs", "closed_reason": "Not suitable for this site", "title": "Why does this OpenGL app run horrendously slowly on certain Macs?", "body": "<p>I wrote a little fractal video feedback app. It runs fine on old laptops running Linux or Windows 10. It runs fine on my Android phone. It runs fine on a desktop Hackintosh. But on certain MacBooks, it runs at literally 0.02 FPS and uses a whole CPU core (should use a few %).</p>\n\n<p>I assume that I'm using some shader feature that causes it to drop down to software rendering, but what could that be? The shaders are not doing anything very fancy; you can <a href=\"https://github.com/kmcallister/azurescens/tree/master/src/shaders\" rel=\"nofollow noreferrer\">see the source code here</a>. The shaders use <code>#version 150</code> on non-GLES platforms.</p>\n\n<p>The program just draws 6 triangles per frame: two ping-pong between textures, and one copy to the screen. The CPU-side Rust code is also in that repo.</p>\n\n<p>Does anyone know what could cause this issue, or what tools I could use to track it down?</p>\n"}, {"tags": ["tcp", "rust", "irc"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497905853, "post_id": 44639594, "comment_id": 76265585, "body": "Have you considered fixing the warnings that the compiler <i>already tells you about</i>? If not, perhaps you would share why you&#39;ve chosen to ignore the warnings."}, {"owner": {"reputation": 3, "user_id": 7542515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed76b7c6db5c0007ef28ca9ca2738a4?s=128&d=identicon&r=PG&f=1", "display_name": "Camellia", "link": "https://stackoverflow.com/users/7542515/camellia"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497906073, "post_id": 44639594, "comment_id": 76265697, "body": "The warnings I&#39;m getting all are dead code errors. I didn&#39;t think it was relevant enough to mention."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1497906122, "post_id": 44639594, "comment_id": 76265726, "body": "No, they aren&#39;t. If you would take the time to remove the warnings, you&#39;d note that you are calling a method <i>that can fail</i> but you are ignoring the potential failure."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497906619, "post_id": 44639594, "comment_id": 76265960, "body": "Which source for the IRC protocol are you using? The quick searches I&#39;ve done don&#39;t agree with the format of data you are sending, so it&#39;d be good to see what you are trying to do in addition to what you are actually doing."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1497907762, "last_edit_date": 1497907762, "creation_date": 1497907238, "answer_id": 44640146, "question_id": 44639594, "link": "https://stackoverflow.com/questions/44639594/irc-server-doesnt-respond-to-rust-irc-client-identify-requests/44640146#44640146", "title": "IRC server doesn&#39;t respond to Rust IRC Client identify requests", "body": "<p>It's very important to read the documentation for the components we use when programming. For example, the docs for <a href=\"https://doc.rust-lang.org/std/io/struct.BufWriter.html\" rel=\"nofollow noreferrer\"><code>BufWriter</code></a> states (emphasis mine):</p>\n\n<blockquote>\n  <p>Wraps a writer and buffers its output.</p>\n  \n  <p>It can be excessively inefficient to work directly with something that\n  implements <code>Write</code>. For example, every call to write on <code>TcpStream</code>\n  results in a system call. A <code>BufWriter</code> keeps an in-memory buffer of\n  data and writes it to an underlying writer in <strong>large, infrequent\n  batches</strong>.</p>\n  \n  <p>The buffer will be written out when the writer is dropped.</p>\n</blockquote>\n\n<p>Said another way, the <em>entire purpose</em> of a buffered reader or writer is that <code>read</code> or <code>write</code> requests <strong>don't</strong> have a one-to-one mapping to the underlying stream.</p>\n\n<p>That means when you call <code>write</code>, you are only writing <em>to the buffer</em>. You also need to call <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush\" rel=\"nofollow noreferrer\"><code>flush</code></a> if you need to ensure that the bytes are written to the underlying stream.</p>\n\n<hr>\n\n<p>Additionally, you should:</p>\n\n<ol>\n<li>Handle the errors that can arise from <code>read</code>, <code>write</code>, and <code>flush</code>. </li>\n<li>Re-familiarize yourself with what each function does. For example, <code>read</code> and <code>write</code> don't guarantee that they read or write as much data as you ask them to. They may perform a partial read or write, and it's up to you to handle that. That's why there are helper methods like <code>read_to_end</code> or <code>write_all</code>.</li>\n<li>Clear your <code>String</code> that you are reading into. Otherwise the output just repeats every time the loop cycles.</li>\n<li>Use <code>write!</code> instead of building up a string that is immediately thrown away.</li>\n</ol>\n\n\n\n<pre><code>fn write_line(&amp;mut self, string: &amp;str) {\n    write!(self.writer, \"{}\\r\\n\", string).unwrap();\n    self.writer.flush().unwrap();\n}\n</code></pre>\n\n<p>With these changes, I was able to get a <code>PING</code> message from the server.</p>\n"}], "owner": {"reputation": 3, "user_id": 7542515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed76b7c6db5c0007ef28ca9ca2738a4?s=128&d=identicon&r=PG&f=1", "display_name": "Camellia", "link": "https://stackoverflow.com/users/7542515/camellia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 44640146, "answer_count": 1, "score": -1, "last_activity_date": 1497907762, "creation_date": 1497904874, "last_edit_date": 1497905695, "question_id": 44639594, "link": "https://stackoverflow.com/questions/44639594/irc-server-doesnt-respond-to-rust-irc-client-identify-requests", "title": "IRC server doesn&#39;t respond to Rust IRC Client identify requests", "body": "<p>I'm working on an IRC bot using TcpStream from the standard library.</p>\n\n<p>I'm able to read all the lines that come in, but the IRC server doesn't seem to respond to my identify requests. I thought I was sending the request too soon so I tried sleeping before sending the IDENT but that doesn't work. I write using both <code>BufReader</code>, <code>BufWriter</code> and calling <code>read</code> and <code>write</code> directly on the stream to no avail.</p>\n\n<pre><code>use std::net::TcpStream;\nuse std::io::{BufReader, BufWriter, BufRead, Write, Read};\nuse std::{thread, time};\nstruct Rusty {\n    name: String,\n    stream: TcpStream,\n    reader: BufReader&lt;TcpStream&gt;,\n    writer: BufWriter&lt;TcpStream&gt;,\n}\nimpl Rusty {\n    fn new(name: &amp;str, address: &amp;str) -&gt; Rusty {\n        let stream = TcpStream::connect(address).expect(\"Couldn't connect to server\");\n        let reader = BufReader::new(stream.try_clone().unwrap());\n        let writer = BufWriter::new(stream.try_clone().unwrap());\n        Rusty {\n            name: String::from(name),\n            reader: reader,\n            writer: writer,\n            stream: stream,\n        }\n    }\n    fn write_line(&amp;mut self, string: String) {\n        let line = format!(\"{}\\r\\n\", string);\n        &amp;self.writer.write(line.as_bytes());\n    }\n    fn identify(&amp;mut self) {\n        let nick = &amp;self.name.clone();\n        self.write_line(format!(\"USER {} {} {} : {}\", nick, nick, nick, nick));\n        self.write_line(format!(\"NICK {}\", nick));\n    }\n    fn read_lines(&amp;mut self) {\n        let mut line = String::new();\n        loop {\n            self.reader.read_line(&amp;mut line);\n            println!(\"{}\", line);\n        }\n    }\n}\nfn main() {\n    let mut bot = Rusty::new(\"rustyrusty\", \"irc.rizon.net:6667\");\n    thread::sleep_ms(5000);\n    bot.identify();\n    bot.read_lines();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497898048, "post_id": 44637635, "comment_id": 76261536, "body": "<i>another member in the same struct</i> \u2014 which two member variables inside the same struct are you referring to?"}, {"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497898200, "post_id": 44637635, "comment_id": 76261638, "body": "@Shepmaster I&#39;m trying to temporarily move Buffer::storage to Buffer::builder::segment"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497898444, "post_id": 44637635, "comment_id": 76261779, "body": "You cannot leave a member field in an undefined state; that could lead to accessing memory when you shouldn&#39;t, which Rust is designed to prevent. You will need to swap in a fresh <code>Vec</code> to replace the previous one. You could also just pass in a mutable reference to the <code>Vec</code> instead of the entire owned <code>Vec</code>."}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1497898167, "answer_count": 0, "score": 0, "last_activity_date": 1497897864, "creation_date": 1497897358, "last_edit_date": 1497897864, "question_id": 44637635, "link": "https://stackoverflow.com/questions/44637635/temporarily-move-object-from-one-member-to-another-member-in-the-same-struct", "closed_reason": "Duplicate", "title": "Temporarily move object from one member to another member in the same struct?", "body": "<p>I have a buffer which I'm logically dividing into segments. Each segment is built using a <code>SegmentBuilder</code>. I'm trying to temporarily give control of the buffer to the <code>SegmentBuilder</code> until it's finished with its segment, and then create a new <code>SegmentBuilder</code> and so on.</p>\n\n<p>Here's a small example:</p>\n\n<pre><code>struct SegmentBuilder {\n    segment: Vec&lt;u32&gt;,\n    start: usize,\n    end: usize,\n}\n\nimpl SegmentBuilder {\n    fn with_vector_and_offset(vector: Vec&lt;u32&gt;, offset: usize) -&gt; SegmentBuilder {\n        SegmentBuilder {\n            segment: vector,\n            start: offset,\n            end: offset,\n        }\n    }\n\n    fn append(&amp;mut self, integer: u32) -&gt; bool {\n        if self.end - self.start &gt; 42 {\n            false\n        } else {\n            self.segment.push(integer);\n            self.end = self.end + 1;\n            true\n        }\n    }\n\n    fn seal(self) -&gt; usize {\n        self.end\n    }\n}\n\n\nstruct Buffer {\n    storage: Vec&lt;u32&gt;,\n    builder: Option&lt;SegmentBuilder&gt;,\n}\n\nimpl Buffer {\n    fn new() -&gt; Buffer {\n        Buffer {\n            storage: Vec::new(),\n            builder: None,\n        }\n    }\n\n    fn append(&amp;mut self, integer: u32) {\n        if let Some(mut builder) = self.builder {\n            if !builder.append(integer) {\n                let offset = builder.seal();\n                self.builder = Some(SegmentBuilder::with_vector_and_offset(self.storage, offset));\n            }\n        } else {\n            self.builder = Some(SegmentBuilder::with_vector_and_offset(self.storage, 0));\n            self.append(integer);\n        }\n    }\n}\n</code></pre>\n\n<p>This gives a compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:46:36\n   |\n46 |         if let Some(mut builder) = self.builder {\n   |                     -----------    ^^^^ cannot move out of borrowed content\n   |                     |\n   |                     hint: to prevent move, use `ref builder` or `ref mut builder`\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:49:76\n   |\n49 |                 self.builder = Some(SegmentBuilder::with_vector_and_offset(self.storage, offset));\n   |                                                                            ^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:52:72\n   |\n52 |             self.builder = Some(SegmentBuilder::with_vector_and_offset(self.storage, 0));\n   |                                                                        ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>Is this pattern possible in Rust? If so, what should I do to fix the error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1497895484, "post_id": 44636833, "comment_id": 76260127, "body": "Maybe that&#39;s a good thing: it would have been UB if that code compiled, because <code>Arc::from_raw</code> expects a pointer returned by <code>Arc::into_raw</code>. Nevertheless, the part where <code>from_raw</code> requires <code>T</code> to be sized might have a good answer."}, {"owner": {"reputation": 1457, "user_id": 2849934, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3ff0a46f18c8d548fa91c12b922290b6?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/2849934/john"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497895714, "post_id": 44636833, "comment_id": 76260250, "body": "@E_net4 Really? Then, writing <code>let x = Box::new(5);</code> instead in the example would be UB?"}, {"owner": {"reputation": 168655, "user_id": 582, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ev49G.png?s=128&g=1", "display_name": "Lily Ballard", "link": "https://stackoverflow.com/users/582/lily-ballard"}, "edited": false, "score": 2, "creation_date": 1497897761, "post_id": 44636833, "comment_id": 76261370, "body": "Note that <code>Arc::from_raw()</code> must only be used with a value returned from <code>Arc::into_raw()</code> because <code>Arc</code> places a header before the data pointer, and <code>Arc::from_raw</code> expects to find that header by looking immediately before the pointer you provide."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1505739873, "post_id": 44636833, "comment_id": 79522927, "body": "See also <a href=\"https://stackoverflow.com/q/31685697/155423\">How to build an Rc&lt;str&gt; or Rc&lt;[T&#93;&gt;?</a>."}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 7, "last_activity_date": 1497916039, "creation_date": 1497916039, "answer_id": 44641572, "question_id": 44636833, "link": "https://stackoverflow.com/questions/44636833/is-it-possible-to-create-an-arct-from-a-vect/44641572#44641572", "title": "Is it possible to create an Arc&lt;[T]&gt; from a Vec&lt;T&gt;?", "body": "<p>No.</p>\n\n<p>First of all, as already noted in comments, you can't toss raw pointers around willy-nilly like that.  To quote <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#method.from_raw\" rel=\"noreferrer\">the documentation of <code>Arc::from_raw</code></a>:</p>\n\n<blockquote>\n  <p>The raw pointer must have been previously returned by a call to a <code>Arc::into_raw</code>.</p>\n</blockquote>\n\n<p>You absolutely <strong>must</strong> read the documentation any time you're using an <code>unsafe</code> method.</p>\n\n<p>Secondly, the conversion you want is impossible.  <code>Vec&lt;T&gt;</code> \u2192 <code>Box&lt;[T]&gt;</code> works because, internally, <code>Vec&lt;T&gt;</code> is effectively a <code>(Box&lt;[T]&gt;, usize)</code> pair.  So, all the method does is give you access to that internal <code>Box&lt;[T]&gt;</code> pointer [1].  <code>Arc&lt;[T]&gt;</code>, however, is <em>not</em> physically compatible with a <code>Box&lt;[T]&gt;</code>, because it has to contain the reference counts.  The thing being pointed to by <code>Arc&lt;T&gt;</code> has a different size and layout to the thing being pointed to by <code>Box&lt;T&gt;</code>.</p>\n\n<p>The only way you could get from <code>Vec&lt;T&gt;</code> to <code>Arc&lt;[T]&gt;</code> would be to reallocate the contents of the vector in a reference-counted allocation... which I'm not aware of any way to do.  I don't believe there's any particular reason it <em>couldn't</em> be implemented, it just hasn't [2].</p>\n\n<p>All that said, I believe not being able to use dynamically sized types with <code>Arc::into_raw</code>/<code>Arc::from_raw</code> is a bug.  It's certainly possible to get <code>Arc</code>s with dynamically sized types... though only by casting from pointers to fixed-sized types.</p>\n\n<hr>\n\n<p>[1]: Not quite.  <code>Vec&lt;T&gt;</code> doesn't <em>actually</em> have a <code>Box&lt;[T]&gt;</code> inside it, but it has something <em>compatible</em>.  It also has to shrink the slice to not contain uninitialised elements.</p>\n\n<p>[2]: Rust does not, on the whole, have good support for allocating dynamically sized things in general.  It's possible that part of the reason for this hole in particular is that <code>Box&lt;T&gt;</code> <em>also</em> can't allocate arrays directly, which is possibly because <code>Vec&lt;T&gt;</code> exists, because <code>Vec&lt;T&gt;</code> used to be part of the language itself, and why would you add array allocation to <code>Box</code> when <code>Vec</code> already exists?  <em>\"Why not have <code>ArcVec&lt;T&gt;</code>, then?\"</em>  Because you'd never be able to <em>construct</em> one due to shared ownership.</p>\n"}, {"tags": [], "owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "is_accepted": false, "score": 0, "last_activity_date": 1497916716, "creation_date": 1497916716, "answer_id": 44641656, "question_id": 44636833, "link": "https://stackoverflow.com/questions/44636833/is-it-possible-to-create-an-arct-from-a-vect/44641656#44641656", "title": "Is it possible to create an Arc&lt;[T]&gt; from a Vec&lt;T&gt;?", "body": "<p><code>Arc&lt;[T]&gt;</code> is an <code>Arc</code> containing a pointer to a slice of <code>T</code>'s. But <code>[T]</code> is not actually Sized at compile time since the compiler does not know how long it will be (versus &amp;[T] which is just a reference and thus has a known size).</p>\n\n<pre><code>use std::sync::Arc;\n\nfn main() {\n    let v: Vec&lt;u32&gt; = vec![1, 2, 3];\n    let b: Box&lt;[u32]&gt; = v.into_boxed_slice();\n    let y: Arc&lt;[u32]&gt; = Arc::new(*b);\n    print!(\"{:?}\", y)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d134413b3278cdf8e5e16c66e1ee15c8&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\" title=\"Play Link\">Play Link</a></p>\n\n<p>However, you can make an <code>Arc&lt;&amp;[T]&gt;</code> without making a boxed slice:</p>\n\n<pre><code>use std::sync::Arc;\n\nfn main() {\n    let v = vec![1, 2, 3];\n    let y: Arc&lt;&amp;[u32]&gt; = Arc::new(&amp;v[..]);\n    print!(\"{:?}\", y)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4278fb9d6b7e52d390d82e3eb2bbb3ad&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\" title=\"Shared Ref Play Link\">Shared Ref Play Link</a></p>\n\n<p>However, this seems like a study in the type system with little practical value. If what you really want is a view of the Vec that you can pass around between threads, an Arc&lt;&amp;[T]> will give you what you want. And if you need it to be on the heap, <code>Arc&lt;Box&lt;&amp;[T]&gt;&gt;</code> works fine too.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1507831052, "last_edit_date": 1592644375, "creation_date": 1497923097, "answer_id": 44642513, "question_id": 44636833, "link": "https://stackoverflow.com/questions/44636833/is-it-possible-to-create-an-arct-from-a-vect/44642513#44642513", "title": "Is it possible to create an Arc&lt;[T]&gt; from a Vec&lt;T&gt;?", "body": "<p>As of Rust 1.21.0, you can do this:</p>\n<pre><code>let thing: Arc&lt;[i32]&gt; = vec![1, 2, 3].into();\n</code></pre>\n<p>This was enabled by <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1845-shared-from-slice.md\" rel=\"noreferrer\">RFC 1845</a>:</p>\n<blockquote>\n<p>In addition: <code>From&lt;Vec&lt;T&gt;&gt; for Rc&lt;[T]&gt;</code> and <code>From&lt;Box&lt;T: ?Sized&gt;&gt; for Rc&lt;T&gt;</code> will be added.</p>\n<p>Identical APIs will also be added for <code>Arc</code>.</p>\n</blockquote>\n<p>Internally, this <a href=\"https://github.com/rust-lang/rust/blob/1.21.0/src/liballoc/arc.rs#L1391\" rel=\"noreferrer\">uses a method called <code>copy_from_slice</code></a>, so the allocation of the <code>Vec</code> is not reused. For the details why, check out <a href=\"https://stackoverflow.com/a/44641572/155423\">DK.'s answer</a>.</p>\n"}], "owner": {"reputation": 1457, "user_id": 2849934, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3ff0a46f18c8d548fa91c12b922290b6?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/2849934/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1688, "favorite_count": 1, "accepted_answer_id": 44642513, "answer_count": 3, "score": 6, "last_activity_date": 1507831052, "creation_date": 1497894294, "last_edit_date": 1497962873, "question_id": 44636833, "link": "https://stackoverflow.com/questions/44636833/is-it-possible-to-create-an-arct-from-a-vect", "title": "Is it possible to create an Arc&lt;[T]&gt; from a Vec&lt;T&gt;?", "body": "<p>To be more specific, why <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#method.from_raw\" rel=\"noreferrer\">doesn't</a> <code>Arc&lt;T&gt;</code> implement <code>from_raw</code> with a dynamically sized <code>T</code> while <code>Box&lt;T&gt;</code> <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"noreferrer\">does</a>?</p>\n\n<pre><code>use std::sync::Arc;\n\nfn main() {\n    let x = vec![1, 2, 3].into_boxed_slice();\n    let y = Box::into_raw(x);\n    let z = unsafe { Arc::from_raw(y) }; // ERROR\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=fa45cfcf65c1af1d41c509b0aba66704&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">play</a>)</p>\n\n<p>As pointed out in the comments, <code>Arc::from_raw</code> <em>must</em> be used with a pointer from <code>Arc::into_raw</code>, so the above example doesn't make sense. My original question (Is it possible to create an <code>Arc&lt;[T]&gt;</code> from a <code>Vec&lt;T&gt;</code>) remains: is this possible, and if not, why?</p>\n"}, {"tags": ["templates", "generics", "constructor", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497886264, "post_id": 44634463, "comment_id": 76254646, "body": "What are you <i>trying</i> to do? Both of your examples have <b>3</b> completely independent type parameters (<code>A</code>, <code>B</code>, <code>B1</code> / the inner <code>B</code>). Why are you trying to introduce a new type parameter on the constructor at all?"}, {"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497886358, "post_id": 44634463, "comment_id": 76254728, "body": "@Shepmaster only because introducing another type parameter allows me to specify <i>what</i> I want to create. (Possibly the return type should be <code>S&lt;A, B1&gt;</code> not <code>Self</code>.)"}], "answers": [{"comments": [{"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "edited": false, "score": 0, "creation_date": 1497886454, "post_id": 44634554, "comment_id": 76254797, "body": "I believe this <code>impl</code> is only applicable to <code>S&lt;A, ()&gt;</code>, i.e. not generally for any <code>S&lt;A, B&gt;</code>?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "edited": false, "score": 0, "creation_date": 1497886563, "post_id": 44634554, "comment_id": 76254876, "body": "@dhardy: So?  You&#39;re not <i>using</i> <code>S&lt;A, ()&gt;</code>.  <code>()</code> is only there because the <code>B</code> type parameter <i>has</i> to be set to <i>something</i>.  The compiler infers <code>A</code> from context, and you give it <code>B</code> explicitly.  It works with the example code you provided."}, {"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "edited": false, "score": 0, "creation_date": 1497887633, "post_id": 44634554, "comment_id": 76255616, "body": "I see; I guess it does work. Just don&#39;t put any functions using <code>B</code> in the same <code>impl</code> block. And in examples with any type restrictions on <code>B</code>, the &quot;dummy type&quot; will probably have to be something other than <code>()</code>."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 1, "last_activity_date": 1497886361, "creation_date": 1497886361, "answer_id": 44634554, "question_id": 44634463, "link": "https://stackoverflow.com/questions/44634463/why-cant-i-have-a-constructor-deduce-one-type-parameter-while-defining-another/44634554#44634554", "title": "Why can&#39;t I have a constructor deduce one type parameter while defining another explicitly?", "body": "<p>You can, just not like that.</p>\n\n<pre><code>impl&lt;A&gt; S&lt;A, ()&gt; {\n    fn new&lt;C: Default&gt;(a: A) -&gt; S&lt;A, C&gt; {\n        S {\n            a: a,\n            b: Default::default(),\n        }\n    }\n}\n</code></pre>\n\n<p>In this case, it doesn't <em>matter</em> what type is used for <code>B</code>, since it's never going to be used.  It just has to satisfy the stated constraints and act as a placeholder.</p>\n\n<p>I <em>could</em> have used <code>B</code> as the parameter, but I renamed it to make it clear that it isn't directly related to the type being implemented.</p>\n"}, {"comments": [{"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "edited": false, "score": 0, "creation_date": 1497886499, "post_id": 44634593, "comment_id": 76254829, "body": "I guess this is what I want. Thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1497961395, "last_edit_date": 1497961395, "creation_date": 1497886454, "answer_id": 44634593, "question_id": 44634463, "link": "https://stackoverflow.com/questions/44634463/why-cant-i-have-a-constructor-deduce-one-type-parameter-while-defining-another/44634593#44634593", "title": "Why can&#39;t I have a constructor deduce one type parameter while defining another explicitly?", "body": "<p>I don't believe you want to specify a type parameter on the function at all. Instead, you should just allow the compiler to infer the other type parameters of the struct by using <code>_</code> as the type when you construct it:</p>\n\n<pre><code>struct S&lt;A, B: Default&gt; {\n    a: A, b: B\n}\n\nimpl&lt;A, B: Default&gt; S&lt;A, B&gt; {\n    fn new(a: A) -&gt; Self {\n        S {\n            a: a,\n            b: Default::default(),\n        }\n    }\n}\n\nfn main() {\n    let s = S::&lt;_, u32&gt;::new(10);\n}\n</code></pre>\n"}], "owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 44634593, "answer_count": 2, "score": 0, "last_activity_date": 1497961395, "creation_date": 1497886085, "last_edit_date": 1497886474, "question_id": 44634463, "link": "https://stackoverflow.com/questions/44634463/why-cant-i-have-a-constructor-deduce-one-type-parameter-while-defining-another", "title": "Why can&#39;t I have a constructor deduce one type parameter while defining another explicitly?", "body": "<p>Why can't I have a constructor deduce one type parameter while defining another explicitly like this (where <code>A</code> and <code>B</code> are supposed to be distinct)?</p>\n\n<pre><code>struct S&lt;A, B: Default&gt; {\n    a: A, b: B\n}\n\nimpl&lt;A, B: Default&gt; S&lt;A, B&gt; {\n    fn new&lt;B&gt;(a: A) -&gt; Self {\n        S {\n            a: a,\n            b: Default::default(),\n        }\n    }\n}\n\nfn main() {\n    let s = S::new::&lt;u32&gt;(10);\n}\n</code></pre>\n\n<p>This gives an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0194]: type parameter `B` shadows another type parameter of the same name\n --&gt; test.rs:6:12\n  |\n5 | impl&lt;A, B: Default&gt; S&lt;A, B&gt; {\n  |         - first `B` declared here\n6 |     fn new&lt;B&gt;(a: A) -&gt; Self {\n  |            ^ shadows another type parameter                                                                                              \n</code></pre>\n\n<p>One could rename the inner parameter (<code>fn new&lt;B1&gt;</code>), but then an error occurs when trying to use the constructor:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; test.rs:15:13\n   |\n15 |     let s = S::new::&lt;u32&gt;(10);\n   |         -   ^^^^^^^^^^^^^ cannot infer type for `B`\n   |         |\n   |         consider giving `s` a type\n</code></pre>\n\n<p>If <code>fn new</code> is declared without any extra parameter, an object can be created as follows, but this forces specification of both templated parameters IIUC:</p>\n\n<pre><code>let s = S::&lt;i32, u32&gt;::new(10);\n</code></pre>\n"}, {"tags": ["rust", "slice"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1497873699, "post_id": 44629021, "comment_id": 76245545, "body": "Unsafe code could be tricky. <code>fn ref_to_slice&lt;T&gt;(v: &amp;T) -&gt; &amp;[T] { unsafe { ::std::slice::from_raw_parts(v as *const T, 1) } }</code> While this code could be fine, I am not entirely sure (panic safety - check, lifetimes are equal - check, no mutable aliasing - check, interior mutability - shouldn&#39;t be a problem, zero sized types - I couldn&#39;t see a problem, but not completely sure)"}], "owner": {"reputation": 3333, "user_id": 3859566, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a7c4c1c9ad9bd41f49004d32884bc680?s=128&d=identicon&r=PG&f=1", "display_name": "yong", "link": "https://stackoverflow.com/users/3859566/yong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 199, "favorite_count": 0, "closed_date": 1497874732, "answer_count": 0, "score": 3, "last_activity_date": 1497874125, "creation_date": 1497870633, "last_edit_date": 1497874125, "question_id": 44629021, "link": "https://stackoverflow.com/questions/44629021/convert-reference-to-item-to-slice-of-length-1", "closed_reason": "Duplicate", "title": "Convert reference to item to slice of length 1", "body": "<p>I have a <code>&amp;X</code>. How can I convert this to a <code>&amp;[X]</code> of length 1? <code>std::slice::from_raw_parts</code> should work, but it is <code>unsafe</code>. Is there a safe function that I can use to do this conversion?</p>\n"}, {"tags": ["multithreading", "concurrency", "parallel-processing", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1497860106, "post_id": 44624591, "comment_id": 76236403, "body": "For your specific example, if you have 4 threads, just sum <code>1..250k</code>, <code>250k..500k</code>, etc. in each thread and then sum up the return of the threaded functions. You must have in mind that each case of parallel computing is unique, everything depends on your problem."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1497860685, "post_id": 44624591, "comment_id": 76236725, "body": "&quot;but do not work when the threads are larger than 20&quot; what happens when you have more than 20 threads? These details are not worth omitting."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1497861698, "post_id": 44624591, "comment_id": 76237365, "body": "I think that OP says he cannot spawn 1M threads in a desktop computer."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497961145, "post_id": 44628232, "comment_id": 76290843, "body": "The playgrounds execute code inside a Docker container, but I don&#39;t think there&#39;s any additional restriction on the number of threads. How did you test to arrive at 24?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497961339, "post_id": 44628232, "comment_id": 76290987, "body": "And just to point out the silliness of the question, the <i>correct</i> way to sum the range of numbers from zero to <code>n</code> is <code>sum(n) = ( n * (n+1) ) &#47; 2</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497967825, "post_id": 44628232, "comment_id": 76296176, "body": "@Shepmaster I tested copy-pasted the OP&#39;s code into the playground and binary-searched the minimum number of threads for <code>unwrap()</code> to fail with a resource-related error message. In my test it failed with 23 additional threads, which led me to conclude that 24 threads in total are allowed in the VM."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497967955, "post_id": 44628232, "comment_id": 76296276, "body": "I agree about the silliness of the question, taken literally. The answer assumes that the actual intent is to do something different and useful, in which case the advice to use Rayon can come in handy. A more relevant example might include some transformation of the numbers, e.g. <code>par_iter().map(xxx_transform).sum()</code>, but once the OP is familiar with Rayon, they can hopefully find it out on their own."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497968267, "post_id": 44628232, "comment_id": 76296513, "body": "Hmm, interesting. I think that&#39;s more likely a RAM limitation than a thread limitation. <a href=\"https://play.integer32.com/?gist=af413053f48342f6d2241ab529fd1ccb&amp;version=stable\" rel=\"nofollow noreferrer\">My playground supports at least 256 threads</a> by the same metric, if I understand. You could probably do even more if you tuned down the stack size of each thread."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 3, "last_activity_date": 1497956754, "last_edit_date": 1497956754, "creation_date": 1497868419, "answer_id": 44628232, "question_id": 44624591, "link": "https://stackoverflow.com/questions/44624591/how-can-i-sum-up-using-concurrency-from-1-to-1000000-with-rust/44628232#44628232", "title": "How can I sum up using concurrency from 1 to 1000000 with Rust?", "body": "<p>There are several problems with the provided code.</p>\n\n<ol>\n<li><code>thread::spawn</code> creates an OS-level thread, which means the existing code cannot possibly scale to numbers up to a million as indicated in the title. That would require a million threads in parallel, where typical modern OS'es support up to a few thousands of threads at best. More constrained environments, such as embedded systems or virtual/paravirtual machines, allow much less than that; for example, the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust playground</a> appears to allow a maximum of 24 concurrent threads. Instead, one needs to create a fixed small number of threads, and carefully divide the work among them.</li>\n<li>The function executing in each thread runs inside a lock, which effectively serializes the work done by the threads. Even if one could spawn arbitrarily many threads, the loop as written would execute no faster than what would be achieved by a single thread - and in practice it would be orders of magnitude slower because it would spend a lot of time on locking/unlocking of a heavily contended mutex.</li>\n</ol>\n\n<p>One good way to approach this kind of problem while still managing threads manually is provided in the <a href=\"https://stackoverflow.com/questions/44624591/how-can-i-sum-up-using-concurrency-from-1-to-1000000-by-rust#comment76236403_44624591\">comment by Boiethios</a>: <em>if you have 4 threads, just sum 1..250k, 250k..500k, etc. in each thread and then sum up the return of the threaded functions.</em></p>\n\n<blockquote>\n  <p>Or is there another way to sum up from 1 to 1000000 with concurrency?</p>\n</blockquote>\n\n<p>I would recommend using a higher-level library that encapsulates creation/pooling of worker threads and division of work among them. <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a> is an excellent one, providing a \"parallel iteration\" facility, which works like iteration, but automatically dividing up the work among multiple cores. Using Rayon, parallel summing of integers would look like this:</p>\n\n<pre><code>extern crate rayon;\n\nuse rayon::prelude::*;\n\nfn main() {\n    let sum: usize = (1..1000001).collect::&lt;Vec&lt;_&gt;&gt;().par_iter().sum();\n    assert_eq!(sum, 500000500000);\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 7292616, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93815621842bc2f40e7e4eb1c0133cac?s=128&d=identicon&r=PG&f=1", "display_name": "BonWaGG", "link": "https://stackoverflow.com/users/7292616/bonwagg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 557, "favorite_count": 0, "accepted_answer_id": 44628232, "answer_count": 1, "score": 0, "last_activity_date": 1497956754, "creation_date": 1497857359, "last_edit_date": 1497874210, "question_id": 44624591, "link": "https://stackoverflow.com/questions/44624591/how-can-i-sum-up-using-concurrency-from-1-to-1000000-with-rust", "title": "How can I sum up using concurrency from 1 to 1000000 with Rust?", "body": "<p>I am a newbie to Rust, and I want to sum up a large amount of numbers using concurrency. I found this code:</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Arc, Mutex};\n\nstatic NTHREAD: usize = 10;\n\nfn main() {\n    let mut threads = Vec::new();\n\n    let x = 0;\n\n    // A thread-safe, sharable mutex object\n    let data = Arc::new(Mutex::new(x));\n\n    for i in 1..(NTHREAD+1) {\n        // Increment the count of the mutex\n        let mutex = data.clone();\n\n        threads.push(thread::spawn(move || {\n            // Lock the mutex\n            let n = mutex.lock();\n\n            match n {\n                Ok(mut n) =&gt; *n += i,\n                Err(str) =&gt; println!(\"{}\", str)\n            }\n        }));\n    }\n\n    // Wait all threads ending\n    for thread in threads {\n        let _ = thread.join().unwrap();\n    }\n\n    assert_eq!(*data.lock().unwrap(), 55);\n}\n</code></pre>\n\n<p>This works when the threads are 10, but does not work when the threads are larger than 20. </p>\n\n<p>I think it should be fine in any number of threads. </p>\n\n<p>Do I misunderstand something? Is there another way to sum up from 1 to 1000000 with concurrency?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "edited": false, "score": 1, "creation_date": 1497840024, "post_id": 44621129, "comment_id": 76228959, "body": "The compiler actually gives a warning when parenthesis are used, but not braces. Interesting. <a href=\"https://play.rust-lang.org/?gist=5c648aff16dcedc4ef90bad46087e087&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "edited": false, "score": 0, "creation_date": 1497874019, "post_id": 44621129, "comment_id": 76245743, "body": "@Akavall that&#39;s because there <i>are</i> small differences (see the answers), so it wouldn&#39;t be possible to replace every braced expression with a parenthesized one, just most of them."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1497837577, "creation_date": 1497837577, "answer_id": 44621288, "question_id": 44621129, "link": "https://stackoverflow.com/questions/44621129/is-there-any-different-semantics-between-1-4-and-1-4-iteration-in-rust/44621288#44621288", "title": "Is there any different semantics between &quot;(1..4)&quot; and &quot;{1..4}&quot; iteration in Rust?", "body": "<p>There's no real useful difference. Both parenthesis and braces count as a single expression and function to alter the precedence. I'm pretty sure they have slightly different parsing rules, but at that point I'd guess there's a cleaner way of writing the code.</p>\n\n<p>Note that in your examples, the idiomatic way would be to use <em>neither</em>:</p>\n\n<pre><code>fn main() {\n    for v in 1..4 {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<p>When needed, I feel I've only ever seen parenthesis used, never braces:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", (1..4).count());\n}\n</code></pre>\n\n<hr>\n\n<p>There are <em>rare</em> cases where curly braces provide more power. Since they serve to start a new scope, you can <a href=\"https://stackoverflow.com/questions/28767108/borrow-pointer-errors-recursively-traversing-tree\">use them to \"manually\" transfer ownership</a> in some tricky locations. For the purposes of the simple iterator described, there won't be any visible difference.</p>\n"}, {"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 10, "last_activity_date": 1515403526, "last_edit_date": 1515403526, "creation_date": 1497837613, "answer_id": 44621294, "question_id": 44621129, "link": "https://stackoverflow.com/questions/44621129/is-there-any-different-semantics-between-1-4-and-1-4-iteration-in-rust/44621294#44621294", "title": "Is there any different semantics between &quot;(1..4)&quot; and &quot;{1..4}&quot; iteration in Rust?", "body": "<p>They produce the same iterators. You can even omit parentheses/braces:</p>\n\n<pre><code>fn main() {\n    for v in 1..4 {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<p>You can enclose an expression with <code>()</code> or <code>{}</code> in general. There is a difference however: <code>{}</code> creates a block and you can write statements (like <code>let</code>) in it. There is also a very subtle difference in how expressions are parsed. <strong>Edit</strong>: I found <a href=\"https://bluss.github.io/rust/fun/2015/10/11/stuff-the-identity-function-does/\" rel=\"nofollow noreferrer\">a blog article that describes another difference in how coercion and borrowck works</a>.</p>\n\n<p>Usually <code>()</code> is preferred if you don't need statements.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1497855146, "creation_date": 1497855146, "answer_id": 44623993, "question_id": 44621129, "link": "https://stackoverflow.com/questions/44621129/is-there-any-different-semantics-between-1-4-and-1-4-iteration-in-rust/44623993#44623993", "title": "Is there any different semantics between &quot;(1..4)&quot; and &quot;{1..4}&quot; iteration in Rust?", "body": "<p>In addition to the existing answers I was interested what the difference would be in the mid-level IR.</p>\n\n<p>Even though the braces introduce a new block, in this case there is virtually no difference even in the (Nightly) MIR - the compiler immediately recognizes that the block serves no other purpose than returning a <code>Range</code>.</p>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 438, "favorite_count": 0, "accepted_answer_id": 44621294, "answer_count": 3, "score": 9, "last_activity_date": 1515403526, "creation_date": 1497835964, "question_id": 44621129, "link": "https://stackoverflow.com/questions/44621129/is-there-any-different-semantics-between-1-4-and-1-4-iteration-in-rust", "title": "Is there any different semantics between &quot;(1..4)&quot; and &quot;{1..4}&quot; iteration in Rust?", "body": "<p>I find using <code>(1..4)</code></p>\n\n<pre><code>fn main() {\n    for v in (1..4) {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<p>and <code>{1..4}</code> </p>\n\n<pre><code>fn main() {\n    for v in {1..4} {\n        println!(\"{}\", v);\n    }\n}\n</code></pre>\n\n<p>gets the same result. Is there any different semantics between \"<code>(1..4)</code>\" and \"<code>{1..4}</code>\" iteration?</p>\n"}, {"tags": ["rust", "self-modifying", "constraint-satisfaction"], "comments": [{"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 0, "creation_date": 1497821756, "post_id": 44619747, "comment_id": 76225313, "body": "Sounds like you&#39;re trying to write a compiler. :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497823090, "post_id": 44619747, "comment_id": 76225628, "body": "What benefit do you foresee in cramming two separate programs into a single source file?"}, {"owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497823827, "post_id": 44619747, "comment_id": 76225799, "body": "@Shepmaster mostly that file management would be easier if the programs were tightly coupled. I also wanted to make sure that I wasn&#39;t missing an easier solution."}, {"owner": {"reputation": 5257, "user_id": 1128465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f29dd9a720fb3c243fbb3590a8fd5ce3?s=128&d=identicon&r=PG", "display_name": "Kyle Jones", "link": "https://stackoverflow.com/users/1128465/kyle-jones"}, "edited": false, "score": 0, "creation_date": 1497824251, "post_id": 44619747, "comment_id": 76225919, "body": "Is there a reason why you&#39;re writing this instead of using an SMT solver like Z3?  It&#39;s possible that what you&#39;re trying to do can&#39;t be expressed in SMT, but I&#39;d look first before embarking on such a similar looking project."}, {"owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "reply_to_user": {"reputation": 5257, "user_id": 1128465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f29dd9a720fb3c243fbb3590a8fd5ce3?s=128&d=identicon&r=PG", "display_name": "Kyle Jones", "link": "https://stackoverflow.com/users/1128465/kyle-jones"}, "edited": false, "score": 0, "creation_date": 1497824997, "post_id": 44619747, "comment_id": 76226086, "body": "@KyleJones For fun and experience mostly. This is actually the 2nd solver I&#39;ve written. I want to fix several design mistakes I made early on in the first solver."}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 105, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1497839481, "creation_date": 1497821685, "last_edit_date": 1497839481, "question_id": 44619747, "link": "https://stackoverflow.com/questions/44619747/is-there-a-better-way-to-implement-a-constraint-satisfaction-solver-than-a-prepr", "title": "Is there a better way to implement a constraint satisfaction solver than a preprocessor that generates a Rust program?", "body": "<p>I'm writing a constraint satisfaction solver that will read an input file with multiple functions such as</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>and(not_equal(X0,X1),not_equal(absolute(subtract(X2,X3)),X4))\n</code></pre>\n\n<p>The solver will try 100s to 100,000,000s of combinations of <code>X1, X2, X3, X4, X5</code> on the above function.</p>\n\n<p>Currently the solver:</p>\n\n<ol>\n<li>Reads the next instruction of the function from a <code>Vec</code>.</li>\n<li>Pattern matches that instruction to an action.</li>\n<li>Executes the instruction and saves the result to possibly be used later in the function.</li>\n</ol>\n\n<p>Instead, I would like pre-process the functions and convert them into static Rust code. So the above function would become:</p>\n\n<pre><code>fn func_1 (vars: &amp;Vec&lt;i32&gt;) -&gt; bool {\n    let t1 = if vars[0] != vars[1] {1} else {0};\n    let t2 = vars[2] - vars[3];\n    t2.abs();\n    let t3 = if t2 != vars[4] {1} else {0};\n    if t1 == 1 &amp;&amp; t3 == 1 {return true} else {return false}\n}\n</code></pre>\n\n<p>I plan on having a pre-processor program:</p>\n\n<ol>\n<li>Read the input file.</li>\n<li>Auto-generate a module with all functions converted into Rust.</li>\n<li>Edit a module of the solver so that it uses the newly generated functions.</li>\n<li>Invoke the compiler.</li>\n<li>Run the newly compiled solver.</li>\n</ol>\n\n<p>Is there a better way to do this?</p>\n\n<p>Instead of having two programs can I write a single program that edits itself, invokes the compiler on itself, and schedules itself to be run after compilation is finished?</p>\n"}, {"tags": ["arrays", "struct", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497819184, "post_id": 44619400, "comment_id": 76224696, "body": "This one, among many others, emerge from the fact that arrays only implement certain traits for sizes up to 32, including <code>Default</code>."}, {"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497819475, "post_id": 44619400, "comment_id": 76224773, "body": "@E_net4 is there any way to do something like that then? Without heap allocation preferebly?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497822771, "post_id": 44619400, "comment_id": 76225544, "body": "<code>let mut new_field = [[LifeCell::default(); TOTAL_CELLS]; TOTAL_CELLS];</code>"}, {"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497829024, "post_id": 44619400, "comment_id": 76226938, "body": "@Shepmaster that does work, thank you! However, several problems arise afterwards with cloning that array and fitting it into another struct. Should I  ask another question or update this one?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497840110, "post_id": 44619400, "comment_id": 76228974, "body": "You can&#39;t clone the array <a href=\"https://stackoverflow.com/q/30415354/155423\">for the same reasons and with the same workaround</a>. I&#39;m not sure what you mean by &quot;fitting it into&quot;. However, I&#39;d encourage you to <i>not</i> try to put this on the stack. The 35-cell version takes up 9800 bytes! That&#39;s a pretty huge thing to have on the stack, passing as arguments, returning, etc. Instead, heap allocate it once and then just pass around slices to it (<code>&amp;[[Cell; LEN]; LEN]</code>). You could even use a single <code>Vec</code> of length <code>LEN</code> * <code>LEN</code> and abstract away the x/y mapping in a new type."}, {"owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497863448, "post_id": 44619400, "comment_id": 76238535, "body": "@Shepmaster Thank you! By &#39;fitting in&#39; I meant that that array was actually a part of another struct - which I couldn&#39;t create for the same reasons. But you are right, I should be using a single heap allocation anyway. Thanks again!"}], "owner": {"reputation": 5417, "user_id": 1823524, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/uScxd.jpg?s=128&g=1", "display_name": "Amomum", "link": "https://stackoverflow.com/users/1823524/amomum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1497822560, "answer_count": 0, "score": 0, "last_activity_date": 1497838237, "creation_date": 1497818948, "last_edit_date": 1497838222, "question_id": 44619400, "link": "https://stackoverflow.com/questions/44619400/making-an-array-of-structs-works-only-for-some-array-sizes", "closed_reason": "Duplicate", "title": "Making an array of structs works only for some array sizes", "body": "<p>I made a simple struct and implemented <code>Default</code> for it:</p>\n\n<pre><code>#[derive(Clone, Copy)]\nstruct LifeCell {\n    state: usize\n}\n\nimpl Default for LifeCell {\n    fn default() -&gt; LifeCell {\n        LifeCell {\n            state: 0\n        }\n    }\n}\n</code></pre>\n\n<p>I'm trying to create an array of such structs:</p>\n\n<pre><code>const TOTAL_CELLS: usize = 20;\nlet mut new_field: [[LifeCell; TOTAL_CELLS]; TOTAL_CELLS] = Default::default();\n</code></pre>\n\n<p>This compiles okay until I set <code>TOTAL_CELLS</code> to 35. Then it doesn't compile with an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `[[LifeCell; 35]; 35]: std::default::Default` is not satisfied\n  --&gt; src/main.rs:14:65\n   |\n14 |     let mut new_field: [[LifeCell; TOTAL_CELLS]; TOTAL_CELLS] = Default::default();\n   |                                                                 ^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `[[LifeCell; 35]; 35]`\n   |\n   = help: the following implementations were found:\n             &lt;&amp;'a [T] as std::default::Default&gt;\n             &lt;&amp;'a mut [T] as std::default::Default&gt;\n             &lt;[T; 32] as std::default::Default&gt;\n             &lt;[T; 31] as std::default::Default&gt;\n           and 31 others\n   = note: required by `std::default::Default::default`\n</code></pre>\n\n<p>I know the reason for it - at the moment, the <code>Default</code> trait is implemented only for array sizes up to 32. But what should I do if I need an array of structs that is bigger than that?</p>\n\n<p>I'm using Rust 1.18.0.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497798299, "post_id": 44614206, "comment_id": 76218860, "body": "Please review what a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is, why it&#39;s important, and how to create one. For example, your entire example can be <a href=\"https://play.integer32.com/?gist=00b2e53268e0527e43aade845148195b&amp;version=nightly\" rel=\"nofollow noreferrer\">boiled down to this</a>."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497852603, "post_id": 44614206, "comment_id": 76232247, "body": "Although it is not minimal, but my example is complete and verifiable. The reason that it is not minimal because I just figured this solid example before bed time yesterday, and don&#39;t want to too much time before the bed, but still want it to be seen by somebody else."}], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1497852882, "post_id": 44617149, "comment_id": 76232361, "body": "Thanks for the detailed and helpful answer. I have noticed that you use a different style on type constraints (I use inline style, you use <code>where</code> clause). Can you also include a brief explain why you think this is better?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1497873869, "post_id": 44617149, "comment_id": 76245635, "body": "@EarthEngine I find the where clause more readable and easier to extend, plus they are slightly more powerful. Type and lifetime parameters are often very short (single letters) and a lot are crammed in together. The where clause adds some whitespace, clearly identifies that there are constraints, they are easier to skim (I can check each line to see if it&#39;s relevant), when I need to add another I can change a line without extraneous diffs."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "edited": false, "score": 0, "creation_date": 1499086116, "post_id": 44617149, "comment_id": 76749967, "body": "I updated the question to simplified the example further. There have nothing to do with closures and the <code>FnXXX</code> traits."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1497803596, "creation_date": 1497803596, "answer_id": 44617149, "question_id": 44614206, "link": "https://stackoverflow.com/questions/44614206/why-is-a-reference-to-a-trait-implementing-the-fn-traits-not-callable/44617149#44617149", "title": "Why is a reference to a trait implementing the Fn traits not callable?", "body": "<p>After some discussion with a Rust developer, we believe that this is a bug of some kind. To that end, we've filed <a href=\"https://github.com/rust-lang/rust/issues/42736\" rel=\"nofollow noreferrer\">issue 42736</a>.</p>\n\n<p>A smaller example shows the problem to be separate from traits. It's actually any reference, not just traits:</p>\n\n<pre><code>#![feature(fn_traits)]\n#![feature(unboxed_closures)]\n\nstruct S;\n\nfn repro_ref(thing: &amp;S) {\n    thing();\n}\n\nimpl&lt;'a&gt; FnOnce&lt;()&gt; for &amp;'a S {\n    type Output = ();\n\n    extern \"rust-call\" fn call_once(self, _arg: ()) -&gt; () {}\n}\n\nfn main() {}\n</code></pre>\n\n<p>There is a workaround for this which is to take <em>another</em> reference:</p>\n\n<pre><code>fn ok_ref_ref(thing: &amp;S) {\n    (&amp;thing)();\n}\n</code></pre>\n\n<p>That doesn't fix the original example though:</p>\n\n<pre><code>fn y1&lt;T, F&gt;(f: &amp;F) -&gt; T\nwhere\n    F: Fn(T) -&gt; T,\n{\n    (&amp;|w: &amp;Mu&lt;T&gt;| (&amp;w)(w))(&amp;|w: &amp;Mu&lt;T&gt;| f((&amp;w)(w)))\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0059]: cannot use call notation; the first type parameter for the function trait is neither a tuple nor unit\n  --&gt; src/main.rs:41:19\n   |\n41 |     (&amp;|w: &amp;Mu&lt;T&gt;| (&amp;w)(w))(&amp;|w: &amp;Mu&lt;T&gt;| f((&amp;w)(w)))\n   |                   ^^^^^^^\n</code></pre>\n\n<p>That's because the original implementation of the <code>Fn*</code> traits isn't quite correct. The arguments are supposed to be a single tuple. Note the parenthesis and the trailing comma in <code>Fn&lt;(&amp;'a Mu&lt;T&gt;,)&gt;</code>.</p>\n\n<p>All together, this works:</p>\n\n<pre><code>#![feature(fn_traits)]\n#![feature(unboxed_closures)]\n\ntrait Mu&lt;T&gt; {\n    fn unroll(&amp;self, &amp;Mu&lt;T&gt;) -&gt; T;\n}\n\nimpl&lt;T, F&gt; Mu&lt;T&gt; for F\nwhere\n    F: Fn(&amp;Mu&lt;T&gt;) -&gt; T,\n{\n    fn unroll(&amp;self, o: &amp;Mu&lt;T&gt;) -&gt; T {\n        self(o)\n    }\n}\n\nimpl&lt;'a, T&gt; Fn&lt;(&amp;'a Mu&lt;T&gt;,)&gt; for &amp;'a Mu&lt;T&gt; {\n    extern \"rust-call\" fn call(&amp;self, o: (&amp;'a Mu&lt;T&gt;,)) -&gt; T {\n        self.unroll(o.0)\n    }\n}\n\nimpl&lt;'a, T&gt; FnMut&lt;(&amp;'a Mu&lt;T&gt;,)&gt; for &amp;'a Mu&lt;T&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, o: (&amp;'a Mu&lt;T&gt;,)) -&gt; T {\n        self.call(o)\n    }\n}\n\nimpl&lt;'a, T&gt; FnOnce&lt;(&amp;'a Mu&lt;T&gt;,)&gt; for &amp;'a Mu&lt;T&gt; {\n    type Output = T;\n    extern \"rust-call\" fn call_once(mut self, o: (&amp;'a Mu&lt;T&gt;,)) -&gt; T {\n        self.call_mut(o)\n    }\n}\n\nfn y1&lt;T, F&gt;(f: &amp;F) -&gt; T\nwhere\n    F: Fn(T) -&gt; T,\n{\n    (&amp;|w: &amp;Mu&lt;T&gt;| (&amp;w)(w))(&amp;|w: &amp;Mu&lt;T&gt;| f((&amp;w)(w)))\n}\n\nfn main() {}\n</code></pre>\n\n<p>I also delegated the calls from the <code>Fn*</code> traits to each other to avoid repetition of the implementation.</p>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1499222603, "creation_date": 1497782986, "last_edit_date": 1499110020, "question_id": 44614206, "link": "https://stackoverflow.com/questions/44614206/why-is-a-reference-to-a-trait-implementing-the-fn-traits-not-callable", "title": "Why is a reference to a trait implementing the Fn traits not callable?", "body": "<p>I found my own answer to <a href=\"https://stackoverflow.com/questions/44511030/how-to-implement-the-y-combinator-in-rust\">my own question</a> as the following</p>\n\n<pre><code>trait Mu&lt;T&gt; {\n    fn unroll(&amp;self, &amp;Mu&lt;T&gt;) -&gt; T;\n}\n\nimpl&lt;T, F:Fn(&amp;Mu&lt;T&gt;) -&gt; T&gt; Mu&lt;T&gt; for F {\n    fn unroll(&amp;self, o:&amp;Mu&lt;T&gt;) -&gt; T { self(o) }\n}\n\nfn y&lt;T, F:Fn(T) -&gt; T&gt;(f:&amp;F) -&gt; T {\n    (&amp;|w:&amp;Mu&lt;T&gt;| { w.unroll(w) }).unroll(&amp;|w:&amp;Mu&lt;T&gt;| { f(w.unroll(w)) })\n}\n</code></pre>\n\n<p>It compiles and fully answered the question. But to make it more pretty, I implemented <code>Fn</code> traits for <code>Mu&lt;T&gt;</code> as the following:</p>\n\n<pre><code>impl&lt;'a, T&gt; Fn&lt;&amp;'a Mu&lt;T&gt;&gt; for &amp;'a Mu&lt;T&gt; {\n    extern \"rust-call\" fn call(&amp;self, o: &amp;'a Mu&lt;T&gt;) -&gt; T {\n        self.unroll(o)\n    }\n}\n\nimpl&lt;'a, T&gt; FnMut&lt;&amp;'a Mu&lt;T&gt;&gt; for &amp;'a Mu&lt;T&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, o: &amp;'a Mu&lt;T&gt;) -&gt; T {\n        self.unroll(o)\n    }\n}\n\nimpl&lt;'a, T&gt; FnOnce&lt;&amp;'a Mu&lt;T&gt;&gt; for &amp;'a Mu&lt;T&gt; {\n    type Output = T;\n    extern \"rust-call\" fn call_once(self, o: &amp;'a Mu&lt;T&gt;) -&gt; T {\n        self.unroll(o)\n    }\n}\n</code></pre>\n\n<p>with features</p>\n\n<pre><code>#![feature(fn_traits)]\n#![feature(unboxed_closures)]\n</code></pre>\n\n<p>I wanted to write the y combinator as</p>\n\n<pre><code>fn y1&lt;T, F:Fn(T) -&gt; T&gt;(f:&amp;F) -&gt; T {\n    (&amp;|w:&amp;Mu&lt;T&gt;| { w(w) })(&amp;|w:&amp;Mu&lt;T&gt;| { f(w(w)) })\n}\n</code></pre>\n\n<p>but this does not compile. Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.19.0-nightly (78d8416ca 2017-06-17)\nerror[E0618]: expected function, found `&amp;Mu&lt;T&gt;`\n  --&gt; &lt;anon&gt;:36:20\n   |\n36 |     (&amp;|w:&amp;Mu&lt;T&gt;| { w(w) })(&amp;|w:&amp;Mu&lt;T&gt;| { f(w(w)) })\n   |                    ^^^^\n   |\nnote: defined here\n  --&gt; &lt;anon&gt;:36:8\n   |\n36 |     (&amp;|w:&amp;Mu&lt;T&gt;| { w(w) })(&amp;|w:&amp;Mu&lt;T&gt;| { f(w(w)) })\n   |        ^\n\nerror[E0618]: expected function, found `&amp;Mu&lt;T&gt;`\n  --&gt; &lt;anon&gt;:36:44\n   |\n36 |     (&amp;|w:&amp;Mu&lt;T&gt;| { w(w) })(&amp;|w:&amp;Mu&lt;T&gt;| { f(w(w)) })\n   |                                            ^^^^\n   |\nnote: defined here\n  --&gt; &lt;anon&gt;:36:30\n   |\n36 |     (&amp;|w:&amp;Mu&lt;T&gt;| { w(w) })(&amp;|w:&amp;Mu&lt;T&gt;| { f(w(w)) })\n   |                              ^\n</code></pre>\n\n<p>Why couldn't Rust figure out the given <code>Fn</code> implementation? Is there a way to improve this?</p>\n\n<p>Further attempts show it has nothing to do with those features, or even related to closures. Even the example Shepmaster shown in the answer is not minimal. A minimal example is something like the following:</p>\n\n<pre><code>trait T1 {}\n\ntrait T2 {}\n\nimpl&lt;'a&gt; T1 for &amp;'a T2 {}\n\nstruct S {}\n\nimpl T2 for S {}\n\nfn main() {\n    let t2: &amp;T2 = &amp;S {};\n    let t1: &amp;T1 = &amp;t2; //This is OK\n    let t3: &amp;T1 = t2; //E0308: Expecting `T1`, found `T2`\n}\n</code></pre>\n\n<p>The problem is we were trying to implement a trait for a trait object reference, then we need to add extra reference when converting the trait object into a trait object of the target trait.</p>\n"}, {"tags": ["arrays", "iterator", "find", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1497785564, "post_id": 44614412, "comment_id": 76215396, "body": "Const arrays actually exist in memory. <a href=\"https://play.rust-lang.org/?gist=023a4c4ea0cc8cac7a890bbd3a05d876&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">This code</a> works. The temporary value that gets dropped isn&#39;t array, it&#39;s array slice."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1497786576, "post_id": 44614412, "comment_id": 76215631, "body": "@red75prime: My understanding is that <i>that</i> behaviour is a special case where temporaries that are immediately borrowed are promoted, as that pattern is relatively common and would otherwise be more painful."}, {"owner": {"reputation": 1889, "user_id": 1036501, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/z8PwP.png?s=128&g=1", "display_name": "zstewart", "link": "https://stackoverflow.com/users/1036501/zstewart"}, "edited": false, "score": 0, "creation_date": 1497795941, "post_id": 44614412, "comment_id": 76218075, "body": "Another option is to use <code>static</code>, which actially does exist in memory and therefore can be borrowed normally."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1497784637, "creation_date": 1497784637, "answer_id": 44614412, "question_id": 44614193, "link": "https://stackoverflow.com/questions/44614193/iterator-find-temporary-value-dropped-while-still-borrowed/44614412#44614412", "title": "Iterator Find, Temporary Value Dropped While Still Borrowed", "body": "<p>The problem is in the specific way you're turning that array into an iterator.</p>\n\n<p>First of all, <code>const</code>s in Rust do not actually exist anywhere.  Instead, they're substituted by-value everywhere they're used.  So every time you use a constant, you're getting a new copy of it.</p>\n\n<p>Secondly, you're using <code>IntoIterator::into_iter</code>.  This takes the subject <em>by value</em> and converts it into an iterator.</p>\n\n<p>These combine with the third part: <code>IntoIterator</code> is <em>not</em> implemented for fixed-size arrays.  It's only implemented for <em>pointers</em> to fixed-size arrays.  So, in order to invoke <code>into_iter</code>, the compiler has to insert an automatic borrow of the invocant.</p>\n\n<p>So, what's actually happening is this:</p>\n\n<pre><code>let t = {\n    // Make a new copy of `VALUES`.\n    let values: [(char, &amp;str); 5] = VALUES;\n    // Borrow it.\n    let values: &amp;[_] = &amp;values;\n    // Call `into_iter` on the borrow.\n    IntoIterator::into_iter(values).find(|&amp;&amp;(name, _)| name == 'A')\n};\n</code></pre>\n\n<p>This causes problems because the compiler has to simultaneously copy <em>and</em> borrow <code>VALUES</code> in order to get an iterator.  Like all temporaries, said copy only lives as long as the statement, but the borrow (by being bound to a variable) has to live longer than that.</p>\n\n<p>The best solution is to make <code>VALUES</code> a <em>pointer</em> to the array.  This prevents copying the entire array; instead, you only copy the pointer on each use.</p>\n\n<pre><code>const VALUES: &amp;[(char, &amp;str)] = &amp;[...];\n</code></pre>\n\n<p>Alternately, you could explicitly make a copy of <code>VALUES</code> and store it in a variable, then use <code>into_iter</code> on <em>that</em>.  However, like before, this will introduce unnecessary copying.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1497796070, "creation_date": 1497796070, "answer_id": 44615997, "question_id": 44614193, "link": "https://stackoverflow.com/questions/44614193/iterator-find-temporary-value-dropped-while-still-borrowed/44615997#44615997", "title": "Iterator Find, Temporary Value Dropped While Still Borrowed", "body": "<p><a href=\"https://stackoverflow.com/a/44614412/155423\">DK.'s answer</a> is correct, but I'd suggest a simpler change to get your code to work \u2014 use <code>static</code> instead of <code>const</code>.</p>\n\n<p>From the <a href=\"https://doc.rust-lang.org/book/first-edition/const-and-static.html\" rel=\"nofollow noreferrer\">documentation about static and const</a>:</p>\n\n<blockquote>\n  <p>More specifically, constants in Rust have no fixed address in memory.</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>static items aren\u2019t inlined upon use. This means that there is only one instance for each value, and it\u2019s at a fixed location in memory.</p>\n</blockquote>\n\n<p>Switching to <code>static</code> allows you to get a memory address of the thing you are iterating over.</p>\n\n<pre><code>static VALUES: [(char, &amp;str); 2] = [('A', \"abc\"), ('B', \"acb\")];\n\nfn main() {\n    let result = VALUES.iter().find(|&amp;&amp;(name, _)| name == 'A');\n}\n</code></pre>\n\n<p>Here, <code>result</code> is an <code>Option&lt;&amp;(char, &amp;str)&gt;</code>.</p>\n"}], "owner": {"reputation": 1222, "user_id": 7152817, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b2b6ef3fc885710cadba2ae10136b473?s=128&d=identicon&r=PG&f=1", "display_name": "D. Ataro", "link": "https://stackoverflow.com/users/7152817/d-ataro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 564, "favorite_count": 0, "accepted_answer_id": 44614412, "answer_count": 2, "score": 0, "last_activity_date": 1497796070, "creation_date": 1497782850, "last_edit_date": 1497795727, "question_id": 44614193, "link": "https://stackoverflow.com/questions/44614193/iterator-find-temporary-value-dropped-while-still-borrowed", "title": "Iterator Find, Temporary Value Dropped While Still Borrowed", "body": "<p>I have an array defined in the form of a constant, outside any function:</p>\n\n<pre><code>const VALUES: [(char, &amp;str); 2] = [('A', \"abc\"), ('B', \"acb\")];\n</code></pre>\n\n<p>I'm attempting to use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\"><code>find()</code></a> method located on the <code>Iterator</code>, in order to extract a single element from an array based on a predicate:</p>\n\n<pre><code>VALUES.iter().find(|&amp;&amp;(name, _)| name == 'A');\n</code></pre>\n\n<p>In this form, it works fine. I am, however, unable to evaluate the found element into anything, as as soon as I attempt creating a <code>let</code> binding, trying to bind the result, which, according to the docs should come back as an <code>Option&lt;T&gt;</code>.</p>\n\n<p>Let's change the second line to that which doesn't work:</p>\n\n<pre><code>const VALUES: [(char, &amp;str); 2] = [('A', \"abc\"), ('B', \"acb\")];\n\nfn main() {\n    let result = VALUES.iter().find(|&amp;&amp;(name, _)| name == 'A');\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?code=const%20VALUES%3A%20%5B(char%2C%20%26str)%3B%202%5D%20%3D%20%5B(%27A%27%2C%20%22abc%22)%2C%20(%27B%27%2C%20%22acb%22)%5D%3B%0A%0Afn%20main()%0A%7B%0A%20%20%20%20let%20result%20%3D%20VALUES.iter().find(%7C%26%26(name%2C%20_)%7C%20name%20%3D%3D%20%27A%27)%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>One would expect this to return the <code>Option&lt;T&gt;</code> as according to the docs, but instead I get back a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n --&gt; src/main.rs:4:63\n  |\n4 |     let result = VALUES.iter().find(|&amp;&amp;(name, _)| name == 'A');\n  |                  ------ temporary value created here          ^ temporary value dropped here while still borrowed\n5 | }\n  | - temporary value needs to live until here\n  |\n  = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I'm utterly confused; I'm certain I've just messed up with the \"borrow checker\". Perhaps someone can point me in the right direction?</p>\n"}, {"tags": ["json", "rust", "deserialization", "serde"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 23, "last_activity_date": 1497795092, "last_edit_date": 1497795092, "creation_date": 1497745995, "answer_id": 44610705, "question_id": 44610594, "link": "https://stackoverflow.com/questions/44610594/how-can-i-deserialize-json-with-a-top-level-array-using-serde/44610705#44610705", "title": "How can I deserialize JSON with a top-level array using Serde?", "body": "<p>You can use a <code>Vec</code>:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse serde_json::Error;\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Foo {\n    data: String,\n}\n\nfn typed_example() -&gt; Result&lt;(), Error&gt; {\n    let data = r#\"[\n        {\n            \"data\": \"value1\"\n        },\n        {\n            \"data\": \"value2\"\n        },\n        {\n            \"data\": \"value3\"\n        }\n    ]\"#;\n\n    let array: Vec&lt;Foo&gt; = serde_json::from_str(data)?;\n\n    for elem in array.iter() {\n        println!(\"{:?}\", elem);\n    }\n    Ok(())\n}\n\nfn main() {\n    typed_example().unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 413, "user_id": 4766200, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tsKCi.jpg?s=128&g=1", "display_name": "Noskcaj", "link": "https://stackoverflow.com/users/4766200/noskcaj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7926, "favorite_count": 3, "accepted_answer_id": 44610705, "answer_count": 1, "score": 18, "last_activity_date": 1531939976, "creation_date": 1497744787, "last_edit_date": 1531939976, "question_id": 44610594, "link": "https://stackoverflow.com/questions/44610594/how-can-i-deserialize-json-with-a-top-level-array-using-serde", "title": "How can I deserialize JSON with a top-level array using Serde?", "body": "<p>I have a some JSON data that is returned from a web service. The JSON is a top-level array:</p>\n\n<pre><code>[\n    {\n        \"data\": \"value1\"\n    },\n    {\n        \"data\": \"value2\"\n    },\n    {\n        \"data\": \"value3\"\n    }\n]\n</code></pre>\n\n<p>Using <code>serde_derive</code> to make <code>struct</code>s I can can deserialize the data contained within the array, however, I am unable to get Serde to deserialize the top-level array.</p>\n\n<p>Am I missing something, or can Serde not deserialize top level-arrays?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 666, "user_id": 906268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b1b88c358cf457652b2147623fd0829?s=128&d=identicon&r=PG", "display_name": "Gabriel Ferrer", "link": "https://stackoverflow.com/users/906268/gabriel-ferrer"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1497739206, "post_id": 44609432, "comment_id": 76206765, "body": "The solution given in that problem does not work for my example. In that problem, the Split iterator was the return type. The FilterMap iterator requires a closure type parameter. This is a completely different problem."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497747778, "post_id": 44609432, "comment_id": 76208309, "body": "You should seriously consider renaming the question&#39;s title, since it heavily suggests being a duplicate of the one suggested above. You seem to have more of a &quot;cannot refer to a closure type&quot; problem."}, {"owner": {"reputation": 666, "user_id": 906268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b1b88c358cf457652b2147623fd0829?s=128&d=identicon&r=PG", "display_name": "Gabriel Ferrer", "link": "https://stackoverflow.com/users/906268/gabriel-ferrer"}, "edited": false, "score": 0, "creation_date": 1497749095, "post_id": 44609432, "comment_id": 76208542, "body": "Good suggestion, thanks! I have done so."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1497761482, "post_id": 44609432, "comment_id": 76210191, "body": "@GabrielFerrer, It is the same problem. Compiler do not infer return types of functions by looking at their code, so you must provide full return type yourself, but you can&#39;t do it, because type of closure is anonymous. Thus you need to resort to the methods in the answer I pointed to. Like <a href=\"https://play.rust-lang.org/?gist=711f21acb2437f661937cf538e0dbc6a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">boxed trait-object</a>, for example."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1497787649, "post_id": 44609432, "comment_id": 76215913, "body": "@red75prime: While the solution in the answer pointed works, it does <i>not</i> mention anything about closures and notably does not explain the crucial issue that while for iterators this is just sugar, for closures it is mandatory since they are Voldemort types."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497787751, "post_id": 44612715, "comment_id": 76215934, "body": "And another excellent answer! I wish to welcome you on the Rust tag, and I am looking forward to your future contributions! Regarding the point about &quot;anonymous&quot; types, the programming community seems to be converging on the term &quot;Voldemort types&quot; for such types that shall not be named (cannot, really)."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 3, "last_activity_date": 1497795317, "last_edit_date": 1497795317, "creation_date": 1497771191, "answer_id": 44612715, "question_id": 44609432, "link": "https://stackoverflow.com/questions/44609432/closure-in-the-return-type-for-a-rust-function/44612715#44612715", "title": "Closure in the return type for a Rust function", "body": "<p><code>impl Trait</code> and <code>Box&lt;Trait&gt;</code> solution can be applied to both iteratorsand closures, both of them are just traits! The difference is you <em>have to</em> use them in the closure case.</p>\n\n<p>If you want to use <code>impl Trait</code>, then your code will look like this (note that <code>Args</code> should be passed by value):</p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\nuse std::env::Args;\nuse std::env;\nuse std::iter::FilterMap;\n\nfn main() {\n    for i in nums(env::args()) {\n        println!(\"{}\", i);\n    }\n}\n\nfn nums(args: Args) -&gt; FilterMap&lt;Args, impl FnMut(String) -&gt; Option&lt;i32&gt;&gt; {\n    args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok())\n}\n</code></pre>\n\n<p>However, you usually need not expose the detail of the iterator type; therefore you can do it like this way:</p>\n\n<pre><code>fn nums(args: Args) -&gt; impl Iterator&lt;Item = i32&gt; {\n    args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok())\n}\n</code></pre>\n\n<p>What if you want to use stable Rust? Unfortunately you'll have to use boxing for now.</p>\n\n<pre><code>fn nums(args: Args) -&gt; Box&lt;Iterator&lt;Item = i32&gt;&gt; {\n    Box::new(args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok()))\n}\n</code></pre>\n\n<p>Why can't you describe a full type of closures, despite that you can describe an iterator like <code>Zip&lt;Drain&lt;'a, i32&gt;, IntoIter&lt;&amp;'b str&gt;&gt;</code>? There are two reasons:</p>\n\n<ul>\n<li>Closure types are anonymous by nature; you'll have to anonymize (<code>impl Fn()</code>) or box (<code>Box&lt;Fn()&gt;</code>) them if you want to return them.</li>\n<li>The interface for closure traits is unstable; you can't implement them (<code>impl Fn() for YourType { .. }</code>) stably.</li>\n</ul>\n\n<p>Then why doesn't your code work? The reason is:</p>\n\n<ul>\n<li>If you want to pass closures <em>to</em> a function, the <em>caller</em> decides its type. In this case you can write <code>fn foo&lt;T: Fn()&gt;() { .. }</code>.</li>\n<li>If you want to pass closures <em>from</em> a function, the <em>callee</em> decides its type. In this case you'll have to use <code>impl Trait</code>.</li>\n</ul>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md\" rel=\"nofollow noreferrer\">RFC 1951</a> will change this distinction. You will be able to use <code>impl Trait</code> in both cases.</p>\n"}], "owner": {"reputation": 666, "user_id": 906268, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b1b88c358cf457652b2147623fd0829?s=128&d=identicon&r=PG", "display_name": "Gabriel Ferrer", "link": "https://stackoverflow.com/users/906268/gabriel-ferrer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1668, "favorite_count": 0, "closed_date": 1497795161, "accepted_answer_id": 44612715, "answer_count": 1, "score": 3, "last_activity_date": 1497795317, "creation_date": 1497734003, "last_edit_date": 1497749083, "question_id": 44609432, "link": "https://stackoverflow.com/questions/44609432/closure-in-the-return-type-for-a-rust-function", "closed_reason": "Duplicate", "title": "Closure in the return type for a Rust function", "body": "<p>I wrote the following Rust program to print out only command-line arguments that are integers. It works perfectly:</p>\n\n<pre><code>use std::env;\nfn main() {\n    for i in env::args().filter_map(|arg| arg.parse::&lt;i32&gt;().ok()) {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n\n<p>I then attempted to re-write the program to abstract the filter into a function. This version does not compile.</p>\n\n<pre><code>use std::env::Args;\nuse std::env;\nuse std::iter::FilterMap;\n// Version 2\nfn main() {\n    for i in nums(&amp;env::args()) {\n        println!(\"{}\", i);\n    }\n}\n\nfn nums&lt;F: Fn(String) -&gt; Option&lt;i32&gt;&gt;(args: &amp;Args) -&gt; FilterMap&lt;Args,F&gt; {\n    args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok())\n}\n</code></pre>\n\n<p>It produces the following compilation errors:</p>\n\n<pre><code>   Compiling iterator_return_type v0.1.0 (file:///Users/gabriel/AllProjects/SentimentAnalysis/iterator_return_type)\nerror[E0282]: type annotations needed\n  --&gt; src/main.rs:16:9\n   |\n16 |     for i in nums(&amp;env::args()) {\n   |         ^ cannot infer type for `_`\n\nerror: the type of this value must be known in this context\n  --&gt; src/main.rs:22:27\n   |\n22 |     args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok())\n   |                           ^^^^^^^^^^^^^^^^^^\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:22:21\n   |\n22 |     args.filter_map(|arg| arg.parse::&lt;i32&gt;().ok())\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected type parameter, found closure\n   |\n   = note: expected type `F`\n              found type `[closure@src/main.rs:22:21: 22:50]`\n\nerror: aborting due to previous error(s)\n\nerror: Could not compile `iterator_return_type`.\n</code></pre>\n\n<p>What I find particularly confusing is the final compilation error. I do not understand how else I might specify a closure type.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497721297, "post_id": 44607467, "comment_id": 76201985, "body": "Rust favors DAG dependencies, but here you have a cycle between <code>Container</code> and <code>Element</code> (they both know about each other), which is where your problems start. In general, Rust frowns at &quot;dodgy logic&quot;. For example, in your case, do you obtain in C# the same result if you modify the elements by iterating forward and backward? Is it intended that the order of iteration may modify the result of this update?"}, {"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497722019, "post_id": 44607467, "comment_id": 76202205, "body": "If I understood it correctly, yes. It&#39;s entirely possible, and expected, that the order in which those elements are updated might influence the final result. The goal, in the end (which is a long way from now) is to find out which order of operations yield the best result. When doing the update, I need at some point check the state of the other elements. You did give me an idea, though: I&#39;ll try and first do it in C# properly, and then rewrite it in rust. The problem itself, aside Rust, is also completely new to me."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497722109, "post_id": 44607467, "comment_id": 76202234, "body": "Ah, that&#39;s too bad, because if the problem requires being independent of iteration order, it&#39;s likely that you&#39;ll need two vectors (one with the current state, one being updated) which would neatly solve your issues here ;)"}, {"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497722162, "post_id": 44607467, "comment_id": 76202251, "body": "So I&#39;ll need to make some copies, then?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497722368, "post_id": 44607467, "comment_id": 76202320, "body": "My idea was that if you could (1) copy the current vector, then (2) iterate mutably over the copy while using the container, then it would work like a charm. It all depends whether this fits your problem or not..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497796483, "post_id": 44607467, "comment_id": 76218234, "body": "Could you please take some time and write, <i>in prose</i>, what the code is supposed to do? 4 of your 5 paragraphs of text consist mostly of self-flagellation and don&#39;t really help anyone understand the problem. Having a clear, concise description of the problem you are trying to solve would go a long way!"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512395832, "post_id": 47634325, "comment_id": 82227688, "body": "Rust style is <code>snake_case</code> for variables and field names. <i>compiled with opt-level=3</i> \u2014 It&#39;s easier to just do <code>cargo build --release</code>."}, {"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512408069, "post_id": 47634325, "comment_id": 82235550, "body": "Thanks for the tip. Yeah the actual code follows snake_case, I typed it off the top of my head. As for the <code>cargo build --release</code>, does it run on opt-level=3? I just checked and it seems that there are many nuances surrounding --release and the different levels of optimization (<a href=\"https://internals.rust-lang.org/t/default-opt-level-for-release-builds/4581\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/default-opt-level-for-release-bui&zwnj;&#8203;lds/&hellip;</a>)"}], "tags": [], "owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "is_accepted": true, "score": 0, "last_activity_date": 1512407863, "last_edit_date": 1512407863, "creation_date": 1512393595, "answer_id": 47634325, "question_id": 44607467, "link": "https://stackoverflow.com/questions/44607467/correct-way-to-implement-container-element-relationship-in-idiomatic-rust/47634325#47634325", "title": "Correct way to implement container-element relationship in idiomatic Rust", "body": "<p>I came across this question: \n<a href=\"https://stackoverflow.com/questions/29414171/whats-the-rust-way-to-modify-a-structure-within-nested-loops\">What&#39;s the Rust way to modify a structure within nested loops?</a> which gave me insight into my problem.</p>\n\n<p>I revisited the problem and boiled the problem down to the sharing of the vector by borrowing for writes and reads at the same time. This is just forbidden by Rust. I don't want to circumvent the borrow checker using <code>unsafe</code>. I was wondering, though, how much data should I copy?</p>\n\n<p>My <code>Element</code>, which in reality is the entity of a game (I'm simulating a clicker game) has both mutable and immutable properties, which I broke apart.</p>\n\n<pre><code>struct Entity {\n    type: EntityType,\n    starting_price: f64, \n    ...\n    ...\n    status: Cell&lt;EntityStatus&gt;\n}\n</code></pre>\n\n<p>Every time I need to change the status of an entity, I need to call <code>get</code> and <code>set</code> methods on the <code>status</code> field. <code>EntityStatus</code> derives <code>Clone, Copy</code>.</p>\n\n<p>I could even put the fields directly on the struct and have them all be <code>Cell</code>s but then it would be cumbersome to work with them (lots of calls to <code>get</code> and <code>set</code>), so I went for the more aesthetically pleasant approach.</p>\n\n<p>By allowing myself to copy the <code>status</code>, edit and <code>set</code> it back, I could borrow the array immutably twice (<code>.iter()</code> instead of <code>.iter_mut()</code>).</p>\n\n<p>I was afraid that the performance would be bad due to the copying, but in reality it was pretty good once I compiled with <code>opt-level=3</code>. If it gets problematic, I might change the fields to be <code>Cell</code>s or come up with another approach. </p>\n"}], "owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 47634325, "answer_count": 1, "score": 1, "last_activity_date": 1512407863, "creation_date": 1497720774, "last_edit_date": 1497796339, "question_id": 44607467, "link": "https://stackoverflow.com/questions/44607467/correct-way-to-implement-container-element-relationship-in-idiomatic-rust", "title": "Correct way to implement container-element relationship in idiomatic Rust", "body": "<p>I know why Rust doesn't like my code. However, I don't know what would be the idiomatic Rust approach to the problem.</p>\n\n<p>I'm a C# programmer, and while I feel I understand Rust's system, I think my \"old\" approach to some problems don't work in Rust at all.</p>\n\n<p>This code reproduces the problem I'm having, and it probably doesn't look like idiomatic Rust (or maybe it doesn't even look good in C# as well):</p>\n\n<pre><code>//a \"global\" container for the elements and some extra data\nstruct Container {\n    elements: Vec&lt;Element&gt;,\n    global_contextual_data: i32,\n    //... more contextual data fields\n}\n\nimpl Container {\n   //this just calculates whatever I need based on the contextual data\n   fn calculate_contextual_data(&amp;self) -&gt; i32 {\n       //This function will end up using the elements vector and the other fields as well, \n       //and will do some wacky maths with it. \n       //That's why I currently have the elements stored in the container\n   }\n}\n\nstruct Element {\n    element_data: i32,\n    //other fields\n}\n\nimpl Element {\n    //I need to take a mutable reference to update element_data, \n    //and a reference to the container to calculate something that needs \n    //this global contextual data... including the other elements, as previously stated\n    fn update_element_data(&amp;mut self, some_data: i32, container: &amp;Container) {\n        self.element_data *= some_data + container.calculate_contextual_data() //do whatever maths I need\n    }\n}\n\n\nfn main(){\n\n    //let it be mutable so I can assign the elements later\n    let mut container = Container {\n        elements: vec![],\n        global_contextual_data: 1\n    };\n\n    //build a vector of elements\n    let elements = vec![\n        Element {\n            element_data: 5\n        },\n        Element {\n            element_data: 7\n        }\n    ];\n\n    //this works\n    container.elements = elements;\n\n    //and this works, but container is now borrowed as mutable\n    for elem in container.elements.iter_mut() {\n        elem.element_data += 1; //and while this works\n        let some_data = 2;\n\n        //i can't borrow it as immutable here and pass to the other function\n        elem.update_element_data(some_data, &amp;container); \n    }\n}\n</code></pre>\n\n<p>I understand why <code>elem.update_element_data(some_data, &amp;container);</code> won't work: I'm already borrowing it as mutable when I call <code>iter_mut</code>. Maybe each element should have a reference to the container? But then wouldn't I have more opportunities to break at borrow-checking?</p>\n\n<p>I don't think it's possible to bring my old approach to this new system. Maybe I need to rewrite the whole thing. Can someone point me to the right direction? I've just started programming in Rust, and while the ownership system is making some sort of sense to me, the code I should write \"around\" it is still not that clear.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497797343, "post_id": 44603577, "comment_id": 76218527, "body": "See also <a href=\"https://stackoverflow.com/q/42296153/155423\">Shared ownership of an str between a HashMap and a Vec</a>, <a href=\"https://stackoverflow.com/q/43460483/155423\">How do I efficiently build a vector and an index of that vector while processing a data stream?</a>,"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497797439, "post_id": 44613588, "comment_id": 76218559, "body": "<i>share ownership</i> \u2014 it&#39;s probably worth being explicit and thoroughly explaining the problem with ownership and the original attempted solution. Otherwise OP is no better off the <i>next</i> time this problem strikes them."}, {"owner": {"reputation": 1264, "user_id": 1292666, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/7zWgm.png?s=128&g=1", "display_name": "Maximilian Schier", "link": "https://stackoverflow.com/users/1292666/maximilian-schier"}, "edited": false, "score": 0, "creation_date": 1497809690, "post_id": 44613588, "comment_id": 76222015, "body": "With the reference counter the rest of the implementation was easy. With the shared pointes I can probably eliminate the vec completely."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497847920, "post_id": 44613588, "comment_id": 76230592, "body": "@Shepmaster, you are right. I improved the answer. <i>share</i> <i>ownership</i> weren&#39;t the keywords I should have used. They were <i>interior</i> <i>mutability</i>."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 1, "last_activity_date": 1497847736, "last_edit_date": 1497847736, "creation_date": 1497778060, "answer_id": 44613588, "question_id": 44603577, "link": "https://stackoverflow.com/questions/44603577/how-to-back-a-hashmap-with-a-vec/44613588#44613588", "title": "How to back a HashMap with a Vec", "body": "<p>I suppose it is easier to use other type of backing storage (<code>TypedArena</code> from <a href=\"https://crates.io/crates/typed-arena/1.3.0\" rel=\"nofollow noreferrer\">typed-arena crate</a>, for example). </p>\n\n<p>But taking the question at face value, the problem you are dealing with is caused by <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">Rust borrowing rules</a>. That is you can't have shared (<code>&amp;</code>) and mutable (<code>&amp;mut</code>) references or multiple mutable references to the same object in the same scope. </p>\n\n<p><code>hash_map</code> in your example holds shared references to the vector, \"freezing\" it, which makes it impossible to modify the vector while <code>hash_map</code> is in the scope.</p>\n\n<p>Solution to this problem is <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-05-interior-mutability.html#refcellt-and-the-interior-mutability-pattern\" rel=\"nofollow noreferrer\">interior mutability pattern</a>.</p>\n\n<p>In your case, you can use <code>RefCell&lt;Vec&lt;T&gt;&gt;</code> to be able to modify vector while holding multiple references to it.</p>\n\n<pre><code>use std::cell::RefCell;\n\ntype RVec&lt;T&gt; = RefCell&lt;Vec&lt;T&gt;&gt;;\n\nstruct BackedHashWrapper&lt;'a, T: 'a + Hash + Eq&gt; {\n    source: &amp;'a RVec&lt;T&gt;,\n    index: usize,\n}\n\n...\nimpl&lt;'a, T&gt; Hash for BackedHashWrapper&lt;'a, T&gt;\nwhere\n    T: Eq + Hash,\n{\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: Hasher,\n    {\n        self.source.borrow()[self.index].hash(state);\n    }\n}\n...\n// Similar changes for Eq and PartialEq\n...\nlet mut old_nodes: RVec&lt;_&gt; = RefCell::default();\nlet mut hash_map = HashMap::new();\n...\n\n    ...\n    hash_map.insert(BackedHashWrapper {source: &amp;old_nodes, index: last_node_index}, current_node.cost);\n    old_nodes.borrow_mut().push(current_node);\n    last_node_index += 1;\n    ...\n</code></pre>\n\n<p>Maybe a couple of <code>borrow()</code>s and <code>borrow_mut()</code>s will be required in other places.</p>\n"}], "owner": {"reputation": 1264, "user_id": 1292666, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/7zWgm.png?s=128&g=1", "display_name": "Maximilian Schier", "link": "https://stackoverflow.com/users/1292666/maximilian-schier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "accepted_answer_id": 44613588, "answer_count": 1, "score": 0, "last_activity_date": 1497847736, "creation_date": 1497695839, "last_edit_date": 1497709696, "question_id": 44603577, "link": "https://stackoverflow.com/questions/44603577/how-to-back-a-hashmap-with-a-vec", "title": "How to back a HashMap with a Vec", "body": "<p>I tried implementing a generic A* tree search algorithm. The important part is in the function <code>hucs</code> marked with a TODO:</p>\n\n<pre><code>use std::collections::BinaryHeap;\nuse std::collections::HashMap;\nuse std::cmp::Ordering;\n\npub trait SearchTree&lt;A&gt; {\n    fn available_actions(&amp;self) -&gt; Vec&lt;A&gt;;\n    fn apply_action(&amp;self, act: &amp;A) -&gt; Self;\n}\n\npub trait CostSearchTree&lt;A&gt;: SearchTree&lt;A&gt; + Eq {\n    fn action_cost(&amp;self, act: &amp;A) -&gt; f64;\n}\n\n/// Node in the expanded search tree for uniform cost search with heuristic\nstruct HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt;,\n{\n    cost: f64,\n    heuristic_cost: f64,\n    parent_index: usize,\n    action: Option&lt;A&gt;,\n    tree: T,\n}\n\nimpl&lt;A, T&gt; PartialEq for HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt;,\n{\n    fn eq(&amp;self, other: &amp;HucsNode&lt;A, T&gt;) -&gt; bool {\n        // Can be used for closed list checking if we just compare the trees\n        return self.tree == other.tree;\n    }\n}\n\nimpl&lt;A, T&gt; Eq for HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt;,\n{\n}\n\nimpl&lt;A, T&gt; PartialOrd for HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt;,\n{\n    fn partial_cmp(&amp;self, other: &amp;HucsNode&lt;A, T&gt;) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(other))\n    }\n}\n\nimpl&lt;A, T&gt; Ord for HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt;,\n{\n    fn cmp(&amp;self, other: &amp;HucsNode&lt;A, T&gt;) -&gt; Ordering {\n        let self_cost = self.cost + self.heuristic_cost;\n        let other_cost = other.cost + other.heuristic_cost;\n\n        // Flip for min-heap\n        match other_cost.partial_cmp(&amp;self_cost) {\n            Some(order) =&gt; order,\n            _ =&gt; Ordering::Equal,\n        }\n    }\n}\n\n/// Perform a uniform cost search with a monotonous heuristic function on a search tree.\n/// Returns a sequence of actions if a state is found that satisfies the predicate or None if the search terminates before.\npub fn hucs&lt;A, T: CostSearchTree&lt;A&gt; + Hash&gt;(\n    tree: T,\n    predicate: &amp;Fn(&amp;T) -&gt; bool,\n    heuristic: &amp;Fn(&amp;T) -&gt; f64,\n) -&gt; Option&lt;Vec&lt;A&gt;&gt; {\n\n    let mut node_heap = BinaryHeap::new() as BinaryHeap&lt;HucsNode&lt;A, T&gt;&gt;;\n\n    // Push the initial node onto the tree\n    node_heap.push(HucsNode {\n        action: None,\n        parent_index: usize::max_value(),\n        cost: 0.0,\n        heuristic_cost: heuristic(&amp;tree),\n        tree: tree,\n    });\n\n    let mut old_nodes = Vec::new();\n    let mut last_node_index = 0 as usize;\n\n    'outer: while let Some(current_node) = node_heap.pop() {\n        // Break borrows with scope so current_node can be moved out\n        {\n            if predicate(&amp;current_node.tree) {\n                return Some(form_action_sequence(current_node, old_nodes));\n            }\n\n            // Check if visited nodes already contains this tree with less cost\n            // TODO: Time complexity is hardly ideal\n            for old_node in old_nodes.iter() {\n                if old_node.tree == current_node.tree &amp;&amp; old_node.cost &lt;= current_node.cost {\n                    continue 'outer;\n                }\n            }\n\n            let ref current_tree = current_node.tree;\n\n            for action in current_tree.available_actions() {\n\n                let action_cost = current_tree.action_cost(&amp;action);\n                let new_tree = current_tree.apply_action(&amp;action);\n                let new_cost = current_node.cost + action_cost;\n\n                let new_node = HucsNode {\n                    action: Some(action),\n                    cost: new_cost,\n                    parent_index: last_node_index,\n                    heuristic_cost: heuristic(&amp;new_tree),\n                    tree: new_tree,\n                };\n\n                node_heap.push(new_node);\n            }\n        }\n\n        old_nodes.push(current_node);\n        last_node_index += 1;\n    }\n\n    return None;\n}\n\n/// Restore the sequence of actions that was used to get to this node by climbing the tree of expanded nodes\nfn form_action_sequence&lt;A, T: CostSearchTree&lt;A&gt;&gt;(\n    leaf: HucsNode&lt;A, T&gt;,\n    mut older_nodes: Vec&lt;HucsNode&lt;A, T&gt;&gt;,\n) -&gt; Vec&lt;A&gt; {\n\n    let mut action_vector = Vec::new();\n\n    let mut current = leaf;\n\n    while let Some(action) = current.action {\n        action_vector.insert(0, action);\n\n        // Safe to swap as nodes' parents are always before them\n        current = older_nodes.swap_remove(current.parent_index);\n    }\n\n    return action_vector;\n}\n</code></pre>\n\n<p>The problem is that looking up whether the current node was in the old nodes by scanning over the old nodes takes way too long. Therefore I wanted to add a <code>HashMap</code>. Since I however also need to be able to access the old nodes by indices to form the solution action sequence at the end, I also need to keep the <code>Vec</code>. To solve this I tried adding a wrapper that I can insert into the <code>HashMap</code> as a key that just looks up its content in the Vec like this:</p>\n\n<pre><code>use std::hash::Hash;\nuse std::hash::Hasher;\n\nstruct BackedHashWrapper&lt;'a, T: 'a + Hash + Eq&gt; {\n    source: &amp;'a Vec&lt;T&gt;,\n    index: usize,\n}\n\nimpl&lt;A, T&gt; Hash for HucsNode&lt;A, T&gt;\nwhere\n    T: CostSearchTree&lt;A&gt; + Hash,\n{\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: Hasher,\n    {\n        self.tree.hash(state);\n    }\n}\n\nimpl&lt;'a, T&gt; Hash for BackedHashWrapper&lt;'a, T&gt;\nwhere\n    T: Eq + Hash,\n{\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: Hasher,\n    {\n        self.source[self.index].hash(state);\n    }\n}\n\nimpl&lt;'a, T&gt; PartialEq for BackedHashWrapper&lt;'a, T&gt;\nwhere\n    T: Eq + Hash,\n{\n    fn eq(&amp;self, other: &amp;BackedHashWrapper&lt;T&gt;) -&gt; bool {\n        self.source[self.index] == other.source[other.index]\n    }\n}\n\nimpl&lt;'a, T&gt; Eq for BackedHashWrapper&lt;'a, T&gt;\nwhere\n    T: Eq + Hash,\n{\n}\n</code></pre>\n\n<p>I cannot figure out how to implement this in the <code>hucs</code> method, I tried the following just for adding elements to the hashmap</p>\n\n<pre><code>...\nlet mut old_nodes = Vec::new();\nlet mut hash_map = HashMap::new();\n...\n\n    ...\n    hash_map.insert(BackedHashWrapper {source: &amp;old_nodes, index: last_node_index}, current_node.cost);\n    old_nodes.push(current_node);\n    last_node_index += 1;\n    ...\n</code></pre>\n\n<p>but the borrow checker will not allow me to create such a <code>BackedHashWrapper</code> while the source vector is mutable. Clearly I am doing this completely the wrong way, so how could I accomplish this without having to clone either the tree or any actions?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497709109, "post_id": 44601114, "comment_id": 76198304, "body": "You don&#39;t  have to explicitly return <code>()</code>; I&#39;ve removed that while reformatting the code to Rust standards and so that it fits in the SO interface better."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497710376, "post_id": 44601114, "comment_id": 76198644, "body": "Also, I&#39;d say that <code>a.chain(b).chain(c).chain(d)</code> is easier to read than the nested variant."}, {"owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497721947, "post_id": 44601114, "comment_id": 76202178, "body": "@Shepmaster no offense, but your code style choices I cringe at.  I never use four spaces when I can use two, and I never start lines with a period.  Also I prefer indentation in assignment to stay to the right of the equals or just have the whole thing dropped down via a backslash after the equals.  So I&#39;m very uncomfortable with the way this question looks.  But thanks for the tip on <code>()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497722643, "post_id": 44601114, "comment_id": 76202419, "body": "They aren&#39;t my coding styles <i>per se</i>. They are the standard style as codified in <a href=\"https://github.com/rust-lang-nursery/rustfmt\" rel=\"nofollow noreferrer\">rustfmt</a>. I&#39;m still not used to some of the recent changes myself, but I feel it&#39;s more important to confirm to the community&#39;s will to optimize code reading here in Stack Overflow so I run it on basically everything by default. You are always welcome to rollback or edit of course."}], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1497692270, "post_id": 44601136, "comment_id": 76193318, "body": "That is inaccurate: you were creating a new iterator chain in the first version, not a new collection. Since the obtained chain can only be consumed once, the second example fails once you try to take more than one element (because of <code>nth()</code>)"}], "tags": [], "owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "is_accepted": false, "score": 1, "last_activity_date": 1497677446, "creation_date": 1497677446, "answer_id": 44601136, "question_id": 44601114, "link": "https://stackoverflow.com/questions/44601114/different-behavior-between-chain-iterator-in-println-and-from-variable/44601136#44601136", "title": "Different behavior between chain iterator in println! and from variable", "body": "<p>I figured it out.  The for loop is creating a new collection each time in the working example so <code>nth</code> is always referenced from the beginning.  Iterators are consumed via the <code>next</code> method so the failing version changes its reference point each <code>nth</code> call.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497709402, "post_id": 44603156, "comment_id": 76198384, "body": "I&#39;d still advocate for storing the iterator in a temporary variable. I hate the way multiline expressions look in a <code>for</code> expression. <a href=\"https://play.integer32.com/?gist=d334f88e1f35f73bde7767de7e37c26b&amp;version=stable\" rel=\"nofollow noreferrer\">An example of such</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497710031, "post_id": 44603156, "comment_id": 76198549, "body": "@Shepmaster: I&#39;m ambivalent. I lack avoiding &quot;residual&quot; variables in scope, as accidentally reusing them is a sure way of introducing bugs, but... yeah... doesn&#39;t look too good as is here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497710136, "post_id": 44603156, "comment_id": 76198579, "body": "But how will you reuse the variable if the ownership of it has been transferred to the <code>for</code> loop? ^_^"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497720891, "post_id": 44603156, "comment_id": 76201843, "body": "@Shepmaster: Ah! Hadn&#39;t thought of that. Wish more languages had Affine Types :("}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1497720948, "last_edit_date": 1497720948, "creation_date": 1497693148, "answer_id": 44603156, "question_id": 44601114, "link": "https://stackoverflow.com/questions/44601114/different-behavior-between-chain-iterator-in-println-and-from-variable/44603156#44603156", "title": "Different behavior between chain iterator in println! and from variable", "body": "<p>This is, essentially, the difference between <em>an iterator</em> and <em>a collection</em>.</p>\n\n<p>An iterator will <em>iterate</em> over a sequence of elements, <em>never yielding the same element twice</em> (although it may yield equal elements).</p>\n\n<p>A collection is inert, and can be iterated over multiple times as long as you iterate <em>by reference</em> (using <code>into_iter</code> will generally consume the collection, emptying it).</p>\n\n<hr>\n\n<p>What this means is that:</p>\n\n<pre><code>fn main() {\n    for x in 0..95 {\n        println!(\n            \"{}\",\n            ASCII_LOWERCASE\n                .into_iter()\n                .chain(ASCII_UPPERCASE.into_iter().chain(\n                    ASCII_NUMERIC.into_iter().chain(\n                        ASCII_SYMBOLS.into_iter(),\n                    ),\n                ))\n                .nth(x)\n                .unwrap()\n        );\n    }\n}\n</code></pre>\n\n<p>Will, 95 times, create an iterator chain and reach for the <code>x</code> element. This has complexity <strong>O(N<sup>2</sup>)</strong>.</p>\n\n<hr>\n\n<p>On the other hand:</p>\n\n<pre><code>fn main() {\n    let mut ascii = ASCII_LOWERCASE.into_iter().chain(\n        ASCII_UPPERCASE.into_iter().chain(\n            ASCII_NUMERIC.into_iter().chain(\n                ASCII_SYMBOLS.into_iter(),\n            ),\n        ),\n    );\n\n    for x in 0..95 {\n        println!(\"{}\", ascii.nth(x).unwrap());\n    }\n}\n</code></pre>\n\n<p>Will create an iterator once, then ask for the 0th element, then the 1st <em>remaining</em> element, then the 2nd <em>remaining</em> element.</p>\n\n<p>The clue is in the <code>mut</code> keyword: the iterator is mutated (advances) each time you call <code>nth</code>, and you never \"rewind it\" in between loop iterations.</p>\n\n<hr>\n\n<p>And finally:</p>\n\n<pre><code>fn main() {\n    let ascii: Vec&lt;&amp;char&gt; = ASCII_LOWERCASE\n        .into_iter()\n        .chain(ASCII_UPPERCASE.into_iter().chain(\n            ASCII_NUMERIC.into_iter().chain(\n                ASCII_SYMBOLS.into_iter(),\n            ),\n        ))\n        .collect();\n\n    for x in 0..95 {\n        println!(\"{}\", ascii[x]);\n    }\n}\n</code></pre>\n\n<p>Will create a <em>collection</em> once, and then index into that collection.</p>\n\n<p>Note that you didn't need <code>mut</code> in front of the collection because it's not mutated.</p>\n\n<hr>\n\n<p>The proper way, however, is to stop using indices. An iterator already iterates over a sequence of element, so you can just use that directly:</p>\n\n<pre><code>fn main() {\n    let ascii = ASCII_LOWERCASE.iter().chain(\n        ASCII_UPPERCASE.iter().chain(\n            ASCII_NUMERIC.iter().chain(ASCII_SYMBOLS.iter())\n        )\n    );\n\n    for x in ascii {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2105, "user_id": 1500195, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/Tc5kv.png?s=128&g=1", "display_name": "6ft Dan", "link": "https://stackoverflow.com/users/1500195/6ft-dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1497720948, "creation_date": 1497677214, "last_edit_date": 1497709063, "question_id": 44601114, "link": "https://stackoverflow.com/questions/44601114/different-behavior-between-chain-iterator-in-println-and-from-variable", "title": "Different behavior between chain iterator in println! and from variable", "body": "<p>Why does the <code>println!</code> inlined code work in these examples and not the mutable variable?</p>\n\n<p>I've predefined some constants:</p>\n\n<pre><code>static ASCII_LOWERCASE: [char; 26] = [\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n];\nstatic ASCII_UPPERCASE: [char; 26] = [\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n];\nstatic ASCII_NUMERIC: [char; 10] = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'\n];\nstatic ASCII_SYMBOLS: [char; 33] = [\n    '!', '@', '#', '$', '%', '^', '&amp;', '*', '(', ')', '-',\n    '_', '+', '=', '~', '`', '[', ']', '{', '}', '|', '\\\\',\n    ':', ';', '\"', '\\'', '&lt;', '&gt;', ',', '.', '?', '/', ' ',\n];\n</code></pre>\n\n<p>This works and prints 95 characters:</p>\n\n<pre><code>fn main() {\n    for x in 0..95 {\n        println!(\n            \"{}\",\n            ASCII_LOWERCASE\n                .into_iter()\n                .chain(ASCII_UPPERCASE.into_iter().chain(\n                    ASCII_NUMERIC.into_iter().chain(\n                        ASCII_SYMBOLS.into_iter(),\n                    ),\n                ))\n                .nth(x)\n                .unwrap()\n        );\n    }\n}\n</code></pre>\n\n<p>This only prints 13 characters and panics:</p>\n\n<pre><code>fn main() {\n    let mut ascii = ASCII_LOWERCASE.into_iter().chain(\n        ASCII_UPPERCASE.into_iter().chain(\n            ASCII_NUMERIC.into_iter().chain(\n                ASCII_SYMBOLS.into_iter(),\n            ),\n        ),\n    );\n\n    for x in 0..95 {\n        println!(\"{}\", ascii.nth(x).unwrap());\n    }\n}\n</code></pre>\n\n<p>The failing output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a\nc\nf\nj\no\nu\nB\nJ\nS\n2\n$\n`\n,\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', /checkout/src/libcore/option.rs:335\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>The failing result is skipping most of the characters even though the same method is being called on the same iterator. Why is it doing that?</p>\n\n<p>To get it to work the way I wanted I had to do:</p>\n\n<pre><code>fn main() {\n    let ascii: Vec&lt;&amp;char&gt; = ASCII_LOWERCASE\n        .into_iter()\n        .chain(ASCII_UPPERCASE.into_iter().chain(\n            ASCII_NUMERIC.into_iter().chain(\n                ASCII_SYMBOLS.into_iter(),\n            ),\n        ))\n        .collect();\n\n    for x in 0..95 {\n        println!(\"{}\", ascii[x]);\n    }\n}\n</code></pre>\n\n<p>Why does the failing version behave differently?</p>\n"}, {"tags": ["rust", "specialization"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 7, "last_activity_date": 1497673809, "creation_date": 1497673809, "answer_id": 44600777, "question_id": 44600646, "link": "https://stackoverflow.com/questions/44600646/how-does-trait-specialization-actually-work/44600777#44600777", "title": "How does trait specialization actually work?", "body": "<p>Specialization is not yet stabilized. You need to use nightly build of Rust and enable specialization by adding <code>#![feature(specialization)]</code> in the first line.</p>\n\n<p>Then you'll need to fix two minor errors in your code (private <code>inner</code> field and lack of <code>use swimming::Swimmer;</code>), but that is straightforward.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d5f3f086032aaa035e4f8162bd4df106&amp;version=nightly&amp;backtrace=0\" rel=\"noreferrer\">Final code</a></p>\n"}], "owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 784, "favorite_count": 2, "accepted_answer_id": 44600777, "answer_count": 1, "score": 3, "last_activity_date": 1497708179, "creation_date": 1497672398, "last_edit_date": 1497708179, "question_id": 44600646, "link": "https://stackoverflow.com/questions/44600646/how-does-trait-specialization-actually-work", "title": "How does trait specialization actually work?", "body": "<p>I tried to specialize a trait, and it fails to compile because of \"conflicting implementations\". But my understanding of specialization is that more specific implementations should override more generic ones. Here is a very basic example:</p>\n\n<pre><code>mod diving {\n    pub struct Diver&lt;T&gt; {\n        inner: T\n    }\n}\n\nmod swimming {\n    use diving;\n    pub trait Swimmer {\n        fn swim(&amp;self) {\n            println!(\"swimming\")\n        }\n    }\n\n    impl&lt;T&gt; Swimmer for diving::Diver&lt;T&gt; {\n\n    }\n}\n\nmod drowning {\n    use diving;\n    use swimming;\n    impl swimming::Swimmer for diving::Diver&lt;&amp;'static str&gt; {\n        fn swim(&amp;self) {\n            println!(\"drowning, help!\")\n        }\n    }\n}\n\nfn main() {\n    let x = diving::Diver::&lt;&amp;'static str&gt; {\n        inner: \"Bob\"\n    };\n    x.swim()\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.18.0 (03fc9d622 2017-06-06)\nerror[E0119]: conflicting implementations of trait `swimming::Swimmer` for type `diving::Diver&lt;&amp;'static str&gt;`:\n  --&gt; &lt;anon&gt;:23:5\n   |\n15 | /     impl&lt;T&gt; Swimmer for diving::Diver&lt;T&gt; {\n16 | |     \n17 | |     }\n   | |_____- first implementation here\n...\n23 | /     impl swimming::Swimmer for diving::Diver&lt;&amp;'static str&gt; {\n24 | |         fn swim(&amp;self) {\n25 | |             println!(\"drowning, help!\")\n26 | |         }\n27 | |     }\n   | |_____^ conflicting implementation for `diving::Diver&lt;&amp;'static str&gt;`\n</code></pre>\n\n<p>I would have expected that the more specific drowning implementation with an actual type of <code>&amp;'static str</code> would allow specialized implementation, but instead it fails to compile.</p>\n"}, {"tags": ["rust", "overflow"], "comments": [{"owner": {"reputation": 613, "user_id": 6376924, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/8108cf5530c5687c887bb234aca2d93d?s=128&d=identicon&r=PG&f=1", "display_name": "atomsmasher", "link": "https://stackoverflow.com/users/6376924/atomsmasher"}, "edited": false, "score": 0, "creation_date": 1497669499, "post_id": 44600404, "comment_id": 76188765, "body": "@SpencerWieczorek but the same exact code seems to run in python, with the same input"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1497675483, "post_id": 44600404, "comment_id": 76189622, "body": "<code>i</code> has type <code>usize</code>, that is it is unsigned, thus condition <code>i &gt;= 0</code> is always true. Besides, Rust doesn&#39;t have python&#39;s feature of allowing negative indexes."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1497695589, "post_id": 44600404, "comment_id": 76194309, "body": "Why don&#39;t you use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort\" rel=\"nofollow noreferrer\"><code>slide::sort</code></a> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497708639, "post_id": 44600404, "comment_id": 76198158, "body": "See also <a href=\"https://stackoverflow.com/q/41301485/155423\">stackoverflow.com/q/41301485/155423</a>,"}], "answers": [{"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 2, "last_activity_date": 1497675473, "creation_date": 1497675473, "answer_id": 44600937, "question_id": 44600404, "link": "https://stackoverflow.com/questions/44600404/insertion-sort-algorithm-gives-overflow-error/44600937#44600937", "title": "Insertion sort algorithm gives overflow error", "body": "<p>The reason is you tried to calculate <code>0 - 1</code> in <code>usize</code> type, which is unsigned (nonnegative). This may lead to an error in Rust.</p>\n\n<p>Why <code>usize</code>? Because Rust expects <code>usize</code> for lengths and indices. You can explicitly convert them into/from signed ones e.g. <code>isize</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"The sorted set is now: {:?}\", insertion_sort(vec![5,2,4,6,1,3]));\n}\n\nfn insertion_sort(set: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut A = set.to_vec();\n    for j in 1..set.len() as isize {\n        let key = A[j as usize];\n        let mut i = j - 1;\n        while (i &gt;= 0) &amp;&amp; (A[i as usize] &gt; key) {\n            A[(i + 1) as usize] = A[i as usize];\n            i = i - 1;\n        }\n        A[(i + 1) as usize] = key;\n    }\n    A\n}\n</code></pre>\n\n<p>Another solution, which I recommend, is to avoid negative indices at all. In this case you can use <code>i + 1</code> instead of <code>i</code> like this:</p>\n\n<pre><code>fn main() {\n    println!(\"The sorted set is now: {:?}\", insertion_sort(vec![5,2,4,6,1,3]));\n}\n\nfn insertion_sort(set: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut A = set.to_vec();\n    for j in 1..set.len() {\n        let key = A[j];\n        let mut i = j;\n        while (i &gt; 0) &amp;&amp; (A[i - 1] &gt; key) {\n            A[i] = A[i - 1];\n            i = i - 1;\n        }\n        A[i] = key;\n    }\n    A\n}\n</code></pre>\n"}], "owner": {"reputation": 613, "user_id": 6376924, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/8108cf5530c5687c887bb234aca2d93d?s=128&d=identicon&r=PG&f=1", "display_name": "atomsmasher", "link": "https://stackoverflow.com/users/6376924/atomsmasher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 44600937, "answer_count": 1, "score": 1, "last_activity_date": 1497708569, "creation_date": 1497669300, "last_edit_date": 1497708569, "question_id": 44600404, "link": "https://stackoverflow.com/questions/44600404/insertion-sort-algorithm-gives-overflow-error", "title": "Insertion sort algorithm gives overflow error", "body": "<p>When trying to run the insertion sort algorithm as shown below in Rust 1.15.</p>\n\n<pre><code>fn main() {\n    println!(\"The sorted set is now: {:?}\", insertion_sort(vec![5,2,4,6,1,3]));\n}\n\nfn insertion_sort(set: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n    let mut A = set.to_vec();\n    for j in 1..set.len() {\n        let key = A[j];\n        let mut i = j - 1;\n        while (i &gt;= 0) &amp;&amp; (A[i] &gt; key) {\n            A[i + 1] = A[i];\n            i = i - 1;\n        }\n        A[i + 1] = key;\n    }\n    A\n}\n</code></pre>\n\n<p>I get the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'attempt to subtract with overflow', insertion_sort.rs:12\nnote: Run with `RUST_BACKTRACE=1` for a backtrace\n</code></pre>\n\n<p>Why does an overflow happen here and how is the problem alleviated? </p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "edited": false, "score": 0, "creation_date": 1497658068, "post_id": 44599487, "comment_id": 76187142, "body": "FYI, some meta information: This is code from &#39;rustygear&#39;, a rewrite of &#39;gearmand&#39; in Rust that I&#39;ve been working on to teach myself rust. I&#39;m currently refactoring it to use tokio since my mio code is super lame. You can track the tokio refactor here if you&#39;re interested:  <a href=\"https://github.com/SpamapS/rustygear/tree/tokio\" rel=\"nofollow noreferrer\">github.com/SpamapS/rustygear/tree/tokio</a>"}, {"owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "edited": false, "score": 0, "creation_date": 1497672423, "post_id": 44599487, "comment_id": 76189184, "body": "I asked a more generic version of this question here <a href=\"https://stackoverflow.com/questions/44600646/how-does-trait-specialization-actually-work\" title=\"how does trait specialization actually work\">stackoverflow.com/questions/44600646/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "is_accepted": true, "score": 0, "last_activity_date": 1498063835, "creation_date": 1498063835, "answer_id": 44681947, "question_id": 44599487, "link": "https://stackoverflow.com/questions/44599487/how-do-i-create-a-tokio-specialized-transport-to-override-the-default-tick-imple/44681947#44681947", "title": "How do I create a tokio specialized transport to override the default tick implementation?", "body": "<p>So after a few days of struggling, I figured this out. The answer is to use a newtype to surround <code>Framed</code>, thus avoiding the default implementation.</p>\n\n<pre><code>use std::io;\n\nuse tokio_io::{AsyncRead, AsyncWrite};\nuse tokio_io::codec::{Framed, Encoder, Decoder};\nuse tokio_proto::streaming::pipeline::Transport;\nuse futures::{Poll, Sink, StartSend, Stream};\n\nuse codec::PacketCodec;\n\npub struct GearmanFramed&lt;T&gt;(pub Framed&lt;T, PacketCodec&gt;);\n\nimpl&lt;T&gt; Transport for GearmanFramed&lt;T&gt;\n    where T: AsyncRead + AsyncWrite + 'static\n{\n    fn tick(&amp;mut self) {\n        trace!(\"tick!\");\n    }\n\n    fn cancel(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        trace!(\"cancel!\");\n        Ok(())\n    }\n}\n\nimpl&lt;T&gt; Stream for GearmanFramed&lt;T&gt;\n    where T: AsyncRead\n{\n    type Item = &lt;PacketCodec as Decoder&gt;::Item;\n    type Error = &lt;PacketCodec as Decoder&gt;::Error;\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        self.0.poll()\n    }\n}\n\nimpl&lt;T&gt; Sink for GearmanFramed&lt;T&gt;\n    where T: AsyncWrite\n{\n    type SinkItem = &lt;PacketCodec as Encoder&gt;::Item;\n    type SinkError = &lt;PacketCodec as Encoder&gt;::Error;\n    fn start_send(&amp;mut self, item: Self::SinkItem) -&gt; StartSend&lt;Self::SinkItem, Self::SinkError&gt; {\n        self.0.start_send(item)\n    }\n    fn poll_complete(&amp;mut self) -&gt; Poll&lt;(), Self::SinkError&gt; {\n        self.0.poll_complete()\n    }\n    fn close(&amp;mut self) -&gt; Poll&lt;(), Self::SinkError&gt; {\n        self.0.close()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 44681947, "answer_count": 1, "score": 0, "last_activity_date": 1498063835, "creation_date": 1497657940, "last_edit_date": 1497709577, "question_id": 44599487, "link": "https://stackoverflow.com/questions/44599487/how-do-i-create-a-tokio-specialized-transport-to-override-the-default-tick-imple", "title": "How do I create a tokio specialized transport to override the default tick implementation?", "body": "<p>I'm attempting to write a streaming, pipelined server with a non-default <code>tick()</code> method in the transport. I thought this would do it:</p>\n\n<pre><code>use std::io;\n\nuse mio::net::TcpListener;\nuse tokio_core::reactor::PollEvented;\nuse tokio_io::{AsyncRead, AsyncWrite};\nuse tokio_io::codec::{Framed, Encoder, Decoder};\nuse tokio_proto::streaming::pipeline::Transport;\n\nuse codec::PacketCodec;\n\ntype GearmanIO = PollEvented&lt;TcpListener&gt;;\ntype GearmanFramed = Framed&lt;GearmanIO, PacketCodec&gt;;\n\nimpl Transport for GearmanFramed {\n    fn tick(&amp;mut self) {\n        trace!(\"tick!\");\n    }\n\n    fn cancel(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        trace!(\"cancel!\");\n    }\n}\n</code></pre>\n\n<p>But, trying to build this file yields this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `tokio_proto::streaming::pipeline::Transport` for type `tokio_io::codec::Framed&lt;tokio_core::reactor::PollEvented&lt;mio::net::TcpListener&gt;, codec::PacketCodec&gt;`:\n  --&gt; src/transport.rs:14:1\n   |\n14 | / impl Transport for GearmanFramed\n15 | | {\n16 | |     fn tick(&amp;mut self) {\n17 | |         trace!(\"tick!\");\n...  |\n22 | |     }\n23 | | }\n   | |_^\n   |\n   = note: conflicting implementation in crate `tokio_proto`\n\nerror[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n  --&gt; src/transport.rs:14:1\n   |\n14 | / impl Transport for GearmanFramed\n15 | | {\n16 | |     fn tick(&amp;mut self) {\n17 | |         trace!(\"tick!\");\n...  |\n22 | |     }\n23 | | }\n   | |_^ impl doesn't use types inside crate\n   |\n   = note: the impl does not reference any types defined in this crate\n   = note: define and implement a trait or new type instead\n</code></pre>\n\n<p>I would have expected that the specific nature of <code>GearmanFramed</code> would allow me to implement the <code>Transport</code> trait due to \"specialization\", but this one is still conflicting with the default, which is here:</p>\n\n<pre><code>use tokio_io as new_io;\n\n// ...\n\nimpl&lt;T, C&gt; Transport for new_io::codec::Framed&lt;T,C&gt;\n    where T: new_io::AsyncRead + new_io::AsyncWrite + 'static,\n          C: new_io::codec::Encoder&lt;Error=io::Error&gt; +\n                new_io::codec::Decoder&lt;Error=io::Error&gt; + 'static,\n{}\n</code></pre>\n"}, {"tags": ["rust", "simd", "metal", "objective-c-runtime", "metalkit"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497694596, "post_id": 44597919, "comment_id": 76194014, "body": "Can you rephrase your question, so it&#39;s clear what you&#39;re having trouble with?"}, {"owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497726566, "post_id": 44597919, "comment_id": 76203690, "body": "@E_net4 and Shepmaster my question is still correct, because the problem is still exist, and I only bypassing it. There must be some way to overcome this problem, I think other languages somehow are managing it. If I can make any time, I&#39;m gonna take a look at them. And If I found my answer there, yes, certainly I&#39;m gonna post my own answer below!"}, {"owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 0, "creation_date": 1497728203, "post_id": 44597919, "comment_id": 76204216, "body": "I know the question title is a little generic but it can be a good starting point for those who encounter the same problems and I think this is the first thing that comes in their head.  And maybe the question body needs a little editing."}], "answers": [{"comments": [{"owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 0, "creation_date": 1497740916, "post_id": 44610154, "comment_id": 76207113, "body": "<code>I think your safest approach ...</code> this is exactly what I don&#39;t like."}, {"owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 0, "creation_date": 1497741125, "post_id": 44610154, "comment_id": 76207158, "body": "I only accept that because of that encoding suggestion, I thing this is correct, I&#39;m gonna test it soon."}, {"owner": {"reputation": 83109, "user_id": 1312143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d64f50f989e564c337a8a8bd653b8e6?s=128&d=identicon&r=PG", "display_name": "Ken Thomases", "link": "https://stackoverflow.com/users/1312143/ken-thomases"}, "reply_to_user": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "edited": false, "score": 1, "creation_date": 1497742646, "post_id": 44610154, "comment_id": 76207456, "body": "Um, that wasn&#39;t a suggestion. I think that the Objective-C runtime just can&#39;t cope with vector arguments and falls down (as you&#39;ve found). I was intending to confirm that. I don&#39;t know Rust. Can it cope with an API that returns a function pointer with a given C signature? You could call <code>[MDLMesh methodForSelector:@selector(newBox...)]</code> and then treat the result as <code>MDLMesh *(*)(id, SEL, vector_float3, vector_uint3, MDLGeometryType, BOOL, id&lt;MDLMeshBufferAllocator&gt;)</code>."}], "tags": [], "owner": {"reputation": 83109, "user_id": 1312143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9d64f50f989e564c337a8a8bd653b8e6?s=128&d=identicon&r=PG", "display_name": "Ken Thomases", "link": "https://stackoverflow.com/users/1312143/ken-thomases"}, "is_accepted": true, "score": 1, "last_activity_date": 1497740105, "creation_date": 1497740105, "answer_id": 44610154, "question_id": 44597919, "link": "https://stackoverflow.com/questions/44597919/what-is-the-proper-way-to-encode-simd-types-and-functions-that-use-them-for-the/44610154#44610154", "title": "What is the proper way to encode SIMD types and functions that use them for the Objective-C Runtime?", "body": "<p>As an experiment, I requested the method signature for <code>+newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:</code>, using:</p>\n\n<pre><code>NSMethodSignature* sig = [MDLMesh methodSignatureForSelector:@selector(newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:)];\n</code></pre>\n\n<p>I then enumerated its arguments and their type encodings.  It turns out that the signature just skips the two vector arguments. It shows a total of 5 arguments, which includes the implicit <code>self</code> and <code>_cmd</code> arguments, when there should be 7. The encodings are \"@\", \":\", \"q\", \"c\", \"@\", the first two of which correspond to <code>self</code> and <code>_cmd</code> and the last three of which match the last three arguments of the method.</p>\n\n<p>I think your safest approach is to write an Objective-C module that exports a function wrapping this method but where the vector components are passed separately (i.e. three <code>float</code> arguments for the dimensions and three <code>unsigned int</code> arguments for the segments). It would construct the vector arguments from those individual arguments and call through to the class method, returning its result.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1498170582, "creation_date": 1498170582, "answer_id": 44710295, "question_id": 44597919, "link": "https://stackoverflow.com/questions/44597919/what-is-the-proper-way-to-encode-simd-types-and-functions-that-use-them-for-the/44710295#44710295", "title": "What is the proper way to encode SIMD types and functions that use them for the Objective-C Runtime?", "body": "<h3>Work-around solution for Rust</h3>\n\n<p>For those who are using Rust and have the same problem, I found the work around for bypassing the errors, but keep in mind the problem still exists and my solution will make the developer blind in their debugging process.</p>\n\n<ul>\n<li>If you are using objc crate, try to remove the <code>verify_message</code> feature from your crate, else do not do message verifying.</li>\n<li>Use <code>simd</code> representation for your vector data and put your data in your message without any encoding.</li>\n<li>In this case you are insanely blind in your development, one way I can suggest is to take your debugging in to Xcode (this is not good too!).</li>\n</ul>\n"}], "owner": {"reputation": 647, "user_id": 5429050, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/da7e1d765858cc119fc86fa3e48e410b?s=128&d=identicon&r=PG", "display_name": "Hossein Noroozpour", "link": "https://stackoverflow.com/users/5429050/hossein-noroozpour"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 44610154, "answer_count": 2, "score": 1, "last_activity_date": 1498170676, "creation_date": 1497646761, "last_edit_date": 1498170676, "question_id": 44597919, "link": "https://stackoverflow.com/questions/44597919/what-is-the-proper-way-to-encode-simd-types-and-functions-that-use-them-for-the", "title": "What is the proper way to encode SIMD types and functions that use them for the Objective-C Runtime?", "body": "<p>I'm developing an app in a language other than Objective-C and I came across <a href=\"https://developer.apple.com/documentation/modelio/mdlmesh/1562077-newboxwithdimensions?language=objc\" rel=\"nofollow noreferrer\"><code>newBoxWithDimensions</code></a>. It uses the <code>vector_float3</code> type which comes from the SIMD API.</p>\n\n<p>I can not encode this function because of the <code>vector_float3</code> type. </p>\n\n<p>I've found <a href=\"https://stackoverflow.com/questions/22959915/why-cant-gcc-or-clang-properly-encode-simd-vector-types\">Why can&#39;t gcc or clang properly @encode SIMD vector types?</a>; the problem here is when <code>@encode</code> does not encode the SIMD types, then it can not create a proper form for those functions that use SIMD types and then the message sending verification fails. How can I bypass this encoding problem in message sending verification?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1497646065, "post_id": 44597537, "comment_id": 76183816, "body": "Thanks for these elements @Djzin. So if use is indeed broken what is then the best way to manage imports when using procedural macros ?"}, {"owner": {"reputation": 988, "user_id": 6090592, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d5e40fcf8c369f36d04406528df52f2?s=128&d=identicon&r=PG&f=1", "display_name": "Djzin", "link": "https://stackoverflow.com/users/6090592/djzin"}, "reply_to_user": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1497683705, "post_id": 44597537, "comment_id": 76191304, "body": "One thing you can do is put your code into a module, and then you can import using <code>use self::anymap::Anymap</code>. You can still put the module inside the const delaration"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1497688129, "post_id": 44597537, "comment_id": 76192279, "body": "Thanks. I&#39;ll try that"}], "tags": [], "owner": {"reputation": 988, "user_id": 6090592, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d5e40fcf8c369f36d04406528df52f2?s=128&d=identicon&r=PG&f=1", "display_name": "Djzin", "link": "https://stackoverflow.com/users/6090592/djzin"}, "is_accepted": true, "score": 2, "last_activity_date": 1497710728, "last_edit_date": 1497710728, "creation_date": 1497645113, "answer_id": 44597537, "question_id": 44595595, "link": "https://stackoverflow.com/questions/44595595/importing-a-crate-into-a-const-block/44597537#44597537", "title": "Importing a crate into a const block", "body": "<p>I can replicate this on the playground using simply</p>\n\n<pre><code>const A: () = {\n    extern crate core;\n    use core::option::Option;\n};\n\nfn main() {}\n</code></pre>\n\n<p>However, it appears only the <code>use</code> statement is broken, and I can still use items from core, but I have to name them explicitly each time:</p>\n\n<pre><code>const A: () = {\n    extern crate core;\n    do_stuff!(core::option::Option)\n};\n</code></pre>\n\n<p>The reason is that <code>use</code> statements typically assume a path relative to the root, and there is no way to explicitly name the block you are in (<code>self</code> refers to the current module unfortunately).</p>\n\n<p>Here's a better workaround - as I said before, Rust uses <code>self</code> to refer to the current module, so you can just put a module in your code block and then have the <code>use</code> statements reference <code>self</code>.</p>\n\n<p>In your case it would be:</p>\n\n<pre><code>const BLOCK_1: () = {\n    mod inner {\n        extern crate anymap;\n        use self::anymap::AnyMap;\n    }\n};\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1497876422, "creation_date": 1497876422, "answer_id": 44631006, "question_id": 44595595, "link": "https://stackoverflow.com/questions/44595595/importing-a-crate-into-a-const-block/44631006#44631006", "title": "Importing a crate into a const block", "body": "<p>On the specific issue of making this work for procedural macro, a suggested solution was to reexport the needed crate as part of the crate containing the derive macro (or the one containing the class I'm trying to export) using something like <code>pub extern crate anymap</code> and then <code>use &lt;my_crate&gt;::anymap::AnyMap;</code></p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 44597537, "answer_count": 2, "score": 1, "last_activity_date": 1497876422, "creation_date": 1497636952, "last_edit_date": 1497876398, "question_id": 44595595, "link": "https://stackoverflow.com/questions/44595595/importing-a-crate-into-a-const-block", "title": "Importing a crate into a const block", "body": "<p>I'm trying to write a procedural macro that implements a <code>#[derive()]</code> trait for a struct. In the generated implementation code I need to use <a href=\"https://crates.io/crates/anymap\" rel=\"nofollow noreferrer\"><code>AnyMap</code></a>.</p>\n\n<p>To avoid multi crate imports, and based on what I read in some other crate's code (namely Serde) I put my generated code into a <code>const _IMPL_xxx_FOR_xxx : () = { /* generated code */ };</code> block but it fails to compile.</p>\n\n<p>I was able to replicate my issue with the following code</p>\n\n<pre><code>const BLOCK_1: () = {\n    extern crate anymap;\n    use anymap::AnyMap;\n};\n\nconst BLOCK_2: () = {\n    extern crate anymap;\n    use anymap::AnyMap;\n};\n\nfn main() {\n    println!(\"foo\");\n}\n</code></pre>\n\n<p>The compile error I'm getting is the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `anymap::AnyMap`\n --&gt; src/main.rs:3:9\n  |\n3 |     use anymap::AnyMap;\n  |         ^^^^^^^^^^^^^^ Maybe a missing `extern crate anymap;`?\n\nerror[E0432]: unresolved import `anymap::AnyMap`\n --&gt; src/main.rs:9:9\n  |\n9 |     use anymap::AnyMap;\n  |         ^^^^^^^^^^^^^^ Maybe a missing `extern crate anymap;`?\n</code></pre>\n\n<p>Is it an issue specific to <a href=\"https://crates.io/crates/anymap\" rel=\"nofollow noreferrer\"><code>AnyMap</code></a>? Would you know of any way to fix this (including maybe a different approach to generating procedural macro code if the pattern I'm using is not recommended?</p>\n"}, {"tags": ["linker", "rust", "ffi"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497608043, "post_id": 44585573, "comment_id": 76161090, "body": "While you&#39;re at it, please include the version of that library (are you building it against the master branch)?"}, {"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497608097, "post_id": 44585573, "comment_id": 76161118, "body": "yeap, using master"}], "answers": [{"comments": [{"owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "edited": false, "score": 0, "creation_date": 1497619814, "post_id": 44589685, "comment_id": 76168562, "body": "I&#39;m migrating from <code>rust-crypto</code>, because he is to slow, roughly 100 times slower than Go implementation of same algorithm. Other crates either based on rust-crypto or not mature enough. I already spended some time for investigation for this stuff)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1497617395, "creation_date": 1497617395, "answer_id": 44589685, "question_id": 44585573, "link": "https://stackoverflow.com/questions/44585573/rust-cant-link-bindings-to-c-library/44589685#44589685", "title": "Rust can&#39;t link bindings to C library", "body": "<p>Please re-familiarize yourself with <a href=\"http://doc.crates.io/build-script.html#case-study-building-some-native-code\" rel=\"nofollow noreferrer\">the \"Building some native code\" case study</a>. Specifically, you have informed Rust what the <em>interface</em> of the library is, but you haven't told the compiler <em>where the code is</em>. That's what the error you are getting says: \"I can't find the implementation of <code>crypto_scrypt</code>\"</p>\n\n<p>You need to add the library to the <em>linker path</em> and instruct it to be linked against.</p>\n\n<p>From the linked case study, your build script can inform the compiler where the library is and what to link against:</p>\n\n<pre><code>println!(\"cargo:rustc-link-search=native={}\", path_to_library);\nprintln!(\"cargo:rustc-link-lib=static=hello\"); // the name of the library\n</code></pre>\n\n<p><strong>Please, please, <em>please</em></strong> read the section about <a href=\"http://doc.crates.io/build-script.html#-sys-packages\" rel=\"nofollow noreferrer\"><code>*-sys</code> packages</a> which documents the best practices for this type of integration. Namely, your Cargo.toml is missing the <a href=\"http://doc.crates.io/build-script.html#the-links-manifest-key\" rel=\"nofollow noreferrer\">links key</a>, which is going to cause problems if anyone ever tries to link in this library multiple times.</p>\n\n<p>--</p>\n\n<p>Note that there are already <a href=\"https://crates.io/search?q=scrypt\" rel=\"nofollow noreferrer\">crates that purport to provide scrypt</a>.</p>\n"}], "owner": {"reputation": 1054, "user_id": 4201205, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/7186d11fd2ae12a5da22d2a8e7a684ad?s=128&d=identicon&r=PG&f=1", "display_name": "Constantine", "link": "https://stackoverflow.com/users/4201205/constantine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1708, "favorite_count": 1, "accepted_answer_id": 44589685, "answer_count": 1, "score": 1, "last_activity_date": 1497617395, "creation_date": 1497604976, "last_edit_date": 1497616867, "question_id": 44585573, "link": "https://stackoverflow.com/questions/44585573/rust-cant-link-bindings-to-c-library", "title": "Rust can&#39;t link bindings to C library", "body": "<p>I followed the <a href=\"https://github.com/servo/rust-bindgen\" rel=\"nofollow noreferrer\">rust-bindgen</a> tutorial to make bindings for <a href=\"http://github.com/Tarsnap/scrypt\" rel=\"nofollow noreferrer\">the scrypt C library</a>. I can't run my test because of linking error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/home/user/project/rust-scrypt/src/lib.rs:32: undefined reference to `crypto_scrypt'\n      collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>and my test:</p>\n\n<pre><code>include!(concat!(env!(\"OUT_DIR\"), \"/bindings.rs\"));\n// ...\n// ...\n#[test]\nfn test_script() {\n  let mut kdf_salt = to_bytes(\"fd4acb81182a2c8fa959d180967b374277f2ccf2f7f401cb08d042cc785464b4\");\n    let passwd = \"1234567890\";\n    let mut buf = [0u8; 32];\n\n    unsafe {\n        crypto_scrypt(passwd.as_ptr(), passwd.len(), kdf_salt.as_mut_ptr(), kdf_salt.len(),\n                      2, 8, 1, buf.as_mut_ptr(), 32);\n    }\n\n    println!(\"&gt;&gt; DEBUG: {:?}\", buf);\n    // \"52a5dacfcf80e5111d2c7fbed177113a1b48a882b066a017f2c856086680fac7\");\n}\n</code></pre>\n\n<p>The bindings have been generated and exist in <code>bindings.rs</code>. I don't know why the linker throws an error.</p>\n\n<p>Here is my <a href=\"https://gist.github.com/r8d8/c94520390008dacf6845f93a3122a7aa\" rel=\"nofollow noreferrer\">builds.rs</a></p>\n\n<pre><code>extern crate bindgen;\n\nuse std::env;\nuse std::path::PathBuf;\n\nfn main() {\n    let out_path = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n    let bindings = bindgen::Builder::default()\n        .no_unstable_rust()\n        .header(\"wrapper.h\")\n        .generate()\n        .expect(\"Unable to generate bindings\");\n\n    bindings\n        .write_to_file(out_path.join(\"bindings.rs\"))\n        .expect(\"Couldn't write bindings!\");\n}\n</code></pre>\n\n<p>And my <a href=\"https://gist.github.com/r8d8/fb5d9c1b7c3f905a7a2e7870dbd29967\" rel=\"nofollow noreferrer\">Cargo.toml</a></p>\n\n<pre><code>[package]\nname = \"rust-scrypt\"\nversion = \"0.0.1\"\nbuild = \"build.rs\"\n\n[build-dependencies]\nbindgen = \"0.23\"\n</code></pre>\n"}, {"tags": ["localization", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1497557416, "post_id": 44576039, "comment_id": 76141085, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26998485/rust-print-format-number-with-thousand-separator\">Rust: print/format number with thousand separator</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1497557551, "post_id": 44576039, "comment_id": 76141155, "body": "@ljedrz No, the OP clearly ask for floating number. Your question is about integer."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1497558280, "post_id": 44576039, "comment_id": 76141518, "body": "The answer to that question covers floats too, but you&#39;re right; this question is not exactly a duplicate."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1497561026, "post_id": 44576039, "comment_id": 76142833, "body": "cf. <a href=\"https://github.com/rust-lang/rust/issues/19752#issuecomment-66684082\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/19752#issuecomment-66684082</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1497596381, "post_id": 44576039, "comment_id": 76153554, "body": "@Stargateur: When evaluating duplicates, answers count as much as questions. In this case however, I would not mark it as duplicate, as one is talking about thousand separators (nigh exclusively) without any code sample and the other about decimal separators."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1497558325, "creation_date": 1497558325, "answer_id": 44576446, "question_id": 44576039, "link": "https://stackoverflow.com/questions/44576039/how-can-i-change-the-formatters-decimal-separator-in-rust/44576446#44576446", "title": "How can I change the formatter&#39;s decimal separator in Rust?", "body": "<p>This is not the role of the macro <code>format!</code>. This option should be handle by Rust. Unfortunately, my search lead me to the conclusion that Rust don't handle locale (yet ?).</p>\n\n<p>There is a library <a href=\"https://github.com/rust-locale/rust-locale/\" rel=\"nofollow noreferrer\">rust-locale</a>, but they are still in alpha.</p>\n"}, {"comments": [{"owner": {"reputation": 4893, "user_id": 899227, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/WHwW6.png?s=128&g=1", "display_name": "roeland", "link": "https://stackoverflow.com/users/899227/roeland"}, "edited": false, "score": 1, "creation_date": 1497606426, "post_id": 44577100, "comment_id": 76159921, "body": "I hate this solution, but I guess I have no choice at the moment :-)"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4893, "user_id": 899227, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/WHwW6.png?s=128&g=1", "display_name": "roeland", "link": "https://stackoverflow.com/users/899227/roeland"}, "edited": false, "score": 0, "creation_date": 1497607794, "post_id": 44577100, "comment_id": 76160927, "body": "I first forgot that it existed and attempted to implement it myself and believe me - this one is actually pretty pleasant ;)."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1497561128, "creation_date": 1497561128, "answer_id": 44577100, "question_id": 44576039, "link": "https://stackoverflow.com/questions/44576039/how-can-i-change-the-formatters-decimal-separator-in-rust/44577100#44577100", "title": "How can I change the formatter&#39;s decimal separator in Rust?", "body": "<p>Since the standard library doesn't have this functionality (localization of number format), you can just replace the dot with a comma:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", format!(\"{:.3}\", 10.0).replacen(\".\", \",\", 1));\n}\n</code></pre>\n\n<p>There are other ways of doing this, but this is probably the most straightforward solution.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1497598693, "post_id": 44583267, "comment_id": 76154842, "body": "Sure, but OP does not speak about <code>std</code>: there could be some official extern crate for internationalization, baked by the rust team. You are right IMO about <i>not</i> putting this stuff in <code>std</code>, but to develop in a modern language, this must exist somewhere."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1497599145, "post_id": 44583267, "comment_id": 76155079, "body": "@Boiethios: I hear you... but the SO format just doesn&#39;t lend itself well to recommending libraries unfortunately. Most notably because of inertia in the answers which means that 2 years from now the top answer may refer to a dead library (which is the reason questions asking for such references are closed, btw). Thus I prefer to limit myself to the explanation of why the standard library doesn&#39;t provide it; and this frees the OP to shop around rather than try and wait for the std solution (search for &quot;locale&quot; on crates.io, ask questions on IRC/Reddit/the users forum/...)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497599284, "post_id": 44583267, "comment_id": 76155143, "body": "Mmh you are right. I will think about that when I answer something."}, {"owner": {"reputation": 4893, "user_id": 899227, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/WHwW6.png?s=128&g=1", "display_name": "roeland", "link": "https://stackoverflow.com/users/899227/roeland"}, "edited": false, "score": 0, "creation_date": 1497606314, "post_id": 44583267, "comment_id": 76159826, "body": "Thanks. Is there a usable crate for this at the moment? (I understand why you don&#39;t mention it in your answer, but maybe a comment is ok)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4893, "user_id": 899227, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/WHwW6.png?s=128&g=1", "display_name": "roeland", "link": "https://stackoverflow.com/users/899227/roeland"}, "edited": false, "score": 0, "creation_date": 1497611634, "post_id": 44583267, "comment_id": 76163270, "body": "@r03: Stargateur suggested one, I have no idea how good or bad it is. If this is important to you, I really advise searching/asking the community (not on SO) about it."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1497597865, "creation_date": 1497597865, "answer_id": 44583267, "question_id": 44576039, "link": "https://stackoverflow.com/questions/44576039/how-can-i-change-the-formatters-decimal-separator-in-rust/44583267#44583267", "title": "How can I change the formatter&#39;s decimal separator in Rust?", "body": "<p>There is no support for internationalization (i18n) or localization (l10n) baked in the Rust standard library.</p>\n\n<hr>\n\n<p>There are several reasons, in no particular order:</p>\n\n<ol>\n<li>a locale-dependent output should be a conscious choice, not a default,</li>\n<li>i18n and l10n are much more complicated than just formatting numbers,</li>\n<li>the Rust std aims at being small.</li>\n</ol>\n\n<p>The <code>format!</code> machinery is going to be used to write JSON or XML files. You really do NOT want to end up with a differently formatted file depending on the locale of the machine that encoded it. It's a recipe for disaster.</p>\n\n<p>The detection of locale at run-time is also optimization unfriendly. Suddenly you cannot pre-compute things at compile-time (even partially), you cannot even know which size of buffer to allocate at compile-time.</p>\n\n<p>And this ties in with a dubious usefulness. Dates and numbers are arguably important, however this American vs English formatting war is ultimately a drop in the ocean. A French grammar schooler will certainly appreciate that the number is formatted in the typical French format... but it will be of no avail to her if the surrounding text is in English (we French are notoriously bad at teaching/learning foreign languages). Locale should influence language selection, sorting order, etc... merely changing the format of numbers is pointless, <em>everything</em> should switch with it, and this requires much more serious support (check <code>gettext</code> for a C library that provides a good <em>base</em>).</p>\n\n<p>Basing the detection of the locale on the host locale, and it being global to the whole process, is also a <em>very</em> dubious architectural choice in this age of multi-threaded web servers. Imagine if Facebook was served in Swedish in Europe just because its datacenter is running there.</p>\n\n<p>Finally, all this language/date/... support requires a humongous amount of data. <a href=\"http://site.icu-project.org/\" rel=\"noreferrer\">ICU</a> has several dozens (or is it hundreds?) of MBs of such data embedded inside it. This would make the size of the <code>std</code> explode, and make it completely unsuitable for embedded development; which probably do not care about this anyway.</p>\n\n<p>Of course, you could cut down on this significantly if you only chose to support a handful of languages... which is yet another argument for putting this outside the standard library.</p>\n"}], "owner": {"reputation": 4893, "user_id": 899227, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/WHwW6.png?s=128&g=1", "display_name": "roeland", "link": "https://stackoverflow.com/users/899227/roeland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 732, "favorite_count": 1, "accepted_answer_id": 44577100, "answer_count": 3, "score": 6, "last_activity_date": 1497616684, "creation_date": 1497556902, "last_edit_date": 1497616684, "question_id": 44576039, "link": "https://stackoverflow.com/questions/44576039/how-can-i-change-the-formatters-decimal-separator-in-rust", "title": "How can I change the formatter&#39;s decimal separator in Rust?", "body": "<p>The function below results in \"10.000\". Where I live this means \"ten thousand\".</p>\n\n<pre><code>format!(\"{:.3}\", 10.0);\n</code></pre>\n\n<p>I would like the output to be \"10,000\".</p>\n"}, {"tags": ["hashmap", "rust"], "comments": [{"owner": {"reputation": 38873, "user_id": 2415822, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/zxy7G.jpg?s=128&g=1", "display_name": "JAL", "link": "https://stackoverflow.com/users/2415822/jal"}, "edited": false, "score": 1, "creation_date": 1497554668, "post_id": 44575380, "comment_id": 76139596, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27582739/how-do-i-create-a-hashmap-literal\">How do I create a HashMap literal?</a>"}, {"owner": {"reputation": 677, "user_id": 1865521, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0507b7d11d629274263fb5ad3d1b5f31?s=128&d=identicon&r=PG", "display_name": "david king", "link": "https://stackoverflow.com/users/1865521/david-king"}, "edited": false, "score": 4, "creation_date": 1497555225, "post_id": 44575380, "comment_id": 76139885, "body": "Can you explain why you want this? Are you trying to avoid typing &quot;insert&quot; a bunch of times? (If so there is a Hashmap literal macro crate.) Are you trying to avoid resizing the Hashmap? (If so then you can initialise it with &#39;with_capacity&#39;) Are you trying to avoid round trips through the runtime? (If so I&#39;d tell you not to worry about it, that doesn&#39;t really exist like it would in Python or JavaScript.) Are you trying to shorten the code required to merge two Hashmaps because you do it in a lot of places?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497617713, "post_id": 44575380, "comment_id": 76167197, "body": "<i>other than manually calling insert on every single element</i> \u2014 yes, you can use a loop and then you &quot;manually&quot; only call <code>insert</code> once."}, {"owner": {"reputation": 696, "user_id": 2509572, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1cd622d403da42df85c9bc318708b00d?s=128&d=identicon&r=PG", "display_name": "firechant", "link": "https://stackoverflow.com/users/2509572/firechant"}, "edited": false, "score": 0, "creation_date": 1497639017, "post_id": 44575380, "comment_id": 76180302, "body": "The purpose is to initialize the HashMap with some values.  As an example, English letter frequencies.  I basically want { &#39;a&#39;: 0.08167, &#39;b&#39;: 0.01492, ... , &#39;z&#39;: 0.00074 }.  I suppose I could create an array of keys, an array of values, and then loop over the indices to insert the elements like <code>map.insert(letter[i], freq[i])</code>.  I was just wondering if there&#39;s a way do this all at once.  I&#39;ll edit my question to reflect this."}, {"owner": {"reputation": 696, "user_id": 2509572, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1cd622d403da42df85c9bc318708b00d?s=128&d=identicon&r=PG", "display_name": "firechant", "link": "https://stackoverflow.com/users/2509572/firechant"}, "edited": false, "score": 0, "creation_date": 1497639734, "post_id": 44575380, "comment_id": 76180661, "body": "There&#39;s no real reason that the loop solution is bad.  I had been thinking about it from a Python-y way, trying to avoid runtime issues, but that&#39;s not as much of a problem here.  It just feels less elegant, I suppose.  But alas."}], "answers": [{"comments": [{"owner": {"reputation": 3388, "user_id": 1292791, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/D2eE2.jpg?s=128&g=1", "display_name": "prehistoricpenguin", "link": "https://stackoverflow.com/users/1292791/prehistoricpenguin"}, "edited": false, "score": 0, "creation_date": 1618801816, "post_id": 44576591, "comment_id": 118703730, "body": "What if the value type of the map is a <code>Vec</code>, and I want the extend method extends the inside Vec? I have tried but find that the Vec value is replaced, it there any solution for my use cases?"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 14, "last_activity_date": 1497560230, "last_edit_date": 1497560230, "creation_date": 1497558894, "answer_id": 44576591, "question_id": 44575380, "link": "https://stackoverflow.com/questions/44575380/is-there-any-way-to-insert-multiple-entries-into-a-hashmap-at-once-in-rust/44576591#44576591", "title": "Is there any way to insert multiple entries into a HashMap at once in Rust?", "body": "<blockquote>\n  <p>Is there any way to insert multiple entries into a HashMap at once in Rust?</p>\n</blockquote>\n\n<p>Yes, you can <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Extend.html\" rel=\"noreferrer\"><code>extend</code></a> a <code>HashMap</code> with values from an <code>Iterator</code>, like this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map = HashMap::new();\n    map.extend((1..3).map(|n| (format!(\"{}*2=\", n), n * 2)));\n    map.extend((7..9).map(|n| (format!(\"{}*2=\", n), n * 2)));\n    println!(\"{:?}\", map); // Prints {\"1*2=\": 2, \"8*2=\": 16, \"7*2=\": 14, \"2*2=\": 4}.\n}\n</code></pre>\n\n<p>It is even a bit faster than calling the <code>insert</code> manually, because <code>extend</code> uses the size hint provided by the <code>Iterator</code> in order to reserve some space beforehand.</p>\n\n<p>Check out the source code of the method <a href=\"https://github.com/rust-lang/rust/blob/7c2cd93b2bf3c84b97ea798617105a6f85529d23/src/libstd/collections/hash/map.rs#L2273\" rel=\"noreferrer\">here, in map.rs</a>.</p>\n\n<blockquote>\n  <p>Or to initialize it with multiple entries?</p>\n</blockquote>\n\n<p>This is possible as well, thanks to <code>HashMap</code> implementing the <code>FromIterator</code> trait. When a collection implements <code>FromIterator</code>, you can use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>Iterator::collect</code></a> shorthand to construct it. Consider the following examples, all of them generating the same map:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;_, _&gt; = (1..3).map(|n| (format!(\"{}*2=\", n), n * 2)).collect();\n    map.extend((7..9).map(|n| (format!(\"{}*2=\", n), n * 2)));\n    println!(\"{:?}\", map); // Prints {\"1*2=\": 2, \"8*2=\": 16, \"7*2=\": 14, \"2*2=\": 4}.\n}\n</code></pre>\n\n<hr>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let map: HashMap&lt;_, _&gt; = (1..3)\n        .chain(7..9)\n        .map(|n| (format!(\"{}*2=\", n), n * 2))\n        .collect();\n    println!(\"{:?}\", map); // Prints {\"1*2=\": 2, \"8*2=\": 16, \"7*2=\": 14, \"2*2=\": 4}.\n}\n</code></pre>\n\n<hr>\n\n<pre><code>use std::collections::HashMap;\nuse std::iter::FromIterator;\n\nfn main() {\n    let iter = (1..3).chain(7..9).map(|n| (format!(\"{}*2=\", n), n * 2));\n    let map = HashMap::&lt;String, u32&gt;::from_iter(iter);\n    println!(\"{:?}\", map); // Prints {\"1*2=\": 2, \"8*2=\": 16, \"7*2=\": 14, \"2*2=\": 4}.\n}\n</code></pre>\n"}], "owner": {"reputation": 696, "user_id": 2509572, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1cd622d403da42df85c9bc318708b00d?s=128&d=identicon&r=PG", "display_name": "firechant", "link": "https://stackoverflow.com/users/2509572/firechant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3786, "favorite_count": 0, "accepted_answer_id": 44576591, "answer_count": 1, "score": 6, "last_activity_date": 1497639602, "creation_date": 1497554598, "last_edit_date": 1497639602, "question_id": 44575380, "link": "https://stackoverflow.com/questions/44575380/is-there-any-way-to-insert-multiple-entries-into-a-hashmap-at-once-in-rust", "title": "Is there any way to insert multiple entries into a HashMap at once in Rust?", "body": "<p>Is there any way to insert multiple entries into a HashMap at once in Rust?  Or to initialize it with multiple entries?  Anything other than manually calling <code>insert</code> on every single element you're inserting?</p>\n\n<p>Edit for an example using English letter frequencies:</p>\n\n<p>I basically want:</p>\n\n<pre><code>let frequencies = { \n  'a': 0.08167, \n  'b': 0.01492, \n  ... \n  'z': 0.00074 \n}\n</code></pre>\n\n<p>I know I <em>can</em> achieve the same result by doing a for loop like the following, but I want to know if there is a way to do this without creating additional arrays and then looping over them, or a more elegant solution in general.</p>\n\n<pre><code>let mut frequencies = HashMap::new();\nlet letters = ['a','b','c', ...... 'z'];\nlet freqs = [0.08167, 0.01492, 0.02782, ......., 0.00074];\nfor i in 0..26 {\n    frequencies.insert(letters[i], freqs[i]);\n}\n</code></pre>\n\n<p>For a literal, I could use the answer <a href=\"https://stackoverflow.com/questions/27582739/how-do-i-create-a-hashmap-literal\">here</a>, which will probably work fine for this example, but I'm curious whether there's a way to do this without it being a literal, in case this comes up in the future.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1497565027, "post_id": 44574711, "comment_id": 76144485, "body": "This seems like a weird (and needlessly convoluted) way to go about solving it.  If I was doing this, I&#39;d have a placeholder value for &quot;there is not and never has been a backing object&quot; and avoid the heap allocation entirely.  I believe <code>Vec</code> does this to avoid heap-allocating for empty vectors; there&#39;s a &quot;null but not actually 0&quot; pointer value."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1497595617, "post_id": 44574711, "comment_id": 76153106, "body": "@DK.: That&#39;s another solution indeed; essentially using <code>Option&lt;Shared&lt;..&gt;&gt;</code>. However this does require one more branch for each method, so maybe a tiny allocation yields better code? In any case, this is mostly an excuse (on my side) to better understand how to synthetize fat pointers out of thin air."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1531204858, "post_id": 51250397, "comment_id": 89495757, "body": "And more specifically, it uses: <a href=\"https://doc.rust-lang.org/src/core/ptr.rs.html#2688-2693\" rel=\"nofollow noreferrer\"><code>NonNull::dangling()</code></a>, a ready-made dangling pointer."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1531154777, "creation_date": 1531154777, "answer_id": 51250397, "question_id": 44574711, "link": "https://stackoverflow.com/questions/44574711/is-there-a-way-to-prevent-weaknew-from-over-allocating/51250397#51250397", "title": "Is there a way to prevent Weak::new() from over allocating?", "body": "<p>Yes, there is a way, and it was actually submitted to the standard library:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/50357\" rel=\"nofollow noreferrer\">Arc: remove unused allocation from Weak::new()</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/51901\" rel=\"nofollow noreferrer\">Rc: remove unused allocation and fix segfault in Weak::new()</a></li>\n</ul>\n\n<blockquote>\n  <p>This change makes it so that Weak::new() allocates no memory at all. Instead, it is created with a null pointer. The only things done with a Weak are trying to upgrade, cloning, and dropping, meaning there are very few places that the code actually needs to check if the pointer is null.</p>\n</blockquote>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 2, "accepted_answer_id": 51250397, "answer_count": 1, "score": 11, "last_activity_date": 1531154777, "creation_date": 1497552099, "last_edit_date": 1497595722, "question_id": 44574711, "link": "https://stackoverflow.com/questions/44574711/is-there-a-way-to-prevent-weaknew-from-over-allocating", "title": "Is there a way to prevent Weak::new() from over allocating?", "body": "<p><em>Follow-up of <a href=\"https://stackoverflow.com/questions/44573591/why-doesnt-weaknew-work-when-rcdowngrade-does/44574351#44574351\">Why doesn&#39;t Weak::new() work when Rc::downgrade() does?</a></em></p>\n\n<p>When attempting to implement <code>Weak::new()</code> in a way that would NOT require it to allocate memory for the underlying type even though it is never going to be used, I hit a roadblock.</p>\n\n<p>The definition of <code>RcBox&lt;T&gt;</code> is rather simple:</p>\n\n<pre><code>struct RcBox&lt;T: ?Sized&gt; {\n    strong: Cell&lt;usize&gt;,\n    weak: Cell&lt;usize&gt;,\n    value: T,\n}\n</code></pre>\n\n<p>And the goal here is to create a <code>RcBox&lt;T&gt;</code> which will actually NOT contain any <code>value</code>. Essentially, a <code>RcBox&lt;()&gt;</code>.</p>\n\n<p>However, there is a snag. <code>*mut RcBox&lt;()&gt;</code> is a thin pointer but <code>*mut RcBox&lt;T&gt;</code> is potentially a fat pointer. We have the data part of this fat pointer right, but there are many different cases of fat pointers so attempting to synthetize the rest is <strong>hard</strong>.</p>\n\n<p>As can be seen in the linked question, I can make it work for just trait objects:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Weak&lt;T&gt; {\n    pub fn new() -&gt; Weak&lt;T&gt; {\n        unsafe {\n            let boxed = Box::into_raw(box RcBox {\n                strong: Cell::new(0),\n                weak: Cell::new(1),\n                value: (),\n            });\n\n            let ptr = if size_of::&lt;*mut ()&gt;() == size_of::&lt;*mut T&gt;() {\n                let ptr: *mut RcBox&lt;T&gt; = transmute_copy(&amp;boxed);\n                ptr\n            } else {\n                let ptr: *mut RcBox&lt;T&gt; = transmute_copy(&amp;TraitObject {\n                    data: boxed as *mut (),\n                    vtable: null_mut(),\n                });\n                ptr\n            };\n\n            Weak { ptr: Shared::new(ptr) }\n        }\n    }\n}\n</code></pre>\n\n<p>However this won't work with <code>str</code> (for example).</p>\n\n<p>I made another attempt trying to isolate the fixed-size portion of <code>RcBox</code> while letting the compiler infer the fat part of the pointer:</p>\n\n<pre><code>struct RcBox&lt;T: ?Sized&gt; {\n    counters: RcBoxCounters&lt;T&gt;,\n    value: T,\n}\n\nstruct RcBoxCounters&lt;T: ?Sized&gt; {\n    strong: Cell&lt;usize&gt;,\n    weak: Cell&lt;usize&gt;,\n    _phantom: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T: ?Sized&gt; Weak&lt;T&gt; {\n    pub fn new() -&gt; Weak&lt;T&gt; {\n        unsafe {\n            let boxed = Box::into_raw(box RcBox::Counters::new(0, 1));\n            Weak { ptr: Shared::new(boxed as *mut RcBox&lt;T&gt;) }\n        }\n    }\n}\n</code></pre>\n\n<p>which sounds very clever until the compiler squashes your enthusiasm:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0375]: implementing the trait `CoerceUnsized` requires multiple coercions\n  --&gt; &lt;anon&gt;:58:40\n   |\n58 | impl&lt;T: ?Sized + Unsize&lt;U&gt;, U: ?Sized&gt; CoerceUnsized&lt;RcBox&lt;U&gt;&gt; for RcBox&lt;T&gt; {}\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^ requires multiple coercions\n   |\n   = note: `CoerceUnsized` may only be implemented for a coercion between structures with one field being coerced\n   = note: currently, 2 fields need coercions: counters (RcBoxCounters&lt;T&gt; to RcBoxCounters&lt;U&gt;), value (T to U)\n</code></pre>\n</blockquote>\n\n<p>That is:</p>\n\n<ul>\n<li>I think that to let the compiler synthesize the fat part I need a <code>PhantomData</code> in <code>RcBoxCounters</code>,</li>\n<li>however doing so requires 2 conversions for the coercion, which is not allowed.</li>\n</ul>\n\n<hr>\n\n<p>So, is there a way to fix <code>Weak::new()</code> so that it stops allocating extraneous (unnecessary) memory?</p>\n\n<p><em>Note: I do mean allocating only space for the two counters, allocating large and trimming afterward does NOT help.</em></p>\n\n<p><em>Note: It has been remarked that one could use an <code>Option</code> or special value to denote the absence of value. This requires branching on each method, which may not be desirable. I prefer learning to fiddle with fat pointers.</em></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1497574527, "creation_date": 1497574527, "answer_id": 44579174, "question_id": 44574028, "link": "https://stackoverflow.com/questions/44574028/idiomatic-way-to-memoize-or-lazy-evaluate-using-cell-and-refcell/44579174#44579174", "title": "Idiomatic way to memoize or lazy evaluate using `Cell` and `RefCell`", "body": "<p>The fact that you need the ability to clear the cache means that you must have a guard. Otherwise, a call to <code>set_a</code> could invalidate a bare reference returned earlier by <code>borrow_ys</code>. The only way the compiler can verify that this doesn't happen is by returning a guard and borrowing from the guard instead.</p>\n\n<p>If you can do away with the ability to clear the cache, you could use the <code>LazyCell</code> type from the <a href=\"https://crates.io/crates/lazycell\" rel=\"nofollow noreferrer\"><code>lazycell</code></a> crate instead.</p>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 405, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1497574527, "creation_date": 1497549601, "last_edit_date": 1497550425, "question_id": 44574028, "link": "https://stackoverflow.com/questions/44574028/idiomatic-way-to-memoize-or-lazy-evaluate-using-cell-and-refcell", "title": "Idiomatic way to memoize or lazy evaluate using `Cell` and `RefCell`", "body": "<p>The code below works. It evaluates <code>x</code> and <code>ys</code> lazily and caches into <code>Foo::x: Cell</code>, <code>Foo::ys: RefCell</code> respectively.</p>\n\n<p>However, I feel there might be a better way to do it. I dislike I have to make a wrapper <code>CacheVecGuard</code> so that on the call site I can use <code>self.borrow_ys()</code> instead of the lengthy <code>&amp;self.ys.borrow().1</code>.</p>\n\n<p>How can I improve this piece of code?</p>\n\n<p>Are there any canonical snippets to do lazy evaluation or memoization that is suitable in this case? (I am aware of <code>lazy_static</code> which doesn't fit)</p>\n\n<pre><code>use std::cell::{RefCell, Cell, Ref};\nuse std::ops::Deref;\n\nstruct CacheVecGuard&lt;'a&gt;(Ref&lt;'a, (bool, Vec&lt;f64&gt;)&gt;);\n\nimpl&lt;'a&gt; Deref for CacheVecGuard&lt;'a&gt; {\n    type Target = [f64];\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;(self.0).1\n    }\n}\n\nfn pre_calculate_x(x: f64) -&gt; f64 {\n    x\n}\n\nfn pre_calculate_ys(x: f64, ys: &amp;mut [f64]) {\n    for i in 0..ys.len() {\n        ys[i] += 1.0;\n    }\n}\n\nstruct Foo {\n    pub a: f64,\n    x: Cell&lt;Option&lt;f64&gt;&gt;,\n    ys: RefCell&lt;(bool, Vec&lt;f64&gt;)&gt;,\n}\n\nimpl Foo {\n    pub fn new(a: f64) -&gt; Self {\n        Self {\n            a,\n            x: Cell::new(None),\n            ys: RefCell::new((false, vec![0.0; 10])),\n        }\n    }\n\n    fn get_x(&amp;self) -&gt; f64 {\n        match self.x.get() {\n            None =&gt; {\n                let x = pre_calculate_x(self.a);\n                self.x.set(Some(x));\n                println!(\"Set x to {}\", x);\n                x\n            }\n            Some(x) =&gt; x,\n        }\n    }\n\n    fn borrow_ys(&amp;self) -&gt; CacheVecGuard {\n        {\n            let (ref mut ready, ref mut ys) = *self.ys.borrow_mut();\n            if !*ready {\n                pre_calculate_ys(self.a, ys);\n                println!(\"Set ys to {:?}\", ys);\n                *ready = true;\n            }\n        }\n        CacheVecGuard(self.ys.borrow())\n    }\n\n    fn clear_cache(&amp;mut self) {\n        *(&amp;mut self.ys.borrow_mut().0) = false;\n        self.x.set(None);\n    }\n\n    pub fn test(&amp;self) -&gt; f64 {\n        self.borrow_ys()[0] + self.get_x()\n    }\n\n    pub fn set_a(&amp;mut self, a: f64) {\n        self.a = a;\n        self.clear_cache();\n    }\n}\n\nfn main() {\n    let mut foo = Foo::new(1.0);\n    println!(\"{}\", foo.test());\n    foo.set_a(3.0);\n    println!(\"{}\", foo.test());\n}\n</code></pre>\n\n<p>It prints</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Set ys to [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\nSet x to 1\n2\nSet ys to [2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\nSet x to 3\n5\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=17ea59652cd6cbb4b46974f4d1c7a95d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 0, "creation_date": 1497549661, "post_id": 44573892, "comment_id": 76136847, "body": "that makes sense! follow-up question: if <code>Weak::new()</code> actually reserves memory, how would one actually initialize something in that space after <code>Weak::new()</code> is called?"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 2, "creation_date": 1497550416, "post_id": 44573892, "comment_id": 76137242, "body": "@eiko Yeah, <a href=\"https://doc.rust-lang.org/nightly/std/rc/struct.Weak.html#method.new\" rel=\"nofollow noreferrer\">Weak::new</a> reserves memory, presumably to avoid extra branching and memory that would&#39;ve been required to make the value <code>Option</code>-al. But the value it left uninitialized. You&#39;re not supposed to use or initialize it. <code>Weak::upgrade</code> will always return <code>None</code>, because the reference counter is initialized to zero."}, {"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 0, "creation_date": 1497550584, "post_id": 44573892, "comment_id": 76137328, "body": "ah okay, that&#39;s what i assumed at first! my initial thought was &quot;if <code>Weak::new()</code> will always be <code>None</code>, there&#39;s no reason it would need to allocate memory.&quot; but if it still needs to allocate memory for technical reasons, i can live with that. thank you!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497550914, "post_id": 44573892, "comment_id": 76137519, "body": "@ArtemGr: I challenge the fact that the memory is actually required! Since it&#39;s never access anyway, it might as well never be allocated. On the other hand... I&#39;ve tried really hard to avoid allocating that memory, and it&#39;s not as easy as it sounds."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497552133, "post_id": 44573892, "comment_id": 76138198, "body": "I created a follow-up question about changing the implementation of <code>Weak::new</code> to avoid the over-allocation: <a href=\"https://stackoverflow.com/questions/44574711/is-there-a-way-to-prevent-weaknew-from-over-allocating\" title=\"is there a way to prevent weaknew from over allocating\">stackoverflow.com/questions/44574711/&hellip;</a>"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497552331, "post_id": 44573892, "comment_id": 76138313, "body": "@MatthieuM. Absolutely, the allocation is <b>not</b> required, but it&#39;s a reasonable implementation trade-off, IMHO."}, {"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1497553490, "post_id": 44573892, "comment_id": 76138974, "body": "@MatthieuM. i fully support this excellent debate and will be following your other question! ^-^"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 4, "last_activity_date": 1497549824, "last_edit_date": 1497549824, "creation_date": 1497549096, "answer_id": 44573892, "question_id": 44573591, "link": "https://stackoverflow.com/questions/44573591/why-doesnt-weaknew-work-when-rcdowngrade-does/44573892#44573892", "title": "Why doesn&#39;t Weak::new() work when Rc::downgrade() does?", "body": "<p>The type inferred for <code>Weak::new()</code> is <code>Weak&lt;RefCell&lt;Part&gt;&gt;</code>, and the <code>Part</code> part can not be created because it's a trait!</p>\n\n<p>That's what the <code>Sized</code> error is all about. The trait is not a concrete structure, it has no size known at compile time, so the compiler wouldn't know how much space to allocate.</p>\n\n<blockquote>\n  <p>Why is it that I can successfully create a <code>Weak&lt;RefCell&lt;Part&gt;&gt;</code> from <code>Rc::downgrade()</code></p>\n</blockquote>\n\n<p>It is because <code>Rc&lt;RefCell&lt;Part&gt;&gt;</code> points to a structure that is already allocated. Compiler can reference it with a trait pointer even though it doesn't know whether it's a <code>Blah</code> or some other implementation of the <code>Part</code> trait.</p>\n\n<blockquote>\n  <p>Is there a way for me to annotate <code>Weak::new()</code> to help the compiler</p>\n</blockquote>\n\n<p>You can indeed annotate <code>Weak::new()</code>, pointing the compiler to the implementation of <code>Part</code> that you want instantiated, like this:</p>\n\n<pre><code>use std::rc::{Rc, Weak};\nuse std::cell::RefCell;\n\npub trait Part {}\n\npub struct Blah {}\n\nimpl Part for Blah {}\n\nfn main() {\n    let blah = Blah {};\n    lookup(Rc::new(RefCell::new(blah)));\n}\n\nfn lookup(part: Rc&lt;RefCell&lt;Part&gt;&gt;) -&gt; Weak&lt;RefCell&lt;Part&gt;&gt; {\n    if true {\n        Rc::downgrade(&amp;part)\n    } else {\n        Weak::&lt;RefCell&lt;Blah&gt;&gt;::new()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1497552295, "last_edit_date": 1497552295, "creation_date": 1497550821, "answer_id": 44574351, "question_id": 44573591, "link": "https://stackoverflow.com/questions/44573591/why-doesnt-weaknew-work-when-rcdowngrade-does/44574351#44574351", "title": "Why doesn&#39;t Weak::new() work when Rc::downgrade() does?", "body": "<p><strong>TL;DR: Fat pointers are hard.</strong></p>\n\n<p>And therefore you need to specify the <em>concrete</em> type explicitly before coercion takes place:</p>\n\n<pre><code>Weak::&lt;RefCell&lt;Blah&gt;&gt;::new()\n</code></pre>\n\n<p><em>Note: if <code>Blah</code> takes a lot of memory, create a Zero-Sized Type <code>Fool</code>, implement <code>Part</code> for it (all functions <code>unimplemented!()</code>), then use <code>Weak::&lt;RefCell&lt;Fool&gt;&gt;::new()</code> to avoid allocating memory uselessly.</em></p>\n\n<hr>\n\n<p>I believe that the underlying issue is simply one of implementation issue.</p>\n\n<p>It does not seem unfixable, but may require quite some work to cover all corner cases.</p>\n\n<hr>\n\n<p>First, let's expose the issue.</p>\n\n<p>The implementation of <code>Weak::new</code>:</p>\n\n<pre><code>impl&lt;T&gt; Weak&lt;T&gt; {\n    pub fn new() -&gt; Weak&lt;T&gt; {\n        unsafe {\n            Weak {\n                ptr: Shared::new(Box::into_raw(box RcBox {\n                    strong: Cell::new(0),\n                    weak: Cell::new(1),\n                    value: uninitialized(),\n                })),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>For homogeneity, all <code>Shared</code> elements are wrapping a <code>RcBox</code>, which contains two <code>Cell</code> (the counters) and the actual value.</p>\n\n<p>The mere fact of building a <code>RcBox&lt;T&gt;</code> <em>requires</em> that the size of <code>T</code> be known, which is why unlike most <code>Weak</code> methods, <code>T</code> is NOT marked as <code>: ?Sized</code> in this <code>impl</code>.</p>\n\n<hr>\n\n<p>Now, since the memory is left uninitialized, it is clear that it will never be used, so actually <em>any</em> size would have been fine.</p>\n\n<p>This is supported by the fact that <code>RcBox</code> can actually carry unsized data, which is necessary to go from <code>RcBox&lt;Struct&gt;</code> to <code>RcBox&lt;Trait&gt;</code>, and therefore the <code>strong</code> and <code>weak</code> fields are always laid out <em>first</em> (only the last field can be unsized).</p>\n\n<p>Thus, we would like</p>\n\n<ol>\n<li>Allocate a <code>RcBox&lt;()&gt;</code>, which would save memory AND not require that <code>T</code> be <code>Sized</code>,</li>\n<li>Then transmuted to <code>RcBox&lt;T&gt;</code>, whatever <code>T</code> is.</li>\n</ol>\n\n<p>Alright, let's do it!</p>\n\n<hr>\n\n<p>Our desired implementation will look something like this:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Weak&lt;T&gt; {\n    pub fn new() -&gt; Weak&lt;T&gt; {\n        unsafe {\n            Weak {\n                ptr: Shared::new(transmute(Box::into_raw(box RcBox {\n                    strong: Cell::new(0),\n                    weak: Cell::new(1),\n                    value: (),\n                }))),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>which utterly fails to compile.</p>\n\n<p>Why? Because <code>*mut RcBox&lt;()&gt;</code> is a thin pointer, whereas <code>*mut RcBox&lt;T&gt;</code> is either a thin pointer OR a fat pointer (<a href=\"https://doc.rust-lang.org/std/raw/struct.TraitObject.html\" rel=\"nofollow noreferrer\">see raw memory representation</a>) depending on whether <code>T</code> is <code>Sized</code> or <code>!Sized</code>.</p>\n\n<p>Now, trait pointers <a href=\"https://play.rust-lang.org/?gist=0cd75b9e3303cb086b7a36011cbac557&amp;version=nightly&amp;backtrace=1\" rel=\"nofollow noreferrer\">can be handled</a> (<strong>warning: contains a simplified and totally unsafe implementation of <code>Rc</code></strong>) with the following implementation of <code>Weak::new</code>:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Weak&lt;T&gt; {\n    pub fn new() -&gt; Weak&lt;T&gt; {\n        unsafe {\n            let boxed = Box::into_raw(box RcBox {\n                strong: Cell::new(0),\n                weak: Cell::new(1),\n                value: (),\n            });\n\n            let ptr = if size_of::&lt;*mut ()&gt;() == size_of::&lt;*mut T&gt;() {\n                let ptr: *mut RcBox&lt;T&gt; = transmute_copy(&amp;boxed);\n                ptr\n            } else {\n                let ptr: *mut RcBox&lt;T&gt; = transmute_copy(&amp;TraitObject {\n                    data: boxed as *mut (),\n                    vtable: null_mut(),\n                });\n                ptr\n            };\n\n            Weak { ptr: Shared::new(ptr) }\n        }\n    }\n}\n</code></pre>\n\n<p>However this implementation <em>only accounts for trait pointers</em>, and there are other kinds of fat pointers for which it would... probably completely break down.</p>\n"}], "owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 567, "favorite_count": 0, "accepted_answer_id": 44573892, "answer_count": 2, "score": 2, "last_activity_date": 1497552295, "creation_date": 1497548020, "last_edit_date": 1497549589, "question_id": 44573591, "link": "https://stackoverflow.com/questions/44573591/why-doesnt-weaknew-work-when-rcdowngrade-does", "title": "Why doesn&#39;t Weak::new() work when Rc::downgrade() does?", "body": "<p>I'm creating a function which returns a <code>Weak</code> reference to a trait object. In situations where the object cannot be found (it's a lookup function), I want to return an empty <code>Weak</code> reference using <code>Weak::new()</code>:</p>\n\n<pre><code>use std::rc::{self, Rc, Weak};\nuse std::cell::RefCell;\n\npub trait Part {}\n\npub struct Blah {}\n\nimpl Part for Blah {}\n\nfn main() {\n    let blah = Blah {};\n    lookup(Rc::new(RefCell::new(blah)));\n}\n\nfn lookup(part: Rc&lt;RefCell&lt;Part&gt;&gt;) -&gt; Weak&lt;RefCell&lt;Part&gt;&gt; {\n    if true {\n        Rc::downgrade(&amp;part)\n    } else {\n        Weak::new()\n    }\n}\n</code></pre>\n\n<p>This has the following error during compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Part + 'static: std::marker::Sized` is not satisfied in `std::cell::RefCell&lt;Part + 'static&gt;`\n  --&gt; &lt;anon&gt;:19:9\n   |\n19 |         Weak::new()\n   |         ^^^^^^^^^ within `std::cell::RefCell&lt;Part + 'static&gt;`, the trait `std::marker::Sized` is not implemented for `Part + 'static`\n   |\n   = note: `Part + 'static` does not have a constant size known at compile-time\n   = note: required because it appears within the type `std::cell::RefCell&lt;Part + 'static&gt;`\n   = note: required by `&lt;std::rc::Weak&lt;T&gt;&gt;::new`\n</code></pre>\n\n<p>Why is it that I can successfully create a <code>Weak&lt;RefCell&lt;Part&gt;&gt;</code> from <code>Rc::downgrade()</code> but cannot use the same type to create a new Weak reference with <code>Weak::new()</code>?</p>\n\n<p>Is there a way for me to annotate <code>Weak::new()</code> to help the compiler or will I have to wrap this in an <code>Option</code> to let the user know the part wasn't found?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=8392420d0ab4af8a29ce4a3ee368a8c7&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">Working minimal example</a></p>\n"}, {"tags": ["iterator", "rust", "rust-cargo", "clippy"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1497521912, "post_id": 44564772, "comment_id": 76118509, "body": "I would consider the warning a false-positive for your usage \u2013 you&#39;re not just looping over the range of <code>0..len</code> of some collection just to index into it, you&#39;re looping over the range of <code>0..N</code> so that you can index into two different collections. That said, you should probably just use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.copy_from_slice\" rel=\"nofollow noreferrer\"><code>copy_from_slice</code></a> here."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1497558991, "post_id": 44564916, "comment_id": 76141856, "body": "And <a href=\"https://github.com/Manishearth/rust-clippy/issues/1831\" rel=\"nofollow noreferrer\">reported</a>. It&#39;s true that this lint has some known problems."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 4, "last_activity_date": 1497524206, "last_edit_date": 1497524206, "creation_date": 1497521870, "answer_id": 44564916, "question_id": 44564772, "link": "https://stackoverflow.com/questions/44564772/how-do-i-fix-clippys-needless-range-loop-for-loops-that-copy-between-slices-wit/44564916#44564916", "title": "How do I fix Clippy&#39;s needless_range_loop for loops that copy between slices with an offset?", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.clone_from_slice\" rel=\"nofollow noreferrer\">clone_from_slice</a></p>\n\n<pre><code>ts.clone_from_slice(&amp;data[..8]);\ncs.clone_from_slice(&amp;data[8..]);\n</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 2689623, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba80c069b782328ef8a65f2b7335f478?s=128&d=identicon&r=PG&f=1", "display_name": "jan", "link": "https://stackoverflow.com/users/2689623/jan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 0, "accepted_answer_id": 44564916, "answer_count": 1, "score": 3, "last_activity_date": 1497534273, "creation_date": 1497521444, "last_edit_date": 1497534273, "question_id": 44564772, "link": "https://stackoverflow.com/questions/44564772/how-do-i-fix-clippys-needless-range-loop-for-loops-that-copy-between-slices-wit", "title": "How do I fix Clippy&#39;s needless_range_loop for loops that copy between slices with an offset?", "body": "<p>When running <code>cargo clippy</code>, it complains about code like this:</p>\n\n<pre><code>pub fn from_bytes(data: [u8; 72]) -&gt; Stuff {\n    let mut ts = [0u8; 8];\n    let mut cs = [0u8; 64];\n\n    for b in 0..8 {\n        ts[b] = data[b];\n    }\n\n    for bb in 0..64 {\n        cs[bb] = data[bb + 8];\n    }\n}\n</code></pre>\n\n<p>with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: the loop variable `bb` is used to index `cs`\n  --&gt; src/main.rs:9:5\n   |\n9  | /     for bb in 0..64 {\n10 | |         cs[bb] = data[bb + 8];\n11 | |     }\n   | |_____^\n   |\n   = note: #[warn(needless_range_loop)] on by default\n   = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop\nhelp: consider using an iterator\n   |     for (bb, &lt;item&gt;) in cs.iter().enumerate().take(64) {\n</code></pre>\n\n<p>I can not wrap my head around this <a href=\"https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop\" rel=\"nofollow noreferrer\">information</a>. How can I change to the suggested method? I don't get how something like</p>\n\n<pre><code>for (bb, &lt;item&gt;) in cs.iter().enumerate().take(64)\n</code></pre>\n\n<p>can be applied to my use case.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497516759, "post_id": 44562305, "comment_id": 76114883, "body": "Thank you, I think your question is more understandable :)"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 12, "last_activity_date": 1497515124, "creation_date": 1497515124, "answer_id": 44562427, "question_id": 44562305, "link": "https://stackoverflow.com/questions/44562305/are-strings-drop-or-copy/44562427#44562427", "title": "Are strings Drop or Copy?", "body": "<p><strong>Yes</strong>.</p>\n\n<p>To be clear, all immutable references (<code>&amp;T</code>) are <code>Copy</code>, while the mutable ones (<code>&amp;mut T</code>) are move only. <code>&amp;'static str</code>, the type of string literals, is just one special case of <code>&amp;T</code>, an immutable reference, and therefore is <code>Copy</code>.</p>\n\n<p>On the other hand, a <code>String</code> instance is the single owner of a dynamically allocated buffer for its content. This prevents it from being <code>Copy</code> (single owner) and requires it to implement <code>Drop</code> (to free the dynamically allocated buffer).</p>\n\n<p>In details, though, <code>String</code> does not implement <code>Drop</code> directly, but instead is a wrapper around a <code>Vec&lt;u8&gt;</code> which itself implements <code>Drop</code>. The behavior is identical, it's just that the <code>Drop</code> implementation of <code>String</code> is auto-generated, whereas the one from <code>Vec&lt;u8&gt;</code> is <a href=\"https://doc.rust-lang.org/src/collections/vec.rs.html#1921\" rel=\"noreferrer\">manually written</a>.</p>\n"}], "owner": {"reputation": 16010, "user_id": 1568658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/FPSGe.jpg?s=128&g=1", "display_name": "user218867", "link": "https://stackoverflow.com/users/1568658/user218867"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 0, "accepted_answer_id": 44562427, "answer_count": 1, "score": 6, "last_activity_date": 1497534104, "creation_date": 1497514743, "last_edit_date": 1497534104, "question_id": 44562305, "link": "https://stackoverflow.com/questions/44562305/are-strings-drop-or-copy", "title": "Are strings Drop or Copy?", "body": "<p>I'm learning about Rust's ownership. My tests show that string literals are copied on variable assignment while <code>String</code> instances are moved. Does that mean that <code>String</code> is <code>Drop</code> while string literals are <code>Copy</code>?</p>\n\n<p><strong>variable_assign_test.rs</strong></p>\n\n<pre><code>// variable assign test,\n\n// assign variable on stack to another,\nfn test_stack_assign() {\n    let x = 5;\n    let y = x; // data duplicated on stack,\n    println!(\"x = {}, y = {}\", x, y); // it's ok,\n}\n\n// assign variable on heap to another,\nfn test_heap_assign() {\n    let s1 = String::from(\"hello\");\n    let s2 = s1;    // now s1 is invalid, should not use it any more,\n    // println!(\"{}\", s1); // this won't compile,\n    println!(\"s2 = {}\", s2); // it's ok,\n}\n\nfn test_tuple_assign() {\n    let pa = (1, 2);\n    let pb = pa;\n    println!(\"pa = {:?}, pb = {:?}\", pa, pb); // it's ok,\n\n    // tuple that contains string literal,\n    let name_monica = \"monica\";\n    let monica = (11, name_monica);\n    let monica2 = monica;\n    println!(\"monica = {:?}, monica2 = {:?}\", monica, monica2);\n\n    // tuple that contains String instance,\n    let name_eric = String::from(\"eric\");\n    let eric = (12, name_eric);\n    let eric2 = eric; // eric is invalid now,\n    // println!(\"eric = {:?}, eric = {:?}\", eric, eric2); // this won't compile,\n}\n\nfn main() {\n    test_stack_assign();\n    test_heap_assign();\n    test_tuple_assign();\n}\n</code></pre>\n\n<p>Compile with <code>rustc variable_assign_test.rs -o a.out</code> and run with <code>./a.out</code></p>\n\n<p>If the last line of <code>test_tuple_assign()</code> is uncommented, it will get an error <code>value used here after move</code> for the variable <code>eric</code>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1497513402, "post_id": 44561643, "comment_id": 76112613, "body": "Related: <a href=\"https://github.com/rust-lang/cargo/issues/2980\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/2980</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1296, "user_id": 110080, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1f1c20467562fc1d8c8aa0d328def62?s=128&d=identicon&r=PG", "display_name": "Skade", "link": "https://stackoverflow.com/users/110080/skade"}, "edited": false, "score": 3, "creation_date": 1497523385, "post_id": 44561952, "comment_id": 76119396, "body": "Making you crate not compile when both features accessed will soon be supported by an additional macro: compile_fail! <a href=\"https://github.com/rust-lang/rust/pull/42620\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/42620</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497534585, "post_id": 44561952, "comment_id": 76127244, "body": "Why can&#39;t you just have each feature flag conditionally compile a type named <code>YouMayOnlyUseOneOfFeatureAOrFeatureB</code>? If both features are enabled, the code will fail to compile."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497534747, "post_id": 44561952, "comment_id": 76127370, "body": "@Shepmaster: &quot;... or by placing non-compiling code in your crate that is only enabled when incompatible features are enabled.&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497534826, "post_id": 44561952, "comment_id": 76127431, "body": "@DK. that&#39;s like... all the way at the end of the answer. :-P I guess I read <i>Fundamentally, you can&#39;t</i> and then was like &quot;sure I can&quot;. Maybe the wording of that first bit could be improved?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1497535190, "post_id": 44561952, "comment_id": 76127654, "body": "@Shepmaster: The problem is that you can&#39;t do it in a way that Cargo is aware of, you can only do it as a side-effect of deliberately breaking compilation.  Fundamentally, you can&#39;t just take gold out of the Federal Reserve Bank of New York without permission... I mean, <i>unless</i> you derail a subway train and bring in digging equipment, but I don&#39;t think that counts toward being able to say &quot;yes, you can&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1497539123, "post_id": 44561952, "comment_id": 76130665, "body": "Hmm. I guess I don&#39;t read the implied &quot;a way that Cargo is aware of&quot; in the OP&#39;s question."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1497513785, "creation_date": 1497513785, "answer_id": 44561952, "question_id": 44561643, "link": "https://stackoverflow.com/questions/44561643/how-can-i-make-two-features-enabled-lead-to-a-conflict-in-rust/44561952#44561952", "title": "How can I make two features enabled lead to a conflict in Rust?", "body": "<p>Fundamentally, you can't.  Cargo features are additive, and features can be enabled by any crate in the dependency tree.  There's an implicit assumption on the part of Cargo that it is <em>always</em> valid to enable additional features.</p>\n\n<p>What's more, features aren't simply requests, they are <em>demands</em>.  If one crate demands <code>feature_1</code>, and another crate demands <code>feature_2</code>, you've got two crates that cannot possibly work together.  Cargo (and Rust itself) go to some lengths to try and make such situations difficult to create.</p>\n\n<p>The best solution is to change how your crate is written such that both features can be enabled simultaneously.  If that's really impossible, the best you can do is prevent compilation from succeeding.  This can be done either with a build script for your crate that detects incompatible features and fails, or by placing non-compiling code in your crate that is only enabled when incompatible features are enabled.</p>\n"}, {"tags": [], "owner": {"reputation": 36, "user_id": 2623034, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1034519ea68c6e9379f695c18ad299f9?s=128&d=identicon&r=PG&f=1", "display_name": "Ithinuel", "link": "https://stackoverflow.com/users/2623034/ithinuel"}, "is_accepted": false, "score": 0, "last_activity_date": 1611429522, "creation_date": 1611429522, "answer_id": 65863419, "question_id": 44561643, "link": "https://stackoverflow.com/questions/44561643/how-can-i-make-two-features-enabled-lead-to-a-conflict-in-rust/65863419#65863419", "title": "How can I make two features enabled lead to a conflict in Rust?", "body": "<p>For what it's worth, I opted to use this approach:</p>\n<pre><code>#[cfg(all(feature = &quot;feature_1&quot;, feature = &quot;feature_2&quot;))]\ncompile_error!(&quot;Feature 1 and 2 are mutually exclusive and cannot be enabled together&quot;);\n</code></pre>\n<p>I hope it'll help others looking for a solution to the same problem.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 44561952, "answer_count": 2, "score": 4, "last_activity_date": 1611429522, "creation_date": 1497512834, "last_edit_date": 1497532895, "question_id": 44561643, "link": "https://stackoverflow.com/questions/44561643/how-can-i-make-two-features-enabled-lead-to-a-conflict-in-rust", "title": "How can I make two features enabled lead to a conflict in Rust?", "body": "<p>I have two features: <code>feature_1</code> and <code>feature_2</code>:</p>\n\n<pre><code>[features]\ndefault = [\"feature_1\"]\nfeature_1 = []\nfeature_2 = []\n</code></pre>\n\n<p>I want to let the user choose only one of them at a time because choosing both at the same time will lead to a duplicating of some important code and by some other reasons. How can I do that?</p>\n"}]