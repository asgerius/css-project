[{"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492644822, "post_id": 43507256, "comment_id": 74070128, "body": "I think <code>#![cfg(unix)]</code> away the example is cleanest..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492646425, "post_id": 43507256, "comment_id": 74070532, "body": "@kennytm I was wondering that - but won&#39;t an &quot;empty&quot; file cause a compilation error?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492648145, "post_id": 43507256, "comment_id": 74070923, "body": "@Shepmaster Hmm you&#39;re right. So that code needs to be additionally placed inside a <code>#[cfg] mod</code>, and <code>fn main()</code> forwards to the <code>mod</code>&#39;s &quot;main&quot;."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1492675625, "post_id": 43507256, "comment_id": 74081003, "body": "Yeah, that&#39;s what I meant by &quot;<i>most</i> of the ... source&quot; but in hindsight it wasn&#39;t crystal clear.  :-)"}], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 205, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1587437883, "creation_date": 1492641519, "last_edit_date": 1492644667, "question_id": 43507256, "link": "https://stackoverflow.com/questions/43507256/how-to-skip-a-library-crates-examples-depending-on-the-target-platform", "title": "How to skip a library crate&#39;s examples depending on the target platform?", "body": "<p>I have a Rust library <a href=\"https://github.com/jugglerchris/rust-html2text\" rel=\"nofollow noreferrer\">crate</a> which I only use on Linux, but I don't know of any reason it shouldn't work on Windows; however one of the examples is Unix-specific, so it the crate fails the build on AppVeyor.</p>\n\n<p>The reason is that there's a Unix-only dependency (<a href=\"https://crates.io/crates/termion\" rel=\"nofollow noreferrer\">Termion</a>) used by one of the examples, so when I used <a href=\"https://github.com/starkat99/appveyor-rust\" rel=\"nofollow noreferrer\">an AppVeyor template</a>, it fails to build that dev-dependency.</p>\n\n<p>So I made the dependency conditional:</p>\n\n<pre><code>[target.'cfg(unix)'.dev-dependencies]\ntermion = \"1.0\"\n</code></pre>\n\n<p>So far so good, but of course now that example fails on <code>extern crate termion</code>.</p>\n\n<p>What I need is to just not build that example on non-Unix-like targets.  I was hoping something like:</p>\n\n<pre><code>[[target.'cfg(unix)'.example]]\nname = \"foo\"\n</code></pre>\n\n<p>would work, but I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused manifest key: target.cfg(unix).example\nerror: no example target named `foo`\n</code></pre>\n\n<p>Another promising way forward was Cargo's <a href=\"http://doc.crates.io/manifest.html#the-required-features-field-optional\" rel=\"nofollow noreferrer\">required-features</a>, but as of writing <a href=\"https://github.com/tensorflow/rust/issues/64#issuecomment-284256802\" rel=\"nofollow noreferrer\">it's apparently not in stable Cargo</a>, which means that doesn't help me checking that it works on stable Rust on Windows.</p>\n\n<p>The last option I can think of is to <code>#[cfg(unix)]</code> away most of the example's source, turning it into a stub on Windows, but I'd really like a cleaner way of doing it.</p>\n\n<p>Is there some existing way of skipping an example on some unsupported targets that works with current stable Rust/Cargo?</p>\n"}, {"tags": ["multithreading", "rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1492638753, "post_id": 43506255, "comment_id": 74068122, "body": "<i>The answer is rather obvious, IMHO</i> \u2014 if the answer were obvious, people wouldn&#39;t need to ask the question ^_^"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492638838, "post_id": 43506255, "comment_id": 74068159, "body": "@Shepmaster It&#39;s a valid jibe, but people also ask questions to confirm something or to vent their frustrations, et cetera.  = )   By saying that the answer is obvious I&#39;m stating that the matter is simple, no need to overthink it. Besides, &quot;Elementary, my dear Watson&quot;  : )"}, {"owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "edited": false, "score": 1, "creation_date": 1492678482, "post_id": 43506255, "comment_id": 74082789, "body": "Alright! I understood the motivation behind the parking scheme, but I didn&#39;t realize that I had to handle the <code>park</code>ing stuff manually (alrhough it makes sense - how would <code>futures</code> know when the value is ready?). Thanks!"}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571110875, "post_id": 43506255, "comment_id": 103121064, "body": "When I read it the first time, I really don&#39;t understand what&#39;s park()/unpark() mean, now the function has changed it&#39;s name to current()/notify(). Thanks to @Shepmaster for answer my question again.  To someone may not very understand this, you could read  <a href=\"https://stackoverflow.com/questions/58377995/why-is-my-future-implementation-blocked-after-it-is-polled-once-and-notready/58378572\" title=\"why is my future implementation blocked after it is polled once and notready\">stackoverflow.com/questions/58377995/&hellip;</a> for more."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 6, "last_activity_date": 1493204965, "last_edit_date": 1493204965, "creation_date": 1492636765, "answer_id": 43506255, "question_id": 43503953, "link": "https://stackoverflow.com/questions/43503953/why-is-futurepoll-not-called-repeatedly-after-returning-notready/43506255#43506255", "title": "Why is `Future::poll` not called repeatedly after returning `NotReady`?", "body": "<p>Why would you need to park a waiting future instead of polling it repeatedly? The answer is rather obvious, IMHO. Because at the end of the day it's faster and more efficient!</p>\n\n<p>To repeatedly poll a future (which might be dubbed \"<em>busy-waiting</em>\") the library would have to decide whether to do it often or seldom and neither answer is satisfactory. Do it often and you're wasting the CPU cycles, do it seldom and the code is slow to react.</p>\n\n<p>So yeah, you need to park the task when you're waiting for something and then unpark it when you've done waiting. Like this:</p>\n\n<pre><code>#![allow(deprecated)]\n\nextern crate futures;\n\nuse std::sync::{Arc, Mutex};\nuse futures::*;\nuse futures::task::{park, Task};\n\nstruct Status {\n    ready: bool,\n    task: Option&lt;Task&gt;,\n}\n\n#[allow(dead_code)]\nstruct F(Arc&lt;Mutex&lt;Status&gt;&gt;);\n\nimpl Future for F {\n    type Item = ();\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n        println!(\"Check if flag is set\");\n        let mut status = self.0.lock().expect(\"!lock\");\n        if status.ready {\n            Ok(Async::Ready(()))\n        } else {\n            status.task = Some(park());\n            Ok(Async::NotReady)\n        }\n    }\n}\n\n#[test]\nfn test() {\n    let flag = Arc::new(Mutex::new(Status {\n                                       ready: false,\n                                       task: None,\n                                   }));\n    let future = F(flag.clone());\n    ::std::thread::spawn(move || {\n        ::std::thread::sleep_ms(10);\n        println!(\"set flag\");\n        let mut status = flag.lock().expect(\"!lock\");\n        status.ready = true;\n        if let Some(ref task) = status.task {\n            task.unpark()\n        }\n    });\n    let result = future.wait();\n    println!(\"result: {:?}\", result);\n}\n</code></pre>\n\n<p>Note that <code>Future::poll</code> is doing several things here: it's checking for an external condition and it's parking the task, so it's possible to have a <em>race</em>, like when:</p>\n\n<ol>\n<li>the <code>poll</code> checks the variable and finds it to be <code>false</code>;  </li>\n<li>the outer code sets the variable to <code>true</code>;  </li>\n<li>the outer code checks if the task is parked and finds that it's not;  </li>\n<li>the <code>poll</code> parks the task, but boom! it is too late, nobody is going to unpark it any longer.  </li>\n</ol>\n\n<p>In order to avoid any races, I've used a <code>Mutex</code> to synchronize these interactions.</p>\n\n<p>P.S. If all you need is to wrap a thread result into a <code>Future</code> then consider using the <a href=\"https://docs.rs/futures/0.1.13/futures/sync/oneshot/index.html\" rel=\"nofollow noreferrer\"><code>oneshot</code></a> channel: it has the <a href=\"https://docs.rs/futures/0.1.13/futures/sync/oneshot/struct.Receiver.html\" rel=\"nofollow noreferrer\"><code>Receiver</code></a> that implements the <code>Future</code> interface already.</p>\n"}], "owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 821, "favorite_count": 3, "accepted_answer_id": 43506255, "answer_count": 1, "score": 5, "last_activity_date": 1580660646, "creation_date": 1492628219, "last_edit_date": 1580660646, "question_id": 43503953, "link": "https://stackoverflow.com/questions/43503953/why-is-futurepoll-not-called-repeatedly-after-returning-notready", "title": "Why is `Future::poll` not called repeatedly after returning `NotReady`?", "body": "<p>Consider the following code</p>\n\n<pre><code>extern crate futures; // v0.1 (old)\n\nuse std::sync::{atomic, Arc};\nuse futures::*;\n\nstruct F(Arc&lt;atomic::AtomicBool&gt;);\n\nimpl Future for F {\n    type Item = ();\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n        println!(\"Check if flag is set\");\n        if self.0.load(atomic::Ordering::Relaxed) {\n            Ok(Async::Ready(()))\n        } else {\n            Ok(Async::NotReady)\n        }\n    }\n}\n\nfn main() {\n    let flag = Arc::new(atomic::AtomicBool::new(false));\n    let future = F(flag.clone());\n    ::std::thread::spawn(move || {\n        ::std::thread::sleep_ms(10);\n        println!(\"set flag\");\n        flag.store(true, atomic::Ordering::Relaxed);\n    });\n    // ::std::thread::sleep_ms(20);\n    let result = future.wait();\n    println!(\"result: {:?}\", result);\n}\n</code></pre>\n\n<p>The spawned thread sets a flag, which the future waits for.\nWe also sleep the spawned thread, so the initial <code>.poll()</code> call from <code>.wait()</code> is before the flag is set. This causes <code>.wait()</code> to block (seemingly) indefinitely. If we uncomment the other <code>thread::sleep_ms</code>, <code>.wait()</code> returns, and prints out the result (<code>()</code>).</p>\n\n<p>I would expect the current thread to try to resolve the future by calling <code>poll</code> multiple times, since we're blocking the current thread. However, this is not happening.</p>\n\n<p>I have tried to read <a href=\"https://tokio.rs/docs/going-deeper/tasks/\" rel=\"nofollow noreferrer\">some docs</a>, and it seems like the problem is that the thread is <code>park</code>ed after getting <code>NotReady</code> from the <code>poll</code> the first time. However, it is not clear to me <em>why</em> this is, or how it is possible to work around this.</p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16572, "user_id": 83741, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG", "display_name": "Alexander Torstling", "link": "https://stackoverflow.com/users/83741/alexander-torstling"}, "edited": false, "score": 0, "creation_date": 1492628922, "post_id": 43504060, "comment_id": 74062703, "body": "Thank you very much, I would not have been able to spot that one on my own :) Do you know why Sub is implemented for references? More general?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 16572, "user_id": 83741, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG", "display_name": "Alexander Torstling", "link": "https://stackoverflow.com/users/83741/alexander-torstling"}, "edited": false, "score": 1, "creation_date": 1492629291, "post_id": 43504060, "comment_id": 74062936, "body": "@AlexanderTorstling the implementation of <code>sub</code> is just <code>self.difference(rhs).cloned().collect()</code> (just like your construction of <code>s1</code>/<code>s2</code>!), and <code>difference</code> takes references. Why that takes references, yeah, I&#39;d assume it&#39;s for flexibility - having a reference is more common. You could always write your own little wrappers that used the by-value iterator if the memory savings seemed worth it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1492628622, "creation_date": 1492628622, "answer_id": 43504060, "question_id": 43503853, "link": "https://stackoverflow.com/questions/43503853/subtract-unicase-hashsets/43504060#43504060", "title": "Subtract UniCase HashSets", "body": "<p>As you can see from <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\">the documentation</a>, <code>Sub</code> is implemented for <strong>references</strong> to <code>HashMap</code>s:</p>\n\n<pre><code>impl&lt;'a, 'b, T, S&gt; Sub&lt;&amp;'b HashSet&lt;T, S&gt;&gt; for &amp;'a HashSet&lt;T, S&gt; \n    where T: Eq + Hash + Clone,\n          S: BuildHasher + Default,\n</code></pre>\n\n<p>Taking explicit references works:</p>\n\n<pre><code>extern crate unicase;\n\nuse unicase::UniCase;\nuse std::collections::HashSet;\n\nfn main() {\n    let a = UniCase(\"a\".to_owned());\n    let b = UniCase(\"b\".to_owned());\n    let s1: HashSet&lt;_&gt; = [a.clone()].iter().cloned().collect();\n    let s2: HashSet&lt;_&gt; = [a, b].iter().cloned().collect();\n    let s3 = &amp;s2 - &amp;s1;\n    println!(\"{:?}\", s3);\n}\n</code></pre>\n\n<p>There's no need to specify the inner type of <code>s1</code> or <code>s2</code> but you do have to clone <code>a</code> as it's moved into the array.</p>\n"}], "owner": {"reputation": 16572, "user_id": 83741, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG", "display_name": "Alexander Torstling", "link": "https://stackoverflow.com/users/83741/alexander-torstling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 43504060, "answer_count": 1, "score": 3, "last_activity_date": 1492628622, "creation_date": 1492627855, "last_edit_date": 1492628362, "question_id": 43503853, "link": "https://stackoverflow.com/questions/43503853/subtract-unicase-hashsets", "title": "Subtract UniCase HashSets", "body": "<p>I'm trying to run the following code:</p>\n\n<pre><code>extern crate unicase;\n\nuse unicase::UniCase; \nuse std::collections::HashSet;\n\nfn main() {\n    let a = UniCase(\"a\".to_owned());\n    let b = UniCase(\"b\".to_owned());\n    let s1: HashSet&lt;UniCase&lt;String&gt;&gt; = [a].iter().cloned().collect();\n    let s2: HashSet&lt;UniCase&lt;String&gt;&gt; = [a, b].iter().cloned().collect();\n    let s3 = s2 - s1; \n}\n</code></pre>\n\n<p>(<a href=\"https://play.integer32.com/?gist=cc0fba4feaacc1ceaabbb4c4fd1802ed\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>And get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `-` cannot be applied to type `std::collections::HashSet&lt;unicase::UniCase&lt;std::string::String&gt;&gt;`\n</code></pre>\n\n<p>As far as I can see, the requirement for <code>Sub</code> between <code>HashSets</code> is that the contained type implements <code>Eq + Hash + Clone</code>, which <code>UniCase</code> seems to do. Any pointers? </p>\n"}, {"tags": ["gdb", "rust", "lldb"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492610095, "post_id": 43497466, "comment_id": 74049780, "body": "Idiomatic Rust uses <code>PascalCase</code> for structs / enums / enum variants. Since the casing of your types isn&#39;t important to the question, I&#39;ve changed them, which also improves the code highlighting."}], "answers": [{"comments": [{"owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1492634057, "post_id": 43499983, "comment_id": 74065790, "body": "I am use GNU gdb (GDB) 7.12.1: &#39;(gdb) p &amp;x.0.id&#39; prints  &#39;Rust debug format has changed&#39;"}, {"owner": {"reputation": 18871, "user_id": 1442050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e975c669f2ce0f2be4613f1e123864b3?s=128&d=identicon&r=PG", "display_name": "Tom Tromey", "link": "https://stackoverflow.com/users/1442050/tom-tromey"}, "reply_to_user": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1492643365, "post_id": 43499983, "comment_id": 74069685, "body": "What version of rust are you using?  It&#39;s probably a gdb bug but it&#39;s hard to know for sure.  I can try to reproduce it though."}, {"owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1492678811, "post_id": 43499983, "comment_id": 74083014, "body": "rustc 1.18.0-nightly (452bf0852 2017-04-19)"}, {"owner": {"reputation": 18871, "user_id": 1442050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e975c669f2ce0f2be4613f1e123864b3?s=128&d=identicon&r=PG", "display_name": "Tom Tromey", "link": "https://stackoverflow.com/users/1442050/tom-tromey"}, "reply_to_user": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1492705523, "post_id": 43499983, "comment_id": 74103271, "body": "You need a newer gdb.  I&#39;m not sure exactly when this was fixed, maybe back in October.  Anyway, gdb 7.12 has the bug, but my gdb build from git does not."}], "tags": [], "owner": {"reputation": 18871, "user_id": 1442050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e975c669f2ce0f2be4613f1e123864b3?s=128&d=identicon&r=PG", "display_name": "Tom Tromey", "link": "https://stackoverflow.com/users/1442050/tom-tromey"}, "is_accepted": true, "score": 6, "last_activity_date": 1492616137, "last_edit_date": 1492616137, "creation_date": 1492615557, "answer_id": 43499983, "question_id": 43497466, "link": "https://stackoverflow.com/questions/43497466/how-to-walk-through-rust-enum-fields-in-gdb-or-lldb/43499983#43499983", "title": "How to walk through Rust enum fields in GDB or LLDB?", "body": "<p>In a recent GDB that has built-in Rust debugging support, you can use Rust-ish syntax:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(gdb) p &amp;x.0.id\n$3 = (i32 *) 0x7fffffffe0f0\n</code></pre>\n\n<p>GDB knows which variant of an enum is in use, so <code>x.0</code> names the <code>Foo</code> in <code>x</code> (because <code>Variant</code> is a tuple).  The <code>.id</code> names the <code>i32</code>, and <code>&amp;</code> takes the address.</p>\n"}], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 658, "favorite_count": 1, "accepted_answer_id": 43499983, "answer_count": 1, "score": 4, "last_activity_date": 1492616137, "creation_date": 1492609240, "last_edit_date": 1492609927, "question_id": 43497466, "link": "https://stackoverflow.com/questions/43497466/how-to-walk-through-rust-enum-fields-in-gdb-or-lldb", "title": "How to walk through Rust enum fields in GDB or LLDB?", "body": "<p>I have this code:</p>\n\n<pre><code>struct Foo {\n    id: i32,\n}\nenum Bar {\n    Variant(Foo),\n}\n\nfn main() {\n    let x = Bar::Variant(Foo { id: 100 });\n    println!(\"set breakpoint here\");\n}\n</code></pre>\n\n<p>How can I print the memory address of the <code>Foo</code> instance? </p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1492598145, "creation_date": 1492598145, "answer_id": 43493257, "question_id": 43493129, "link": "https://stackoverflow.com/questions/43493129/how-does-asref-work-with-str/43493257#43493257", "title": "How does AsRef work with str?", "body": "<p>If you check the <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\">documentation for <code>AsRef</code></a>, you will see that it lists the following implementation:</p>\n\n<pre><code>impl&lt;'a, T, U&gt; AsRef&lt;U&gt; for &amp;'a T where T: AsRef&lt;U&gt; + ?Sized, U: ?Sized\n</code></pre>\n\n<p>That is, <code>str</code> implementing <code>AsRef&lt;Path&gt;</code> means that <code>&amp;str</code> <em>also</em> implements <code>AsRef&lt;Path&gt;</code>.</p>\n"}], "owner": {"reputation": 1039, "user_id": 1662717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b57fce01edf6719c6d909ab02539bcf7?s=128&d=identicon&r=PG", "display_name": "Karata", "link": "https://stackoverflow.com/users/1662717/karata"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1257, "favorite_count": 0, "accepted_answer_id": 43493257, "answer_count": 1, "score": 4, "last_activity_date": 1492598665, "creation_date": 1492597841, "last_edit_date": 1492598665, "question_id": 43493129, "link": "https://stackoverflow.com/questions/43493129/how-does-asref-work-with-str", "title": "How does AsRef work with str?", "body": "<p>I want to write a trait which could take a string slice directly:</p>\n\n<pre><code>use std::path::Path;\n\ntrait Trait1 {}\n\nimpl Trait1 for str {}\n// impl&lt;'a&gt; Trait1 for &amp;'a str {}\n\nfn run&lt;T: Trait1&gt;(_: T) {}\nfn run1&lt;T: AsRef&lt;Path&gt;&gt;(_: T) {}\n\nfn main() {\n    // E0277: the trait bound `&amp;str: Trait1` is not satisfied\n    // run::&lt;&amp;str&gt;(\"sf\");\n    run1::&lt;&amp;str&gt;(\"sf\");\n}\n</code></pre>\n\n<p>Note that </p>\n\n<pre><code>run::&lt;&amp;str&gt;(\"sf\");\n</code></pre>\n\n<p>won't compile unless <code>Trait1</code> is also implemented for <code>&amp;str</code>. However, <code>AsRef</code> works despite also <a href=\"https://doc.rust-lang.org/src/std/path.rs.html#2161-2165\" rel=\"nofollow noreferrer\">being implemented</a> for <code>str</code> only. Is there anything special about AsRef?</p>\n"}, {"tags": ["rust", "intrinsics"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1492561232, "post_id": 43484145, "comment_id": 74024208, "body": "The book has a section precisely on <a href=\"https://doc.rust-lang.org/stable/book/concurrency.html#background-send-and-sync\" rel=\"nofollow noreferrer\">Send and Sync</a>. Is there something in it that you find unclear?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492561690, "post_id": 43484145, "comment_id": 74024321, "body": "Same question, adding the API documentation for <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a> and <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><code>Sync</code></a>."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1492561929, "post_id": 43484145, "comment_id": 74024372, "body": "- <i>Within the latter, there are a few types that implement them, but I can&#39;t find any &quot;consumers&quot;</i> - I&#39;d say it&#39;s a good practice to <b>document</b> thread-safety. With <code>Send</code> and <code>Sync</code>. cf. <a href=\"https://www.ibm.com/developerworks/library/j-jtp09263/\" rel=\"nofollow noreferrer\">ibm.com/developerworks/library/j-jtp09263</a>"}, {"owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1492562223, "post_id": 43484145, "comment_id": 74024447, "body": "@ArtemGr @Shepmaster @E_net4 I added an alternative phrasing, I hope my question is now clearer. Note that I&#39;m specifically referring to their role <i>in <code>libcore</code></i>."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1492562636, "post_id": 43484145, "comment_id": 74024541, "body": "@rvidal Let&#39;s narrow the question to one specific type that you think would be a good example."}], "answers": [{"comments": [{"owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "edited": false, "score": 0, "creation_date": 1492607902, "post_id": 43491009, "comment_id": 74047974, "body": "<code>[...] that libcore does not use multi-threading itself is orthogonal [...]</code> That could be the case but I suspect is not. After all they are lang items, so they <i>probably</i> fulfill some role during compilation independent of <code>libstd</code>. Notice that the reference I linked above says explicitly so: that <code>Sync</code> is somehow required for statics (<a href=\"https://play.rust-lang.org/?gist=db22b27d09cf55556a2f5432dc18c698&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">example</a>). Now my question is: does this <i>actually</i> serve a purpose if you don&#39;t have threads, or is it just scaffolding for <code>libstd</code>? And what about <code>Send</code>?"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1492609214, "post_id": 43491009, "comment_id": 74049078, "body": "- &quot;<i>or is it just scaffolding for libstd</i>&quot; - threads != libstd."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "edited": false, "score": 1, "creation_date": 1492612165, "post_id": 43491009, "comment_id": 74051525, "body": "@rvidal: <code>Sync</code> and <code>Send</code> being lang items is what I mean by <i>the compiler knows them</i>. In order to have data-race freedom, all types must be analyzed for their <code>Sync</code> and <code>Send</code> properties, even the core types. Of course, these properties and this analysis are kinda wasted if you do not actually used multiple threads: they then serve no purpose. On the other hand, they also impose no run-time penalty and probably only a minimal compile-time penalty so it&#39;s not seen as a big deal. And now, whether you have multi-threading from libstd or <i>some other source</i>, you have data-race freedom."}, {"owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1492614672, "post_id": 43491009, "comment_id": 74053483, "body": "@ArtemGr <code>threads != libstd</code> I am aware of that. The complete phrasing would be &quot;scaffolding for an OS-aware std-like library that would include threads (like <code>libstd</code> itself)&quot;. I just don&#39;t have enough characters ;)"}, {"owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "edited": false, "score": 0, "creation_date": 1492614837, "post_id": 43491009, "comment_id": 74053604, "body": "@MatthieuM. Thanks for your answer. Does that mean then that the compilation error I linked in my previous comment is somehow &quot;spurious&quot;, if you are, say, doing bare-metal programming?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "edited": false, "score": 0, "creation_date": 1492615158, "post_id": 43491009, "comment_id": 74053829, "body": "@rvidal: It seems so to me. There are rough edges around bare-metal targets still, and I would expect the ability to hint to the compiler that threading should be disabled is one of them."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1492629592, "post_id": 43491009, "comment_id": 74063113, "body": "@MatthieuM. Nitpick: <code>Send</code> and <code>Sync</code> remain lang items to support things like <code>&amp;(Trait + Send)</code>. But analyzing whether a type is Send/Sync is reasoned with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\" rel=\"nofollow noreferrer\">auto-traits (OIBIT)</a> which doesn&#39;t need special compiler knowledge about the trait."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1492671550, "last_edit_date": 1492671550, "creation_date": 1492592327, "answer_id": 43491009, "question_id": 43484145, "link": "https://stackoverflow.com/questions/43484145/what-is-the-role-of-send-and-sync-in-libcore/43491009#43491009", "title": "What is the role of Send and Sync in libcore?", "body": "<blockquote>\n  <p>if <code>Send</code> and <code>Sync</code> are about thread-safety, what role do they fulfill in <code>libcore</code> where there is no notion of multi-threading?</p>\n</blockquote>\n\n<p><code>libcore</code> is about setting the core concepts of the language; <code>Send</code> and <code>Sync</code> are core to the language: the compiler knows and reasons about them<sup>1</sup>.</p>\n\n<p>The fact that <code>libcore</code> does not <em>use</em> multi-threading itself is orthogonal and has no incidence on this choice.</p>\n\n<hr>\n\n<p>As an aside, do consider that just because <code>libcore</code> does not have multi-threading does not mean that one cannot built an alternative standard library on top of <code>libcore</code> that does have multi-threading. That is, after all, the purpose of separating <code>core</code> from <code>std</code>.</p>\n\n<hr>\n\n<p><sup>1</sup> <em>As mentioned by @kennytm in comments, Rust has a user-accessible mechanism to allow automatically propagating marker traits based on whether said traits are implemented by all a structure fields, or not. This is slightly insufficient for <code>Send</code> and <code>Sync</code>, though, as it does not support <code>&amp;(Trait + Send)</code>, and therefore the compiler requires special knowledge about those two, which is why they are lang items.</em></p>\n"}, {"tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": false, "score": 1, "last_activity_date": 1492714175, "creation_date": 1492714175, "answer_id": 43527587, "question_id": 43484145, "link": "https://stackoverflow.com/questions/43484145/what-is-the-role-of-send-and-sync-in-libcore/43527587#43527587", "title": "What is the role of Send and Sync in libcore?", "body": "<p><a href=\"http://manishearth.github.io/blog/2017/01/11/rust-tidbits-what-is-a-lang-item/\" rel=\"nofollow noreferrer\">The compiler will crash if you declare a <code>static</code> variable and no <code>Sync</code> trait exists</a>.</p>\n\n<p>After all, just because we don't have libstd's implementation of threads in play doesn't mean there's no concurrent access going on (if you're bare metal, you probably have interrupt handlers to worry about). So, for static variables to be safe, the compiler needs to know if the static variable can be safely accessed concurrently or not.</p>\n"}], "owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 0, "accepted_answer_id": 43491009, "answer_count": 2, "score": 0, "last_activity_date": 1492714175, "creation_date": 1492560424, "last_edit_date": 1492608108, "question_id": 43484145, "link": "https://stackoverflow.com/questions/43484145/what-is-the-role-of-send-and-sync-in-libcore", "title": "What is the role of Send and Sync in libcore?", "body": "<p><code>Sync</code> and <code>Send</code> play a big role in the <code>thread</code> API from the standard library. However, they are also included in <code>libcore</code>. Within the latter, there are a few types that implement them, but I can't find any \"consumers\", that is, some API that would use those traits as bounds.</p>\n\n<p>Do they have some special behavior/meaning that the compiler knows about? Notice that they are lang items, so they are in some way special. <code>Sync</code> seems to be <a href=\"https://manishearth.github.io/blog/2017/01/11/rust-tidbits-what-is-a-lang-item\" rel=\"nofollow noreferrer\">related to statics</a>, but the link does not go into much detail.</p>\n\n<p><strong>TL;DR:</strong> if <code>Send</code> and <code>Sync</code> are about thread-safety, what role do they fulfill in <code>libcore</code> where there is no notion of multi-threading? What semantics does the compiler assign to them as lang items?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1492552034, "post_id": 43482581, "comment_id": 74021463, "body": "It looks to me like the <code>foo</code> is being used in a thread that remains past the program termination. Cf. <a href=\"https://users.rust-lang.org/t/stopping-a-thread/6328\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/stopping-a-thread/6328</a>. I wonder if <a href=\"http://stackoverflow.com/questions/26199926/how-to-terminate-or-suspend-a-rust-thread-from-another-thread\" title=\"how to terminate or suspend a rust thread from another thread\">stackoverflow.com/questions/26199926/&hellip;</a> is sufficient to answer your question?"}], "answers": [{"comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 3, "creation_date": 1492559137, "post_id": 43483682, "comment_id": 74023705, "body": "- &quot;<i>However, I don&#39;t see any implementation for Drop for CpuFuture</i>&quot; - The <code>Drop</code> is in the <code>Receiver</code> (cf. <a href=\"https://github.com/alexcrichton/futures-rs/blob/master/src/sync/oneshot.rs\" rel=\"nofollow noreferrer\">github.com/alexcrichton/futures-rs/blob/master/src/sync/&hellip;</a>)."}, {"owner": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492588956, "post_id": 43483682, "comment_id": 74034519, "body": "So, there&#39;s really no way to call destructors automatically with futures?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492605328, "post_id": 43483682, "comment_id": 74046045, "body": "@MichaelPankov I think that&#39;s the wrong angle to look at it from. In Rust, destructors aren&#39;t guaranteed to run, but when they are it&#39;s always automatically. Futures are no different - the destructor will be called when the variable naturally goes out of scope. Your problem centers around the fact that you&#39;ve started a thread that is still performing work when the main thread exits. The problem is completely orthogonal to futures."}, {"owner": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492696485, "post_id": 43483682, "comment_id": 74096489, "body": "@Shepmaster somehow I got the impression (seems wrong now) that the entire purpose of future-based cpupool is to be able to abort the work it started via future, if the future isn&#39;t needed anymore. I then though aborting means dropping everything that was needed for that work. I actually thought that the system is similar to userspace scheduler - that it has access to how long a thread is executing. Destruction of pool would mean stopping all threads. Does anything like that exist for Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492698911, "post_id": 43483682, "comment_id": 74098509, "body": "@MichaelPankov AFAIK, futures <i>are</i> what you want, you are just trying to mix two competing abstractions (see <a href=\"http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/\" rel=\"nofollow noreferrer\">What Color is Your Function?</a>). Futures have <i>no ability</i> to stop a <code>thread::sleep</code> (and neither does anything else). The solution is to build everything with an eye to futures. This is why there&#39;s a <code>timer.sleep</code> \u2014 that builds something that &quot;sleeps&quot; for a while but is futures-aware."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492699122, "post_id": 43483682, "comment_id": 74098686, "body": "@MichaelPankov A &quot;userspace scheduler&quot; sounds like <i>green threads</i>, which the Rust standard library used to have but removed. It&#39;s even mentioned in <a href=\"https://aturon.github.io/blog/2016/08/11/futures/\" rel=\"nofollow noreferrer\">the blog post introducing futures</a>. To reiterate: there is <b>no safe way</b> to abort an operating system thread; there&#39;s simply not enough control. Userspace &quot;threads&quot; need to communicate with the userspace &quot;scheduler&quot;, and one way of doing that is via a future. If you don&#39;t communicate, there&#39;s nothing to be done."}, {"owner": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "edited": false, "score": 0, "creation_date": 1492791302, "post_id": 43483682, "comment_id": 74146983, "body": "@Shepmaster thing is, <code>thread::sleep</code> is there as a stub of some &quot;uninterruptable&quot; work. I understand that if my work is cyclic, I can at least check some shared flag and stop if it&#39;s set. But what about interrupting a generic computation?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1492568267, "last_edit_date": 1495540947, "creation_date": 1492557059, "answer_id": 43483682, "question_id": 43482581, "link": "https://stackoverflow.com/questions/43482581/how-to-drop-the-environment-of-a-closure-passed-to-futures-cpupool/43483682#43483682", "title": "How to drop the environment of a closure passed to futures-cpupool?", "body": "<p>The <a href=\"https://docs.rs/futures-cpupool/0.1.5/futures_cpupool/struct.CpuPool.html\" rel=\"nofollow noreferrer\">documentation for <code>CpuPool</code> states</a>:</p>\n\n<blockquote>\n  <p>The worker threads associated with a thread pool are kept alive so long as there is an open handle to the <code>CpuPool</code> <strong>or there is work running on them</strong>. Once all work has been drained and all references have gone away the worker threads will be shut down.</p>\n</blockquote>\n\n<p>Additionally, you transfer ownership of <code>foo</code> from <code>main</code> to the closure, which then transfers it to <code>work</code>. <code>work</code> will drop <code>foo</code> at the end of the block. However, <code>work</code> is also performing a <strong>blocking</strong> sleep operation. This sleep counts as work running on the thread.</p>\n\n<p>The sleep is still going when the main thread exits, which immediately tears down the program, and all the threads, without any time to clean up.</p>\n\n<p>As pointed out in <a href=\"https://stackoverflow.com/q/26199926/155423\">How to terminate or suspend a Rust thread from another thread?</a> (and other questions in other languages), there's no safe way to terminate a thread.</p>\n\n<blockquote>\n  <p>I expected <code>foo</code> to be dropped as soon as timeout future resolves in <code>select</code>, as it's a part of environment of a closure, passed to dropped future.</p>\n</blockquote>\n\n<p>The <em>future</em> doesn't actually \"have\" the closure or <code>foo</code>. All it has is a handle to the thread:</p>\n\n<pre><code>pub struct CpuFuture&lt;T, E&gt; {\n    inner: Receiver&lt;thread::Result&lt;Result&lt;T, E&gt;&gt;&gt;,\n    keep_running_flag: Arc&lt;AtomicBool&gt;,\n}\n</code></pre>\n\n<p>Strangely, <a href=\"https://docs.rs/futures-cpupool/0.1.5/futures_cpupool/struct.CpuPool.html#method.spawn\" rel=\"nofollow noreferrer\">the docs say</a>:</p>\n\n<blockquote>\n  <p>If the returned future is dropped then this <code>CpuPool</code> will <strong>attempt to cancel the computation</strong>, if possible. That is, if the computation is in the middle of working, it will be interrupted <strong>when possible</strong>.</p>\n</blockquote>\n\n<p>However, I don't see any implementation for <code>Drop</code> for <code>CpuFuture</code>, <del>so I don't see how it could be possible (or safe)</del>. Instead of <code>Drop</code>, the threadpool itself runs a <code>Future</code>. When that future is polled, it checks to see if the receiver has been dropped. This behavior is provided by the <code>oneshot::Receiver</code>. However, this has nothing to do with threads, which are outside the view of the future.</p>\n"}], "owner": {"reputation": 3261, "user_id": 113134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd3877ba75ec0f883bdc21784f4124c7?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Pankov", "link": "https://stackoverflow.com/users/113134/michael-pankov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "accepted_answer_id": 43483682, "answer_count": 1, "score": 2, "last_activity_date": 1492568267, "creation_date": 1492551266, "last_edit_date": 1492555239, "question_id": 43482581, "link": "https://stackoverflow.com/questions/43482581/how-to-drop-the-environment-of-a-closure-passed-to-futures-cpupool", "title": "How to drop the environment of a closure passed to futures-cpupool?", "body": "<p>I have the following code:</p>\n\n<pre><code>extern crate futures;\nextern crate futures_cpupool;\nextern crate tokio_timer;\n\nuse std::time::Duration;\n\nuse futures::Future;\nuse futures_cpupool::CpuPool;\nuse tokio_timer::Timer;\n\nfn work(foo: Foo) {\n    std::thread::sleep(std::time::Duration::from_secs(10));\n}\n\n#[derive(Debug)]\nstruct Foo { }\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping Foo\");\n    }\n}\n\nfn main() {\n    let pool = CpuPool::new_num_cpus();\n\n    let foo = Foo { };\n\n    let work_future = pool.spawn_fn(|| {\n        let work = work(foo);\n\n        let res: Result&lt;(), ()&gt; = Ok(work);\n        res\n    });\n\n    println!(\"Created the future\");\n\n    let timer = Timer::default();\n    let timeout = timer.sleep(Duration::from_millis(750))\n        .then(|_| Err(()));\n\n    let select = timeout.select(work_future).map(|(win, _)| win);\n\n    match select.wait() {\n        Ok(()) =&gt; { },\n        Err(_) =&gt; { },\n    }\n}\n</code></pre>\n\n<p>It seems this code doesn't execute <code>Foo::drop</code> - no message is printed.</p>\n\n<p>I expected <code>foo</code> to be dropped as soon as <code>timeout</code> future resolves in <code>select</code>, as it's a part of environment of a closure, passed to dropped future.</p>\n\n<p>How to make it execute <code>Foo::drop</code>?</p>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1492546717, "post_id": 43481325, "comment_id": 74018729, "body": "With code, this might be a better fit for Code Review SE; here, it feels too vague and open-ended."}, {"owner": {"reputation": 2144, "user_id": 701260, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/660bb878ae25be5b78c87508f64e68f5?s=128&d=identicon&r=PG", "display_name": "Eren G&#252;ven", "link": "https://stackoverflow.com/users/701260/eren-g%c3%bcven"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1492546991, "post_id": 43481325, "comment_id": 74018873, "body": "Yes I though so too, but I didn&#39;t want to bog it down with multiple functions to carry a point. It&#39;s more of a general knowledge question. Casting types around to fit a statement is not necessarily problem specific, but more about the coding convention/best practices I thought."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1492547000, "post_id": 43481325, "comment_id": 74018886, "body": "I agree with @trentcl but encourage you to read <a href=\"https://codereview.meta.stackexchange.com/q/5777/32521\">A guide to Code Review for Stack Overflow users</a> first. The &quot;answer&quot; to your question as posed is &quot;maybe&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492547096, "post_id": 43481325, "comment_id": 74018939, "body": "For example, see <a href=\"http://stackoverflow.com/questions/43470280/how-to-store-a-bidirectional-relationship-between-two-variables-as-a-third-varia\">this question asked earlier today</a> where the accepted answer suggests using a <code>u8</code> or a <code>u16</code> in order to save memory. There&#39;s no &quot;one true answer&quot; for which size of variable you should use."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1492559706, "post_id": 43481325, "comment_id": 74023839, "body": "I still don&#39;t think this is a good question, especially without an example. There&#39;s not a &quot;preferred&quot; choice between <i>not having a lot of casts</i> and <i>using the narrowest applicable integer type</i>. The fact that you think there is, suggests to me that maybe your code is &quot;weird&quot; in some other, undescribed way (annotating types everywhere? not making use of generics?) but nobody reading this question can answer that for you."}], "answers": [{"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 5, "last_activity_date": 1492549241, "last_edit_date": 1492549241, "creation_date": 1492547881, "answer_id": 43481769, "question_id": 43481325, "link": "https://stackoverflow.com/questions/43481325/am-i-casting-integer-types-too-much/43481769#43481769", "title": "Am I casting integer types too much?", "body": "<blockquote>\n  <p>I always try to use the smallest possible (or most feasible) int type for the problem</p>\n</blockquote>\n\n<p>Here you are. Optimization. (Because why else would you do that?)</p>\n\n<p>Rust encourages you to think about the integer types. This leads to a better defined and explicit program behaviour, helps catch a certain type of bugs and lets you optimize.</p>\n\n<p>But coming from a language that wasn't that meticulous you'd likely to overdo it. That's how our mind often works: when we encounter some new ability or skill we try to use it everywhere.</p>\n\n<p>This is often a problem with Rust. The language would introduce programmers to certain new concepts (safe borrowing, zero-cost futures) and then as people we'd rush and jumble the things we had little experience with, borrowing ourselves into a corner or using the futures absolutely everywhere.</p>\n\n<p>You're trying to optimize your program, using the smallest possible integer type, even though you feel it makes your life less comfortable. If you're asking this question on stackoverflow then I'd go out on a limb and say, yes, you're casting too much!</p>\n\n<p>You probably know the Knuth's motto, that \"<em>premature optimization is the root of all evil</em>\".</p>\n\n<p>Don't let over-optimizing ruin your programming experience. Optimize only when you're comfortable with it. When you <em>want</em> to!</p>\n\n<p>If you're afraid of premature pessimization then save this fear for the algorithms. Remember that programming in most dynamic languages you don't have that much freedom to over-optimize and yet your dynamic language programs still work.</p>\n"}], "owner": {"reputation": 2144, "user_id": 701260, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/660bb878ae25be5b78c87508f64e68f5?s=128&d=identicon&r=PG", "display_name": "Eren G&#252;ven", "link": "https://stackoverflow.com/users/701260/eren-g%c3%bcven"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "accepted_answer_id": 43481769, "answer_count": 1, "score": -1, "last_activity_date": 1492549241, "creation_date": 1492546209, "last_edit_date": 1492547410, "question_id": 43481325, "link": "https://stackoverflow.com/questions/43481325/am-i-casting-integer-types-too-much", "title": "Am I casting integer types too much?", "body": "<p>I'm very new to Rust and I've been re-solving <a href=\"https://projecteuler.net/\" rel=\"nofollow noreferrer\">Project Euler</a> questions. The thing is, I realised that I kept casting integer types (mainly <code>i32</code>-<code>i64</code>) around to fit my statement; for iterators, in loops, for function inputs, for conditionals etc. Is it normal?</p>\n\n<p>I'm guessing I'm doing something wrong working with one-off functions going through PE and coming from mainly dynamically typed languages.</p>\n\n<p>I always try to use the smallest possible (or most feasible) integral type for the problem and I feel like I should just go with <code>i64</code> for everything and be done with it instead of so much casting around.</p>\n\n<p>Which is a better/recommended approach, blanket <code>i64</code> type or sensible integer types with casting in code?</p>\n\n<p><strong>edit</strong>: After the comments I wanted to clarify, this is not exactly a code-review query but about best practices and readability concerns as in which of the two choices are preferred. I reckon the performance impact of casting is negligible when not misused in loops.</p>\n\n<p>Unrelated PS: I was doing P4 with a twist of prime factors, turns out there are no palindromes that are a product of two 4-digit primes and the largest one from two 3-digit primes is 99899</p>\n"}, {"tags": ["rust", "channel", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492605541, "post_id": 43481068, "comment_id": 74046228, "body": "Welcome to Stack Overflow! Your question would be more likely to be answered in a reasonable amount of time if you provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. As it is right now, you are requiring that <i>each</i> potential answerer construct a complete program from scratch, <b>guessing</b> at the types of every variable you&#39;ve shown."}], "answers": [{"tags": [], "owner": {"reputation": 79, "user_id": 7886050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/300f3ff5cd87661d1444f663f38cb6a9?s=128&d=identicon&r=PG&f=1", "display_name": "jq-rs", "link": "https://stackoverflow.com/users/7886050/jq-rs"}, "is_accepted": true, "score": 1, "last_activity_date": 1492616691, "creation_date": 1492616691, "answer_id": 43500395, "question_id": 43481068, "link": "https://stackoverflow.com/questions/43481068/how-to-indefinitely-read-an-unbounded-channel-in-a-rust-tokio-task/43500395#43500395", "title": "How to indefinitely read an unbounded channel in a Rust Tokio task?", "body": "<p>The <code>for_each</code> way of handling is the best way, should work - and it works! It was debugged to be a problem in the tx side with the help of tokio-rs people in Gitter (thanks!) with simple test code.</p>\n\n<p>It seems to me that Rust was so advanced, that it actually knew to drop the task in this case: the logging output based on this confused me to actually think that problem was on rx side, although it was tx side problem all along.</p>\n"}], "owner": {"reputation": 79, "user_id": 7886050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/300f3ff5cd87661d1444f663f38cb6a9?s=128&d=identicon&r=PG&f=1", "display_name": "jq-rs", "link": "https://stackoverflow.com/users/7886050/jq-rs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "accepted_answer_id": 43500395, "answer_count": 1, "score": 2, "last_activity_date": 1492616691, "creation_date": 1492545315, "last_edit_date": 1492607073, "question_id": 43481068, "link": "https://stackoverflow.com/questions/43481068/how-to-indefinitely-read-an-unbounded-channel-in-a-rust-tokio-task", "title": "How to indefinitely read an unbounded channel in a Rust Tokio task?", "body": "<p>I assumed that <code>.for_each()</code> would do the trick, but it returns only the first (future) item from the channel and then returns, if the channel is empty. What would be the way to indefinitely read a channel in a task as <code>.for_each()</code> would do in non-Tokio/future context?</p>\n\n<pre><code>let tx_origs_reader = rx_chan.for_each(move |tx_orig| {\n    //save receiver side tx to db\n    let mut tx_origs_once = tx_origs_inner.borrow_mut();\n    tx_origs_once.push(tx_orig.clone());  \n    Ok(())\n});\nhandle.spawn(tx_origs_reader.then(|err| {\n    println!(\"This returns after first item without an error {:?}\", err);\n    Ok(())\n}));\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 4, "creation_date": 1492514102, "post_id": 43470280, "comment_id": 73995986, "body": "An unrelated note: Instead of <code>.expect(&quot;ERROR&quot;)</code>, you might as well use <code>.unwrap()</code>, which is easier on the eyes. The point of <code>expect()</code> is to provide a meaningful error message."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1492515924, "post_id": 43470280, "comment_id": 73997231, "body": "What is the actual error message provided by the compiler? &quot;Doesn&#39;t compile due to ownership shenanigans&quot; is not very useful."}, {"owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492516246, "post_id": 43470280, "comment_id": 73997478, "body": "@user4815162342 I reiterate, &quot;current experimental code&quot;. @E_net4 &quot;cannot borrow as mutable&quot;, pointing at <code>self.rels.get(target).expect(&quot;ERROR&quot;)</code>. I was kind of hoping someone would have a better solution. I cannot imagine this is how I am meant to be achieving this task."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1492516596, "post_id": 43470280, "comment_id": 73997735, "body": "Please edit your question to include further content."}, {"owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "edited": false, "score": 0, "creation_date": 1492517295, "post_id": 43470280, "comment_id": 73998248, "body": "Sure! What content are you after?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492518384, "post_id": 43470280, "comment_id": 73999030, "body": "I meant that you should include the compiler&#39;s error message (as precise as possible) in the question, and not in the comments."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1492520882, "post_id": 43470280, "comment_id": 74000991, "body": "@Quintus: By the way, shouldn&#39;t the random generation be <i>in the loop</i>? It seems that all countries will end up with an equal relationship score here."}, {"owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492522465, "post_id": 43470280, "comment_id": 74002272, "body": "@MatthieuM. Well spotted! Mea culpa. I never managed to get my code to run, so I didn&#39;t pick up on that."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1492520131, "creation_date": 1492520131, "answer_id": 43472812, "question_id": 43470280, "link": "https://stackoverflow.com/questions/43470280/how-to-store-a-bidirectional-relationship-between-two-variables-as-a-third-varia/43472812#43472812", "title": "How to store a bidirectional relationship between two variables as a third variable?", "body": "<p>The problem is that you are using the wrong method. <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>HashMap::get</code></a> does not allow you to mutate the result:</p>\n\n<pre><code>fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt; \n    where K: Borrow&lt;Q&gt;,\n          Q: Hash + Eq,\n</code></pre>\n\n<p>You want <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut\" rel=\"nofollow noreferrer\"><code>get_mut</code></a>:</p>\n\n<pre><code>fn get_mut&lt;Q: ?Sized&gt;(&amp;mut self, k: &amp;Q) -&gt; Option&lt;&amp;mut V&gt; \n    where K: Borrow&lt;Q&gt;,\n          Q: Hash + Eq,\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1492522247, "post_id": 43472915, "comment_id": 74002104, "body": "&quot;you should need more than 65,535 nations&quot;? :)"}, {"owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "edited": false, "score": 0, "creation_date": 1492522296, "post_id": 43472915, "comment_id": 74002141, "body": "That&#39;s a really clever solution, thank you! Using numbers definitely makes this easier to wrap my head around. So, for the getter, I can assume that the relationship between any two nations is stored in a <code>(lower ID, higher ID)</code> tuple, right? Also, thanks for pointing out the <code>get_mut</code> method - I&#39;m still wrapping my head around ownership in Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492523845, "post_id": 43472915, "comment_id": 74003444, "body": "FWIW, using a <code>u8</code> / <code>u16</code> / <code>u32</code> <a href=\"https://play.integer32.com/?gist=d4dba07dc00e07ce1c1a0b97d7e45281&amp;version=undefined\" rel=\"nofollow noreferrer\">all seem to have the same struct size</a> - 88 bytes."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492526090, "post_id": 43472915, "comment_id": 74005250, "body": "@Shepmaster: a <code>Vec&lt;u8&gt;</code> and a <code>Vec&lt;u32&gt;</code> will also have the same size, but its heap allocated array will have a different size. The same holds for <code>HashMap</code> (baring padding). Of course, since the buffer is internal it&#39;s a bit harder to check, and I am not sure whether <code>HashMap</code> is taking advantage of smaller keys. Bluss&#39; OrderedMap would as it uses a separate <code>Vec&lt;(K, V)&gt;</code>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1492536463, "last_edit_date": 1492536463, "creation_date": 1492520383, "answer_id": 43472915, "question_id": 43470280, "link": "https://stackoverflow.com/questions/43470280/how-to-store-a-bidirectional-relationship-between-two-variables-as-a-third-varia/43472915#43472915", "title": "How to store a bidirectional relationship between two variables as a third variable?", "body": "<p>First things first: the issue you have is that <code>get</code> returns an immutable reference, and you try to <code>insert</code> in there. You would want to use <code>get_mut</code> to get a mutable reference on which <code>insert</code> can be performed.</p>\n\n<hr>\n\n<p>However I would recommend altering the design:</p>\n\n<ol>\n<li>Storing a map name -> ID,</li>\n<li>Using ID as the key in the other maps.</li>\n</ol>\n\n<p>The main advantage of this scheme being that numerical IDs are much cheaper/efficient than Strings.</p>\n\n<pre><code>pub struct NationManager {\n    last_id: u32,\n    name_to_id: HashMap&lt;String, u32&gt;,\n    relationships: HashMap&lt;(u32, u32), i8&gt;, // (smaller ID, larger ID) -&gt; score\n}\n</code></pre>\n\n<p>Performing a look-up of the relationship between two countries will involve knowing their IDs (two look-ups in <code>name_to_id</code>) and then looking up the relationship score.</p>\n\n<p>The flattening of <code>relationships</code> would <em>tremendously</em> simplify your generation step as well:</p>\n\n<pre><code>impl NationManager {\n    fn generate_relationships(&amp;mut self) {\n        let random_rel: i8 = rand::thread_rng().gen_range(1, 101);\n        for source in 0..self.last_id {\n            for target in (source + 1)..self.last_id {\n                self.relationships.insert((source, target), random_rel);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><em>Note: actually, a domain analysis could let us use a much smaller ID as well; you shouldn't need more than 65,535 nations, so <code>u16</code> is definitely sufficient, and it's likely that <code>u8</code> (255 nations) would be sufficient as as well (there are 193 nations registered in the UN).</em></p>\n"}], "owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 0, "accepted_answer_id": 43472915, "answer_count": 2, "score": 0, "last_activity_date": 1492536463, "creation_date": 1492513059, "last_edit_date": 1492519820, "question_id": 43470280, "link": "https://stackoverflow.com/questions/43470280/how-to-store-a-bidirectional-relationship-between-two-variables-as-a-third-varia", "title": "How to store a bidirectional relationship between two variables as a third variable?", "body": "<p>I have an array of nations, and I want to generate the relationship between those nations, so that the relationship between nation A and nation B is always identical to the relationship between nation B and nation A.</p>\n\n<p>For example, Japan and Ecuador have a relationship value of 15. I want to be able to run both <code>get_relationship(\"Japan\", \"Ecuador\");</code> and <code>get_relationship(\"Ecuador\", \"Japan\");</code> and always get <code>15</code>. Ideally, I don't want to have to store this value twice, as I don't want to have to bother to keep it in sync.</p>\n\n<p>Below is my current experimental code. Note that I'm storing nations as a <code>HashMap</code> of <code>(name as String, Nation as struct)</code> for unrelated reasons, mainly so I can pull up the desired <code>Nation</code> object by name alone.</p>\n\n<pre><code>extern crate rand;\n\nuse std::collections::HashMap;\nuse rand::Rng;\n\nstruct Nation;\n\npub struct NationManager {\n    nations: HashMap&lt;String, Nation&gt;, // The string is the nation's name\n    rels: HashMap&lt;String, HashMap&lt;String, i8&gt;&gt;, // Again, both Strings are names\n}\n\nimpl NationManager {\n    fn generate_relationships(&amp;mut self) {\n        let mut random_rel: i8 = rand::thread_rng().gen_range(1, 101);\n        for (source, _) in &amp;self.nations {\n            for (target, _) in &amp;self.nations {\n                if source &gt; target {\n                    self.rels\n                        .get(source)\n                        .expect(\"ERROR\")\n                        .insert(target.clone(), random_rel);\n                } else if source &lt; target {\n                    self.rels\n                        .get(target)\n                        .expect(\"ERROR\")\n                        .insert(source.clone(), random_rel);\n                } else {\n                    continue;\n                }\n            }\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I don't think this is the best way to achieve the desired result, and it doesn't compile at the moment; is it actually possible to nest two <code>for</code> loops like this?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot borrow immutable borrowed content as mutable\n  --&gt; src/main.rs:19:21\n   |\n19 |                       self.rels\n   |  _____________________^ starting here...\n20 | |                         .get(source)\n21 | |                         .expect(\"ERROR\")\n   | |________________________________________^ ...ending here: cannot borrow as mutable\n\nerror: cannot borrow immutable borrowed content as mutable\n  --&gt; src/main.rs:24:21\n   |\n24 |                       self.rels\n   |  _____________________^ starting here...\n25 | |                         .get(target)\n26 | |                         .expect(\"ERROR\")\n   | |________________________________________^ ...ending here: cannot borrow as mutable\n</code></pre>\n"}, {"tags": ["macos", "rust", "profiling", "stack-trace", "dtrace"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492510333, "post_id": 43469047, "comment_id": 73993579, "body": "Could it be related to <a href=\"https://github.com/rust-lang/rust/issues/24346\" rel=\"nofollow noreferrer\">issue #24346</a>, referred to in <a href=\"http://stackoverflow.com/q/43303465/1233251\">this question</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492519427, "post_id": 43469047, "comment_id": 73999816, "body": "@E_net4 I don&#39;t think so. That issue refers to the backtrace functionality built into Rust itself. One of the workarounds listed there is to use a debugger, which better knows how to use the debug symbols to get the backtrace. Like OP shows, Instruments knows the symbols as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492519551, "post_id": 43469047, "comment_id": 73999931, "body": "Is there a way of telling dtrace where to look for symbols? I wonder if there&#39;s something different about where Rust places the <code>.dSYM</code> files that causes dtrace to not be able to find them."}, {"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "edited": false, "score": 0, "creation_date": 1492568821, "post_id": 43469047, "comment_id": 74026071, "body": "I&#39;ll check that! (Actually I have no idea how the debug info is stored, so thanks for the pointer.)"}, {"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "edited": false, "score": 0, "creation_date": 1492584832, "post_id": 43469047, "comment_id": 74031927, "body": "It&#39;s even weirder now. For ONE run, it happened to find the debug symbols. Similar run that I traced right after didn&#39;t found the symbols \u2013 undeterminism!  Btw. I suspect this has something to do with the problems I earlier had with the backtrace crate: <a href=\"https://github.com/brson/error-chain/issues/129#issuecomment-281946612\" rel=\"nofollow noreferrer\">github.com/brson/error-chain/issues/129#issuecomment-2819466&zwnj;&#8203;12</a>  On Apple platforms, a framework called CoreSymbolication is used.  (a reverse engineering attempt: <a href=\"https://github.com/mountainstorm/CoreSymbolication\" rel=\"nofollow noreferrer\">github.com/mountainstorm/CoreSymbolication</a>)"}, {"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "edited": false, "score": 0, "creation_date": 1492584999, "post_id": 43469047, "comment_id": 74032027, "body": "Btw. Xcode Instruments doesn&#39;t have trouble finding debug symbols even if I compile <i>without</i> them. I&#39;m baffled about all the weird behaviours I&#39;m encountering."}, {"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "edited": false, "score": 0, "creation_date": 1492585142, "post_id": 43469047, "comment_id": 74032110, "body": "Here&#39;s still one more spark of wisdom: <a href=\"http://dtrace-discuss.opensolaris.narkive.com/pk1HBus5/more-dtrace-questions-release-builds-performance\" rel=\"nofollow noreferrer\">dtrace-discuss.opensolaris.narkive.com/pk1HBus5/&hellip;</a> &quot;The OS X dtrace uses spotlight to find dSYM(s), if you want to disable this, move the dSYM to a directory not indexed by spotlight, or turn off spotlight.&quot; Spotlight might explain a large part of the indeterminism."}], "answers": [{"comments": [{"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "edited": false, "score": 0, "creation_date": 1547533149, "post_id": 43491361, "comment_id": 95214444, "body": "I later found out that the directory the debug symbols were on a block list of Spotlight. Removing the list entry and letting Spotlight re-index fixed the problem."}], "tags": [], "owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "is_accepted": true, "score": 5, "last_activity_date": 1492605991, "last_edit_date": 1492605991, "creation_date": 1492593336, "answer_id": 43491361, "question_id": 43469047, "link": "https://stackoverflow.com/questions/43469047/using-dtrace-to-get-stack-traces-profiling-data-on-rust/43491361#43491361", "title": "Using DTrace to get stack traces / profiling data on Rust", "body": "<p>I found a workaround and got some insight why it might not have worked, but the reason why is not 100% clear. </p>\n\n<p>The debug symbols that <code>rustc</code> produces can be found in <code>target/release/deps/mybinaryname-hashcode.dSYM</code>. In the same directory there is a binary file <code>target/release/deps/mybinaryname-hashcode</code> to which the symbols correspond to.</p>\n\n<p>The debug symbol finding library on MacOS is highly magical \u2013 as is <a href=\"https://lldb.llvm.org/symbols.html\" rel=\"nofollow noreferrer\">mentioned in the LLDB docs</a>, symbols are found using various methods, including Spotlight search. I'm not even sure which Frameworks are the ones being used by Xcode's Instruments and the bundled DTrace. (There are mentions about frameworks called DebugSymbols.framework and CoreSymbolication.framework.) Because of this magic, I gave up trying to understand <em>why</em> didn't it work.</p>\n\n<p>The workaround is to pass <code>dtrace</code> the <code>-p</code> option along with the PID of the inspected process:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo dtrace -p $PID -n 'profile-997 /pid == '$PID'/ { @[ustack(100)] = count(); }' -o $TMPFILE &amp;&gt;/dev/null\n</code></pre>\n\n<p>Here's the <code>man</code> of <code>-p</code>:</p>\n\n<blockquote>\n  <p>Grab the specified process-ID pid, cache its symbol tables, and exit upon its completion. If more than one -p option is present on the  command  line,  dtrace  exits when all commands have exited, reporting the exit status for each process as it terminates. The first process-ID is made available to any D programs specified on the command line or using the -s  option  through  the  $target macro variable.</p>\n</blockquote>\n\n<p>It's not clear why the debug info of various other binaries is shown by default, or why Rust binaries need the <code>-p</code> option, but it does its job as a workaround.</p>\n"}], "owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1197, "favorite_count": 2, "accepted_answer_id": 43491361, "answer_count": 1, "score": 5, "last_activity_date": 1492605991, "creation_date": 1492509450, "last_edit_date": 1492518504, "question_id": 43469047, "link": "https://stackoverflow.com/questions/43469047/using-dtrace-to-get-stack-traces-profiling-data-on-rust", "title": "Using DTrace to get stack traces / profiling data on Rust", "body": "<p>I'm trying to get a nice flamegraph of my Rust code. Unfortunately, Xcode 8.3 doesn't support exporting profiling data anymore, so I've been trying to use DTrace to get the profiling data.</p>\n\n<p>I have enabled debug info in my <code>Cargo.toml</code> for the release binaries:</p>\n\n<pre><code>[profile.release]\ndebug = true\n</code></pre>\n\n<p>Then I run the release binary (<code>mybinaryname</code>), and sample stack traces using DTrace:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sudo dtrace -n 'profile-997 /execname == \"mybinaryname\"/ { @[ustack(100)] = count(); }' -o out.user_stacks\n</code></pre>\n\n<p>The end result is something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          0x10e960500\n          0x10e964632\n          0x10e9659e0\n          0x10e937edd\n          0x10e92aae2\n          0x10e92d0d7\n          0x10e982c8b\n          0x10e981fc1\n          0x7fff93c70235\n          0x1\n            1\n</code></pre>\n\n<p>For comparison, getting traces of <code>iTerm2</code> gets me nice traces like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          CoreFoundation`-[__NSArrayM removeAllObjects]\n          AppKit`_NSGestureRecognizerUpdate+0x769\n          CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__+0x17\n          CoreFoundation`__CFRunLoopDoObservers+0x187\n          CoreFoundation`__CFRunLoopRun+0x4be\n          CoreFoundation`CFRunLoopRunSpecific+0x1a4\n          HIToolbox`RunCurrentEventLoopInMode+0xf0\n          HIToolbox`ReceiveNextEventCommon+0x1b0\n          HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter+0x47\n          AppKit`_DPSNextEvent+0x460\n          AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]+0xaec\n          AppKit`-[NSApplication run]+0x39e\n          AppKit`NSApplicationMain+0x4d5\n          iTerm2`main+0x6e\n          libdyld.dylib`start+0x1\n          iTerm2`0x1\n            1\n</code></pre>\n\n<p>Is it possible to get stack traces with debug info in Rust code? (Xcode's Instruments for sure can see the function names, so they are there!) If it is possible, do I need to do take some additional steps, or am I just doing something wrong?</p>\n"}, {"tags": ["rust", "move-semantics", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492504531, "post_id": 43460483, "comment_id": 73989790, "body": "Here is a testable example: <a href=\"https://play.rust-lang.org/?gist=8a622fecc6af3ca89ec96aa4ad238afc&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1493292485, "post_id": 43460483, "comment_id": 74360044, "body": "How do you handle collisions? Do you want all indices, only the first, only the last, or make it crash?"}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1492470035, "post_id": 43460844, "comment_id": 73977815, "body": "Actually, I do this in loop, and real code generate <code>String</code> on the fly, so you suggest create plus one container for <code>String</code>, but it is impossible, because of I can not extend container, and have reference to String at the same time."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1492471134, "post_id": 43460844, "comment_id": 73978076, "body": "My idea, that hash for <code>&amp;str</code> depend on content of <code>&amp;str</code>, not its address, so it would be nice reuse <code>entry</code> result."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1492475188, "post_id": 43460844, "comment_id": 73979234, "body": "I&#39;m not fully understanding what you are asking. Could you add to your code example, so that it&#39;s clearer what you are trying to do?"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492504663, "post_id": 43460844, "comment_id": 73989890, "body": "I don&#39;t understand why the borrow checker doesn&#39;t allow <a href=\"https://play.rust-lang.org/?gist=8a622fecc6af3ca89ec96aa4ad238afc&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">the code</a> to compile. Even when a different string is pushed to the vector, the borrow checker <a href=\"https://play.rust-lang.org/?gist=13714cbd78589da0a92d9cab868da609&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">still complains</a>."}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 0, "creation_date": 1492532775, "post_id": 43460844, "comment_id": 74010332, "body": "It will compile if you flip the order of the <code>hash</code> and <code>s</code> definitions (and don&#39;t move the string): <a href=\"https://play.rust-lang.org/?gist=98fd4e8e6f04c0c5cfe581fac3019047&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. The hashmap lives just a little bit longer than the string (which is too long since the hashmap has a reference to the string)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 2, "creation_date": 1492712575, "post_id": 43460844, "comment_id": 74107385, "body": "@user1244932 if you are saying that this doesn&#39;t work for you because your real code uses a loop, then it would perhaps be useful to include the loops in your code sample."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1492880922, "post_id": 43460844, "comment_id": 74175112, "body": "@PeterHall I add comment to code to show where loop, order of creation is important for me, I create <code>l</code> to hold generated <code>s</code>, reverse order is impossible, it is like creating chicken before egg."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1492881144, "post_id": 43460844, "comment_id": 74175178, "body": "@PeterHall And I understand why borrow checker complains and how to make it happy with extra heap allocation or extra CPU usage question is how to do things with zero cost. Like find place in hash without borrowing, and how have exactly one copy of string without things like <code>Rc</code>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492891654, "post_id": 43460844, "comment_id": 74178900, "body": "@PeterHall Not the OP, but <a href=\"https://play.rust-lang.org/?gist=69c6e1e3ddbab3192192ff37eeed6603&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here is a modified sample</a> that uses a loop in the way I believe the OP needs."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1591454741, "last_edit_date": 1591454741, "creation_date": 1492469265, "answer_id": 43460844, "question_id": 43460483, "link": "https://stackoverflow.com/questions/43460483/how-do-i-efficiently-build-a-vector-and-an-index-of-that-vector-while-processing/43460844#43460844", "title": "How do I efficiently build a vector and an index of that vector while processing a data stream?", "body": "<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `s` does not live long enough\n  --&gt; &lt;anon&gt;:27:5\n   |\n16 |         let idx: usize = match hash.entry(&amp;s) { //a\n   |                                            - borrow occurs here\n...\n27 |     }\n   |     ^ `s` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>The <code>note:</code> at the end is where the answer is.</p>\n\n<p><code>s</code> <em>must</em> outlive <code>hash</code> because you are using <code>&amp;s</code> as a key in the <code>HashMap</code>. This reference will become invalid when <code>s</code> is dropped. But, as the note says, <code>hash</code> will be dropped <em>after</em> <code>s</code>. A quick fix is to swap the order of their declarations:</p>\n\n<pre><code>let s = \"aaa\".to_string();\nlet mut hash = HashMap::&lt;&amp;str, usize&gt;::new();\n</code></pre>\n\n<p>But now you have another problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0505]: cannot move out of `s` because it is borrowed\n  --&gt; &lt;anon&gt;:22:33\n   |\n17 |         let idx: usize = match hash.entry(&amp;s) { //a\n   |                                            - borrow of `s` occurs here\n...\n22 |                 l.push(Foo { v: s }); //b\n   |                                 ^ move out of `s` occurs here\n</code></pre>\n\n<p>This one is more obvious. <code>s</code> is borrowed by the <code>Entry</code>, which will live to the end of the block. Cloning <code>s</code> will fix that:</p>\n\n<pre><code>l.push(Foo { v: s.clone() }); //b\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>I only want to allocate s only once, not cloning it </p>\n</blockquote>\n\n<p>But the type of <code>Foo.v</code> is <code>String</code>, so it will own its own copy of the <code>str</code> anyway. Just that type means you have to copy the <code>s</code>.</p>\n\n<p>You can replace it with a <code>&amp;str</code> instead which will allow it to stay as a reference into <code>s</code>:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    v: &amp;'a str,\n}\n\npub fn main() {\n    // s now lives longer than l\n    let s = \"aaa\".to_string();\n    let mut l = Vec::&lt;Foo&gt;::new();\n    {\n        let mut hash = HashMap::&lt;&amp;str, usize&gt;::new();\n\n        let idx: usize = match hash.entry(&amp;s) {\n            Occupied(ent) =&gt; {\n                *ent.get()\n            }\n            Vacant(ent) =&gt; {\n                l.push(Foo { v: &amp;s });\n                ent.insert(l.len() - 1);\n                l.len() - 1\n            }\n        };\n    }\n}\n</code></pre>\n\n<p>Note that, previously I had to move the declaration of <code>s</code> to before <code>hash</code>, so that it would outlive it. But now, <code>l</code> holds a reference to <code>s</code>, so it has to be declared even earlier, so that it outlives <code>l</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1493017215, "post_id": 43566310, "comment_id": 74212473, "body": "I wonder if one could use the <code>owning_ref</code> crate to obtain a pointer to a memory that is safe to move? I tried the obvious, <a href=\"https://pastebin.com/YZG0RUc9\" rel=\"nofollow noreferrer\">replacing <code>v: String</code>  with <code>v: OwningRef&lt;String, str&gt;</code></a>, but it still doesn&#39;t compile, with pretty much the same error. I wonder if I misunderstood <code>owning_ref</code>, or if this is the case of the borrow checker detecting #2, possibility of <code>String</code> change."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1493035271, "post_id": 43566310, "comment_id": 74224165, "body": "@user4815162342 yeah, I feel like every time I want to use owning_ref, I don&#39;t <i>quite</i> understand it"}, {"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1591450081, "post_id": 43566310, "comment_id": 110063059, "body": "Probably a silly question, but if I want to have different indexes (by first name, last name, etc), wha whoulr be a solution ? Using \u02cbArc` to share ownership pf data between the different indexes or is there another elegant solution ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1591454031, "post_id": 43566310, "comment_id": 110064469, "body": "@yageek <code>Rc</code> or <code>Arc</code> would be a memory-efficient technique. You could also use something like a string interner or an arena."}, {"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1591469547, "post_id": 43566310, "comment_id": 110070383, "body": "What is a string interner or arena ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 1, "creation_date": 1591471774, "post_id": 43566310, "comment_id": 110071214, "body": "@yageek <a href=\"https://en.wikipedia.org/wiki/String_interning\" rel=\"nofollow noreferrer\">string interning</a>; <a href=\"https://en.wikipedia.org/wiki/Region-based_memory_management\" rel=\"nofollow noreferrer\">arena</a>"}, {"owner": {"reputation": 3087, "user_id": 856142, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5bfb729f6ac07e17c2326a7335a3f3be?s=128&d=identicon&r=PG", "display_name": "yageek", "link": "https://stackoverflow.com/users/856142/yageek"}, "edited": false, "score": 0, "creation_date": 1591473555, "post_id": 43566310, "comment_id": 110071791, "body": "@Shepmaster Thanks for the references !"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1591454593, "last_edit_date": 1591454593, "creation_date": 1492909222, "answer_id": 43566310, "question_id": 43460483, "link": "https://stackoverflow.com/questions/43460483/how-do-i-efficiently-build-a-vector-and-an-index-of-that-vector-while-processing/43566310#43566310", "title": "How do I efficiently build a vector and an index of that vector while processing a data stream?", "body": "<p><em>In general</em>, what you are trying to accomplish is unsafe and Rust is correctly preventing you from doing something you shouldn't. For a simple example why, consider a <code>Vec&lt;u8&gt;</code>. If the vector has one item and a capacity of one, adding another value to the vector will cause a re-allocation and copying of all the values in the vector, invalidating any references into the vector. This would cause all of your keys in your index to point to arbitrary memory addresses, thus leading to unsafe behavior. The compiler prevents that.</p>\n\n<p>In <em>this</em> case, there's two extra pieces of information that the compiler is unaware of but the programmer isn't: </p>\n\n<ol>\n<li>There's an extra indirection \u2014 <code>String</code> is heap-allocated, so moving the <em>pointer</em> to that heap allocation isn't really a problem.</li>\n<li>The <code>String</code> will <em>never</em> be changed. If it were, then it might reallocate, invalidating the referred-to address. Using a <code>Box&lt;[str]&gt;</code> instead of a <code>String</code> would be a way to enforce this via the type system. </li>\n</ol>\n\n<p>In cases like this, it is OK to use <code>unsafe</code> code, so long as you <strong>properly document why it's not unsafe</strong>.</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Player {\n    name: String,\n}\n\nfn main() {\n    let names = [\"alice\", \"bob\", \"clarice\", \"danny\", \"eustice\", \"frank\"];\n\n    let mut players = Vec::new();\n    let mut index = HashMap::new();\n\n    for &amp;name in &amp;names {\n        let player = Player { name: name.into() };\n        let idx = players.len();\n\n        // I copied this code from Stack Overflow without reading the prose\n        // that describes why this unsafe block is actually safe\n        let stable_name: &amp;str = unsafe { &amp;*(player.name.as_str() as *const str) };\n\n        players.push(player);\n        index.insert(idx, stable_name);\n    }\n\n    for (k, v) in &amp;index {\n        println!(\"{:?} -&gt; {:?}\", k, v);\n    }\n\n    for v in &amp;players {\n        println!(\"{:?}\", v);\n    }\n}\n</code></pre>\n\n<p>However, my guess is that you don't want this code in your <code>main</code> method but want to return it from some function. That will be a problem, as you will quickly run into <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>.</p>\n\n<hr>\n\n<p>Honestly, there's styles of code that don't fit well within Rust's limitations. If you run into these, you could:</p>\n\n<ul>\n<li>decide that Rust isn't a good fit for you or your problem.</li>\n<li>use <code>unsafe</code> code, preferably thoroughly tested and only exposing a safe API.</li>\n<li>investigate alternate representations.</li>\n</ul>\n\n<p>For example, I'd probably rewrite the code to have the index be the primary owner of the key:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\n#[derive(Debug)]\nstruct Player&lt;'a&gt; {\n    name: &amp;'a str,\n    data: &amp;'a PlayerData,\n}\n\n#[derive(Debug)]\nstruct PlayerData {\n    hit_points: u8,\n}\n\n#[derive(Debug)]\nstruct Players(BTreeMap&lt;String, PlayerData&gt;);\n\nimpl Players {\n    fn new&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: IntoIterator,\n        I::Item: Into&lt;String&gt;,\n    {\n        let players = iter\n            .into_iter()\n            .map(|name| (name.into(), PlayerData { hit_points: 100 }))\n            .collect();\n        Players(players)\n    }\n\n    fn get&lt;'a&gt;(&amp;'a self, name: &amp;'a str) -&gt; Option&lt;Player&lt;'a&gt;&gt; {\n        self.0.get(name).map(|data| Player { name, data })\n    }\n}\n\nfn main() {\n    let names = [\"alice\", \"bob\", \"clarice\", \"danny\", \"eustice\", \"frank\"];\n\n    let players = Players::new(names.iter().copied());\n\n    for (k, v) in &amp;players.0 {\n        println!(\"{:?} -&gt; {:?}\", k, v);\n    }\n\n    println!(\"{:?}\", players.get(\"eustice\"));\n}\n</code></pre>\n\n<p>Alternatively, as shown in <a href=\"https://stackoverflow.com/q/43695527/155423\">What&#39;s the idiomatic way to make a lookup table which uses field of the item as the key?</a>, you could wrap your type and store it in a set container instead:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\n#[derive(Debug, PartialEq, Eq)]\nstruct Player {\n    name: String,\n    hit_points: u8,\n}\n\n#[derive(Debug, Eq)]\nstruct PlayerByName(Player);\n\nimpl PlayerByName {\n    fn key(&amp;self) -&gt; &amp;str {\n        &amp;self.0.name\n    }\n}\n\nimpl PartialOrd for PlayerByName {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;std::cmp::Ordering&gt; {\n        Some(self.cmp(other))\n    }\n}\n\nimpl Ord for PlayerByName {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; std::cmp::Ordering {\n        self.key().cmp(&amp;other.key())\n    }\n}\n\nimpl PartialEq for PlayerByName {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.key() == other.key()\n    }\n}\n\nimpl std::borrow::Borrow&lt;str&gt; for PlayerByName {\n    fn borrow(&amp;self) -&gt; &amp;str {\n        self.key()\n    }\n}\n\n#[derive(Debug)]\nstruct Players(BTreeSet&lt;PlayerByName&gt;);\n\nimpl Players {\n    fn new&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: IntoIterator,\n        I::Item: Into&lt;String&gt;,\n    {\n        let players = iter\n            .into_iter()\n            .map(|name| {\n                PlayerByName(Player {\n                    name: name.into(),\n                    hit_points: 100,\n                })\n            })\n            .collect();\n        Players(players)\n    }\n\n    fn get(&amp;self, name: &amp;str) -&gt; Option&lt;&amp;Player&gt; {\n        self.0.get(name).map(|pbn| &amp;pbn.0)\n    }\n}\n\nfn main() {\n    let names = [\"alice\", \"bob\", \"clarice\", \"danny\", \"eustice\", \"frank\"];\n\n    let players = Players::new(names.iter().copied());\n\n    for player in &amp;players.0 {\n        println!(\"{:?}\", player.0);\n    }\n\n    println!(\"{:?}\", players.get(\"eustice\"));\n}\n</code></pre>\n\n<blockquote>\n  <p>not increase the run time by using <code>Rc</code> or <code>RefCell</code></p>\n</blockquote>\n\n<p>Guessing about performance characteristics without performing profiling is never a good idea. I honestly don't believe that there'd be a noticeable performance loss from <em>incrementing an integer when a value is cloned or dropped</em>. If the problem required both an index and a vector, then I would reach for some kind of shared ownership.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1493296613, "post_id": 43656695, "comment_id": 74363303, "body": "@Shepmaster: Personally, I&#39;d just like <code>Rc&lt;str&gt;</code> to be possible. The only thing really missing is a <code>Rc::clone_from(&amp;T) where T: ?Sized + Clone</code>, though how to guess the necessary target size in a generic manner seems... complicated :x The other way would be to be to manipulate <code>str</code> directly, like <code>[u8]</code>, I suppose, which is not too easy either."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1493297113, "post_id": 43656695, "comment_id": 74363699, "body": "@Shepmaster: Yes; that&#39;s what I was saying about the difficulty of &quot;generalizing&quot; <code>clone_from</code>. For non-<code>Sized</code> type you would need some kind of specific trait that gives you (1) the size of the memory buffer necessary and (2) a way to move/clone into that buffer."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1549999822, "last_edit_date": 1549999822, "creation_date": 1493293133, "answer_id": 43656695, "question_id": 43460483, "link": "https://stackoverflow.com/questions/43460483/how-do-i-efficiently-build-a-vector-and-an-index-of-that-vector-while-processing/43656695#43656695", "title": "How do I efficiently build a vector and an index of that vector while processing a data stream?", "body": "<blockquote>\n  <p>not increase the run time by using <code>Rc</code> or <code>RefCell</code>.</p>\n</blockquote>\n\n<p>@Shepmaster already demonstrated accomplishing this using <code>unsafe</code>, once you have I would encourage you to check how much <code>Rc</code> actually would cost you. Here is a full version with <code>Rc</code>:</p>\n\n<pre><code>use std::{\n    collections::{hash_map::Entry, HashMap},\n    rc::Rc,\n};\n\n#[derive(Debug)]\nstruct Foo {\n    v: Rc&lt;str&gt;,\n}\n\n#[derive(Debug)]\nstruct Collection {\n    vec: Vec&lt;Foo&gt;,\n    index: HashMap&lt;Rc&lt;str&gt;, usize&gt;,\n}\n\nimpl Foo {\n    fn new(s: &amp;str) -&gt; Foo {\n        Foo {\n            v: s.into(),\n        }\n    }\n}\n\nimpl Collection {\n    fn new() -&gt; Collection {\n        Collection {\n            vec: Vec::new(),\n            index: HashMap::new(),\n        }\n    }\n\n    fn insert(&amp;mut self, foo: Foo) {\n        match self.index.entry(foo.v.clone()) {\n            Entry::Occupied(o) =&gt; panic!(\n                \"Duplicate entry for: {}, {:?} inserted before {:?}\",\n                foo.v,\n                o.get(),\n                foo\n            ),\n            Entry::Vacant(v) =&gt; v.insert(self.vec.len()),\n        };\n        self.vec.push(foo)\n    }\n}\n\nfn main() {\n    let mut collection = Collection::new();\n\n    for foo in vec![Foo::new(\"Hello\"), Foo::new(\"World\"), Foo::new(\"Go!\")] {\n        collection.insert(foo)\n    }\n\n    println!(\"{:?}\", collection);\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1974, "favorite_count": 5, "answer_count": 3, "score": 11, "last_activity_date": 1591454741, "creation_date": 1492467192, "last_edit_date": 1549997640, "question_id": 43460483, "link": "https://stackoverflow.com/questions/43460483/how-do-i-efficiently-build-a-vector-and-an-index-of-that-vector-while-processing", "title": "How do I efficiently build a vector and an index of that vector while processing a data stream?", "body": "<p>I have a struct <code>Foo</code>:</p>\n\n<pre><code>struct Foo {\n    v: String,\n    // Other data not important for the question\n}\n</code></pre>\n\n<p>I want to handle a data stream and save the result into <code>Vec&lt;Foo&gt;</code> and also create an index for this <code>Vec&lt;Foo&gt;</code> on the field <code>Foo::v</code>.</p>\n\n<p>I want to use a <code>HashMap&lt;&amp;str, usize&gt;</code> for the index, where the keys will be <code>&amp;Foo::v</code> and the value is the position in the <code>Vec&lt;Foo&gt;</code>, but I'm open to other suggestions.</p>\n\n<p>I want to do the data stream handling as fast as possible, which requires not doing obvious things twice.</p>\n\n<p>For example, I want to:</p>\n\n<ul>\n<li>allocate a <code>String</code> only once per one data stream reading</li>\n<li>not search the index twice, once to check that the key does not exist, once for inserting new key.</li>\n<li>not increase the run time by using <code>Rc</code> or <code>RefCell</code>.</li>\n</ul>\n\n<p>The borrow checker does not allow this code:</p>\n\n<pre><code>let mut l = Vec::&lt;Foo&gt;::new();\n{\n    let mut hash = HashMap::&lt;&amp;str, usize&gt;::new();\n    //here is loop in real code, like: \n    //let mut s: String; \n    //while get_s(&amp;mut s) {\n    let s = \"aaa\".to_string();\n    let idx: usize = match hash.entry(&amp;s) { //a\n        Occupied(ent) =&gt; {\n            *ent.get()\n        }\n        Vacant(ent) =&gt; {\n            l.push(Foo { v: s }); //b\n            ent.insert(l.len() - 1);\n            l.len() - 1\n        }\n    };\n    // do something with idx\n}\n</code></pre>\n\n<p>There are multiple problems:</p>\n\n<ol>\n<li><code>hash.entry</code> borrows the key so <code>s</code> must have a \"bigger\" lifetime than <code>hash</code></li>\n<li>I want to move <code>s</code> at line (b), while I have a read-only reference at line (a)</li>\n</ol>\n\n<p>So how should I implement this simple algorithm without an extra call to <code>String::clone</code> or calling <code>HashMap::get</code> after calling <code>HashMap::insert</code>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492466738, "post_id": 43458688, "comment_id": 73976728, "body": "Great answer, this also helps anyone writing an automated tests of a desktop GUI application. Just like GLFW in the question, many GUI toolkits also require being initialized or used from the main thread."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 18, "last_activity_date": 1493315700, "last_edit_date": 1493315700, "creation_date": 1492459154, "answer_id": 43458688, "question_id": 43458194, "link": "https://stackoverflow.com/questions/43458194/is-there-any-way-to-tell-cargo-to-run-its-tests-on-the-main-thread/43458688#43458688", "title": "Is there any way to tell Cargo to run its tests on the main thread?", "body": "<p>No, to the best of my knowledge, it's not easily possible right now. There is a <code>--test-threads</code> argument you can pass to the test harness, but it sets the number of threads in addition to the main thread. So <code>--test-threads=1</code> results in two threads still.</p>\n\n<hr>\n\n<p>So you can't really use the default test-harness. Luckily, you can disable it in <code>Cargo.toml</code>. Possibly the best solution is to create a new folder (e.g. <code>gltests</code>) and place all tests that require being run in main thread in there. Then we just have to declare those tests in <code>Cargo.toml</code>:</p>\n\n<pre><code>[[test]]\nname = \"gltests\"\npath = \"gltests/main.rs\"\nharness = false\n</code></pre>\n\n<p>This means that cargo will try to compile <code>gltests/main.rs</code> as an executable (expecting a <code>main()</code> function) and execute this executable, whenever you say <code>cargo test</code>. This way you won't get any of the fancy output you usually get from cargo tests. You just have to <strong>do everything yourself</strong> in <code>main.rs</code>, but at least you can start tests in the main thread. </p>\n"}], "owner": {"reputation": 228, "user_id": 2521691, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f659f92533960a0bf5dbd31a7d68632c?s=128&d=identicon&r=PG", "display_name": "jasongrlicky", "link": "https://stackoverflow.com/users/2521691/jasongrlicky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 821, "favorite_count": 0, "accepted_answer_id": 43458688, "answer_count": 1, "score": 15, "last_activity_date": 1493315700, "creation_date": 1492457207, "last_edit_date": 1492463329, "question_id": 43458194, "link": "https://stackoverflow.com/questions/43458194/is-there-any-way-to-tell-cargo-to-run-its-tests-on-the-main-thread", "title": "Is there any way to tell Cargo to run its tests on the main thread?", "body": "<p>I have been trying to build an OpenGL-based image processing library with <a href=\"https://github.com/PistonDevelopers/glfw-rs\" rel=\"noreferrer\">GLFW</a>, and need it to be testable. Unfortunately, I ran into <a href=\"https://github.com/rust-lang/cargo/issues/3927\" rel=\"noreferrer\">this</a> bug - GLFW needs its initialization functions to be called from the main thread, but Cargo tests are run on a background thread.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 6737800, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T1B3EXz6P9g/AAAAAAAAAAI/AAAAAAAAAzo/SUgHsyVdA3I/photo.jpg?sz=128", "display_name": "dakue", "link": "https://stackoverflow.com/users/6737800/dakue"}, "edited": false, "score": 0, "creation_date": 1492455824, "post_id": 43457761, "comment_id": 73971377, "body": "It&#39;s works! Thanks!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1492457184, "last_edit_date": 1495540457, "creation_date": 1492455566, "answer_id": 43457761, "question_id": 43457672, "link": "https://stackoverflow.com/questions/43457672/expected-i32-found-type-parameter-but-type-parameter-is-i32/43457761#43457761", "title": "expected i32, found type parameter, but type parameter is i32", "body": "<p>You have accidentally introduced a type parameter called <code>i32</code> (instead of, usually, <code>T</code>). I agree with you here, that the compiler diagnostic could be better. </p>\n\n<p>Adding something after <code>impl</code> in angle brackets, likes this:</p>\n\n<pre><code>impl&lt;i32&gt; Display for Table&lt;i32&gt;\n</code></pre>\n\n<p>... will always introduce a new type parameter, just like e.g. <code>impl&lt;T&gt;</code>. To fix your problem, just remove this type parameter declaration from the <code>impl</code> keyword:</p>\n\n<pre><code>impl Display for Table&lt;i32&gt; { ... }\n</code></pre>\n\n<p>Note that I also removed the <code>where</code> bound which doesn't make sense anymore. You can't apply bounds to concrete types.</p>\n\n<hr>\n\n<p>Related:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/37410672/rust-compiler-can-not-understand-same-types\">Expected type parameter, found u8, but the type parameter is u8</a></li>\n<li><a href=\"https://stackoverflow.com/questions/38320635/failing-to-understand-a-rust-generic-function-error\">Failing to understand a rust generic function error</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 6737800, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T1B3EXz6P9g/AAAAAAAAAAI/AAAAAAAAAzo/SUgHsyVdA3I/photo.jpg?sz=128", "display_name": "dakue", "link": "https://stackoverflow.com/users/6737800/dakue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1148, "favorite_count": 0, "closed_date": 1492457570, "accepted_answer_id": 43457761, "answer_count": 1, "score": 2, "last_activity_date": 1492457184, "creation_date": 1492455274, "last_edit_date": 1492455639, "question_id": 43457672, "link": "https://stackoverflow.com/questions/43457672/expected-i32-found-type-parameter-but-type-parameter-is-i32", "closed_reason": "Duplicate", "title": "expected i32, found type parameter, but type parameter is i32", "body": "<pre><code>pub struct Table&lt;T&gt; {\n    table: Vec&lt;Vec&lt;T&gt;&gt;\n}\n\nimpl&lt;i32&gt; Display for Table&lt;i32&gt;\n    where i32: Display\n{\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        for (index, line) in self.table.iter().enumerate() {\n            write!(f, \"{}:\\t\", index+1);\n\n            let mut sum = 0i32;\n            for task in line {\n                write!(f, \"{} \", task);\n                sum += *task;\n            }\n\n            write!(f, \" : {}\\n\", sum);\n        }\n\n        Result::Ok(())\n    }\n}\n</code></pre>\n\n<p>This code results in a confusing error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/table.rs:48:24\n   |\n48 |                 sum += *task;\n   |                        ^^^^^ expected i32, found type parameter\n   |\n   = note: expected type `i32` (i32)\n   = note:    found type `i32` (type parameter)\n</code></pre>\n\n<p>And I don't know what to do.</p>\n"}, {"tags": ["winapi", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492457108, "post_id": 43457764, "comment_id": 73972049, "body": "Is #1 really true? In contrast to common sense and practice in other OS-es, <code>unsigned long</code> is actually 32-bit on Windows C compilers."}, {"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492457995, "post_id": 43457764, "comment_id": 73972547, "body": "@user4815162342: yes, <code>DWORD</code> is always 32-bit in size, see <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa383751.aspx\" rel=\"nofollow noreferrer\">Windows Data Types</a>: &quot;<i>A <b>32-bit</b> unsigned integer. The range is 0 through 4294967295 decimal.</i>&quot;  The 64-bit version is <code>DWORDLONG</code>, and the platform-dependent version is <code>DWORD_PTR</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "edited": false, "score": 0, "creation_date": 1492458108, "post_id": 43457764, "comment_id": 73972609, "body": "@RemyLebeau Yes, but <code>unsigned long</code> is also always 32-bit in size (on Windows), so the signature of <code>CertCloseStore</code> is actually correct. The OP also reports Python code which uses <code>ctypes.c_ulong</code> to work, which is consistent with this."}, {"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492458171, "post_id": 43457764, "comment_id": 73972642, "body": "@user4815162342: I wasn&#39;t debating that. I was simply commenting on your &quot;Is #1 really true?&quot; question."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "edited": false, "score": 0, "creation_date": 1492458318, "post_id": 43457764, "comment_id": 73972705, "body": "@RemyLebeau #1 also contends that &quot;my CertCloseStore&#39;s second argument is wrong&quot;. That was the part I was questioning, since the second argument is actually correct."}, {"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492459054, "post_id": 43457764, "comment_id": 73973138, "body": "@user4815162342: if you go by <a href=\"https://doc.rust-lang.org/1.6.0/libc/type.c_ulong.html\" rel=\"nofollow noreferrer\">this definition of <code>c_ulong</code></a> in the Rust documentation, then no.  If you go by <a href=\"https://raw.githubusercontent.com/rust-lang/libc/master/src/windows.rs\" rel=\"nofollow noreferrer\">this definition of <code>c_ulong</code></a> on GitHub, then yes. Either way, I would suggest defining <code>CertCloseStore()</code> less ambiguously, eg: <code>type DWORD = u32; fn CertCloseStore(hCertStore: HCERTSTORE, dwFlags: DWORD) -&gt; BOOL;</code>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "edited": false, "score": 1, "creation_date": 1492460212, "post_id": 43457764, "comment_id": 73973721, "body": "@RemyLebeau Unfortunately the definition in the documentation is Linux-centric, as the documentation is generated solely on Linux. (That is a known issue with Rust documentation, which also doesn&#39;t document Windows-specific extension to the stdlib such as <code>std::os::windows::ffi::OsStrExt</code> used in the question.) I agree that a less ambiguous definition is better - I would advise importing e.g. <code>winapi::minwindef::DWORD</code> from the winapi crate. Having said that, I am still questioning the validity of #1 point in the answer; the crash from the question it is likely caused just by #2."}, {"owner": {"reputation": 449289, "user_id": 65863, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f00013ceab8fb1928885c5c172fbfd4a?s=128&d=identicon&r=PG", "display_name": "Remy Lebeau", "link": "https://stackoverflow.com/users/65863/remy-lebeau"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492463632, "post_id": 43457764, "comment_id": 73975423, "body": "@user4815162342: Agreed."}], "tags": [], "owner": {"reputation": 618, "user_id": 174617, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/eb474a4ee0160ac2b307afad50b64b63?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Wright", "link": "https://stackoverflow.com/users/174617/mark-wright"}, "is_accepted": true, "score": 1, "last_activity_date": 1492455581, "creation_date": 1492455581, "answer_id": 43457764, "question_id": 43457189, "link": "https://stackoverflow.com/questions/43457189/whats-wrong-with-this-rust-ffi-declaration-of-certopensystemsstorew-or-certclos/43457764#43457764", "title": "What&#39;s wrong with this Rust FFI declaration of CertOpenSystemsStoreW or CertCloseStore?", "body": "<p>Well, there were two problems:</p>\n\n<ol>\n<li>DWORDs are 32 bits, no matter whether you're on 64bit or 32bit windows (which makes sense, I suppose).  So my CertCloseStore's second argument is wrong.</li>\n<li><code>c_void</code> is not a pointer type - it's just a <code>u8</code>.  So my code above should be something like <code>type HPROVIDER = *const c_void;</code>  (Which is not great, since it makes all HPROVIDERs const, but I don't see a way to do a Rust-style pointer typedef without also specifying either 'mut' or 'const').</li>\n</ol>\n"}], "owner": {"reputation": 618, "user_id": 174617, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/eb474a4ee0160ac2b307afad50b64b63?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Wright", "link": "https://stackoverflow.com/users/174617/mark-wright"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 43457764, "answer_count": 1, "score": 2, "last_activity_date": 1492455581, "creation_date": 1492453430, "last_edit_date": 1492454046, "question_id": 43457189, "link": "https://stackoverflow.com/questions/43457189/whats-wrong-with-this-rust-ffi-declaration-of-certopensystemsstorew-or-certclos", "title": "What&#39;s wrong with this Rust FFI declaration of CertOpenSystemsStoreW or CertCloseStore?", "body": "<p>I'm trying to call the Win32 API <code>CertOpenSystemsStoreW</code> and <code>CertCloseStore</code> functions from Rust.  When I do, I get an access violation on <code>CertCloseStore</code>, so I suppose I have the size wrong on some argument type, but I can't see it.</p>\n\n<p>The following Python code works (and I have equivalent working C++, but not as nicely contained):</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>In [1]: import ctypes    \nIn [2]: c32 = ctypes.windll.crypt32    \nIn [3]: c32.CertOpenSystemStoreW.argtypes = [ctypes.c_void_p, ctypes.c_wchar_p]    \nIn [4]: c32.CertOpenSystemStoreW.restype = ctypes.c_void_p    \nIn [5]: c32.CertCloseStore.argtypes=[ctypes.c_void_p, ctypes.c_ulong]    \nIn [6]: s = c32.CertOpenSystemStoreW(0, \"my\")    \nIn [7]: c32.CertCloseStore(s, 0)\nOut[7]: 1\n</code></pre>\n\n<p>Here's the failing Rust:</p>\n\n<pre><code>extern crate libc;\nuse libc::{c_ulong, c_int, c_void};\nuse std::ffi::OsStr;\nuse std::os::windows::ffi::OsStrExt;\nuse std::ptr::null;\n\ntype HPROVIDER = c_void;\ntype HCERTSTORE = c_void;\ntype BOOL = c_int;\n\n#[link(name = \"Crypt32\")]\nextern \"stdcall\" {\n    fn CertOpenSystemStoreW(\n        hProv: *const HPROVIDER, szSubsystemProtocol: *const u16) -&gt; HCERTSTORE;\n    fn CertCloseStore(\n        hCertStore: HCERTSTORE, dwFlags: c_ulong) -&gt; BOOL;\n}\n\nfn to_utf16(s: &amp;str) -&gt; Vec&lt;u16&gt; {\n    let os_s = OsStr::new(s);\n    return os_s.encode_wide().chain(Some(0).into_iter()).collect::&lt;Vec&lt;_&gt;&gt;();\n}\n\nfn main() {\n    let protocol_utf16 = to_utf16(\"my\");\n    let storehandle;\n    unsafe {\n        storehandle = CertOpenSystemStoreW(null(), protocol_utf16.as_ptr());\n    }\n\n    let freeresults;\n    unsafe {\n        freeresults = CertCloseStore(storehandle, 0);\n    }\n    println!(\"{}\", freeresults);\n}\n</code></pre>\n\n<p>I'm using Rust 1.16.</p>\n"}, {"tags": ["vector", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 1642457, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cbc9a7715a99111a12b5bfa54604349b?s=128&d=identicon&r=PG", "display_name": "Abogical", "link": "https://stackoverflow.com/users/1642457/abogical"}, "edited": false, "score": 0, "creation_date": 1492453304, "post_id": 43454968, "comment_id": 73969943, "body": "Thanks for answering! But If I understand correctly, <a href=\"https://play.rust-lang.org/?gist=2dc89d594443628eb548d5e75e1fcfc3&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">this doesn&#39;t work :/</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13, "user_id": 1642457, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cbc9a7715a99111a12b5bfa54604349b?s=128&d=identicon&r=PG", "display_name": "Abogical", "link": "https://stackoverflow.com/users/1642457/abogical"}, "edited": false, "score": 0, "creation_date": 1492453465, "post_id": 43454968, "comment_id": 73970020, "body": "@Abogical you&#39;ll need to <a href=\"https://play.integer32.com/?gist=d619b6bbc9a32a0755cc4aa7f80cdbe3&amp;version=stable\" rel=\"nofollow noreferrer\">change the trait definition and the implementation</a>; I&#39;ve clarified that point in the answer."}, {"owner": {"reputation": 13, "user_id": 1642457, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cbc9a7715a99111a12b5bfa54604349b?s=128&d=identicon&r=PG", "display_name": "Abogical", "link": "https://stackoverflow.com/users/1642457/abogical"}, "edited": false, "score": 0, "creation_date": 1492454124, "post_id": 43454968, "comment_id": 73970349, "body": "Oh yes, sorry for the dumb mistake, Thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1492453402, "last_edit_date": 1495535462, "creation_date": 1492444914, "answer_id": 43454968, "question_id": 43454783, "link": "https://stackoverflow.com/questions/43454783/error-e0495-when-returning-an-element-from-a-vector/43454968#43454968", "title": "Error E0495 when returning an element from a vector", "body": "<p>As explained in <a href=\"https://stackoverflow.com/q/27879161/155423\">What is the return type of the indexing operation on a slice?</a>, <code>stack[self.stack_index]</code> is returning the value in the slice by value. You are then trying to return a reference to the local variable, which is disallowed as explained in <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>.</p>\n\n<p>Really, you would want to do <code>Some(&amp;*stack[self.stack_index])</code>, which dereferences the <code>Box</code> to get to a <code>Data</code> and then re-references it. Because your implementation doesn't fit the rules for <a href=\"https://doc.rust-lang.org/stable/book/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">lifetime elision</a>, you need to add explicit lifetimes to your trait method and the implementation:</p>\n\n<pre><code>fn run&lt;'a&gt;(&amp;self, stack: &amp;'a mut Vec&lt;Box&lt;Data&gt;&gt;) -&gt; Option&lt;&amp;'a Data&gt;\n</code></pre>\n\n<p>I'd probably implement it using <code>get</code> and <code>map</code> though:</p>\n\n<pre><code>stack.get(self.stack_index).map(Box::as_ref)\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 1642457, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cbc9a7715a99111a12b5bfa54604349b?s=128&d=identicon&r=PG", "display_name": "Abogical", "link": "https://stackoverflow.com/users/1642457/abogical"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 43454968, "answer_count": 1, "score": 1, "last_activity_date": 1492453402, "creation_date": 1492444198, "last_edit_date": 1492444433, "question_id": 43454783, "link": "https://stackoverflow.com/questions/43454783/error-e0495-when-returning-an-element-from-a-vector", "title": "Error E0495 when returning an element from a vector", "body": "<p>I've been trying to create a simple interpreter in Rust. Here's a code snippet.</p>\n\n<pre><code>use std::vec::Vec;\nuse std::option::Option;\nuse std::borrow::Borrow;\n\ntrait Data {}\n\ntrait Instruction {\n    fn run(&amp;self, stack: &amp;mut Vec&lt;Box&lt;Data&gt;&gt;) -&gt; Option&lt;&amp;Data&gt;;\n}\n\nstruct Get {\n    stack_index: usize,\n}\n\nimpl Instruction for Get {\n    fn run(&amp;self, stack: &amp;mut Vec&lt;Box&lt;Data&gt;&gt;) -&gt; Option&lt;&amp;Data&gt; {\n        Some(stack[self.stack_index].borrow())\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>The above contains a simple <code>Get</code> instruction. It has a <code>run</code> method which simply returns a value from the given stack of <code>Data</code>. <code>Data</code> is an abstract trait representing really any type of data. I haven't implemented <code>Data</code> yet.</p>\n\n<p>However compiling the code generates error code <code>E0495</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; &lt;anon&gt;:17:14\n   |\n17 |         Some(stack[self.stack_index].borrow())\n   |              ^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 16:63...\n  --&gt; &lt;anon&gt;:16:64\n   |\n16 |       fn run(&amp;self, stack: &amp;mut Vec&lt;Box&lt;Data&gt;&gt;) -&gt; Option&lt;&amp;Data&gt; {\n   |  ________________________________________________________________^ starting here...\n17 | |         Some(stack[self.stack_index].borrow())\n18 | |     }\n   | |_____^ ...ending here\nnote: ...so that reference does not outlive borrowed content\n  --&gt; &lt;anon&gt;:17:14\n   |\n17 |         Some(stack[self.stack_index].borrow())\n   |              ^^^^^\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the body at 16:63...\n  --&gt; &lt;anon&gt;:16:64\n   |\n16 |       fn run(&amp;self, stack: &amp;mut Vec&lt;Box&lt;Data&gt;&gt;) -&gt; Option&lt;&amp;Data&gt; {\n   |  ________________________________________________________________^ starting here...\n17 | |         Some(stack[self.stack_index].borrow())\n18 | |     }\n   | |_____^ ...ending here\nnote: ...so that expression is assignable (expected std::option::Option&lt;&amp;Data&gt;, found std::option::Option&lt;&amp;Data&gt;)\n  --&gt; &lt;anon&gt;:17:9\n   |\n17 |         Some(stack[self.stack_index].borrow())\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["file", "io", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1492374124, "post_id": 43441166, "comment_id": 73940310, "body": "If you add a line to the beginning of a file, that will require moving all of the remainder of the contents of the file, to accommodate it. There isn&#39;t a way around that in any programming language. See <a href=\"http://stackoverflow.com/questions/1343044/c-prepending-to-beginning-of-a-file\">this example in C#</a>."}], "answers": [{"comments": [{"owner": {"reputation": 825, "user_id": 1617914, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/7a810b804595dc07df9cd328d4f86d09?s=128&d=identicon&r=PG", "display_name": "pedronveloso", "link": "https://stackoverflow.com/users/1617914/pedronveloso"}, "edited": false, "score": 0, "creation_date": 1492425133, "post_id": 43441946, "comment_id": 73955011, "body": "Thank you, this answers my question. I was imagining a solution of that sort but though to myself it felt like reinventing the wheel, but apparently this wheel really needs to be made again. This would make for a great lib btw."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 13, "last_activity_date": 1528907907, "last_edit_date": 1528907907, "creation_date": 1492375507, "answer_id": 43441946, "question_id": 43441166, "link": "https://stackoverflow.com/questions/43441166/prepend-line-to-beginning-of-file/43441946#43441946", "title": "Prepend line to beginning of file", "body": "<p>You can't do this directly in <em>any</em> programming language. See some other questions on the same topic in <a href=\"https://stackoverflow.com/questions/1343044/c-prepending-to-beginning-of-a-file\">C#</a>, <a href=\"https://stackoverflow.com/questions/5914627/prepend-line-to-beginning-of-a-file\">Python</a>, <a href=\"https://stackoverflow.com/questions/15423774/nodejs-prepending-to-a-file\">NodeJs</a>, <a href=\"https://stackoverflow.com/questions/3332262/how-do-i-prepend-file-to-beginning\">PHP</a>, <a href=\"https://stackoverflow.com/questions/5796615/how-can-i-add-a-string-to-the-beginning-of-each-file-in-a-folder-in-bash\">Bash</a> and <a href=\"https://stackoverflow.com/questions/4652436/c-file-streams-appending-at-the-beggining\">C</a>.</p>\n\n<p>There are several solutions with different trade-offs:</p>\n\n<ol>\n<li><p>Copy the entire file into memory, write the data you want, and then write the rest of the file after it. If the file is large, this might be a bad solution because of the amount of memory it will use, but might be suitable for small files, because it is simple to implement.</p></li>\n<li><p>Use a buffer, the same size as the text you want to prepend. Copy chunks of the file at a time into memory and then overwrite it with the previous chunk. In this way, you can shuffle the contents of the file along, with the new text at the start. This is likely to be slower than the other approaches, but will not require a large memory allocation. It could also be the best choice when the process doesn't have permission to delete the file. But be careful: If the process is interrupted, this approach could leave the file in a corrupted state.</p></li>\n<li><p>Write the new data to a temporary file and then append the contents of the original. Then delete the original and rename the temporary file. This is a good solution because it delegates the heavy lifting to the operating system, and the original data is backed up so will not be corrupted if the process is interrupted. </p></li>\n</ol>\n\n<p>From searching on Stack Overflow, the third solution seems to be the most popular answer for other languages, e.g. <a href=\"https://stackoverflow.com/questions/5796615/how-can-i-add-a-string-to-the-beginning-of-each-file-in-a-folder-in-bash\">in Bash</a>. This is likely to be because it is fast, safe and can often be implemented in just a few lines of code.</p>\n\n<p>A quick Rust version looks something like this:</p>\n\n<pre><code>extern crate mktemp;\nuse mktemp::Temp;\nuse std::{fs, io, io::Write, fs::File, path::Path};\n\nfn prepend_file&lt;P: AsRef&lt;Path&gt;&gt;(data: &amp;[u8], file_path: &amp;P) -&gt; io::Result&lt;()&gt; {\n    // Create a temporary file \n    let mut tmp_path = Temp::new_file()?;\n    // Stop the temp file being automatically deleted when the variable\n    // is dropped, by releasing it.\n    tmp_path.release();\n    // Open temp file for writing\n    let mut tmp = File::create(&amp;tmp_path)?;\n    // Open source file for reading\n    let mut src = File::open(&amp;file_path)?;\n    // Write the data to prepend\n    tmp.write_all(&amp;data)?;\n    // Copy the rest of the source file\n    io::copy(&amp;mut src, &amp;mut tmp)?;\n    fs::remove_file(&amp;file_path)?;\n    fs::rename(&amp;tmp_path, &amp;file_path)?;\n    Ok(())\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>fn main() -&gt; io::Result&lt;()&gt; {\n    let file_path = Path::new(\"file.txt\");\n    let data = \"Data to add to the beginning of the file\\n\";\n    prepend_file(data.as_bytes(), &amp;file_path)?;\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 825, "user_id": 1617914, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/7a810b804595dc07df9cd328d4f86d09?s=128&d=identicon&r=PG", "display_name": "pedronveloso", "link": "https://stackoverflow.com/users/1617914/pedronveloso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1415, "favorite_count": 0, "accepted_answer_id": 43441946, "answer_count": 1, "score": 4, "last_activity_date": 1545066195, "creation_date": 1492370627, "last_edit_date": 1545066195, "question_id": 43441166, "link": "https://stackoverflow.com/questions/43441166/prepend-line-to-beginning-of-file", "title": "Prepend line to beginning of file", "body": "<p>I'm trying to add a new line to the beginning of a text file. I start by opening the file with <code>append</code> but that only allows me to use <code>write_all</code> to write to the end of the file, at least that's the result I'm getting. If I read the documentation correctly, this is by design.</p>\n\n<p>I've tried to play with <code>seek</code>, but that didn't solve it.</p>\n\n<p>This is what I have currently:</p>\n\n<pre><code>let mut file = OpenOptions::new().append(true).open(&amp;file_path).unwrap();\nfile.seek(SeekFrom::Start(0));\nfile.write_all(b\"Cool days\\n\");\n</code></pre>\n\n<p>If I open the file with <code>write</code>, I end up overriding data instead of adding. What would be the appropriate way to go about accomplishing this with Rust?</p>\n"}, {"tags": ["rust", "exit", "atexit"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1492370833, "post_id": 43441047, "comment_id": 73939247, "body": "You could create a new thread to run your application in. The main application thread would have almost nothing that could go wrong and can clean up and restart the child thread if it panics."}], "answers": [{"comments": [{"owner": {"reputation": 12040, "user_id": 510036, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b7c510641e6526d19abc93e866e75ac8?s=128&d=identicon&r=PG", "display_name": "Qix - MONICA WAS MISTREATED", "link": "https://stackoverflow.com/users/510036/qix-monica-was-mistreated"}, "edited": false, "score": 0, "creation_date": 1492370468, "post_id": 43441099, "comment_id": 73939125, "body": "Not in the same stratosphere of what the OP is asking for."}, {"owner": {"reputation": 140, "user_id": 1106523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5409c25d3046ce7241a3849f8dbc55ac?s=128&d=identicon&r=PG", "display_name": "for1096", "link": "https://stackoverflow.com/users/1106523/for1096"}, "reply_to_user": {"reputation": 12040, "user_id": 510036, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b7c510641e6526d19abc93e866e75ac8?s=128&d=identicon&r=PG", "display_name": "Qix - MONICA WAS MISTREATED", "link": "https://stackoverflow.com/users/510036/qix-monica-was-mistreated"}, "edited": false, "score": 1, "creation_date": 1492370611, "post_id": 43441099, "comment_id": 73939173, "body": "Well I think it actually can solve op&#39;s problem. What do you think @isaacg"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 12040, "user_id": 510036, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b7c510641e6526d19abc93e866e75ac8?s=128&d=identicon&r=PG", "display_name": "Qix - MONICA WAS MISTREATED", "link": "https://stackoverflow.com/users/510036/qix-monica-was-mistreated"}, "edited": false, "score": 2, "creation_date": 1492375335, "post_id": 43441099, "comment_id": 73940693, "body": "@Qix Crashes due to &quot;unsigned variable underflow&quot; are due to panic, which <code>catch_unwind</code> <i>does</i> handle. (The docs warn that this wouldn&#39;t catch panics that abort the process, but those wouldn&#39;t be caught by the thread approach either.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12040, "user_id": 510036, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b7c510641e6526d19abc93e866e75ac8?s=128&d=identicon&r=PG", "display_name": "Qix - MONICA WAS MISTREATED", "link": "https://stackoverflow.com/users/510036/qix-monica-was-mistreated"}, "edited": false, "score": 0, "creation_date": 1492380893, "post_id": 43441099, "comment_id": 73942215, "body": "@Qix it&#39;s... exactly in the same &quot;stratosphere&quot;. Perhaps you could <i>explain</i> why you think it&#39;s not?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492381217, "post_id": 43441099, "comment_id": 73942311, "body": "@for1096 I will say that your answer is pretty sparse. Stack Overflow (and especially here in <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a>) strongly appreciate thorough, in-depth answers. Taking the time to make some example code to prove out your idea (and allowing you to remove the &quot;cannot guarantee&quot;) would help a lot."}, {"owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "edited": false, "score": 1, "creation_date": 1492392466, "post_id": 43441099, "comment_id": 73944482, "body": "On further review, it looks like this was what I was looking for."}], "tags": [], "owner": {"reputation": 140, "user_id": 1106523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5409c25d3046ce7241a3849f8dbc55ac?s=128&d=identicon&r=PG", "display_name": "for1096", "link": "https://stackoverflow.com/users/1106523/for1096"}, "is_accepted": true, "score": 0, "last_activity_date": 1492380929, "last_edit_date": 1492380929, "creation_date": 1492370262, "answer_id": 43441099, "question_id": 43441047, "link": "https://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a/43441099#43441099", "title": "What&#39;s the best way to register a function to run during an unexpected exit of a Rust program?", "body": "<p>Try <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\"><code>catch_unwind</code></a>. I haven't used it, so I cannot guarantee it works.</p>\n"}, {"comments": [{"owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "edited": false, "score": 1, "creation_date": 1492373432, "post_id": 43441583, "comment_id": 73940104, "body": "I hadn&#39;t thought of using threads for this sort of thing, as opposed to concurrency. I&#39;m not going to accept for a bit, in case more ideas come in, but I tried this, and it seems to be working really well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492380879, "post_id": 43441583, "comment_id": 73942211, "body": "As the other answer says, <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\"><code>catch_unwind</code></a> allows avoiding a thread."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492388456, "post_id": 43441583, "comment_id": 73943815, "body": "@Shepmaster Is there a downside to <code>catch_unwind</code>? The <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html#notes\" rel=\"nofollow noreferrer\">documentation</a> mentions that it won&#39;t work for abortive panics. I don&#39;t know how to check if my solution would work there either as I don&#39;t know an example of what would cause an abortive panic as opposed to an unwind."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492389965, "post_id": 43441583, "comment_id": 73944083, "body": "@PeterHall as <a href=\"http://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a/43441583?noredirect=1#comment73940693_43441099\">user4815162342 mentions</a>, both solutions will fail in the face of <a href=\"https://blog.rust-lang.org/2016/07/07/Rust-1.10.html\" rel=\"nofollow noreferrer\">panic=abort</a>. The good news is that that setting is up to the binary author; since OP is making an editor, presumably they are making a binary and can opt to not set that option. The threaded answer has the benefit of working before Rust 1.9 though."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1492422146, "last_edit_date": 1492422146, "creation_date": 1492373065, "answer_id": 43441583, "question_id": 43441047, "link": "https://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a/43441583#43441583", "title": "What&#39;s the best way to register a function to run during an unexpected exit of a Rust program?", "body": "<p>In the latest stable Rust, @for1096's answer is the best. In your case, it might be quite simple to apply because your clean-up does not need to use state that is shared with the application code:</p>\n\n<pre><code>use std::panic::catch_unwind;\n\nfn run_editor(){\n    panic!(\"Error!\");\n    println!(\"Running!\");\n}\n\nfn clean_up(){\n    println!(\"Cleaning up!\");\n}\n\nfn main(){\n    match catch_unwind(|| run_editor()) {\n        Ok(_) =&gt; println!(\"Exited successfully\"),\n        Err(_) =&gt;  clean_up()\n    }\n}\n</code></pre>\n\n<p>If your clean-up requires accessing shared state with your application, then you will need some additional machinery to convince the compiler that it is safe. For example, if your application looks like this:</p>\n\n<pre><code>// The shared state of your application\nstruct Editor { /* ... */ }\n\nimpl Editor {\n    fn run(&amp;mut self){\n        println!(\"running!\");\n        // panic!(\"Error!\");\n    }\n\n    fn clean_up(&amp;mut self){\n        println!(\"cleaning up!\");\n    }\n\n    fn new() -&gt; Editor {\n        Editor { }\n    }\n}\n</code></pre>\n\n<p>Then, in order to call <code>clean_up</code>, you would have to manage access to the data, something like this:</p>\n\n<pre><code>use std::panic::catch_unwind;\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let editor = Arc::new(Mutex::new(Editor::new()));\n\n    match catch_unwind(|| editor.lock().unwrap().run()) {\n         Ok(_) =&gt; println!(\"Exited successfully\"),\n         Err(_) =&gt; {\n             println!(\"Application panicked.\");\n             let mut editor = match editor.lock() {\n                Ok(guard) =&gt; guard,\n                Err(poisoned) =&gt; poisoned.into_inner(),\n             };\n             editor.clean_up();\n         }\n    }\n}\n</code></pre>\n\n<p>Prior to Rust 1.9, you can only handle panics that occur in a child thread. This isn't much different except that you need to clone the <code>Arc</code> because the original one will need to be <code>move</code>d into the thread closure.</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Arc, Mutex};\n\nfn main() {\n    let editor = Arc::new(Mutex::new(Editor::new()));\n    // clone before the original is moved into the thread closure\n    let editor_recovery = editor.clone();\n\n    let child = thread::spawn(move || {\n         editor.lock().unwrap().run();\n    });\n\n    match child.join() {\n        Ok(_) =&gt; println!(\"Exited successfully\"),\n        Err(_) =&gt; {\n            println!(\"Application panicked.\");\n            let mut editor = match editor_recovery.lock() {\n                Ok(guard) =&gt; guard,\n                Err(poisoned) =&gt; poisoned.into_inner(),\n            };\n            editor.clean_up();\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 0, "creation_date": 1492389447, "post_id": 43443144, "comment_id": 73943990, "body": "A downvote? I shouldn&#39;t have said &quot;in C&quot; I guess. Because using a subprocess is really the <i>only</i> reliable way to get cleanup."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1492390309, "post_id": 43443144, "comment_id": 73944130, "body": "Unfortunately, we do get occasional answers where the poster misses the language completely. This isn&#39;t such a case, so I&#39;ve edited a bit to clarify that your solution is language agnostic. However, <a href=\"http://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a/43441583?noredirect=1#comment73942311_43441099\">like the other answer</a>, this answer is also pretty sparse. Pointing at the idiomatic Rust code to implement the solution (calling <code>fork</code> directly isn&#39;t idiomatic) and explaining why it&#39;s the &quot;only reliable way&quot; would help a lot."}], "tags": [], "owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "is_accepted": false, "score": 0, "last_activity_date": 1551404409, "last_edit_date": 1551404409, "creation_date": 1492384232, "answer_id": 43443144, "question_id": 43441047, "link": "https://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a/43443144#43443144", "title": "What&#39;s the best way to register a function to run during an unexpected exit of a Rust program?", "body": "<p>A common solution to this problem in Unix applications and using other languages such as C is to <code>fork()</code> and have your parent wait for the child. On an error exit by the child, clean up.</p>\n\n<p>This is really the only reliable way to clean up if the clean up is important. For example, your program might be killed by the Linux OOM kill. It will never be able to run a language specific panic, exception, at_exit or anything like that because the operating system simply destroys it.</p>\n\n<p>By having a separate process watching it, that process can handle any special cleanup of files or shared memory.</p>\n\n<p>This solution does not really require using <code>fork()</code>. The parent could be a shell script or a separate executable.</p>\n"}], "owner": {"reputation": 438, "user_id": 3739851, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/bP6eh.jpg?s=128&g=1", "display_name": "isaacg", "link": "https://stackoverflow.com/users/3739851/isaacg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 550, "favorite_count": 0, "accepted_answer_id": 43441099, "answer_count": 3, "score": 2, "last_activity_date": 1551404409, "creation_date": 1492369898, "last_edit_date": 1492380784, "question_id": 43441047, "link": "https://stackoverflow.com/questions/43441047/whats-the-best-way-to-register-a-function-to-run-during-an-unexpected-exit-of-a", "title": "What&#39;s the best way to register a function to run during an unexpected exit of a Rust program?", "body": "<p>I'm creating a terminal text editor in Rust. The editor puts the terminal into raw mode, disabling character echoing and the like, and then restores the original terminal function upon exit.</p>\n\n<p>However, the editor has some bugs, and crashes unexpectedly every now and again due to issues like unsigned variable underflow. When this happens, the cleanup code which would restore the terminal to its original state never runs.</p>\n\n<p>The cleanup function I'd like to run is the following:</p>\n\n<pre><code>fn restore_orig_mode(editor_config: &amp;EditorConfig) -&gt; io::Result&lt;()&gt; {\n    termios::tcsetattr(STDIN, termios::TCSAFLUSH, &amp;editor_config.orig_termios)\n}\n</code></pre>\n"}, {"tags": ["rust", "unions"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1492366358, "post_id": 43440360, "comment_id": 73937789, "body": "Are you aware of <a href=\"https://github.com/rust-lang/rust/pull/36016\" rel=\"nofollow noreferrer\">unions</a> in Rust?"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492366530, "post_id": 43440360, "comment_id": 73937850, "body": "@MatthieuM. Yes, I have read about that, but I&#39;m not sure how I could use them to communicate with C functions. At the moment, I have been using the information from this tutorial: <a href=\"http://hermanradtke.com/2016/03/17/unions-rust-ffi.html\" rel=\"nofollow noreferrer\">hermanradtke.com/2016/03/17/unions-rust-ffi.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1492366815, "post_id": 43440360, "comment_id": 73937943, "body": "@MatthieuM. what am I missing with this union? Having the type be a part of the union seems very wrong to me; won&#39;t the type itself be written the the same memory as all the other union members?"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492367123, "post_id": 43440360, "comment_id": 73938030, "body": "@Shepmaster This works by including the <code>type</code> value into every struct type, e.g. see the definition of <code>SDL_KeyboardEvent</code>: <a href=\"https://www.libsdl.org/release/SDL-1.2.15/docs/html/sdlkeyboardevent.html\" rel=\"nofollow noreferrer\">libsdl.org/release/SDL-1.2.15/docs/html/sdlkeyboardevent.htm&zwnj;&#8203;l</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492367154, "post_id": 43440360, "comment_id": 73938039, "body": "@PhilippLudwig ah, I was just about to post to answer my own question! Silly C and fake-inheritance :-)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492368427, "post_id": 43440360, "comment_id": 73938473, "body": "@Shepmaster: it&#39;s an artifact of the way struct are laid out in memory in C (and C++), basically if two types share a &quot;prefix&quot;, then you can write one type in the union and read the fields of the prefix through the other. It&#39;s an exception to the regular lifetime rules."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1492385633, "post_id": 43440360, "comment_id": 73943281, "body": "Why are you reading <code>event_type</code> as 4-bytes when it&#39;s defined in C as a single byte?"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1492414242, "post_id": 43440360, "comment_id": 73950180, "body": "Because it&#39;s actually uint32_t, I copied the wrong struct from SDL1 (I&#39;m targeting SDL2)."}], "answers": [{"comments": [{"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1492366730, "post_id": 43440488, "comment_id": 73937910, "body": "Thanks! Just one follow-up question: Since they are unstable, would you recommend using unions or manually accessing the bytes like I did in my posted code?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 1, "creation_date": 1492366945, "post_id": 43440488, "comment_id": 73937968, "body": "@PhilippLudwig ultimately, it depends on your usecase. For most things I do, targeting nightly isn&#39;t a problem, so I&#39;d use unions because I don&#39;t want to mess around with the low-level bitbanging unless I&#39;m writing code for the AVR. If you have to / choose to target stable, then your answer is made for you ^_^"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1492367001, "post_id": 43440488, "comment_id": 73937990, "body": "Thanks! Since I&#39;m just learning, I will be playing around with the rust unions :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1492367214, "last_edit_date": 1492367214, "creation_date": 1492366568, "answer_id": 43440488, "question_id": 43440360, "link": "https://stackoverflow.com/questions/43440360/how-can-i-access-values-from-a-c-union-in-rust/43440488#43440488", "title": "How can I access values from a C union in Rust?", "body": "<p>Unions are basically exactly like C, which means they are unsafe to access. They are also an unstable feature as of Rust 1.16:</p>\n\n<pre><code>#![feature(untagged_unions)]\n\nextern crate libc;\n\n// Definitions for SDL_ActiveEvent, SDL_KeyboardEvent, etc.\n\n#[repr(C)]\nunion SDLEvent {\n    typ: libc::uint8_t,\n    active: SDL_ActiveEvent,\n    key: SDL_KeyboardEvent,\n    // All the rest\n}\n\nfn thing(event: SDLEvent) {\n    unsafe { \n        println!(\"{}\", event.typ);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 277, "favorite_count": 0, "accepted_answer_id": 43440488, "answer_count": 1, "score": 2, "last_activity_date": 1492367214, "creation_date": 1492365834, "last_edit_date": 1492366110, "question_id": 43440360, "link": "https://stackoverflow.com/questions/43440360/how-can-i-access-values-from-a-c-union-in-rust", "title": "How can I access values from a C union in Rust?", "body": "<p>I'm trying to call the function <code>SDL_PollEvent</code> from the C library <code>SDL2</code>. I'm aware that there are already wrappers available, but I'd like to create my own, just for learning. The function expects a pointer to this C union:</p>\n\n<pre><code>typedef union{\n  Uint8 type;\n  SDL_ActiveEvent active;\n  SDL_KeyboardEvent key;\n  SDL_MouseMotionEvent motion;\n  SDL_MouseButtonEvent button;\n  SDL_JoyAxisEvent jaxis;\n  SDL_JoyBallEvent jball;\n  SDL_JoyHatEvent jhat;\n  SDL_JoyButtonEvent jbutton;\n  SDL_ResizeEvent resize;\n  SDL_ExposeEvent expose;\n  SDL_QuitEvent quit;\n  SDL_UserEvent user;\n  SDL_SysWMEvent syswm;\n} SDL_Event;\n</code></pre>\n\n<p>I have imported the function like this:</p>\n\n<pre><code>#[link(name = \"SDL2\")]\nextern \"C\" {\n    fn SDL_PollEvent(event: *mut SdlEvent) -&gt; libc::c_int;\n} \n</code></pre>\n\n<p>And declared the type like this:</p>\n\n<pre><code>type SdlEvent = [u8; 56];                                                    \n</code></pre>\n\n<p>Now I can call <code>SDL_Pollevent</code> and retrieve the <code>type</code> value of the union:</p>\n\n<pre><code>// According to sizeof(SDL_Event), the unit is 56 bytes\nlet mut sdl_event: SdlEvent = [0; 56];\n\nunsafe { SDL_PollEvent(&amp;mut sdl_event) };\n\nlet event_type: u32 = u32::from_be((sdl_event[0] as u32) &lt;&lt; 24 | (sdl_event[1] as u32) &lt;&lt; 16 |\n                                   (sdl_event[2] as u32) &lt;&lt; 8 |\n                                   (sdl_event[3] as u32));\n\nmatch event_type {                              \n    0x100 =&gt; {\n        Event {                     \n             // 0x100 is SDL_QUIT -&gt; quit application\n     }\n    }                                      \n    0x200 =&gt; {\n        Event { // SDL_KEYDOWN\n             // How can I \n     }\n    }                                      \n}\n</code></pre>\n\n<p>This works fine, but now I'd like to know which key has been pressed, which means I need to retrieve the value <code>key</code> of the type <code>SDL_KeyboardEvent</code>. How can I do this?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "is_accepted": false, "score": 2, "last_activity_date": 1492365529, "last_edit_date": 1492365529, "creation_date": 1492365141, "answer_id": 43440251, "question_id": 43439771, "link": "https://stackoverflow.com/questions/43439771/how-do-i-create-an-empty-byte-array/43440251#43440251", "title": "How do I create an empty byte array?", "body": "<p>The <a href=\"https://docs.rs/openssl/0.9.11/openssl/rsa/struct.Rsa.html#method.private_encrypt\" rel=\"nofollow noreferrer\"><code>private_encrypt()</code></a> method expects a mutable slice of a sufficiently long buffer (<code>key_pair.size()</code> bytes). Change</p>\n\n<pre><code>let mut result = b\" \";\nkey_pair.private_encrypt(text, result, pad);\n</code></pre>\n\n<p>to</p>\n\n<pre><code>let mut result = vec![0; key_pair.size()];\nkey_pair.private_encrypt(text, &amp;mut result, pad);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1492365675, "last_edit_date": 1495542375, "creation_date": 1492365675, "answer_id": 43440334, "question_id": 43439771, "link": "https://stackoverflow.com/questions/43439771/how-do-i-create-an-empty-byte-array/43440334#43440334", "title": "How do I create an empty byte array?", "body": "<p>Reading the error messages will help you far more; <em>mismatched types</em>, <em>types differ in mutability</em>, <em>expected type <code>&amp;mut [u8]</code>, found type <code>&amp;[u8; 0]</code></em>. You problem isn't how to create an array, it's that you aren't creating the right type of array.</p>\n\n<p><a href=\"https://stackoverflow.com/q/21747136/155423\">Printing the type of the variable</a> will show that <code>b\" \"</code> creates a <code>&amp;[u8; 1]</code> \u2014 an <strong>immutable</strong> reference to an array. It doesn't matter what you try, you won't be able to write into this data. In fact, it's stored in the static data in the compiled executable.</p>\n\n<p>Instead, you need something that can be used as a mutable slice. The two primary ways are to create an actual array or a <code>Vec</code>:</p>\n\n<pre><code>// Array\nlet mut result = [0; 24];\nkey_pair.private_encrypt(text, &amp;mut result, pad);\n\n// Vec\nlet mut result = vec![0; 24];\nkey_pair.private_encrypt(text, &amp;mut result, pad);\n</code></pre>\n\n<p>An array is stack-allocated and has a fixed size and capacity which must be equal. A vector is heap-allocated, has a dynamic size and capacity that may differ from each other.</p>\n\n<p>Both of these can be dereferenced to a <code>&amp;mut [u8]</code>.</p>\n\n<p>Picking the appropriate size for your array or vector is something that is application specific. Checking the OpenSSL documentation is the right course of action.</p>\n"}], "owner": {"reputation": 964, "user_id": 4200103, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f0044a7575ce0b9f34649eb380d58a5a?s=128&d=identicon&r=PG&f=1", "display_name": "Anton", "link": "https://stackoverflow.com/users/4200103/anton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9451, "favorite_count": 0, "accepted_answer_id": 43440334, "answer_count": 2, "score": 4, "last_activity_date": 1492365675, "creation_date": 1492362462, "last_edit_date": 1492364706, "question_id": 43439771, "link": "https://stackoverflow.com/questions/43439771/how-do-i-create-an-empty-byte-array", "title": "How do I create an empty byte array?", "body": "<p>How can I create an empty <code>[u8]</code> that I can then pass to an openssl function so it can write it's result to it?</p>\n\n<pre><code>fn test_encrypt(key_pair: openssl::rsa::Rsa) {\n    let text = b\"Hello\";\n    println!(\"{:?}\", text);\n    let mut result = b\" \";\n    let pad = openssl::rsa::Padding::from_raw(1);\n    key_pair.private_encrypt(text, result, pad);\n}\n</code></pre>\n\n<p>My code currently results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:36\n   |\n20 |     key_pair.private_encrypt(text, result, pad);\n   |                                    ^^^^^^ types differ in mutability\n   |\n   = note: expected type `&amp;mut [u8]`\n              found type `&amp;[u8; 0]`\n</code></pre>\n"}, {"tags": ["c++", "binary", "rust", "mime-types"], "comments": [{"owner": {"reputation": 140, "user_id": 1106523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5409c25d3046ce7241a3849f8dbc55ac?s=128&d=identicon&r=PG", "display_name": "for1096", "link": "https://stackoverflow.com/users/1106523/for1096"}, "edited": false, "score": 0, "creation_date": 1492370489, "post_id": 43438672, "comment_id": 73939131, "body": "If this is actually a dup then at least these indicated one cannot answer op&#39;s question."}], "owner": {"reputation": 617, "user_id": 3473012, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/goi2u.png?s=128&g=1", "display_name": "PEAR", "link": "https://stackoverflow.com/users/3473012/pear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 342, "favorite_count": 0, "closed_date": 1492356643, "answer_count": 0, "score": 3, "last_activity_date": 1492356725, "creation_date": 1492355521, "last_edit_date": 1492356725, "question_id": 43438672, "link": "https://stackoverflow.com/questions/43438672/why-is-the-mime-type-of-a-rust-program-application-x-sharedlib", "closed_reason": "Duplicate", "title": "Why is the MIME-type of a Rust program application/x-sharedlib?", "body": "<p>I've got two Hello World programs, written in C++ and Rust:</p>\n\n<p><strong>main.cpp</strong></p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"Hello World!\");\n}\n</code></pre>\n\n<p>I compiled both of them using these commands:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>g++ main.cpp -o Test.bin\n</code></pre>\n\n<p>and</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc main.rs -o Test-Rust.bin\n</code></pre>\n\n<p>Checking for the MIME-type of the C++ binary returned an executable, as I expected:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ file --mime-type Test.bin \nTest.bin: application/x-executable\n</code></pre>\n\n<p>But the Rust binary appears to be a shared library:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ file --mime-type Test-Rust.bin \nTest-Rust.bin: application/x-sharedlib\n</code></pre>\n\n<p>Why does the Rust compiler not output a plain application like <code>g++</code> does?</p>\n"}, {"tags": ["string", "rust"], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1492342677, "post_id": 43436683, "comment_id": 73930587, "body": "<code>rand::sample(rng, iterable, 1)</code> has different complexity than <code>array[rand() % array.size()]</code> because it has to iterate through the iterator every time anew. It would probably be more efficient to make <code>consonants</code> a Vec and use <code>consonants[rng.gen_range(0, consonants.len())]</code> or equivalent."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492343300, "post_id": 43436683, "comment_id": 73930755, "body": "@user4815162342 You are right. Especially when OP doesn&#39;t need UTF-8 support (e.g. only English consonants), we can use constant time indexing. I added a new version which does exactly that!"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1492343659, "post_id": 43436683, "comment_id": 73930855, "body": "Thanks! An option that retains good performance characterisics will still supporting non-ASCII consonants is <a href=\"http://play.integer32.com/?gist=a1cceb0758634e614cc4daac5cef60da&amp;version=undefined\" rel=\"nofollow noreferrer\"><code>let consonants = &quot;...&quot;.chars().collect::&lt;Vec&lt;_&gt;&gt;()</code></a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492344864, "post_id": 43436683, "comment_id": 73931153, "body": "OP doesn&#39;t mention why they are using a string, but it could be because they want to have a collection of characters. I&#39;d suggest a literal array in that case."}, {"owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "edited": false, "score": 0, "creation_date": 1492350053, "post_id": 43436683, "comment_id": 73932616, "body": "Whoa, thanks so much, Lukas/guys! I really appreciate the thought that went into the answer, and the multiple solutions offered for me to compare. It&#39;s really helpful for a beginning Rust developer like myself. I&#39;d never have thought of a vector of chars, but that&#39;s exactly what I&#39;m after. Thanks again. :)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1492346128, "last_edit_date": 1492346128, "creation_date": 1492341704, "answer_id": 43436683, "question_id": 43436544, "link": "https://stackoverflow.com/questions/43436544/get-a-random-character-from-a-string-and-append-to-another-string/43436683#43436683", "title": "Get a random character from a string and append to another string", "body": "<p>A few things:</p>\n\n<ul>\n<li><p>You don't need to use <code>format!()</code> here. There is <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.push\" rel=\"noreferrer\"><code>String::push()</code></a> which appends a single char.</p></li>\n<li><p>There is also the <a href=\"https://docs.rs/rand/0.3.15/rand/fn.sample.html\" rel=\"noreferrer\"><code>rand::sample()</code></a> function which can randomly choose multiple elements from an iterator. This looks like the perfect fit!</p></li>\n</ul>\n\n<p>So let's see how this fits together! I created three different versions for different use cases.</p>\n\n<h3>1. Unicode string (the general case)</h3>\n\n<pre><code>let consonants = \"bcdfghjklmnpqrstvwxyz\";\nlet mut result = String::new();\n\nresult.push(rand::sample(&amp;mut rand::thread_rng(), consonants.chars(), 1)[0]);\n//                                                                    |  |\n//                             sample one element from the iterator --+  |\n//                                                                       |\n//                      get the first element from the returned vector --+\n</code></pre>\n\n<p>(<a href=\"http://play.integer32.com/?gist=ca8401b177b4f04cf8706e6ddb0957ea&amp;version=undefined\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>We sample only one element from the iterator and immediately push it to the string. Still not as short as with C's <code>rand()</code>, but please note that <a href=\"https://channel9.msdn.com/Events/GoingNative/2013/rand-Considered-Harmful\" rel=\"noreferrer\"><code>rand()</code> is considered harmful</a> for any kind of serious use! Using C++'s <code>&lt;random&gt;</code> header is a lot better, but will require a little bit more code, too. Additionally, your C version can't handle multi-byte characters (e.g. UTF-8 encoding), while the Rust version has full UTF-8 support. </p>\n\n<h3>2. ASCII string</h3>\n\n<p>However, if you only want to have a string with English consonants, then UTF-8 is not needed and we can make use of O(1) indexing, by using a byte slice:</p>\n\n<pre><code>use rand::{thread_rng, Rng};\n\nlet consonants = b\"bcdfghjklmnpqrstvwxyz\";\nlet mut result = String::new();\n\nresult.push(thread_rng().choose(consonants).cloned().unwrap().into());\n//      convert Option&lt;&amp;u8&gt; into Option&lt;u8&gt; ^^^^^^   \n// unwrap, because we know `consonants` is not empty ^^^^^^\n//                                   convert `u8` into `char` ^^^^\n</code></pre>\n\n<p>(<a href=\"http://play.integer32.com/?gist=a8427751b47fc60e177ebddf08482b19&amp;version=undefined\" rel=\"noreferrer\">Playground</a>)</p>\n\n<h3>3. Collection of characters with Unicode support</h3>\n\n<p>As mentioned in the comments, you probably just want a collection of characters (\"consonants\"). This means, we don't have to use a string, but rather an array of <code>chars</code>. So here is one last version which does have UTF-8 support <em>and</em> avoids O(n) indexing:</p>\n\n<pre><code>use rand::{thread_rng, Rng};\n\n// If you need to avoid the heap allocation here, you can create a static\n// array like this: let consonants = ['b', 'c', 'd', ...];\nlet consonants: Vec&lt;_&gt; = \"bcdfghjklmnpqrstvwxyz\".chars().collect();\nlet mut result = String::new();\n\nresult.push(*thread_rng().choose(&amp;consonants).unwrap());\n</code></pre>\n\n<p>(<a href=\"http://play.integer32.com/?gist=2aaa49f4a890db23afe133a538ffcabf&amp;version=undefined\" rel=\"noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 87, "user_id": 4484796, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/acdfdb451efdacf4d97fc69d3f0ac86c?s=128&d=identicon&r=PG&f=1", "display_name": "Quintus", "link": "https://stackoverflow.com/users/4484796/quintus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 661, "favorite_count": 0, "accepted_answer_id": 43436683, "answer_count": 1, "score": 2, "last_activity_date": 1492346128, "creation_date": 1492340735, "last_edit_date": 1492344767, "question_id": 43436544, "link": "https://stackoverflow.com/questions/43436544/get-a-random-character-from-a-string-and-append-to-another-string", "title": "Get a random character from a string and append to another string", "body": "<p>I'm trying to write the Rust equivalent of the following C++ code:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>result += consonants[rand() % consonants.length()];\n</code></pre>\n\n<p>It is meant to take a random character from the string <code>consonants</code> and append it to the string <code>result</code>.</p>\n\n<p>I seem to have found a working Rust equivalent, but it's... monstrous, to say the least. What would be a more idiomatic equivalent?</p>\n\n<pre><code>format!(\"{}{}\", result, consonants.chars().nth(rand::thread_rng().gen_range(1, consonants.chars().count())).unwrap().to_string());\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492344741, "post_id": 43436716, "comment_id": 73931125, "body": "I wonder what the difference of <code>v.extend(iter.rev)</code> vs <code>v.extend(iter); v.rev()</code> would be. The latter <i>feels</i> like it cold be more performant."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492345691, "post_id": 43436716, "comment_id": 73931385, "body": "@Shepmaster I had the exact opposite feeling :) so I decided to measure. On my machine, <a href=\"https://pastebin.com/MtH0MYd7\" rel=\"nofollow noreferrer\">this</a> takes ~1.02s to execute, while switching to <code>v.extend(); v.rev()</code> takes ~1.25s. (Using <code>extend_from_slice()</code> makes no difference.) It seems my hunch was correct, at least in the current compiler."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1492345856, "post_id": 43436716, "comment_id": 73931436, "body": "The measured result makes sense; <code>v.extend(iter.rev())</code> reads the data once (in reverse order) and writes it once. On the other hand, <code>v.extend(iter); v.reverse()</code> must iterate over the data twice: once to copy it, and then again to reverse it. Ideally <code>rustc</code> would figure out what&#39;s going on and generate the same code for both (like it already does for <code>extend_from_slice</code> vs <code>extend</code>), but I guess we&#39;re not there yet."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 8, "last_activity_date": 1492343408, "last_edit_date": 1492343408, "creation_date": 1492341993, "answer_id": 43436716, "question_id": 43436473, "link": "https://stackoverflow.com/questions/43436473/reverse-order-of-a-reference-to-immutable-array-slice/43436716#43436716", "title": "Reverse order of a reference to immutable array slice", "body": "<p>Not only does <code>reverse</code> return <code>()</code>, it also requires a mutable slice, which you do not have. The optimal solution depends on exactly what you need to do with the data. If you only need to iterate over the data, <code>cur_data.iter().rev()</code> is exactly the right and the most efficient choice.</p>\n\n<p>If you need the reversed data inside a slice, for further processing, or to send the reversed chunk to a function that expects a slice, you can collect the data into a vector, which is pre-allocated and shared among loop iterations to avoid allocation for every chunk:</p>\n\n<pre><code>let mut reversed = Vec::new();\nfor cur_data in data.chunks(chunk_size) {\n     // truncate the slice at the beginning of each iteration.\n     // Vec explicitly guarantees that this will *not* deallocate,\n     // it will only reset its internal length. An allocation will\n     // thus happen only at the first loop iteration.\n     reversed.truncate(0);\n     reversed.extend(cur_data.iter().rev());\n     // &amp;reversed is now the reversed_cur_data you need\n     ...\n}\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 6944293, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mAURp.jpg?s=128&g=1", "display_name": "HagaiH", "link": "https://stackoverflow.com/users/6944293/hagaih"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2644, "favorite_count": 0, "accepted_answer_id": 43436716, "answer_count": 1, "score": 2, "last_activity_date": 1492344660, "creation_date": 1492340220, "last_edit_date": 1492344660, "question_id": 43436473, "link": "https://stackoverflow.com/questions/43436473/reverse-order-of-a-reference-to-immutable-array-slice", "title": "Reverse order of a reference to immutable array slice", "body": "<p>I would like to reverse the order of a slice:</p>\n\n<pre><code>&amp;[1, 2, 3] -&gt; &amp;[3, 2, 1]\n</code></pre>\n\n<p>This is my code:</p>\n\n<pre><code>fn iterate_over_file(data: &amp;[u8], ...) -&gt; ... {\n    ...\n    for cur_data in data.chunks(chunk_size) {\n         let reversed_cur_data = cur_data.reverse() // this returns ()\n         ...\n    ...\n }\n</code></pre>\n\n<p>This <code>data</code> parameter comes from a file I read in using <a href=\"https://docs.rs/filebuffer/0.1.1/filebuffer/struct.FileBuffer.html\" rel=\"nofollow noreferrer\"><code>FileBuffer</code></a>, and I'd like to keep it as a referenced slice (and not turn it into an owned <code>Vec</code>, since it's a heavy computation to make).</p>\n\n<p>How could I reverse the order of <code>cur_data</code> with the minimal amount of operations and memory allocation? Its length is known for a specific runtime of my program (called here <code>chunk_size</code>), but it changes between different runs. <code>reversed()</code> seems to return <code>()</code>, which makes sense as it's done in-place, and I only have a referenced slice. <code>.iter().rev()</code> creates an iterator, but then I'd have to call <code>.next()</code> on it several times to get the slice back, which is both not elegant and not effective, as I have at least tens of millions of <code>cur_data</code> lines per file.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1492331860, "post_id": 43435338, "comment_id": 73927966, "body": "Okay, this is not a compile-time constant. The docs also say so. Is there any other way to read page size once and to use it everywhere? Is there any way to write page size into a real compile-time constant? <code>static PAGE_SIZE: i64 = ...</code> maybe? Anything?"}, {"owner": {"reputation": 3416, "user_id": 2484972, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ea1c4b2c5aa3c7da2f2740bc1a643ee0?s=128&d=identicon&r=PG", "display_name": "Tatsuyuki Ishi", "link": "https://stackoverflow.com/users/2484972/tatsuyuki-ishi"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 1, "creation_date": 1492331941, "post_id": 43435338, "comment_id": 73927989, "body": "You can achieve that via a compiler plugin, or build script combined with <code>env!</code>. I cannot recommend allocating on stack, because allocating a page on stack may cause overflow."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1492338965, "post_id": 43435338, "comment_id": 73929653, "body": "@TatsuyukiIshi: I would like to note that using a build script and <code>env!</code> should be done carefully in the event of <i>cross-compiling</i>. The target and host systems may have different page sizes. Thus, I would instead suggest using <code>cfg</code>."}], "tags": [], "owner": {"reputation": 3416, "user_id": 2484972, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ea1c4b2c5aa3c7da2f2740bc1a643ee0?s=128&d=identicon&r=PG", "display_name": "Tatsuyuki Ishi", "link": "https://stackoverflow.com/users/2484972/tatsuyuki-ishi"}, "is_accepted": true, "score": 2, "last_activity_date": 1492331672, "creation_date": 1492331672, "answer_id": 43435338, "question_id": 43435312, "link": "https://stackoverflow.com/questions/43435312/cant-use-lazy-static-integer-constant-for-the-size-of-an-array/43435338#43435338", "title": "Can&#39;t use lazy static integer constant for the size of an array", "body": "<p>This is not compile-time constant at all. Use <code>vec!</code> for anything that can't be determined compile-time:</p>\n\n<pre><code>let mut buffer = vec![0; *PAGE_SIZE as usize];\n</code></pre>\n\n<p>Currently there's no compiler level support for Variable-Length Arrays (VLA).</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 1, "accepted_answer_id": 43435338, "answer_count": 1, "score": 0, "last_activity_date": 1492345554, "creation_date": 1492331464, "last_edit_date": 1492345554, "question_id": 43435312, "link": "https://stackoverflow.com/questions/43435312/cant-use-lazy-static-integer-constant-for-the-size-of-an-array", "title": "Can&#39;t use lazy static integer constant for the size of an array", "body": "<p>The following code gets the page size from <code>sysconf</code> to optimally read files from the filesystem. I am unable to create the buffer with the size:</p>\n\n<pre><code>lazy_static! {\n    static ref PAGE_SIZE: i64 = sysconf(SysconfVariable::ScPagesize).unwrap();\n}\n\nfn main() {\n    let mut buffer = [0; *PAGE_SIZE as usize];\n}\n</code></pre>\n\n<p>Gives me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error\n  --&gt; src/main.rs:6:30\n   |\n6  |         let mut buffer = [0; *PAGE_SIZE as usize];\n   |                              ^^^^^^^^^^ unimplemented constant expression: deref operation\n</code></pre>\n\n<p>I thought it is a operator priority problem and tried to wrap with it braces but the result still the same:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0080]: constant evaluation error\n  --&gt; src/main.rs:6:30\n   |\n6  |         let mut buffer = [0; (*(PAGE_SIZE)) as usize];\n   |                              ^^^^^^^^^^^^^^ unimplemented constant expression: deref operation\n</code></pre>\n\n<p>How to use the constant above for allocating a buffer?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 1, "creation_date": 1520444737, "post_id": 43435072, "comment_id": 85321236, "body": "You may find this issue relevant: <a href=\"https://github.com/rust-lang/rust/issues/48823\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/48823</a>"}], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1492345330, "last_edit_date": 1492345330, "creation_date": 1492331632, "answer_id": 43435335, "question_id": 43435072, "link": "https://stackoverflow.com/questions/43435072/how-to-obtain-the-value-of-a-configuration-flag/43435335#43435335", "title": "How to obtain the value of a configuration flag?", "body": "<p>No.  You can get <em>some</em> of them by tricking Cargo into telling you.  If you place the following into a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build script</a>:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    for (key, value) in env::vars() {\n        if key.starts_with(\"CARGO_CFG_\") {\n            println!(\"{}: {:?}\", key, value);\n        }\n    }\n    panic!(\"stop and dump stdout\");\n}\n</code></pre>\n\n<p>...it will display the <code>cfg</code> flags Cargo is aware of.  The <code>panic!</code> is just there as an easy way to get Cargo to actually show the output instead of hiding it.  For reference, the output this produces looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling dump-cfg v0.1.0 (file:///F:/Programming/Rust/sandbox/cargo-test/dump-cfg)\nerror: failed to run custom build command for `dump-cfg v0.1.0 (file:///F:/Programming/Rust/sandbox/cargo-test/dump-cfg)`\nprocess didn't exit successfully: `F:\\Programming\\Rust\\sandbox\\cargo-test\\dump-cfg\\target\\debug\\build\\dump-cfg-8b04f9ac3818f82a\\build-script-build` (exit code: 101)\n--- stdout\nCARGO_CFG_TARGET_POINTER_WIDTH: \"64\"\nCARGO_CFG_TARGET_ENV: \"msvc\"\nCARGO_CFG_TARGET_OS: \"windows\"\nCARGO_CFG_TARGET_ENDIAN: \"little\"\nCARGO_CFG_TARGET_FAMILY: \"windows\"\nCARGO_CFG_TARGET_ARCH: \"x86_64\"\nCARGO_CFG_TARGET_HAS_ATOMIC: \"16,32,64,8,ptr\"\nCARGO_CFG_TARGET_FEATURE: \"sse,sse2\"\nCARGO_CFG_WINDOWS: \"\"\nCARGO_CFG_TARGET_VENDOR: \"pc\"\nCARGO_CFG_DEBUG_ASSERTIONS: \"\"\n\n--- stderr\nthread 'main' panicked at 'stop', build.rs:9\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>You can extract the values you're interested in from this list, and dump them to a generated source file, which you can then import (using <code>#[path]</code> or <code>include!</code>) into your package's source.</p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 5298014, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70504d741a4294ea2e68f6210822a4ed?s=128&d=identicon&r=PG&f=1", "display_name": "Torbj&#248;rn Birch Moltu", "link": "https://stackoverflow.com/users/5298014/torbj%c3%b8rn-birch-moltu"}, "is_accepted": false, "score": 3, "last_activity_date": 1579365539, "creation_date": 1579365539, "answer_id": 59802630, "question_id": 43435072, "link": "https://stackoverflow.com/questions/43435072/how-to-obtain-the-value-of-a-configuration-flag/59802630#59802630", "title": "How to obtain the value of a configuration flag?", "body": "<p>For <code>target_os</code> specifically, and also for just <code>target_family</code> and <code>target_arch</code>, there are corresponding <code>&amp;str</code> constants in <a href=\"https://doc.rust-lang.org/std/env/consts/\" rel=\"nofollow noreferrer\"><code>std::env::consts::{OS, FAMILY, ARCH}</code></a>.</p>\n"}], "owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 694, "favorite_count": 1, "accepted_answer_id": 43435335, "answer_count": 2, "score": 7, "last_activity_date": 1579365539, "creation_date": 1492329543, "question_id": 43435072, "link": "https://stackoverflow.com/questions/43435072/how-to-obtain-the-value-of-a-configuration-flag", "title": "How to obtain the value of a configuration flag?", "body": "<p>Is there a way of obtaining the value of a <a href=\"https://doc.rust-lang.org/reference.html#conditional-compilation\" rel=\"noreferrer\">configuration flag</a>? For example, I would like to get the value of <code>target_os</code> as <code>str</code>/<code>String</code>, without resorting to the following <code>if-else-if</code> chain:</p>\n\n<pre><code>if cfg!(target_os = \"windows\") {\n    \"windows\"\n} else if cfg!(target_os = \"linux\") {\n    \"linux\"\n// ...\n} else {\n    \"unknown\"\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1492305556, "post_id": 43432722, "comment_id": 73923384, "body": "You&#39;re trying to return references to a local variable; the local variable does not live long enough to return a reference to <i>because</i> it&#39;s local..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492345465, "post_id": 43432722, "comment_id": 73931314, "body": "Basically a duplicate of <a href=\"http://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1492310120, "post_id": 43433083, "comment_id": 73924070, "body": "I didn&#39;t realize std::slice implemented split. It works fine after removing that line."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1492310724, "last_edit_date": 1492310724, "creation_date": 1492309241, "answer_id": 43433083, "question_id": 43432722, "link": "https://stackoverflow.com/questions/43432722/value-wants-to-live-for-whole-function-scope/43433083#43433083", "title": "Value wants to live for whole function scope", "body": "<p>You are copying the input <code>&amp;str</code> here:</p>\n\n<pre><code>let get_string = String::from(get_string);\n</code></pre>\n\n<p>This copy is owned by the function and will be dropped when the function finishes, but you are also returning a <code>HashMap</code> which contains references to it. It should be clear why that won't work.</p>\n\n<p>Removing that one line will actually fix the error because you will then be referencing the function's argument instead.</p>\n"}], "owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 43433083, "answer_count": 1, "score": 1, "last_activity_date": 1545613778, "creation_date": 1492304831, "last_edit_date": 1545613778, "question_id": 43432722, "link": "https://stackoverflow.com/questions/43432722/value-wants-to-live-for-whole-function-scope", "title": "Value wants to live for whole function scope", "body": "<p>Rust is complaining that <code>get_string</code> does not live long enough. It seems to want to stay alive for the whole function scope but I can't see how that happens.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `get_string` does not live long enough\n  --&gt; src\\lib.rs:7:23\n   |\n7  |     for value_pair in get_string.split('&amp;') {\n   |                       ^^^^^^^^^^ does not live long enough\n...\n19 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the body at 3:59...\n  --&gt; src\\lib.rs:3:60\n   |\n3  | fn parse_get(get_string: &amp;str) -&gt; HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; {\n   |                                                            ^\n</code></pre>\n\n<hr>\n\n<pre><code>use std::collections::HashMap;\n\nfn parse_get(get_string: &amp;str) -&gt; HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; {\n    let get_string = String::from(get_string);\n    let mut parameters: HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = HashMap::new();\n\n    for value_pair in get_string.split('&amp;') {\n        let name = value_pair.split('=').nth(0).unwrap();\n        let value = value_pair.split('=').nth(1).unwrap();\n\n        if parameters.contains_key(name) {\n            parameters.get_mut(name).unwrap().push(value);\n        } else {\n            parameters.insert(name, vec![value]);\n        }\n    }\n\n    parameters\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1492322449, "post_id": 43428894, "comment_id": 73926015, "body": "The compiler message about dropping has nothing to do with your call to <code>drop()</code>, only the expiration of variable lifetimes at the end of the block."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1492280604, "post_id": 43429542, "comment_id": 73917190, "body": "You beat me to it by 2 minutes! I thought this was my chance to answer a Rust question while Shepmaster seemed to be taking a break :)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1492280918, "post_id": 43429542, "comment_id": 73917313, "body": "@PeterHall Oh no, I&#39;m sorry :( You could join us <a href=\"http://chat.stackoverflow.com/rooms/62927/rust\">in chat</a> if you like ^_^"}, {"owner": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 0, "creation_date": 1492292182, "post_id": 43429542, "comment_id": 73920812, "body": "&quot;So: the compiler doesn&#39;t know x is dropped, it just knows x is moved.&quot; I&#39;m intrigued, are you trying to say <i>anything</i> here?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 0, "creation_date": 1492292678, "post_id": 43429542, "comment_id": 73920960, "body": "@nodakai Yes, &quot;moving&quot; != &quot;dropping&quot;. For example, a normal vector can be moved without being dropped. In fact by moving it can live longer. An extreme example of that is <code>mem::forget()</code>: the argument is moved into that function but is never ever dropped. Does this help or is anything still unclear?"}, {"owner": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 0, "creation_date": 1492293357, "post_id": 43429542, "comment_id": 73921156, "body": "<code>forget()</code> (to be more precise <code>drop_in_place()</code>) <i>is</i> a compiler intrinsic which is exceptional to Rust&#39;s linear type system. I don&#39;t think it&#39;s fair to refer to it here. Otherwise any functions which take a parameter via move and doesn&#39;t return anything (for example) should be understood as data &quot;sink&quot; which drop the moved data."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 0, "creation_date": 1492294072, "post_id": 43429542, "comment_id": 73921334, "body": "@nodakai You&#39;re right, <code>forget()</code> is not an optimal example here. But functions taking types by value do <i>not</i> necessarily drop them, even if they don&#39;t return anything. They could store the value in a static (<a href=\"http://play.integer32.com/?gist=090f56867efab87f87d8dea9e1f5a671&amp;version=undefined\" rel=\"nofollow noreferrer\">example</a>) or send it to another thread. When you <i>only</i> move a value into a function, then yes, the value is dropped when the function exits. But the function can move the value somewhere else, e.g. another thread. And thta something else can live longer than the function."}, {"owner": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 0, "creation_date": 1492298871, "post_id": 43429542, "comment_id": 73922243, "body": "Again, what are you trying to claim by throwing <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs/blob/master/src/lib.rs#L131\" rel=\"nofollow noreferrer\">a bunch of <code>unsafe</code> code</a> to me? Anything can happen with <code>unsafe</code> (granted, it won&#39;t immediately turn off all the type checks but it <i>does</i> open up a way to circumvent them, like your example did under the hood.) But +1 to your mention to multithreading, I didn&#39;t specifically exclude <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0458-send-improvements.md\" rel=\"nofollow noreferrer\"><code>Send</code></a> types which <code>Vec&lt;&amp;&#39;a i32&gt;</code> in my original question <i>happened</i> not to implement."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "edited": false, "score": 4, "creation_date": 1492322863, "post_id": 43429542, "comment_id": 73926098, "body": "@nodakai I&#39;m not quite sure what you&#39;re trying to achieve with this discussion :/ As far as I can see, your question is answered. Your comments look like you want to argue against me instead of trying to understand. My remark that <code>drop()</code> isn&#39;t special is certainly true, because even the docs clearly state that. Whether or not a function always has to drop or return an owned value when not using unsafe code, that I think is an interesting question! But we shouldn&#39;t explore it here in the comments, but by asking a new question here on SO. And btw: <code>Vec&lt;&amp;i32&gt;</code> does implement <code>Send</code>."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 8, "last_activity_date": 1492299349, "last_edit_date": 1492299349, "creation_date": 1492279776, "answer_id": 43429542, "question_id": 43428894, "link": "https://stackoverflow.com/questions/43428894/moved-variable-still-borrowing-after-calling-drop/43429542#43429542", "title": "Moved variable still borrowing after calling `drop`?", "body": "<p>I can't give you a definite answer, but I'll try to explain a few things here. Let's start with clarifying something:</p>\n\n<blockquote>\n  <p>The compiler knows <code>drop()</code> drops <code>x</code></p>\n</blockquote>\n\n<p>This is not true. While there are a few \"magic\" things in the standard library that the compiler knows about, <code>drop()</code> is not such a <em>lang item</em>. In fact, you could implement <code>drop()</code> yourself and it's actually the easiest thing to do:</p>\n\n<pre><code>fn drop&lt;T&gt;(_: T) {}\n</code></pre>\n\n<p>The function just takes something by value (thus, it's moved into <code>drop()</code>) and since nothing happens inside of <code>drop()</code>, this value is dropped at the end of the scope, like in any other function. So: the compiler doesn't know <code>x</code> is dropped, it just knows <code>x</code> is moved.</p>\n\n<hr>\n\n<p>As you might have noticed, the compiler error stays the same regardless of whether or not we add the <code>drop()</code> call. Right now, the compiler will only look at the <em>scope</em> of a variable when it comes to references. From <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/\" rel=\"noreferrer\">Niko Matsakis' intro to NLL</a>:</p>\n\n<blockquote>\n  <p>The way that the compiler currently works, assigning a reference into a variable means that its lifetime must be as large as the entire scope of that variable.</p>\n</blockquote>\n\n<p>And in <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/05/04/non-lexical-lifetimes-based-on-liveness/\" rel=\"noreferrer\">a later blog post of his</a>:</p>\n\n<blockquote>\n  <p>In particular, today, once a lifetime must extend beyond the boundaries of a single statement [...], it must extend all the way till the end of the enclosing block.</p>\n</blockquote>\n\n<p>This is exactly what happens here, so yes, your problem has to do with all this \"lexical borrowing\" stuff. From the current compilers perspective, the lifetime of the expression <code>&amp;a</code> needs to be at least as large as the scope of <code>x</code>. But this doesn't work, since the reference would outlive <code>a</code>, since the scope of <code>x</code> is larger than the scope of <code>a</code> as pointed out by the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>= note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>And I guess you already know all that, but you can fix your example by swapping the lines <code>let mut x ...;</code> and <code>let a ...;</code>.</p>\n\n<hr>\n\n<p>I'm not sure whether or not this exact problem would be solved by any of the currently proposed solutions. But I hope that we will see soon enough, as all of this is being addressed as part of the Rust 2017 roadmap. A good place to read up on the updates is <a href=\"https://github.com/rust-lang/rust-roadmap/issues/16\" rel=\"noreferrer\">here</a> (which also contains links to the five relevant blog posts of Niko). </p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1492300955, "last_edit_date": 1492300955, "creation_date": 1492279918, "answer_id": 43429571, "question_id": 43428894, "link": "https://stackoverflow.com/questions/43428894/moved-variable-still-borrowing-after-calling-drop/43429571#43429571", "title": "Moved variable still borrowing after calling `drop`?", "body": "<blockquote>\n  <p>The compiler knows <code>drop()</code> drops <code>x</code> (as evident from the error in the commented-out code) </p>\n</blockquote>\n\n<p>The Rust compiler doesn't know anything about <code>drop</code> and what it does. It's just a library function, which <em>could</em> do anything it likes with the value since it now owns it.</p>\n\n<p>The definition of <code>drop</code>, as the documentation points out, is literally just:</p>\n\n<pre><code>fn drop&lt;T&gt;(_x: T) { }\n</code></pre>\n\n<p>It works because it the argument is moved into the function, and is therefore automatically dropped by the compiler when the function finishes.</p>\n\n<p>If you create your own function, you will get exactly the same error message:</p>\n\n<pre><code>fn my_drop&lt;T&gt;(_x: T) { }\n\nfn main() {\n    let mut x: Vec&lt;&amp;i32&gt; = vec![];\n    let a = 1;\n    x.push(&amp;a);\n    my_drop(x);\n    x.len();\n}\n</code></pre>\n\n<p>This is exactly what is meant in the documentation when <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"noreferrer\">it says <code>drop</code> \"isn't magic\"</a>.</p>\n"}], "owner": {"reputation": 6841, "user_id": 1190965, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3e74ed8e572542a718df5f15ead40581?s=128&d=identicon&r=PG", "display_name": "nodakai", "link": "https://stackoverflow.com/users/1190965/nodakai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1511, "favorite_count": 1, "answer_count": 2, "score": 6, "last_activity_date": 1492301444, "creation_date": 1492276233, "last_edit_date": 1492301444, "question_id": 43428894, "link": "https://stackoverflow.com/questions/43428894/moved-variable-still-borrowing-after-calling-drop", "title": "Moved variable still borrowing after calling `drop`?", "body": "<pre><code>fn main() {\n    let mut x: Vec&lt;&amp;i32&gt; = vec![];\n    let a = 1;\n    x.push(&amp;a);\n    drop(x);\n    // x.len(); // error[E0382]: use of moved value: `x`\n}  // `a` dropped here while still borrowed\n</code></pre>\n\n<p>The compiler knows <code>drop()</code> drops <code>x</code> (as evident from the error in the commented-out code) but still thinks the variable is borrowing from <code>a</code>! This is unfair!</p>\n\n<p>Should this be considered as one of numerous dupes of <a href=\"https://github.com/rust-lang/rust/issues/6393\" rel=\"nofollow noreferrer\">rust-lang/rust#6393</a> (which is now tracked by <a href=\"https://github.com/rust-lang/rfcs/issues/811\" rel=\"nofollow noreferrer\">rust-lang/rfcs#811</a>?) But the discussion there seems to be centered on making <code>&amp;mut self</code> and <code>&amp;self</code> coexist in a single block.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 476, "user_id": 1440839, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/45de5817ff1237c5b6781d99ee7eec7c?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/1440839/john"}, "edited": false, "score": 0, "creation_date": 1492278324, "post_id": 43429271, "comment_id": 73916375, "body": "Many thanks for your answer! As mentioned in the question, ultimately I would like to be able to have a vector of all the currently active connections and be able to iterate through the vector and broadcast a message to each of them. Will it be possible to push onto the vector each tcp connection ?"}, {"owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "reply_to_user": {"reputation": 476, "user_id": 1440839, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/45de5817ff1237c5b6781d99ee7eec7c?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/1440839/john"}, "edited": false, "score": 0, "creation_date": 1492278661, "post_id": 43429271, "comment_id": 73916492, "body": "You could try to wrap the connection in an <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> as you did with the vector, but this limits what you can do with it (eg. you cannot move it in the <code>.split</code> call)."}, {"owner": {"reputation": 476, "user_id": 1440839, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/45de5817ff1237c5b6781d99ee7eec7c?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/1440839/john"}, "edited": false, "score": 0, "creation_date": 1492280131, "post_id": 43429271, "comment_id": 73917020, "body": "I realised I missed out the loop from the first thread. Perhaps it will make more sense now."}], "tags": [], "owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "is_accepted": false, "score": 8, "last_activity_date": 1492278210, "creation_date": 1492278210, "answer_id": 43429271, "question_id": 43428512, "link": "https://stackoverflow.com/questions/43428512/concurrent-access-to-vector-from-multiple-threads-using-a-mutex-lock/43429271#43429271", "title": "Concurrent access to vector from multiple threads using a mutex lock", "body": "<p>You get the first error because of the move closure:</p>\n\n<pre><code>let mut connections = Arc::new((Mutex::new(Vec::new())));\nthread::spawn(move || {\n    let mut i = connections.lock().unwrap().len();\n    ....\n}\n</code></pre>\n\n<p>This actually moves the whole <code>Arc</code>, while you only want to move \"a part\" of it (that is, move it in such a way that the reference count is incremented, and that both threads can use it). </p>\n\n<p>To do this, we can use <code>Arc::clone</code>:</p>\n\n<pre><code>let mut connections = Arc::new((Mutex::new(Vec::new())));\nlet conn = connections.clone();\nthread::spawn(move || {\n    let mut i = conn.lock().unwrap().len();\n    ....\n}\n</code></pre>\n\n<p>This way, the cloned <code>Arc</code>, <code>conn</code>, is moved into the closure, and the original <code>Arc</code>, <code>connections</code>, is not, and hence still usable.</p>\n\n<p>I'm not sure exactly what you are doing with your second error, but for the sake of simply counting the connections you do not need to <code>push</code> the entire thing.</p>\n"}], "owner": {"reputation": 476, "user_id": 1440839, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/45de5817ff1237c5b6781d99ee7eec7c?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/1440839/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3867, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1492301054, "creation_date": 1492274098, "last_edit_date": 1492301054, "question_id": 43428512, "link": "https://stackoverflow.com/questions/43428512/concurrent-access-to-vector-from-multiple-threads-using-a-mutex-lock", "title": "Concurrent access to vector from multiple threads using a mutex lock", "body": "<p>I'm using an example provided by the Tokio library and attempting to have a vector of all the currently active TCP connections. Ultimately, I would like to be able to broadcast a message to each of the active connections, by looping through them and writing a message to the socket. </p>\n\n<p>To start with, I am trying to print out the current number of connections in one thread whilst accepting connections in another. </p>\n\n<p>To do this, I'm trying to use a shared vector. I've not yet implemented the removal of connections from the vector as and when they disconnect. </p>\n\n<pre><code>// A tiny async echo server with tokio-core\nextern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::{Future, Stream};\nuse tokio_io::{io, AsyncRead};\nuse tokio_core::net::TcpListener;\nuse tokio_core::reactor::Core;\nuse std::thread;\nuse std::sync::{Arc, Mutex};\nuse std::io::stdout;\nuse std::io::Write;\n\nfn main() {\n    // Create the event loop that will drive this server\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    // Bind the server's socket\n    let addr = \"127.0.0.1:12345\".parse().unwrap();\n    let tcp = TcpListener::bind(&amp;addr, &amp;handle).unwrap();\n\n    let mut connections = Arc::new((Mutex::new(Vec::new())));\n\n    thread::spawn(move || {\n        //Every 10 seconds print out the current number of connections\n        let mut i;\n        loop {              \n          i = connections.lock().unwrap().len();\n          println!(\"There are {} connections\", i);\n          stdout().flush();\n          thread::sleep_ms(10000);\n        }\n    });\n\n\n\n    // Iterate incoming connections\n    let server = tcp.incoming().for_each(|(tcp, _)| {\n\n        connections.lock().unwrap().push(tcp);\n        // Split up the read and write halves\n        let (reader, writer) = tcp.split();\n\n        // Future of the copy\n        let bytes_copied = io::copy(reader, writer);\n\n        // ... after which we'll print what happened\n        let handle_conn = bytes_copied.map(|(n, _, _)| {\n            println!(\"wrote {} bytes\", n)\n        }).map_err(|err| {\n            println!(\"IO error {:?}\", err)\n        });\n\n        // Spawn the future as a concurrent task\n        handle.spawn(handle_conn);\n\n        Ok(())\n    });\n\n    // Spin up the server on the event loop\n    core.run(server).unwrap();\n\n}\n</code></pre>\n\n<p>At the moment this is failing to build with the following errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: capture of moved value: `connections`\n  --&gt; src/main.rs:36:42\n   |\n26 |     thread::spawn(move || {\n   |                   ------- value moved (into closure) here\n...\n36 |     let server = tcp.incoming().for_each(|(tcp, _)| {\n   |                                          ^^^^^^^^^^ value captured here after move\n   |\n   = note: move occurs because `connections` has type `std::sync::Arc&lt;std::sync::Mutex&lt;std::vec::Vec&lt;tokio_core::net::TcpStream&gt;&gt;&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `tcp`\n  --&gt; src/main.rs:40:32\n   |\n38 |         connections.lock().unwrap().push(tcp);\n   |                                          --- value moved here\n39 |         // Split up the read and write halves\n40 |         let (reader, writer) = tcp.split();\n   |                                ^^^ value used here after move\n   |\n   = note: move occurs because `tcp` has type `tokio_core::net::TcpStream`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Is it possible to achieve this without writing any unsafe code?</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492264181, "post_id": 43424982, "comment_id": 73911492, "body": "Producing a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> would go a long way towards getting a good answer. As it is right now, this question feels a lot like like &quot;please write my code for me&quot;. It&#39;s expected to <a href=\"https://meta.stackoverflow.com/q/261592/155423\">show a large amount of effort</a> when asking a question. Right now, any answerer would have to create a basic Rocket application from scratch as well as a applicable client to test it, in addition to actually solving the problem. There&#39;s a vast difference in the amount of effort shown and effort requested."}, {"owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492287018, "post_id": 43424982, "comment_id": 73919352, "body": "I was planning to expand my question as I learn more, but your answer was so quick :) thanks"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1578673478, "last_edit_date": 1578673478, "creation_date": 1492268080, "answer_id": 43427509, "question_id": 43424982, "link": "https://stackoverflow.com/questions/43424982/how-to-parse-multipart-forms-using-abonander-multipart-with-rocket/43427509#43427509", "title": "How to parse multipart forms using abonander/multipart with Rocket?", "body": "<p>Rocket's primary abstraction for data is the <a href=\"https://api.rocket.rs/v0.4/rocket/data/trait.FromData.html\" rel=\"nofollow noreferrer\"><code>FromData</code></a> trait. Given the POST data and the request, you can construct a given type:</p>\n\n<pre><code>pub trait FromData&lt;'a&gt;: Sized {\n    type Error;\n    type Owned: Borrow&lt;Self::Borrowed&gt;;\n    type Borrowed: ?Sized;\n    fn transform(\n        request: &amp;Request, \n        data: Data\n    ) -&gt; Transform&lt;Outcome&lt;Self::Owned, Self::Error&gt;&gt;;\n    fn from_data(\n        request: &amp;Request, \n        outcome: Transformed&lt;'a, Self&gt;\n    ) -&gt; Outcome&lt;Self, Self::Error&gt;;\n}\n</code></pre>\n\n<p>Then, it's just a matter of reading the <a href=\"https://docs.rs/multipart/0.16.1/multipart/server/index.html\" rel=\"nofollow noreferrer\">API for multipart</a> and inserting tab A into slot B:</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\nuse multipart::server::Multipart; // 0.16.1, default-features = false, features = [\"server\"]\nuse rocket::{\n    data::{Data, FromData, Outcome, Transform, Transformed},\n    post, routes, Request,\n}; // 0.4.2\nuse std::io::Read;\n\n#[post(\"/\", data = \"&lt;upload&gt;\")]\nfn index(upload: DummyMultipart) -&gt; String {\n    format!(\"I read this: {:?}\", upload)\n}\n\n#[derive(Debug)]\nstruct DummyMultipart {\n    alpha: String,\n    one: i32,\n    file: Vec&lt;u8&gt;,\n}\n\n// All of the errors in these functions should be reported\nimpl&lt;'a&gt; FromData&lt;'a&gt; for DummyMultipart {\n    type Owned = Vec&lt;u8&gt;;\n    type Borrowed = [u8];\n    type Error = ();\n\n    fn transform(_request: &amp;Request, data: Data) -&gt; Transform&lt;Outcome&lt;Self::Owned, Self::Error&gt;&gt; {\n        let mut d = Vec::new();\n        data.stream_to(&amp;mut d).expect(\"Unable to read\");\n\n        Transform::Owned(Outcome::Success(d))\n    }\n\n    fn from_data(request: &amp;Request, outcome: Transformed&lt;'a, Self&gt;) -&gt; Outcome&lt;Self, Self::Error&gt; {\n        let d = outcome.owned()?;\n\n        let ct = request\n            .headers()\n            .get_one(\"Content-Type\")\n            .expect(\"no content-type\");\n        let idx = ct.find(\"boundary=\").expect(\"no boundary\");\n        let boundary = &amp;ct[(idx + \"boundary=\".len())..];\n\n        let mut mp = Multipart::with_body(&amp;d[..], boundary);\n\n        // Custom implementation parts\n\n        let mut alpha = None;\n        let mut one = None;\n        let mut file = None;\n\n        mp.foreach_entry(|mut entry| match &amp;*entry.headers.name {\n            \"alpha\" =&gt; {\n                let mut t = String::new();\n                entry.data.read_to_string(&amp;mut t).expect(\"not text\");\n                alpha = Some(t);\n            }\n            \"one\" =&gt; {\n                let mut t = String::new();\n                entry.data.read_to_string(&amp;mut t).expect(\"not text\");\n                let n = t.parse().expect(\"not number\");\n                one = Some(n);\n            }\n            \"file\" =&gt; {\n                let mut d = Vec::new();\n                entry.data.read_to_end(&amp;mut d).expect(\"not file\");\n                file = Some(d);\n            }\n            other =&gt; panic!(\"No known key {}\", other),\n        })\n        .expect(\"Unable to iterate\");\n\n        let v = DummyMultipart {\n            alpha: alpha.expect(\"alpha not set\"),\n            one: one.expect(\"one not set\"),\n            file: file.expect(\"file not set\"),\n        };\n\n        // End custom\n\n        Outcome::Success(v)\n    }\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n</code></pre>\n\n<p>I've never used either of these APIs for real, so there's no guarantee that this is a <em>good</em> implementation. In fact, all the panicking on error definitely means it's suboptimal. A production usage would handle all of those cleanly.</p>\n\n<p>However, it does work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>%curl -X POST -F alpha=omega -F one=2 -F file=@hello http://localhost:8000/\nI read this: DummyMultipart { alpha: \"omega\", one: 2, file: [104, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33, 10] }\n</code></pre>\n\n<hr>\n\n<p>An advanced implementation would allow for some abstraction between the user-specific data and the generic multipart aspects. Something like <code>Multipart&lt;MyForm&gt;</code> would be nice.</p>\n\n<p>The author of Rocket <a href=\"https://github.com/SergioBenitez/Rocket/issues/106#issuecomment-294335513\" rel=\"nofollow noreferrer\">points out</a> that this solution allows a malicious end user to POST an infinitely sized file, which would cause the machine to run out of memory. Depending on the intended use, you may wish to establish some kind of cap on the number of bytes read, potentially writing to the filesystem at some breakpoint.</p>\n"}, {"comments": [{"owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "edited": false, "score": 0, "creation_date": 1567888674, "post_id": 57837287, "comment_id": 102102841, "body": "Mods: It&#39;s usually bad practice to link to external code instead of integrating it into the answer, but in this case the code may change together with the rocket and multipart libraries, so it does not make sense to copy-paste the almost 100 lines of code into my answer. The answer to &quot;how do I use this library with rocket&quot; is &quot;take a look at this official up-to-date example&quot;."}, {"owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "reply_to_user": {"reputation": 21453, "user_id": 1839439, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/agMKZ.png?s=128&g=1", "display_name": "Dharman", "link": "https://stackoverflow.com/users/1839439/dharman"}, "edited": false, "score": 1, "creation_date": 1567904979, "post_id": 57837287, "comment_id": 102105048, "body": "@Dharman thanks for the note :) I updated the answer, do you think it is better now?"}], "tags": [], "owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "is_accepted": false, "score": 0, "last_activity_date": 1567904953, "last_edit_date": 1567904953, "creation_date": 1567888573, "answer_id": 57837287, "question_id": 43424982, "link": "https://stackoverflow.com/questions/43424982/how-to-parse-multipart-forms-using-abonander-multipart-with-rocket/57837287#57837287", "title": "How to parse multipart forms using abonander/multipart with Rocket?", "body": "<p>Official support for multipart form parsing in Rocket <a href=\"https://github.com/SergioBenitez/Rocket/issues/106\" rel=\"nofollow noreferrer\">is still being discussed</a>. Until then, take a look at the official example on how to integrate the multipart crate with Rocket: <a href=\"https://github.com/abonander/multipart/blob/master/examples/rocket.rs\" rel=\"nofollow noreferrer\">https://github.com/abonander/multipart/blob/master/examples/rocket.rs</a></p>\n"}], "owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2369, "favorite_count": 2, "accepted_answer_id": 43427509, "answer_count": 2, "score": 6, "last_activity_date": 1578673478, "creation_date": 1492252490, "last_edit_date": 1506693843, "question_id": 43424982, "link": "https://stackoverflow.com/questions/43424982/how-to-parse-multipart-forms-using-abonander-multipart-with-rocket", "title": "How to parse multipart forms using abonander/multipart with Rocket?", "body": "<p><a href=\"https://news.ycombinator.com/item?id=13259619\" rel=\"noreferrer\">This might be useful for me</a>:</p>\n\n<blockquote>\n  <p>I have no idea how you're meant to go about parsing a multipart form\n  besides doing it manually using just the raw post-data string as input</p>\n</blockquote>\n\n<p>I will try to adjust <a href=\"https://github.com/abonander/multipart/blob/master/examples/hyper_server.rs\" rel=\"noreferrer\">the Hyper example</a> but any help will be much appreciated.</p>\n\n<p>Relevant issues:</p>\n\n<ul>\n<li><a href=\"https://github.com/SergioBenitez/Rocket/issues/106\" rel=\"noreferrer\">Support Multipart Forms</a>.</li>\n<li><a href=\"https://github.com/abonander/multipart/issues/57\" rel=\"noreferrer\">support rocket</a></li>\n</ul>\n"}, {"tags": ["indexing", "reference", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492220885, "post_id": 43421100, "comment_id": 73901603, "body": "Use <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>? Pass in a reference to a schema only when decoding, not as an attribute of the <code>Record</code>? Store the schema separately, don&#39;t bundle them? Use owning_ref?"}, {"owner": {"reputation": 879, "user_id": 325684, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/1628d297574c887f877c6c120c11a664?s=128&d=identicon&r=PG", "display_name": "Ben Jones", "link": "https://stackoverflow.com/users/325684/ben-jones"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492271483, "post_id": 43421100, "comment_id": 73914048, "body": "RC seems like overkill since the schema lives exactly as long as the database.  I&#39;d like to bundle them because I consider the schema to be a internal detail.  owning_ref looked like it might be what I want, but I&#39;m a little confused how to use it.  I think I want to follow the RcRef for slices example from here, right?  <a href=\"https://kimundi.github.io/owning-ref-rs/owning_ref/index.html\" rel=\"nofollow noreferrer\">kimundi.github.io/owning-ref-rs/owning_ref/index.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 879, "user_id": 325684, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/1628d297574c887f877c6c120c11a664?s=128&d=identicon&r=PG", "display_name": "Ben Jones", "link": "https://stackoverflow.com/users/325684/ben-jones"}, "edited": false, "score": 0, "creation_date": 1492271066, "post_id": 43425826, "comment_id": 73913904, "body": "Won&#39;t the user still need to objects in order to get a column out of a record?  I was hoping they could do something like <code>database[i].get_column(2)</code> .  Ideally the user doesn&#39;t have to concern themselves with the schema."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 879, "user_id": 325684, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/1628d297574c887f877c6c120c11a664?s=128&d=identicon&r=PG", "display_name": "Ben Jones", "link": "https://stackoverflow.com/users/325684/ben-jones"}, "edited": false, "score": 0, "creation_date": 1492275890, "post_id": 43425826, "comment_id": 73915471, "body": "@BenJones If you access it through the <code>Database</code> struct then you can handle that extra argument so the user doesn&#39;t have to. I updated the code to include that."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1492276546, "last_edit_date": 1492276546, "creation_date": 1492257773, "answer_id": 43425826, "question_id": 43421100, "link": "https://stackoverflow.com/questions/43421100/sharing-schema-with-struct-children/43425826#43425826", "title": "Sharing schema with struct children", "body": "<p>You didn't post very much code, but I imagine that you wanted to get the column information from the record using something like:</p>\n\n<pre><code>impl Record {\n   fn get_column(&amp;self, index: usize) -&gt; Column {\n       // use self.schema to get the column...\n   }\n}\n</code></pre>\n\n<p>A completely different design would be to associate this code with the the schema instead, and pass a <code>&amp;Record</code> when you need the schema to do something on it. You can protect any user from having to deal with the schema directly by using a facade, which can be <code>Database</code> itself:</p>\n\n<pre><code>struct Schema {\n   field_descriptors: Vec&lt;FieldDescriptors&gt;\n}\n\nstruct Database {\n    schema: Schema,\n    records: Vec&lt;Record&gt;,\n}\n\nimpl Schema {\n    fn get_column(&amp;self, record: &amp;Record, index: usize) -&gt; Column {\n        // use self.field_descriptors to get the column...\n    }\n}\n\nimpl Database {\n    fn get_column(&amp;self, row: usize, col_index: usize) -&gt; Column {\n        schema.get_column(&amp;self.records[row], col_index)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 879, "user_id": 325684, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/1628d297574c887f877c6c120c11a664?s=128&d=identicon&r=PG", "display_name": "Ben Jones", "link": "https://stackoverflow.com/users/325684/ben-jones"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1492276546, "creation_date": 1492218064, "last_edit_date": 1492220690, "question_id": 43421100, "link": "https://stackoverflow.com/questions/43421100/sharing-schema-with-struct-children", "title": "Sharing schema with struct children", "body": "<p>I'm trying to implement a parser for a database file format.  Conceptually, I'm trying to define a struct like the following:</p>\n\n<pre><code>struct Database {\n    schema: Vec&lt;FieldDescriptors&gt;,\n    records: Vec&lt;Record&gt;,\n}\n</code></pre>\n\n<p><code>Record</code> is basically just a <code>Vec&lt;u8&gt;</code>.  In order to extract a column from a record, it needs to refer to a schema (to know which bytes to read).  I've tried to implement several designs unsuccessfully:</p>\n\n<p>1) Have the <code>Record</code> struct store a reference to either the <code>Database</code> or the schema (stumbled on this answer: <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>, and I understand why it doesn't work).</p>\n\n<p>2) Create different types for the record data (stored in the database struct), and a record that can actually return the appropriate columns(created on demand when needed).  A record contains a reference to the data, and a reference to the schema.  This worked fine, except that I want to be able to implement the <code>Index</code> trait to access a record.  Unfortunately, <code>index</code> must return a reference, so I can't return a new proxy object on demand.  (also apparently impossible to do currently <a href=\"https://stackoverflow.com/questions/39113649/implementing-index-trait-to-return-a-value-that-is-not-a-reference\">Implementing Index trait to return a value that is not a reference</a>)</p>\n\n<p>Other options I've considered: storing a copy of the schema with each record which would be wasteful, or storing the schema in a box and storing a reference to it in each record(seems the least onerous, but still unsatisfying).  </p>\n\n<p>Am I missing a good solution to this problem?  </p>\n"}, {"tags": ["rust", "petgraph"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1492214181, "post_id": 43420605, "comment_id": 73900411, "body": "By your last sentences, you seem to lack an understanding of the Dijkstra and Bellman-Ford algorithms. I would advise you to study them and their outcomes first."}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492270338, "post_id": 43420605, "comment_id": 73913624, "body": "@E_net4 I don&#39;t understand you, I look at implementation of Dijkstra (<a href=\"https://github.com/bluss/petgraph/blob/master/src/dijkstra.rs\" rel=\"nofollow noreferrer\">github.com/bluss/petgraph/blob/master/src/dijkstra.rs</a>), they just comment hashmap that contains resulted path, and not return this path. How knowledge of Dijkstra implementation can help me?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492274464, "post_id": 43420605, "comment_id": 73914989, "body": "Please include what you have tried in your question. If there is a problem with a specific API, do point it out."}, {"owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "edited": false, "score": 0, "creation_date": 1492278414, "post_id": 43420605, "comment_id": 73916406, "body": "I suggest you take an extra look at the documentation on <code>petgraph::algo::dijkstra</code>, which you linked :)"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "edited": false, "score": 0, "creation_date": 1492278689, "post_id": 43420605, "comment_id": 73916503, "body": "@MartinHaTh I look several times, I can not see answer. I added code to explain why."}, {"owner": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "edited": false, "score": 0, "creation_date": 1492279243, "post_id": 43420605, "comment_id": 73916718, "body": "@user1244932 The key sentences are: (1) &quot;Compute the length of the shortest path from start to every reachable node.&quot;; This implies that this implementation doesn&#39;t only give you the path from your A to your B, but from your A to <i>any</i> B.  (2) &quot;Returns a HashMap that maps NodeId to path cost.&quot;; This gives you the means of which you can &quot;get out&quot; the actual cost :)"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 1357, "user_id": 986816, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/cc682a4311984f4247d03dc5926bf9f4?s=128&d=identicon&r=PG", "display_name": "MartinHaTh", "link": "https://stackoverflow.com/users/986816/martinhath"}, "edited": false, "score": 0, "creation_date": 1492279938, "post_id": 43420605, "comment_id": 73916966, "body": "@MartinHaTh So can you simplify my code? After call to dijkstra I actually expect to be able to print answer, not <code>while</code> loop, search minium and so on."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1508660830, "post_id": 43420605, "comment_id": 80691174, "body": "please use this algorithm: astar."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1610374804, "last_edit_date": 1610374804, "creation_date": 1508681377, "answer_id": 46875017, "question_id": 43420605, "link": "https://stackoverflow.com/questions/43420605/which-algorithm-from-petgraph-will-find-the-shortest-path-from-a-to-b/46875017#46875017", "title": "Which algorithm from petgraph will find the shortest path from A to B?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/43420605/which-algorithm-from-petgraph-will-find-the-shortest-path-from-a-to-b/46875017#comment80691174_43420605\">mentioned in the comments</a> (by the library's primary author, no less), you can use the A* (<code>astar</code>) algorithm:</p>\n<pre><code>use petgraph::{algo, prelude::*}; // 0.5.1\n\nfn main() {\n    let mut graph = Graph::new();\n\n    let a = graph.add_node(&quot;a&quot;);\n    let b = graph.add_node(&quot;b&quot;);\n    let c = graph.add_node(&quot;c&quot;);\n    let d = graph.add_node(&quot;d&quot;);\n\n    graph.extend_with_edges(&amp;[(a, b, 1), (b, c, 1), (c, d, 1), (a, b, 1), (b, d, 1)]);\n\n    let path = algo::astar(\n        &amp;graph,\n        a,               // start\n        |n| n == d,      // is_goal\n        |e| *e.weight(), // edge_cost\n        |_| 0,           // estimate_cost\n    );\n\n    match path {\n        Some((cost, path)) =&gt; {\n            println!(&quot;The total cost was {}: {:?}&quot;, cost, path);\n        }\n        None =&gt; println!(&quot;There was no path&quot;),\n    }\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>The total cost was 2: [NodeIndex(0), NodeIndex(1), NodeIndex(3)]\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1103, "favorite_count": 2, "accepted_answer_id": 46875017, "answer_count": 1, "score": 6, "last_activity_date": 1610374804, "creation_date": 1492213473, "last_edit_date": 1580252323, "question_id": 43420605, "link": "https://stackoverflow.com/questions/43420605/which-algorithm-from-petgraph-will-find-the-shortest-path-from-a-to-b", "title": "Which algorithm from petgraph will find the shortest path from A to B?", "body": "<p>I have a directional graph and want to find the shortest path from node A to node B. I searched on <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">crates.io</a> and found <a href=\"https://github.com/bluss/petgraph\" rel=\"nofollow noreferrer\">petgraph</a> which looks like the most popular crate. It <a href=\"https://docs.rs/petgraph/0.4.4/petgraph/algo/index.html\" rel=\"nofollow noreferrer\">implements a number of algorithms</a>, but none of them solve my task. Did I miss something?</p>\n\n<p>For example, <a href=\"https://docs.rs/petgraph/0.4.4/petgraph/algo/fn.dijkstra.html\" rel=\"nofollow noreferrer\">Dijkstra's algorithm</a> returns path costs, but which path has the minimum cost? The <a href=\"https://docs.rs/petgraph/0.4.4/petgraph/algo/fn.bellman_ford.html\" rel=\"nofollow noreferrer\">Bellman-Ford algorithm</a> returns path costs\nand nodes, but no paths.</p>\n\n<p>This is the simplest way I found to print a path from the graph:</p>\n\n<pre><code>extern crate petgraph;\nuse petgraph::prelude::*;\nuse petgraph::algo::dijkstra;\n\nfn main() {\n    let mut graph = Graph::&lt;&amp;str, i32&gt;::new();\n    let a = graph.add_node(\"a\");\n    let b = graph.add_node(\"b\");\n    let c = graph.add_node(\"c\");\n    let d = graph.add_node(\"d\");\n\n    graph.extend_with_edges(&amp;[(a, b, 1), (b, c, 1), (c, d, 1), (a, b, 1), (b, d, 1)]);\n    let paths_cost = dijkstra(&amp;graph, a, Some(d), |e| *e.weight());\n    println!(\"dijkstra {:?}\", paths_cost);\n\n    let mut path = vec![d.index()];\n    let mut cur_node = d;\n\n    while cur_node != a {\n        let m = graph\n            .edges_directed(cur_node, Direction::Incoming)\n            .map(|edge| paths_cost.get(&amp;edge.source()).unwrap())\n            .min()\n            .unwrap();\n        let v = *m as usize;\n        path.push(v);\n        cur_node = NodeIndex::new(v);\n    }\n\n    for i in path.iter().rev().map(|v| graph[NodeIndex::new(*v)]) {\n        println!(\"path: {}\", i);\n    }\n}\n</code></pre>\n\n<p>As far as I can see, I need to calculate the path myself based on result of\n<code>dijkstra</code>.</p>\n\n<p>I believe that if I implement <code>dijkstra</code> by myself (basing my implementation on <a href=\"https://github.com/bluss/petgraph/blob/0.4.4/src/dijkstra.rs\" rel=\"nofollow noreferrer\">dijkstra.rs</a>), and uncomment the lines with <code>predecessor</code>, and return <code>predecessor</code>, the final variant will be faster because the answer will be something like <code>predecessor[predecessor[d]]</code>.</p>\n"}, {"tags": ["rust", "hyper", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492210379, "post_id": 43419974, "comment_id": 73899551, "body": "<a href=\"http://stackoverflow.com/q/35678267/155423\">How to share mutable state for a Hyper handler?</a> answers half of your question, so I&#39;ve reworded your question to focus on the unique aspect and help avoid downvotes."}, {"owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492211162, "post_id": 43419974, "comment_id": 73899731, "body": "Thank you for your first edit @Shepmaster. After that it looked really polished. However, I don&#39;t like your second edit. I don&#39;t see how the linked question answers my question. They don&#39;t even implement the trait Service."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492211322, "post_id": 43419974, "comment_id": 73899768, "body": "You are always able to roll back any edit you disagree with from the <a href=\"http://stackoverflow.com/posts/43419974/revisions\">revision list</a> or perform further edits."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492211368, "post_id": 43419974, "comment_id": 73899780, "body": "However, the answer is the same, you will need thread-safe interior mutability such as a <code>Mutex</code>, <code>Atomic*</code>, or <code>RwLock</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492211401, "post_id": 43419974, "comment_id": 73899788, "body": "Please be aware that you are expected to <a href=\"https://meta.stackexchange.com/q/39223/281829\">have one question per question, as well</a>."}, {"owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492211508, "post_id": 43419974, "comment_id": 73899812, "body": "Ok, then I will just open a new question for the first one. Thank you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492211567, "post_id": 43419974, "comment_id": 73899827, "body": "Sounds good. In that case, I&#39;d also advise you to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and use a released version of Hyper. Linking to the question I suggested above and showing why it is not valid for your case will go a long way as well!"}, {"owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492452547, "post_id": 43419974, "comment_id": 73969535, "body": "@Shepmaster seems like the Tokio developers want to <a href=\"https://github.com/tokio-rs/tokio-service/issues/9\" rel=\"nofollow noreferrer\">modify</a> or maybe even <a href=\"https://github.com/tokio-rs/tokio-service/issues/8\" rel=\"nofollow noreferrer\">delete</a> the <code>Service</code> trait. So maybe my other question will resolve itself, once tokio-service-0.2 is out."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492452684, "post_id": 43419974, "comment_id": 73969607, "body": "Good to know, but <code>tokio::Service</code> is presumably different from <code>hyper::Service</code>, right? Even if Tokio removes it, would Hyper keep it?"}, {"owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492453811, "post_id": 43419974, "comment_id": 73970188, "body": "@Shepmaster I assume Hyper just copied the trait, when they started to migrate to Tokio. But yeah, maybe they will keep it, even if Tokio does not."}], "answers": [{"comments": [{"owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "edited": false, "score": 1, "creation_date": 1492433597, "post_id": 43420539, "comment_id": 73959099, "body": "Could you also explain why you have <code>futures::future:ok()</code> in the fold method, although you deleted <code>FutureResult</code> from <code>type Future = ...</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "edited": false, "score": 2, "creation_date": 1492434249, "post_id": 43420539, "comment_id": 73959410, "body": "@JayStrictor because the closure given to <code>fold</code> needs to return a future itself: <code>F: FnMut(T, Self::Item) -&gt; Fut</code>. This allows for the operation to itself take time. Since <code>extend_from_slice</code> is synchronous, we &quot;lift&quot; up the result using <code>future::ok</code>. This is pretty separate from the <code>type Future = FutureResult</code>, which is used as the return value of the handler (which I boxed out of laziness)."}, {"owner": {"reputation": 2675, "user_id": 545475, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/zl64v.jpg?s=128&g=1", "display_name": "Arnavion", "link": "https://stackoverflow.com/users/545475/arnavion"}, "edited": false, "score": 0, "creation_date": 1532238489, "post_id": 43420539, "comment_id": 89893748, "body": "The <code>Stream::fold(...)</code> can be replaced with <code>Stream::concat2()</code> that does the same thing. <code>Chunk</code> is itself <code>Extend</code> so the result of <code>concat2</code> will be a single <code>Chunk</code> that contains the whole body."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2675, "user_id": 545475, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/zl64v.jpg?s=128&g=1", "display_name": "Arnavion", "link": "https://stackoverflow.com/users/545475/arnavion"}, "edited": false, "score": 0, "creation_date": 1532273591, "post_id": 43420539, "comment_id": 89901631, "body": "@Arnavion thanks! When I wrote this answer originally, <code>concat2</code> didn&#39;t even exist!"}, {"owner": {"reputation": 113, "user_id": 3332686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15e2ed5715a8480a4398943918930128?s=128&d=identicon&r=PG&f=1", "display_name": "proc", "link": "https://stackoverflow.com/users/3332686/proc"}, "edited": false, "score": 0, "creation_date": 1541295173, "post_id": 43420539, "comment_id": 93167081, "body": "What would be a technique to (for example) stop after 1MiB of input,  using concat2 ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 113, "user_id": 3332686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15e2ed5715a8480a4398943918930128?s=128&d=identicon&r=PG&f=1", "display_name": "proc", "link": "https://stackoverflow.com/users/3332686/proc"}, "edited": false, "score": 1, "creation_date": 1541346426, "post_id": 43420539, "comment_id": 93176521, "body": "@proc <a href=\"https://stackoverflow.com/q/53142508/155423\">How do I apply a limit to the number of bytes read by futures::Stream::concat2?</a>"}, {"owner": {"reputation": 648, "user_id": 1736338, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b8038508304fd4651b6595179ba241c?s=128&d=identicon&r=PG&f=1", "display_name": "M. Leonhard", "link": "https://stackoverflow.com/users/1736338/m-leonhard"}, "edited": false, "score": 0, "creation_date": 1586734082, "post_id": 43420539, "comment_id": 108230690, "body": "If you write data to the filesystem to avoid running out of memory, then you just allow an attacker to fill up your server&#39;s filesystems.  Don&#39;t do that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 648, "user_id": 1736338, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b8038508304fd4651b6595179ba241c?s=128&d=identicon&r=PG&f=1", "display_name": "M. Leonhard", "link": "https://stackoverflow.com/users/1736338/m-leonhard"}, "edited": false, "score": 1, "creation_date": 1586786830, "post_id": 43420539, "comment_id": 108248016, "body": "@M.Leonhard <b><i>you may wish to establish some kind of cap on the number of bytes read</b>, potentially writing to the filesystem at some breakpoint.</i> \u2014 my suggestion is not to write to the filesystem instead of just using memory, but in addition to an existing cap."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1604686152, "last_edit_date": 1604686152, "creation_date": 1492212817, "answer_id": 43420539, "question_id": 43419974, "link": "https://stackoverflow.com/questions/43419974/how-do-i-read-the-entire-body-of-a-tokio-based-hyper-request/43420539#43420539", "title": "How do I read the entire body of a Tokio-based Hyper request?", "body": "<p>I'm going to simplify the problem to just return the total number of bytes, instead of echoing the entire stream.</p>\n<h1>Futures 0.3</h1>\n<h2>Hyper 0.13 + <code>TryStreamExt::try_fold</code></h2>\n<p>See <a href=\"https://stackoverflow.com/a/59428403/155423\">euclio's answer</a> about <a href=\"https://docs.rs/hyper/0.13.9/hyper/body/fn.to_bytes.html\" rel=\"nofollow noreferrer\"><code>hyper::body::to_bytes</code></a> if you just want all the data as one giant blob.</p>\n<p>Accessing the stream allows for more fine-grained control:</p>\n<pre><code>use futures::TryStreamExt; // 0.3.7\nuse hyper::{server::Server, service, Body, Method, Request, Response}; // 0.13.9\nuse std::convert::Infallible;\nuse tokio; // 0.2.22\n\n#[tokio::main]\nasync fn main() {\n    let addr = &quot;127.0.0.1:12346&quot;.parse().expect(&quot;Unable to parse address&quot;);\n\n    let server = Server::bind(&amp;addr).serve(service::make_service_fn(|_conn| async {\n        Ok::&lt;_, Infallible&gt;(service::service_fn(echo))\n    }));\n\n    println!(&quot;Listening on http://{}.&quot;, server.local_addr());\n\n    if let Err(e) = server.await {\n        eprintln!(&quot;Error: {}&quot;, e);\n    }\n}\n\nasync fn echo(req: Request&lt;Body&gt;) -&gt; Result&lt;Response&lt;Body&gt;, hyper::Error&gt; {\n    let (parts, body) = req.into_parts();\n    match (parts.method, parts.uri.path()) {\n        (Method::POST, &quot;/&quot;) =&gt; {\n            let entire_body = body\n                .try_fold(Vec::new(), |mut data, chunk| async move {\n                    data.extend_from_slice(&amp;chunk);\n                    Ok(data)\n                })\n                .await;\n\n            entire_body.map(|body| {\n                let body = Body::from(format!(&quot;Read {} bytes&quot;, body.len()));\n                Response::new(body)\n            })\n        }\n        _ =&gt; {\n            let body = Body::from(&quot;Can only POST to /&quot;);\n            Ok(Response::new(body))\n        }\n    }\n}\n</code></pre>\n<p>Unfortunately, the current implementation of <code>Bytes</code> is no longer compatible with <a href=\"https://docs.rs/futures/0.3.4/futures/stream/trait.TryStreamExt.html#method.try_concat\" rel=\"nofollow noreferrer\"><code>TryStreamExt::try_concat</code></a>, so we have to switch back to a fold.</p>\n<h1>Futures 0.1</h1>\n<h2>hyper 0.12 + <code>Stream::concat2</code></h2>\n<p>Since futures 0.1.14, you can use <a href=\"https://docs.rs/futures/0.1.23/futures/stream/trait.Stream.html#method.concat2\" rel=\"nofollow noreferrer\"><code>Stream::concat2</code></a> to stick together all the data into one:</p>\n<pre><code>fn concat2(self) -&gt; Concat2&lt;Self&gt;\nwhere\n    Self: Sized,\n    Self::Item: Extend&lt;&lt;Self::Item as IntoIterator&gt;::Item&gt; + IntoIterator + Default, \n</code></pre>\n<pre><code>use futures::{\n    future::{self, Either},\n    Future, Stream,\n}; // 0.1.25\n\nuse hyper::{server::Server, service, Body, Method, Request, Response}; // 0.12.20\n\nuse tokio; // 0.1.14\n\nfn main() {\n    let addr = &quot;127.0.0.1:12346&quot;.parse().expect(&quot;Unable to parse address&quot;);\n\n    let server = Server::bind(&amp;addr).serve(|| service::service_fn(echo));\n\n    println!(&quot;Listening on http://{}.&quot;, server.local_addr());\n\n    let server = server.map_err(|e| eprintln!(&quot;Error: {}&quot;, e));\n    tokio::run(server);\n}\n\nfn echo(req: Request&lt;Body&gt;) -&gt; impl Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; {\n    let (parts, body) = req.into_parts();\n\n    match (parts.method, parts.uri.path()) {\n        (Method::POST, &quot;/&quot;) =&gt; {\n            let entire_body = body.concat2();\n            let resp = entire_body.map(|body| {\n                let body = Body::from(format!(&quot;Read {} bytes&quot;, body.len()));\n                Response::new(body)\n            });\n            Either::A(resp)\n        }\n        _ =&gt; {\n            let body = Body::from(&quot;Can only POST to /&quot;);\n            let resp = future::ok(Response::new(body));\n            Either::B(resp)\n        }\n    }\n}\n</code></pre>\n<p>You could also convert the <code>Bytes</code> into a <code>Vec&lt;u8&gt;</code> via <code>entire_body.to_vec()</code> and then convert that to a <code>String</code>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19076719/155423\">How do I convert a Vector of bytes (u8) to a string</a></li>\n</ul>\n<h2>hyper 0.11 + <code>Stream::fold</code></h2>\n<p>Similar to <code>Iterator::fold</code>, <a href=\"https://docs.rs/futures/0.1.23/futures/stream/trait.Stream.html#method.fold\" rel=\"nofollow noreferrer\"><code>Stream::fold</code></a> takes an <em>accumulator</em> (called <code>init</code>) and a function that operates on the accumulator and an item from the stream. The result of the function must be another future with the same error type as the original. The total result is itself a future.</p>\n<pre><code>fn fold&lt;F, T, Fut&gt;(self, init: T, f: F) -&gt; Fold&lt;Self, F, Fut, T&gt;\nwhere\n    F: FnMut(T, Self::Item) -&gt; Fut,\n    Fut: IntoFuture&lt;Item = T&gt;,\n    Self::Error: From&lt;Fut::Error&gt;,\n    Self: Sized,\n</code></pre>\n<p>We can use a <code>Vec</code> as the accumulator. <code>Body</code>'s <code>Stream</code> implementation returns a <code>Chunk</code>. This implements <code>Deref&lt;[u8]&gt;</code>, so we can use that to append each chunk's data to the <code>Vec</code>.</p>\n<pre><code>extern crate futures; // 0.1.23\nextern crate hyper;   // 0.11.27\n\nuse futures::{Future, Stream};\nuse hyper::{\n    server::{Http, Request, Response, Service}, Post,\n};\n\nfn main() {\n    let addr = &quot;127.0.0.1:12346&quot;.parse().unwrap();\n\n    let server = Http::new().bind(&amp;addr, || Ok(Echo)).unwrap();\n    println!(\n        &quot;Listening on http://{} with 1 thread.&quot;,\n        server.local_addr().unwrap()\n    );\n    server.run().unwrap();\n}\n\nstruct Echo;\n\nimpl Service for Echo {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = Box&lt;futures::Future&lt;Item = Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, req: Self::Request) -&gt; Self::Future {\n        match (req.method(), req.path()) {\n            (&amp;Post, &quot;/&quot;) =&gt; {\n                let f = req.body()\n                    .fold(Vec::new(), |mut acc, chunk| {\n                        acc.extend_from_slice(&amp;*chunk);\n                        futures::future::ok::&lt;_, Self::Error&gt;(acc)\n                    })\n                    .map(|body| Response::new().with_body(format!(&quot;Read {} bytes&quot;, body.len())));\n\n                Box::new(f)\n            }\n            _ =&gt; panic!(&quot;Nope&quot;),\n        }\n    }\n}\n</code></pre>\n<p>You could also convert the <code>Vec&lt;u8&gt;</code> <code>body</code> to a <code>String</code>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/19076719/155423\">How do I convert a Vector of bytes (u8) to a string</a></li>\n</ul>\n<h1>Output</h1>\n<p>When called from the command line, we can see the result:</p>\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -X POST --data hello http://127.0.0.1:12346/\nRead 5 bytes\n</code></pre>\n<h1>Warning</h1>\n<p>All of these solutions allow a malicious end user to POST an infinitely sized file, which would cause the machine to run out of memory. Depending on the intended use, you may wish to establish some kind of cap on the number of bytes read, potentially writing to the filesystem at some breakpoint.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53142508/155423\">How do I apply a limit to the number of bytes read by futures::Stream::concat2?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 796, "user_id": 959847, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/40d3fdc131dbfeae3a893a354bcbcf67?s=128&d=identicon&r=PG", "display_name": "euclio", "link": "https://stackoverflow.com/users/959847/euclio"}, "is_accepted": false, "score": 21, "last_activity_date": 1581185600, "last_edit_date": 1581185600, "creation_date": 1576858783, "answer_id": 59428403, "question_id": 43419974, "link": "https://stackoverflow.com/questions/43419974/how-do-i-read-the-entire-body-of-a-tokio-based-hyper-request/59428403#59428403", "title": "How do I read the entire body of a Tokio-based Hyper request?", "body": "<p>Hyper 0.13 provides a <a href=\"https://docs.rs/hyper/0.13.2/hyper/body/fn.to_bytes.html\" rel=\"noreferrer\"><code>body::to_bytes</code> function</a> for this purpose.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use hyper::body;\nuse hyper::{Body, Response};\n\npub async fn read_response_body(res: Response&lt;Body&gt;) -&gt; Result&lt;String, hyper::Error&gt; {\n    let bytes = body::to_bytes(res.into_body()).await?;\n    Ok(String::from_utf8(bytes.to_vec()).expect(\"response was not valid utf-8\"))\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1604685965, "post_id": 64716041, "comment_id": 114432173, "body": "<a href=\"https://docs.rs/hyper/0.13.9/hyper/body/trait.HttpBody.html#method.data\" rel=\"nofollow noreferrer\"><code>data</code></a> is documented as &quot;Returns future that resolves to next data chunk, if any.&quot;, so I&#39;m pretty sure that this answer is incorrect / incomplete."}, {"owner": {"reputation": 1791, "user_id": 599017, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/34c7aa2b3e4202390e21a4b40028e65e?s=128&d=identicon&r=PG", "display_name": "fabien", "link": "https://stackoverflow.com/users/599017/fabien"}, "edited": false, "score": 0, "creation_date": 1618942816, "post_id": 64716041, "comment_id": 118754217, "body": "it does seem to work (after testing)"}], "tags": [], "owner": {"reputation": 3503, "user_id": 4322159, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BuXUi.jpg?s=128&g=1", "display_name": "Fusion", "link": "https://stackoverflow.com/users/4322159/fusion"}, "is_accepted": false, "score": 0, "last_activity_date": 1604671515, "last_edit_date": 1604671515, "creation_date": 1604671377, "answer_id": 64716041, "question_id": 43419974, "link": "https://stackoverflow.com/questions/43419974/how-do-i-read-the-entire-body-of-a-tokio-based-hyper-request/64716041#64716041", "title": "How do I read the entire body of a Tokio-based Hyper request?", "body": "<p>Most of the answers on this topic are outdated or overly complicated. The solution is pretty simple:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>/*\n    WARNING for beginners!!! This use statement\n    is important so we can later use .data() method!!!\n*/\nuse hyper::body::HttpBody;\n\nlet my_vector: Vec&lt;u8&gt; = request.into_body().data().await.unwrap().unwrap().to_vec();\nlet my_string = String::from_utf8(my_vector).unwrap();\n</code></pre>\n<p>You can also use <code>body::to_bytes</code> <a href=\"https://stackoverflow.com/a/59428403/155423\">as @euclio answered</a>. Both approaches are straight-forward! Don't forget to handle <code>unwrap</code> properly.</p>\n"}], "owner": {"reputation": 338, "user_id": 3472468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0c134f495cb7ff88aa26702a17c09?s=128&d=identicon&r=PG&f=1", "display_name": "JayStrictor", "link": "https://stackoverflow.com/users/3472468/jaystrictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6617, "favorite_count": 2, "accepted_answer_id": 43420539, "answer_count": 3, "score": 8, "last_activity_date": 1604686152, "creation_date": 1492208514, "last_edit_date": 1492210532, "question_id": 43419974, "link": "https://stackoverflow.com/questions/43419974/how-do-i-read-the-entire-body-of-a-tokio-based-hyper-request", "title": "How do I read the entire body of a Tokio-based Hyper request?", "body": "<p>I want to write a server using the current master branch of Hyper that saves a message that is delivered by a POST request and sends this message to every incoming GET request.</p>\n\n<p>I have this, mostly copied from the Hyper examples directory:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate pretty_env_logger;\n\nuse futures::future::FutureResult;\n\nuse hyper::{Get, Post, StatusCode};\nuse hyper::header::{ContentLength};\nuse hyper::server::{Http, Service, Request, Response};\nuse futures::Stream;\n\nstruct Echo {\n    data: Vec&lt;u8&gt;,\n}\n\nimpl Echo {\n    fn new() -&gt; Self {\n        Echo {\n            data: \"text\".into(),\n        }\n    }\n}\n\nimpl Service for Echo {\n    type Request = Request;\n    type Response = Response;\n    type Error = hyper::Error;\n    type Future = FutureResult&lt;Response, hyper::Error&gt;;\n\n    fn call(&amp;self, req: Self::Request) -&gt; Self::Future {\n        let resp = match (req.method(), req.path()) {\n            (&amp;Get, \"/\") | (&amp;Get, \"/echo\") =&gt; {\n                Response::new()\n                    .with_header(ContentLength(self.data.len() as u64))\n                    .with_body(self.data.clone())\n            },\n            (&amp;Post, \"/\") =&gt; {\n                //self.data.clear(); // argh. &amp;self is not mutable :(\n                // even if it was mutable... how to put the entire body into it?\n                //req.body().fold(...) ?\n                let mut res = Response::new();\n                if let Some(len) = req.headers().get::&lt;ContentLength&gt;() {\n                    res.headers_mut().set(ContentLength(0));\n                }\n                res.with_body(req.body())\n            },\n            _ =&gt; {\n                Response::new()\n                    .with_status(StatusCode::NotFound)\n            }\n        };\n        futures::future::ok(resp)\n    }\n\n}\n\n\nfn main() {\n    pretty_env_logger::init().unwrap();\n    let addr = \"127.0.0.1:12346\".parse().unwrap();\n\n    let server = Http::new().bind(&amp;addr, || Ok(Echo::new())).unwrap();\n    println!(\"Listening on http://{} with 1 thread.\", server.local_addr().unwrap());\n    server.run().unwrap();\n}\n</code></pre>\n\n<p>How do I turn the <code>req.body()</code> (which seems to be a <code>Stream</code> of <code>Chunks</code>) into a <code>Vec&lt;u8&gt;</code>? I assume I must somehow return a <code>Future</code> that consumes the <code>Stream</code> and turns it into a single <code>Vec&lt;u8&gt;</code>, maybe with <code>fold()</code>. But I have no clue how to do that.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "edited": false, "score": 0, "creation_date": 1492202875, "post_id": 43418942, "comment_id": 73897019, "body": "Document says casting is not transitive, but applying ptr-addr-cast to above is why not the case? is <code>isize</code> not  numeric or is struct not <code>Sized</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "edited": false, "score": 0, "creation_date": 1492203333, "post_id": 43418942, "comment_id": 73897227, "body": "@jeiea I&#39;m afraid I don&#39;t understand your question. <code>isize</code> is definitely numeric, and the struct is <code>Sized</code>. The problem is, as you said: <i>even if <code>e as U1 as U2</code> is a valid expression, <code>e as U2</code> is not necessarily so</i>."}, {"owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "edited": false, "score": 0, "creation_date": 1492203690, "post_id": 43418942, "comment_id": 73897388, "body": "I thought <code>&amp;T to *const T</code> is applied implicitly because it is coercion and <code>as *const _</code> would be needless. But it seems coercion is not applied automatically. Is only final coercion implicit?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1492203057, "last_edit_date": 1492203057, "creation_date": 1492202470, "answer_id": 43418942, "question_id": 43418766, "link": "https://stackoverflow.com/questions/43418766/how-can-i-cast-a-struct-reference-to-isize/43418942#43418942", "title": "How can I cast a struct reference to isize?", "body": "<p>You need to use explicit conversion; \"chains\" of conversions / coercions don't usually (ever?) work:</p>\n\n<pre><code>struct Test {\n    num: i32,\n}\nlet a = Test { num: 0 };\nlet b = &amp;a as *const _ as isize;\n</code></pre>\n\n<p>Since there's no reason for mutability, I've removed it. There's also no unsafe behavior in this code snippet, so the <code>unsafe</code> block is not needed.</p>\n"}, {"comments": [{"owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "edited": false, "score": 0, "creation_date": 1492204843, "post_id": 43419327, "comment_id": 73897838, "body": "Finally I notice what I have missed, the coercion site. I&#39;m fully satisfied."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1492205243, "last_edit_date": 1492205243, "creation_date": 1492204318, "answer_id": 43419327, "question_id": 43418766, "link": "https://stackoverflow.com/questions/43418766/how-can-i-cast-a-struct-reference-to-isize/43419327#43419327", "title": "How can I cast a struct reference to isize?", "body": "<blockquote>\n  <p>I thought it would be coerced to <code>*const _</code>, then applied ptr-addr-cast. ...</p>\n</blockquote>\n\n<p><em>Firstly</em>, implicit coercion doesn't happen everywhere, and certainly not inside part of an expression like <code>e as T</code> as you have noticed. The places where coercion happens, called <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"noreferrer\">coercion sites</a>, are usually where you've done evaluating the expression, e.g.</p>\n\n<ul>\n<li><p>RHS of <code>let</code>/<code>const</code>/<code>static</code> statements:</p>\n\n<pre><code>let x = foo\n//      ^~~\n</code></pre></li>\n<li><p>Arguments to functions:</p>\n\n<pre><code>foo(bar)\n//  ^~~\n</code></pre></li>\n<li><p>Returned expressions:</p>\n\n<pre><code>fn f() -&gt; u32 {\n    foo\n//  ^~~\n}\n</code></pre></li>\n<li><p>struct/array/tuple literals:</p>\n\n<pre><code>   [foo, bar, baz]\n//  ^~~  ^~~  ^~~\n   (foo, bar, baz)\n//  ^~~  ^~~  ^~~\n   Foo { field: foo }\n//              ^~~\n</code></pre></li>\n<li><p>Last expression in a block:</p>\n\n<pre><code>{ ...; foo }\n//     ^~~\n</code></pre></li>\n</ul>\n\n<p><code>foo as isize</code> is not among this list.</p>\n\n<p><em>Secondly</em>, even if implicit coercion were allowed everywhere, that does not mean Rust should choose to coerce to a type that makes the conversion valid. An <code>&amp;mut Test</code> can be coerced to <code>&amp;Test</code> or <code>*mut Test</code> or <code>*const Test</code> or <code>&amp;mut SomeTrait</code> etc, the compiler will need to check all of them! This can only work if <em>you</em> tell what type the expression should coerce to:</p>\n\n<pre><code>#![feature(type_ascription)]\n\nlet b = {&amp;a}: *const _ as isize;\n//       ^~ ^~~~~~~~~~\n//        |   we explicitly make the type a const raw pointer\n//        |                             using type-ascription\n//        a coercion site\n</code></pre>\n\n<p>But this has not much of a difference than the canonical solution <code>&amp;a as *const _ as isize</code>.</p>\n"}], "owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 289, "favorite_count": 1, "accepted_answer_id": 43419327, "answer_count": 2, "score": 4, "last_activity_date": 1492205243, "creation_date": 1492201659, "last_edit_date": 1492202372, "question_id": 43418766, "link": "https://stackoverflow.com/questions/43418766/how-can-i-cast-a-struct-reference-to-isize", "title": "How can I cast a struct reference to isize?", "body": "<p>I want to get <code>b</code> in the following code. </p>\n\n<pre><code>unsafe {\n    struct Test {\n        num: i32,\n    }\n    let a = Test { num: 0 };\n    let b = &amp;mut a as isize;\n}\n</code></pre>\n\n<p>But it results in the following error message.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: casting `&amp;on_create::Test` as `isize` is invalid\n   --&gt; main.rs:181:15\n    |\n181 |       let b = &amp;a as isize;\n    |    \n</code></pre>\n\n<p>I thought it would be coerced to <code>*const _</code>, then applied <a href=\"https://doc.rust-lang.org/book/casting-between-types.html\" rel=\"nofollow noreferrer\">ptr-addr-cast</a>. What have I missed on this? Should I use <code>mem::transmute</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492199489, "post_id": 43418174, "comment_id": 73895614, "body": "<b>How did you try to install Rust</b>? Additionally \u2014 <i>Protocol &quot;https&quot; not supported or disabled in libcurl</i> \u2014 does your libcurl have HTTP support?"}, {"owner": {"reputation": 1, "user_id": 7083658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--7Ji1WDwRB4/AAAAAAAAAAI/AAAAAAAAAug/16PACveTAd0/photo.jpg?sz=128", "display_name": "Lorenzo Iannuzzi", "link": "https://stackoverflow.com/users/7083658/lorenzo-iannuzzi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492199540, "post_id": 43418174, "comment_id": 73895638, "body": "yep, it works alright, and using <code>curl https:&#47;&#47;sh.rustup.rs -sSf | sh </code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492199790, "post_id": 43418174, "comment_id": 73895748, "body": "Why do you think I downvoted? However, the downvote arrow says: <i>This question does not show any research effort; it is unclear or not useful</i>; presumably someone thinks your question fits that category."}, {"owner": {"reputation": 1, "user_id": 7083658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--7Ji1WDwRB4/AAAAAAAAAAI/AAAAAAAAAug/16PACveTAd0/photo.jpg?sz=128", "display_name": "Lorenzo Iannuzzi", "link": "https://stackoverflow.com/users/7083658/lorenzo-iannuzzi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492199848, "post_id": 43418174, "comment_id": 73895767, "body": "oh not you. Sorry, also I cannot vote so I do not see the message"}, {"owner": {"reputation": 1, "user_id": 7083658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--7Ji1WDwRB4/AAAAAAAAAAI/AAAAAAAAAug/16PACveTAd0/photo.jpg?sz=128", "display_name": "Lorenzo Iannuzzi", "link": "https://stackoverflow.com/users/7083658/lorenzo-iannuzzi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492200009, "post_id": 43418174, "comment_id": 73895838, "body": "could have better worded the question...."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1492200153, "post_id": 43418174, "comment_id": 73895903, "body": "I see that <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1066\" rel=\"nofollow noreferrer\">you&#39;ve filed an issue with rustup</a>, wherein someone already pointed you to the <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1051\" rel=\"nofollow noreferrer\">existing issue</a>. Do you think that the rustup maintainers are lying to you? Do you think that we will know something that they don&#39;t? I&#39;m unclear on what resolution you are looking for..."}, {"owner": {"reputation": 1, "user_id": 7083658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--7Ji1WDwRB4/AAAAAAAAAAI/AAAAAAAAAug/16PACveTAd0/photo.jpg?sz=128", "display_name": "Lorenzo Iannuzzi", "link": "https://stackoverflow.com/users/7083658/lorenzo-iannuzzi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492200313, "post_id": 43418174, "comment_id": 73895975, "body": "It didn&#39;t help me, tried everything, didn&#39;t work. You think I&#39;m stupid?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492200475, "post_id": 43418174, "comment_id": 73896060, "body": "No, not stupid; it&#39;s just <i>unclear</i> what you <i>have</i> done. We aren&#39;t mind readers. If you had &quot;tried everything&quot;, then nothing we could suggest would help \u2014 there&#39;d be nothing left to suggest. Therefore, it seems unlikely that you&#39;ve tried everything. Someone on that thread suggests using <code>RUSTUP_USE_HYPER</code>; did you try that? If so, how would we know? The official <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"nofollow noreferrer\">Rust installation page</a> offers <a href=\"https://www.rust-lang.org/en-US/other-installers.html\" rel=\"nofollow noreferrer\">alternate installation methods</a>; did you try any of those? If so, how would we know?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492228417, "post_id": 43418174, "comment_id": 73902802, "body": "People are <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/1051#issuecomment-294255617\" rel=\"nofollow noreferrer\">now reporting success with <code>RUSTUP_USE_HYPER</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 1479, "user_id": 855443, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/d880e98c9fffc6253f3868babc99b8c1?s=128&d=identicon&r=PG", "display_name": "user855443", "link": "https://stackoverflow.com/users/855443/user855443"}, "is_accepted": false, "score": 0, "last_activity_date": 1494170423, "creation_date": 1494170423, "answer_id": 43833187, "question_id": 43418174, "link": "https://stackoverflow.com/questions/43418174/rust-not-installing-on-arm/43833187#43833187", "title": "Rust not installing on ARM", "body": "<p>I just tried to install wtih the new minimal instruction on the Rust site for an ARMv7 Odroid XU4 running Debian Jessie and I guess the same goes for the Raspberry Pi. </p>\n\n<p>I found the following preparatory steps necessary:\nin .bashrc add:</p>\n\n<pre><code>export RUSTUP_USE_HYPER=1\nexport PATH=\"$HOME/.cargo/bin:$PATH\n</code></pre>\n\n<p>and installed</p>\n\n<pre><code>sudo apt-get install curl linux-compiler-gcc-4.8-arm llvm clang-3.8\n</code></pre>\n\n<p>then\n<code>curl https://sh.rustup.rs -sSf | sh</code>\nworked. </p>\n\n<p>More detail on <a href=\"http://andrewufrank.blogspot.co.at/2017/05/rust-programming-language-on-arm-may.html\" rel=\"nofollow noreferrer\">http://andrewufrank.blogspot.co.at/2017/05/rust-programming-language-on-arm-may.html</a></p>\n"}], "owner": {"reputation": 1, "user_id": 7083658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--7Ji1WDwRB4/AAAAAAAAAAI/AAAAAAAAAug/16PACveTAd0/photo.jpg?sz=128", "display_name": "Lorenzo Iannuzzi", "link": "https://stackoverflow.com/users/7083658/lorenzo-iannuzzi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 278, "favorite_count": 0, "closed_date": 1494170607, "answer_count": 1, "score": -2, "last_activity_date": 1494170423, "creation_date": 1492198832, "last_edit_date": 1492200542, "question_id": 43418174, "link": "https://stackoverflow.com/questions/43418174/rust-not-installing-on-arm", "closed_reason": "Duplicate", "title": "Rust not installing on ARM", "body": "<p>I recently tried to install Rust on my Raspberry Pi 3 using <code>curl https://sh.rustup.rs -sSf | sh</code>. I encountered this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>info: syncing channel updates for 'stable-armv7-unknown-linux-gnueabihf'\nerror: could not download file from 'https://static.rust-lang.org/dist/channel-rust-stable.toml.sha256' to '/home/pi/.rustup/tmp/ieoxyuvmrrqhmbgn_file'\ninfo: caused by: error during download\ninfo: caused by: [1] Unsupported protocol (Protocol \"https\" not supported or disabled in libcurl)\n</code></pre>\n\n<p>I checked my <code>curl</code> with OpenSSL links and works fine. Also, tried other installation methods, crashed my RPi3 thrice.\nAny help?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1492194110, "post_id": 43416914, "comment_id": 73893058, "body": "I&#39;m sure I&#39;ve seen this question before... but of course cannot find it again. The closest potential duplicate I found was <a href=\"http://stackoverflow.com/questions/31045637/re-using-a-range-for-iteration\" title=\"re using a range for iteration\">stackoverflow.com/questions/31045637/&hellip;</a>. I seem to recall it was not implemented because there were cases where it could be confusing: <a href=\"https://github.com/rust-lang/rust/issues/18045\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/18045</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 17, "last_activity_date": 1492199392, "last_edit_date": 1495540940, "creation_date": 1492194248, "answer_id": 43417102, "question_id": 43416914, "link": "https://stackoverflow.com/questions/43416914/why-doesnt-opsranget-implement-copy-even-if-t-is-copy/43417102#43417102", "title": "Why doesn&#39;t ops::Range&lt;T&gt; implement Copy, even if T is Copy?", "body": "<p>Because <code>Range&lt;T&gt;</code> is often used as an iterator, and having iterators be <code>Copy</code> <a href=\"https://github.com/rust-lang/rust/issues/18045\" rel=\"noreferrer\">was discovered to be a footgun</a>. <a href=\"https://github.com/rust-lang/rust/pull/21809#issuecomment-72372377\" rel=\"noreferrer\">One specific example</a> had to do with thinking that an iterator was advanced, when in reality it was a copy that was advanced:</p>\n\n<pre><code>for x in it {  // a *copy* of the iterator is used here\n    // ..\n}\n\nmatch it.next() {  // the original iterator is used here\n    // ..\n}\n</code></pre>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/18045\" rel=\"noreferrer\">Another example</a>:</p>\n\n<pre><code>fn main() {\n    let stream = \"Hello, world!\".chars().cycle();\n    for _ in 0..10 {\n        let chunk: String = stream.take(3).collect();\n        println!(\"{}\", chunk);\n    }\n}\n</code></pre>\n\n<p>And another that prompted a question: <a href=\"https://stackoverflow.com/q/23969191/155423\">Using the same iterator multiple times in Rust</a></p>\n\n<p>It was believed that having iterators be explicitly copied via <code>clone</code> helped prevent these cases</p>\n\n<hr>\n\n<p>Specifically re-adding <code>Copy</code> to <code>Range</code> <a href=\"https://github.com/rust-lang/rust/pull/21846\" rel=\"noreferrer\">was proposed and rejected</a>. A potential workaround was suggested:</p>\n\n<blockquote>\n  <p>Range fields are public, you can repack them into a copyable tuple (or equivalent) at the constructor/function boundary</p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32324251/155423\">Why are iterators not copyable?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31045637/155423\">Re-using a range for iteration</a></li>\n</ul>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 703, "favorite_count": 3, "accepted_answer_id": 43417102, "answer_count": 1, "score": 14, "last_activity_date": 1492199392, "creation_date": 1492193442, "question_id": 43416914, "link": "https://stackoverflow.com/questions/43416914/why-doesnt-opsranget-implement-copy-even-if-t-is-copy", "title": "Why doesn&#39;t ops::Range&lt;T&gt; implement Copy, even if T is Copy?", "body": "<p>Recently, I wanted to write a type holding parameters for a 3D projection:</p>\n\n<pre><code>use std::ops::Range;\n\n#[derive(Clone, Copy)]\nstruct CamProj {\n    /// Near and far plane\n    proj_range: Range&lt;f32&gt;,\n    /// Field of view\n    fov: cgmath::Rad&lt;f32&gt;,     // `Rad` derives `Copy`\n    /// Width divided by height\n    aspect_ratio: f32,       \n}\n</code></pre>\n\n<p>However, I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0204]: the trait `Copy` may not be implemented for this type\n --&gt; &lt;anon&gt;:3:21\n  |\n3 |     #[derive(Clone, Copy)]\n  |                     ^^^^\n...\n6 |         proj_range: Range&lt;f32&gt;,\n  |         ---------------------- this field does not implement `Copy`\n</code></pre>\n\n<p>So apparently, <code>Range&lt;T&gt;</code> never implements <code>Copy</code>, even if <code>T</code> is <code>Copy</code>, like <code>f32</code> is. <strong>Why is that?</strong> I thought a <code>Range&lt;T&gt;</code> would just be a pair of <code>T</code>s? So it surely could implement <code>Copy</code>?</p>\n"}, {"tags": ["get", "hashmap", "rust", "key"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1492190584, "post_id": 43416196, "comment_id": 73891280, "body": "Welcome to StackOverflow! Unfortunately, your question isn&#39;t as clear as it could be. Could you clarify it a bit? What do you mean by &quot;exact format&quot;? Do you mean the exact type? It would help if you provide a snippet of code that you think should work but doesn&#39;t :)"}, {"owner": {"reputation": 2908, "user_id": 1220243, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/A8tm4.jpg?s=128&g=1", "display_name": "zero_cool", "link": "https://stackoverflow.com/users/1220243/zero-cool"}, "edited": false, "score": 0, "creation_date": 1528510497, "post_id": 43416196, "comment_id": 88548158, "body": "not sure if the question has been edited but it makes perfect sense to me FWIW"}, {"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "edited": false, "score": 2, "creation_date": 1532411418, "post_id": 43416196, "comment_id": 89951081, "body": "The problem is the word &quot;format&quot; makes the question unclear and ambiguous. <code>HashMap&lt;T&gt;.get(k)</code> returns an <code>Option&lt;&amp;T&gt;</code>. If the question author intends to ask why the value is wrapped in an Option, then the existing answer seems to answer the question well. If the poster instead intends to ask why a reference to the value is returned, another answer would be appropriate. But without more clarity in the question we can&#39;t tell which of those things are being asked."}], "answers": [{"comments": [{"owner": {"reputation": 4251, "user_id": 1829329, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/f345b0578d338c5b52e9af599f7a9f19?s=128&d=identicon&r=PG", "display_name": "Zelphir Kaltstahl", "link": "https://stackoverflow.com/users/1829329/zelphir-kaltstahl"}, "edited": false, "score": 5, "creation_date": 1507470792, "post_id": 43438272, "comment_id": 80213043, "body": "I think the problem is, that the returned thing is a reference, rather than a value."}], "tags": [], "owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "is_accepted": false, "score": 2, "last_activity_date": 1492352947, "creation_date": 1492352947, "answer_id": 43438272, "question_id": 43416196, "link": "https://stackoverflow.com/questions/43416196/return-exact-value-in-rust-hashmap/43438272#43438272", "title": "Return exact value in Rust HashMap", "body": "<p>There are two basic methods of obtaining the value for the given key: <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>get()</code></a> and <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut\" rel=\"nofollow noreferrer\"><code>get_mut()</code></a>. Use the first one if you just want to read the value, and the second one if you need to modify the value:</p>\n\n<pre><code>fn get(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt;\nfn get_mut(&amp;mut self, k: &amp;Q) -&gt; Option&lt;&amp;mut V&gt;\n</code></pre>\n\n<p>As you can see from their signatures, both of these methods return <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a> rather than a direct value. The reason is that there may be no value associated to the given key:</p>\n\n<pre><code>use std::collections::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get(&amp;1), Some(&amp;\"a\")); // key exists\nassert_eq!(map.get(&amp;2), None);       // key does not exist\n</code></pre>\n\n<p>If you are sure that the map contains the given key, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap()</code></a> to get the value out of the option:</p>\n\n<pre><code>assert_eq!(map.get(&amp;1).unwrap(), &amp;\"a\");\n</code></pre>\n\n<p>However, in general, it is better (and safer) to consider also the case when the key might not exist. For example, you may use <a href=\"https://doc.rust-lang.org/book/patterns.html\" rel=\"nofollow noreferrer\">pattern matching</a>:</p>\n\n<pre><code>if let Some(value) = map.get(&amp;1) {\n    assert_eq!(value, &amp;\"a\");\n} else {\n    // There is no value associated to the given key.\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 152698, "user_id": 745, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/edf857d71f672d8f411ef6b8376316b8?s=128&d=identicon&r=PG", "display_name": "dbr", "link": "https://stackoverflow.com/users/745/dbr"}, "is_accepted": false, "score": 3, "last_activity_date": 1552829023, "last_edit_date": 1552829023, "creation_date": 1546350751, "answer_id": 53996007, "question_id": 43416196, "link": "https://stackoverflow.com/questions/43416196/return-exact-value-in-rust-hashmap/53996007#53996007", "title": "Return exact value in Rust HashMap", "body": "<p>You probably want the <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.remove\" rel=\"nofollow noreferrer\"><code>HashMap::remove</code> method</a> - it deletes the key from the map and returns the original value rather than a reference:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Thing {\n    content: String,\n}\n\nfn main() {\n    let mut hm: HashMap&lt;u32, Thing&gt; = HashMap::new();\n    hm.insert(\n        123,\n        Thing {\n            content: \"abc\".into(),\n        },\n    );\n    hm.insert(\n        432,\n        Thing {\n            content: \"def\".into(),\n        },\n    );\n\n    // Remove object from map, and take ownership of it\n    let value = hm.remove(&amp;432);\n\n    if let Some(v) = value {\n        println!(\"Took ownership of Thing with content {:?}\", v.content);\n    };\n}\n</code></pre>\n\n<p>The <code>get</code> methods must return a reference to the object because the original object can only exist in one place (it is owned by the <code>HashMap</code>). The <code>remove</code> method can return the original object (i.e \"take ownership\") only because it removes it from its original owner.</p>\n\n<p>Another solution, depending on the specific situation, may be to take the reference, call <code>.clone()</code> on it to make a new copy of the object (in this case it wouldn't work because <code>Clone</code> isn't implemented for our <code>Thing</code> example object - but it would work if the value way, say, a <code>String</code>)</p>\n\n<p>Finally it may be worth noting you can still use the reference to the object in many circumstances - e.g the previous example could be done by getting a reference:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Thing {\n    content: String,\n}\n\nfn main() {\n    let mut hm: HashMap&lt;u32, Thing&gt; = HashMap::new();\n    hm.insert(\n        123,\n        Thing {\n            content: \"abc\".into(),\n        },\n    );\n    hm.insert(\n        432,\n        Thing {\n            content: \"def\".into(),\n        },\n    );\n\n    let value = hm.get(&amp;432); // Get reference to the Thing containing \"def\" instead of removing it from the map and taking ownership\n\n    // Print the `content` as in previous example.\n    if let Some(v) = value {\n        println!(\"Showing content of referenced Thing: {:?}\", v.content);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 79, "user_id": 7848462, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-pSHcPNvwz0o/AAAAAAAAAAI/AAAAAAAAAAo/vMzHyxYajwM/photo.jpg?sz=128", "display_name": "Rahul Choudhary", "link": "https://stackoverflow.com/users/7848462/rahul-choudhary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7347, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1552829023, "creation_date": 1492190434, "last_edit_date": 1552752887, "question_id": 43416196, "link": "https://stackoverflow.com/questions/43416196/return-exact-value-in-rust-hashmap", "title": "Return exact value in Rust HashMap", "body": "<p>I can't find a suitable way to return the exact value of key in a <code>HashMap</code> in Rust . All the existing <code>get</code> methods return in a different format rather than the exact format.  </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1492137486, "post_id": 43404368, "comment_id": 73869318, "body": "You are iterating over over a <code>&amp;Vec&lt;T&gt;</code>, which produces values of type <code>&amp;T</code>. There&#39;s no way to &quot;automatically&quot; go from <code>&amp;T</code> to <code>T</code>. Chances are good you want to <code>clone</code> the items, as discussed in the linked duplicate. You may also wish to collect to a <code>Vec&lt;&amp;T&gt;</code>, if that type can be expressed in JSON. You can just use <code>collect::&lt;Vec&lt;_&gt;&gt;()</code> in that case."}, {"owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492450446, "post_id": 43404368, "comment_id": 73968301, "body": "Thanks for the explanation. That solved it for me."}], "owner": {"reputation": 5087, "user_id": 2942471, "user_type": "registered", "accept_rate": 57, "profile_image": "https://graph.facebook.com/100000008666513/picture?type=large", "display_name": "manonthemat", "link": "https://stackoverflow.com/users/2942471/manonthemat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 242, "favorite_count": 0, "closed_date": 1492137274, "answer_count": 0, "score": 1, "last_activity_date": 1492137107, "creation_date": 1492136606, "last_edit_date": 1492137107, "question_id": 43404368, "link": "https://stackoverflow.com/questions/43404368/can-not-iterate-over-vector-of-structs-a-collection-of-type-stdvecvecfoo", "closed_reason": "Duplicate", "title": "Can not iterate over vector of structs: a collection of type std::vec::Vec&lt;Foo&gt; cannot be built from an iterator over elements of type &amp;Foo", "body": "<p>I'm trying to build a simple HTTP server with Rocket that loads data from an external database. Each endpoint will provide a filtered and sorted subset of the data set that is loaded when starting the server.</p>\n\n<p>This works fine in that I can pass the <code>Vec&lt;Media&gt;</code> around.</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\n\nextern crate rusted_cypher;\nextern crate rocket;\n#[macro_use]\nextern crate rocket_contrib;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nuse std::fmt::Debug;\nuse rusted_cypher::GraphClient;\nuse rocket_contrib::{JSON, Value};\nuse rocket::State;\n\n\n// this works\n#[get(\"/\")]\nfn index(data: State&lt;Vec&lt;Media&gt;&gt;) -&gt; JSON&lt;Value&gt; {\n    JSON(json!(data.inner()))\n}\n\n\n\nfn loadData() -&gt; Vec&lt;Media&gt; {\n    let graph = GraphClient::connect(\"http://server:7474/db/data\").unwrap();\n    let results = graph.exec(\"MATCH (m:SIMPLEFIED) RETURN m\").unwrap();\n    let mut data: Vec&lt;Media&gt; = Vec::new();\n    for row in results.rows() {\n        data.push(Media {\n                      id: row.get(\"m.id\").unwrap(),\n                      rating: row.get(\"m.rating\").unwrap(),\n                      release_date: row.get(\"releaseDate\").unwrap(),\n                  });\n    }\n\n    data\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Media {\n    id: String,\n    rating: u16,\n    release_date: i32,\n}\n\nfn main() {\n    rocket::ignite()\n        .manage(loadData())\n        .mount(\"/\", routes![index])\n        .launch();\n}\n</code></pre>\n\n<p>However, when I want to iterate over the vector to <code>f</code></p>\n\n<pre><code>// simple release date filter for release date greater than &lt;d&gt;\n#[get(\"/gt/&lt;d&gt;\")]\nfn gt(d: i32, data: State&lt;Vec&lt;Media&gt;&gt;) -&gt; JSON&lt;Value&gt; {\n    let v = data.inner();\n    let out = v.iter()\n        .filter(|m| m.release_date &gt; d)\n        .collect::&lt;Vec&lt;Media&gt;&gt;();\n    JSON(json!(out))\n}\n</code></pre>\n\n<p>I get this error</p>\n\n<blockquote>\n  <p>error[E0277]: the trait bound <code>std::vec::Vec&lt;Media&gt;:\n  std::iter::FromIterator&lt;&amp;Media&gt;</code> is not satisfied</p>\n</blockquote>\n\n<p>(...)</p>\n\n<blockquote>\n  <p>the trait <code>std::iter::FromIterator&lt;&amp;Media&gt;</code> is not implemented for\n  `std::vec::Vec</p>\n</blockquote>\n\n<p>and the somewhat helpful note</p>\n\n<blockquote>\n  <p>a collection of type <code>std::vec::Vec&lt;Media&gt;</code> cannot be built from an\n  iterator over elements of type <code>&amp;Media</code></p>\n</blockquote>\n"}, {"tags": ["rust", "atom-editor"], "answers": [{"tags": [], "owner": {"reputation": 3306, "user_id": 2888753, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d4f46021e22a612af73b4b980bf91c6?s=128&d=identicon&r=PG", "display_name": "miqh", "link": "https://stackoverflow.com/users/2888753/miqh"}, "is_accepted": false, "score": 0, "last_activity_date": 1499606772, "creation_date": 1499606772, "answer_id": 44996905, "question_id": 43398414, "link": "https://stackoverflow.com/questions/43398414/how-to-enable-atom-racer-documentation-in-popup-list/44996905#44996905", "title": "How to enable atom-racer documentation in popup list?", "body": "<p>If you still haven't figured this out, simply try disabling or uninstalling the <code>racer</code> package.</p>\n\n<p>The <code>autocomplete-racer</code> package implements its own autocomplete provider which includes the documentation you're after. Based on what you're reporting, the <code>racer</code> package is probably taking precedence and as such you'd be limited to its autocomplete provider. Use one or the other, not both.</p>\n"}], "owner": {"reputation": 1, "user_id": 7858119, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a602b222fd7e37f42b0444803a5a044d?s=128&d=identicon&r=PG&f=1", "display_name": "First Last", "link": "https://stackoverflow.com/users/7858119/first-last"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 126, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1499606772, "creation_date": 1492104727, "last_edit_date": 1492106775, "question_id": 43398414, "link": "https://stackoverflow.com/questions/43398414/how-to-enable-atom-racer-documentation-in-popup-list", "title": "How to enable atom-racer documentation in popup list?", "body": "<p>The popup list works, but doesn't display the documentation of the selected item.</p>\n\n<p>In package settings the \"Show Documentation\" and \"Include Signature in Documentation\" options are enabled.</p>\n\n<p><a href=\"https://i.stack.imgur.com/lzBS0.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/lzBS0.png\" alt=\"\"></a></p>\n\n<p>How to make it look like this?</p>\n\n<p><a href=\"https://i.stack.imgur.com/SbDoH.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/SbDoH.png\" alt=\"https://raw.githubusercontent.com/qzed/autocomplete-racer/master/img/demo.png\"></a></p>\n\n<p>I'm using:</p>\n\n<ul>\n<li>autocomplete-racer 0.1.3</li>\n<li>Racer 2.0.6</li>\n<li>Atom 1.13.1</li>\n<li>Rust 1.16.0</li>\n<li>Gentoo x86_64</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492101239, "post_id": 43397243, "comment_id": 73855816, "body": "<i>I don&#39;t want to pass a reference of a reference.</i> \u2014 why do you think you have a reference to a reference?"}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492106575, "post_id": 43397243, "comment_id": 73858545, "body": "because I have the parameter as reference of [u16] and passing the reference of this parameter which is a reference by itself to the method <code>position</code>. am I wrong?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492106851, "post_id": 43397243, "comment_id": 73858659, "body": "<i>the parameter as reference of [u16]</i> \u2014 yes, it is. <i>passing the reference of this parameter [...] to the method position</i> \u2014 where do you believe this is happening?"}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492108772, "post_id": 43397243, "comment_id": 73859624, "body": "ohh sorry I mean <code>map</code> function"}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492114925, "post_id": 43397243, "comment_id": 73862814, "body": "where indicated by the comment in the code above"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492115047, "post_id": 43397243, "comment_id": 73862876, "body": "Ok then, your issue should be answered by the duplicates. <code>foo[..]</code> does not return a reference, so <code>&amp;foo[..]</code> is a single reference."}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492115334, "post_id": 43397243, "comment_id": 73863021, "body": "does this mean that <code>wide_array</code> var in line 2 is not reference? if so what is the purpose of the <code>&amp;</code> then in function parameter?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492115435, "post_id": 43397243, "comment_id": 73863077, "body": "If you mean <code>wide_array</code> in <code>wide_array.iter</code>, that&#39;s still a slice, which is a type of reference; it&#39;s the argument passed in. There&#39;s no <code>[..]</code> on that line."}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492115560, "post_id": 43397243, "comment_id": 73863138, "body": "I think i got it, so the use of <code>[..]</code> implies the use of <code>&amp;</code>?"}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492116372, "post_id": 43397243, "comment_id": 73863496, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/141677/discussion-between-musunaji-and-shepmaster\">continue this discussion in chat</a>."}], "owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 798, "favorite_count": 0, "closed_date": 1492105424, "answer_count": 0, "score": 1, "last_activity_date": 1492101172, "creation_date": 1492100370, "last_edit_date": 1492101172, "question_id": 43397243, "link": "https://stackoverflow.com/questions/43397243/the-trait-stdmarkersized-is-not-implemented-for-u16", "closed_reason": "Duplicate", "title": "The trait `std::marker::Sized` is not implemented for `[u16]`", "body": "<p>I have a function that converts a wide string array as a <code>[u16]</code> to a <code>String</code>.</p>\n\n<pre><code>fn get_string_from_wide(wide_array: &amp;[u16]) -&gt; Result&lt;String, String&gt; {\n    let trimmed_wide = wide_array.iter()\n            .position(|char| *char == 0)\n            .map(|i| &amp;wide_array[..i]) //&lt;- remove `&amp;` will give the error as the title\n            .unwrap_or(wide_array);\n    let os_str = OsString::from_wide(trimmed_wide);\n\n    os_str\n        .into_string()\n        .or(Err(\"Could not convert `Os_String` to `String`\".to_string()))\n}\n</code></pre>\n\n<p>Although the parameter is passed by reference, I still get the type as <code>[u16]</code> instead of <code>&amp;[u16]</code></p>\n\n<p>If I remove the <code>&amp;</code> the code compiles, but I don't want to pass a reference of a reference.</p>\n\n<p>Is the var <code>wide_array</code> actually the data itself and not a reference as stated in the function parameter, and thus I still need to take a reference with <code>&amp;</code> for referenced function calls? Or is it actually a reference to it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1492095264, "post_id": 43395369, "comment_id": 73852071, "body": "You may find this not having to do with accessing files in a directory at all: in the docs, that code was not inside <code>main()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1492096169, "last_edit_date": 1492096169, "creation_date": 1492095431, "answer_id": 43395610, "question_id": 43395369, "link": "https://stackoverflow.com/questions/43395369/how-do-i-access-files-in-a-directory-in-rust/43395610#43395610", "title": "How do I access files in a directory in Rust?", "body": "<p>The <code>?</code> operator and the <code>try!</code> macro will only work when your function returns a <code>Result</code> (in which the raised errors can be properly converted, of course). The main function does not return a result.</p>\n\n<p>You may wish to send all of your code to a separate function and handle the error in <code>main()</code>, with something like this:</p>\n\n<pre><code>use std::io;\nuse std::fs::{self, DirEntry};\nuse std::path::Path;\n\nfn main() {\n    run().unwrap_or_else(|e| {\n      println!(\"Something went wrong: {}\", e.to_string());\n    });\n}\n\nfn run() -&gt; io::Result&lt;()&gt; {\n    let path = Path::new(\".\");\n    for entry in fs::read_dir(path)? {\n        let entry = entry?;\n        let path = entry.path();\n        if path.is_dir() {\n            println!(\"directory found!\");\n        }\n    }\n    Ok(())\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 0, "creation_date": 1492095919, "post_id": 43395633, "comment_id": 73852544, "body": "thank you! this answers the question that lead me to say i only partially understood <code>?</code> (that question being &quot;what does <code>?</code> do when the value <i>isn&#39;t</i> <code>Ok</code>?). is there a resource i missed? <code>?</code> and <code>try!</code> wasn&#39;t mentioned in the rust book, but the docs seem to assume common knowledge of it."}, {"owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "reply_to_user": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 1, "creation_date": 1492096274, "post_id": 43395633, "comment_id": 73852782, "body": "@eiko <a href=\"http://rustbyexample.com/std/result/try.html\" rel=\"nofollow noreferrer\">rustbyexample.com/std/result/try.html</a>. The ? operator is just sugar around try! so it should throw a compilation error about that type not implementing the carrier trait if it is not Result&lt;U,V&gt;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 2, "creation_date": 1492096376, "post_id": 43395633, "comment_id": 73852848, "body": "@eiko the main resource I&#39;d suggest is the <a href=\"https://doc.rust-lang.org/stable/book/error-handling.html\" rel=\"nofollow noreferrer\">error handling chapter</a> of the book. <code>try!</code> is the previous idiomatic way for propagating errors, but <code>?</code> has replaced it in newer versions of Rust. <code>try!</code> still exists for backwards-compatibility reasons."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 3, "creation_date": 1492096442, "post_id": 43395633, "comment_id": 73852891, "body": "@asteriskTheServer <code>?</code> is <i>not</i> sugar around <code>try!</code>. If it was; you&#39;d get the same error from using either, which is not currently the case. If anything, the <code>try!</code> macro should delegate to <code>?</code>."}, {"owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "edited": false, "score": 0, "creation_date": 1492096543, "post_id": 43395633, "comment_id": 73852956, "body": "oops, i guess <code>try!</code> was in the book after all. i may have been skimming by the time i got to chapter 5.7 ^-^&#39; thank you all for your help!"}, {"owner": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 0, "creation_date": 1492097314, "post_id": 43395633, "comment_id": 73853496, "body": "@Shepmaster oh? I read a couple times that it was sugar around try!. For example, this blog presents it as such <a href=\"https://m4rw3r.github.io/rust-questionmark-operator\" rel=\"nofollow noreferrer\">m4rw3r.github.io/rust-questionmark-operator</a> and  I know a couple of Reddit posts have presented it as such. I&#39;ll actually read the RFC to get a better understanding the ? operator. Thanks for pointing that out. :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 157, "user_id": 6879615, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d9e8e439eff6de054928592076c4d3dd?s=128&d=identicon&r=PG&f=1", "display_name": "asteriskTheServer", "link": "https://stackoverflow.com/users/6879615/asterisktheserver"}, "edited": false, "score": 0, "creation_date": 1492098172, "post_id": 43395633, "comment_id": 73853994, "body": "@asteriskTheServer there&#39;s also <a href=\"https://github.com/rust-lang/rust/blob/43ef63d5b4279ef97ed921338a69b0d62101ca83/src/libcore/macros.rs#L329-L336\" rel=\"nofollow noreferrer\">The One True Source</a> (and just trying both in an example). To be clear - you should be able to <i>use</i> them interchangeably, and I don&#39;t know if the difference is temporary or permanent."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1492095504, "last_edit_date": 1495540006, "creation_date": 1492095504, "answer_id": 43395633, "question_id": 43395369, "link": "https://stackoverflow.com/questions/43395369/how-do-i-access-files-in-a-directory-in-rust/43395633#43395633", "title": "How do I access files in a directory in Rust?", "body": "<p>The first error is <a href=\"https://stackoverflow.com/questions/30555477/try-does-not-compile-when-used-in-main\">because you cannot use <code>try!</code> or <code>?</code> in a function returning <code>()</code></a>.</p>\n\n<p>The second error is because <code>read_dir</code> returns a <code>Result</code>:</p>\n\n<pre><code>pub fn read_dir&lt;P: AsRef&lt;Path&gt;&gt;(path: P) -&gt; Result&lt;ReadDir&gt;\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/q/43285372/155423\"><code>Result</code> implements <code>IntoIterator</code></a>, so <code>path</code> is actually the iterator you think you had.</p>\n\n<p><a href=\"https://doc.rust-lang.org/stable/book/error-handling.html\" rel=\"nofollow noreferrer\">Handling the errors</a> and calling <code>Path::display</code> gets you what you want:</p>\n\n<pre><code>use std::fs;\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(\".\");\n    for entry in fs::read_dir(path).expect(\"Unable to list\") {\n        let entry = entry.expect(\"unable to get entry\");\n        println!(\"{}\", entry.path().display());\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4150, "user_id": 7470620, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/49f3026fe13841e41d1805178eed9a3c?s=128&d=identicon&r=PG", "display_name": "eiko", "link": "https://stackoverflow.com/users/7470620/eiko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2413, "favorite_count": 0, "accepted_answer_id": 43395633, "answer_count": 2, "score": 1, "last_activity_date": 1498049439, "creation_date": 1492094771, "last_edit_date": 1492095205, "question_id": 43395369, "link": "https://stackoverflow.com/questions/43395369/how-do-i-access-files-in-a-directory-in-rust", "title": "How do I access files in a directory in Rust?", "body": "<p>I've written a pretty straight-forward script based on the <a href=\"https://doc.rust-lang.org/std/fs/fn.read_dir.html\" rel=\"nofollow noreferrer\">Rust docs</a>:</p>\n\n<pre><code>use std::fs::{self, DirEntry};\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(\".\");\n    for entry in fs::read_dir(path)? {\n        let entry = entry?;\n        let path = entry.path();\n        if path.is_dir() {\n            println!(\"directory found!\");\n        }\n    }\n\n}\n</code></pre>\n\n<p>but I get the following compile errors about <code>?</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(): std::ops::Carrier` is not satisfied\n --&gt; test.rs:6:18\n  |\n6 |     for entry in fs::read_dir(path)? {\n  |                  -------------------\n  |                  |\n  |                  the trait `std::ops::Carrier` is not implemented for `()`\n  |                  in this macro invocation\n  |\n  = note: required by `std::ops::Carrier::from_error`\n\nerror[E0277]: the trait bound `(): std::ops::Carrier` is not satisfied\n --&gt; test.rs:7:21\n  |\n7 |         let entry = entry?;\n  |                     ------\n  |                     |\n  |                     the trait `std::ops::Carrier` is not implemented for `()`\n  |                     in this macro invocation\n  |\n  = note: required by `std::ops::Carrier::from_error`\n</code></pre>\n\n<p>I only partially understand <code>?</code> but I know the gist is that it allows you to act on a <code>Result</code> only if it's an <code>Ok</code>. The error here is that it's being used on a <code>()</code> rather than a <code>Result</code>, which is weird. I tried implementing the loop without <code>?</code>:</p>\n\n<pre><code>use std::fs::{self, DirEntry};\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(\".\");\n    for entry in fs::read_dir(path) {\n        println!(\"{}\", entry.path());\n    }\n\n}\n</code></pre>\n\n<p>But I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `path` found for type `std::fs::ReadDir` in the current scope\n --&gt; test.rs:7:30\n  |\n7 |         println!(\"{}\", entry.path());\n  |                              ^^^^\n</code></pre>\n\n<p>Which implies that instead of <code>fs::read_dir</code> returning <code>ReadDir</code> which is an iterator over <code>DirEntry</code> items, <code>fs::read_dir</code> is returning <code>()</code> which is somehow an iterator over <code>ReadDir</code> items?</p>\n\n<p>I'm so confused.</p>\n\n<p>It's probably worth mentioning that i'm running: <code>rustc 1.16.0 (30cf806ef 2017-03-10)</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 3, "creation_date": 1492084457, "post_id": 43390971, "comment_id": 73844003, "body": "Surely you&#39;d have to spawn a process."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1492084592, "post_id": 43390971, "comment_id": 73844097, "body": "I&#39;d suggest this is a badly designed interface, though, and you should split the side-effects (<code>std::process::exit</code>) from the actual logic."}, {"owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1492085189, "post_id": 43390971, "comment_id": 73844552, "body": "@Veedrac: I completely agree, but sometimes you are stuck with a 3rd-party function that exits on some inputs. For panics, there is at least <code>#[should_panic]</code>, but I was unable to find something that would work for <code>std::process::exit()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1492088016, "creation_date": 1492088016, "answer_id": 43392905, "question_id": 43390971, "link": "https://stackoverflow.com/questions/43390971/how-to-check-the-exit-code-from-stdprocessexit-in-tests/43392905#43392905", "title": "How to check the exit code from std::process::exit() in tests?", "body": "<p>You cannot. <a href=\"https://doc.rust-lang.org/std/process/fn.exit.html\" rel=\"nofollow noreferrer\"><code>std::process:exit</code></a> is well-named, but just in case an aspect of what it does is unclear:</p>\n\n<blockquote>\n  <p>Terminates the current process with the specified exit code.</p>\n  \n  <p>This function will never return and will immediately terminate the\n  current process. The exit code is passed through to the underlying OS\n  and will be available for consumption by another process.</p>\n  \n  <p>Note that because this function never returns, and that it terminates\n  the process, no destructors on the current stack or any other thread's\n  stack will be run. If a clean shutdown is needed it is recommended to\n  only call this function at a known point where there are no more\n  destructors left to run.</p>\n</blockquote>\n\n<p>When running tests, each test is run in a separate <em>thread</em>, but all tests are run within a single process. When that process is terminated, the tests go with it.</p>\n\n<p>You could try to do some complicated recursive testing:</p>\n\n<pre><code>#[test]\n#[ignore]\nfn real() {\n    std::process::exit(42)\n}\n\n#[test]\nfn shim() {\n    let status = std::process::Command::new(\"/proc/self/exe\")\n        .args(&amp;[\"--ignored\", \"real\"])\n        .status()\n        .expect(\"Unable to run program\");\n\n    assert_eq!(Some(42), status.code());\n}\n</code></pre>\n\n<p>This has platform-specific code to find the current process, but it \"works\".</p>\n\n<hr>\n\n<p>Honestly though, I'd say that the code is over-reaching its testing bounds. You should not be testing that <code>std::process::exit</code> does what it says it will. If you really need to assert that a function is called with an argument, that's what a <a href=\"http://xunitpatterns.com/Mocks,%20Fakes,%20Stubs%20and%20Dummies.html\" rel=\"nofollow noreferrer\"><em>mock object</em></a> is for.</p>\n\n<p>Use dependency injection to provide a closure, capture the value in the closure, and write a thin shim:</p>\n\n<pre><code>fn foo_logic&lt;F&gt;(n: i32, f: F)\n    where F: FnOnce(i32)\n{\n    f(n);\n}\n\nfn foo(n: i32) {\n    foo_logic(n, |n| std::process::exit(n));\n}\n\n#[test]\nfn exits_with_correct_exit_code() {\n    let mut value = None;\n    foo_logic(1, |v| value = Some(v));\n    assert_eq!(Some(1), value);\n}\n</code></pre>\n\n<p>You may also consider extracting the logic that calculates the potential error code and testing that directly.</p>\n"}], "owner": {"reputation": 6933, "user_id": 2580955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/WZR9N.jpg?s=128&g=1", "display_name": "s3rvac", "link": "https://stackoverflow.com/users/2580955/s3rvac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 841, "favorite_count": 0, "accepted_answer_id": 43392905, "answer_count": 1, "score": 1, "last_activity_date": 1492088016, "creation_date": 1492082681, "question_id": 43390971, "link": "https://stackoverflow.com/questions/43390971/how-to-check-the-exit-code-from-stdprocessexit-in-tests", "title": "How to check the exit code from std::process::exit() in tests?", "body": "<p>In Rust tests, is there a way of checking that a function that calls <a href=\"https://doc.rust-lang.org/std/process/fn.exit.html\" rel=\"nofollow noreferrer\"><code>std::process::exit()</code></a> really terminated the process with a specific exit code?</p>\n\n<p>Contrived example:</p>\n\n<pre><code>fn foo(n: i32) {\n    std::process::exit(n);\n}\n\n#[test]\nfn exits_with_correct_exit_code() {\n    // How do I assert that the following call terminates\n    // the process with exit code 1?\n    foo(1);\n}\n</code></pre>\n"}, {"tags": ["arrays", "generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1492082803, "last_edit_date": 1495540452, "creation_date": 1492082803, "answer_id": 43391018, "question_id": 43390899, "link": "https://stackoverflow.com/questions/43390899/converting-a-reference-of-an-array-of-u8-into-a-vecu8/43391018#43391018", "title": "Converting a reference of an array of u8 into a &lt;Vec&lt;u8&gt;&gt;", "body": "<p>It doesn't work, because <code>b\"hello\"</code> has type <code>&amp;[u8; 5]</code>, which does not implement <code>Into&lt;Vec&lt;u8&gt;&gt;</code>. You need to pass a <code>&amp;[u8]</code> slice in order for it to compile:</p>\n\n<pre><code>is_hello(&amp;b\"hello\"[..]);\n</code></pre>\n\n<p>I recommend the following question for an explanation of the difference between a slice and an array: <a href=\"https://stackoverflow.com/questions/30794235/what-is-the-difference-between-slice-and-array\">What is the difference between Slice and Array?</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 3416, "user_id": 2484972, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ea1c4b2c5aa3c7da2f2740bc1a643ee0?s=128&d=identicon&r=PG", "display_name": "Tatsuyuki Ishi", "link": "https://stackoverflow.com/users/2484972/tatsuyuki-ishi"}, "is_accepted": false, "score": 2, "last_activity_date": 1492083146, "creation_date": 1492083146, "answer_id": 43391165, "question_id": 43390899, "link": "https://stackoverflow.com/questions/43390899/converting-a-reference-of-an-array-of-u8-into-a-vecu8/43391165#43391165", "title": "Converting a reference of an array of u8 into a &lt;Vec&lt;u8&gt;&gt;", "body": "<p>Arrays are normally coerced to slice, but sometimes there's no implicit conversion.</p>\n\n<p>There are some other ways to force a coercion:</p>\n\n<pre><code>b\"hello\" as &amp;[u8]\nb\"hello\".borrow()\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 2323468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09ae8812a00525a602ebd21806bdc4b7?s=128&d=identicon&r=PG&f=1", "display_name": "Matt", "link": "https://stackoverflow.com/users/2323468/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 43391018, "answer_count": 2, "score": 3, "last_activity_date": 1492086953, "creation_date": 1492082501, "last_edit_date": 1492086953, "question_id": 43390899, "link": "https://stackoverflow.com/questions/43390899/converting-a-reference-of-an-array-of-u8-into-a-vecu8", "title": "Converting a reference of an array of u8 into a &lt;Vec&lt;u8&gt;&gt;", "body": "<p>I'm trying to make a function that takes <code>T: Into&lt;Vec&lt;u8&gt;&gt;</code>, but when I try to pass an array of <code>u8</code> to it, it doesn't compile even if <code>From&lt;&amp;'a [T]&gt;&gt;</code> is implemented by <code>Vec</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `std::convert::From&lt;&amp;[u8; 5]&gt;` is not implemented for `std::vec::Vec&lt;u8&gt;`\n</code></pre>\n\n<p>Here is my code</p>\n\n<pre><code>fn is_hello&lt;T: Into&lt;Vec&lt;u8&gt;&gt;&gt;(s: T) {\n    let bytes = b\"hello\".to_vec();\n    assert_eq!(bytes, s.into());\n}\n\nfn main() {\n    is_hello(b\"hello\");\n}\n</code></pre>\n"}, {"tags": ["rust", "interrupt", "bare-metal"], "answers": [{"comments": [{"owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "edited": false, "score": 0, "creation_date": 1492078295, "post_id": 43389342, "comment_id": 73839739, "body": "As I understand, this is about a) signals in a b) unix environment, isn&#39;t it? Both conditions are not met by the environment described in the question."}, {"owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "reply_to_user": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "edited": false, "score": 0, "creation_date": 1492078404, "post_id": 43389342, "comment_id": 73839807, "body": "read the second link, this is about interrupt. rust doesn&#39;t support it yet. so OP using nix library to work around."}, {"owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "edited": false, "score": 0, "creation_date": 1492079030, "post_id": 43389342, "comment_id": 73840167, "body": "SIGINT is a generated signal <i>after</i> the ISR is called. At this time, I do not have to care about a prolog or epilog. I&#39;m looking for compiler support for the ISR of a hardware interrupt, something like gcc&#39;s attribute <code>__attribute__ ((interrupt (&quot;IRQ&quot;)));</code>"}], "tags": [], "owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "is_accepted": false, "score": -4, "last_activity_date": 1492077995, "creation_date": 1492077995, "answer_id": 43389342, "question_id": 43389196, "link": "https://stackoverflow.com/questions/43389196/rust-compiler-support-for-interrupts/43389342#43389342", "title": "Rust compiler support for interrupts", "body": "<p>copy the information here, shamelessly ;)</p>\n\n<p><a href=\"https://github.com/nix-rust/nix\" rel=\"nofollow noreferrer\">https://github.com/nix-rust/nix</a></p>\n\n<p><a href=\"https://users.rust-lang.org/t/unix-signals-in-rust/733/3\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/unix-signals-in-rust/733/3</a></p>\n\n<pre><code>use nix::sys::signal;\n\nextern fn handle_sigint(_:i32) {\n  println!(\"Interrupted!\");\n  panic!();\n}\n\nfn main() {\n  let sig_action = signal::SigAction::new(handle_sigint,\n                                          signal::SockFlag::empty(),\n                                          signal::SigSet::empty());\n  signal::sigaction(signal::SIGINT, &amp;sig_action);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1492094080, "last_edit_date": 1492094080, "creation_date": 1492086663, "answer_id": 43392404, "question_id": 43389196, "link": "https://stackoverflow.com/questions/43389196/rust-compiler-support-for-interrupts/43392404#43392404", "title": "Rust compiler support for interrupts", "body": "<p>Interrupts are simply another type of calling convention. For the AVR port of Rust, we added two new types of calling convention, one for each kind of interrupt that AVR supports.</p>\n\n<p>The authoritative list of calling conventions <a href=\"https://github.com/rust-lang/rust/blob/1.16.0/src/libsyntax/abi.rs#L13-L37\" rel=\"nofollow noreferrer\">is the source code</a>. Rust 1.16 lists these:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Hash, RustcEncodable, RustcDecodable, Clone, Copy, Debug)]\npub enum Abi {\n    // NB: This ordering MUST match the AbiDatas array below.\n    // (This is ensured by the test indices_are_correct().)\n\n    // Single platform ABIs\n    Cdecl,\n    Stdcall,\n    Fastcall,\n    Vectorcall,\n    Aapcs,\n    Win64,\n    SysV64,\n    PtxKernel,\n    Msp430Interrupt,\n\n    // Multiplatform / generic ABIs\n    Rust,\n    C,\n    System,\n    RustIntrinsic,\n    RustCall,\n    PlatformIntrinsic,\n    Unadjusted\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/beta/unstable-book/abi-x86-interrupt.html\" rel=\"nofollow noreferrer\">unstable book also mentions that the different calling conventions exist</a>.</p>\n\n<p>To use these, you'd declare your function with it:</p>\n\n<pre><code>#![feature(abi_msp430_interrupt)] \n\nextern \"msp430-interrupt\" fn handler() {}\n</code></pre>\n\n<p>It's still up to you to register the function as an exception handler with the interrupt vector table (or equivalent).</p>\n\n<p>Of course, you may need to submit a PR that informs the Rust frontend of the specific LLVM calling convention to use, if yours isn't already in this list.</p>\n"}], "owner": {"reputation": 7497, "user_id": 1213227, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/78179ef730f268752c0f6fdde3943b99?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/1213227/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 799, "favorite_count": 0, "accepted_answer_id": 43392404, "answer_count": 2, "score": 3, "last_activity_date": 1492094080, "creation_date": 1492077670, "last_edit_date": 1492086717, "question_id": 43389196, "link": "https://stackoverflow.com/questions/43389196/rust-compiler-support-for-interrupts", "title": "Rust compiler support for interrupts", "body": "<p>I'm writing a bare-metal application for an AMR board in Rust that involves interrupt service routines. Currently, I use <code>#naked</code> functions with my own assembler prolog/epilog. However, I wonder whether there is a better (and hopefully more portable) way I've missed, maybe an <code>#interrupt</code>-like attribute in Rust nightly or any other compiler support. I think along the lines of GCC's <code>__attribute__ ((interrupt (\"IRQ\")))</code>, since Rust's backend LLVM provides such an attribute.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 0, "creation_date": 1492065485, "post_id": 43385142, "comment_id": 73831803, "body": "The Rust compiler uses LLVM as backend, like other compilers do (clang, Swift and others). Does that answer your question? It is unclear what you are asking"}, {"owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "reply_to_user": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 3, "creation_date": 1561648266, "post_id": 43385142, "comment_id": 100142680, "body": "@aochagavia I think it is very clear what he is asking. Great question helped me a lot."}], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 48, "creation_date": 1492067980, "post_id": 43385776, "comment_id": 73833251, "body": "The various parts of the compilation process are so polite to one another."}, {"owner": {"reputation": 190, "user_id": 4558300, "user_type": "registered", "profile_image": "https://graph.facebook.com/10152698504117358/picture?type=large", "display_name": "Sammy Taylor", "link": "https://stackoverflow.com/users/4558300/sammy-taylor"}, "edited": false, "score": 2, "creation_date": 1558213269, "post_id": 43385776, "comment_id": 99028162, "body": "This is a really succinct yet entertaining analogy."}, {"owner": {"reputation": 4304, "user_id": 21199, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6f7590ce0274a41ebca5fc9b0f372dd8?s=128&d=identicon&r=PG", "display_name": "mslot", "link": "https://stackoverflow.com/users/21199/mslot"}, "edited": false, "score": 0, "creation_date": 1583587258, "post_id": 43385776, "comment_id": 107171462, "body": "Howto describe LLVM in ... some lines, but not a lot."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 119, "last_activity_date": 1592339615, "last_edit_date": 1592339615, "creation_date": 1492067567, "answer_id": 43385776, "question_id": 43385142, "link": "https://stackoverflow.com/questions/43385142/how-is-rust-compiled-to-machine-code/43385776#43385776", "title": "How is Rust compiled to machine code?", "body": "<p>The code-generation phase of the Rust compiler is mainly <strong>done by LLVM</strong>. LLVM is a set of tools for building a compiler, most notably used by the C[++] Compiler <code>clang[++]</code>. </p>\n\n<p>First, the Rust compiler (just like <code>clang</code>, for example) does all the Rust specific stuff like type and borrow checking; in the end, it generates LLVM-IR. IR stands for <em>intermediate representation</em> and it's... comparable to assembly, but a tiny bit more high level and most importantly: platform independent. Then the Rust compiler just calls \u260f LLVM and says:</p>\n\n<blockquote>\n  <p>Hey buddy, could you please take this IR and generate machine code for the current platform? That would be fantastic \u25d5 \u25e1 \u25d5</p>\n</blockquote>\n\n<p>To which LLVM responds: </p>\n\n<blockquote>\n  <p>\ud83c\udf08 Sure, no problem, new friend. Here is your highly optimized machine code for [e.g.] <code>x86_64</code>! \u266b\u266a\u266b</p>\n</blockquote>\n\n<p>Afterwards they invite a few more friends to wrap it all up in a nice little [e.g.] ELF package and beautifully place it in the users file system. <a href=\"https://xkcd.com/303/\" rel=\"noreferrer\">(and the user is like...)</a></p>\n\n<hr>\n\n<p>Information like this can be found in <a href=\"https://prev.rust-lang.org/en-US/faq.html\" rel=\"noreferrer\">the official FAQ</a> which contains a lot of interesting information anyway. For more in-depth details on the Rust compiler, you can read <a href=\"https://rustc-dev-guide.rust-lang.org/\" rel=\"noreferrer\">the \"Rustc Guide\"</a>. For this question, the chapter <a href=\"https://rustc-dev-guide.rust-lang.org/overview.html\" rel=\"noreferrer\">\"High Level Overview\"</a> is pretty interesting.</p>\n"}], "owner": {"reputation": 543, "user_id": 1210888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb2c262f9dce9e135edf02496c321899?s=128&d=identicon&r=PG", "display_name": "Dllewellyn", "link": "https://stackoverflow.com/users/1210888/dllewellyn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8938, "favorite_count": 4, "accepted_answer_id": 43385776, "answer_count": 1, "score": 42, "last_activity_date": 1592339615, "creation_date": 1492065278, "last_edit_date": 1592329324, "question_id": 43385142, "link": "https://stackoverflow.com/questions/43385142/how-is-rust-compiled-to-machine-code", "title": "How is Rust compiled to machine code?", "body": "<p>I've recently been looking at the <a href=\"https://www.rust-lang.org/en-US/\" rel=\"noreferrer\">Rust programming language</a>. How does it work? Rust code seems to be compiled into ELF or PE (etc) binaries, but I've not been able to find any information on how that's done? Is it compiled to an intermediate format then compiled the rest of the way with gxx for example? Any help (or links) would be really appreciated.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "edited": false, "score": 0, "creation_date": 1492047874, "post_id": 43382008, "comment_id": 73826441, "body": "I apologize for the formatting"}, {"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492048200, "post_id": 43382008, "comment_id": 73826511, "body": "Oh i forgot to add the error message. I just added it now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492048256, "post_id": 43382008, "comment_id": 73826527, "body": "What type does <code>sub</code> return? What about <code>add</code>? How do you know the answer to this? How does the compiler?"}, {"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492048419, "post_id": 43382008, "comment_id": 73826569, "body": "well sub will return i32 which i wrote, but I guess the first step, add needs to return a function because its last line is mul(), and sub needs to return a function too since its last line is sub()"}, {"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1492129544, "post_id": 43382008, "comment_id": 73867666, "body": "Shepmaster, thank you for the help. My Rust assignment is now complete and our course is now moving onto Elixir. Time to bother the people over at Elixir, and after them, Haskell. Brace yourselves"}], "answers": [{"comments": [{"owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "edited": false, "score": 0, "creation_date": 1492068776, "post_id": 43385124, "comment_id": 73833714, "body": "Thanks for the reply. My question is, is it possible to assign a variable like so:  let sum = add(2,2) and get 6? In other words, can I get sum = z2. I get a mismatched type error which expects fn() -&gt; i32"}, {"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "reply_to_user": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "edited": false, "score": 0, "creation_date": 1492081067, "post_id": 43385124, "comment_id": 73841526, "body": "Maybe you are forgetting a <code>;</code> after <code>let sum = add(2,2)</code>?"}], "tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 3, "last_activity_date": 1492065234, "creation_date": 1492065234, "answer_id": 43385124, "question_id": 43382008, "link": "https://stackoverflow.com/questions/43382008/if-a-function-depends-on-another-function-how-can-i-assign-a-variable-to-the-en/43385124#43385124", "title": "If a function depends on another function, how can I assign a variable to the end product?", "body": "<p>It seems to me that you are confused about the syntax of return types of functions. The code compiles perfectly after a couple of minor edits:</p>\n\n<pre><code>fn add(x: i32, y: i32) -&gt; i32 {\n    let z = x + y;\n    mul(z, 2)\n}\n\nfn mul(x1: i32, y1: i32) -&gt; i32 {\n    let z1 = x1 * y1;\n    sub(z1, 2)\n}\n\nfn sub(x2: i32, y2: i32) -&gt; i32 {\n    let z2 = x2 - y2;\n    z2\n}\n</code></pre>\n\n<p>Note that the return type of all functions is now <code>i32</code>. Returning <code>fn()</code> means something completely different and doesn't make sense in this case. Also, I removed the semicolons at the end of <code>add</code> and <code>mul</code> so Rust knows that they are the return values.</p>\n"}], "owner": {"reputation": 241, "user_id": 6860348, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9ed7e687b609c4ab8f9b25a490d2ec67?s=128&d=identicon&r=PG&f=1", "display_name": "boss revs", "link": "https://stackoverflow.com/users/6860348/boss-revs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1492065234, "creation_date": 1492046009, "last_edit_date": 1492048770, "question_id": 43382008, "link": "https://stackoverflow.com/questions/43382008/if-a-function-depends-on-another-function-how-can-i-assign-a-variable-to-the-en", "title": "If a function depends on another function, how can I assign a variable to the end product?", "body": "<pre><code>fn add(x: i32, y: i32) -&gt; fn() {\n    let z = x + y;\n    mul(z, 2);\n}\n\nfn mul(x1: i32, y1: i32) -&gt; fn() {\n    let z1 = x1 * y1;\n    sub(z1, 2);\n}\n\nfn sub(x2: i32, y2: i32) -&gt; (i32) {\n    let z2 = x2 - y2;\n    z2\n}\n\nfn main() {\n    let R = add(2, 2);\n    println!(\"{}\", R);\n}\n</code></pre>\n\n<p>Assigning <code>R</code> to <code>add(2, 2)</code> doesn't work. I need to be able to assign <code>R</code> from add -> mul -> sub which returns z2. </p>\n\n<p>So, the process is <code>add(2, 2)</code> -> <code>mul(4, 2)</code> -> <code>sub(8, 2)</code> thus getting R = 6. How do I go about doing this?</p>\n\n<p>This is the error I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `fn(i32): std::fmt::Display` is not satisfied\n   --&gt; testzz.rs:20:16\n   |\n20 | println!(\"{}\", R);\n   |                ^ the trait `std::fmt::Display` is not implemented for \n    `fn(i32)`\n   |\n = note: `fn(i32)` cannot be formatted with the default formatter; try using \n`:?` instead if you are using a format string\n  = note: required by `std::fmt::Display::fmt`\n</code></pre>\n"}]