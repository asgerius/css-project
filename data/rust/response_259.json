[{"tags": ["recursion", "rust", "iterator", "lifetime", "chain"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 4262019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84d823ffb7626071141dbf3d12cd44bb?s=128&d=identicon&r=PG&f=1", "display_name": "clockworkman", "link": "https://stackoverflow.com/users/4262019/clockworkman"}, "edited": false, "score": 0, "creation_date": 1577453906, "post_id": 59482967, "comment_id": 105175424, "body": "Can you explain in a bit more detail what causes &quot;the overflow evaluating the requirement&quot; (E0275]) error in my specific case? I understand it in this scenario <a href=\"https://stackoverflow.com/questions/31196422/what-does-overflow-evaluating-the-requirement-mean-and-how-can-i-fix-it\" title=\"what does overflow evaluating the requirement mean and how can i fix it\">stackoverflow.com/questions/31196422/&hellip;</a> but I can&#39;t see the same scheme here."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 33, "user_id": 4262019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84d823ffb7626071141dbf3d12cd44bb?s=128&d=identicon&r=PG&f=1", "display_name": "clockworkman", "link": "https://stackoverflow.com/users/4262019/clockworkman"}, "edited": false, "score": 0, "creation_date": 1577455736, "post_id": 59482967, "comment_id": 105176061, "body": "@clockworkman you used static dispatch so real type at compile time, so generic <code>I</code> is in the first call (simplified) <code>Slice1</code> then it&#39;s <code>Chain&lt;Slice1, Slice2&gt;</code> then it&#39;s <code>Chain&lt;Chain&lt;Slice1, Slice2&gt;, Slice3&gt;</code> then <code>Chain&lt;Chain&lt;Chain&lt;Slice1, Slice2&gt;, Slice3&gt;, Slice4&gt;</code> etc etc there is no end, that could be fix using dyn dispatch I think but again it&#39;s a very bad idea"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1577322793, "last_edit_date": 1577322793, "creation_date": 1577322433, "answer_id": 59482967, "question_id": 59482289, "link": "https://stackoverflow.com/questions/59482289/rust-lifetime-issue-when-chaining-local-iterator-in-recursive-function/59482967#59482967", "title": "Rust Lifetime issue when chaining local iterator in recursive function", "body": "<p>You bound the lifetime of your new array to the lifetime <code>'a</code> that life outside your function, it's a limitation of the lifetime system I don't think you can fix it today, maybe in the future it will compile. But even if the you could fix the lifetime problem you will end up with a \"overflow evaluating the requirement\" (E0275]). The compiler need to infer a infinite number of function because there is a infinite call to this function with infinite chain structure.</p>\n\n<p>I don't advice to do this kind of code in rust, it's not efficient to chain so many iterator. I think you should change your code to use a vector. This will save you stack space because anyway your function is not tail recursive so you can end with a stack overflow problem.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn func_taking_iter_aux(vals: Vec&lt;u32&gt;) -&gt; Vec&lt;u32&gt; {\n    let new_val = vals.last().copied().unwrap_or(0) + 1;\n\n    if new_val == 10u32 {\n        vals\n    } else {\n        let mut vals = vals;\n        vals.push(new_val);\n        func_taking_iter_aux(vals)\n    }\n}\n\nfn func_taking_iter&lt;'a, I&gt;(vals: I) -&gt; Vec&lt;u32&gt;\nwhere\n    I: IntoIterator&lt;Item = &amp;'a u32&gt;,\n{\n    func_taking_iter_aux(vals.into_iter().copied().collect())\n}\n\nfn main() {\n    let vals = func_taking_iter(Some(&amp;0));\n    for x in vals {\n        println!(\"Value {}\", x);\n    }\n}\n</code></pre>\n\n<p>I tried to keep your requirement as much as possible. This is now a tail recursive function.</p>\n\n<hr>\n\n<p>Note that <code>vals.clone()</code> in your code clone all data and not just the iterator, you should have do <code>let vals = vals.into_iter()</code> and then you can clone the iterator and of course remove <code>I: Clone,</code>.</p>\n"}], "owner": {"reputation": 33, "user_id": 4262019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84d823ffb7626071141dbf3d12cd44bb?s=128&d=identicon&r=PG&f=1", "display_name": "clockworkman", "link": "https://stackoverflow.com/users/4262019/clockworkman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 59482967, "answer_count": 1, "score": 3, "last_activity_date": 1577454413, "creation_date": 1577313085, "last_edit_date": 1577454413, "question_id": 59482289, "link": "https://stackoverflow.com/questions/59482289/rust-lifetime-issue-when-chaining-local-iterator-in-recursive-function", "title": "Rust Lifetime issue when chaining local iterator in recursive function", "body": "<p>I have a generic function which is called recursively and which can take arguments that can be converted into an iterator.</p>\n\n<p>I would like to chain the iterator which is passed as argument with the iterator  created from a function local collection. The idea is that after calling the recursive function several times a single iterator is created which is able to iterate over all the collections living in their individual stack frame.</p>\n\n<pre><code>fn func_taking_iter&lt;'a, I&gt;(vals: I) -&gt; ()\nwhere\n    I: IntoIterator&lt;Item = &amp;'a u32&gt;,\n    I::IntoIter: Clone,\n{\n    let vals = vals.into_iter();\n    let mut new_val: [u32; 1] = [0u32; 1];\n    for x in vals.clone() {\n        new_val[0] = *x;\n    }\n\n    new_val[0] += 1u32;\n    if new_val[0] == 10u32 {\n        for x in vals {\n            println!(\"Value {}\", *x);\n        }\n        return;\n    }\n\n    let res = vals.into_iter().chain(new_val.into_iter());\n\n    func_taking_iter(res);\n}\n\nfn main() {\n    let first_val = [0u32; 1];\n    func_taking_iter(first_val.iter());\n}\n</code></pre>\n\n<p>Unfortunatly I get the following error when I try to compile the code.</p>\n\n<pre><code>error[E0597]: `new_val` does not live long enough                                                 \n  --&gt; src\\main.rs:20:38\n   |\n1  | fn func_taking_iter&lt;'a, I&gt;(vals: I) -&gt; ()\n   |                     -- lifetime `'a` defined here\n...\n20 |     let res = vals.into_iter().chain(new_val.into_iter());\n   |               -----------------------^^^^^^^-------------\n   |               |                      |\n   |               |                      borrowed value does not live long enough\n   |               argument requires that `new_val` is borrowed for `'a`\n...\n23 | }\n   | - `new_val` dropped here while still borrowed\n</code></pre>\n\n<p>I don't have that much experience with Rust and I'm stuck here but in my opinion this doesn't seem like an impossible thing to do...</p>\n\n<hr>\n\n<p>Edit: Improved example code so that only the iterator and not the whole collection is cloned thanks to the hint in Stargateur's <a href=\"https://stackoverflow.com/a/59482967/4262019\">answer</a></p>\n"}, {"tags": ["rust", "gtk", "gtk3"], "answers": [{"tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 2, "last_activity_date": 1577330781, "creation_date": 1577330781, "answer_id": 59483548, "question_id": 59481838, "link": "https://stackoverflow.com/questions/59481838/how-to-i-add-a-header-to-the-tab-and-page-parts-of-a-notebook/59483548#59483548", "title": "How to I add a &quot;header&quot; to the tab and page parts of a notebook?", "body": "<p>It sounds like you're using a <a href=\"https://developer.gnome.org/gtk3/stable/GtkNotebook.html\" rel=\"nofollow noreferrer\"><code>GtkNotebook</code></a>, which is inherently a bit more opinionated than a <a href=\"https://developer.gnome.org/gtk3/stable/GtkStack.html\" rel=\"nofollow noreferrer\"><code>GtkStack</code></a>. I managed to make something like your prototype using <code>GtkStack</code> and <code>GtkStackSidebar</code>. It also required adding in some GtkSeparators.</p>\n\n<p><a href=\"https://i.stack.imgur.com/taZoM.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/taZoM.png\" alt=\"prototype implemented in GTK+ 3\"></a></p>\n\n<p>The code</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- Generated with glade 3.22.1 --&gt;\n&lt;interface&gt;\n  &lt;requires lib=\"gtk+\" version=\"3.20\"/&gt;\n  &lt;object class=\"GtkApplicationWindow\"&gt;\n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n    &lt;child&gt;\n      &lt;placeholder/&gt;\n    &lt;/child&gt;\n    &lt;child&gt;\n      &lt;object class=\"GtkNotebook\"&gt;\n        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n        &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n        &lt;child&gt;\n          &lt;placeholder/&gt;\n        &lt;/child&gt;\n        &lt;child type=\"tab\"&gt;\n          &lt;object class=\"GtkLabel\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"label\" translatable=\"yes\"&gt;page 1&lt;/property&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"tab_fill\"&gt;False&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n        &lt;child&gt;\n          &lt;placeholder/&gt;\n        &lt;/child&gt;\n        &lt;child type=\"tab\"&gt;\n          &lt;object class=\"GtkLabel\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"label\" translatable=\"yes\"&gt;page 2&lt;/property&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"position\"&gt;1&lt;/property&gt;\n            &lt;property name=\"tab_fill\"&gt;False&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n        &lt;child&gt;\n          &lt;placeholder/&gt;\n        &lt;/child&gt;\n        &lt;child type=\"tab\"&gt;\n          &lt;object class=\"GtkLabel\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"label\" translatable=\"yes\"&gt;page 3&lt;/property&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"position\"&gt;2&lt;/property&gt;\n            &lt;property name=\"tab_fill\"&gt;False&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n      &lt;/object&gt;\n    &lt;/child&gt;\n  &lt;/object&gt;\n  &lt;object class=\"GtkTextBuffer\" id=\"buffer1\"&gt;\n    &lt;property name=\"text\" translatable=\"yes\"&gt;placeholder text&lt;/property&gt;\n  &lt;/object&gt;\n  &lt;object class=\"GtkTextBuffer\" id=\"buffer2\"&gt;\n    &lt;property name=\"text\" translatable=\"yes\"&gt;placeholder text&lt;/property&gt;\n  &lt;/object&gt;\n  &lt;object class=\"GtkTextBuffer\" id=\"buffer3\"&gt;\n    &lt;property name=\"text\" translatable=\"yes\"&gt;placeholder text&lt;/property&gt;\n  &lt;/object&gt;\n  &lt;object class=\"GtkApplicationWindow\"&gt;\n    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n    &lt;property name=\"window_position\"&gt;mouse&lt;/property&gt;\n    &lt;property name=\"default_width\"&gt;440&lt;/property&gt;\n    &lt;property name=\"default_height\"&gt;250&lt;/property&gt;\n    &lt;child&gt;\n      &lt;placeholder/&gt;\n    &lt;/child&gt;\n    &lt;child&gt;\n      &lt;object class=\"GtkBox\"&gt;\n        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n        &lt;child&gt;\n          &lt;object class=\"GtkBox\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"orientation\"&gt;vertical&lt;/property&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkBox\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;child&gt;\n                  &lt;object class=\"GtkLabel\"&gt;\n                    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                    &lt;property name=\"margin_left\"&gt;3&lt;/property&gt;\n                    &lt;property name=\"margin_right\"&gt;3&lt;/property&gt;\n                    &lt;property name=\"margin_top\"&gt;3&lt;/property&gt;\n                    &lt;property name=\"margin_bottom\"&gt;3&lt;/property&gt;\n                    &lt;property name=\"label\" translatable=\"yes\"&gt;TABS_HEADER&lt;/property&gt;\n                  &lt;/object&gt;\n                  &lt;packing&gt;\n                    &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                    &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"position\"&gt;0&lt;/property&gt;\n                  &lt;/packing&gt;\n                &lt;/child&gt;\n                &lt;child&gt;\n                  &lt;object class=\"GtkSeparator\"&gt;\n                    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                  &lt;/object&gt;\n                  &lt;packing&gt;\n                    &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                    &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"position\"&gt;1&lt;/property&gt;\n                  &lt;/packing&gt;\n                &lt;/child&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;0&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkSeparator\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;1&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkStackSidebar\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;property name=\"stack\"&gt;stack1&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;True&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;2&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n            &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n            &lt;property name=\"position\"&gt;0&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n        &lt;child&gt;\n          &lt;object class=\"GtkBox\"&gt;\n            &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n            &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n            &lt;property name=\"orientation\"&gt;vertical&lt;/property&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkLabel\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;property name=\"margin_left\"&gt;3&lt;/property&gt;\n                &lt;property name=\"margin_right\"&gt;3&lt;/property&gt;\n                &lt;property name=\"margin_top\"&gt;3&lt;/property&gt;\n                &lt;property name=\"margin_bottom\"&gt;3&lt;/property&gt;\n                &lt;property name=\"label\" translatable=\"yes\"&gt;PAGE_HEADER&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;0&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkSeparator\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;1&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n            &lt;child&gt;\n              &lt;object class=\"GtkStack\" id=\"stack1\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;property name=\"hexpand\"&gt;True&lt;/property&gt;\n                &lt;property name=\"vexpand\"&gt;True&lt;/property&gt;\n                &lt;child&gt;\n                  &lt;object class=\"GtkTextView\"&gt;\n                    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"buffer\"&gt;buffer3&lt;/property&gt;\n                  &lt;/object&gt;\n                  &lt;packing&gt;\n                    &lt;property name=\"name\"&gt;tab1&lt;/property&gt;\n                    &lt;property name=\"title\" translatable=\"yes\"&gt;tab1&lt;/property&gt;\n                  &lt;/packing&gt;\n                &lt;/child&gt;\n                &lt;child&gt;\n                  &lt;object class=\"GtkTextView\"&gt;\n                    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"buffer\"&gt;buffer1&lt;/property&gt;\n                  &lt;/object&gt;\n                  &lt;packing&gt;\n                    &lt;property name=\"name\"&gt;tab2&lt;/property&gt;\n                    &lt;property name=\"title\" translatable=\"yes\"&gt;tab2&lt;/property&gt;\n                    &lt;property name=\"position\"&gt;1&lt;/property&gt;\n                  &lt;/packing&gt;\n                &lt;/child&gt;\n                &lt;child&gt;\n                  &lt;object class=\"GtkTextView\"&gt;\n                    &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                    &lt;property name=\"buffer\"&gt;buffer2&lt;/property&gt;\n                  &lt;/object&gt;\n                  &lt;packing&gt;\n                    &lt;property name=\"name\"&gt;tab3&lt;/property&gt;\n                    &lt;property name=\"title\" translatable=\"yes\"&gt;tab3&lt;/property&gt;\n                    &lt;property name=\"position\"&gt;2&lt;/property&gt;\n                  &lt;/packing&gt;\n                &lt;/child&gt;\n              &lt;/object&gt;\n              &lt;packing&gt;\n                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                &lt;property name=\"position\"&gt;2&lt;/property&gt;\n              &lt;/packing&gt;\n            &lt;/child&gt;\n          &lt;/object&gt;\n          &lt;packing&gt;\n            &lt;property name=\"expand\"&gt;True&lt;/property&gt;\n            &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n            &lt;property name=\"position\"&gt;1&lt;/property&gt;\n          &lt;/packing&gt;\n        &lt;/child&gt;\n      &lt;/object&gt;\n    &lt;/child&gt;\n  &lt;/object&gt;\n&lt;/interface&gt;\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 59483548, "answer_count": 1, "score": 1, "last_activity_date": 1577330781, "creation_date": 1577307860, "question_id": 59481838, "link": "https://stackoverflow.com/questions/59481838/how-to-i-add-a-header-to-the-tab-and-page-parts-of-a-notebook", "title": "How to I add a &quot;header&quot; to the tab and page parts of a notebook?", "body": "<p>I am using <code>gtk-rs</code> to create a GUI. I want something like the image below:</p>\n\n<p><a href=\"https://i.stack.imgur.com/s6dqY.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/s6dqY.png\" alt=\"A header above the tabs and page part of a notebook\"></a></p>\n\n<p>However, I cannot find a way to position a header relative to either the tabs or the page part of the notebook. Even after investigating the original gtk documentation, I cannot find a way to position widgets relative to the position of the tabs/page part of the notebook.</p>\n\n<p>I recognize that I could just have a box above the notebook and put my widgets there, but I can't position the widgets relative to the notebook that way. If there is a way to position the widgets relative to the parts of the notebook itself, that would be great.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "edited": false, "score": 1, "creation_date": 1577390480, "post_id": 59482918, "comment_id": 105160031, "body": "it looks like Semaphore is already removed. No longer in version 1.40 at least based on <a href=\"https://github.com/rust-lang/rust/issues/67606#issuecomment-568914561\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/67606#issuecomment-56891456&zwnj;&#8203;1</a>"}, {"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "reply_to_user": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "edited": false, "score": 1, "creation_date": 1577393902, "post_id": 59482918, "comment_id": 105160885, "body": "Sorry, I was mistaken - semaphore was never &quot;stabalized&quot; in the first place - it was only available on a nightly compiler, never the stable one. Breaking changes are allowed to happen in the nightly compiler, just not the stable one. I have now edited my original answer."}], "tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 3, "last_activity_date": 1589250278, "last_edit_date": 1589250278, "creation_date": 1577321675, "answer_id": 59482918, "question_id": 59480070, "link": "https://stackoverflow.com/questions/59480070/replacement-for-stdsyncsemaphore-since-it-is-deprecated/59482918#59482918", "title": "Replacement for std::sync::Semaphore since it is deprecated?", "body": "<p>System semaphore refers to whatever semaphore the operating <strong>system</strong> provides. On POSIX (Linux, MacOS) these are the methods you get from <code>#include &lt;semaphore.h&gt;</code> (<a href=\"https://www.mankier.com/0p/semaphore.h\" rel=\"nofollow noreferrer\">man page</a>). <code>std::sync::Semaphore</code> is implemented only in rust and does not involve the OS's synchronization primitives.</p>\n\n<p>If you need a binary semaphore (<a href=\"https://stackoverflow.com/questions/62814/difference-between-binary-semaphore-and-mutex\">i.e. a mutex</a>) You can use <code>std::sync::Mutex</code>. <code>std::sync::RwLock</code> is similar, but designed to solve the readers\u2013writers problem. For something akin to a general semaphore, you could use a <code>Mutex&lt;AtomicIsize&gt;</code> and a busy loop, but the busy loop will hamper performance. </p>\n\n<p><code>std::sync::Semaphore</code> was never stabilized. I managed to miss this fact the first time around because the 'unstable' warning box was not displayed, probably because the 'deprecated' box replaced it. <a href=\"https://doc.rust-lang.org/1.7.0/src/std/sync/semaphore.rs.html#52-55\" rel=\"nofollow noreferrer\">The source code</a> for Semaphore contains an unstable attribute </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![unstable(feature = \"semaphore\",\n            reason = \"the interaction between semaphores and the acquisition/release \\\n                      of resources is currently unclear\",\n            issue = \"27798\")]\n</code></pre>\n\n<p>The issue number in the header specifies <a href=\"https://github.com/rust-lang/rust/issues/27798\" rel=\"nofollow noreferrer\">the discussion about this feature</a>.</p>\n"}], "owner": {"reputation": 23772, "user_id": 1035008, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/afa583c070c82a0961be918141f953fe?s=128&d=identicon&r=PG", "display_name": "Yuchen", "link": "https://stackoverflow.com/users/1035008/yuchen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 680, "favorite_count": 0, "accepted_answer_id": 59482918, "answer_count": 1, "score": 1, "last_activity_date": 1589250278, "creation_date": 1577290632, "last_edit_date": 1577290973, "question_id": 59480070, "link": "https://stackoverflow.com/questions/59480070/replacement-for-stdsyncsemaphore-since-it-is-deprecated", "title": "Replacement for std::sync::Semaphore since it is deprecated?", "body": "<p>The documentation says it is deprecated. What's the system semaphore? And what's the best replacement for this struct now? </p>\n\n<blockquote>\n  <p><a href=\"https://doc.rust-lang.org/1.7.0/std/sync/struct.Semaphore.html\" rel=\"nofollow noreferrer\">Deprecated since 1.7.0: easily confused with system semaphore and not used enough to pull its weight</a></p>\n</blockquote>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577280442, "post_id": 59478376, "comment_id": 105134628, "body": "@Stargateur Both the answer and question you have linked are beyond my understanding. Although it could be the same fundamental issue, I think my far simpler question is relatively simple for someone to answer, and a far better resource to understand the issue than what you have linked."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577281087, "post_id": 59478376, "comment_id": 105134800, "body": "While the other question is a bit more complex than yours, the answer would be pretty much identical: the <code>std</code> threads can outlive local variables, that&#39;s not safe. Different crates provide alternatives as shown in the other answer. You also have an issue because of <code>total</code>, which needs to be atomic to work with threads."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1577281497, "post_id": 59478376, "comment_id": 105134893, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=adc522a1d0d06c8171f6c3650921f2d2\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577282938, "post_id": 59478376, "comment_id": 105135227, "body": "@JonathanWoollett-light trust me I think the answer in the duplicate is WAY more simple that an answer to explain you why rust produce this particular error message. And in the end the answer is use something like scope if you want to this with your thread or clone everything like &amp;self."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577283778, "post_id": 59478376, "comment_id": 105135438, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=929b18a00ed3b67bba61edfc4716e878\" rel=\"nofollow noreferrer\">Another example</a>"}], "owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1577280939, "answer_count": 0, "score": 0, "last_activity_date": 1577280531, "creation_date": 1577276650, "last_edit_date": 1577280531, "question_id": 59478376, "link": "https://stackoverflow.com/questions/59478376/rust-cannot-infer-an-appropriate-lifetime-due-to-conflicting-requirements-e049", "closed_reason": "Duplicate", "title": "Rust &#39;cannot infer an appropriate lifetime due to conflicting requirements (E0495)&#39;", "body": "<p>The exact error from my minimal reproducible example:</p>\n\n<pre><code>cannot infer an appropriate lifetime due to conflicting requirements\n\nnote: ...so that the types are compatible:\n      expected &amp;test_struct\n         found &amp;test_struct\nnote: but, the lifetime must be valid for the static lifetime...rustc(E0495)\n</code></pre>\n\n<p>I get this error in a much larger project as I was trying to thread calls to a function of a struct.</p>\n\n<p>Here's the code that is a minimal reproducible example, producing the same error:</p>\n\n<pre><code>use std::thread;\n\npub struct test_struct {}\n\nimpl test_struct {\n    fn inner_test_fn(&amp;self) -&gt; u32 {\n        return 4u32;\n    }\n    pub fn outer_test_fn(&amp;self) -&gt; u32 {\n        let mut threads = vec![];\n        let mut total = 0u32;\n        for i in 0..4 {\n            threads.push(thread::spawn(move || {\n                let out = self.inner_test_fn();\n                total += out;\n            }));\n        }\n        for thread in threads {\n            thread.join();\n        }\n        return total;\n    }\n}\n\nfn main() {\n    let struct_holder = test_struct{};\n    let x = struct_holder.outer_test_fn();\n}\n</code></pre>\n\n<p>I am almost certain the error is because of <code>self.inner_test_fn();</code> but after this point I'm at a loss.</p>\n\n<p>I have and am looking up and reading more about lifetimes right now, but I can't quite figure this out yet.</p>\n\n<p>I am aware of other questions around the same error, but both questions and answers to these are far more complex and difficult to understand than my simple example.</p>\n\n<p>Any help would be greatly appreciated.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1577266306, "creation_date": 1577266306, "answer_id": 59476995, "question_id": 59476994, "link": "https://stackoverflow.com/questions/59476994/in-order-to-downcast-a-trait-object-why-does-it-have-to-be-static/59476995#59476995", "title": "In order to downcast a trait object why does it have to be static?", "body": "<p>The best way to understand it is to implement one! This SO question:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/33687447/how-to-get-a-reference-to-a-concrete-type-from-a-trait-object\">How to get a reference to a concrete type from a trait object?</a></li>\n</ul>\n\n<p>is a good starting point. The implementation in it relies on <code>std::any::Any</code> but doesn't shed light on why <code>'static</code> is required. If it is to be implemented directly in the same vein as <code>(dyn Any)::downcast_ref()</code> though (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1c457fab89fb59477ede538d490ebe16\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::any::TypeId;\n\ntrait A {\n    fn type_id(&amp;self) -&gt; TypeId\n    where\n        Self: 'static,\n    {\n        TypeId::of::&lt;Self&gt;()\n    }\n}\n\nimpl dyn A + 'static {\n    fn is&lt;T: A + 'static&gt;(&amp;self) -&gt; bool {\n        let t = TypeId::of::&lt;T&gt;();\n        let concrete = self.type_id();\n\n        t == concrete\n    }\n\n    fn downcast_ref&lt;T: A + 'static&gt;(&amp;self) -&gt; Option&lt;&amp;T&gt; {\n        if self.is::&lt;T&gt;() {\n            unsafe { Some(&amp;*(self as *const dyn A as *const T)) }\n        } else {\n            None\n        }\n    }\n}\n\nstruct B;\n\nimpl A for B {}\n\nfn main() {\n    let a: Box&lt;dyn A&gt; = Box::new(B);\n\n    let _b: &amp;B = match a.downcast_ref::&lt;B&gt;() {\n        Some(b) =&gt; b,\n        None =&gt; panic!(\"&amp;a isn't a B!\"),\n    };\n}\n</code></pre>\n\n<p>The <code>unsafe</code> here is actually safe because we are only downcasting back to the original type thanks to the type id check. The implementation pivots on <a href=\"https://doc.rust-lang.org/stable/std/any/struct.TypeId.html\" rel=\"nofollow noreferrer\"><code>TypeId</code></a> to give us that guarantee:</p>\n\n<blockquote>\n  <p>A TypeId is currently only available for types which ascribe to 'static, but this limitation may be removed in the future.</p>\n</blockquote>\n\n<p>If digging a little bit deeper, the way <a href=\"https://github.com/rust-lang/rust/blob/1.40.0/src/librustc_codegen_llvm/debuginfo/doc.rs#L166\" rel=\"nofollow noreferrer\">how this type id is calculated at the moment</a> finally gives us the answer. That is, a struct <code>Struct&lt;'a&gt;</code> may have N instantiations with different concrete substitutions for <code>'a</code>, but the type id is the same. Were the <code>TypeId</code> to be available to all <code>Struct&lt;'a&gt;</code>, we then can downcast any <code>Struct&lt;'a&gt;</code> to <code>Struct&lt;'static&gt;</code>, which would be a soundness issue.</p>\n"}], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 1, "accepted_answer_id": 59476995, "answer_count": 1, "score": 4, "last_activity_date": 1577281961, "creation_date": 1577266306, "last_edit_date": 1577281961, "question_id": 59476994, "link": "https://stackoverflow.com/questions/59476994/in-order-to-downcast-a-trait-object-why-does-it-have-to-be-static", "title": "In order to downcast a trait object why does it have to be static?", "body": "<p>The <code>std::error::Error</code> trait is transiting to a new design. Noticeably its <code>cause</code> method:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn cause(&amp;self) -&gt; Option&lt;&amp;dyn Error&gt;\n</code></pre>\n\n<p>is deprecated and to be replaced by:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn source(&amp;self) -&gt; Option&lt;&amp;(dyn Error + 'static)&gt;\n</code></pre>\n\n<p>Besides the name, the only change is that the new method returns <code>'static</code>. The reason given by <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md#why-cause---source\" rel=\"nofollow noreferrer\">fix error RFC</a> is:</p>\n\n<blockquote>\n  <p>The problem with the existing <code>cause</code> API is that the error it returns is not <code>'static</code>. This means it is not possible to downcast the error trait object, because downcasting can only be done on <code>'static</code> trait objects (for soundness reasons).</p>\n</blockquote>\n\n<p>This is not obvious to me at all. Why is that?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1580437331, "post_id": 59478246, "comment_id": 106106169, "body": "This could do with a little explaination about what the magic &quot;as _&quot; does. How does the compiler decide what <code>_</code> means in this context."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1580438649, "post_id": 59478246, "comment_id": 106106395, "body": "@MichaelAnderson Hope it&#39;s more clear, unfortunately there is not much reference for this problem."}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1580439316, "post_id": 59478246, "comment_id": 106106507, "body": "Thanks, for clearing that up. I knew the compiler would do type inference in a few places, just didn&#39;t expect it as part of a <code>as X</code>. Looks like a very useful feature. Seems a pity it&#39;s not better documented somewhere."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 6, "last_activity_date": 1580438458, "last_edit_date": 1580438458, "creation_date": 1577275608, "answer_id": 59478246, "question_id": 59476676, "link": "https://stackoverflow.com/questions/59476676/failed-to-infer-type-when-using-resultmap-and-box/59478246#59478246", "title": "Failed to infer type when using Result::map and Box", "body": "<p>It's a limitation and I don't know if it will compile one day. The reason is that Rust doesn't know to convert between the two <code>Result</code> types, <code>(dyn T + 'static)</code> and <code>U</code> are totally different things. If this acceptable you can do <code>f2().map(|x| Box::new(x) as _)</code>.</p>\n\n<p>The cast will allow the compiler to transform <code>U</code> into <code>(dyn T + 'static)</code> before put it in the result, we don't need to explicit the cast type the compiler <a href=\"https://doc.rust-lang.org/stable/reference/types/inferred.html?highlight=inference#inferred-type\" rel=\"nofollow noreferrer\">inference</a> will do it for us (on most case).</p>\n\n<blockquote>\n  <p>A trait object can be obtained from a pointer to a concrete type that implements the trait by casting it (e.g. &amp;x as &amp;Foo)</p>\n</blockquote>\n\n<p>See <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/trait-objects.html#dynamic-dispatch\" rel=\"nofollow noreferrer\">dynamic dispatch</a> section of the book (didn't find any information in the new book).</p>\n"}], "owner": {"reputation": 33, "user_id": 5841373, "user_type": "registered", "profile_image": "https://graph.facebook.com/233792026958404/picture?type=large", "display_name": "\u9f99\u65b9\u6dde", "link": "https://stackoverflow.com/users/5841373/%e9%be%99%e6%96%b9%e6%b7%9e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 59478246, "answer_count": 1, "score": 2, "last_activity_date": 1580438458, "creation_date": 1577263573, "last_edit_date": 1579715251, "question_id": 59476676, "link": "https://stackoverflow.com/questions/59476676/failed-to-infer-type-when-using-resultmap-and-box", "title": "Failed to infer type when using Result::map and Box", "body": "<p>Why won't this compile?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait T {}\n\nfn f&lt;U: 'static + T, V, E&gt;(f2: V) -&gt; impl Fn() -&gt; Result&lt;Box&lt;dyn T&gt;, E&gt;\nwhere\n    V: Fn() -&gt; Result&lt;U, E&gt;,\n{\n    move || -&gt; Result&lt;Box&lt;dyn T&gt;, E&gt; { f2().map(Box::new) }\n}\n</code></pre>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:7:40\n  |\n7 |     move || -&gt; Result&lt;Box&lt;dyn T&gt;, E&gt; { f2().map(Box::new) }\n  |                                        ^^^^^^^^^^^^^^^^^^ expected trait T, found type parameter\n  |\n  = note: expected type `std::result::Result&lt;std::boxed::Box&lt;(dyn T + 'static)&gt;, _&gt;`\n             found type `std::result::Result&lt;std::boxed::Box&lt;U&gt;, _&gt;`\n  = help: type parameters must be constrained to match other types\n  = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters\n</code></pre>\n\n<p>This version is ok:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait T {}\n\nfn f&lt;U: 'static + T, V, E&gt;(f2: V) -&gt; impl Fn() -&gt; Result&lt;Box&lt;dyn T&gt;, E&gt;\nwhere\n    V: Fn() -&gt; Result&lt;U, E&gt;,\n{\n    move || -&gt; Result&lt;Box&lt;dyn T&gt;, E&gt; {\n        match f2() {\n            Ok(result) =&gt; Ok(Box::new(result)),\n            Err(e) =&gt; Err(e),\n        }\n    }\n}\n</code></pre>\n\n<p>In my opinion, <code>(dyn T + 'static)</code> and <code>U</code> are the same; am I right?</p>\n\n<p>I'm using <code>rustc 1.39.0-nightly (f0b58fcf0 2019-09-11)</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1577255585, "post_id": 59475692, "comment_id": 105129403, "body": "Compiler is not able to infer since <code>println!</code> macro accepts generic type. Here is some ideas : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8f59a103f21f101be18b1e5e0805d644\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 685, "user_id": 491108, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/494622e740fcb90270f0ce191d9674ea?s=128&d=identicon&r=PG", "display_name": "Mooh", "link": "https://stackoverflow.com/users/491108/mooh"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1577869348, "post_id": 59475692, "comment_id": 105271065, "body": "@&#214;merErden Great answer! But why is that <code>&amp;int.some() as &amp;bool</code> works while <code>int.some() as bool</code> does not?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1577876735, "post_id": 59475692, "comment_id": 105272531, "body": "You can&#39;t directly cast <code>T</code> into a target type, please see: <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/expressions/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1577297915, "last_edit_date": 1577297915, "creation_date": 1577297506, "answer_id": 59480832, "question_id": 59475692, "link": "https://stackoverflow.com/questions/59475692/how-to-call-generic-trait-method-in-rust/59480832#59480832", "title": "How to call generic trait method in Rust", "body": "<p>You must specify the exact type, as you tried. Unfortunately, your function is not generic, and instead your implementation is generic, so you'd have to do the following:</p>\n\n<pre><code>fn main() {\n    let int: i32 = 45;\n    println!(\"some: {}\", &lt;i32 as Generic&lt;bool&gt;&gt;::some(&amp;int));\n    // Or,\n    println!(\"some: {}\", Generic::&lt;bool&gt;::some(&amp;int));\n}\n</code></pre>\n\n<p>Alternatively you could define a helper trait:</p>\n\n<pre><code>trait HasSome {\n    fn other_some&lt;T&gt;(&amp;self) -&gt; T where Self: Generic&lt;T&gt; {\n        &lt;Self as Generic&lt;T&gt;&gt;::some(self)\n    }\n}\nimpl&lt;T&gt; HasSome for T {} // Blanket impl. \n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e5c322d7408cfc261d1d61d942c3353\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<hr>\n\n<p>On a side note, please know that when specifying the generics of a type or function you need to use the \"turbofish\" <code>::&lt;&gt;</code> operator:</p>\n\n<pre><code>let foo = Vec::&lt;i32&gt;::new(); // Vec&lt;i32&gt;\nlet foo = my_generic_function::&lt;usize&gt;(); // Calls my_generic_function with usize\nlet foo = Option::&lt;usize&gt;::None;\nlet foo = None::&lt;usize&gt;;\n</code></pre>\n"}], "owner": {"reputation": 685, "user_id": 491108, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/494622e740fcb90270f0ce191d9674ea?s=128&d=identicon&r=PG", "display_name": "Mooh", "link": "https://stackoverflow.com/users/491108/mooh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 59480832, "answer_count": 1, "score": 2, "last_activity_date": 1577297915, "creation_date": 1577254249, "last_edit_date": 1577255232, "question_id": 59475692, "link": "https://stackoverflow.com/questions/59475692/how-to-call-generic-trait-method-in-rust", "title": "How to call generic trait method in Rust", "body": "<p>Having these rather contrived type definitions</p>\n\n<pre><code>trait Generic&lt;T&gt; {\n    fn some(&amp;self) -&gt; T;\n}\n\nimpl&lt;T&gt; Generic&lt;T&gt; for i32\nwhere\n    T: Default,\n{\n    fn some(&amp;self) -&gt; T {\n        T::default()\n    }\n}\n</code></pre>\n\n<p>I would like to call <code>some</code> method explicitly specifying type T. Below code apparently does not work because the method itself is not generic.</p>\n\n<pre><code>fn main() {\n    let int: i32 = 45;\n    println!( \"some: {}\", int.some&lt;bool&gt;() );\n}\n</code></pre>\n\n<p>What's the right way of calling <code>some</code>?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": false, "score": 1, "last_activity_date": 1577279168, "creation_date": 1577279168, "answer_id": 59478683, "question_id": 59475464, "link": "https://stackoverflow.com/questions/59475464/can-i-enumerate-with-rusts-variadic-macros/59478683#59478683", "title": "Can I &#39;enumerate&#39; with Rust&#39;s variadic macros?", "body": "<p>Because macros aren't allowed to store or manipulate \"variables\" in any form, this problem becomes very difficult. You could, however, use an iterator to do something to the same effect, by creating an iterator that \"enumerates\" over the input the way you want it (using <a href=\"https://doc.rust-lang.org/std/iter/fn.successors.html\" rel=\"nofollow noreferrer\"><code>std::iter::successors</code></a>, for example), and simply calling <code>iterator.next().unwrap()</code> in <code>$(some-macro-magic-here)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": false, "score": 1, "last_activity_date": 1577291946, "creation_date": 1577291946, "answer_id": 59480201, "question_id": 59475464, "link": "https://stackoverflow.com/questions/59475464/can-i-enumerate-with-rusts-variadic-macros/59480201#59480201", "title": "Can I &#39;enumerate&#39; with Rust&#39;s variadic macros?", "body": "<p>You cannot create such <code>match</code> statement as Rust do not allow creating <code>match</code> branches via macro, aka this will not work right now:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match val {\n    my_macro! (A, B, C)\n}\n</code></pre>\n\n<p>However in this case we can \"hack it around\" by using nested <code>if let</code> blocks and using recursive macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! my_macro {\n  ($expr:expr; $($pat:pat),*) =&gt; {\n    my_macro!($expr; 2, 2; $($pat),*)\n  };\n  ($expr:expr; $curr:expr, $step:literal; $pat:pat) =&gt; {\n    if let $pat = $expr {\n        $curr\n    } else {\n        unreachable!()\n    }\n  };\n  ($expr:expr; $curr:expr, $step:literal; $pat:pat, $($rest:pat),*) =&gt; {\n    if let $pat = $expr {\n        $curr\n    } else {\n        my_macro! ($expr; $curr+$step, $step; $($rest),*)\n    }\n  }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=95cb825e63031e40ce20863083a574b1\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>It will generate the nested entries with enough <code>2</code> added to create the expected constants. Alternatively you could replace that with multiplication, but it should be optimised out by the compiler anyway.</p>\n"}], "owner": {"reputation": 7535, "user_id": 956134, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/95f88f7c5f4fac6d14156c0100bdbc4d?s=128&d=identicon&r=PG", "display_name": "math4tots", "link": "https://stackoverflow.com/users/956134/math4tots"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1577291946, "creation_date": 1577251606, "question_id": 59475464, "link": "https://stackoverflow.com/questions/59475464/can-i-enumerate-with-rusts-variadic-macros", "title": "Can I &#39;enumerate&#39; with Rust&#39;s variadic macros?", "body": "<p>Essentially I have a macro that looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! my_macro {\n  ( $expr:expr; $( $pat:pat ),* ) =&gt; {\n    match $expr {\n      $(\n        $pat =&gt; $(some-macro-magic-here),\n      )*\n    }\n  }\n}\n</code></pre>\n\n<p>Is there anything that can go into <code>$(some-macro-magic-here)</code>, so that</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>my_macro!(foo; A, B, C)\n</code></pre>\n\n<p>will expand to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match foo {\n  A =&gt; 2,\n  B =&gt; 4,\n  C =&gt; 6,\n}\n</code></pre>\n\n<p>?</p>\n\n<p>Is there some other way I might be able to get a similar feature that effectively lets me \"enumerate\" over the sequence of inputs for the macro?</p>\n\n<p>I think I could probably write a recursive macro to get a similar effect, but I'm wondering if there's a more elegant/idiomatic way about it than what I'm thinking of</p>\n"}, {"tags": ["assembly", "rust", "linker", "ld", "instructions"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1577241798, "post_id": 59474762, "comment_id": 105127865, "body": "<code>.o</code> object files have relocation metadata which gets resolved at link time.  The RIP-relative offset isn&#39;t even calculated until link time; in the <code>.o</code> it&#39;s normally just a <code>00 00 00 00</code> placeholder for the rel32 to be filled in at link time (based on the target symbol).  Disassemble the <code>.o</code> with <code>objdump -drwC</code> to show relocation."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1577241897, "post_id": 59474762, "comment_id": 105127877, "body": "TL:DR: this part should Just Work; whatever problem you&#39;re having probably isn&#39;t caused by this.  Does your linker script need an entry for the <code>.rodata</code> section and also <code>.data</code> and/or <code>.bss</code>?"}, {"owner": {"reputation": 61, "user_id": 8890002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642291746a71874df9eb9591d22ff185?s=128&d=identicon&r=PG&f=1", "display_name": "\u7f57\u65ed\u7693", "link": "https://stackoverflow.com/users/8890002/%e7%bd%97%e6%97%ad%e7%9a%93"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1577245904, "post_id": 59474762, "comment_id": 105128287, "body": "I&#39;m not sure about this. I was following a <a href=\"https://os.phil-opp.com/multiboot-kernel/#building-the-executable\" rel=\"nofollow noreferrer\">tutorial</a> of building OS from scratch. As for the previous problem, I compiled the rust and assembly separately and linked them manully. The rust doesn&#39;t know it is going to be linked with another object so I think it would not leave a placeholder there in this case. I checked that instruction in the object and it remians the same before and after linking. You can check my <a href=\"https://github.com/Stuart0l/Small-OS-in-Rust/tree/dev\" rel=\"nofollow noreferrer\">repo</a> to see if other thing cause the bug. Thanks."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1577248894, "post_id": 59474762, "comment_id": 105128570, "body": "Compiler back-ends like LLVM <i>always</i> use relocation entries even for references to labels defined in the same compilation unit, unless it&#39;s within the same <i>section</i>.  e.g. for jump targets.  I haven&#39;t looked at Rust compiler output specifically, but it&#39;s the same LLVM that clang uses.  Also there&#39;s no way Rust could work properly even for building normal executables out of multiple source files (not just kernels) if the toolchain had the problem you&#39;re worried about.  I don&#39;t really know linker <i>scripts</i>, though, just how linkers work by default, so IDK if yours could be the problem."}], "answers": [{"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 2, "creation_date": 1577306257, "post_id": 59476265, "comment_id": 105139854, "body": "I&#39;m surprised any linker would even accept an executable as input instead of <code>.o</code> files (loose or in a <code>.a</code>).  But apparently you can <code>gcc -o hello hello.c</code> and then <code>gcc -nostartfiles -o foo hello</code> to make a broken executable.  Interesting."}], "tags": [], "owner": {"reputation": 61, "user_id": 8890002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642291746a71874df9eb9591d22ff185?s=128&d=identicon&r=PG&f=1", "display_name": "\u7f57\u65ed\u7693", "link": "https://stackoverflow.com/users/8890002/%e7%bd%97%e6%97%ad%e7%9a%93"}, "is_accepted": false, "score": 3, "last_activity_date": 1577259819, "creation_date": 1577259819, "answer_id": 59476265, "question_id": 59474762, "link": "https://stackoverflow.com/questions/59474762/how-to-properly-link-two-object-files-without-affecting-rip-relative-addressing/59476265#59476265", "title": "How to properly link two object files without affecting rip relative addressing?", "body": "<p>I figure it out. Thanks to the hints offered by <a href=\"https://stackoverflow.com/users/224132/peter-cordes\">Peter Cordes</a>. The reason is that I compiled my rust code to an executable rather than a library. I should compile it into a library(a <code>.a</code> file) so the linker can calculate the offset of rip-relative addressing during link-time. If it's compiled into an executable then the offset is already calculated so the linker can't recalculate it and the problem I mentioned will arouse. Please forgive me that this is a silly mistake(how could you link an executable with other), I haven't look into such things seriously before.</p>\n"}], "owner": {"reputation": 61, "user_id": 8890002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642291746a71874df9eb9591d22ff185?s=128&d=identicon&r=PG&f=1", "display_name": "\u7f57\u65ed\u7693", "link": "https://stackoverflow.com/users/8890002/%e7%bd%97%e6%97%ad%e7%9a%93"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1577259819, "creation_date": 1577241264, "question_id": 59474762, "link": "https://stackoverflow.com/questions/59474762/how-to-properly-link-two-object-files-without-affecting-rip-relative-addressing", "title": "How to properly link two object files without affecting rip relative addressing?", "body": "<p>I have two object files, one is generated from assembly and another is compiled from rust. From the assembly I call a function in the rust (as below) so I need to link them together.</p>\n\n<pre><code>//boot.asm\nsection .text\n...\nextern _start\ncall _start\n...\n\n//main.rs\n#![no_std]\n#![no_main]\n\n#[no_mangle]\npub extern fn _start() {\n    let hello = b\"hello_world!\";\n    ...\n}\n</code></pre>\n\n<p>After compile I found there are a <code>.rodata</code> section and a <code>.text</code> section in the rust object file, and there are instructions that use rip-relative addressing to address the \"hello world\" string in the <code>.rodata</code> section:</p>\n\n<pre><code>//section .text\n...\n  let hello = b\"hello world!\";\n2017e7: 48 8d 05 2e ea ff ff    lea    -0x15d2(%rip),%rax\n2017ee: 48 89 44 24 30          mov    %rax,0x30(%rsp)\n...\n</code></pre>\n\n<p>I also have <code>.rodata</code> section and <code>.text</code> section in the assembly. However, during linking the linker just merge the two <code>.rodata</code> sections and two <code>.text</code> sections into one <code>.rodata</code> section and one <code>.text</code> section, which affects the rip-relative addressing, causing my program not working working.\nCan anybody tell me how should I make modifications to resolve the problem?\nThis is my linker script, Should I modify it?</p>\n\n<pre><code>ENTRY(start)\n\nSECTIONS {\n    . = 0x00100000;\n\n    .boot :\n    {\n        *(.multiboot_header)\n    }\n\n    .text :\n    {\n        *(.text)\n    }\n}\n</code></pre>\n\n<p>Thank you for your help!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1577227307, "post_id": 59473917, "comment_id": 105126129, "body": "Just to be picky: in <code>main</code> the type of <code>my_array</code> is <code>[i32; 4]</code>, <code>&amp;mut my_array</code> is then <code>&amp;mut [i32; 4]</code> which coerces to <code>&amp;mut [i32]</code>."}, {"owner": {"reputation": 182, "user_id": 11116081, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JC4bb.png?s=128&g=1", "display_name": "Gabe Nodarse", "link": "https://stackoverflow.com/users/11116081/gabe-nodarse"}, "edited": false, "score": 0, "creation_date": 1577351160, "post_id": 59473917, "comment_id": 105147352, "body": "Okay, thinking of &amp;mut [i32] as a distinct type helps me justify it in my mind. I&#39;m loving Rust so far, I just find the mix of magic and non-magic unnecessarily confusing. Why can I call the dot operator on a borrowed type, but for passing it into a function I have to treat it as different? I wish that borrowed values were treated like the originals, with the borrowed qualifier only meaning it wasn&#39;t copied and won&#39;t expire in that scope. Then there could be a keyword/typecast for accessing the pointer itself. Wouldn&#39;t that be more intuitive than this half-assed abstraction away of pointers?"}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1577381193, "post_id": 59473917, "comment_id": 105157380, "body": "<i>call the dot operator on a borrowed type</i> and <i>pass it into a function</i>. Well, you mentioned two operations, but you haven&#39;t really defined them well. Basically the second operation is more general which applies to any static language, i.e. you should consider types always. The reason you can <i>call the dot operator on a borrowed type</i> is a special case, which is due to rust&#39;s auto dereference: <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\" title=\"what are rusts exact auto dereferencing rules\">stackoverflow.com/questions/28519997/&hellip;</a>."}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1577382174, "post_id": 59473917, "comment_id": 105157665, "body": "<i>I wish that borrowed values were treated like the originals</i>. I think auto derefence to some extent is trying to achieve that purpose from the usage stand point. But that doesn&#39;t mean we can ignore the difference, as that would defeat all the purposes of the borrow-checker system that rust enforces, wouldn&#39;t it?"}], "tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 4, "last_activity_date": 1577227221, "creation_date": 1577227221, "answer_id": 59473917, "question_id": 59473860, "link": "https://stackoverflow.com/questions/59473860/when-passing-a-mutable-array-reference-into-a-function-that-also-takes-a-mutable/59473917#59473917", "title": "When passing a mutable array reference into a function that also takes a mutable array reference, why is &amp;mut not stated?", "body": "<p>In your main function, <code>my_array</code> is of type <code>[i32]</code>, but <code>quick_sort</code> requires <code>&amp;mut [i32]</code>, which is why you need <code>&amp;mut my_array</code>; In your <code>quick_sort</code> function, however parameter <code>array</code> is already of type <code>&amp;mut [i32]</code>, which is why you can directly pass it to <code>partition</code> and recursive <code>quick_sort</code> call. This is exactly how you should call your functions following the type annotations.</p>\n\n<pre><code>fn main() {\n    let mut my_array = [5, 2, 8, 7];         // [i32]\n    quick_sort(&amp;mut my_array, 0, high);      // &amp;mut my_array gives type &amp;mut [i32]\n}\n\nfn quick_sort(array: &amp;mut [i32], low: usize, high: usize) {\n    let pivot_idx = partition(array, low, high);    \n    // notice array is already of type &amp;mut [i32], which is required by partition function,\n    // you shouldn't take another reference on top of it\n    ...\n}\n</code></pre>\n"}], "owner": {"reputation": 182, "user_id": 11116081, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JC4bb.png?s=128&g=1", "display_name": "Gabe Nodarse", "link": "https://stackoverflow.com/users/11116081/gabe-nodarse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 59473917, "answer_count": 1, "score": 3, "last_activity_date": 1577227221, "creation_date": 1577226689, "question_id": 59473860, "link": "https://stackoverflow.com/questions/59473860/when-passing-a-mutable-array-reference-into-a-function-that-also-takes-a-mutable", "title": "When passing a mutable array reference into a function that also takes a mutable array reference, why is &amp;mut not stated?", "body": "<p>I am trying to implement the quick sort algorithm for an array of i32. My question is about an apparent inconsistency in the use of &amp;mut when passing in arrays to functions. My code:</p>\n\n<pre><code>fn main() {\n    let mut my_array = [5, 2, 8, 7];\n    let high = my_array.len() - 1;\n    quick_sort(&amp;mut my_array, 0, high);\n    print!(\"{:?}\", my_array);\n}\n\nfn quick_sort(array: &amp;mut [i32], low: usize, high: usize) {\n    let pivot_idx = partition(array, low, high);\n\n    // Separately sort elements before partition and after partition\n    if pivot_idx &gt; low {\n        quick_sort(array, low, pivot_idx - 1);\n    }\n    if pivot_idx &lt; high {\n        quick_sort(array, pivot_idx + 1, high);\n    }\n}\n\nfn partition(array: &amp;mut [i32], low: usize, high: usize) -&gt; usize {\n    let pivot = array[high]; // pivot\n    let mut i = low;\n\n    for j in low..high {\n        // If current element is less than or equal to pivot\n        if array[j] &lt;= pivot {\n            let swapper_variable = array[i];\n            array[i] = array[j];\n            array[j] = swapper_variable;\n            i += 1; // increment index of smaller element\n        }\n    }\n\n    let swapper_variable = array[i];\n    array[i] = array[high];\n    array[high] = swapper_variable;\n    return i;\n}\n</code></pre>\n\n<p>My code works, but should it? In main I call quick_sort with <code>quick_sort(&amp;mut my_array, 0, high)</code>, but the recursive call within quick_sort is <code>quick_sort(array, low, pivot_idx - 1)</code>, without the &amp;mut. </p>\n\n<p>Furthermore, also within quick_sort, I call partition with <code>partition(array, low, high)</code>, but partition takes a mutable array as an argument and I haven't specified &amp;mut in the call! If I do try to put &amp;mut in the partition function call, the code will not compile:\n<code>error[E0596]: cannot borrow `array` as mutable, as it is not declared as mutable\n --&gt; src/main.rs:9:31\n  |\n8 | fn quick_sort(array: &amp;mut [i32], low: usize, high: usize) {\n  |               ----- help: consider changing this to be mutable: `mut array`\n9 |     let pivot_idx = partition(&amp;mut array, low, high);\n  |                               ^^^^^^^^^^ cannot borrow as mutable</code></p>\n\n<p>So it seems there's some confusion as to what's mutable, the array itself or the pointer(?) to the array. But it seems to me that I should be able to call functions within quick_sort in the same manner that I called quick_sort originally from main. As far as I know, the point of forcing &amp;mut to be explicitly placed in the function call is that doing so makes it easy to see that the called function might modify the argument, but the calls within quick_sort give no indication that they modify the array.</p>\n\n<p>Playground:\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=62813cd1bd23d8b1a36d6126d4305800\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=62813cd1bd23d8b1a36d6126d4305800</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577219029, "post_id": 59473064, "comment_id": 105124679, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/44096235/understanding-traits-and-object-safety\">Understanding Traits and Object Safety</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577219134, "post_id": 59473064, "comment_id": 105124699, "body": "See also <a href=\"https://stackoverflow.com/questions/38318497/what-safety-guarantees-of-rust-would-be-lost-if-not-for-object-safety\" title=\"what safety guarantees of rust would be lost if not for object safety\">stackoverflow.com/questions/38318497/&hellip;</a>"}, {"owner": {"reputation": 1282, "user_id": 807631, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/3120b244b19cab8e1c52845139b3fc23?s=128&d=identicon&r=PG&f=1", "display_name": "Misguided", "link": "https://stackoverflow.com/users/807631/misguided"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577219197, "post_id": 59473064, "comment_id": 105124709, "body": "Let me rephrase: I don&#39;t understand how to fix the issue. I still need the borrow on K, so it seems there&#39;s actually no way to implement this in Rust right now, correct?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577219508, "post_id": 59473064, "comment_id": 105124766, "body": "No. You are trying to mix generic methods, which are a static thing, with trait objects, which are dynamic. The simplest way to allow this would be to remove <code>Q</code> and accept <code>k: &amp;K</code>."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1577254028, "post_id": 59473064, "comment_id": 105129176, "body": "Reason is hidden in how trait obejcts work. You will always have a <code>vtable</code> for every implementation of a trait on an object. The <code>vtable</code> contains <i>concrete</i> functions. That&#39;s to say, the types which go into each of the parameters is decided at compile time. Usually, generic functions are run through a process called monomorphization which will take generic functions and copy/paste them for each type they&#39;re used with. This will allow for type-specific optimizations. But then how would this work with trait objects? Should <i>every</i> trait vtable implement every generic parameter ever used?"}], "owner": {"reputation": 1282, "user_id": 807631, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/3120b244b19cab8e1c52845139b3fc23?s=128&d=identicon&r=PG&f=1", "display_name": "Misguided", "link": "https://stackoverflow.com/users/807631/misguided"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1577218389, "creation_date": 1577218389, "question_id": 59473064, "link": "https://stackoverflow.com/questions/59473064/trait-objects-for-trait-with-functions-that-have-generic-parameters", "title": "Trait objects for trait with functions that have generic parameters", "body": "<p>I have a trait that looks like this:</p>\n\n<pre><code>pub trait Trait&lt;K, V&gt; \n{\n    fn f&lt;Q&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt;\n        where K: Borrow&lt;Q&gt;;\n}\n</code></pre>\n\n<p>When I try to write a function</p>\n\n<pre><code>fn create&lt;K, V&gt;(params here) -&gt; Box&lt;dyn Trait&lt;K, V&gt;&gt; {\n...\n}\n</code></pre>\n\n<p>That instantiates one of the objects that satisfies the trait depending on parameters, I get the following error:</p>\n\n<pre><code>the trait `Trait` cannot be made into an object\n   |\n   = note: method `f` has generic type parameters\n</code></pre>\n\n<p>I don't really understand why this is happening, or how to fix it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 24772, "user_id": 770830, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a3943e02574f64dabaa71603264c9c28?s=128&d=identicon&r=PG", "display_name": "bereal", "link": "https://stackoverflow.com/users/770830/bereal"}, "edited": false, "score": 1, "creation_date": 1577217712, "post_id": 59472965, "comment_id": 105124429, "body": "Not a Rust coder, but aren&#39;t you supposed to call something like <a href=\"https://docs.rs/reqwest/0.9.24/reqwest/struct.Response.html#method.json\" rel=\"nofollow noreferrer\"><code>json()</code></a> on the response?"}, {"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1577218861, "post_id": 59472965, "comment_id": 105124645, "body": "Could you determine the final aim of your programme? So ... You would like to print json or to treat it as a json within other parts of your programme?"}, {"owner": {"reputation": 677, "user_id": 7120087, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EPTAO7Br5mM/AAAAAAAAAAI/AAAAAAAABdc/buufBLJXBDk/photo.jpg?sz=128", "display_name": "Viewerisland", "link": "https://stackoverflow.com/users/7120087/viewerisland"}, "edited": false, "score": 0, "creation_date": 1577227507, "post_id": 59472965, "comment_id": 105126159, "body": "Sorry for any confusion, because the response I am getting isn&#39;t even the correct response I have not gotten to the parsing part. I wanted to extract the trilat and trilong data out from the API, but the output I get is not the actual data, but the headers."}, {"owner": {"reputation": 677, "user_id": 7120087, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EPTAO7Br5mM/AAAAAAAAAAI/AAAAAAAABdc/buufBLJXBDk/photo.jpg?sz=128", "display_name": "Viewerisland", "link": "https://stackoverflow.com/users/7120087/viewerisland"}, "edited": false, "score": 0, "creation_date": 1577231241, "post_id": 59472965, "comment_id": 105126662, "body": "Update: I&#39;ve realized you needed an authorization header for this API in order to work. Thanks for all the help guys!"}], "answers": [{"comments": [{"owner": {"reputation": 677, "user_id": 7120087, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EPTAO7Br5mM/AAAAAAAAAAI/AAAAAAAABdc/buufBLJXBDk/photo.jpg?sz=128", "display_name": "Viewerisland", "link": "https://stackoverflow.com/users/7120087/viewerisland"}, "edited": false, "score": 0, "creation_date": 1577227427, "post_id": 59473308, "comment_id": 105126150, "body": "Hello, sorry if I wasn&#39;t being clear, but even with your code I get the same output with status code 401 unauthorized. However if I were to visit the fully constructed request in a web browser <a href=\"https://api.wigle.net/api/v2/network/search?first=0&amp;latrange1=41.159&amp;latrange2=42.889&amp;longrange1=-73.5081&amp;longrange2=-69.7398&amp;freenet=false&amp;paynet=false&amp;ssid=xfinity\" rel=\"nofollow noreferrer\">api.wigle.net/api/v2/network/&hellip;</a> it would give me the intended output"}], "tags": [], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "is_accepted": true, "score": 0, "last_activity_date": 1577221067, "last_edit_date": 1577221067, "creation_date": 1577220753, "answer_id": 59473308, "question_id": 59472965, "link": "https://stackoverflow.com/questions/59472965/rust-json-api-request-formatting/59473308#59473308", "title": "Rust JSON API Request Formatting", "body": "<p>This crate doesn't support such a possibility to transform its type <code>Response</code> to the <code>serde_json::Value</code> type. But you can implement it by yourself.</p>\n\n<p>You should define your structure and operate on it. For instanse it may be somehow like the following:</p>\n\n<pre><code>use serde::{Serialize, Deserialize};\nuse std::collections::HashMap;\nuse serde_json;\nuse reqwest;\nuse reqwest::Error;\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Req {\n  url: String,\n  status: u16,\n  headers: HashMap&lt;String, String&gt;,\n  body: Option&lt;serde_json::Value&gt;\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let request_url = format!(\"https://api.wigle.net/api/v2/network/search?first=0&amp;latrange1={lat_range_min}&amp;latrange2={lat_range_max}&amp;longrange1={long_range_min}&amp;longrange2={long_range_max}&amp;freenet=false&amp;paynet=false&amp;ssid={ssid}\",\n                              lat_range_min = \"41.159\",\n                              lat_range_max = \"42.889\",\n                              long_range_min = \"-73.5081\",\n                              long_range_max = \"-69.7398\",\n                              ssid= \"xfinity\"\n                            );\n    let mut response = reqwest::get(&amp;request_url)?;\n    let mut hm = HashMap::new();\n    for (key, val) in response.headers().into_iter() {\n      hm.insert(key.as_str().to_owned(), val.to_str().ok().unwrap_or(\"\").to_owned());\n    }\n\n    let req = Req {status: response.status().as_u16(), url: request_url, body: response.json().ok(), headers: hm};\n\n    println!(\"{}\", serde_json::to_string(&amp;req).unwrap_or(\"\".to_owned()));\n\n\n    Ok(())\n}\n</code></pre>\n\n<p>to improve such a solution you can implement the trait <code>From</code> not to be so descriptive each time.</p>\n"}, {"tags": [], "owner": {"reputation": 677, "user_id": 7120087, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EPTAO7Br5mM/AAAAAAAAAAI/AAAAAAAABdc/buufBLJXBDk/photo.jpg?sz=128", "display_name": "Viewerisland", "link": "https://stackoverflow.com/users/7120087/viewerisland"}, "is_accepted": false, "score": 0, "last_activity_date": 1577231324, "creation_date": 1577231324, "answer_id": 59474201, "question_id": 59472965, "link": "https://stackoverflow.com/questions/59472965/rust-json-api-request-formatting/59474201#59474201", "title": "Rust JSON API Request Formatting", "body": "<p>Found out that I needed to use an Authorization header for this specific API</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate serde;\nextern crate serde_derive;\nextern crate reqwest;\nuse reqwest::Error;\n//use serde_json;\n\n#[derive(Deserialize, Debug)]\nstruct Output {\n    trilat: f64,\n    trilong: f64,\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let request_url = format!(\"https://api.wigle.net/api/v2/network/search?first=0&amp;latrange1={lat_range_min}&amp;latrange2={lat_range_max}&amp;longrange1={long_range_min}&amp;longrange2={long_range_max}&amp;freenet=false&amp;paynet=false&amp;ssid={ssid}\",\n                              lat_range_min = \"41.159\",\n                              lat_range_max = \"42.889\",\n                              long_range_min = \"-73.5081\",\n                              long_range_max = \"-69.7398\",\n                              ssid= \"XFINITY\"\n\n                            );\n\n    let client = reqwest::Client::new();\n    let response = client.get(&amp;request_url).header(\"Authorization\",\"Basic *****\").send()?.text()?;\n\n    println!(\"{:?}\", response);\n    //let result: Vec&lt;Output&gt; = response.json()?;\n    //println!(\"{}\", result[0].trilat);\n    Ok(())\n}\n</code></pre>\n\n<p>This will return the actual data, rather than giving me 401 access denied codes.</p>\n"}], "owner": {"reputation": 677, "user_id": 7120087, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EPTAO7Br5mM/AAAAAAAAAAI/AAAAAAAABdc/buufBLJXBDk/photo.jpg?sz=128", "display_name": "Viewerisland", "link": "https://stackoverflow.com/users/7120087/viewerisland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 476, "favorite_count": 0, "accepted_answer_id": 59473308, "answer_count": 2, "score": 0, "last_activity_date": 1595659501, "creation_date": 1577217336, "last_edit_date": 1595659501, "question_id": 59472965, "link": "https://stackoverflow.com/questions/59472965/rust-json-api-request-formatting", "title": "Rust JSON API Request Formatting", "body": "<p>I am trying to perform a search request given the API structure by:\n<a href=\"https://api.wigle.net/swagger#/\" rel=\"nofollow noreferrer\">https://api.wigle.net/swagger#/</a></p>\n<p>Currently, I have attempted to perform a /api/v2/network/search through the given structure by doing this (sorry for the long url!):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate serde;\nextern crate serde_derive;\nextern crate reqwest;\nuse reqwest::Error;\nuse serde_json;\n\n#[derive(Deserialize, Debug)]\nstruct Output {\n    trilat: f64,\n    trilong: f64,\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let request_url = format!(&quot;https://api.wigle.net/api/v2/network/search?first=0&amp;latrange1={lat_range_min}&amp;latrange2={lat_range_max}&amp;longrange1={long_range_min}&amp;longrange2={long_range_max}&amp;freenet=false&amp;paynet=false&amp;ssid={ssid}&quot;,\n                              lat_range_min = &quot;41.159&quot;,\n                              lat_range_max = &quot;42.889&quot;,\n                              long_range_min = &quot;-73.5081&quot;,\n                              long_range_max = &quot;-69.7398&quot;,\n                              ssid= &quot;XFINITY&quot;\n                            );\n\n    let mut response = reqwest::get(&amp;request_url)?;\n\n    println!(&quot;{:?}&quot;, response);\n\n    //let result: Vec&lt;Output&gt; = response.json()?;\n    //println!(&quot;{}&quot;, result[0].trilat);\n    Ok(())\n}\n</code></pre>\n<p>The output I get is:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>Response { url: &quot;https://api.wigle.net/api/v2/network/search?first=0&amp;latrange1=41.159&amp;latrange2=42.889&amp;longrange1=-73.5081&amp;longrange2=-69.7398&amp;freenet=false&amp;paynet=false&amp;ssid=xfinity&quot;, status: 401, headers: \n{&quot;server&quot;: &quot;nginx/1.16.1&quot;, &quot;date&quot;: &quot;Tue, 24 Dec 2019 19:51:14 GMT&quot;, &quot;content-type&quot;: &quot;application/json&quot;, &quot;content-length&quot;: &quot;14&quot;, &quot;connection&quot;: &quot;keep-alive&quot;} }\n</code></pre>\n<p>However if you were to do an actual request, you would get detailed api output from WiGLE.</p>\n<p>What do I do in order to get the correct output so I can parse it as a json output?</p>\n<p>Thanks!</p>\n"}, {"tags": ["rust", "traits", "box"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577223568, "post_id": 59472639, "comment_id": 105125521, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=83390ca4dc754e1286eba188f457552b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577223947, "post_id": 59472639, "comment_id": 105125606, "body": "@Stargateur It seems I kinda messed up the boundaries between data storage (since I want to store anything that implements a TTest in a Vector) and processing data. Let me try to refactor my code to take <code>dyn TTest</code> everywhere and only use the Box&#39;ed version when interacting with Vec&#39;s."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577226756, "post_id": 59473793, "comment_id": 105126064, "body": "Note that in your case it could be better to avoid dynamic dispatch <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b997a8208655ead4e7314368519ae159\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> my comment was just &quot;here who this should be code to compile&quot; but if your type is know at compile type better to have a compile time dispatch"}], "tags": [], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "is_accepted": false, "score": 0, "last_activity_date": 1577226003, "creation_date": 1577226003, "answer_id": 59473793, "question_id": 59472639, "link": "https://stackoverflow.com/questions/59472639/why-does-a-boxed-variable-need-an-explicit-type-in-order-to-be-passed-to-a-funct/59473793#59473793", "title": "Why does a boxed variable need an explicit type in order to be passed to a function?", "body": "<p>In this case the answer is not to use <code>Box</code> like this. As suggested by Stargateur in the comments, the following is the way to go:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait TTest {}\n\nstruct STest {}\nimpl TTest for STest {}\n\nfn foo(_test: &amp;dyn TTest) {}\n\npub fn main() {\n    // OK\n    let test1 = STest {};\n    foo(&amp;test1);\n}\n</code></pre>\n\n<p>If you still need to use <code>Box</code> to store it in a vector for example, you should only use it where strictly needed:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn add_test(test: Box&lt;dyn TTest&gt;) {\n    let mut vec = vec!{};\n    vec.push(test);\n}\n// ...\nadd_test(Box::new(test1));\n</code></pre>\n"}], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1577226021, "answer_count": 1, "score": 1, "last_activity_date": 1577226003, "creation_date": 1577214448, "question_id": 59472639, "link": "https://stackoverflow.com/questions/59472639/why-does-a-boxed-variable-need-an-explicit-type-in-order-to-be-passed-to-a-funct", "closed_reason": "Duplicate", "title": "Why does a boxed variable need an explicit type in order to be passed to a function?", "body": "<p>Why is an explicit type needed in order to make this compile? I'd expect the compiler to understand that <code>Box&lt;STest&gt;</code> is equal to <code>Box&lt;(dyn TTest + 'static)&gt;</code> in the first test case since <code>STest</code> implements the <code>TTest</code> trait. What makes the compiler able to implicitly cast it to a <code>BoxedTTest</code> in the second case, while it doesn't do so in the first case?</p>\n\n<p>I'm compiling it with <code>rustc --edition 2018 mwe.rs</code> on <code>rustc 1.40.0</code> (stable), but the same error happens with <code>--edition 2015</code> and on <code>rustc 1.42.0-nightly</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait TTest {}\n\nstruct STest {}\nimpl TTest for STest {}\n\ntype BoxedTTest = Box&lt;dyn TTest&gt;;\n\nfn foo(_test: &amp;BoxedTTest) {}\n\npub fn main() {\n    // expected trait TTest, found struct `STest`\n    let test1 = Box::new(STest {});\n    foo(&amp;test1);\n\n    // OK\n    let test2: BoxedTTest = Box::new(STest {});\n    foo(&amp;test2);\n}\n</code></pre>\n\n<p>The full error is as follows:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; mwe.rs:13:9\n   |\n13 |     foo(&amp;test1);\n   |         ^^^^^^ expected trait TTest, found struct `STest`\n   |\n   = note: expected type `&amp;std::boxed::Box&lt;(dyn TTest + 'static)&gt;`\n              found type `&amp;std::boxed::Box&lt;STest&gt;`\n</code></pre>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 33827, "user_id": 506413, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/1a474f3be606bcc6f964913b523626e9?s=128&d=identicon&r=PG", "display_name": "Jonathan Potter", "link": "https://stackoverflow.com/users/506413/jonathan-potter"}, "edited": false, "score": 1, "creation_date": 1577237701, "post_id": 59472528, "comment_id": 105127440, "body": "<code>0x00000004</code> means <code>CREATE_SUSPENDED</code>, your new process is created with its thread in a suspended state, and then you wait forever for the new process to go idle. It&#39;s not going to go idle while it&#39;s suspended."}, {"owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "edited": false, "score": 0, "creation_date": 1577241463, "post_id": 59472528, "comment_id": 105127839, "body": "Likewise, If the module list in the target process is corrupted or not yet initialized, <code>EnumProcessModules</code> may fail with 299."}], "answers": [{"comments": [{"owner": {"reputation": 39, "user_id": 12592290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bac8464cbc566c31fa474a8fc7db1d86?s=128&d=identicon&r=PG&f=1", "display_name": "Aleister Crowley", "link": "https://stackoverflow.com/users/12592290/aleister-crowley"}, "edited": false, "score": 0, "creation_date": 1577282169, "post_id": 59475012, "comment_id": 105135034, "body": "Thanks it worked but it did the same that when I set <code>GetCurrentProcess()</code>, the main process and ntdll modules handles are wrote in buffer but the <code>EnumProcessModules()</code> still returns 0 and <code>GetLastError()</code> returns 998 (ERROR_NOACCESS -&gt; Invalid access to memory location). What can I do to solve that ?"}, {"owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "reply_to_user": {"reputation": 39, "user_id": 12592290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bac8464cbc566c31fa474a8fc7db1d86?s=128&d=identicon&r=PG&f=1", "display_name": "Aleister Crowley", "link": "https://stackoverflow.com/users/12592290/aleister-crowley"}, "edited": false, "score": 0, "creation_date": 1577328303, "post_id": 59475012, "comment_id": 105142717, "body": "Note the last two parameters of <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodules#parameters\" rel=\"nofollow noreferrer\"><code>EnumProcessModules</code></a>, <code>cb</code>: The size of the lphModule array, **in bytes.**(Not array size) <code>lpcbNeeded</code>: The number of bytes required to store all module handles in the lphModule array.(can not be NULL, which will cause null pointer access violation exception in C/C++ code)"}, {"owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "reply_to_user": {"reputation": 39, "user_id": 12592290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bac8464cbc566c31fa474a8fc7db1d86?s=128&d=identicon&r=PG&f=1", "display_name": "Aleister Crowley", "link": "https://stackoverflow.com/users/12592290/aleister-crowley"}, "edited": false, "score": 0, "creation_date": 1577329269, "post_id": 59475012, "comment_id": 105142830, "body": "This may be because in 32-bit, <code>HMODULE</code> takes up 4 bytes, and 10 bytes can only get up to two <code>HMODULE</code>s(which you have got)."}], "tags": [], "owner": {"reputation": 6168, "user_id": 10611792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/r727s.jpg?s=128&g=1", "display_name": "Drake Wu", "link": "https://stackoverflow.com/users/10611792/drake-wu"}, "is_accepted": true, "score": 0, "last_activity_date": 1577329093, "last_edit_date": 1577329093, "creation_date": 1577244847, "answer_id": 59475012, "question_id": 59472528, "link": "https://stackoverflow.com/questions/59472528/enumprocessmodules-returns-0-with-error-299/59475012#59475012", "title": "EnumProcessModules returns 0 with error 299", "body": "<p>First, use the <code>CREATE_NEW_CONSOLE</code> or <code>CREATE_NO_WINDOW</code> instead of <code>CREATE_SUSPENDED(0x00000004)</code>, as @Jonathan Potter, the suspend state will block the function <code>WaitForInputIdle</code>.</p>\n\n<p>Second, make sure that the process is not a console application or has a message queue, otherwise <code>WaitForInputIdle</code> returns immediately.</p>\n\n<p>Then, you can try to call <code>SuspendThread</code> after <code>WaitForInputIdle</code> to suspend the process to prevent it from ending.</p>\n\n<p>EDIT:</p>\n\n<p>Pay attention to the last two parameters of <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodules#parameters\" rel=\"nofollow noreferrer\"><code>EnumProcessModules</code></a>:</p>\n\n<p><code>cb</code></p>\n\n<blockquote>\n  <p>The size of the lphModule array, <strong>in bytes</strong>.</p>\n</blockquote>\n\n<p><code>lpcbNeeded</code></p>\n\n<blockquote>\n  <p>The number of bytes required to store all module handles in the\n  lphModule array.</p>\n</blockquote>\n\n<p>Here is a good sample on msdn: <a href=\"https://docs.microsoft.com/en-us/windows/win32/psapi/enumerating-all-modules-for-a-process\" rel=\"nofollow noreferrer\">Enumerating All Modules For a Process</a>. Just replace <code>hProcess</code>.</p>\n"}], "owner": {"reputation": 39, "user_id": 12592290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bac8464cbc566c31fa474a8fc7db1d86?s=128&d=identicon&r=PG&f=1", "display_name": "Aleister Crowley", "link": "https://stackoverflow.com/users/12592290/aleister-crowley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 59475012, "answer_count": 1, "score": 1, "last_activity_date": 1577329093, "creation_date": 1577213586, "last_edit_date": 1577219204, "question_id": 59472528, "link": "https://stackoverflow.com/questions/59472528/enumprocessmodules-returns-0-with-error-299", "title": "EnumProcessModules returns 0 with error 299", "body": "<p>I'm currently trying to enumerate all the modules of a supsended 32-bits process I've previously created from my 32-bits program, my Windows is 64-bits.\n(I've already read all the other topics on that problem).</p>\n\n<p>Here is the code:</p>\n\n<pre><code>let a = CreateProcessA(\n    \"C:\\\\Program Files (x86)\\\\GlassWire\\\\GlassWire.exe\\0\".as_ptr(),\n    null_mut(), null_mut(), null_mut(),\n    false,\n    0x00000004,\n    null_mut(), null_mut(), SI, PI);\nprintln!(\"{}\", GetLastError());\n\nlet mut buffer: [*mut c_void;10] = [0 as *mut c_void;10];\nWaitForInputIdle((*PI).hProcess as *mut c_void, -1);\nlet result = EnumProcessModules(\n    (*PI).hProcess as *mut c_void,\n    buffer.as_ptr() as *mut c_void,\n    10, null_mut());\n\nprintln!(\"EnumProcessModules([...]) = {} - {}\", result, GetLastError());\n\nlet mut index: usize = 0x0; \nlet mut modname: [u8;1024] = [0;1024];\nwhile(transmute::&lt;*mut c_void, u32&gt;(buffer[index]) != 0x0){\n    GetModuleFileNameExA((*PI).hProcess as *mut c_void, buffer[index], modname.as_ptr() as *mut c_void, 1024);\n    println!(\"module: {}\", std::str::from_utf8_unchecked(&amp;modname));\n    modname = [0;1024];\n    index += 1;\n}\nprintln!(\"Dump: {:?}\", buffer.to_vec());\n</code></pre>\n\n<p>I saw that I had to use <code>WaitForInputIdle()</code> after using CreateProcessA before enumerating modules because the process doesn't have the time to \"initialize\", well when I do that, whatever the process I create (it successfully creates it) the program wait forever.</p>\n\n<p>And when I try to do the same on the main process by replacing all the (*PI).hProcess by <code>GetCurrentProcess()</code> (I removed the <code>WintForInputIdle()</code> line), <code>EnumProcessModules()</code> still returns 0 but now <code>GetLastError()</code> returns 998 (ERROR_NOACCESS), <strong>but</strong> the modules handles are successfully written in <code>buffer</code>.</p>\n\n<p>So the program output:</p>\n\n<pre><code>A:\\Encrypted\\Temp\\injector\\target\\i686-pc-windows-msvc\\debug\\main.exe // (the program)\nC:\\WINDOWS\\SYSTEM32\\ntdll.dll\n\nDump: [0x920000, 0x77180000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]\n</code></pre>\n\n<p>And if I specify the path of the running program in <code>CreateProcessA()</code>, it will also return 0 with 299 as the windows error code.</p>\n\n<p>I'm really confused...Thanks for reading, I hope I've been clear enough.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1577196774, "post_id": 59469761, "comment_id": 105118824, "body": "Creating recursive structures in Rust is very difficult, is this what you really want?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1577196844, "post_id": 59469761, "comment_id": 105118854, "body": "&quot;In other languages it is normal to create one file for each struct.&quot; but not in Rust, where each file creates a module, and modules are usually made to contain things that relate to each other."}], "answers": [{"comments": [{"owner": {"reputation": 549, "user_id": 6911200, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/05be3c3f1ae8e8eaab9648064182b932?s=128&d=identicon&r=PG&f=1", "display_name": "NelDav", "link": "https://stackoverflow.com/users/6911200/neldav"}, "edited": false, "score": 0, "creation_date": 1577198128, "post_id": 59470101, "comment_id": 105119250, "body": "Thank you. I already expected that one single file is the way to go. But I didn&#39;t know, if that is convention. Also thank you for the CamelCase hint. File names are snake_case in rust isn&#39;t it? Is there any list of conventions in rust?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 549, "user_id": 6911200, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/05be3c3f1ae8e8eaab9648064182b932?s=128&d=identicon&r=PG&f=1", "display_name": "NelDav", "link": "https://stackoverflow.com/users/6911200/neldav"}, "edited": false, "score": 1, "creation_date": 1577198345, "post_id": 59470101, "comment_id": 105119309, "body": "@NelDav <a href=\"https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\" rel=\"nofollow noreferrer\">There is!</a> And the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1e16864772ccf1064cda9887c6f948cb\" rel=\"nofollow noreferrer\">compiler gives warnings</a> if you don&#39;t follow the conventions. As a beginner you should not ignore them as they can be quite useful. Clippy also has some good ones to learn how to write idiomatic Rust."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1577197115, "creation_date": 1577197115, "answer_id": 59470101, "question_id": 59469761, "link": "https://stackoverflow.com/questions/59469761/create-data-model-with-multiple-files-in-rust/59470101#59470101", "title": "Create data model with multiple files in rust", "body": "<p><code>mod house;</code> in <code>garage.rs</code> does not work because <code>house</code> in not a submodule of garage.</p>\n\n<p>What you really want is to <code>user super::house;</code> in <code>garage.rs</code>.</p>\n\n<p>Note however that creating one file per type is <em>not</em> idiomatic in Rust, and you shouldn't try to blindly follow other language's idioms when learning a new language. Having one file per type is possible, but not worth the effort. It is more common to group types in a module and to split files in a logical way, with things that work together in the same file. You are also not following Rust's naming conventions (eg. types should be CamelCase).</p>\n"}], "owner": {"reputation": 549, "user_id": 6911200, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/05be3c3f1ae8e8eaab9648064182b932?s=128&d=identicon&r=PG&f=1", "display_name": "NelDav", "link": "https://stackoverflow.com/users/6911200/neldav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 59470101, "answer_count": 1, "score": 1, "last_activity_date": 1577197115, "creation_date": 1577195238, "last_edit_date": 1577196199, "question_id": 59469761, "link": "https://stackoverflow.com/questions/59469761/create-data-model-with-multiple-files-in-rust", "title": "Create data model with multiple files in rust", "body": "<p>I want to create the following datamodell in rust.</p>\n\n<p><a href=\"https://i.stack.imgur.com/IXMqC.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/IXMqC.png\" alt=\"Uml diagramm of the datamodell\"></a></p>\n\n<p>In other languages it is normal to create one file for each struct. I created the following file structure:</p>\n\n<pre><code>.\n\u2502\n\u251d data_model\n\u2502   \u2502\n\u2502   \u251d mod.rs\n\u2502   \u251d house.rs\n\u2502   \u2514 garage.rs\n\u2502\n\u2514 main.rs\n</code></pre>\n\n<p>I need a list of houses in my <code>garage</code> struct and a list of garages in my <code>house</code> struct. But I can't include this files. I tried it like that:</p>\n\n<p>main.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod data_model;\n...\n</code></pre>\n\n<p>mod.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod house;\nmod garage;\n</code></pre>\n\n<p>That works fine. I am able to use the structs inside the main file.</p>\n\n<p>But if I do this one (mod.rs and main.rs didn't changed):</p>\n\n<p>garage.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod house;\n\nstruct garage{\n    houses: Vec&lt;house&gt;\n}\n</code></pre>\n\n<p>it wouldn't work, because rust searches for the file <code>data_model/garage/house.rs</code> instead of only searching for <code>data_model/house.rs</code>.</p>\n\n<p>But I don't want to move <code>house.rs</code> to <code>garage/house.rs</code> because this would look like, the house is a component of the grage. Also it wouldn't work, because I also have to include the grage into the house and that won't work, if the house is component of the grage.</p>\n\n<p>Whats the right way to create a datamodel like this?</p>\n\n<p>PS: I know, that there are some problems because I don't use pointers to refer from house to garage and from garage to house. But that is not the problem so far.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 0, "creation_date": 1577192004, "post_id": 59469057, "comment_id": 105117309, "body": "Thank you, It worked. Why do I get the warning in the line <code>index = index + 1</code> with the text <code>warning: value assigned to &#39;index&#39; is never read</code>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "edited": false, "score": 0, "creation_date": 1577194119, "post_id": 59469057, "comment_id": 105117996, "body": "@Fomalhaut This will expand to <code>let mut index = 0; data[index] = \u2026; index = index + 1; data[index] = \u2026; index = index + 1; data[index] = \u2026; index = index + 1;</code>, the last <code>index = index + 1</code> being the one that creates a warning. I&#39;ve edited the answer to ignore the warning."}], "tags": [], "owner": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1577194101, "last_edit_date": 1577194101, "creation_date": 1577191603, "answer_id": 59469057, "question_id": 59468633, "link": "https://stackoverflow.com/questions/59468633/how-do-i-iterate-arguments-of-a-macros-in-rust/59469057#59469057", "title": "How do I iterate arguments of a macros in Rust?", "body": "<p>You could do this,</p>\n\n<pre><code>const SIZE: usize = 3;\n\n#[derive(Debug)]\nstruct MyVec {\n    data: [f32; SIZE],\n}\n\nmacro_rules! my_vec {\n    ( $( $x:expr ),* ) =&gt; {\n        {\n            let mut data: [f32; SIZE] = [0.0; SIZE];\n            let mut index = 0;\n            $(\n                #[allow(unused_assignments)]\n                {\n                    data[index] = $x;\n                    index = index + 1;\n                }\n            )*\n            MyVec { data }\n        }\n    };\n}\n\nfn main() {\n    let v = my_vec![1.0, 2.0];\n    println!(\"{:?}\", v); // print MyVec { data: [1.0, 2.0, 0.0] }\n}\n</code></pre>\n\n<p>The code inside the <code>$(...)*</code> will be expanded for each matches.</p>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 512, "favorite_count": 0, "accepted_answer_id": 59469057, "answer_count": 1, "score": 4, "last_activity_date": 1577194184, "creation_date": 1577189369, "last_edit_date": 1577194184, "question_id": 59468633, "link": "https://stackoverflow.com/questions/59468633/how-do-i-iterate-arguments-of-a-macros-in-rust", "title": "How do I iterate arguments of a macros in Rust?", "body": "<p>I am trying to create a macro that fills first elements of a vector with a fixed size. The rest of elements should be zero. I wrote:</p>\n\n<pre><code>const SIZE: usize = 3;\n\n#[derive(Debug)]\nstruct MyVec {\n    data: [f32; SIZE]\n}\n\nmacro_rules! my_vec {\n    ($($x:expr),*) =&gt; [{\n        let mut data: [f32; SIZE] = [0.0; SIZE];\n        for (i, e) in x.enumerate() {\n            data[i] = e;\n        }\n        MyVec { data }\n    }]\n}\n\nfn main() {\n    let v = my_vec![1.0, 2.0];\n    println!(\"{:?}\", v);  // must be MyVec { data: [1.0, 2.0, 0.0] }\n}\n</code></pre>\n\n<p>It looks like I try to iterate the arguments in a wrong way. How can I fix it?</p>\n"}, {"tags": ["rust", "range", "conditional-statements"], "answers": [{"comments": [{"owner": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "edited": false, "score": 1, "creation_date": 1577188679, "post_id": 59468332, "comment_id": 105116157, "body": "I don&#39;t know who down voted this answer. For me this answer the question."}, {"owner": {"reputation": 350, "user_id": 2171567, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d4587ea8aa5c3e77e66c4f85b71f4dcc?s=128&d=identicon&r=PG", "display_name": "sbstnzmr", "link": "https://stackoverflow.com/users/2171567/sbstnzmr"}, "edited": false, "score": 0, "creation_date": 1577279754, "post_id": 59468332, "comment_id": 105134443, "body": "This is a good answer to the question. Unfortunately when simplifying it I left out, that I return a tuple of ranges which I can&#39;t get to work with generics. See the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e32267fa7f76c7af4ee5b5501c9c09a0\" rel=\"nofollow noreferrer\">Playgroud</a>. Is there an error or is a tuple not working with generics?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 350, "user_id": 2171567, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d4587ea8aa5c3e77e66c4f85b71f4dcc?s=128&d=identicon&r=PG", "display_name": "sbstnzmr", "link": "https://stackoverflow.com/users/2171567/sbstnzmr"}, "edited": false, "score": 1, "creation_date": 1577280511, "post_id": 59468332, "comment_id": 105134644, "body": "@sezi80 from the usage, it looks like you want to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=473c56376e353279f720f359fef5e7a5\" rel=\"nofollow noreferrer\">return a tuple of <code>Either</code>s, rather than an <code>Either</code> of tuples</a>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1577187932, "creation_date": 1577187932, "answer_id": 59468332, "question_id": 59467882, "link": "https://stackoverflow.com/questions/59467882/how-do-i-make-a-range-reverse-on-condition/59468332#59468332", "title": "How do I make a Range reverse on condition?", "body": "<p><code>itertools</code> has the type <code>Either</code> that can be used to return either of two compatible iterators:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools; // 0.8.2\n\nfn create_range(\n    rev: bool,\n) -&gt; itertools::Either&lt;impl Iterator&lt;Item = usize&gt;, impl Iterator&lt;Item = usize&gt;&gt; {\n    if !rev {\n        itertools::Either::Left(0..9)\n    } else {\n        itertools::Either::Right((0..9).rev())\n    }\n}\n\nfn main() {\n    println!(\"Not reversed:\");\n    for a in create_range(false) {\n        println!(\"{}\", a);\n    }\n\n    println!(\"Reversed:\");\n    for a in create_range(true) {\n        println!(\"{}\", a);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b79dddc0db1fc5788d0780875a2f53f8\" rel=\"nofollow noreferrer\">(Permalink to the playground)</a></p>\n"}, {"comments": [{"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1577196590, "post_id": 59468528, "comment_id": 105118777, "body": "You can probably edit your above answer, no need for double posting."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1577196734, "post_id": 59468528, "comment_id": 105118808, "body": "@DanielFath Those are two different solutions. Posting two different answers to the same question is fine on SO."}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 1, "creation_date": 1577197081, "post_id": 59468528, "comment_id": 105118934, "body": "I don&#39;t think these are really multiple independent answers <a href=\"https://meta.stackoverflow.com/questions/384665/how-to-handle-a-user-that-leaves-multiple-answers-per-question\" title=\"how to handle a user that leaves multiple answers per question\">meta.stackoverflow.com/questions/384665/&hellip;</a>"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 1, "last_activity_date": 1577188827, "creation_date": 1577188827, "answer_id": 59468528, "question_id": 59467882, "link": "https://stackoverflow.com/questions/59467882/how-do-i-make-a-range-reverse-on-condition/59468528#59468528", "title": "How do I make a Range reverse on condition?", "body": "<p>Another solution without <code>itertools</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_range(rev: bool) -&gt; impl Iterator&lt;Item = usize&gt; {\n    let (mut start, step) = if rev {\n        (9usize, usize::max_value())\n    } else {\n        (usize::max_value(), 1)\n    };\n\n    std::iter::repeat_with(move || {\n        start = start.wrapping_add(step);\n        start\n    })\n    .take(9)\n}\n\nfn main() {\n    println!(\"Not reversed:\");\n    for a in create_range(false) {\n        println!(\"{}\", a);\n    }\n\n    println!(\"Reversed:\");\n    for a in create_range(true) {\n        println!(\"{}\", a);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a0e662451dbf2f960c3f166517d2ca48\" rel=\"nofollow noreferrer\">(Permalink to the playground)</a></p>\n\n<p>This is a bit more complicated and won't generalize as easily to things that are not ranges. It might be a tiny bit faster as well. The dance with <code>usize::max_value()</code> and <code>wrapping_add</code> is necessary to avoid overflow checks, but is perfectly defined.</p>\n"}], "owner": {"reputation": 350, "user_id": 2171567, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d4587ea8aa5c3e77e66c4f85b71f4dcc?s=128&d=identicon&r=PG", "display_name": "sbstnzmr", "link": "https://stackoverflow.com/users/2171567/sbstnzmr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "accepted_answer_id": 59468332, "answer_count": 2, "score": 4, "last_activity_date": 1577188827, "creation_date": 1577185675, "question_id": 59467882, "link": "https://stackoverflow.com/questions/59467882/how-do-i-make-a-range-reverse-on-condition", "title": "How do I make a Range reverse on condition?", "body": "<p>I have a range, that I want to reverse if a condition is satisfied. Since <code>for i in 0..9</code> will iterate the same way as <code>for i in 9..0</code> simply swapping out the numbers will not work. Also <code>(0..9).stepy_by(-1)</code> is not an option as <code>.step_by()</code> only accepts a <code>usize</code>. Therefore I tried so implement something like the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_range(rev: bool) -&gt; Range&lt;usize&gt; {\n    if rev {\n        0..9\n    } else {\n        (0..9).rev()\n    }\n}\n</code></pre>\n\n<p>Which unfortunately also des not work since <code>0..9</code> returns a <code>Range&lt;usize&gt;</code> but <code>(0..9).rev()</code> returns a <code>Rev&lt;Range&lt;usize&gt;&gt;</code> so the types do not match.</p>\n\n<p>I ended up putting everything that I call within the loop in a function but I am not really satisfied with that.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if rev {\n    for i in (0..9).rev() {\n        do_stuff(i);\n    }\n} else {\n    for i in 0..9 {\n        do_stuff(i);\n    }\n}\n</code></pre>\n\n<p>The question is: Would it be simply possible to reverse a range if a condition is satisfied?</p>\n"}, {"tags": ["android", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577147917, "post_id": 59462444, "comment_id": 105106117, "body": "From what I can see you should be able to write <code>CString::from(*env.get_string(j_recipient).unwrap()))</code> because of the <code>Deref</code> implementations, and avoid using <code>CStr::from_ptr</code>. I think the pointer you are passing it might not live long enough. (It&#39;s the only actually unsafe function AFAICT)"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577147935, "post_id": 59462444, "comment_id": 105106120, "body": "But this begs the question: why did you make your function <code>unsafe</code>?"}, {"owner": {"reputation": 47, "user_id": 5424687, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43f5d448a52114f9ff525da03f070020?s=128&d=identicon&r=PG&f=1", "display_name": "madde", "link": "https://stackoverflow.com/users/5424687/madde"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577177763, "post_id": 59462444, "comment_id": 105112148, "body": "Thanks for your comment! Yes, that seems to be the only unsafe function. But replacing it the way you recommended results in: ^^^^^^^^^^^^^ the trait <code>std::convert::From&lt;jni::wrapper::strings::ffi_str::JNIStr&gt;</code> is not implemented for <code>std::ffi::CString</code>"}], "answers": [{"tags": [], "owner": {"reputation": 47, "user_id": 5424687, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43f5d448a52114f9ff525da03f070020?s=128&d=identicon&r=PG&f=1", "display_name": "madde", "link": "https://stackoverflow.com/users/5424687/madde"}, "is_accepted": true, "score": 0, "last_activity_date": 1577179281, "creation_date": 1577179281, "answer_id": 59466513, "question_id": 59462444, "link": "https://stackoverflow.com/questions/59462444/unwrap-on-a-fsread-to-string-leads-to-fatal-signal-6-sigabrt-code-1-si/59466513#59466513", "title": "unwrap() on a fs::read_to_string leads to Fatal signal 6 (SIGABRT), code -1 (SI_QUEUE) in Android", "body": "<p>Ok, I solved it myself. Turns out that the path that I used was incorrect. I used getFilesDir() in Java to send me the files directory and in this path i was succesful at writing and reading.</p>\n"}], "owner": {"reputation": 47, "user_id": 5424687, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43f5d448a52114f9ff525da03f070020?s=128&d=identicon&r=PG&f=1", "display_name": "madde", "link": "https://stackoverflow.com/users/5424687/madde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 243, "favorite_count": 0, "accepted_answer_id": 59466513, "answer_count": 1, "score": 0, "last_activity_date": 1577179281, "creation_date": 1577145423, "question_id": 59462444, "link": "https://stackoverflow.com/questions/59462444/unwrap-on-a-fsread-to-string-leads-to-fatal-signal-6-sigabrt-code-1-si", "title": "unwrap() on a fs::read_to_string leads to Fatal signal 6 (SIGABRT), code -1 (SI_QUEUE) in Android", "body": "<p>Thanks for your kind help in advance!</p>\n\n<p>I'm trying to use a rust library to work on database file in an Android app. I'm not quite sure yet which method might be the best here. My best try so far was with fs:write &amp; fs:read_to_string. I tried several paths including the context.getFilesDir()\n from Java with no succcess. When I try checking on the results of them I discovered that unwrap() and expect() will lead to such an error:</p>\n\n<pre><code>2019-12-24 00:38:54.652 10459-10459/com.example.android A/libc: Fatal signal 6 (SIGABRT), code -1 (SI_QUEUE) in tid 10459 (example.android), pid 10459 (example.android)\n</code></pre>\n\n<p>AndroidManifest.xml</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.android\"&gt;\n\n    &lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n    &lt;uses-permission android:name = \"android.permission.WRITE_EXTERNAL_STORAGE\"/&gt;\n    &lt;application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\"\n        android:usesCleartextTraffic=\"true\"&gt;\n        &lt;activity android:name=\".MainActivity\"&gt;\n            &lt;intent-filter&gt;\n                &lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/activity&gt;\n    &lt;/application&gt;\n\n&lt;/manifest&gt;\n</code></pre>\n\n<p>MainActivity.java</p>\n\n<pre><code>package com.example.android;\n\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport java.util.concurrent.ExecutionException;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private static native String hello(final String to);\n    private static native String getTitle(final String webcontent);\n    private static native boolean buildDatabase(final String webcontent);\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        //Load rust library\n        System.loadLibrary(\"rust\");\n        Log.d(\"Rust\", this.hello(\"IMPP\"));\n\n        String r = this.hello(\"Android_11\");\n\n        // Download google sheet\n        Downloader task = new Downloader();\n        String result = null;\n\n        try {\n            result = task.execute(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vTZMOCrZdhsWPB4O-YiLrfE_sR2DcU3hgHQyg1y-_R648YOP3uX9eb0-gAqJN4Re70swEOONzS5t-Yc/pubhtml\").get();\n\n            //Log.i(\"Content\", result);\n\n            largeLog(\"Content\", result);\n\n\n            r = this.getTitle(result);\n\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n\n\n        ((TextView)findViewById(R.id.hello)).setText(r);\n\n\n    }\n\n    public static void largeLog(String tag, String content) {\n        if (content.length() &gt; 1000) {\n            Log.d(tag, content.substring(0, 1000));\n            largeLog(tag, content.substring(1000));\n        } else {\n            Log.d(tag, content);\n        }\n    }\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"rust\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies] \njni = { version = \"0.10.2\", default-features = false }\n}\n\n[profile.release]\nlto = true\n\n[lib]\nname = \"rust\"\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>lib.rs</p>\n\n<pre><code>#[allow(dead_code)]\nmod lib_impp;\n\nuse jni::objects::{JObject, JString};\nuse jni::sys::jstring;\nuse jni::JNIEnv;\nuse std::ffi::{CStr, CString};\n\n// Return Part of Java String\n#[no_mangle]\npub unsafe extern \"C\" fn Java_com_example_android_MainActivity_getTitle(\n    env: JNIEnv,\n    _: JObject,\n    j_recipient: JString,\n) -&gt; jstring {\n    // convert JString to CString and append it to our JNIEnv\n    env.new_string(lib_impp::create_db(\n        CString::from(CStr::from_ptr(\n            env.get_string(j_recipient).unwrap().as_ptr(),\n        ))\n        .to_str()\n        .unwrap()\n        .to_string(),\n    ))\n    .unwrap()\n    .into_inner()\n}\n</code></pre>\n\n<p>lib_impp.rs\n    use std::fs;</p>\n\n<pre><code>pub fn create_db(input: String) -&gt; String {\n    let data = input + \"Extra String\";\n    let result = fs::write(\"test.json\", data);\n    let file = fs::read_to_string(\"test.json\");\n    return file.unwrap(); // This will result in a Fatal signal 6 (SIGABRT)\n    // return String::from(\"test\"); // This will return \"test\"\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 894, "user_id": 3994693, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9HjbX.jpg?s=128&g=1", "display_name": "Tomas Farias", "link": "https://stackoverflow.com/users/3994693/tomas-farias"}, "edited": false, "score": 1, "creation_date": 1577465797, "post_id": 59462404, "comment_id": 105179962, "body": "Would <a href=\"https://stackoverflow.com/questions/33025887/how-to-use-a-local-unpublished-crate\">this question</a> be what you&#39;re looking for? It&#39;s based on <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-path-dependencies\" rel=\"nofollow noreferrer\">this part</a> of the cargo docs. Should handle building <code>tool</code> and all of it&#39;s dependencies when you run <code>app</code>."}], "owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1577144983, "creation_date": 1577144983, "question_id": 59462404, "link": "https://stackoverflow.com/questions/59462404/is-there-a-way-to-specify-that-one-executable-depends-on-another-in-cargo-toml", "title": "Is there a way to specify that one executable depends on another in Cargo.toml?", "body": "<p>I have a Rust project with two executables:</p>\n\n<pre><code>src\n\u2514\u2500\u2500 bin\n    \u251c\u2500\u2500 app.rs\n    \u2514\u2500\u2500 tool.rs\n</code></pre>\n\n<p>The <code>tool</code> program is run as a subprocess of <code>app</code>. (The separation is needed because <code>tool</code> is run with different permissions than <code>app</code>.)</p>\n\n<p>To run <code>app</code> I need to first ensure that <code>tool</code> has been built, so I currently do something like this:</p>\n\n<pre><code>cargo build &amp;&amp; cargo run --bin app\n</code></pre>\n\n<p>Ideally I would be able to add something to my <code>Cargo.toml</code> so that it knows that <code>app</code> depends on <code>tool</code> being built so that I could just run this:</p>\n\n<pre><code>cargo run --bin app\n</code></pre>\n\n<p>Is there a way to do this?</p>\n"}, {"tags": ["web-scraping", "rust", "html5ever"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1577144663, "post_id": 59461279, "comment_id": 105105644, "body": "It&#39;s very likely that this question will be closed because you haven&#39;t shown any effort at attempting to solve it. Essentially, answer this question: <i>What have you tried?</i>"}], "answers": [{"tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 1, "last_activity_date": 1577148221, "creation_date": 1577148221, "answer_id": 59462678, "question_id": 59461279, "link": "https://stackoverflow.com/questions/59461279/how-do-i-parse-a-page-with-html5ever-and-find-all-the-links/59462678#59462678", "title": "How do I parse a page with html5ever and find all the links?", "body": "<p>You have to create a struct which implements <code>TokenSink</code>, then create a new <code>Tokenizer</code> where your struct is the <code>sink</code>. When parsing with <code>Tokenizer::feed()</code>, it will pass all tokens through your <code>TokenSink</code>.</p>\n\n<p>This code was adapted from the <a href=\"https://github.com/servo/html5ever/blob/master/html5ever/examples/tokenize.rs\" rel=\"nofollow noreferrer\">html5ever examples</a>, so it is Apache/MIT licensed. html5ever is a complicated library built for browsers, and it shows - the API appears to be designed to accommodate encodings other than UTF-8.</p>\n\n<p>This code only parses from stdin. If you want to use it as is, pipe <code>curl</code> like so <code>curl https://stackoverflow.com/questions/59461279/how-do-i-parse-a-page-with-html5ever-and-find-all-the-links | cargo run</code>.\nWhen I do this, I get output like</p>\n\n<pre><code>link to: #\nlink to: https://stackoverflow.com\nlink to: #\nlink to: /teams/customers\n...\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate html5ever;\n\nuse std::default::Default;\nuse std::io;\n\nuse html5ever::tendril::*;\nuse html5ever::tokenizer::BufferQueue;\nuse html5ever::tokenizer::{StartTag, TagToken};\nuse html5ever::tokenizer::{Token, TokenSink, TokenSinkResult, Tokenizer, TokenizerOpts,};\nuse html5ever::interface::QualName;\nuse html5ever::{ns, namespace_url, LocalName};\n\n#[derive(Copy, Clone)]\nstruct TokenPrinter {}\n\nimpl TokenSink for TokenPrinter {\n    type Handle = ();\n\n    fn process_token(&amp;mut self, token: Token, _line_number: u64) -&gt; TokenSinkResult&lt;()&gt; {\n        let link_name = QualName::new(\n            None,\n            ns!(),\n            LocalName::from(\"href\"),\n        );\n        match token {\n            TagToken(tag) =&gt; {\n                if tag.kind == StartTag &amp;&amp; tag.name.to_string()==\"a\" {\n                    let attrs = tag.attrs;\n                    for attr in attrs {\n                        if attr.name == link_name {\n                            println!(\"link to: {}\", attr.value);\n                        }\n                    }\n                }\n            },\n            _ =&gt; {\n            },\n        }\n        TokenSinkResult::Continue\n    }\n}\n\nfn main() {\n    let sink = TokenPrinter {};\n    let mut chunk = ByteTendril::new();\n    io::stdin().read_to_tendril(&amp;mut chunk).unwrap();\n    let mut input = BufferQueue::new();\n    input.push_back(chunk.try_reinterpret::&lt;fmt::UTF8&gt;().unwrap());\n\n    let mut tok = Tokenizer::new(\n        sink,\n        TokenizerOpts::default(),\n    );\n    let _ = tok.feed(&amp;mut input);\n    assert!(input.is_empty());\n    tok.end();\n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 6402137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aedad9130f606eee5c9ecb5d7e5454c8?s=128&d=identicon&r=PG&f=1", "display_name": "S&#248;ren Gade", "link": "https://stackoverflow.com/users/6402137/s%c3%b8ren-gade"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "accepted_answer_id": 59462678, "answer_count": 1, "score": 0, "last_activity_date": 1577148221, "creation_date": 1577135079, "last_edit_date": 1577135515, "question_id": 59461279, "link": "https://stackoverflow.com/questions/59461279/how-do-i-parse-a-page-with-html5ever-and-find-all-the-links", "title": "How do I parse a page with html5ever and find all the links?", "body": "<p>I would like to parse HTML in the string format with html5ever and find all the links in this HTML. I'm aware of <a href=\"https://stackoverflow.com/questions/38859811/how-do-i-parse-a-page-with-html5ever-modify-the-dom-and-serialize-it\">How do I parse a page with html5ever, modify the DOM, and serialize it?</a>, however <code>RcDom</code> does not exist anymore.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1577133299, "post_id": 59460707, "comment_id": 105103133, "body": "<i>Why</i> are you doing all that convoluted lifetime fuss? It certainly seems like you&#39;ve dug a hole and just kept going. From the code provided, there&#39;s no reason to have any of the lifetimes; remember that a generic type <code>X</code> can hold <b>within it</b> a reference. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6f80f8e83ffcccd5f2339c1730a7af8\" rel=\"nofollow noreferrer\">example</a>. You may also be interested in <a href=\"https://stackoverflow.com/q/44343166/155423\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1577134103, "post_id": 59460707, "comment_id": 105103322, "body": "A <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e176c4e00582b0b2fddb653d2b0ffece\" rel=\"nofollow noreferrer\">more direct example that works with your provided <code>main</code></a>."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577135645, "post_id": 59460707, "comment_id": 105103686, "body": "I started adding lifetimes because the compiler told me to add lifetimes if I didn&#39;t have them: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0bf13ef0bfee15715d7a75a811a32e8d\" rel=\"nofollow noreferrer\">playground</a>.  If I try to use the fact that a generic type can be a reference, then it wants to perform a move rather than a borrow: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=898983e831d7da218958464d9c39b176\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1577135808, "post_id": 59460707, "comment_id": 105103722, "body": "In both of those examples, you have <code>&amp;</code> still in the function signature / bounds. The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e176c4e00582b0b2fddb653d2b0ffece\" rel=\"nofollow noreferrer\">example I provided</a> does not use them at all; why is it not sufficient?"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577136223, "post_id": 59460707, "comment_id": 105103821, "body": "Good to know about rustfmt in the playground, I rely on it heavily normally.  I think I realize what my confusion was. I thought the compiler was complaining that I needed to have <code>I::Item : Copy</code> (which I really don&#39;t want), but actually it was just complaining I needed <code>I: Copy</code>.  Your original example doesn&#39;t have the <code>Copy</code> bound and thus would hit that same error if you try to iterate twice.  Your updated example does include the <code>Copy</code> bound and thus solves the problem."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577140842, "post_id": 59460707, "comment_id": 105104940, "body": "Also, my original case (before I reduced it to this example) these functions were inside a trait implementation.  I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6e0b8bbe531a742039365daecd706fc\" rel=\"nofollow noreferrer\">can&#39;t do it exactly the same way</a> because T is now a type parameter instead of a trait. I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2283963e6ccd23cbfb4f3cb07c66bfab\" rel=\"nofollow noreferrer\">tried using Deref</a> to work around this, but the compiler still seems unhappy because <code>&amp;Deref&lt;Item=T&gt;</code> doesn&#39;t implement <code>Deref&lt;Item=T&gt;</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1577144824, "post_id": 59460707, "comment_id": 105105669, "body": "this code doesn\u2019t make sense. You provide a reference to the vector, which yields references to the items, but expect to get owned values back, without ever copying or cloning the values. You also cannot use <code>PhantomData</code> like that"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577167933, "post_id": 59460707, "comment_id": 105109342, "body": "Sure, you can understand the code from the perspective of the compiler, and that&#39;s why it doesn&#39;t make sense to you.  But I don&#39;t know how the compiler will parse it, and that&#39;s why I&#39;m asking for help.  In this case, what do you mean &quot;expect to get owned values back&quot;.  The only thing the functions return is Collection&lt;T&gt;, which only contains data derived from T, not an actual owned T value.  Why can&#39;t I use <code>PhantomData</code> &quot;like that&quot;? What is &quot;like that&quot;?"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577179246, "post_id": 59460707, "comment_id": 105112680, "body": "Playing around in the sandbox, I came to the conclusion that the root of my problem is still basically the same as the title of this question:  How do I use a <code>&amp;HashSet&lt;&amp;T&gt;</code> as a <code>IntoIterator&lt;Item=&amp;T&gt;</code>? Regardless of how much I clean up other issues with my code, that is the issue which remains.  I was able to solve this problem by creating a helper class: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=861a6bfa3dbd998bf3fd0164ef3187f7\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577195871, "post_id": 59460707, "comment_id": 105118558, "body": "<i>The only thing the functions return is <code>Collection&lt;T&gt;</code>, which only contains data derived from <code>T</code>, not an actual owned <code>T</code> value</i>. \u2014 That&#39;s not correct. The first sentence of the <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData</code></a> documentation addresses that (emphasis mine): <i>Zero-sized type used to mark things that <b>&quot;act like&quot; they own a <code>T</code></b>.</i>"}], "answers": [{"tags": [], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "is_accepted": false, "score": 0, "last_activity_date": 1577179653, "creation_date": 1577179653, "answer_id": 59466595, "question_id": 59460707, "link": "https://stackoverflow.com/questions/59460707/how-do-i-use-a-hashsett-as-an-intoiteratoritem-t/59466595#59466595", "title": "How do I use a &amp;HashSet&lt;&amp;T&gt; as an IntoIterator&lt;Item = &amp;T&gt;?", "body": "<p>There were a number of orthogonal issues with my code that Shepmaster pointed out, but to solve the issue of using a <code>HashSet&lt;&amp;T&gt;</code> as an <code>IntoIterator&lt;Item=&amp;T&gt;</code>, I found that one way to solve it is with a wrapper struct:</p>\n\n<pre><code>struct Helper&lt;T, D: Deref&lt;Target = T&gt;&gt;(HashSet&lt;D&gt;);\n\nstruct HelperIter&lt;'a, T, D: Deref&lt;Target = T&gt;&gt;(std::collections::hash_set::Iter&lt;'a, D&gt;);\n\nimpl&lt;'a, T, D: Deref&lt;Target = T&gt;&gt; Iterator for HelperIter&lt;'a, T, D&gt;\nwhere\n    T: 'a,\n{\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.0.next().map(|x| x.deref())\n    }\n}\n\nimpl&lt;'a, T, D: Deref&lt;Target = T&gt;&gt; IntoIterator for &amp;'a Helper&lt;T, D&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = HelperIter&lt;'a, T, D&gt;;\n    fn into_iter(self) -&gt; Self::IntoIter {\n        HelperIter((&amp;self.0).into_iter())\n    }\n}\n</code></pre>\n\n<p>Which is used as follows: </p>\n\n<pre><code>struct Collection&lt;T&gt; {\n    item: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T: Debug&gt; Collection&lt;T&gt; {\n    fn foo&lt;I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator + Copy,\n        I::Item: Deref&lt;Target = T&gt;,\n    {\n        for element in elements {\n            println!(\"{:?}\", *element);\n        }\n        for element in elements {\n            println!(\"{:?}\", *element);\n        }\n        return Self { item: PhantomData };\n    }\n}\n\nimpl&lt;T: Debug + Eq + Hash&gt; Collection&lt;T&gt; {\n    fn wrap&lt;I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator + Copy,\n        I::Item: Deref&lt;Target = T&gt; + Eq + Hash,\n    {\n        let helper = Helper(elements.into_iter().collect());\n        Self::foo(&amp;helper);\n        return Self { item: PhantomData };\n    }\n}\n\nfn main() {\n    let v = vec![Foo(1), Foo(2), Foo(4)];\n    Collection::&lt;Foo&gt;::wrap(&amp;v);\n}\n</code></pre>\n\n<p>I'm guessing that some of this may be more complicated than it needs to be, but I'm not sure how.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=861a6bfa3dbd998bf3fd0164ef3187f7\" rel=\"nofollow noreferrer\">full playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1577212408, "post_id": 59470210, "comment_id": 105123178, "body": "Your assumption that my collection of T must actually hold an owned value of type T is wrong.  The data structure is a hash bashed probabilistic data structure, so it does not actually store an owned value of type T, but yet it is important for type safety for it to keep track of the type T.  I just checked how the bloomfilter library implements it, and <a href=\"https://docs.rs/bloomfilter/1.0.1/src/bloomfilter/lib.rs.html#29-36\" rel=\"nofollow noreferrer\">they use exactly the same pattern</a>.  How else are you supposed to have type safety for this type of data structure?"}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1577213328, "post_id": 59470210, "comment_id": 105123419, "body": "Your example also subtly changes the question from using a <code>&amp;HashSet&lt;&amp;T&gt;</code> as an <code>IntoIterator&lt;Item=&amp;T&gt;</code> into the other, much easier problems of using a <code>&amp;HashSet&lt;&amp;T&gt;</code> as <code>IntoIterator&lt;Item=&amp;&amp;T&gt;</code>  or using a <code>&amp;HashSet&lt;T&gt;</code> as <code>IntoIterator&lt;Item=&amp;T&gt;</code>.  Because the functions are independently generic over T, the fact that the <code>T</code> in <code>foo</code> is different from the <code>T</code> In <code>wrap</code> in your code is hidden.  In reality, your example uses a <code>&amp;HashSet&lt;&amp;T&gt;</code> as <code>IntoIterator&lt;Item=&amp;&amp;T&gt;</code>, which as you pointed out, is already implemented by the standard library."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1577213904, "post_id": 59470210, "comment_id": 105123565, "body": "I really do appreciate your feedback, and it would have been <b>completely impossible</b> for me to solve this problem without your assistance, but as I have learned more, I still think that the wrapper class is necessary in my use case (I would be happy to be proven wrong).  Rather than dumping my whole codebase here, I tried to post a small self contained reproduction, but I didn&#39;t know exactly what was relevant and what was superfluous.  That is why my original question didn&#39;t make all the requirements clear (I don&#39;t know they were relevant!).  I appreciate your patience  and help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 1, "creation_date": 1577217137, "post_id": 59470210, "comment_id": 105124305, "body": "@JeremySalwen updated. You are correct that I mismatched the <code>&amp;T</code> and <code>&amp;&amp;T</code>, but luckily that&#39;s easily fixable. You are also correct that I made assumptions about your original code based on the names provided (I would argue that a bloomfilter, etc. are <b>not</b> <i>collection</i>s)."}, {"owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "edited": false, "score": 0, "creation_date": 1577227145, "post_id": 59470210, "comment_id": 105126111, "body": "Thanks, your latest answer solves the core of my issue: .copied() converts the <code>&amp;&amp;T</code> to <code>&amp;T</code>, and I can pass the iterator directly to implement<code>IntoIterator</code>.  There is only one nit that I have which is that the implementation will accept any type <code>I</code> that implements <code>Clone</code>.  So for example if someone passes in <code>Vec&lt;T&gt;</code>, it will happily clone the <code>Vec</code> instead of complaining that the user should use <code>&amp;Vec&lt;T&gt;</code> instead.  I think I can work around this by using the <code>Iterator</code> trait everywhere instead of <code>IntoIterator</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1577216954, "last_edit_date": 1577216954, "creation_date": 1577197737, "answer_id": 59470210, "question_id": 59460707, "link": "https://stackoverflow.com/questions/59460707/how-do-i-use-a-hashsett-as-an-intoiteratoritem-t/59470210#59470210", "title": "How do I use a &amp;HashSet&lt;&amp;T&gt; as an IntoIterator&lt;Item = &amp;T&gt;?", "body": "<p>If you have a <code>&amp;HashSet&lt;&amp;T&gt;</code> and need an iterator of <code>&amp;T</code> (not <code>&amp;&amp;T</code>) that you can process multiple times, then you can use <code>Iterator::copied</code> to convert the iterator's <code>&amp;&amp;T</code> to a <code>&amp;T</code>:</p>\n\n<pre><code>use std::{collections::HashSet, fmt::Debug, hash::Hash, marker::PhantomData};\n\nstruct Collection&lt;T&gt; {\n    item: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Collection&lt;T&gt;\nwhere\n    T: Debug,\n{\n    fn foo&lt;'a, I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = &amp;'a T&gt; + Clone,\n        T: 'a,\n    {\n        for element in elements.clone() {\n            println!(\"{:?}\", element);\n        }\n        for element in elements {\n            println!(\"{:?}\", element);\n        }\n        Self { item: PhantomData }\n    }\n}\n\nimpl&lt;T&gt; Collection&lt;T&gt;\nwhere\n    T: Debug + Eq + Hash,\n{\n    fn wrap&lt;'a, I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = &amp;'a T&gt;,\n        T: 'a,\n    {\n        let set: HashSet&lt;_&gt; = elements.into_iter().collect();\n        Self::foo(set.iter().copied())\n    }\n}\n\n#[derive(Debug, Hash, PartialEq, Eq)]\nstruct Foo(i32);\n\nfn main() {\n    let v = vec![Foo(1), Foo(2), Foo(4)];\n    Collection::&lt;Foo&gt;::wrap(&amp;v);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/23969191/155423\">Using the same iterator multiple times in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/45195454/155423\">Does cloning an iterator copy the entire underlying vector?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37765586/155423\">Why does cloning my custom type result in &amp;T instead of T?</a></li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p>Note that the rest of this answer made the assumption that a struct named <code>Collection&lt;T&gt;</code> was a collection of values of type <code>T</code>. OP has clarified that this is not true.</p>\n</blockquote>\n\n<p>That's not your problem, as shown by your later examples. That can be boiled down to this:</p>\n\n<pre><code>struct Collection&lt;T&gt;(T);\n\nimpl&lt;T&gt; Collection&lt;T&gt; {\n    fn new(value: &amp;T) -&gt; Self {\n        Collection(value)\n    }\n}\n</code></pre>\n\n<p>You are taking a reference to a type (<code>&amp;T</code>) and trying to store it where a <code>T</code> is required; these are different types and will generate an error. You are using <code>PhantomData</code> for some reason and accepting references via the iterator, but the problem is the same.</p>\n\n<p>In fact, <code>PhantomData</code> makes the problem harder to see as you can just make up values that don't work. For example, we never have any kind of string here but we \"successfully\" created the struct:</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct Collection&lt;T&gt;(PhantomData&lt;T&gt;);\n\nimpl Collection&lt;String&gt; {\n    fn new&lt;T&gt;(value: &amp;T) -&gt; Self {\n        Collection(PhantomData)\n    }\n}\n</code></pre>\n\n<p>Ultimately, your <code>wrap</code> function doesn't make sense, either:</p>\n\n<pre><code>impl&lt;T: Eq + Hash&gt; Collection&lt;T&gt; {\n    fn wrap&lt;I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = T&gt;,\n</code></pre>\n\n<p>This is equivalent to </p>\n\n<pre><code>impl&lt;T: Eq + Hash&gt; Collection&lt;T&gt; {\n    fn wrap&lt;I&gt;(elements: I) -&gt; Collection&lt;T&gt;\n    where\n        I: IntoIterator&lt;Item = T&gt;,\n</code></pre>\n\n<p>Which says that, given an iterator of elements <code>T</code>, you will return a collection of those elements. However, you put them in a <code>HashMap</code> and iterate on a <strong>reference</strong> to it, which yields <code>&amp;T</code>. Thus this function signature cannot be right.</p>\n\n<p>It seems most likely that you want to accept an iterator of owned values instead:</p>\n\n<pre><code>use std::{collections::HashSet, fmt::Debug, hash::Hash};\n\nstruct Collection&lt;T&gt; {\n    item: T,\n}\n\nimpl&lt;T&gt; Collection&lt;T&gt; {\n    fn foo&lt;I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = T&gt;,\n        for&lt;'a&gt; &amp;'a I: IntoIterator&lt;Item = &amp;'a T&gt;,\n        T: Debug,\n    {\n        for element in &amp;elements {\n            println!(\"{:?}\", element);\n        }\n        for element in &amp;elements {\n            println!(\"{:?}\", element);\n        }\n\n        Self {\n            item: elements.into_iter().next().unwrap(),\n        }\n    }\n}\n\nimpl&lt;T&gt; Collection&lt;T&gt;\nwhere\n    T: Eq + Hash,\n{\n    fn wrap&lt;I&gt;(elements: I) -&gt; Self\n    where\n        I: IntoIterator&lt;Item = T&gt;,\n        T: Debug,\n    {\n        let s: HashSet&lt;_&gt; = elements.into_iter().collect();\n        Self::foo(s)\n    }\n}\n\n#[derive(Debug, Hash, PartialEq, Eq)]\nstruct Foo(i32);\n\nfn main() {\n    let v = vec![Foo(1), Foo(2), Foo(4)];\n    let c = Collection::wrap(v);\n    println!(\"{:?}\", c.item)\n}\n</code></pre>\n\n<p>Here we place a trait bound on the generic iterator type directly and a second <em>higher-ranked trait bound</em> on a reference to the iterator. This allows us to use a reference to the iterator as an iterator itself.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51410226/155423\">How does one generically duplicate a value in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44343166/155423\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a></li>\n</ul>\n"}], "owner": {"reputation": 7066, "user_id": 94102, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/622606bdd7ad08e2d2e177a8a8bb507a?s=128&d=identicon&r=PG", "display_name": "Jeremy Salwen", "link": "https://stackoverflow.com/users/94102/jeremy-salwen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "accepted_answer_id": 59470210, "answer_count": 2, "score": 1, "last_activity_date": 1577216954, "creation_date": 1577131085, "last_edit_date": 1577179119, "question_id": 59460707, "link": "https://stackoverflow.com/questions/59460707/how-do-i-use-a-hashsett-as-an-intoiteratoritem-t", "title": "How do I use a &amp;HashSet&lt;&amp;T&gt; as an IntoIterator&lt;Item = &amp;T&gt;?", "body": "<p>I have a function that takes a collection of <code>&amp;T</code> (represented by <code>IntoIterator</code>) with the requirement that every element is unique.</p>\n\n<pre><code>fn foo&lt;'a, 'b, T: std::fmt::Debug, I&gt;(elements: &amp;'b I)\nwhere\n    &amp;'b I: IntoIterator&lt;Item = &amp;'a T&gt;,\n    T: 'a,\n    'b: 'a,\n</code></pre>\n\n<p>I would like to also write a wrapper function which can work even if the elements are not unique, by using a <code>HashSet</code> to remove the duplicate elements first.</p>\n\n<p>I tried the following implementation:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn wrap&lt;'a, 'b, T: std::fmt::Debug + Eq + std::hash::Hash, J&gt;(elements: &amp;'b J)\nwhere\n    &amp;'b J: IntoIterator&lt;Item = &amp;'a T&gt;,\n    T: 'a,\n    'b: 'a,\n{\n    let hashset: HashSet&lt;&amp;T&gt; = elements.into_iter().into_iter().collect();\n    foo(&amp;hashset);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=454bcb28dcf048b6d8663ce370a0305f\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>However, the compiler doesn't seem happy with my assumption that <code>HashSet&lt;&amp;T&gt;</code> implements <code>IntoIterator&lt;Item = &amp;'a T&gt;</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:10:9\n   |\n10 |     foo(&amp;hashset);\n   |         ^^^^^^^^ expected type parameter, found struct `std::collections::HashSet`\n   |\n   = note: expected type `&amp;J`\n              found type `&amp;std::collections::HashSet&lt;&amp;T&gt;`\n   = help: type parameters must be constrained to match other types\n   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters\n</code></pre>\n\n<p>I know I could use a <code>HashSet&lt;T&gt;</code> by cloning all the input elements, but I want to avoid unnecessary copying and memory use.</p>\n"}, {"tags": ["enums", "rust", "variant", "serde"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1577130562, "post_id": 59460464, "comment_id": 105102361, "body": "If you know for sure you are going to have a <code>Foo::Bar</code>, why use the enum in the first place rather than making <code>Bar</code> a type on its own?"}, {"owner": {"reputation": 678, "user_id": 647151, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7e5c476f7ed6fcbb67eee738e304f066?s=128&d=identicon&r=PG", "display_name": "malthe", "link": "https://stackoverflow.com/users/647151/malthe"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1577133611, "post_id": 59460464, "comment_id": 105103209, "body": "The enum represents an HTTP request message or <i>route</i>. I know from the path which message to create. In the example, <code>Bar</code> represents a particular route and the struct might then be deserialized from the HTTP request body."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1577133777, "creation_date": 1577133777, "answer_id": 59461111, "question_id": 59460464, "link": "https://stackoverflow.com/questions/59460464/how-do-i-use-serde-to-deserialize-into-a-specific-enum-variant/59461111#59461111", "title": "How do I use serde to deserialize into a specific enum variant?", "body": "<p>You should define <code>Bar</code> as a type in its own right:</p>\n\n<pre><code>#[derive(Debug, serde::Deserialize)]\nenum Foo {\n    Bar(Bar),\n    Baz,\n}\n\n#[derive(Debug, serde::Deserialize)]\nstruct Bar {\n    x: i32,\n    y: i32,\n}\n\nfn main() -&gt; serde_json::Result&lt;()&gt; {\n    let bar = serde_json::from_str::&lt;Bar&gt;(r#\"{\"x\": 5, \"y\": 7}\"#)?;\n    println!(\"{:?}\", bar);\n    Ok(())\n}\n</code></pre>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34953711/155423\">Unwrap inner type when enum variant is known</a></li>\n<li><a href=\"https://stackoverflow.com/q/48120780/155423\">Defining a method for a struct only when a field is a certain enum variant?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51567350/155423\">Can traits be used on enum types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/57171185/155423\">How do I pass an enum variant to match on as a function parameter?</a></li>\n</ul>\n"}], "owner": {"reputation": 678, "user_id": 647151, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7e5c476f7ed6fcbb67eee738e304f066?s=128&d=identicon&r=PG", "display_name": "malthe", "link": "https://stackoverflow.com/users/647151/malthe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 0, "accepted_answer_id": 59461111, "answer_count": 1, "score": 0, "last_activity_date": 1577133777, "creation_date": 1577129718, "last_edit_date": 1577133709, "question_id": 59460464, "link": "https://stackoverflow.com/questions/59460464/how-do-i-use-serde-to-deserialize-into-a-specific-enum-variant", "title": "How do I use serde to deserialize into a specific enum variant?", "body": "<p>I have an enum defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Foo {\n    Bar { x: i32, y: i32 },\n    ... // many more variants\n}\n</code></pre>\n\n<p>Given a JSON string <code>{\"x\": 5, \"y\": 7}</code> how would I deserialize explicitly to <code>Foo::Bar {x: 5, y: 7}</code>?</p>\n\n<p>Ideally I would be able to call into the deserializer for a particular variant, i.e. <code>Foo::Bar</code> in my example, rather than resort to something like <code>#[serde(untagged)]</code> which is a poor fit when you know in advance which variant to use.</p>\n\n<p>I could define <code>Bar</code> as a type in its own right but since it's only ever used in the context of <code>Foo</code>, it doesn't seem like the most elegant and/or succinct solution.</p>\n"}, {"tags": ["rust", "webassembly", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1577454607, "post_id": 59458837, "comment_id": 105175650, "body": "On what platform are you building the project? Are you tied to that nightly version of the compiler?"}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1577462725, "post_id": 59458837, "comment_id": 105178741, "body": "@E_net4thesafedownvoter I build on linux. To be precise its &quot;elementary os&quot; which is basicly just ubuntu with cooler ui but systemwise everything works like on ubuntu. Could you explain what do you mean by &quot;tied to&quot;? Cheers"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1577462947, "post_id": 59458837, "comment_id": 105178827, "body": "As in, do you really need to use that version of the Rust compiler? It could be that you just stumbled upon a particular nightly toolchain which doesn&#39;t work well with stdweb. Also, don&#39;t forget to edit your question with those details."}], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1577873188, "post_id": 59551247, "comment_id": 105271754, "body": "Thanks for the reply! Sadly, after following all steps I still get the same error :("}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1577873294, "post_id": 59551247, "comment_id": 105271779, "body": "And I don&#39;t think its my fault since I got it to work with no problems on my windows machine"}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1577873464, "post_id": 59551247, "comment_id": 105271822, "body": "Yes it does. I think it&#39;s just cargo web that&#39;s failing."}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1577875108, "post_id": 59551247, "comment_id": 105272172, "body": "Building the repository you linked fails with the same error as the original question"}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 1, "creation_date": 1578008745, "post_id": 59551247, "comment_id": 105310516, "body": "Hey i tried few things and finally thanks to you I found out that i can make it work by using &quot;RUSTFLAGS=&#39;-C linker=rust-lld&#39; cargo web start --target=wasm32-unknown-unknown&quot;. Is there any way I could make it do that by default?"}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1578008890, "post_id": 59551247, "comment_id": 105310552, "body": "Also I dont have a &quot;LD&quot; enviroment variable and I dont know how to change compiler options but if you could explain maybe that&#39;s a more elegant solution"}, {"owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "reply_to_user": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 0, "creation_date": 1578044345, "post_id": 59551247, "comment_id": 105319038, "body": "You should find -fuse-ld=gold and remove it. Check this commands first [echo $RUSTFLAGS] [env] [echo $LDFLAGS]. search for -fuse-ld or LDFLAGS on your environment variables <a href=\"https://lld.llvm.org/\" rel=\"nofollow noreferrer\">search for LDFLAGS here too</a>, <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"nofollow noreferrer\">Configuration</a>, <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\">Environment</a>, <a href=\"https://github.com/rust-lang/cargo/issues/4423\" rel=\"nofollow noreferrer\">RUSTFLAGS</a>, <a href=\"https://github.com/rust-lang/rust/issues/52362\" rel=\"nofollow noreferrer\">linker</a>, <a href=\"https://stackoverflow.com/questions/55628741/specifying-custom-linker-executable-to-g\">custom</a>."}, {"owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "edited": false, "score": 1, "creation_date": 1578077776, "post_id": 59551247, "comment_id": 105334007, "body": "Ok I found it! For some reason my RUSTFLAGS enviroment variable was set to &quot;-C link-args=&#39;-fuse-ld=gold&#39;&quot; by default. I have no idea why did it do that but after clearing RUSTFLAGS in /etc/enviroment everything works perfectly fine. Thanks for help :)"}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": false, "score": 1, "last_activity_date": 1578144200, "last_edit_date": 1578144200, "creation_date": 1577870179, "answer_id": 59551247, "question_id": 59458837, "link": "https://stackoverflow.com/questions/59458837/rust-stdweb-fails-to-compile/59551247#59551247", "title": "Rust stdweb fails to compile", "body": "<p>Your linker or compiler settings are not set correctly, or changed somehow. </p>\n\n<blockquote>\n  <p>error: unknown argument: -fuse-ld=gold</p>\n</blockquote>\n\n<p>Remove the <a href=\"https://en.wikipedia.org/wiki/Gold_(linker)\" rel=\"nofollow noreferrer\">gold linker</a> flag: <code>-fuse-ld=gold</code> from your <code>RUSTFLAGS</code>, <code>LD</code> environmental variables or the compiler options.</p>\n\n<p>Use verbose flag (<code>-v</code> or <code>--verbose</code>) to see verbose output:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>cargo web build -v --target=wasm32-unknown-unknown\n</code></pre>\n\n<p>WebAssembly is fast, safe, <strong>portable</strong>, and part of the open Web platform.<br>\nSo the WebAssembly is <strong>platform independent</strong> (You don't need to compile it to <code>ARM</code>, and it is virtual machine based so you need a host to run WebAssembly, e.g. inside a web browser JavaScript VM for WebAssembly. Also there is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-overview.md\" rel=\"nofollow noreferrer\">WASI: WebAssembly System Interface</a>).  </p>\n\n<p>Since it is <strong>portable</strong>:<br>\nYou may build it using your working compiler on any machine and then just copy <code>.wasm</code> file(s) to the target web server machine.</p>\n\n<hr>\n\n<p>To start a web hello world sample from scratch:  </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>rustup target add wasm32-unknown-unknown\n\n# https://github.com/koute/stdweb\ncargo search cargo-web\n# cargo-web = \"0.6.26\"          # A Cargo subcommand for the client-side Web\n# cargo install cargo-web --version 0.6.26\ncargo install cargo-web\nfile ~/.cargo/bin/cargo-web\ncargo-web --version\n# cargo-web 0.6.26\n\n# create new project e.g. \"123stdweb-rs-js\"\ncargo new 123stdweb-rs-js\ncd 123stdweb-rs-js\n\ncargo search stdweb\n</code></pre>\n\n<p>Add to Cargo.toml file end after <code>[dependencies]</code>:  </p>\n\n<pre><code>stdweb = \"0.4.20\"  # A standard library for the client-side Web\n</code></pre>\n\n<p><code>main.rs</code> file:</p>\n\n<pre><code>use stdweb;\nuse stdweb::js;\n\nfn main() {\n    stdweb::initialize();\n    let message = \"Hello from stdweb.\";\n    let result = js! {\n        alert( @{message} );\n        return 2 + 2 * 2;\n    };\n    println!(\"2 + 2 * 2 = {:?}\", result);\n    stdweb::event_loop();\n}\n</code></pre>\n\n<p>Build and run web server to serve <code>target/wasm32-unknown-unknown/debug/stdweb-rs-js.js</code>:  </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code># Compile to WebAssembly using Rust's native WebAssembly backend:\ncargo web start --target=wasm32-unknown-unknown\n</code></pre>\n\n<p>Open your web browser <a href=\"http://localhost:8000\" rel=\"nofollow noreferrer\">http://localhost:8000</a>:  </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>firefox http://localhost:8000\n</code></pre>\n\n<p>Done.</p>\n\n<hr>\n\n<p>You may release build:  </p>\n\n<pre><code>cargo web build --release --target=wasm32-unknown-unknown\nmkdir static\ncp target/wasm32-unknown-unknown/release/stdweb-rs-js.js ./static/\ncp target/wasm32-unknown-unknown/release/stdweb-rs-js.wasm ./static/\n</code></pre>\n\n<p>Now you may serve <code>stdweb-rs-js.js</code> and <code>stdweb-rs-js.wasm</code> files using your favorite static web server e.g. <code>python3 -m http.server 8080</code> using simple <code>./static/index.html</code> file:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    Right click &lt;b&gt;Inspect&lt;/b&gt; then click &lt;b&gt;Console&lt;/b&gt; tab\n    &lt;hr /&gt;\n\n    &lt;script src=\"stdweb-rs-js.js\"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>That's all.</p>\n\n<hr>\n\n<p>I hope this helps.</p>\n"}], "owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 536, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1579878228, "creation_date": 1577120178, "last_edit_date": 1579878228, "question_id": 59458837, "link": "https://stackoverflow.com/questions/59458837/rust-stdweb-fails-to-compile", "title": "Rust stdweb fails to compile", "body": "<p>I wanted to get started with the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb</a> library but for some reason my code doesn't compile. Here's the code:</p>\n\n<pre><code>#[macro_use]\nextern crate stdweb;\n\nfn main() {\n    stdweb::initialize();\n\n    let message = \"Hello, \u4e16\u754c!\";\n    js! {\n        alert( @{message} );\n    }\n\n    stdweb::event_loop();\n}\n</code></pre>\n\n<p>And here's the error I get when i run <code>cargo web start --target=wasm32-unknown-unknown</code>:</p>\n\n<pre><code>error: linking with `rust-lld` failed: exit code: 1\n  |\n  = note: \"rust-lld\" \"rust-lld\" \"-flavor\" \"wasm\" \"--no-threads\" \"-z\" \"stack-size=1048576\" \"--stack-first\" \"--allow-undefined\" \"--fatal-warnings\" \"--no-demangle\" \"--export-dynamic\" \"--no-entry\" \"-L\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.16ntzdg2n8bx81q6.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.2xfx8uklq7n12q67.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.48klqndjiid3k9rj.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.48le17nhrmqft97k.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.4b580liojrglk551.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.4rrrlrglrmdphj5c.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.4vuc8rinrzvzrs2v.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.50srrlytlsid8m35.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.5fgjih7crwhwn4xr.rcgu.o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.5fkqw2idrlv7jos5.rcgu.o\" \"-o\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.wasm\" \"--export\" \"main\" \"--export\" \"__web_malloc\" \"--export\" \"__web_free\" \"--export=__heap_base\" \"--export=__data_end\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/rust_snake.2l9dobmrlqco0sju.rcgu.o\" \"--gc-sections\" \"-O0\" \"-L\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps\" \"-L\" \"/home/kuba/Projects/rust-snake/target/debug/deps\" \"-L\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libstdweb-ef476852d27a12c5.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libdiscard-a83cebb0a142eb8f.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libstdweb_internal_runtime-0bce6e61d1817cf7.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libserde_json-1c98a67e94d08af3.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libryu-322b81c9b49f7e9f.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libitoa-a7c2d7644820b152.rlib\" \"/home/kuba/Projects/rust-snake/target/wasm32-unknown-unknown/debug/deps/libserde-c2f4e30465155451.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libstd-9c867bc4c16ee4c2.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libpanic_abort-ed0cd729c2f3d142.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libdlmalloc-030f419e714a0cc6.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libhashbrown-a12a1f881dba75e1.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/librustc_std_workspace_alloc-35aa06e58878157c.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libbacktrace-6636ad5f40fe0c6e.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/librustc_demangle-3c1019358081106e.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libunwind-b93526bae6789131.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libcfg_if-12a659b7ffc8c645.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/liblibc-62025a1d48e0630e.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/liballoc-80234d57a1442351.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/librustc_std_workspace_core-d429e78abfaecaef.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libcore-c485e95495d6739c.rlib\" \"/home/kuba/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/wasm32-unknown-unknown/lib/libcompiler_builtins-53d1b7f6a2bd6c6f.rlib\" \"-fuse-ld=gold\"\n  = note: rust-lld: error: unknown argument: -fuse-ld=gold\n\n\nerror: aborting due to previous error\nerror: could not compile `rust-snake`.\n</code></pre>\n\n<p>Some additional info I think might be useful:</p>\n\n<p>cargo version: <code>cargo 1.41.0-nightly (626f0f40e 2019-12-03)</code><br>\ninsides of ~/.cargo/config: </p>\n\n<pre><code>[target.arm-unknown-linux-gnueabihf]\nlinker = \"arm-linux-gnueabihf-gcc-7\"\n</code></pre>\n\n<p>Any help would be appreciated :)</p>\n\n<p>Edit: I'm using \"elementary os\" (basicly ubuntu with cooler ui). And trying to build on stable gives me exactly the same error.</p>\n\n<p>Edit2: <code>rustup show</code> returns</p>\n\n<pre><code>rustup home:  /home/kuba/.rustup\n\ninstalled toolchains\n--------------------\n\nstable-x86_64-unknown-linux-gnu (default)\nnightly-x86_64-unknown-linux-gnu\n\ninstalled targets for active toolchain\n--------------------------------------\n\narm-unknown-linux-gnueabihf\narmv7-unknown-linux-gnueabihf\nwasm32-unknown-unknown\nx86_64-unknown-linux-gnu\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nrustc 1.40.0 (73528e339 2019-12-16)\n</code></pre>\n\n<p>Edit3: <code>cargo-web --version</code> returns <code>cargo-web 0.6.26</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577110909, "post_id": 59456873, "comment_id": 105094875, "body": "Attempt 1: use dyn instead of impl: <code>fn get_xml_stream(source: &amp;str) -&gt; Result&lt;Reader&lt;dyn BufRead&gt;, Error&gt; {</code>. Does not work: <code>error[E0277]: the size for values of type </code>(dyn std::io::BufRead + &#39;static)` cannot be known at compilation time`. How can I amke the size known? Let&#39;s try a box next."}, {"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577111175, "post_id": 59456873, "comment_id": 105094987, "body": "Attempt 2: use <code>fn get_xml_stream(source: &amp;str) -&gt; Result&lt;Reader&lt;Box&lt;dyn BufRead&gt;&gt;, Error&gt; {</code>. Does not work because I cannot get the Box into the XML reader. How would I get a box into a reader when I create it from a file name?"}, {"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577111276, "post_id": 59456873, "comment_id": 105095027, "body": "Attempt 3: use the Box around the whole Reader: <code>fn get_xml_stream(source: &amp;str) -&gt; Result&lt;Box&lt;Reader&lt;dyn BufRead&gt;&gt;, Error&gt; {</code>. Does not work because we have the same error message as in attempt 1."}, {"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577111585, "post_id": 59456873, "comment_id": 105095170, "body": "Attempt 4: use a generic type: <code>fn get_xml_stream&lt;B: BufRead&gt;(source: &amp;str) -&gt; Result&lt;Reader&lt;B&gt;, Error&gt; {</code>. Does not work because the compiler throws 4 errors, one for the caller now &quot;cannot infer type for <code>B</code>&quot;."}, {"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577111866, "post_id": 59456873, "comment_id": 105095306, "body": "Attempt 5: trying to use BufReader directly which is a concrete type: <code>fn get_xml_stream(source: &amp;str) -&gt; Result&lt;Reader&lt;BufReader&lt;dyn Read&gt;&gt;, Error&gt; {</code>. But that just pushes the error to the next level, now we have the same problem with the dynamic read. How can I specify a concrete type instead of Read?"}, {"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577112319, "post_id": 59456873, "comment_id": 105095496, "body": "Attempt 6: instead of using Reader::from_file() also use Reader::from_reader() for the file, that is then the same as the response. Also does not work, same compiler error message as in the question."}], "answers": [{"comments": [{"owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "edited": false, "score": 0, "creation_date": 1577125264, "post_id": 59458001, "comment_id": 105100724, "body": "Yes, that&#39;s exactly it! I was close with the Box, but did not get the rewrite to also use from_reader() with the Box for the file :-)"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 2, "last_activity_date": 1577116558, "last_edit_date": 1577116558, "creation_date": 1577116102, "answer_id": 59458001, "question_id": 59456873, "link": "https://stackoverflow.com/questions/59456873/how-do-you-create-a-rust-quick-xml-reader-from-either-a-file-or-url/59458001#59458001", "title": "How do you create a Rust Quick XML reader from either a file or URL?", "body": "<p>Returning <code>impl SomeTrait</code> means the function returns <em>one concrete type</em> that implements that trait and you just don't want to spell out what type it is. It doesn't mean it can return heterogeneous types.</p>\n\n<p><code>Box&lt;dyn BufRead&gt;</code> is the right choice here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use failure::{Error, format_err, ResultExt};  // failure = \"0.1.6\"\nuse quick_xml::Reader;  // quick-xml = \"0.17.2\"\nuse std::fs::File;\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\n\n/// Returns an XML stream either from a file or a URL.\nfn get_xml_stream(source: &amp;str) -&gt; Result&lt;Reader&lt;Box&lt;dyn BufRead&gt;&gt;, Error&gt; {\n    let local_path = Path::new(source);\n\n    if local_path.is_file() {\n        let file = File::open(local_path)?;\n        let reader = BufReader::new(file);\n\n        Ok(Reader::from_reader(Box::new(reader)))\n    } else {\n        let response = reqwest::get(source).context(format!(\n            \"File not found and failed fetching from remote URL {}\",\n            source\n        ))?;\n        if !response.status().is_success() {\n            return Err(format_err!(\"XML download failed with {:#?}\", response));\n        }\n        let reader = BufReader::new(response);\n\n        Ok(Reader::from_reader(Box::new(reader)))\n    }\n}\n</code></pre>\n\n<p>As a side note, mixing local path and remote URL is not a good idea. A mere <code>local_path.is_file()</code> is not enough to sanitize the input. You've been warned.</p>\n"}], "owner": {"reputation": 452, "user_id": 2000435, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2d083f2e04aca7baa5f67cd616cdbf8c?s=128&d=identicon&r=PG", "display_name": "klausi", "link": "https://stackoverflow.com/users/2000435/klausi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 630, "favorite_count": 1, "accepted_answer_id": 59458001, "answer_count": 1, "score": 3, "last_activity_date": 1577116558, "creation_date": 1577110849, "question_id": 59456873, "link": "https://stackoverflow.com/questions/59456873/how-do-you-create-a-rust-quick-xml-reader-from-either-a-file-or-url", "title": "How do you create a Rust Quick XML reader from either a file or URL?", "body": "<p>I have the following code using the quick_xml library:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use quick_xml::Reader;\nuse std::io::BufRead;\nuse std::path::Path;\nuse std::io::BufReader;\n\n/// Returns an XML stream either from a file or a URL.\nfn get_xml_stream(source: &amp;str) -&gt; Result&lt;Reader&lt;impl BufRead&gt;, Error&gt; {\n    let local_path = Path::new(source);\n\n    // Try to read a local file first.\n    if local_path.is_file() {\n        let reader =\n            Reader::from_file(source).context(format!(\"couldn't read file {:?}\", source))?;\n        return Ok(reader);\n    }\n    // Try to fetch a remote file.\n    let response = reqwest::get(source).context(format!(\n        \"File not found and failed fetching from remote URL {}\",\n        source\n    ))?;\n    if !response.status().is_success() {\n        return Err(format_err!(\"XML download failed with {:#?}\", response));\n    }\n\n    Ok(Reader::from_reader(BufReader::new(response)))\n}\n</code></pre>\n\n<p>The return type is dynamic: a Reader that either has data from a file or response body.</p>\n\n<p>Compilation error:</p>\n\n<pre><code>error[E0308]: mismatched types\n   --&gt; src/main.rs:225:43\n    |\n225 |     Ok(Reader::from_reader(BufReader::new(response)))\n    |                                           ^^^^^^^^ expected struct `std::fs::File`, found struct `reqwest::response::Response`\n    |\n    = note: expected type `std::fs::File`\n               found type `reqwest::response::Response`\n</code></pre>\n\n<p>The compiler thinks we always want to read from a file, but this is a response stream here. How can I tell the compiler to accept both types of buffered readers in the XML reader?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1089, "user_id": 5405968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TVcHU.jpg?s=128&g=1", "display_name": "Bennett Hardwick", "link": "https://stackoverflow.com/users/5405968/bennett-hardwick"}, "edited": false, "score": 0, "creation_date": 1577113935, "post_id": 59456686, "comment_id": 105096195, "body": "Just to be annoying, have you tested the reference count is correct before cloning?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 1089, "user_id": 5405968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TVcHU.jpg?s=128&g=1", "display_name": "Bennett Hardwick", "link": "https://stackoverflow.com/users/5405968/bennett-hardwick"}, "edited": false, "score": 0, "creation_date": 1577115298, "post_id": 59456686, "comment_id": 105096782, "body": "Didn&#39;t show, but yes."}], "answers": [{"comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1577117372, "post_id": 59457969, "comment_id": 105097619, "body": "Meh, obviously yes. The reference count is increased on <code>rc1</code>, from that point on everybody works on their own copy of the pointer. I guess I can make this work using <code>Pin</code> and have every clone keep a reference to where the original pointer is living."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 0, "last_activity_date": 1577115979, "creation_date": 1577115979, "answer_id": 59457969, "question_id": 59456686, "link": "https://stackoverflow.com/questions/59456686/modifying-a-cellnonnullt-through-multiple-owners-ub-or-not/59457969#59457969", "title": "Modifying a Cell&lt;NonNull&lt;T&gt;&gt; through multiple owners - UB or not?", "body": "<p><code>Cell</code>s and related types (like <code>RefCell</code> or <code>UnsafeCell</code>) in Rust are <em>not</em> pointers, they are just wrappers that provide interior mutability. So every single <code>SmallRc</code> value will have its own <code>Cell</code> value, each with its own <code>NonNull</code> pointer. Changing that pointer of one <code>SmallRc</code> value will not affect the others because they do not share data.</p>\n\n<p><code>std::rc::Rc</code> on the other hand has a pointer to a reference-counting structure (<code>NonNull&lt;RcBox&lt;T&gt;&gt;</code>). The pointer itself never changes, but the <code>Rc</code> values can point to the same reference-counting structure, so changing the reference count in that will affect all other <code>Rc</code> values pointing to the same structure.</p>\n\n<p>I'm imagining your <code>SmallRc</code> would behave something like this (notice how <code>clone</code> and <code>drop</code> only affect the values they work with directly):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rc = SmallRc::new(5u32);\n// rc = { 0x12340001 } // &lt;-- example pointer values\nlet rc2 = rc.clone();\n// rc = { 0x12340002 }, rc2 = { 0x12340002 }\nlet rc3 = rc2.clone();\n// rc = { 0x12340002 }, rc2 = { 0x12340003 }, rc3 = { 0x12340003 }\ndrop(rc2)\n// rc = { 0x12340002 }, rc2 = [dropped], rc3 = { 0x12340003 }\n</code></pre>\n"}], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 59457969, "answer_count": 1, "score": 1, "last_activity_date": 1577115979, "creation_date": 1577110041, "last_edit_date": 1577115268, "question_id": 59456686, "link": "https://stackoverflow.com/questions/59456686/modifying-a-cellnonnullt-through-multiple-owners-ub-or-not", "title": "Modifying a Cell&lt;NonNull&lt;T&gt;&gt; through multiple owners - UB or not?", "body": "<p>I'm toying around with a smaller version of <code>Rc</code> which stores the reference-count in the pointer, utilizing the unused bits due to alignment. <em>I suspect I'm causing UB, but I'm wondering where exactly and why.</em></p>\n\n<p>Most basically this looks like</p>\n\n<pre><code>struct SmallRc&lt;T&gt; {\n    inner: Cell&lt;NonNull&lt;T&gt;&gt;\n}\n</code></pre>\n\n<p>The constructor allocates for <code>T</code> and stores it at the pointer.</p>\n\n<p>The impl of <code>Clone</code> looks - very roughly - like</p>\n\n<pre><code>fn clone(&amp;self) -&gt; Self {\n    // Overflow-check within alignment-bits not shown\n    let cur = self.inner.get().as_ptr() as usize;\n    self.inner.set(unsafe { NonNull::new_unchecked((cur + 1) as *mut T) });\n    Self {\n        // This is where a new owner is created\n        // so there are now multiple owners of the same pointer\n        inner: self.inner.clone()\n    }\n}\n</code></pre>\n\n<p>The <code>Drop</code>-impl looks almost identical, again paraphrased:</p>\n\n<pre><code>impl&lt;T&gt; Drop for SmallRc&lt;T&gt; {\n    fn drop(&amp;mut self) {\n        // decrement the reference-counter similar as to how Clone does it.\n        self.dec_strong_count(); \n        if self.strong_count() == 0 {\n             // drop and deallocate the inner value\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>Deref</code>-impl masks the pointer and dereferences it. In essence, there is never more than one <code>&amp;mut T</code> active; the pointer is never used in un-aligned form; <code>cargo miri test</code> passes.</p>\n\n<p>All this works to some extent. However, the following test fails</p>\n\n<pre><code>let rc = SmallRc::new(5u32);\nassert_eq!(SmallRc::capacity(&amp;rc), 3);\nassert_eq!(SmallRc::strong_count(&amp;rc), 1);\nassert_eq!(*rc, 5);\nlet rc2 = rc.clone();\nassert_eq!(SmallRc::strong_count(&amp;rc), 2);\nassert_eq!(SmallRc::strong_count(&amp;rc2), 2);\nassert_eq!(*rc2, 5);\ndrop(rc2);\nassert_eq!(SmallRc::strong_count(&amp;rc), 1);  // Fails, reference count is still 2.\n</code></pre>\n\n<p>Tracing this reveals that while the <code>Drop</code>-impl decrements the reference count and stores the new pointer in the <code>Cell</code>, the last call to <code>strong_count</code> uses the same (old) value without reading from the <code>Cell</code> at all.</p>\n\n<p>I'm wondering why, exactly, this is. Especially since the implementation of <code>std::rc</code> is roughly similar; the difference being that the reference count is in a <code>Cell</code> <em>behind</em> a pointer while here we have a <code>Cell</code> <em>for</em> the pointer.</p>\n"}, {"tags": ["javascript", "google-chrome", "rust", "webassembly"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1577144967, "post_id": 59455909, "comment_id": 105105681, "body": "Why do this instead of changing the wasm module to act as a factory capable of returning multiple instances? Generally, module systems assume you want to deduplicate whenever possible, so working around that will be difficult."}, {"owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1577152634, "post_id": 59455909, "comment_id": 105106822, "body": "@PitaJ The reason I can&#39;t do this here is that I don&#39;t know how many instances need to be created. And wasm internally stores information through global variables because it is inconvenient to manage the state entirely by JS. In addition, I also want to isolate errors between different instances. so I need to create a totally new wasm instance"}], "owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1577108392, "creation_date": 1577106493, "last_edit_date": 1577108392, "question_id": 59455909, "link": "https://stackoverflow.com/questions/59455909/need-help-how-to-get-a-totally-new-instance-of-a-wasm-module-without-refreshing", "title": "need help: How to get a totally new instance of a wasm module without refreshing the page?", "body": "<p>My original requirement was that: I have a compiled wasm module writing by rust, and I used lasy_static! internally to store some state, and I hope that at some point I can recompile this wasm module and clear all data and memory without refreshing the page. For example, when a user has completed a process and wants to start again.</p>\n\n<p>But at present, I found that although webpack already supports importing wasm modules through import, but in the case of the browser not refreshing, I always have only one wasm instance, and even I have changed the compiled code, but it still fails to reach My appeal, so come here for help, here are some of my attempts:</p>\n\n<p>This is the rust code for a simple wasm module:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\nextern crate wasm_bindgen;\nextern crate serde_json;\n\nuse web_sys;\n\nuse std::{sync::Mutex};\nuse wasm_bindgen::prelude::*;\nuse std::sync::PoisonError;\nuse std::panic;\n\npub struct CurrentStatus {\n  pub index: i32,\n}\n\nimpl CurrentStatus {\n  fn new() -&gt; Self {\n    CurrentStatus {\n      index: 1,\n    }\n  }\n  fn get_index(&amp;mut self) -&gt; i32 {\n    self.index.clone()\n  }\n\n  fn add_index(&amp;mut self) {\n    self.index += 1;\n  }\n}\n\nlazy_static! {\n    pub static ref FOO: Mutex&lt;CurrentStatus&gt; = Mutex::new(CurrentStatus::new());\n}\n\n#[wasm_bindgen]\npub fn add_index() {\n  FOO.lock().unwrap_or_else(PoisonError::into_inner).add_index();\n}\n\n#[wasm_bindgen]\npub fn get_index() -&gt; i32 {\n  let mut foo = FOO.lock().unwrap_or_else(PoisonError::into_inner);\n  return foo.get_index();\n}\n</code></pre>\n\n<p>Then I use wasm-pack to pack it, and then call it through js:</p>\n\n<pre><code>const js = import(\"../pkg/hello_wasm.js\");\njs.then(js =&gt; {\n  js.add_index();\n  console.log(js.get_index());\n});\n\nsetTimeout(() =&gt; {\n  const js = import(\"../pkg/hello_wasm.js\")\n  js.then(js =&gt; {\n    js.add_index();\n    console.log(js.get_index());\n    js.add_index();\n  });\n}, 2000);\n</code></pre>\n\n<p>Of course, the default code returns the same instance, so I try to modify the compiled code of webpack:</p>\n\n<p>The original webpack compiled code looks like this (a key part is here, interested friends can also try it for themselves):</p>\n\n<pre><code>wasmModules.forEach(function(wasmModuleId) {\n/******/     var installedWasmModuleData = installedWasmModules[wasmModuleId];\n/******/\n/******/     // a Promise means \"currently loading\" or \"already loaded\".\n/******/     if(installedWasmModuleData)\n/******/      promises.push(installedWasmModuleData);\n/******/     else {\n/******/      var importObject = wasmImportObjects[wasmModuleId]();\n/******/      var req = fetch(__webpack_require__.p + \"\" + {\"2\":\"4f77fe13132b31e5eb67\"}[wasmModuleId] + \".module.wasm\");\n/******/      var promise;\n/******/      if(importObject instanceof Promise &amp;&amp; typeof WebAssembly.compileStreaming === 'function') {\n/******/       promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n/******/        return WebAssembly.instantiate(items[0], items[1]);\n/******/       });\n/******/      } else if(typeof WebAssembly.instantiateStreaming === 'function') {\n/******/       promise = WebAssembly.instantiateStreaming(req, importObject);\n/******/      } else {\n/******/       var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n/******/       promise = bytesPromise.then(function(bytes) {\n/******/        return WebAssembly.instantiate(bytes, importObject);\n/******/       });\n/******/      }\n/******/      promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n/******/       return __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n/******/      }));\n/******/     }\n/******/    });\n/******/    return Promise.all(promises);\n</code></pre>\n\n<p>I removed the cache here and made it re-pull and call instantiate every time (also tried using compileStreaming):</p>\n\n<pre><code>/******/   var wasmModules = {\"1\":[2]}[chunkId] || [];\n/******/\n/******/    wasmModules.forEach(function(wasmModuleId) {\n/******/     var installedWasmModuleData = installedWasmModules[wasmModuleId];\n/******/\n              __webpack_require__.w[wasmModuleId] = void 0;\n\n              console.log('__webpack_require__.w[wasmModuleId]:', __webpack_require__.w[wasmModuleId]);\n\n/******/     // a Promise means \"currently loading\" or \"already loaded\".\n/******/     if(installedWasmModuleData)\n/******/      promises.push(installedWasmModuleData);\n/******/     else {\n/******/      var importObject = wasmImportObjects[wasmModuleId]();\n/******/      var req = fetch(__webpack_require__.p + \"\" + {\"2\":\"4f77fe13132b31e5eb67\"}[wasmModuleId] + \".module.wasm\");\n/******/      var promise;\n/******/      if(importObject instanceof Promise &amp;&amp; typeof WebAssembly.compileStreaming === 'function') {\n/******/       promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n/******/        return WebAssembly.instantiate(items[0], items[1]);\n/******/       });\n/******/      } else if(typeof WebAssembly.compileStreaming === 'function') {\n/******/       promise = WebAssembly.compileStreaming(req, importObject);\n/******/      } else {\n/******/       var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n/******/       promise = bytesPromise.then(function(bytes) {\n/******/        return WebAssembly.instantiate(bytes, importObject);\n/******/       });\n/******/      }\n/******/      promises.push(promise.then(function(res) { // change here!\n                  return WebAssembly.instantiate(res, importObject).then((instance) =&gt; {\n                    return __webpack_require__.w[wasmModuleId] = instance.exports;\n                  })\n// /******/      return __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n/******/      }));\n/******/     }\n/******/    });\n/******/    return Promise.all(promises);\n</code></pre>\n\n<p>I want it to output the same result twice, which shows that I successfully re-initialized the wasm module.</p>\n\n<p>but the output:</p>\n\n<pre><code>2\n3\n</code></pre>\n\n<p>Obviously, there is no re-initialization of a wasm instance, which is very disturbing to me. I don't know how to do it to get a new instance ..</p>\n\n<p>and I also create a mini-repo: <a href=\"https://github.com/aircloud/wasm-single-test\" rel=\"nofollow noreferrer\">https://github.com/aircloud/wasm-single-test</a></p>\n\n<p>can run the demo by the command showed.</p>\n"}, {"tags": ["generics", "rust", "bounds", "serde", "serde-json"], "answers": [{"tags": [], "owner": {"reputation": 314, "user_id": 2287299, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ekHev.png?s=128&g=1", "display_name": "Ward Segers", "link": "https://stackoverflow.com/users/2287299/ward-segers"}, "is_accepted": true, "score": 0, "last_activity_date": 1577105073, "last_edit_date": 1577105073, "creation_date": 1577104756, "answer_id": 59455541, "question_id": 59455330, "link": "https://stackoverflow.com/questions/59455330/serde-json-serialize-to-string-with-a-generic/59455541#59455541", "title": "Serde_json serialize to_string with a generic", "body": "<p>The problem is that you don't specify that everything <code>T</code> can be will implement the <code>Serialize</code>-trait. You should tell the compiler that you only intent to give it <code>Serialize</code>-implementors.</p>\n\n<p>A solution would be to do as the compiler says:</p>\n\n<pre><code>help: consider adding a `where T: primitives::_IMPL_DESERIALIZE_FOR_Address::_serde::Serialize` boundrustc(E0277)\n</code></pre>\n\n<p>So, your code should look as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn send&lt;T: serde::Serialize&gt;(method: &amp;str, params: T) -&gt; () {\n    println!(\"{:?}\", serde_json::to_string(&amp;params));\n    // Rest of actual code that works with 'method' and 'params'\n}\n\nfn main() {\n    send::&lt;i32&gt;(\"account\", 44);\n    send::&lt;&amp;str&gt;(\"name\", \"John\");\n}\n</code></pre>\n\n<p>or using the <code>where</code>-keyword:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn send&lt;T&gt;(method: &amp;str, params: T) -&gt; () where T: serde::Serialize {\n    println!(\"{:?}\", serde_json::to_string(&amp;params));\n    // Rest of actual code that works with 'method' and 'params'\n}\n\nfn main() {\n    send::&lt;i32&gt;(\"account\", 44);\n    send::&lt;&amp;str&gt;(\"name\", \"John\");\n}\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 4891709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c680435ec739b7fc8c707e006c0b441?s=128&d=identicon&r=PG&f=1", "display_name": "Nastezz", "link": "https://stackoverflow.com/users/4891709/nastezz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 528, "favorite_count": 0, "accepted_answer_id": 59455541, "answer_count": 1, "score": 0, "last_activity_date": 1577105073, "creation_date": 1577103836, "last_edit_date": 1577104462, "question_id": 59455330, "link": "https://stackoverflow.com/questions/59455330/serde-json-serialize-to-string-with-a-generic", "title": "Serde_json serialize to_string with a generic", "body": "<p>I'm trying to serialize the <code>params</code> paramter of the <code>send</code> method.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn send&lt;T&gt;(method: &amp;str, params: T) -&gt; () {\n    println!(\"{:?}\", serde_json::to_string(&amp;params));\n    // Rest of actual code that works with 'method' and 'params'\n}\n\nfn main() {\n    send::&lt;i32&gt;(\"account\", 44);\n    send::&lt;&amp;str&gt;(\"name\", \"John\");\n}\n</code></pre>\n\n<p>But it is giving me the following error which I'm not able to solve:</p>\n\n<pre><code>the trait bound `T: primitives::_IMPL_DESERIALIZE_FOR_Address::_serde::Serialize` is not satisfied\n\nthe trait `primitives::_IMPL_DESERIALIZE_FOR_Address::_serde::Serialize` is not implemented for `T`\n\nhelp: consider adding a `where T: primitives::_IMPL_DESERIALIZE_FOR_Address::_serde::Serialize` boundrustc(E0277)\n</code></pre>\n\n<p>I guess it is because it doesn't know the type from where it needs to serialize to although I specify it when calling <code>send</code>. The types passed to <code>params</code> could also be other structs, not only primitive types.</p>\n"}, {"tags": ["design-patterns", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577094689, "post_id": 59452806, "comment_id": 105088122, "body": "&quot;In C++ I would instantiate the CPU, store it in the Bus, and then set a pointer to the Bus in the CPU.&quot; so circular xd you can do it in Rust too but I don&#39;t see the point"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1577097215, "post_id": 59452806, "comment_id": 105089159, "body": "Hard to answer in general. You could make the CPU the root of the hierarchy, and let it own everything else, since it is kind of central to program execution. If there are some resources that are shared between e.g. GPU and CPU, you can use shared ownership with <code>Rc&lt;RefCell&lt;\u2026&gt;&gt;</code> or similar."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1577097271, "post_id": 59452806, "comment_id": 105089182, "body": "Also note that your C++ solution will break as soon as you move the bus struct around in memory, since this will invalidate any pointer to it."}, {"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 1, "creation_date": 1577104540, "post_id": 59452806, "comment_id": 105092050, "body": "The Bus shouldn&#39;t know realization details of devices connected to it. So CPU, RAM and GPU must implement the <code>Device</code> trait. And, of course, they all should be dynamically allocated. So Bus will contain the list of references to devices and each of these devices - a reference to the Bus. It allows you to get rid of circular references. In real modern systems, there are even more abstraction layers between different devices."}], "owner": {"reputation": 2633, "user_id": 2148076, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/AyqVf.png?s=128&g=1", "display_name": "danijoo", "link": "https://stackoverflow.com/users/2148076/danijoo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1577101814, "creation_date": 1577092981, "last_edit_date": 1577101814, "question_id": 59452806, "link": "https://stackoverflow.com/questions/59452806/design-pattern-to-avoid-circular-references", "title": "Design pattern to avoid circular references", "body": "<p>I want to build an emulator in rust and currently try to find a good design pattern for the following problem: My emulator right now aims to consists of two structs: The <code>CPU</code> and the <code>RAM</code>. Since multiple other components will follow, I dont want the <code>CPU</code> to reference the <code>RAM</code> directly. Instead, there is a <code>Bus</code> struct that will tie everything together:</p>\n\n<pre><code>struct CPU;\n\nimpl CPU {\n    pub fn clock() {\n        // read data from RAM, do stuff..\n        unimplemented!();\n    }\n}\n\nstruct RAM;\n\nimpl RAM {\n    pub fn read_byte(addr: u16) -&gt; u8 { unimplemented!() }\n}\n\nstruct Bus {\n    pub cpu: CPU,\n    pub ram: RAM,\n}\n\nimpl Bus {\n    fn clock() {\n        self.cpu.clock();\n    }\n}\n</code></pre>\n\n<p>Now for the <code>CPU</code> to read some memory from the <code>RAM</code>, it needs to get a reference to the <code>Bus</code>. However, this would lead to a circular reference because the <code>Bus</code> already holds the <code>CPU</code>. Now imagine another component added: the <code>GPU</code>, which also wants to access features of the <code>Bus</code>. Now both (<code>CPU</code> and <code>GPU</code>) will require a mutable reference to the <code>Bus</code> which is also not possible because we can only have one.</p>\n\n<p>I can't think of a good design pattern to resolve this in rust. In C++ I would instantiate the <code>CPU</code>, store it in the <code>Bus</code>, and then set a pointer to the <code>Bus</code> in the <code>CPU</code>. But in Rust, this does not work. What's a good design pattern to implement this in Rust?    </p>\n"}, {"tags": ["xml", "rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1577091889, "post_id": 59452193, "comment_id": 105086956, "body": "look like a bug, I don&#39;t know if xml allow empty array but I think it should maybe look if an issue for it."}], "answers": [{"comments": [{"owner": {"reputation": 136, "user_id": 7009097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43622cfe7875d14cffb124cda4090616?s=128&d=identicon&r=PG&f=1", "display_name": "fny82", "link": "https://stackoverflow.com/users/7009097/fny82"}, "edited": false, "score": 0, "creation_date": 1577117704, "post_id": 59453257, "comment_id": 105097740, "body": "Ah, Option, of course! I never thought of using that here. This does indeed solve the problem. Thank you!"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1577094922, "creation_date": 1577094922, "answer_id": 59453257, "question_id": 59452193, "link": "https://stackoverflow.com/questions/59452193/difficulties-deserializing-xml-using-rust-and-serde-where-document-has-optional/59453257#59453257", "title": "Difficulties deserializing XML using Rust and Serde where document has optional subelements", "body": "<p><code>PATH</code> itself should be modeled as a struct with one optional field. This works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct DEFECT {\n    #[serde(default)]\n    pub SFA: SFA,\n    pub DEFECTCODE: String,\n    pub DESCRIPTION: String,\n    pub FUNCTION: String,\n    pub DECORATED: String,\n    pub FUNCLINE: String,\n    pub PATH: PATH,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct PATH {\n    SFA: Option&lt;SFA&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 136, "user_id": 7009097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/43622cfe7875d14cffb124cda4090616?s=128&d=identicon&r=PG&f=1", "display_name": "fny82", "link": "https://stackoverflow.com/users/7009097/fny82"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 687, "favorite_count": 0, "accepted_answer_id": 59453257, "answer_count": 1, "score": 1, "last_activity_date": 1577118060, "creation_date": 1577089884, "last_edit_date": 1577118060, "question_id": 59452193, "link": "https://stackoverflow.com/questions/59452193/difficulties-deserializing-xml-using-rust-and-serde-where-document-has-optional", "title": "Difficulties deserializing XML using Rust and Serde where document has optional subelements", "body": "<p>I'm very new to Rust, and am still trying to get the hang of working with it. It's cool, but I'm clearly missing something with an exercise I gave myself. For reference, I'm using rustc 1.39.0.</p>\n\n<p>I wanted to try to write a simple program to read the XML from MSBuild's code analysis, which outputs some fairly simple XML. The problem I think is that there is an element (<code>PATH</code>) which is <em>usually</em> empty, but sometimes can contain elements under it. The bigger problem is that I suck at Rust (and I don't usually deal with XML), and I'm not really sure how to correctly set up the structs I need for deserialization. I'm using Serde and quick_xml. When I had <code>PATH</code> set as a String and worked with XML that did not have an SFA element under PATH, my tests worked. But once I figured out how that tag was <em>supposed</em> to be used and updated my structs accordingly, I constantly get the error:</p>\n\n<pre><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Custom(\"missing field `FILEPATH`\")', src\\libcore\\result.rs:1165:5\n</code></pre>\n\n<p>...even if <em>all</em> of the defects in the test XML file have SFA element under PATH.</p>\n\n<p>The XML files I'm dealing with all look like this:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;DEFECTS&gt;\n  &lt;DEFECT&gt;\n    &lt;SFA&gt;\n      &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n      &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n      &lt;LINE&gt;8&lt;/LINE&gt;\n      &lt;COLUMN&gt;5&lt;/COLUMN&gt;\n    &lt;/SFA&gt;\n    &lt;DEFECTCODE&gt;26496&lt;/DEFECTCODE&gt;\n    &lt;DESCRIPTION&gt;The variable 'y' is assigned only once, mark it as const (con.4).&lt;/DESCRIPTION&gt;\n    &lt;FUNCTION&gt;main&lt;/FUNCTION&gt;\n    &lt;DECORATED&gt;main&lt;/DECORATED&gt;\n    &lt;FUNCLINE&gt;6&lt;/FUNCLINE&gt;\n    &lt;PATH&gt;&lt;/PATH&gt;\n  &lt;/DEFECT&gt;\n  &lt;DEFECT&gt;\n    &lt;SFA&gt;\n      &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n      &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n      &lt;LINE&gt;9&lt;/LINE&gt;\n      &lt;COLUMN&gt;5&lt;/COLUMN&gt;\n    &lt;/SFA&gt;\n    &lt;DEFECTCODE&gt;26496&lt;/DEFECTCODE&gt;\n    &lt;DESCRIPTION&gt;The variable 'z' is assigned only once, mark it as const (con.4).&lt;/DESCRIPTION&gt;\n    &lt;FUNCTION&gt;main&lt;/FUNCTION&gt;\n    &lt;DECORATED&gt;main&lt;/DECORATED&gt;\n    &lt;FUNCLINE&gt;6&lt;/FUNCLINE&gt;\n    &lt;PATH&gt;&lt;/PATH&gt;\n  &lt;/DEFECT&gt;\n&lt;/DEFECTS&gt;\n</code></pre>\n\n<p>In many cases, <code>PATH</code> is empty, but in some it contains its own <code>SFA</code> element:</p>\n\n<pre><code>  &lt;DEFECT&gt;\n    &lt;SFA&gt;\n      &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n      &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n      &lt;LINE&gt;9&lt;/LINE&gt;\n      &lt;COLUMN&gt;5&lt;/COLUMN&gt;\n    &lt;/SFA&gt;\n    &lt;DEFECTCODE&gt;26496&lt;/DEFECTCODE&gt;\n    &lt;DESCRIPTION&gt;The variable 'z' is assigned only once, mark it as const (con.4).&lt;/DESCRIPTION&gt;\n    &lt;FUNCTION&gt;main&lt;/FUNCTION&gt;\n    &lt;DECORATED&gt;main&lt;/DECORATED&gt;\n    &lt;FUNCLINE&gt;6&lt;/FUNCLINE&gt;\n    &lt;PATH&gt;\n      &lt;SFA&gt;\n        &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n        &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n        &lt;LINE&gt;12&lt;/LINE&gt;\n        &lt;COLUMN&gt;3&lt;/COLUMN&gt;\n      &lt;/SFA&gt;\n    &lt;/PATH&gt;\n  &lt;/DEFECT&gt;\n</code></pre>\n\n<p>Before I realized this, all of the fields in the DEFECT struct were set to String. That works correctly, assuming none of the defects in the XML file have subelements under PATH. When I changed it to SFA instead of String, it gives me the missing field error mentioned above. An example of the code I'm testing with:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate quick_xml;\nextern crate serde;\n\nuse std::default::Default;\nuse std::env;\nuse std::vec::Vec;\n\nuse quick_xml::de::from_str;\nuse serde::{Serialize, Deserialize};\n\n/*\n * Structs for the defect XML\n */\n\n#[derive(Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct DEFECTS {\n    #[serde(rename = \"DEFECT\", default)]\n    pub defects: Vec&lt;DEFECT&gt;,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct DEFECT {\n    #[serde(default)]\n    pub SFA: SFA,\n    pub DEFECTCODE: String,\n    pub DESCRIPTION: String,\n    pub FUNCTION: String,\n    pub DECORATED: String,\n    pub FUNCLINE: String,\n    #[serde(default)]\n    pub PATH: Vec&lt;SFA&gt;,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct SFA {\n    pub FILEPATH: String,\n    pub FILENAME: String,\n    pub LINE: String,\n    pub COLUMN: String,\n}\n\n/*\n * Main app code\n */\n\nfn main() {\n    // Expect the path to the XML file to be passed as the first and only argument\n    let args: Vec&lt;String&gt; = env::args().collect();\n    if args.len() != 2 {\n        panic!(\"Invalid argument count. Specify a single file to process.\");\n    }\n\n    let processing_file = &amp;args[1];\n    println!(\"Will attempt to process file: '{}'\", &amp;processing_file);\n\n    // Try to load the contents of the file\n    let file_content : String = match std::fs::read_to_string(&amp;processing_file) {\n        Ok(file_content) =&gt; file_content,\n        Err(e) =&gt; {\n            panic!(\"Failed to read file: '{}' -- {}\", &amp;processing_file, e);\n        }\n    };\n\n    // Now, try to deserialize the XML we have in file_content\n    let defect_list : DEFECTS = from_str(&amp;file_content).unwrap();\n\n    // Assuming the unwrap above didn't blow up, we should get a count here\n    println!(\"Retrieved {} defects from file '{}'\", defect_list.defects.len(), &amp;processing_file);\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"rust_xml_test\"\nversion = \"0.1.0\"\nauthors = [\"fny82\"]\nedition = \"2018\"\n\n[dependencies]\nquick-xml = { version = \"0.17\", features = [ \"serialize\" ] }\nserde = { version = \"1.0\", features = [ \"derive\" ] }\n</code></pre>\n\n<p><strong>Example output</strong></p>\n\n<pre><code>C:\\Development\\RustXmlTest&gt;cargo run -- \"c:\\development\\rustxmltest\\test3.xml\"\n   Compiling rust_xml_test v0.1.0 (C:\\Development\\RustXmlTest)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.56s\n     Running `target\\debug\\rust_xml_test.exe c:\\development\\rustxmltest\\test3.xml`\nWill attempt to process file: 'c:\\development\\rustxmltest\\test3.xml'\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Custom(\"missing field `FILEPATH`\")', src\\libcore\\result.rs:1165:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: process didn't exit successfully: `target\\debug\\rust_xml_test.exe c:\\development\\rustxmltest\\test3.xml` (exit code: 101)\n</code></pre>\n\n<p>I'm sure I'm doing something stupid, and part of that is probably that I'm getting ahead of myself with respect to the scope of the challenge vs. my current level of comprehension of working with Rust. Can anyone give me a hand in sorting out what I'm missing and doing wrong?</p>\n\n<p>Somewhat related: I've since learned that I can use the <code>rename</code> property in order to have my structs comply with Rust's naming conventions, but for now I didn't want to start messing with that until I got the underlying functionality working.</p>\n\n<p><strong>---- EDIT ----</strong></p>\n\n<p>For reference, with the correction from @edwardw the now-working code:</p>\n\n<pre><code>extern crate quick_xml;\nextern crate serde;\n\nuse std::default::Default;\nuse std::env;\nuse std::vec::Vec;\n\nuse quick_xml::de::from_str;\nuse serde::{Serialize, Deserialize};\n\n/*\n * Structs for the defect XML\n */\n\n#[derive(Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct DEFECTS {\n    #[serde(rename = \"DEFECT\", default)]\n    pub defects: Vec&lt;DEFECT&gt;,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct DEFECT {\n    #[serde(default)]\n    pub SFA: SFA,\n    pub DEFECTCODE: String,\n    pub DESCRIPTION: String,\n    pub FUNCTION: String,\n    pub DECORATED: String,\n    pub FUNCLINE: String,\n    pub PATH: PATH,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct SFA {\n    pub FILEPATH: String,\n    pub FILENAME: String,\n    pub LINE: String,\n    pub COLUMN: String,\n}\n\n#[derive(Default, Serialize, Deserialize, Debug)]\n#[allow(non_snake_case)]\npub struct PATH {\n    pub SFA: Option&lt;SFA&gt;,\n}\n\n/*\n * Main app code\n */\n\nfn main() {\n    // Expect the path to the XML file to be passed as the first and only argument\n    let args: Vec&lt;String&gt; = env::args().collect();\n    if args.len() != 2 {\n        panic!(\"Invalid argument count. Specify a single file to process.\");\n    }\n\n    let processing_file = &amp;args[1];\n    println!(\"Will attempt to process file: '{}'\", &amp;processing_file);\n\n    // Try to load the contents of the file\n    let file_content : String = match std::fs::read_to_string(&amp;processing_file) {\n        Ok(file_content) =&gt; file_content,\n        Err(e) =&gt; {\n            panic!(\"Failed to read file: '{}' -- {}\", &amp;processing_file, e);\n        }\n    };\n\n    // Now, try to deserialize the XML we have in file_content\n    let defect_list : DEFECTS = from_str(&amp;file_content).unwrap();\n\n    // Assuming the unwrap above didn't blow up, we should get a count here\n    println!(\"Retrieved {} defects from file '{}'\", defect_list.defects.len(), &amp;processing_file);\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>C:\\Development\\RustXmlTest&gt;cargo run -- \"c:\\development\\rustxmltest\\test1.xml\"\n   Compiling rust_xml_test v0.1.0 (C:\\Development\\RustXmlTest)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.66s\n     Running `target\\debug\\rust_xml_test.exe c:\\development\\rustxmltest\\test1.xml`\nWill attempt to process file: 'c:\\development\\rustxmltest\\test1.xml'\nRetrieved 2 defects from file 'c:\\development\\rustxmltest\\test1.xml'\n</code></pre>\n\n<p>where test1.xml contains:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;DEFECTS&gt;\n  &lt;DEFECT&gt;\n    &lt;SFA&gt;\n      &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n      &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n      &lt;LINE&gt;8&lt;/LINE&gt;\n      &lt;COLUMN&gt;5&lt;/COLUMN&gt;\n    &lt;/SFA&gt;\n    &lt;DEFECTCODE&gt;26496&lt;/DEFECTCODE&gt;\n    &lt;DESCRIPTION&gt;The variable 'y' is assigned only once, mark it as const (con.4).&lt;/DESCRIPTION&gt;\n    &lt;FUNCTION&gt;main&lt;/FUNCTION&gt;\n    &lt;DECORATED&gt;main&lt;/DECORATED&gt;\n    &lt;FUNCLINE&gt;6&lt;/FUNCLINE&gt;\n    &lt;PATH&gt;&lt;/PATH&gt;\n  &lt;/DEFECT&gt;\n  &lt;DEFECT&gt;\n    &lt;SFA&gt;\n      &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n      &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n      &lt;LINE&gt;9&lt;/LINE&gt;\n      &lt;COLUMN&gt;5&lt;/COLUMN&gt;\n    &lt;/SFA&gt;\n    &lt;DEFECTCODE&gt;26496&lt;/DEFECTCODE&gt;\n    &lt;DESCRIPTION&gt;The variable 'z' is assigned only once, mark it as const (con.4).&lt;/DESCRIPTION&gt;\n    &lt;FUNCTION&gt;main&lt;/FUNCTION&gt;\n    &lt;DECORATED&gt;main&lt;/DECORATED&gt;\n    &lt;FUNCLINE&gt;6&lt;/FUNCLINE&gt;\n    &lt;PATH&gt;\n      &lt;SFA&gt;\n        &lt;FILEPATH&gt;c:\\projects\\source\\repos\\defecttest\\defecttest&lt;/FILEPATH&gt;\n        &lt;FILENAME&gt;source.cpp&lt;/FILENAME&gt;\n        &lt;LINE&gt;12&lt;/LINE&gt;\n        &lt;COLUMN&gt;3&lt;/COLUMN&gt;\n      &lt;/SFA&gt;\n    &lt;/PATH&gt;\n  &lt;/DEFECT&gt;\n&lt;/DEFECTS&gt;\n</code></pre>\n"}, {"tags": ["rust", "reference-counting", "lifetime-scoping"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1577134380, "post_id": 59449444, "comment_id": 105103398, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59449444/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1577372416, "post_id": 59449709, "comment_id": 105154433, "body": "How can rayon make this guarantee when core Rust can not? Is Rayon internally using an Arc?"}, {"owner": {"reputation": 861, "user_id": 4085230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd9e0208894241fb67b47aafc4e316ff?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Rousskov", "link": "https://stackoverflow.com/users/4085230/mark-rousskov"}, "reply_to_user": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1577386321, "post_id": 59449709, "comment_id": 105158930, "body": "std could make this guarantee, but currently has no such function (leaving to libraries like rayon and crossbeam). Rayon guarantees that the thread joins before the scope function exits (whether due to unwinding or normal return); because of <code>mem::forget</code> this cannot be done with a RAII-based API in the return type."}], "tags": [], "owner": {"reputation": 861, "user_id": 4085230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd9e0208894241fb67b47aafc4e316ff?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Rousskov", "link": "https://stackoverflow.com/users/4085230/mark-rousskov"}, "is_accepted": false, "score": 2, "last_activity_date": 1577134467, "last_edit_date": 1577134467, "creation_date": 1577069738, "answer_id": 59449709, "question_id": 59449444, "link": "https://stackoverflow.com/questions/59449444/why-doesnt-rayon-require-arc/59449709#59449709", "title": "Why doesn&#39;t Rayon require Arc&lt;_&gt;?", "body": "<p>Rayon can guarantee that the iterator does not outlive the current stack frame, unlike what I assume is <code>thread::spawn</code> in the first code example. Specifically, <code>par_iter</code> under the hood uses something like Rayon's <a href=\"https://docs.rs/rayon/1.3.0/rayon/fn.scope.html\" rel=\"nofollow noreferrer\"><code>scope</code></a> function, which allows one to spawn a unit of work that's \"attached\" to the stack and will join before the stack ends.</p>\n\n<p>Because Rayon can guarantee (via lifetime bounds, from the user's perspective) that the tasks/threads are joined before the function calling <code>par_iter</code> exits, it can provide this API which is more ergonomic to use than the standard library's <code>thread::spawn</code>.</p>\n\n<p>Rayon expands on this in the <a href=\"https://docs.rs/rayon/1.3.0/rayon/fn.scope.html#accessing-stack-data\" rel=\"nofollow noreferrer\"><code>scope</code> function's documentation</a>.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 349, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1603219414, "creation_date": 1577066381, "last_edit_date": 1603219414, "question_id": 59449444, "link": "https://stackoverflow.com/questions/59449444/why-doesnt-rayon-require-arc", "title": "Why doesn&#39;t Rayon require Arc&lt;_&gt;?", "body": "<p>On page 465 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\">Programming Rust</a> you can find the code and explanation (emphasis added by me)</p>\n\n<blockquote>\n<pre><code>use std::sync::Arc;\n\nfn process_files_in_parallel(filenames: Vec&lt;String&gt;,\n                             glossary: Arc&lt;GigabyteMap&gt;)\n    -&gt; io::Result&lt;()&gt;\n{\n    ...\n    for worklist in worklists {\n        // This call to .clone() only clones the Arc and bumps the\n        // reference count. It does not clone the GigabyteMap.\n        let glossary_for_child = glossary.clone();\n        thread_handles.push(\n            spawn(move || process_files(worklist, &amp;glossary_for_child))\n        );\n    }\n    ...\n}\n</code></pre>\n  \n  <p>We have changed the type of glossary: to run the analysis in parallel, the caller must pass in an <code>Arc&lt;GigabyteMap&gt;</code>, a smart pointer to a <code>GigabyteMap</code> that\u2019s been moved into the heap, by doing <code>Arc::new(giga_map)</code>. When we call glossary.clone(), we are making a copy of the <code>Arc</code> smart pointer, not the whole <code>GigabyteMap</code>. This amounts to incrementing a reference count. With this change, the program compiles and runs, because it no longer depends on reference lifetimes. <strong>As long as any thread owns an <code>Arc&lt;GigabyteMap&gt;</code>, it will keep the map alive, even if the parent thread bails out early. There won\u2019t be any data races, because data in an <code>Arc</code> is immutable.</strong></p>\n</blockquote>\n\n<p>In the next section they show this rewritten with Rayon,</p>\n\n<blockquote>\n<pre><code>extern crate rayon;\n\nuse rayon::prelude::*;\n\nfn process_files_in_parallel(filenames: Vec&lt;String&gt;, glossary: &amp;GigabyteMap)\n    -&gt; io::Result&lt;()&gt;\n{\n    filenames.par_iter()\n        .map(|filename| process_file(filename, glossary))\n        .reduce_with(|r1, r2| {\n            if r1.is_err() { r1 } else { r2 }\n        })\n        .unwrap_or(Ok(()))\n}\n</code></pre>\n</blockquote>\n\n<p>You can see in the section rewritten to use Rayon that it accepts <code>&amp;GigabyteMap</code> rather than <code>Arc&lt;GigabyteMap&gt;</code>. They don't explain how this works though. Why doesn't  Rayon require <code>Arc&lt;GigabyteMap&gt;</code>? How does Rayon get away with accepting a direct reference?</p>\n"}, {"tags": ["rust", "blockchain", "smartcontracts", "nearprotocol"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1577085824, "post_id": 59448694, "comment_id": 105085141, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what library you are using or what version. Moreover, what&#39;s a &quot;local testnet&quot; or a &quot;smart contract&quot;? And what kind of server are you running?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1577086064, "post_id": 59448694, "comment_id": 105085209, "body": "The issue <i>probably</i> comes from what you are putting in your <code>json!</code>: you&#39;re sending a list containing a single string, but I guess you probably should send an object with a <code>proof</code> field containing the string."}, {"owner": {"reputation": 39, "user_id": 12581798, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21715fe56516a1d2ea92d8d7363e9f90?s=128&d=identicon&r=PG&f=1", "display_name": "kaiba42", "link": "https://stackoverflow.com/users/12581798/kaiba42"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1577087005, "post_id": 59448694, "comment_id": 105085473, "body": "sorry for the lack of context or a reproducible example. This issue comes from working with <a href=\"https://github.com/nearprotocol/nearcore\" rel=\"nofollow noreferrer\">github.com/nearprotocol/nearcore</a>. I&#39;m using v0.3.7 of near-bindgen, and the master branch of nearcore. Unfortunately reproducing this result involves quite a bit of setup, detailed here <a href=\"https://docs.nearprotocol.com/docs/local-setup/local-dev-node\" rel=\"nofollow noreferrer\">docs.nearprotocol.com/docs/local-setup/local-dev-node</a>."}, {"owner": {"reputation": 39, "user_id": 12581798, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21715fe56516a1d2ea92d8d7363e9f90?s=128&d=identicon&r=PG&f=1", "display_name": "kaiba42", "link": "https://stackoverflow.com/users/12581798/kaiba42"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1577087112, "post_id": 59448694, "comment_id": 105085508, "body": "The server I am running is built using <a href=\"https://github.com/seanmonstar/warp\" rel=\"nofollow noreferrer\">github.com/seanmonstar/warp</a>. It is effectively a JSON-RPC server."}, {"owner": {"reputation": 1559, "user_id": 884962, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfd59355c6fa6b7b7e23c351249525a8?s=128&d=identicon&r=PG", "display_name": "ilblackdragon", "link": "https://stackoverflow.com/users/884962/ilblackdragon"}, "edited": false, "score": 0, "creation_date": 1591351063, "post_id": 59448694, "comment_id": 110028537, "body": "@kaiba42 is this still an issue with current near-rust-sdk 0.9.0+ and nearcore 1.0.0+?"}], "answers": [{"tags": [], "owner": {"reputation": 1559, "user_id": 884962, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bfd59355c6fa6b7b7e23c351249525a8?s=128&d=identicon&r=PG", "display_name": "ilblackdragon", "link": "https://stackoverflow.com/users/884962/ilblackdragon"}, "is_accepted": false, "score": 0, "last_activity_date": 1591734306, "creation_date": 1591734306, "answer_id": 62291262, "question_id": 59448694, "link": "https://stackoverflow.com/questions/59448694/unhandled-rejection-chainerrmissing-field-proof/62291262#62291262", "title": "Unhandled rejection: ChainErr(&quot;missing field `proof`&quot;)", "body": "<p>This problem existed in an old version of nearcore and should be solved in 1.0.0+.</p>\n"}], "owner": {"reputation": 39, "user_id": 12581798, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21715fe56516a1d2ea92d8d7363e9f90?s=128&d=identicon&r=PG&f=1", "display_name": "kaiba42", "link": "https://stackoverflow.com/users/12581798/kaiba42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1591734306, "creation_date": 1577055805, "question_id": 59448694, "link": "https://stackoverflow.com/questions/59448694/unhandled-rejection-chainerrmissing-field-proof", "title": "Unhandled rejection: ChainErr(&quot;missing field `proof`&quot;)", "body": "<p>I am running a local testnet with a single validator using docker. After deploying a smart contract written in Rust to the chain, I call one of the contract's methods from a webserver (also written in Rust). The call is made by building a SignedTransaction (from <code>near_primitives::transaction::*</code>), and broadcasting it to the network via JSON-RPC:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const NEAR_NODE: &amp;'static str = \"http://localhost:3030\";\n\nmacro_rules! json_reqwest {\n    ($req:expr =&gt; $client:ident) =&gt; {\n        {\n            let res = $client.post(NEAR_NODE)\n                .json(&amp;$req)\n                .send()\n                .await\n                .map_err(|e| e.to_string())?\n                .json::&lt;Response&gt;()\n                .await\n                .map_err(|e| e.to_string())?;\n            serde_json::from_value(res.result.map_err(|e| e.message)?)\n                .map_err(|e| e.to_string())?\n        }\n    };\n}\n\nasync fn broadcast_tx(client: &amp;Client, signed_tx: &amp;mut SignedTransaction) -&gt; Result&lt;FinalExecutionOutcomeView, String&gt; {\n    signed_tx.init();\n    println!(\"NEAR Tx hash: {}\", signed_tx.get_hash());\n    let tx = signed_tx.try_to_vec().map_err(|e| e.to_string())?;\n    Ok(json_reqwest!(Message::request(\"broadcast_tx_commit\".to_string(), Some(json!([to_base64(&amp;tx)]))) =&gt; client))\n}\n</code></pre>\n\n<p>This is the response from the network: </p>\n\n<pre><code>Unhandled rejection: ChainErr(\"missing field `proof`\")\n</code></pre>\n\n<p>What does this error mean, and how can I address it?</p>\n\n<p>Thanks for your help!</p>\n"}, {"tags": ["python", "rust"], "comments": [{"owner": {"reputation": 209014, "user_id": 125816, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f5aa40b1e7a95599c7a19451f88ff3a?s=128&d=identicon&r=PG", "display_name": "Sergio Tulentsev", "link": "https://stackoverflow.com/users/125816/sergio-tulentsev"}, "edited": false, "score": 1, "creation_date": 1577044803, "post_id": 59447639, "comment_id": 105077798, "body": "<code>flush=True</code> - that&#39;s the key difference between the two snippets. You need to find how to do this bit in rust (flush stdout)"}, {"owner": {"reputation": 4500, "user_id": 8858995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d1981ec5dd8311a79e695d512716ef?s=128&d=identicon&r=PG&f=1", "display_name": "Ibraheem Ahmed", "link": "https://stackoverflow.com/users/8858995/ibraheem-ahmed"}, "edited": false, "score": 1, "creation_date": 1577045054, "post_id": 59447639, "comment_id": 105077864, "body": "Try using <code>stdout().flush();</code>"}], "answers": [{"comments": [{"owner": {"reputation": 103, "user_id": 6580285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5BMay.jpg?s=128&g=1", "display_name": "Alexound", "link": "https://stackoverflow.com/users/6580285/alexound"}, "edited": false, "score": 0, "creation_date": 1577046480, "post_id": 59447701, "comment_id": 105078177, "body": "Thanks, great one. Especially the <code>#[allow(unused_must_use)]</code> line, which enables compiler to ignore warning. It&#39;s also nice you&#39;ve included required libraries: <code>stdout</code> and <code>Write</code>."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 103, "user_id": 6580285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5BMay.jpg?s=128&g=1", "display_name": "Alexound", "link": "https://stackoverflow.com/users/6580285/alexound"}, "edited": false, "score": 0, "creation_date": 1577085307, "post_id": 59447701, "comment_id": 105084976, "body": "@Alexound You should not use <code>unused_must_use</code> in this case. Either handle the <code>Result</code> or call <code>stdout().flush().unwrap()</code>. <code>must_use</code> exists for a good reason and there are better ways to handle it than to disable it for your whole function."}], "tags": [], "owner": {"reputation": 375, "user_id": 8424102, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/790439c206f29a4e82ddd6b5ab8006d1?s=128&d=identicon&r=PG&f=1", "display_name": "Mahmoud Farouq", "link": "https://stackoverflow.com/users/8424102/mahmoud-farouq"}, "is_accepted": false, "score": 2, "last_activity_date": 1577047981, "last_edit_date": 1577047981, "creation_date": 1577045297, "answer_id": 59447701, "question_id": 59447639, "link": "https://stackoverflow.com/questions/59447639/rust-print-out-string-character-by-character/59447701#59447701", "title": "Rust: print out string character by character", "body": "<p>You need to find how to <code>flush</code> in rust, your code should look like this</p>\n\n<pre><code>use std::time::Duration;\nuse std::thread::sleep;\nuse std::io::stdout;\nuse std::io::Write;\n\n#[allow(unused_must_use)]\nfn main() {\n\n   let string = \"You are the Semicolon to my Statements.\";\n\n   for c in string.chars() {\n      print!(\"{}\", c);\n      stdout().flush();\n      sleep(Duration::from_millis(10));\n   };\n\n   println!();\n\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 103, "user_id": 6580285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5BMay.jpg?s=128&g=1", "display_name": "Alexound", "link": "https://stackoverflow.com/users/6580285/alexound"}, "edited": false, "score": 0, "creation_date": 1577046904, "post_id": 59447726, "comment_id": 105078271, "body": "This code won&#39;t work without including required libraries."}], "tags": [], "owner": {"reputation": 4500, "user_id": 8858995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d1981ec5dd8311a79e695d512716ef?s=128&d=identicon&r=PG&f=1", "display_name": "Ibraheem Ahmed", "link": "https://stackoverflow.com/users/8858995/ibraheem-ahmed"}, "is_accepted": false, "score": 0, "last_activity_date": 1577047972, "last_edit_date": 1577047972, "creation_date": 1577045566, "answer_id": 59447726, "question_id": 59447639, "link": "https://stackoverflow.com/questions/59447639/rust-print-out-string-character-by-character/59447726#59447726", "title": "Rust: print out string character by character", "body": "<p>You need to add <code>stdout().flush();</code> in your loop. This is the Rust synonym of Python's <code>flush=True</code>. Try the following code.    </p>\n\n<pre><code>use std::io::stdout;\nuse std::io::Write;    \nuse std::time::Duration;\nuse std::thread::sleep;\n\nfn main() {\n\n   let string = \"You are the Semicolon to my Statements.\";\n\n   for c in string.chars() {\n      print!(\"{}\", c);\n      stdout().flush();\n      sleep(Duration::from_millis(100));\n   };\n\n   println!();\n\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 10159, "user_id": 306739, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/mILId.jpg?s=128&g=1", "display_name": "stan0", "link": "https://stackoverflow.com/users/306739/stan0"}, "is_accepted": false, "score": 1, "last_activity_date": 1577099152, "last_edit_date": 1577099152, "creation_date": 1577098675, "answer_id": 59454142, "question_id": 59447639, "link": "https://stackoverflow.com/questions/59447639/rust-print-out-string-character-by-character/59454142#59454142", "title": "Rust: print out string character by character", "body": "<p>I would probably go with more functional and/or idiomatic <code>Rust</code>:</p>\n\n<pre><code>fn main() {\n    let test = \"Test\";\n\n    test.chars()\n        .for_each(|c| print!(\"{}\", c));\n}\n</code></pre>\n\n<p>I did not experiment with <code>flush()</code> but in case you really need it, you could probably add it and test with it:</p>\n\n<pre><code>use std::io::stdout;\nuse std::io::Write; \n\nfn main() {\n    let test = \"Test\";\n\n    test.chars()\n        .for_each(|c|  {\n            print!(\"{}\", c);\n            stdout().flush(); // this is a Result and should be handled properly\n        });\n}\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 6580285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5BMay.jpg?s=128&g=1", "display_name": "Alexound", "link": "https://stackoverflow.com/users/6580285/alexound"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1577099152, "creation_date": 1577044719, "last_edit_date": 1577048304, "question_id": 59447639, "link": "https://stackoverflow.com/questions/59447639/rust-print-out-string-character-by-character", "title": "Rust: print out string character by character", "body": "<p>The task it to print the text of the string to the terminal, character by character, using Rust.</p>\n\n<p>Here is my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Duration;\nuse std::thread::sleep;\n\nfn main() {\n    let string = \"You are the Semicolon to my Statements.\";\n\n    for c in string.chars() {\n        print!(\"{}\", c);\n        sleep(Duration::from_millis(100));\n    }\n\n    println!();\n}\n</code></pre>\n\n<p>When running my code, the string only prints to the terminal after the loop is completed.</p>\n\n<p>How can I print the string character by character?</p>\n\n<p>P.S. Here is a working example in Python 3:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import time\n\nstring = \"You are the Semicolon to my Statements.\"\n\nfor i in string:\n    print(i, end='', flush=True)\n    time.sleep(0.1)\n\nprint()\n</code></pre>\n"}, {"tags": ["rust", "nonblocking", "channel", "peek"], "answers": [{"comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 2, "creation_date": 1577052296, "post_id": 59448122, "comment_id": 105079365, "body": "<code>try_recv</code> will consume the data. OP wants a solution where the data is not consumed."}], "tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": -1, "last_activity_date": 1577050039, "last_edit_date": 1577050039, "creation_date": 1577049711, "answer_id": 59448122, "question_id": 59447577, "link": "https://stackoverflow.com/questions/59447577/how-to-peek-on-channels-without-blocking-and-still-being-able-to-detect-hangup/59448122#59448122", "title": "How to peek on channels without blocking and still being able to detect hangup?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Receiver.html#method.try_recv\" rel=\"nofollow noreferrer\">try_recv</a> to do what you want.</p>\n\n<p>It returns a <code>Result&lt;T, TryRecvError&gt;</code> and <code>TryRecvError</code> can be either <code>Empty</code> or <code>Disconnected</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match my_receiver.try_recv() {\n    Ok(data) =&gt; {/* handle data */}\n    Err(TryRecvError::Disconnected) =&gt; {/* handle sender disconnected */}\n    Err(TryRecvError::Empty) =&gt; {/* handle no data available yet */}\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1577086369, "post_id": 59448553, "comment_id": 105085299, "body": "You don&#39;t need the nested <code>match</code>: your top-level one can match directly on <code>Some (Ok (data))</code> and <code>Some (Err (_))</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=398418924821ee4921958693a21a7168\" rel=\"nofollow noreferrer\">playground</a>)."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1577088088, "post_id": 59448553, "comment_id": 105085773, "body": "This does work. Thank you :) Do you think there is any chance to have this integrated to the standard library?"}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1577092089, "post_id": 59448553, "comment_id": 105087020, "body": "Thanks @Jmb. I originally had it that way but got the syntax slightly wrong (see edits if you are interested)."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1577092327, "post_id": 59448553, "comment_id": 105087109, "body": "@iago-lito I doubt they would make a non backward compatible change like this. You could always propose it though!"}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 2, "last_activity_date": 1577092181, "last_edit_date": 1577092181, "creation_date": 1577054217, "answer_id": 59448553, "question_id": 59447577, "link": "https://stackoverflow.com/questions/59447577/how-to-peek-on-channels-without-blocking-and-still-being-able-to-detect-hangup/59448553#59448553", "title": "How to peek on channels without blocking and still being able to detect hangup?", "body": "<p>The <code>try_iter()</code> method returns an iterator that discards the <code>Error</code> values, so you cannot differentiate between the cases.</p>\n\n<p>You could create your own iterator which iterates over the <code>Result</code> rather than discarding error values:</p>\n\n<pre><code>pub struct TryIterResult&lt;'a, T: 'a&gt; {\n    rx: &amp;'a Receiver&lt;T&gt;,\n}\n\npub fn try_iter_result&lt;'a, T&gt;(rx: &amp;'a Receiver&lt;T&gt;) -&gt; TryIterResult&lt;'a, T&gt; {\n    TryIterResult { rx: &amp;rx }\n}\n\nimpl&lt;'a, T&gt; Iterator for TryIterResult&lt;'a, T&gt; {\n    type Item = Result&lt;T, TryRecvError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Result&lt;T, TryRecvError&gt;&gt; {\n        match self.rx.try_recv() {\n            Ok(data) =&gt; Some(Ok(data)),\n            Err(TryRecvError::Empty) =&gt; Some(Err(TryRecvError::Empty)),\n            Err(TryRecvError::Disconnected) =&gt; None\n        }\n    }\n}\n</code></pre>\n\n<p>You would then be able to get a peekable iterator which would return three possible conditions:</p>\n\n<pre><code>match try_iter_result(my_receiver).peekable().peek() {\n    Some(Ok(data)) =&gt;{ /* there is data */},\n    Some(Err(_)) =&gt; { /* nothing available right now */ },\n    None =&gt; {/* disconnected */}\n}    \n</code></pre>\n"}], "owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 630, "favorite_count": 0, "accepted_answer_id": 59448553, "answer_count": 2, "score": 2, "last_activity_date": 1577092181, "creation_date": 1577044225, "question_id": 59447577, "link": "https://stackoverflow.com/questions/59447577/how-to-peek-on-channels-without-blocking-and-still-being-able-to-detect-hangup", "title": "How to peek on channels without blocking and still being able to detect hangup?", "body": "<p>According to the doc of <a href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Receiver.html#method.try_iter\" rel=\"nofollow noreferrer\">.try_iter()</a> method of the <code>Receiver</code> end of a Rust <code>std::mpsc::channel</code>, I understand that this iterator either yield \"None\":</p>\n\n<ul>\n<li>when there is no data in the channel</li>\n<li>or when the other end of the channel has hung up.</li>\n</ul>\n\n<p>In my case, I would like to <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek\" rel=\"nofollow noreferrer\"><code>peek</code></a> into the channel, without blocking, so as to determinate whether:</p>\n\n<ul>\n<li>there is data (but <em>without</em> consuming it), or</li>\n<li>there is no data, or</li>\n<li>the channel has hung up.</li>\n</ul>\n\n<p>The problem is that if I..</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match my_receiver.try_iter().peekable().peek() {\n    Some(data) =&gt; {/* there is data */}\n    None =&gt; {/* there is no data, but there may be later.. or maybe not, because the channel has maybe hung up, I can't tell! */}\n}\n</code></pre>\n\n<p>.. there are only two cases I can discriminate.</p>\n\n<p>How can I peek into the <code>receiver</code> end of a channel and discriminate between those three possible outcomes without blocking or consuming the data when there is some?</p>\n"}, {"tags": ["c", "pointers", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1577044725, "post_id": 59447449, "comment_id": 105077779, "body": "The documentation of the function says you must pass it a 255 bytes string. You pass it a 1 byte string."}], "answers": [{"comments": [{"owner": {"reputation": 109, "user_id": 11128127, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13efa329b269f6353dc2f3ed41c24c63?s=128&d=identicon&r=PG&f=1", "display_name": "St&#233;phane", "link": "https://stackoverflow.com/users/11128127/st%c3%a9phane"}, "edited": false, "score": 0, "creation_date": 1577139385, "post_id": 59461733, "comment_id": 105104582, "body": "Thank you for helping me ! I Found the solution in my book just before (I have search for &quot;Array&quot; and I don&#39;t find the term because the name of french is &quot;Tableau&quot;). But still doesn&#39;t work for now (Still the same error but with 255 char) ! I go now test your solution"}, {"owner": {"reputation": 109, "user_id": 11128127, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13efa329b269f6353dc2f3ed41c24c63?s=128&d=identicon&r=PG&f=1", "display_name": "St&#233;phane", "link": "https://stackoverflow.com/users/11128127/st%c3%a9phane"}, "edited": false, "score": 0, "creation_date": 1577222216, "post_id": 59461733, "comment_id": 105125308, "body": "Thank you very much, it works.  i wish you a merry Xmas. Thanks for your help, the raw needs to be : pub fn swe_version(s_version: *mut c_char) -&gt; *mut c_char; (and not an array of c_char)"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1577139638, "last_edit_date": 1577139638, "creation_date": 1577138731, "answer_id": 59461733, "question_id": 59447449, "link": "https://stackoverflow.com/questions/59447449/problem-without-char-c-char-in-rust-function-with-a-message-not-helpful/59461733#59461733", "title": "Problem without *char (c_char) in rust function with a message not helpful", "body": "<p>The documentation says that you need an array of 255 characters, so declare just that. And since you are going to change those chars do not forget to add <code>mut</code>:</p>\n\n<pre><code>let mut version = [0; 255];\n</code></pre>\n\n<p>Then you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.as_mut_ptr\" rel=\"nofollow noreferrer\"><code>slice::as_mut_ptr()</code></a> to get the raw pointer and call the external function:</p>\n\n<pre><code>unsafe {\n    swe_version(version.as_mut_ptr());\n}\n</code></pre>\n\n<p>Being a C function, probably it will fill the array with a NUL-terminated string. If that is the case, you can get that easily using <a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_ptr\" rel=\"nofollow noreferrer\"><code>CStr::from_ptr()</code></a>:</p>\n\n<pre><code>let mut version = [0; 255];\nlet version = unsafe {\n    let p = version.as_mut_ptr();\n    swe_version(p);\n    std::ffi::CStr::from_ptr(p)\n};\n</code></pre>\n"}], "owner": {"reputation": 109, "user_id": 11128127, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13efa329b269f6353dc2f3ed41c24c63?s=128&d=identicon&r=PG&f=1", "display_name": "St&#233;phane", "link": "https://stackoverflow.com/users/11128127/st%c3%a9phane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "accepted_answer_id": 59461733, "answer_count": 1, "score": 1, "last_activity_date": 1577213368, "creation_date": 1577043164, "last_edit_date": 1577213368, "question_id": 59447449, "link": "https://stackoverflow.com/questions/59447449/problem-without-char-c-char-in-rust-function-with-a-message-not-helpful", "title": "Problem without *char (c_char) in rust function with a message not helpful", "body": "<p>I've built a link with my c library and the call of a specific function gives me a non-helpful error message (probably because i'm using unsafe {} decorator).</p>\n\n<p>The message is: </p>\n\n<blockquote>\n  <p>./build.sh: line 7: 44630 Bus error: 10 cargo run --example\n  ferris-astro-example</p>\n</blockquote>\n\n<p>and the line 7 is </p>\n\n<pre><code>cargo run --example ferris-astro-example\n</code></pre>\n\n<p>Until now, with this C library, I compiled without error for 2 other functions, but for the last one it doesn't work.</p>\n\n<p>The code in the documentation interface of the C library is :</p>\n\n<pre><code>char *swe_version(char *svers);\n\n/* svers is a string variable with sufficient space to contain the version number (255 char) */\n</code></pre>\n\n<p>The doc says:</p>\n\n<blockquote>\n  <p>The function returns a pointer to the string svers, i.e. to the version number of the Swiss Ephemeris that your software\n  is using.</p>\n</blockquote>\n\n<p>And that is what I have written in rust:</p>\n\n<pre><code>  use std::os::raw::c_char;                                                                                                                                                                 \n  #[link(name = \"swe\")]                                                                             \n  extern \"C\" {                                                                                      \n     // ... (other function)\n     pub fn swe_version(s_version: *mut c_char) -&gt; *mut c_char;\n  }\n</code></pre>\n\n<p>and then the code is called by</p>\n\n<pre><code>let version: *mut c_char = \"\\0\".as_bytes().as_ptr() as *mut c_char;\nunsafe {\n    // ... \n    // Get the version\n    raw::swe_version(version);\n    // ...\n    }\n// ...\n</code></pre>\n\n<p>I'm sure that the error is a mistake of version because no </p>\n\n<pre><code>version = raw::swe_version(version)\n</code></pre>\n\n<p><strong>EDIT some hour later...</strong></p>\n\n<p>I found a solution to compile without error :</p>\n\n<pre><code>use std::os::raw::c_uchar;\nuse std::ptr;\nmod raw;\npub fn test_lib() {\n    let version = ptr::null_mut() as *mut c_uchar;\n    unsafe {\n        raw::swe_version(&amp;version);\n        // Free memory\n        raw::swe_close();\n    }\n}\n</code></pre>\n\n<p>And raw :</p>\n\n<pre><code>use std::os::raw::c_uchar;\n\n#[link(name = \"swe\")]\nextern \"C\" {\n    // pub fn swe_test(path: *const c_char); // swe_test try\n    // pub fn swe_set_ephe_path(path: *const c_uchar);\n    /// Version\n    pub fn swe_version(s_version: &amp;*mut c_uchar) -&gt; *mut c_uchar;\n    /// Free memory\n    pub fn swe_close();\n}\n</code></pre>\n\n<p>Thank you <em>carton</em> for helping, the debugger says me the same :</p>\n\n<pre><code>&lt;read memory from 0x38302e32 failed (0 of 1 bytes read)&gt;\n</code></pre>\n\n<p>I don\u2019t find the solution on internet/book to define an array of 255 c_uchar.</p>\n\n<p>I tried cast with *mut [c_uchar] and * mut Vec without success.</p>\n\n<p>But c_uchar is unsigned 0 to 255 ? (before I used c_char) and c_schar is -128 - > 128</p>\n\n<p><strong>Edit 2</strong></p>\n\n<p>I can't get work your code and some variations.</p>\n\n<p>I'm not sure if the array [0, 255] is the good solution, this gives me an array of integer</p>\n\n<p>This code works witouth break/segemant fault:</p>\n\n<pre><code>use std::os::raw::c_char;\nuse std::ptr;\nmod raw;\npub fn test_lib() {\n    let version = ptr::null_mut() as *mut [c_char; 255];\n    unsafe {\n        raw::swe_version(&amp;version);\n        // Free memory\n        raw::swe_close();\n    }\n}\n</code></pre>\n\n<pre><code>use std::os::raw::c_char;\n\n#[link(name = \"swe\")]\nextern \"C\" {\n    /// Version\n    pub fn swe_version(s_version: &amp;*mut [c_char; 255]) -&gt; *mut [c_char; 255];\n    /// Free memory\n    pub fn swe_close();\n}\n</code></pre>\n\n<p>But I can't find a way to puti the variable \"version\" in a CStr or CString...</p>\n\n<p>In debugger I have this in version after raw::swe_version(&amp;version)</p>\n\n<pre><code>version: &lt;invalid adress&gt;\n[0]: &lt;read memory from 0x38302e32 failed (0 of 1 bytes read)&gt;\n[1]: &lt;read memory from 0x38302e33 failed (0 of 1 bytes read)&gt;\n[2]: &lt;read memory from 0x38302e34 failed (0 of 1 bytes read)&gt;\n[3]: &lt;read memory from 0x38302e35 failed (0 of 1 bytes read)&gt;\nand ... the same until [255]\n</code></pre>\n\n<p>With your solution <em>rodrigo</em></p>\n\n<pre><code>use std::ffi::CStr;\nmod raw;\npub fn test_lib() {\n    let mut version = [0; 255];\n    let v = unsafe {\n        let p = version.as_mut_ptr();\n        raw::swe_version(p);\n        CStr::from_ptr(p)\n    };\n}\n</code></pre>\n\n<p>I have an error on line:</p>\n\n<blockquote>\n  <p>raw::swe_version(p)</p>\n</blockquote>\n\n<p>With this in my editor:</p>\n\n<blockquote>\n  <p>1 src/lib.rs|13 col 26 error| mismatched types expected array of 255 elements, found integer note: expected type <code>*mut [i8; 255]</code> found type <code>*mut {integer}</code> [E0308]</p>\n</blockquote>\n"}, {"tags": ["rust", "alias", "move", "ownership-semantics"], "answers": [{"comments": [{"owner": {"reputation": 1152, "user_id": 729775, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/70ec20c66713dc2fe7ce050263961685?s=128&d=identicon&r=PG", "display_name": "Ranjit Jhala", "link": "https://stackoverflow.com/users/729775/ranjit-jhala"}, "edited": false, "score": 0, "creation_date": 1577144394, "post_id": 59447553, "comment_id": 105105606, "body": "Thanks, makes much more sense! I thought I had the latest version, clearly not, will update."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1577044363, "last_edit_date": 1577044363, "creation_date": 1577044023, "answer_id": 59447553, "question_id": 59447283, "link": "https://stackoverflow.com/questions/59447283/mutating-a-structs-fields-after-a-move/59447553#59447553", "title": "Mutating a struct&#39;s fields after a move", "body": "<p>This is now forbidden.</p>\n\n<p>It used to be allowed. However this was an error in the old borrow checker, and it has been made a warning then an error with the introduction of the new borrow checker (NLL).</p>\n\n<p>For example, with <code>rustc 1.39.0</code> and the 2015 edition you get the following warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning[E0382]: assign to part of moved value: `p1`\n --&gt; a.rs:8:5\n  |\n6 |     let mut p1 = Point { cx: 100 };\n  |         ------ move occurs because `p1` has type `Point`, which does not implement the `Copy` trait\n7 |     let p2 = p1;\n  |              -- value moved here\n8 |     p1.cx = 5000;\n  |     ^^^^^^^^^^^^ value partially assigned here after move\n  |\n  = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n  = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n  = note: for more information, try `rustc --explain E0729`\n</code></pre>\n\n<p><code>rustc 1.40.0</code> turned it into an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: assign to part of moved value: `p1`\n --&gt; src/main.rs:7:5\n  |\n5 |     let mut p1 = Point { cx: 100 };\n  |         ------ move occurs because `p1` has type `Point`, which does not implement the `Copy` trait\n6 |     let p2 = p1;\n  |              -- value moved here\n7 |     p1.cx = 5000;\n  |     ^^^^^^^^^^^^ value partially assigned here after move\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Note also that this was an error with the 2018 edition for a longer time (possibly since the creation of the edition).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/error-index.html#E0729\" rel=\"noreferrer\">The description of <code>E0729</code></a></li>\n<li>The <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#compatibility-notes\" rel=\"noreferrer\">release notes for 1.40</a>: \n\n<blockquote>\n  <p>As previously announced, any previous NLL warnings in the 2015 edition are now hard errors.</p>\n</blockquote></li>\n</ul>\n"}], "owner": {"reputation": 1152, "user_id": 729775, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/70ec20c66713dc2fe7ce050263961685?s=128&d=identicon&r=PG", "display_name": "Ranjit Jhala", "link": "https://stackoverflow.com/users/729775/ranjit-jhala"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 59447553, "answer_count": 1, "score": 3, "last_activity_date": 1577044363, "creation_date": 1577041689, "question_id": 59447283, "link": "https://stackoverflow.com/questions/59447283/mutating-a-structs-fields-after-a-move", "title": "Mutating a struct&#39;s fields after a move", "body": "<p>I was puzzled by the following behavior: could someone explain what is going on?</p>\n\n<p>Consider the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Point {\n    cx : u32,\n}\nfn main() {\n    let mut p1 = Point { cx: 100 };\n    let     p2 = p1; \n    p1.cx      = 5000;\n    // println!(\"p1.x = {}\", p1.cx); // disallowed as p1.cx is \"moved\" ... ok\n    println!(\"p2.x = {}\", p2.cx); // ==&gt; prints 100 (!)\n}\n</code></pre>\n\n<p>Specifically, I was puzzled that:</p>\n\n<ol>\n<li>The <em>update</em> to <code>p1.cx</code> is allowed even though the <em>move</em> has occurred, </li>\n<li>The value returned by <code>p2.x</code> is not in fact the updated 5000, but the old <code>100</code>.</li>\n</ol>\n\n<p>I was expecting the new value as there is no copy-trait (hence the move), \nso was expecting there is just a single cell whose updated value (<code>5000</code>) \nshould be printed. </p>\n\n<p>However, I must be missing something. Any tips? Thanks in advance!</p>\n"}, {"tags": ["rust", "reference"], "comments": [{"owner": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 0, "creation_date": 1577036101, "post_id": 59446500, "comment_id": 105075842, "body": "Well firstly, you cannot directly reference <code>newPage</code> once it has been consumed by the push method. You will need to get a reference to the vector&#39;s last element itself. Secondly: <a href=\"https://stackoverflow.com/questions/31641610/return-reference-with-lifetime-of-self\" title=\"return reference with lifetime of self\">stackoverflow.com/questions/31641610/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 2, "last_activity_date": 1577042489, "creation_date": 1577042489, "answer_id": 59447372, "question_id": 59446500, "link": "https://stackoverflow.com/questions/59446500/return-a-reference-value-from-a-function-in-rust/59447372#59447372", "title": "return a reference value from a function in rust", "body": "<p>This can be done with the <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.last_mut\" rel=\"nofollow noreferrer\"><code>Vec::last_mut()</code></a> method. You'll have to unwrap the option that it returns, but that should never panic since you just pushed a new element in.</p>\n\n<p>Here's a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">Minimal Reproducible Example</a>. You should provide one of those yourself if you want faster/better answers. Without one, it's hard to know what exactly is intended. Check out <a href=\"https://stackoverflow.com/tags/rust/info\">this page</a> too for some Rust-specific advice for MREs.</p>\n\n<pre><code>pub struct PageDimension;\n\npub struct Page(usize, PageDimension);\n\nimpl Page {\n    fn new(page_number: usize, dimension: PageDimension) -&gt; Self {\n        Self(page_number, dimension)\n    }\n}\n\npub struct Document {\n    pages: Vec&lt;Page&gt;,\n    totalPages: i32,\n    _secret: (),\n}\n\nimpl Document {\n    pub fn add_page(&amp;mut self, dimension: PageDimension) -&gt; &amp;mut Page {\n        let newPage = Page::new(self.pages.len(), dimension);\n        self.pages.push(newPage);\n        self.pages.last_mut().unwrap()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=be6b90a8d6d18028dfa154081a9bf9c4\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Just one last thing. To conform with the community naming conventions, <code>totalPages</code> and <code>newPage</code> should have <code>snake_case</code> names, like <code>total_pages</code> and <code>new_page</code>. The compiler will warn about this.</p>\n"}], "owner": {"reputation": 79, "user_id": 10491976, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2fdfb81e0d32f6669aa66b5620657f5?s=128&d=identicon&r=PG&f=1", "display_name": "I. van de Poll", "link": "https://stackoverflow.com/users/10491976/i-van-de-poll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1577042489, "creation_date": 1577035634, "last_edit_date": 1577038681, "question_id": 59446500, "link": "https://stackoverflow.com/questions/59446500/return-a-reference-value-from-a-function-in-rust", "title": "return a reference value from a function in rust", "body": "<p>I'm working on a pdf generation application. I have a struct (Document) that owns all pages. Whenever i want to add a page i also want give the caller a borrowed value of the page back, so the document still is the owner of the struct. Like returning a pointer in C. </p>\n\n<pre><code>pub struct Document {\n    pages: Vec&lt;Page&gt;,\n    totalPages: i32,\n    _secret: ()\n}\n\n\npub fn add_page(&amp;mut self, dimension: PageDimension) -&gt; &amp;mut Page {\n    let newPage = Page::new(self.pages.len(), dimension);\n    self.pages.push(newPage);\n    newPage\n}\n</code></pre>\n\n<p>Can anyone explain how to achieve what i want. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1577036370, "post_id": 59446476, "comment_id": 105075928, "body": "No, you can&#39;t do that. First, <code>Ord</code> already has a blanket implementation for tuple. You need specialization to get around it, which is still unstable. Second, you are implementing a trait you don&#39;t own for a type you don&#39;t own, which violates the orphan rule."}, {"owner": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 1, "creation_date": 1577036385, "post_id": 59446476, "comment_id": 105075930, "body": "Ord is already implemented for tuples where all its members also implement Ord."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 6, "creation_date": 1577036854, "post_id": 59446476, "comment_id": 105076038, "body": "A tuple struct would be perfectly fine: <code>struct QNode(String, u32, i32);</code>, circumventing both issues."}, {"owner": {"reputation": 1018, "user_id": 1592377, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/EIJfg.png?s=128&g=1", "display_name": "jplatte", "link": "https://stackoverflow.com/users/1592377/jplatte"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1583430613, "post_id": 59446476, "comment_id": 107123387, "body": "@edwardw You should copy your two comments into an answer."}], "owner": {"reputation": 28197, "user_id": 7856, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/192d4f403439df36217eade100e56281?s=128&d=identicon&r=PG", "display_name": "Dana", "link": "https://stackoverflow.com/users/7856/dana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 289, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1577036669, "creation_date": 1577035434, "last_edit_date": 1577036669, "question_id": 59446476, "link": "https://stackoverflow.com/questions/59446476/can-ord-be-defined-for-a-tuple-in-rust", "title": "Can Ord be defined for a tuple in Rust?", "body": "<p>Is it possible to define to a specific Ord function for a tuple/type alias, as opposed to a struct? I am hoping to stash a group of tuples on a BinaryHeap, but I want them to be ordered in the heap based only on one of the fields of the tuple.</p>\n\n<p>I am picturing something like this (which doesn't compile):</p>\n\n<pre><code>type QNode = (String, u32, i32);\n\nimpl Ord for QNode {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; std::cmp::Ordering {\n        self.1.cmp(&amp;other.1);\n    }\n}\n</code></pre>\n\n<p>I can define a Struct to push onto the heap, but it would feel more lightweight to just use the type alias.</p>\n"}, {"tags": ["rust", "nalgebra"], "comments": [{"owner": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 0, "creation_date": 1577031741, "post_id": 59445747, "comment_id": 105074617, "body": "Why the multiplication with <code>pi &#47; 2</code>? <code>atan2</code> gives the angle in radians"}, {"owner": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 1, "creation_date": 1577031794, "post_id": 59445747, "comment_id": 105074630, "body": "Also this seems to be a math problem instead of a rust problem"}], "owner": {"reputation": 1, "user_id": 12579980, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Wg5LB.jpg?s=128&g=1", "display_name": "Luis0n7i", "link": "https://stackoverflow.com/users/12579980/luis0n7i"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 285, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1577810853, "creation_date": 1577030061, "last_edit_date": 1577810853, "question_id": 59445747, "link": "https://stackoverflow.com/questions/59445747/how-do-i-rotate-an-object-so-that-its-always-facing-the-mouse-position", "title": "How do I rotate an object so that it&#39;s always facing the mouse position?", "body": "<p>I'm using ggez to make a game with some friends, and I'm trying to have our character rotate to face the pointer at all times. I know so far that I need to get an angle value (f32) in radians, and I think I can use atan2 to get this (?) However, I just don't get the behavior that I want.</p>\n\n<p>This is the code I have: (btw, move_data is a struct holding our player character's values, such as position, velocity, angle and rotation speed).</p>\n\n<pre><code>let m = mouse::position(ctx);\nmove_data.angle = ((m.y - move_data.position.y).atan2(move_data.position.x - m.x)) * (consts::PI / 2.0) as f32;\n</code></pre>\n\n<p>I think that I'm close, as I'm already able with this to rotate the character, but only in a sort of 'incomplete' way. The player character (pc) can mostly only face to the upper left corner, when I move the mouse there. Otherwise, if the pointer is to the right and/or below the pc, it rotates in a very slow and minor way, and stops facing the pointer. I don't know if this description makes sense.</p>\n\n<p>I think the problem is that I'm not entirely sure what atan2 is doing in the first place (I only remember some basic trigonometry), and I am also not sure if I'm using it correctly, so I don't exactly know what my code is doing. (Here is the documentation I used for atan2: <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.atan2\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.f64.html#method.atan2</a>)</p>\n\n<p>I've gotten only so far after much trial and error, Googling as much as I can (mostly Unity tutorial results showed up when looking for algorithms to base my code off of) and I've also asked in the unofficial Rust community Discord server, but nothing so far has worked.</p>\n\n<p>I also had this code earlier, but couldn't find how to make it work either.</p>\n\n<pre><code>let m = mouse::position(ctx); // Type Point2\nlet mouse_pos = Vector2::new(m.x, m.y); // Transformed to Vector2 to be read by Matrix\nmove_data.angle = Matrix::angle(&amp;mouse_pos, &amp;move_data.position);\n</code></pre>\n"}, {"tags": ["rust", "newtype", "rust-diesel"], "comments": [{"owner": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 0, "creation_date": 1577032158, "post_id": 59444791, "comment_id": 105074740, "body": "<code>BelongingToDsl</code> trait needs a type parameter. I&#39;m not experienced with diesel but perhaps it&#39;s <code>BelongingToDiesel&lt;Guild&gt;</code>?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 0, "creation_date": 1577034627, "post_id": 59444791, "comment_id": 105075459, "body": "Yes, I forgot to put that. But it still has the requirements below"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 27886, "user_id": 3337070, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8974b88c4bd084f5928ad99d4e8033da?s=128&d=identicon&r=PG", "display_name": "sshashank124", "link": "https://stackoverflow.com/users/3337070/sshashank124"}, "edited": false, "score": 0, "creation_date": 1577087244, "post_id": 59444791, "comment_id": 105085551, "body": "I updated the errors."}], "answers": [{"comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1582681252, "post_id": 59948116, "comment_id": 106858666, "body": "Sorry for not accepting the answer for a long time. I stopped working on that project so I haven&#39;t verified your answer yet. But thanks for the effort."}], "tags": [], "owner": {"reputation": 991, "user_id": 6803492, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/49bd1656db86c9a09870d740e33c5c0f?s=128&d=identicon&r=PG&f=1", "display_name": "weiznich", "link": "https://stackoverflow.com/users/6803492/weiznich"}, "is_accepted": true, "score": 1, "last_activity_date": 1580212133, "creation_date": 1580212133, "answer_id": 59948116, "question_id": 59444791, "link": "https://stackoverflow.com/questions/59444791/using-newtypes-in-diesel-columns/59948116#59948116", "title": "Using newtypes in diesel columns", "body": "<p>That error is not related to <code>BelongingToDsl</code>, but to the incomplete implementation of the custom new type wrapper.</p>\n\n<p>As the error message indicates you are missing a trait impl for your new type wrapper:</p>\n\n<pre><code>error[E0277]: the trait bound `webcord_schema::models::GuildId: diesel::expression::Expression` is not satisfied\n  --&gt; src/index/guild.rs:23:32\n   |\n23 |                 let channels = &lt;models::Channel as BelongingToDsl&lt;&amp;models::Guild&gt;&gt;::belonging_to(&amp;guild)\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `diesel::expression::Expression` is not implemented for `webcord_schema::models::GuildId`\n   |\n   = note: required because of the requirements on the impl of `diesel::expression::Expression` for `&amp;webcord_schema::models::GuildId`\n   = note: required because of the requirements on the impl of `diesel::expression::AsExpression&lt;diesel::sql_types::BigInt&gt;` for `&amp;webcord_schema::models::GuildId`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::belonging_to_dsl::BelongingToDsl&lt;&amp;webcord_schema::models::Guild&gt;` for `webcord_schema::models::Channel`\n</code></pre>\n\n<p>The interesting line is the second line in <code>= note: required because of the requirements on the impl of diesel::expression::AsExpression&lt;diesel::sql_types::BigInt&gt; for '&amp;webcord_schema::models::GuildId</code>. This means you need to add at least an <code>AsExpression&lt;_&gt;</code> impl for a reference to your new type wrapper.</p>\n\n<p>So now general speaking: There is <a href=\"https://github.com/diesel-rs/diesel/blob/066bc412d7ead423e71de811b1dac9428a63712c/diesel_tests/tests/custom_types.rs#L9-L47\" rel=\"nofollow noreferrer\">this test case</a> showing how to implement custom types in general. You will see that the custom type on rust side uses two custom derives (<code>AsExpression</code> and <code>FromSqlRow</code>) that are basically implementing the traits you've already implemented manually and additionally the missing ones. Additionally a <code>ToSql</code>/<code>FromSql</code> impl is required to describe how the type should be translated into/from a sql type.</p>\n\n<p>Summing that up your type definition should probably look like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Display, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, serde::Serialize, AsExpression, FromSqlRow)]\n#[sql_type = \"diesel::sql_types::BigInt\")]\npub struct $name(pub i64);\n\nimpl&lt;DB&gt; ToSql&lt;diesel::sql_types::BigInt, DB&gt; for $name \nwhere DB: Backend,\n    i64: ToSql&lt;diesel::sql_types::BigInt, DB&gt;,\n{\n    fn to_sql&lt;W: Write&gt;(&amp;self, out: &amp;mut Output&lt;W, DB&gt;) -&gt; serialize::Result {\n        &lt;i64 as ToSql&lt;diesel::sql_types::BigInt, DB&gt;&gt;::to_sql(&amp;self.0, out)\n    }\n}\n\nimpl&lt;DB&gt; FromSql&lt;diesel::sql_types::BigInt, DB&gt; for $name \nwhere DB: Backend,\n    i64: FromSql&lt;diesel::sql_types::BigInt, DB&gt;\n{\n    fn from_sql(bytes: Option&lt;&amp;DB::RawValue&gt;) -&gt; deserialize::Result&lt;Self&gt; {\n        &lt;i64 as FromSql&lt;diesel::sql_types::BigInt, DB&gt;&gt;::from_sql(bytes).map($name)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 364, "favorite_count": 1, "accepted_answer_id": 59948116, "answer_count": 1, "score": 1, "last_activity_date": 1580212133, "creation_date": 1577022810, "last_edit_date": 1577087239, "question_id": 59444791, "link": "https://stackoverflow.com/questions/59444791/using-newtypes-in-diesel-columns", "title": "Using newtypes in diesel columns", "body": "<p>I am using newtypes like <code>struct GuildId(i64);</code> for the columns in my diesel model structs. Currently I am implementing these traits:</p>\n\n<pre><code>#[derive(Debug, Display, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, serde::Serialize)]\npub struct $name(pub i64);\n\nimpl AsExpression&lt;BigInt&gt; for $name { /* delegate to &lt;i64 as AsExpression&lt;BigInt&gt; */ */ }\n\nimpl&lt;ST, DB: Backend&gt; Queryable&lt;ST, DB&gt; for $name\nwhere i64: FromSql&lt;ST, DB&gt; { /* also delegate to i64 */\n</code></pre>\n\n<p>However, when I try to use this type in the following model structs:</p>\n\n<pre><code>#[derive(Associations, Identifiable, Queryable)]\n#[belongs_to(Guild)]\nstruct Channel {\n    guild_id: GuildId,\n    // other fields\n}\n\n#[derive(Identifiable, Queryable)]\nstruct Guild {\n    id: GuildId,\n    // other fields\n}\n</code></pre>\n\n<p><code>Channel</code> still does not implement <code>BelongingToDsl</code>. When I try to cast it to the trait, it fails to compile with the following message:</p>\n\n<pre><code>error[E0277]: the trait bound `diesel::query_builder::select_statement::SelectStatement&lt;webcord_schema::schema::channels::table&gt;: diesel::query_dsl::filter_dsl::FilterDsl&lt;diesel::expression::operators::Eq&lt;webcord_schema::schema::channels::columns::guild_id, &amp;webcord_schema::models::GuildId&gt;&gt;` is not satisfied\n  --&gt; src/index/guild.rs:23:32\n   |\n23 |                 let channels = &lt;models::Channel as BelongingToDsl&lt;&amp;models::Guild&gt;&gt;::belonging_to(&amp;guild)\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `diesel::query_dsl::filter_dsl::FilterDsl&lt;diesel::expression::operators::Eq&lt;webcord_schema::schema::channels::columns::guild_id, &amp;webcord_schema::models::GuildId&gt;&gt;` is not implemented for `diesel::query_builder::select_statement::SelectStatement&lt;webcord_schema::schema::channels::table&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;diesel::query_builder::select_statement::SelectStatement&lt;F, S, D, W, O, L, Of, G, LC&gt; as diesel::query_dsl::filter_dsl::FilterDsl&lt;Predicate&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::query_dsl::filter_dsl::FilterDsl&lt;diesel::expression::operators::Eq&lt;webcord_schema::schema::channels::columns::guild_id, &amp;webcord_schema::models::GuildId&gt;&gt;` for `webcord_schema::schema::channels::table`\n\nerror[E0277]: the trait bound `webcord_schema::models::GuildId: diesel::expression::Expression` is not satisfied\n  --&gt; src/index/guild.rs:23:32\n   |\n23 |                 let channels = &lt;models::Channel as BelongingToDsl&lt;&amp;models::Guild&gt;&gt;::belonging_to(&amp;guild)\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `diesel::expression::Expression` is not implemented for `webcord_schema::models::GuildId`\n   |\n   = note: required because of the requirements on the impl of `diesel::expression::Expression` for `&amp;webcord_schema::models::GuildId`\n   = note: required because of the requirements on the impl of `diesel::expression::AsExpression&lt;diesel::sql_types::BigInt&gt;` for `&amp;webcord_schema::models::GuildId`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::belonging_to_dsl::BelongingToDsl&lt;&amp;webcord_schema::models::Guild&gt;` for `webcord_schema::models::Channel`\n</code></pre>\n\n<p>What traits am I missing?</p>\n"}, {"tags": ["multithreading", "rust", "thread-safety"], "answers": [{"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 4, "last_activity_date": 1577008966, "last_edit_date": 1577008966, "creation_date": 1576999554, "answer_id": 59442384, "question_id": 59442080, "link": "https://stackoverflow.com/questions/59442080/rust-pass-a-function-reference-to-threads/59442384#59442384", "title": "Rust - Pass a function reference to threads", "body": "<p>In order to send an <code>Arc</code> to another thread, the <code>Arc</code> needs to implement <code>Send</code>. If you look at <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">the docs for <code>Arc</code></a> you can see that it has</p>\n\n<pre><code>impl&lt;T&gt; Send for Arc&lt;T&gt; where\n    T: Send + Sync + ?Sized {}\n</code></pre>\n\n<p>which means that for your code to work, your <code>T</code> (<code>dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;</code>) needs to implement <code>Send</code> and <code>Sync</code>.</p>\n\n<p>Since your type is a trait object, what you need to do is declare that, e.g.</p>\n\n<pre><code>pub struct MyStruct {\n    f: Arc&lt;dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt; + Sync + Send&gt;,\n}\n\nimpl MyStruct {\n   pub fn new(f: Arc&lt;dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt; + Sync + Send&gt;) -&gt; MyStruct {\n      MyStruct { f }\n   }\n   // ...\n}\n</code></pre>\n\n<p>as in, the <code>T</code> type implements all three of these traits:</p>\n\n<ul>\n<li><code>Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;</code></li>\n<li><code>Sync</code></li>\n<li><code>Send</code></li>\n</ul>\n\n<p>Without the <code>Sync + Send</code> trait, your <code>f</code> function could for instance capture a reference to a <code>Cell</code>, which would cause race conditions since multiple threads could potentially be trying to update the value of the cell at the same time. Your code may well not be doing that, but your <code>start</code> function has no way of knowing that unless you tell it that <code>f</code> is restricted enough to not allow that.</p>\n"}], "owner": {"reputation": 2123, "user_id": 7385447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/49e3f8e9fbe1149a46d0a8bd19823190?s=128&d=identicon&r=PG", "display_name": "SalmonKiller", "link": "https://stackoverflow.com/users/7385447/salmonkiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 59442384, "answer_count": 1, "score": 0, "last_activity_date": 1577008966, "creation_date": 1576995703, "question_id": 59442080, "link": "https://stackoverflow.com/questions/59442080/rust-pass-a-function-reference-to-threads", "title": "Rust - Pass a function reference to threads", "body": "<p>Say I have a struct like:</p>\n\n<pre><code>pub struct MyStruct {\n    f: Arc&lt;dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;&gt;,\n}\n\nimpl MyStruct {\n   pub fn new(f: Arc&lt;dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;&gt;) -&gt; MyStruct {\n      MyStruct { f }\n   }\n\n   pub fn start(&amp;self) {\n      for _ in 0..5 {\n        let f = self.f.clone();\n        thread::spawn(move || {\n            let v: Vec&lt;f64&gt; = get_random_vector();\n            let v = (f)(v);\n            // do something with v\n        });\n      }\n   }\n}\n</code></pre>\n\n<p>I'm getting an error that the function cannot be shared between threads safely since the <code>dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;)</code> type doesn't implement <code>Sync</code>.</p>\n\n<p>There is a hack that I can do where I can wrap the <code>Arc&lt;dyn Fn(Vec&lt;f64&gt;) -&gt; Vec&lt;f64&gt;</code> in a Wrapper struct and then mark the wrapper with <code>Sync</code> using <code>unsafe impl</code>. But I was wondering if there is a better solution than that. </p>\n\n<p>Now since the function is inside an <code>Arc</code> we have the guarantee that the function value is immutable.</p>\n\n<p>I can also guarantee that the size of the vectors will always be constant for any instance of <code>MyStruct</code>. It might be 2, 3, or <code>n</code> but it will be the same. So the size of the vector is constant. So the function size is de facto constant. </p>\n\n<p>In fact, if instead of <code>Vec&lt;f64&gt;</code> I use <code>&amp;[f64]</code> and <code>[f64]</code>, the function will still not implement <code>Send</code>, even though slices have a definite size.</p>\n\n<p>So why can't the function be shared between threads and what can I do to indeed share it between threads?</p>\n"}, {"tags": ["rust", "type-systems"], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 5, "last_activity_date": 1576992190, "creation_date": 1576992190, "answer_id": 59441808, "question_id": 59441667, "link": "https://stackoverflow.com/questions/59441667/why-can-stdrcrc-call-its-own-values-methods/59441808#59441808", "title": "Why can std::rc::Rc call its own value&#39;s methods?", "body": "<p>This property is called \"<a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code> coercion</a>\".</p>\n\n<p>If you have two types <code>T</code> and <code>U</code>, such that <code>T: Deref&lt;Target = U&gt;</code>, then everywhere you have a <code>&amp;T</code>, you can <em>coerce</em> it to <code>&amp;U</code>. In particular, as method call syntax is just sugar to the functions taking <code>&amp;self</code> (or <code>&amp;mut self</code>, or <code>self</code> - depending on the method), you can call methods on the <code>U</code> having only <code>T</code>.</p>\n\n<p>As you can see in the docs, <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#impl-Deref-20\" rel=\"noreferrer\"><code>Deref</code> is implemented for <code>Rc</code></a>, as it is for almost any other smart pointer (the \"active\" smart pointers like <code>Mutex</code>, which involve explicit locking, being notable exception). So, when you have one of these smart pointers, you can treat a reference to it as the reference to the inner value - see also <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-o\">this question</a> about other consequences of this fact.</p>\n\n<p>More info on this topic could be also found <a href=\"https://doc.rust-lang.org/book/ch15-02-deref.html\" rel=\"noreferrer\">in the Rust book</a>.</p>\n"}], "owner": {"reputation": 53, "user_id": 6722805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8e5b92f80bbbb395f2e243a148eee96?s=128&d=identicon&r=PG&f=1", "display_name": "knium_", "link": "https://stackoverflow.com/users/6722805/knium"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 59441808, "answer_count": 1, "score": 1, "last_activity_date": 1576992190, "creation_date": 1576989866, "question_id": 59441667, "link": "https://stackoverflow.com/questions/59441667/why-can-stdrcrc-call-its-own-values-methods", "title": "Why can std::rc::Rc call its own value&#39;s methods?", "body": "<p>I'm a newbie to Rust and type-systems. I'm reading <a href=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/rc.rs\" rel=\"nofollow noreferrer\">rustc/rc.rs</a>. I don't know why <code>Rc&lt;T&gt;</code> can call T's methods. What conditions does <strong><code>a Structure&lt;T&gt;</code></strong> satisfy for calling methods of the wrapped value?</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a = Rc::new(\"The quick fox\".to_string());\n    println!(\"{}\", a.contains(\"white\")); // Rc&lt;String&gt; can call String#contains.\n}\n</code></pre>\n"}, {"tags": ["types", "rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 1157, "user_id": 2653567, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/RNYoa.png?s=128&g=1", "display_name": "HMLDude", "link": "https://stackoverflow.com/users/2653567/hmldude"}, "is_accepted": true, "score": 0, "last_activity_date": 1576977945, "creation_date": 1576977945, "answer_id": 59441049, "question_id": 59440514, "link": "https://stackoverflow.com/questions/59440514/rustlings-course-test4-rs-marcro-return-type-issue/59441049#59441049", "title": "Rustlings Course Test4.rs Marcro Return Type Issue", "body": "<p>So here is the working answer I came up with:</p>\n\n<pre><code>fn function_rules(expr:&amp;str)-&gt; String{\n    let a = \"Hello\";\n    let b = expr;\n    let result = [a, b].join(\" \");\n    return result.to_string();\n}\n\nmacro_rules! my_macro {\n    () =&gt; {\n        println!(\"Hello!\");\n    };\n    ($val:expr) =&gt; {\n        //println!(\"Hello {}\", $val);\n        function_rules($val)\n    }\n}\n\nfn main() {\n    if my_macro!(\"world!\") != \"Hello world!\" {\n        panic!(\"Oh no! Wrong output!\");\n    }\n}\n</code></pre>\n\n<p>I big part of solving this problem was dealing with String vs &amp;str types, an excellent coverage of which can be found <a href=\"https://hermanradtke.com/2015/05/03/string-vs-str-in-rust-functions.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>The code compiles without modifying the main() function in any way, as per the instruction perameters. I think an even more elegant solution would have been to write a macro that returned the correct type without relying on an extra function. Assuming that's possible!</p>\n"}, {"tags": [], "owner": {"reputation": 4378, "user_id": 225448, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UN6N9.png?s=128&g=1", "display_name": "Zoran Regvart", "link": "https://stackoverflow.com/users/225448/zoran-regvart"}, "is_accepted": false, "score": 2, "last_activity_date": 1578769697, "last_edit_date": 1578769697, "creation_date": 1578760994, "answer_id": 59696459, "question_id": 59440514, "link": "https://stackoverflow.com/questions/59440514/rustlings-course-test4-rs-marcro-return-type-issue/59696459#59696459", "title": "Rustlings Course Test4.rs Marcro Return Type Issue", "body": "<p>I think the implementation could be much simpler:</p>\n\n<pre><code>macro_rules! my_macro {\n    ($val:expr) =&gt; {\n        format!(\"Hello {}\", $val)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1157, "user_id": 2653567, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/RNYoa.png?s=128&g=1", "display_name": "HMLDude", "link": "https://stackoverflow.com/users/2653567/hmldude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 0, "accepted_answer_id": 59441049, "answer_count": 2, "score": 0, "last_activity_date": 1578769697, "creation_date": 1576969678, "question_id": 59440514, "link": "https://stackoverflow.com/questions/59440514/rustlings-course-test4-rs-marcro-return-type-issue", "title": "Rustlings Course Test4.rs Marcro Return Type Issue", "body": "<p>I am doing the Rustlings Rust-lang <a href=\"https://github.com/rust-lang/rustlings/blob/master/exercises/test4.rs\" rel=\"nofollow noreferrer\">course</a> and working on <code>exercises/test4.rs</code></p>\n\n<p>This is the only exercise in the course that does not come with a hint. So after working on it for a while, I'm reaching out to get that hint here!</p>\n\n<pre><code>macro_rules! my_macro {\n    () =&gt; {\n        println!(\"Hello!\");\n    };\n    ($val:expr) =&gt; {\n        println!(\"Hello {}\", $val);\n    }\n}\n\nfn main() {\n    if my_macro!(\"world!\") != \"Hello world!\" {\n        panic!(\"Oh no! Wrong output!\");\n    }\n}\n</code></pre>\n\n<p>When I try to compile, I get the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; test4.rs:20:31\n   |\n20 |     if my_macro!(\"world!\") != \"Hello world!\" {\n   |                               ^^^^^^^^^^^^^^ expected (), found reference\n   |\n   = note: expected type `()`\n              found type `&amp;'static str`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>The issue seems to be based on the fact that the default return type for a Rust macro is an empty tuple type (ie <code>expected type ()</code>), where as we compare it to a static string.</p>\n\n<p>If the parameters of the exercise would allow me to alter the code in the main function, then the exercise seems like it would be a bit simpler. However, according to the instruction, the only thing to be done is to write a macro that causes the code to compile.</p>\n\n<p>As I understand it, you cannot explicitly declare a return type for a macro. So I am at a loss as to how to proceed.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1576970262, "post_id": 59440156, "comment_id": 105064781, "body": "in the first, you&#39;re using literals, which are hardcoded into the binary and are thus <code>&#39;static</code>, (living for the life of the program). In the second case, you&#39;re using two <code>String</code>s which are dropped when the function scope ends (living for the life of the function)."}, {"owner": {"reputation": 696, "user_id": 6433062, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8uIqX.jpg?s=128&g=1", "display_name": "richardpringle", "link": "https://stackoverflow.com/users/6433062/richardpringle"}, "edited": false, "score": 0, "creation_date": 1578345458, "post_id": 59440156, "comment_id": 105401580, "body": "@JoelBerkeley, you&#39;re response should be the answer here"}], "owner": {"reputation": 13, "user_id": 7880804, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-tlpgfL2de7o/AAAAAAAAAAI/AAAAAAAAABY/HscA9M9lfQs/photo.jpg?sz=128", "display_name": "GoP Hapique", "link": "https://stackoverflow.com/users/7880804/gop-hapique"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1576965905, "creation_date": 1576965905, "question_id": 59440156, "link": "https://stackoverflow.com/questions/59440156/why-are-slices-from-string-different-from-those-hard-coded-as-arguments-to-a-fun", "title": "Why are slices from String different from those hard coded as arguments to a function?", "body": "<p>I just finished reading \"The Book\" and I wanted to get started with a small project in Rust. I'm currently trying to make tests for a library which look like this:</p>\n\n<pre><code>pub mod api;\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::env::var;\n\n    fn create_blih&lt;'a, 'b&gt;() -&gt; api::Blih&lt;'a, 'b&gt; {\n        api::Blih::new(\"username\", \"password\")\n    }\n\n    #[test]\n    fn list_repositories() {\n        create_blih().repository_list().unwrap();\n    }\n\n    ...\n</code></pre>\n\n<p>I wanted to remove my ids from the code and get them from environment variables so I changed my code like this:</p>\n\n<pre><code>fn create_blih&lt;'a, 'b&gt;() -&gt; api::Blih&lt;'a, 'b&gt; {\n    let user = var(\"blih_user\").expect(\"set blih_user env var\");\n    let pass = var(\"blih_pass\").expect(\"set blih_pass env var\");\n    api::Blih::new(&amp;user, &amp;pass)\n}\n</code></pre>\n\n<p>My code doesn't compile with this error <code>error[E0515]: cannot return value referencing local variable</code> for both variables.</p>\n\n<p>I don't understand why the first <code>create_blih</code> works but not the second one because I use slices in both cases.</p>\n\n<p>This may be of help:</p>\n\n<pre><code>pub struct Blih&lt;'a, 'b&gt; {\n    base_url: &amp;'b str,\n    user: &amp;'a str,\n    user_agent: &amp;'b str,\n    password: &amp;'a str,\n    headers: HeaderMap,\n}\n</code></pre>\n\n<pre><code>impl&lt;'a, 'b&gt; Blih&lt;'a, 'b&gt; {\n    pub fn new(user: &amp;'a str, password: &amp;'a str) -&gt; Self\n    ...\n</code></pre>\n\n<p>Thanks in advance helping me understand how ownership works!</p>\n"}, {"tags": ["rust", "move"], "comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 2, "creation_date": 1576957535, "post_id": 59439201, "comment_id": 105062430, "body": "I have no idea what the actual issue is (I would have expected the compiler to remove that line), but <i>maybe</i> it&#39;s related to a particular version (or not).  It might be useful to edit your question to include which version of the Rust compiler you&#39;re using, just in case."}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 1, "creation_date": 1576957657, "post_id": 59439201, "comment_id": 105062450, "body": "@Jarak Thanks for reminding! I added the version info."}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1576958553, "post_id": 59439201, "comment_id": 105062639, "body": "you&#39;re all over the good questions today"}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1576958679, "post_id": 59439201, "comment_id": 105062652, "body": "if x implemented <code>Copy</code>, I&#39;m guessing it would call that that implementation. Might help"}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 0, "creation_date": 1576958798, "post_id": 59439201, "comment_id": 105062677, "body": "@JoelBerkeley haha, I&#39;m really new to Rust."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 3, "creation_date": 1576959899, "post_id": 59439201, "comment_id": 105062916, "body": "Possible <a href=\"https://stackoverflow.com/questions/25313583/path-statement-leaves-a-value-in-moved-from-state\">duplicate</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1576960082, "post_id": 59439201, "comment_id": 105062942, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/25313583/path-statement-leaves-a-value-in-moved-from-state\">Path statement leaves a value in moved-from state?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1576992410, "post_id": 59439646, "comment_id": 105067206, "body": "So, <code>x;</code> is effectively the same as <code>let _ = x;</code>?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1577012287, "post_id": 59439646, "comment_id": 105070192, "body": "@Cerberus not really. Since <code>let _ = x;</code> doesn&#39;t bind to anything, it is somewhat more like <code>drop(x);</code> whereas <code>x;</code> is akin to <code>let tmp = x; drop(tmp);</code>."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 6, "last_activity_date": 1577012496, "last_edit_date": 1577012496, "creation_date": 1576960379, "answer_id": 59439646, "question_id": 59439201, "link": "https://stackoverflow.com/questions/59439201/what-does-a-statement-with-a-single-variable-name-and-a-semicolon-mean-in-rust/59439646#59439646", "title": "What does a statement with a single variable name and a semicolon mean in Rust?", "body": "<p><code>x;</code> is <a href=\"https://doc.rust-lang.org/reference/statements.html#expression-statements\" rel=\"nofollow noreferrer\">an expression statement</a> that:</p>\n\n<blockquote>\n  <p>An expression statement is one that evaluates an expression and ignores its result.</p>\n</blockquote>\n\n<p>The expression here is in turn <a href=\"https://doc.rust-lang.org/reference/expressions.html#place-expressions-and-value-expressions\" rel=\"nofollow noreferrer\">a place expression</a> which:</p>\n\n<blockquote>\n  <p>Moving out of a place expression that evaluates to a local variable, the location is deinitialized and cannot be read from again until it is reinitialized.</p>\n</blockquote>\n\n<p>So after that you can't use it again. In fact, if you compile the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let x = vec![42];\n    x;\n}\n</code></pre>\n\n<p>to MIR:</p>\n\n<pre><code>fn  main() -&gt; () {\n    let mut _0: (); // return place in scope 0 at src/main.rs:1:11: 1:11\n    let _1: std::vec::Vec&lt;i32&gt;; // \"x\" in scope 0 at src/main.rs:2:9: 2:10\n\n    ...\n\n    bb1: {\n        StorageDead(_2); // bb1[0]: scope 0 at &lt;::alloc::macros::vec macros&gt;:2:62: 2:63\n        StorageLive(_5); // bb1[1]: scope 1 at src/main.rs:3:5: 3:6\n        _5 = move _1;    // bb1[2]: scope 1 at src/main.rs:3:5: 3:6\n        drop(_5) -&gt; bb2; // bb1[3]: scope 1 at src/main.rs:3:6: 3:7\n    }\n}\n</code></pre>\n\n<p>You can clearly see it is moved into a temporary variable and that temporary variable is promptly dropped.</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 2, "accepted_answer_id": 59439646, "answer_count": 1, "score": 3, "last_activity_date": 1577012496, "creation_date": 1576956057, "last_edit_date": 1576957637, "question_id": 59439201, "link": "https://stackoverflow.com/questions/59439201/what-does-a-statement-with-a-single-variable-name-and-a-semicolon-mean-in-rust", "title": "What does a statement with a single variable name and a semicolon mean in Rust?", "body": "<p>I'm playing with Rust and found the following example:</p>\n\n<pre><code>fn main() {\n    let mut x = [3, 4, 5].to_vec();\n    x;\n    println!(\"{:?}\", x);\n}\n</code></pre>\n\n<p>The compiler tells me</p>\n\n<pre><code>18 |     let mut x = [3, 4, 5].to_vec();\n   |         ----- move occurs because `x` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n...\n21 |     x;\n   |     - value moved here\n22 |     println!(\"{:?}\", x);\n   |                      ^ value borrowed here after move\n</code></pre>\n\n<p>It seems the statement <code>x;</code> caused <code>x</code> moved to somewhere and it can't be used after that. Where is the move destination and what exactly happend here? </p>\n\n<p>I searched around and can't find any information explaining this. Maybe I'm using the wrong keyword. </p>\n\n<p>Btw, I'm using this version of Rust: <code>rustc 1.41.0-nightly (99b89533d 2019-12-16)</code></p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "edited": false, "score": 1, "creation_date": 1576958937, "post_id": 59438993, "comment_id": 105062710, "body": "it states that <code>result</code> can only live as long as <code>v</code>. It can have a shorter or equal lifetime, but not greater. As soon as <code>v</code> goes out of scope, <code>result</code> is no longer valid."}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 1, "last_activity_date": 1577346705, "last_edit_date": 1592644375, "creation_date": 1577346705, "answer_id": 59485471, "question_id": 59438993, "link": "https://stackoverflow.com/questions/59438993/how-to-understand-the-lifetime-of-function-parameters-and-return-values-in-rust/59485471#59485471", "title": "How to understand the lifetime of function parameters and return values in Rust?", "body": "<p>I would like to clarify here, citing <a href=\"https://doc.rust-lang.org/stable/rust-by-example/scope/lifetime.html\" rel=\"nofollow noreferrer\">Rust by Example</a></p>\n<blockquote>\n<p>A lifetime is a construct the compiler (or more specifically, its borrow checker) uses to ensure all borrows are valid. Specifically, a variable's lifetime begins when it is created and ends when it is destroyed. While lifetimes and scopes are often referred to together, they are not the same.</p>\n<p>Take, for example, the case where we borrow a variable via &amp;. The borrow has a lifetime that is determined by where it is declared. As a result, the borrow is valid as long as it ends before the lender is destroyed. However, the scope of the borrow is determined by where the reference is used.</p>\n</blockquote>\n<p>It seems that Rust book created a lot of confusion, but <code>scope</code> and <code>lifetime</code> are indeed different things, when we talk about simple bindings which own data (not borrow it) lifetime and scope match together.</p>\n<p>If we have simple code like this. Lifetime of <code>a</code> and <code>b</code> will match with scope they are defined.</p>\n<pre><code>fn main() {\n    let a = 1;\n    let b = 2;\n}\n</code></pre>\n<p>In this example, lender (<code>a</code>) goes out of scope sooner than borrow.</p>\n<pre><code>fn main() {\n\n    let b;\n    {\n        let a = 1;\n        b = &amp;a;\n    }\n    let c = *b;\n}\n</code></pre>\n<p>It forces compiler to emit error.</p>\n<pre><code>\nerror[E0597]: `a` does not live long enough\n --&gt; src/main.rs:5:9\n  |\n5 |         b = &amp;a;\n  |         ^^^^^^ borrowed value does not live long enough\n6 |     }\n  |     - `a` dropped here while still borrowed\n7 |     let c = *b;\n  |             -- borrow later used here\n</code></pre>\n<p>So here <code>b</code> has a lifetime longer than the lifetime of <code>a</code>, because it has a greater scope. Remember that scope of borrow is determined by where the reference is used.</p>\n<p>But this code compiles just fine, because <code>b</code> scope doesn't end after <code>a</code> is dropped.</p>\n<pre><code>fn main() {\n    let b;\n    {\n        let a = 1;\n        b = &amp;a;\n        let c = *b;\n    }\n}\n</code></pre>\n<p>Another thing to clarify is that lifetime syntax for reference <code>&amp;'lifetime</code> means. It means that reference should live as long as <code>'lifetime</code> lifetime. It shouldn't be exactly that lifetime.</p>\n<p>Suppose <code>Record</code> element is defined like this.</p>\n<pre><code>struct Record&lt;'a&gt; {\n   some_member: &amp;'a Type\n}\n</code></pre>\n<p>This signature just means that some member of record should live as long as reference passed to <code>input</code> or vice versa.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_record&lt;'i&gt;(input: &amp;'i [u8]) -&gt; Record&lt;'i&gt; { ... }\n</code></pre>\n<p>If I translate it to plain English. Lender of the reference passed to the function shouldn't go out of scope (dropped) as long as a field inside <code>Record</code> didn't go out of scope.</p>\n<p>Or return value of function should live as long as input argument of function.</p>\n<p>If we don't have return value which is constrained by the input lifetime, translation changes.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn test&lt;'a&gt;(a: &amp;'a i32, b: &amp;'a i32)\n</code></pre>\n<p>This means that lenders of <code>a</code> and <code>b</code> should be in scope together until function execution ends.</p>\n<p>In many simple cases lifetimes are elided by compiler and you shouldn't worry about them. Actually in your example too, lifetimes can be elided.</p>\n<pre><code>fn parse_record(input: &amp;[u8]) -&gt; Record { ...  }\n</code></pre>\n<p>I recommend you to read <code>Rust by Example</code> chapters on lifetimes to more practically understand them.</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 421, "favorite_count": 1, "accepted_answer_id": 59485471, "answer_count": 1, "score": 0, "last_activity_date": 1577346705, "creation_date": 1576954426, "question_id": 59438993, "link": "https://stackoverflow.com/questions/59438993/how-to-understand-the-lifetime-of-function-parameters-and-return-values-in-rust", "title": "How to understand the lifetime of function parameters and return values in Rust?", "body": "<p>I'm a newbie in Rust and I'm still struggling with lifetime in Rust. <em>The Rust Programming Language</em> book defines lifetime as</p>\n\n<blockquote>\n  <p>the scope for which that reference is valid</p>\n</blockquote>\n\n<p>It's easy to understand when the context is a single function. For example, in the below code, the lifetime of s is the blue box, the lifetime of x is the green box etc. </p>\n\n<p><a href=\"https://i.stack.imgur.com/x12fZ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/x12fZ.png\" alt=\"enter image description here\"></a></p>\n\n<p>When it comes to functions, I don't quite understand what exactly does the lifetime mean for function parameters and return values. Let's say we have this function:</p>\n\n<pre><code>fn parse_record&lt;'i&gt;(input: &amp;'i [u8]) -&gt; Record&lt;'i&gt; { ... }\n</code></pre>\n\n<p>The signature states that the <code>input</code> parameter and the return value <code>Record</code> must have the same lifetime <code>'i</code>. Does that mean when we are calling the function, the value we passed into the function and the returned value must have the same lifetime? For example, I may invoke the function in <code>main</code> function like this:</p>\n\n<pre><code>fn main() {\n    let mut v: Vec&lt;u8&gt; = [1_u8, 2_u8, 3_u8].to_vec();\n    let result = parse_record(&amp;v);\n    // use v and result ...\n}\n</code></pre>\n\n<p>Does the lifetime in the function signature state that <code>v</code> and <code>result</code> in <code>main</code> must have the same lifetime?</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 1409, "user_id": 7518695, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dT38T.jpg?s=128&g=1", "display_name": "GrayCat", "link": "https://stackoverflow.com/users/7518695/graycat"}, "edited": false, "score": 0, "creation_date": 1576952343, "post_id": 59438659, "comment_id": 105061344, "body": "I am not sure, hence I comment, but this information can be probably derived from explicit lifetime <code>&#39;i</code>. Since Rust disallows returning reference to a local variable AND <code>Record</code> has the same lifetime as <code>input</code> it must mean that whatever is in the <code>Record</code> must come from <code>input</code>."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1576952779, "post_id": 59438659, "comment_id": 105061443, "body": "Think of a lifetime as a scope; the value with said lifetime will be dropped at the end of the scope. Therefore if we say that <code>Record</code> should live as long as the value in a scope we name <code>&#39;i</code>, we get <code>Record&lt;&#39;i&gt;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 2, "last_activity_date": 1576952547, "creation_date": 1576952547, "answer_id": 59438748, "question_id": 59438659, "link": "https://stackoverflow.com/questions/59438659/understanding-of-this-rust-lifetime-example/59438748#59438748", "title": "Understanding of this Rust lifetime example", "body": "<p>The input:</p>\n\n<pre><code>input: &amp;'i [u8]\n</code></pre>\n\n<p>Says the following:</p>\n\n<p>I am a reference to a series of bytes (<code>[u8]</code>) that will live for at least as long as <code>'i</code>. </p>\n\n<p>So, when saying that I've a type that looks like this: <code>Record&lt;'i&gt;</code>, I can say the following about it:</p>\n\n<p>I am a struct (Named <code>Record&lt;'i&gt;</code>) that contains something (Perhaps a reference, perhaps something else) that depends on <em>something</em> living for at least as long as <code>'i</code>. </p>\n\n<p>What lifetimes on references/structs/enums/whatever are telling you is that there is a dependency that an object that lives in <code>'i</code> must live as long as I do. </p>\n\n<p>In other words, this function signature tells you that the <code>Record</code> must live as long as the bytes referenced by <code>input</code> (The <code>u8</code>s <em>under</em> the reference, not the reference itself).</p>\n\n<hr>\n\n<p>A lack of a lifetime parameter was recently deprecated and now causes a warning, so keep in mind when reading examples like the following:</p>\n\n<pre><code>fn parse_record(input: &amp;[u8]) -&gt; Record\n</code></pre>\n\n<p>that there <em>may</em> be a lifetime attached to <code>Record</code> so you must consult some kind of documentation. The compile desugars this (And the warning asks you to do this yourself) to this:</p>\n\n<pre><code>fn parse_record(input: &amp;'_ [u8]) -&gt; Record&lt;'_&gt;\n</code></pre>\n\n<p>This is identical to your <code>'i</code> example. </p>\n"}, {"tags": [], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "is_accepted": true, "score": 4, "last_activity_date": 1576954553, "last_edit_date": 1576954553, "creation_date": 1576952560, "answer_id": 59438752, "question_id": 59438659, "link": "https://stackoverflow.com/questions/59438659/understanding-of-this-rust-lifetime-example/59438752#59438752", "title": "Understanding of this Rust lifetime example", "body": "<p>The <code>Record</code> can get references only from the function body. In theory, these can come from </p>\n\n<ul>\n<li>values in <code>input</code>, which are all references with lifetime <code>'i</code></li>\n<li>values defined outside <code>parse_record</code>, which must have <code>'static</code> lifetime</li>\n<li>values defined in <code>parse_record</code>. These can be\n\n<ul>\n<li>dynamically created. Such values would be dropped by the end of the function scope, so any references to them would end up as dangling pointers. As such, this isn't allowed by the compiler.</li>\n<li>literals (<code>1</code>, <code>\"cat\"</code>). These are actually baked into the binary, and so are effectively defined outside the function. In the function they're <code>'static</code> references</li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 59438752, "answer_count": 2, "score": 3, "last_activity_date": 1576958305, "creation_date": 1576951891, "last_edit_date": 1576958305, "question_id": 59438659, "link": "https://stackoverflow.com/questions/59438659/understanding-of-this-rust-lifetime-example", "title": "Understanding of this Rust lifetime example", "body": "<p>I'm a newbie in Rust and I'm still struggling with <em>lifetimes</em> in Rust. Below is an example from a book I'm reading. Could anyone help explain why the author can get this information just by looking at the function signature? I already have basic understanding of <em>borrowing</em>, <em>references</em> etc. but still can't understand it. </p>\n\n<blockquote>\n  <p>For example, suppose we have a parsing function that takes a slice of bytes, and returns a structure holding the results of the parse:</p>\n</blockquote>\n\n<pre><code>fn parse_record&lt;'i&gt;(input: &amp;'i [u8]) -&gt; Record&lt;'i&gt; { ... }\n</code></pre>\n\n<blockquote>\n  <p>Without looking into the definition of the Record type at all, we can tell that, if we\n  receive a Record from parse_record, whatever references it contains must point into\n  the input buffer we passed in, and nowhere else (except perhaps at 'static values).</p>\n</blockquote>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 705, "user_id": 5396835, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/w4iDZ.jpg?s=128&g=1", "display_name": "Jonas Bojesen", "link": "https://stackoverflow.com/users/5396835/jonas-bojesen"}, "edited": false, "score": 0, "creation_date": 1578649784, "post_id": 59437723, "comment_id": 105515777, "body": "The error with <code>unknown field</code> occurs when compiling or at runtime?"}], "answers": [{"tags": [], "owner": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "is_accepted": true, "score": 2, "last_activity_date": 1578932968, "creation_date": 1578932968, "answer_id": 59720484, "question_id": 59437723, "link": "https://stackoverflow.com/questions/59437723/how-to-access-js-object-properties-in-wasm-rust/59720484#59720484", "title": "How to access JS object properties in Wasm (Rust)?", "body": "<p><code>JsValue</code> does not have a field <code>name</code>. To get this field you have to declare the JS object.</p>\n\n<p><strong>Variant 1</strong></p>\n\n<p>Add serde to your dependencies:</p>\n\n<pre><code>serde = \"^1.0.101\"\nserde_derive = \"^1.0.101\"\n</code></pre>\n\n<p>Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\n\n#[derive(Serialize, Deserialize)]\npub struct User {\n    pub name: String,\n}\n\n#[wasm_bindgen]\npub fn obj(o: &amp;JsValue){\n    let user: User = o.into_serde().unwrap();\n    console::log_1(user.name);\n}\n</code></pre>\n\n<p><strong>Variant 2</strong></p>\n\n<p>Another way is to use wasm-bindgen directly but I never used it. It should work like this I think:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[wasm_bindgen]\npub struct User {\n    pub name: String,\n}\n\n#[wasm_bindgen]\npub fn obj(o: User){\n    console::log_1(o.name);\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 12576309, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fobye.png?s=128&g=1", "display_name": "filiplitwora", "link": "https://stackoverflow.com/users/12576309/filiplitwora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 505, "favorite_count": 0, "accepted_answer_id": 59720484, "answer_count": 1, "score": 2, "last_activity_date": 1578932968, "creation_date": 1576943968, "last_edit_date": 1577799269, "question_id": 59437723, "link": "https://stackoverflow.com/questions/59437723/how-to-access-js-object-properties-in-wasm-rust", "title": "How to access JS object properties in Wasm (Rust)?", "body": "<p>I'm using wasm bindgen and I have following function :</p>\n\n<pre><code>#[wasm_bindgen]\npub fn obj(o: &amp;JsValue){\nconsole::log_1(o);\n}\n</code></pre>\n\n<p>and in js I call this function <code>obj({name: \"john\"});</code>\nand it works fine, but when i try to <code>console::log_1(o.name);</code>\nit gives error <code>unknown field</code> pointing at <code>name</code></p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1576960937, "post_id": 59437421, "comment_id": 105063099, "body": "I&#39;d dare say that if this weren&#39;t safe, the trait itself would be <code>unsafe</code>, as <code>Send</code> or <code>Sync</code> are, but I also struggle to understand all this <code>Pin</code> business."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1577087386, "last_edit_date": 1592644375, "creation_date": 1577026418, "answer_id": 59445295, "question_id": 59437421, "link": "https://stackoverflow.com/questions/59437421/is-it-safe-to-implement-stdmarkerunpin/59445295#59445295", "title": "Is it safe to implement `std::marker::Unpin`?", "body": "<blockquote>\n<p>Is this safe?</p>\n</blockquote>\n<p>Yes because marking <code>Poller</code> as <code>Unpin</code> is not transitive with regard to its fields. You still can't conjure a pinned <code>_data</code> field out of thin air. It is a compiler error if you try <code>Pin::new(&amp;mut self.get_mut()._data)</code> since <a href=\"https://doc.rust-lang.org/stable/std/pin/struct.Pin.html#method.new\" rel=\"nofollow noreferrer\"><code>new</code></a> is only available for <code>Pin&lt;P&gt;</code> if <code>&lt;P as Deref&gt;::Target</code> is <code>Unpin</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;P&gt; Pin&lt;P&gt; where\n    P: Deref,\n    &lt;P as Deref&gt;::Target: Unpin,\n{\n    pub fn new(pointer: P) -&gt; Pin&lt;P&gt;\n}\n</code></pre>\n<p>The Rust <a href=\"https://doc.rust-lang.org/std/pin/index.html#pinning-is-not-structural-for-field\" rel=\"nofollow noreferrer\"><code>Pin</code> documentation</a> has a section to expand on this:</p>\n<blockquote>\n<p>Pinning is not structural for <code>field</code></p>\n<p>What that type thinks about pinning is not relevant when no <code>Pin&lt;&amp;mut Field&gt;</code> is ever created.</p>\n</blockquote>\n<p>It is only unsafe if you do <code>impl std::marker::Unpin for InnerData {}</code>, which promises the compiler something untrue. It won't be able to stop you from writing <code>Pin::new(&amp;mut self.get_mut()._data)</code> any more.</p>\n<p>So this works:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl Future for Poller {\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        use futures::stream::Stream as _;\n        Pin::new(&amp;mut self.get_mut().file).poll_next(cx).is_ready();\n        Poll::Pending\n    }\n}\n\nimpl std::marker::Unpin for Poller {}\n</code></pre>\n<blockquote>\n<p>What are the alternatives?</p>\n</blockquote>\n<p>There are third party crates such as <code>pin-project</code> to make this <code>Pin</code> business a tad easier:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use pin_project::pin_project;  // pin-project = &quot;0.4.6&quot;\n\n#[pin_project]\nstruct Poller {\n    _data: InnerData,\n    #[pin]\n    file: Stream,\n}\n\nimpl Future for Poller {\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        use futures::stream::Stream as _;\n        let this = self.project();\n        this.file.poll_next(cx).is_ready();\n        Poll::Pending\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5867, "user_id": 2252087, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/020cbe41b02f03d59f3adae022c0ce7d?s=128&d=identicon&r=PG", "display_name": "ensc", "link": "https://stackoverflow.com/users/2252087/ensc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 854, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1577087386, "creation_date": 1576941909, "last_edit_date": 1577025360, "question_id": 59437421, "link": "https://stackoverflow.com/questions/59437421/is-it-safe-to-implement-stdmarkerunpin", "title": "Is it safe to implement `std::marker::Unpin`?", "body": "<p>I am about to convert some code from futures-0.1 to futures-0.3 where the <code>poll()</code> methods require pinned data now.  Some of my structs are unpinnable which complicates the porting.  But there seems to exist an easy way by adding an <code>impl Unpin</code> for these classes.  Is this safe? What are the alternatives?</p>\n\n<p>Example code:</p>\n\n<pre><code>extern crate futures;\n\nuse std::future::Future;\nuse std::pin::Pin;\nuse std::task::{ Poll, Context };\n\nstruct InnerData {\n    _pin: std::marker::PhantomPinned,\n}\n\nstruct Stream {\n}\n\nstruct Poller {\n    _data: InnerData,\n    file: Stream,\n}\n\nimpl futures::stream::Stream for Stream {\n    type Item = ();\n\n    fn poll_next(self: Pin&lt;&amp;mut Self&gt;, _cx: &amp;mut Context) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        Poll::Pending\n    }\n}\n\nimpl Future for Poller {\n    type Output = Result&lt;(), ()&gt;;\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt;\n    {\n        use crate::futures::Stream;\n\n        // here, rust fails with\n        // error[E0277]: the trait bound `std::marker::PhantomPinned: std::marker::Unpin` is not satisfied in `Poller`  \n        Pin::new(&amp;mut self.get_mut().file).poll_next(cx).is_ready();\n\n        Poll::Pending\n    }\n}\n\n// Activating this seems to be an easy workaround...\n// impl std::marker::Unpin for Poller {}\n\nfn main() {\n}\n\n</code></pre>\n\n<p>I use <code>futures-0.3.1</code> and <code>rust-1.40.0</code>.</p>\n"}, {"tags": ["rust", "compilation"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 1, "creation_date": 1576926620, "post_id": 59435327, "comment_id": 105055892, "body": "There is an <code>else</code> block (without <code>if</code>) where <code>output_file_handler</code> is not initialized. A naive answer would be to make <code>output_file_handler</code> to a variable of <code>Option&lt;File&gt;</code>. Can your reduce your to a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">MVCE</a> - (the problem has nothing to do with the used libraries and the code between)."}, {"owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "reply_to_user": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1576926997, "post_id": 59435327, "comment_id": 105055947, "body": "@CoronA If I were to make <code>output_file_handler</code> a variable of <code>Option&lt;File&gt;</code>, how would I change the variable assignments and caling the methods? I have errors when attempting to implement your suggestion: <code>expected enum </code>std::option::Option<code>, found struct </code>std::fs::File`` and <code>method not found in </code>std::option::Option&lt;std::fs::File&gt;`"}, {"owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "reply_to_user": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1576927725, "post_id": 59435327, "comment_id": 105056058, "body": "i make the <code>output_file_handler</code> to a variable of <code>Option&lt;File&gt;</code>, and then what?"}], "answers": [{"tags": [], "owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "is_accepted": true, "score": 4, "last_activity_date": 1576928168, "last_edit_date": 1576928168, "creation_date": 1576927783, "answer_id": 59435780, "question_id": 59435327, "link": "https://stackoverflow.com/questions/59435327/rust-borrow-of-possibly-uninitialized-variable-which-is-obvious-to-me-as-the-p/59435780#59435780", "title": "Rust borrow of possibly-uninitialized variable - which is obvious to me as the programmer that it will always be initialized", "body": "<p>In your program there is a conditional clause where on leg sets <code>output_file_handler</code> and one does not. Let uss start from a simplified example:</p>\n\n<pre><code>fn main() {\n  let mut output_file_handler: File;\n\n  if true {\n    let output_filename: String = \"output\".to_string();\n\n    let create_file_handler = File::create(&amp;output_filename);\n    output_file_handler = match create_file_handler {\n      Ok(file) =&gt; file,\n\n      Err(error) =&gt; {\n        println!(\n          \"ERROR: Could not open the file {} for writing output.\",\n          output_filename\n        );\n        process::abort();\n      }\n    };\n  } else {\n    // output_file_handler is not set\n  }\n\n  output_file_handler.write(b\"Why won't it work?\");\n}\n</code></pre>\n\n<p>Using a simple <code>Option&lt;File&gt;</code> will let this look like:</p>\n\n<pre><code>fn main() {\n  let mut output_file_handler: Option&lt;File&gt;;\n\n  if true {\n    let output_filename: String = \"output\".to_string();\n\n    let create_file_handler = File::create(&amp;output_filename);\n    output_file_handler = match create_file_handler {\n      Ok(file) =&gt; Some(file),\n\n      Err(error) =&gt; {\n        println!(\n          \"ERROR: Could not open the file {} for writing output.\",\n          output_filename\n        );\n        process::abort();\n      }\n    };\n  } else {\n    output_file_handler = None;\n  }\n\n  output_file_handler.unwrap().write(b\"Why won't it work?\");\n}\n</code></pre>\n\n<p>If you can ensure that the else blocks sets all variables in a way that the later use of <code>output_file_handler</code> is prevented there might be even a more sophisticated solution without <code>Option</code>.</p>\n"}], "owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 845, "favorite_count": 0, "accepted_answer_id": 59435780, "answer_count": 1, "score": 0, "last_activity_date": 1576928168, "creation_date": 1576923552, "last_edit_date": 1576926911, "question_id": 59435327, "link": "https://stackoverflow.com/questions/59435327/rust-borrow-of-possibly-uninitialized-variable-which-is-obvious-to-me-as-the-p", "title": "Rust borrow of possibly-uninitialized variable - which is obvious to me as the programmer that it will always be initialized", "body": "<p>I am having a Rust compiler problem here. This code was originally written in C and my job is to port it into Rust code. I am not modifying the algorithm or anything here, but the Rust compiler is stricter than the C compiler, and it marks down perfectly valid code.</p>\n\n<pre><code>error[E0381]: borrow of possibly-uninitialized variable: `output_file_handler`\n   --&gt; src/main.rs:318:9\n    |\n318 |         output_file_handler.write(b\"Why won't it work?\");\n    |         ^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `output_file_handler`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>This program that I'm writing uses the MPI library for Rust, but let's ignore that now because it is not a part of my problem.</p>\n\n<p>The problem is, I have a mutable <code>File</code> object declared at the top of the <code>main()</code> function, being uninitialized at the start. Now because I am using MPI, this is a multi-process program. I am simplifying this a bit and removing unessential code to my problem.</p>\n\n<p><code>my_rank</code> variable basically holds the \"process ID\" of the currently executing process, because the same code can be run by multiple processes. The process with <code>my_rank == 0</code> is only responsible for printing output to a file, <strong>none of the other processes do this</strong>. In the process with <code>my_rank == 0</code>, the <code>output_file_handler</code> is \"active\", and in the other processes it stays uninitialized, it is simply never used.</p>\n\n<p>Apart from the declaration, all and any accesses of <code>output_file_handler</code> are in the process with <code>my_rank == 0</code>, so it is always initialized when it is used. The compiler however, is too dumb to realize that and too strict so it penalizes <em>perfectly good code</em>!</p>\n\n<p>First I have the declaration of the <code>output_file_handler</code>. Then I have some code that starts up the MPI subsystem and \"forks off\" a bunch of processes, and assigns to each process it's respective rank. Then after that in <code>my_rank == 0</code>, the <code>output_file_handler</code> is initialized. Then later on there is a whole bunch of computationally intensive tasks, including message passing, that is shared for all processes. And then after that is done, the <code>output_file_handler</code> should write the results of these computations into a file.</p>\n\n<p>I can't move the initialization of the <code>output_file_handler</code> below these computations into the places where the output is written directly, because if that output file could not be opened, then these intensive computations should not be started at all.</p>\n\n<p>The <code>output_file_handler</code> has to have scope in the entire <code>main()</code> function, starting from the top of the function, because if I define it in one of the <code>if my_rank == 0</code> blocks, then the <code>output_file_handler</code> will go out of scope and get destroyed at the <code>}</code>, and I want to use it later on in the future. That is why I have to put the <code>output_file_handler</code> in the global scope, because there is no other way for me to get the <code>File</code> object from the initialization, because each <code>if { }</code> statement is self contained and the only way to get things out of them would be to use the wider scope at the next lower level. And I think that the actual file is closed when the <code>File</code> object goes out of scope. I do not want that to happen.</p>\n\n<p>Please excuse my lack of knowledge with Rust, but I have very little knowledge as of yet in that programming language, and my assigned job is to port this application from C to Rust. No, I cannot use any other libraries for multi-threading/multi-processing other than MPI.</p>\n\n<pre><code>fn main() {\n    // Because the mpirun executable itself generates standard error and standard output,\n    // I need to create a new File where the application's output should be written.\n    let mut output_file_handler : File;\n    // Similarly, this is the File where the application's timing information shoudl be written.\n    let mut timing_file_handler : File;\n\n    let universe = mpi::initialize().unwrap();\n    let world = universe.world();\n\n    let comm_size : i32 = world.size();\n    let my_rank   : i32 = world.rank();\n\n    /* Some more code here... */\n\n    // Open up the output file.\n        let output_filename : String = \"output\".to_string();\n\n        // The create() static method opens a file in write-only mode.\n        // If the file already existed, the old content is destroyed. Otherwise, a new file is created.\n        let create_file_handler = File::create(&amp;output_filename);\n        // If File::create() succeeds, it returns an instance of Ok() that contains a file handler.\n        // If File::create() fails, it returns an instance of Err() that contains more information about the kind of error that happened.\n        output_file_handler = match create_file_handler {\n            Ok(file) =&gt; {\n                let dummy : i8 = 5;\n                // Send the success message to all processes.\n                for i in 0..comm_size {\n                    world.process_at_rank(i).send_with_tag::&lt;i8&gt;(&amp;dummy, 100);\n                }\n\n                file  // quantity without a ; at the end, is returned by the match statement\n            },\n\n            Err(error) =&gt; {\n                eprintln!(\"ERROR: Could not open the file {} for writing output.\", output_filename);\n                process::abort();\n            }\n        };\n    // Make the other ranks either wait for a success message to be sent, or be killed upon failure.\n    // This is used as a synchronization device.\n    } else {\n        // recieve_with_tag::&lt;i8&gt;() returns a tuple `(i8, mpi::point_to_point::Status)`\n        // recieve_with_tag::&lt;i8&gt;() takes the tag as a parameter.\n        let __dummy = (world.process_at_rank(0).receive_with_tag::&lt;i8&gt;(100)).0;\n    }\n\n\n    /* After that is done, there is a lot of very intensive computations performed here.\n       This code is shared by all the processes. */\n\n    // Later, the final output is written to the file.\n    if my_rank == 0 {\n        output_file_handler.write(b\"Why won't it work?\");\n    }\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 1, "last_activity_date": 1576926627, "creation_date": 1576926627, "answer_id": 59435651, "question_id": 59435208, "link": "https://stackoverflow.com/questions/59435208/rust-module-import-visibility-in-library-crate/59435651#59435651", "title": "Rust module import visibility in library crate", "body": "<blockquote>\n  <p>If I bring a module A into the scope of module B, then the public members of A will be accessible in B and all the sub-modules of B.</p>\n</blockquote>\n\n<p>This assertion is incorrect. The scope of each module contains only things defined or used in the module itself, not in its parents.</p>\n\n<p>You can, however, pull items from the parent explicitly:</p>\n\n<pre><code>mod debugging {\n    use super::bindings; // referring to library root\n    pub fn try_bindings_debug() {\n        bindings::say_hello();\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3f00b8f2ad8bd508012c34e96d565452\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 157, "user_id": 4355224, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/b44d993e38515488569095c9f2e4092d?s=128&d=identicon&r=PG&f=1", "display_name": "Macklin", "link": "https://stackoverflow.com/users/4355224/macklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 59435651, "answer_count": 1, "score": 0, "last_activity_date": 1576926627, "creation_date": 1576922235, "question_id": 59435208, "link": "https://stackoverflow.com/questions/59435208/rust-module-import-visibility-in-library-crate", "title": "Rust module import visibility in library crate", "body": "<p>It seems like I haven't fully understood Rust's module system yet. I have the following file structure:</p>\n\n<pre><code>module_issue\n|_Cargo.toml\n|_src\n  |_main.rs\n  |_lib.rs\n  |_bindings\n    |_mod.rs\n</code></pre>\n\n<p>This code compiles and runs without issues:</p>\n\n<pre><code>// file: bindings/mod.rs\n\npub fn say_hello() {\n    println!(\"Hello from the bindings module!\");\n}\n</code></pre>\n\n<pre><code>// file: lib.rs\n\nmod bindings;\n\npub fn try_bindings() {\n    bindings::say_hello();\n}\n</code></pre>\n\n<pre><code>// file: main.rs\n\nuse module_issue;\n\nfn main() {\n    module_issue::try_bindings();\n}\n</code></pre>\n\n<p>However, if I make a sub-module in <code>lib.rs</code> and try to use <code>bindings::say_hello()</code> from there, I get a compiler error. Here's what <code>lib.rs</code> now looks like:</p>\n\n<pre><code>// file: lib.rs\n\nmod bindings;\n\npub fn try_bindings() {\n    bindings::say_hello();\n}\n\nmod debugging {\n    pub fn try_bindings_debug() {\n        bindings::say_hello(); // &lt;- can't find 'bindings' - shouldn't it be in scope?\n    }\n}\n</code></pre>\n\n<p>and this is the error I get:</p>\n\n<pre><code>error[E0433]: failed to resolve: use of undeclared type or module `bindings`\n  --&gt; src\\lib.rs:10:9\n   |\n10 |         bindings::say_hello();\n   |         ^^^^^^^^ use of undeclared type or module `bindings`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>In <code>lib.rs</code>, I also tried replacing <code>mod bindings;</code> with <code>use crate::bindings;</code>, but that resulted in a different error:</p>\n\n<pre><code>error[E0432]: unresolved import `crate::bindings`\n --&gt; src\\lib.rs:2:5\n  |\n2 | use crate::bindings;\n  |     ^^^^^^^^^^^^^^^ no `bindings` in the root\n\nerror[E0433]: failed to resolve: use of undeclared type or module `bindings`\n  --&gt; src\\lib.rs:10:9\n   |\n10 |         bindings::say_hello();\n   |         ^^^^^^^^ use of undeclared type or module `bindings`\n\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>My understanding of the module system was as follows: If I bring a module <code>A</code> into the scope of module <code>B</code>, then the public members of <code>A</code> will be accessible in <code>B</code> and all the sub-modules of <code>B</code>. In this case, I bring the <code>bindings</code> module into the scope of the library root. The <code>debugging</code> module is a sub-module of that root, so it should have access to <code>bindings</code> as well. Can you tell me where I went wrong? My priority isn't really to solve the problem, but to understand why this doesn't work.</p>\n\n<p>I'm working on Windows 10, with the following toolchain:</p>\n\n<pre><code>cargo 1.39.0 (1c6ec66d5 2019-09-30)\nrustc 1.39.0 (4560ea788 2019-11-04)\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576885466, "post_id": 59432258, "comment_id": 105050609, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=22e26a2425a30b66e7bd73563f6ac03a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}], "answers": [{"comments": [{"owner": {"reputation": 439, "user_id": 3338646, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/TQCYu.jpg?s=128&g=1", "display_name": "huckfinn", "link": "https://stackoverflow.com/users/3338646/huckfinn"}, "edited": false, "score": 0, "creation_date": 1576888262, "post_id": 59432440, "comment_id": 105051035, "body": "The playground is a really nice feature of the rust infrastructure."}, {"owner": {"reputation": 24405, "user_id": 99354, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b6ee96d3a17fcbd2bd24210eb7caf441?s=128&d=identicon&r=PG&f=1", "display_name": "Marco van de Voort", "link": "https://stackoverflow.com/users/99354/marco-van-de-voort"}, "edited": false, "score": 0, "creation_date": 1576944180, "post_id": 59432440, "comment_id": 105059502, "body": "FreePascal/Delphi string is an automated (refcounted) type, with length and encoding attached."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1576924824, "last_edit_date": 1576924824, "creation_date": 1576885465, "answer_id": 59432440, "question_id": 59432258, "link": "https://stackoverflow.com/questions/59432258/how-to-set-correctly-a-generic-collection-type-in-rust/59432440#59432440", "title": "How to set correctly a generic collection type in rust", "body": "<p>To be the rough equivalent of the <code>freepascal</code> version, <code>TString</code> should probably be <code>String</code> rather than <code>str</code>. A <code>freepascal</code> String is (<a href=\"https://wiki.freepascal.org/Character_and_string_types#String\" rel=\"nofollow noreferrer\">depending on some flags</a>) a pointer, a length and a heap-allocated array of characters. That's (pretty much) exactly what <code>String</code> is. <code>str</code> is just the array of characters and is unsized so it always has to be behind some kind of (fat) pointer.</p>\n\n<p>Once that change is made, there are only a few other things to fix the code. <code>TPointMap</code> needs a lifetime parameter since it uses a reference type. The lifetime on the reference has to come from somewhere, so we make <code>TPointMap</code> generic in that lifetime.</p>\n\n<pre><code>type TPointMap&lt;'a&gt; = BTreeMap&lt;&amp;'a TString, TPoint&gt;;\n</code></pre>\n\n<p>You might also consider simply using <code>BTreeMap&lt;TString, TPoint&gt;</code> if your use-case allows for it.</p>\n\n<p>We need to do a bit of conversion to declare <code>key: TString</code>. String literals have type <code>'static str</code>, but there's a simple <code>to_string</code> method to convert them to <code>String</code>s.</p>\n\n<pre><code>let key: TString = \"123\".to_string(); \n</code></pre>\n\n<p>Finally, there's a typo in <code>found.X</code>.</p>\n\n<pre><code>Some(found) =&gt; println!(\"X: {} Y: {}\", found.x, found.y),\n</code></pre>\n\n<p>Altogether, we have</p>\n\n<pre><code>use std::collections::BTreeMap; // Use a map from the collection\n\ntype TDouble = f64; // Define the 64 bit float type\ntype TString = String; // Define the string type\nstruct TPoint {\n    // Define the string type\n    x: TDouble, // Coordinate X\n    y: TDouble, // Coordinate Y\n}\n\n// Define a map of points with strings as key\ntype TPointMap&lt;'a&gt; = BTreeMap&lt;&amp;'a TString, TPoint&gt;;\n\n// Test program\nfn main() {\n    let point = TPoint { x: 1.0, y: 2.0 }; // Declare and define the point variable\n    let mut map = TPointMap::new(); // Declare the map and allocate it\n    let key: TString = \"123\".to_string(); // Declare and define the address of point\n    map.insert(&amp;key, point); // Add the point to the map\n                             // search the point and print it\n    match map.get(&amp;key) {\n        Some(found) =&gt; println!(\"X: {} Y: {}\", found.x, found.y),\n        None =&gt; println!(\"Key '{}' not found\", key),\n    }\n    // map is de-allocated by scope\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ce6526cea6ba4845393fca2e31aa2afb\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust's <code>String</code> and <code>str</code>?</a></p>\n"}, {"tags": [], "owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "is_accepted": false, "score": 4, "last_activity_date": 1576885475, "creation_date": 1576885475, "answer_id": 59432442, "question_id": 59432258, "link": "https://stackoverflow.com/questions/59432258/how-to-set-correctly-a-generic-collection-type-in-rust/59432442#59432442", "title": "How to set correctly a generic collection type in rust", "body": "<p>The reason you're seeing this failure is because you need a lifetime for the reference.  Rust currently has no way of knowing how long your reference is supposed to last.</p>\n\n<p>Once you fix that, you're going to run into the fact that you can't create variables of type <code>str</code> because it's unsized and the compiler has no way of telling at compile time how much space to allocate.</p>\n\n<p>The simplest, most minimal change you can make here is to change the following lines:</p>\n\n<pre><code>type TString = &amp;'static str;\n</code></pre>\n\n<p>and </p>\n\n<pre><code>type TPointMap = BTreeMap&lt;TString, TPoint&gt;;\n</code></pre>\n\n<p>(You'll also need to downcase the <code>x</code> in <code>found.X</code>, since Rust is case-sensitive.)</p>\n\n<p>That will tell the compiler that your string type is <code>&amp;'static str</code>, which is the type for string literals, since they live as long as the program.</p>\n\n<p>You could also also make it work with <code>str</code> references of any arbitrary lifetime by doing the following instead:</p>\n\n<pre><code>type TString&lt;'a&gt; = &amp;'a str;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>type TPointMap&lt;'a&gt; = BTreeMap&lt;TString&lt;'a&gt;, TPoint&gt;;\n</code></pre>\n\n<p>However, in many programs, you may want to insert strings that aren't limited to string literals and avoid the necessary borrow for the lifetime of the map, such as if you want to return the map from a function.  In such a case, it may make sense to use an owned <code>String</code> object so that the object lives as long as the map.  In such a case, your code would look like the following:</p>\n\n<pre><code>use std::collections::BTreeMap; // Use a map from the collection\n\ntype TDouble = f64; // Define the 64 bit float type\ntype TString = String; // Define the string type\nstruct TPoint {     // Define the string type\n    x: TDouble,     // Coordinate X\n    y: TDouble,     // Coordinate Y\n}\n\n// Define a map of points with strings as key\ntype TPointMap = BTreeMap&lt;TString, TPoint&gt;;\n\n// Test program\nfn main() {\n    let point = TPoint { x: 1.0, y: 2.0 }; // Declare and define the point variable\n    let mut map = TPointMap::new();        // Declare the map and allocate it\n    let key: TString = \"123\".to_string();  // Declare and define the address of point\n    map.insert(key.clone(), point);        // Add the point to the map\n    // search the point and print it\n    match map.get(&amp;key) {\n        Some(found) =&gt; println!(\"X: {} Y: {}\", found.x, found.y),\n        None =&gt; println!(\"Key '{}' not found\", key),\n    }\n   // map is de-allocated by scope\n}\n</code></pre>\n"}], "owner": {"reputation": 439, "user_id": 3338646, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/TQCYu.jpg?s=128&g=1", "display_name": "huckfinn", "link": "https://stackoverflow.com/users/3338646/huckfinn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 0, "accepted_answer_id": 59432440, "answer_count": 2, "score": 2, "last_activity_date": 1576943979, "creation_date": 1576883645, "last_edit_date": 1576943979, "question_id": 59432258, "link": "https://stackoverflow.com/questions/59432258/how-to-set-correctly-a-generic-collection-type-in-rust", "title": "How to set correctly a generic collection type in rust", "body": "<p>I am trying to test some language features in Rust 1.39 under FreeBSD 12  in comparison to Free Pascal 3.0.4 for a simple generic collection of points with 2D Points addressed by string keys. Unfortunately the code for the generic type declaration does not compile in a very early state and stops with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:11:31\n   |\n11 |     type TPointMap = BTreeMap&lt;&amp;TString, TPoint&gt;;\n   |     \n</code></pre>\n\n<p>How do I have to rewrite the Rust code?  </p>\n\n<p>Details:</p>\n\n<p>To test the language behavior I've written two small programs in Rust and Pascal addressing \"syntactically\" the same context. The Pascal program is a straightforward declaration of:</p>\n\n<ol>\n<li>some plain types, a record type and a generic map container, </li>\n<li>that will be used aftermath to define a point, store the point in a new allocated map,</li>\n<li>search the point by the key and write the data to the <code>STDIO</code> </li>\n<li>and finally free the map.</li>\n</ol>\n\n<pre class=\"lang-pascal prettyprint-override\"><code>program test;\nuses fgl; { Use the free pascal generics library }\ntype\n   TDouble   = Double; { Define a 64 bit float } \n   TString   = String; { Define a string type  } \n   TPoint    = record  { Define a point record }\n                  X : TDouble; { Coordinate X }\n                  Y : TDouble; { Coordinate Y }\n               end; \n   { Define a map of points with strings as key }\n   TPointMap = specialize TFPGMap&lt;TString, TPoint&gt;;\n\n{ Test program } \nvar\n   map   : TPointMap; { Declare the map variable }\n   point : TPoint;    { Declare a point variable }\n   found : TPoint;    { Varaiable for a found point }\n   key   : TString;   { Variable to address the point in the map } \nbegin\n   map := TPointMap.create; { Allocate a new ma container }\n   with point do begin      { Set the point variable }\n      x := 1.0; y := 2.0;\n   end;\n   key := '123';              { Set the key address to '123'  }\n   map.add(key,point);        { Store the point in the map }\n\n   { Search the point an write the result in the rusty way }\n   case map.TryGetData(key, found)  of\n     true  : writeln('X: ',found.X:2;, ' Y:', found.Y:2:2);\n     false : writeln('Key ''',key,''' not found');\n   end;\n   map.free;  { De-allocate the map }\n   { Plain types are de-allocated by scope }\nend.   \n</code></pre>\n\n<p>The program compiles and gives me:</p>\n\n<pre><code>$ ./main \nX: 1.00 Y:2.00\n</code></pre>\n\n<p>Here is my incorrect Rust version of the code: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::BTreeMap; // Use a map from the collection \n\ntype TDouble = f64; // Define the 64 bit float type\ntype TString = str; // Define the string type\nstruct TPoint {     // Define the string type\n    x: TDouble,     // Coordinate X\n    y: TDouble,     // Coordinate Y\n}\n\n// Define a map of points with strings as key \ntype TPointMap = BTreeMap&lt;&amp;TString, TPoint&gt;;\n\n// Test program\nfn main() {\n    let point = TPoint { x: 1.0, y: 2.0 }; // Declare and define the point variable\n    let mut map = TPointMap::new();        // Declare the map and allocate it\n    let key: TString = \"123\";              // Declare and define the address of point \n    map.insert(&amp;key, point);               // Add the point to the map \n    // search the point and print it\n    match map.get(&amp;key) {\n        Some(found) =&gt; println!(\"X: {} Y: {}\", found.X, found.y),\n        None =&gt; println!(\"Key '{}' not found\", key),\n    }\n   // map is de-allocated by scope\n}\n</code></pre>\n\n<p>Remark: I'm aware due to the borrowing and ownership concept, that some code lines cannot be used in the Rust code. The line </p>\n\n<pre><code> match map.get(&amp;key)...\n</code></pre>\n\n<p>is one of them.</p>\n"}, {"tags": ["loops", "vector", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1576876848, "post_id": 59431012, "comment_id": 105048790, "body": "You create a new vector each iteration, then you print the value only on the last iteration. Instead, create the vectors before the loop."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576877048, "post_id": 59431012, "comment_id": 105048834, "body": "You probably also want to print the sums <i>after</i> the loop finishes. Doing so would have caused a compiler error that points out that <code>tax_vec</code> / <code>cost_vec</code> aren&#39;t available there."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576877533, "post_id": 59431012, "comment_id": 105048938, "body": "As a first pass, here&#39;s <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6590a6532ebffd9f1474ce4a3fe20d72\" rel=\"nofollow noreferrer\">one way of rewriting it</a>"}], "owner": {"reputation": 89, "user_id": 3494760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/912417f9a6249e9a17af59a15a9c7342?s=128&d=identicon&r=PG&f=1", "display_name": "muffledcry", "link": "https://stackoverflow.com/users/3494760/muffledcry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1577221571, "creation_date": 1576873703, "last_edit_date": 1577221571, "question_id": 59431012, "link": "https://stackoverflow.com/questions/59431012/why-does-appending-values-to-a-vector-from-inside-a-loop-only-return-the-last-va", "title": "Why does appending values to a vector from inside a loop only return the last values?", "body": "<p><strong>Update</strong>\nThanks to everyone for the help. I think I'm near done, but I'm getting an error that read_one() implicitly returns () as its body has no tail or return expression. Any ideas?</p>\n\n<pre><code>use::std::io;\nuse::std::collections::HashMap;\n\nfn read_one() -&gt; String {\n    let mut words = String::new();\n    io::stdin().read_line(&amp;mut words)\n        .ok()\n        .expect(\"Failed to read line.\");\n}\n\nfn main() {\n\n    let mut tax_rates = HashMap::new();\n    tax_rates.insert(\"AL\".to_string(), 0.04);\n    tax_rates.insert(\"AK\".to_string(), 0.00);\n    tax_rates.insert(\"AZ\".to_string(), 0.056);\n    tax_rates.insert(\"AR\".to_string(), 0.65);\n    tax_rates.insert(\"CA\".to_string(), 0.725);\n    tax_rates.insert(\"CO\".to_string(), 0.029);\n    tax_rates.insert(\"CT\".to_string(), 0.635);\n    tax_rates.insert(\"DE\".to_string(), 0.00);\n    tax_rates.insert(\"DC\".to_string(), 0.06);\n    tax_rates.insert(\"FL\".to_string(), 0.06);\n    tax_rates.insert(\"GA\".to_string(), 0.04);\n    tax_rates.insert(\"HI\".to_string(), 0.04);\n    tax_rates.insert(\"ID\".to_string(), 0.06);\n    tax_rates.insert(\"IL\".to_string(), 0.0625);\n    tax_rates.insert(\"IN\".to_string(), 0.07);\n    tax_rates.insert(\"IA\".to_string(), 0.06);\n    tax_rates.insert(\"KS\".to_string(), 0.065);\n    tax_rates.insert(\"KY\".to_string(), 0.06);\n    tax_rates.insert(\"LA\".to_string(), 0.0445);\n    tax_rates.insert(\"ME\".to_string(), 0.055);\n    tax_rates.insert(\"MD\".to_string(), 0.06);\n    tax_rates.insert(\"MA\".to_string(), 0.0625);\n    tax_rates.insert(\"MI\".to_string(), 0.06);\n    tax_rates.insert(\"MN\".to_string(), 0.06875);\n    tax_rates.insert(\"MS\".to_string(), 0.07);\n    tax_rates.insert(\"MO\".to_string(), 0.0425);\n    tax_rates.insert(\"MT\".to_string(), 0.00);\n    tax_rates.insert(\"NE\".to_string(), 0.055);\n    tax_rates.insert(\"NV\".to_string(), 0.0685);\n    tax_rates.insert(\"NH\".to_string(), 0.00);\n    tax_rates.insert(\"NJ\".to_string(), 0.06625);\n    tax_rates.insert(\"NM\".to_string(), 0.05125);\n    tax_rates.insert(\"NY\".to_string(), 0.04);\n    tax_rates.insert(\"NC\".to_string(), 0.0475);\n    tax_rates.insert(\"ND\".to_string(), 0.05);\n    tax_rates.insert(\"OH\".to_string(), 0.0575);\n    tax_rates.insert(\"OK\".to_string(), 0.045);\n    tax_rates.insert(\"OR\".to_string(), 0.00);\n    tax_rates.insert(\"PA\".to_string(), 0.06);\n    tax_rates.insert(\"RI\".to_string(), 0.07);\n    tax_rates.insert(\"PR\".to_string(), 0.115);\n    tax_rates.insert(\"SC\".to_string(), 0.06);\n    tax_rates.insert(\"SD\".to_string(), 0.045);\n    tax_rates.insert(\"TN\".to_string(), 0.07);\n    tax_rates.insert(\"TX\".to_string(), 0.0625);\n    tax_rates.insert(\"UT\".to_string(), 0.0485);\n    tax_rates.insert(\"VA\".to_string(), 0.043);\n    tax_rates.insert(\"VT\".to_string(), 0.06);\n    tax_rates.insert(\"WA\".to_string(), 0.065);\n    tax_rates.insert(\"WV\".to_string(), 0.06);\n    tax_rates.insert(\"WI\".to_string(), 0.05);\n    tax_rates.insert(\"WY\".to_string(), 0.04);\n\n    println!(\"In what state are you making your purchase?\");\n    let state = read_one();\n    let state = state.trim().to_uppercase();\n\n    println!(\"How many items are you purchasing?\");\n    let mut purchase_number = read_one();\n    let mut purchase_number = purchase_number.trim().parse::&lt;i32&gt;().unwrap();\n\n    match tax_rates.get(&amp;state) {\n        Some(rate) =&gt; {\n            println!(\"The tax rate for {} is ({}).\", state, rate);\n        }\n        None =&gt; {\n            println!(\"None.\");\n        }\n    }\n\n    let mut tax_vec = Vec::new();\n    let mut cost_vec = Vec::new();\n\n    for item_number in 0..purchase_number {\n        println!(\"What is the cost of item number {}?\", item_number);\n        let item_cost = read_one();\n        let item_cost = item_cost.trim().parse::&lt;f64&gt;().unwrap();\n\n        match tax_rates.get(&amp;state) {\n            Some(rate) =&gt; {\n                let tax_amount = item_cost * rate;\n                let fin_cost = item_cost + tax_amount;\n                println!(\"The tax amount for item {} is: {:.2}\", \n                item_number, tax_amount);\n                println!(\"The final cost of item number {} is: {:.2}\",\n                item_number, fin_cost);\n\n                tax_vec.push(tax_amount);\n                cost_vec.push(fin_cost);\n            }\n\n            None =&gt; {\n                println!(\"None.\");\n            }\n        }   \n    }\n\n    println!(\"{:?}\", tax_vec);\n    println!(\"{:?}\", cost_vec);\n}\n</code></pre>\n\n<p><strong>Original Question</strong>\nI'm new to Rust (and coding in general) and messing with a simple program that calculates the state sales tax on a number of purchased items. Before closing, I wanted the program to total all the tax and all the final costs. I'm trying to store the values in two vectors and print them out, but for some reason it only returns the last values.</p>\n\n<p>How can I print the total tax and total cost for the user?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 4, "last_activity_date": 1580416281, "last_edit_date": 1580416281, "creation_date": 1576861383, "answer_id": 59428936, "question_id": 59428223, "link": "https://stackoverflow.com/questions/59428223/is-it-possible-to-create-a-stream-from-a-file-rather-than-loading-the-file-conte/59428936#59428936", "title": "Is it possible to create a Stream from a File rather than loading the file contents into memory?", "body": "<blockquote>\n  <p>Is there some type which can be constructed from a File which implements Stream?</p>\n</blockquote>\n\n<p>No, unfortunately. Nothing built-in in <code>std</code>, <code>futures</code> or <code>tokio</code> can do this directly at the moment.</p>\n\n<p>Due to the \"detatched\" nature of Stream's items, such an implementation would have to allocate a new owned buffer for every slice of incoming data and hand it over to the caller. That wouldn't be very efficient. Until the Rust language has generic associated type (GAT), which hopefully will be in next year, we then can satisfyingly address the problem. Check out <a href=\"https://github.com/rust-lang/futures-rs/issues/2006\" rel=\"nofollow noreferrer\">this <code>futures-rs</code> ticket</a> and <a href=\"https://smallcultfollowing.com/babysteps/blog/2019/12/10/async-interview-2-cramertj-part-2/\" rel=\"nofollow noreferrer\">Niko's async interview #2</a> for more detail.</p>\n\n<p>That being said, there are use cases right now where a <code>Stream</code> facade on top of underlying IO is desirable and good enough.</p>\n\n<blockquote>\n  <p>Is the correct solution to make my own tuple struct which wraps File and implements Stream itself, and is this implementation trivial?</p>\n</blockquote>\n\n<p>For <code>futures-0.1</code> that the <code>rusoto</code> depends on, there are several ways to implement this:</p>\n\n<ul>\n<li>implement <code>Stream</code> trait for a struct that wraps a <code>Read</code></li>\n<li>make use of <code>futures</code> utility functions such as <code>futures::stream::poll_fn</code></li>\n<li><code>tokio-codec-0.1</code> has an excellent <code>FramedRead</code> that has already implemented <code>Stream</code></li>\n</ul>\n\n<p>The third is surely the easiest:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::stream::Stream;  // futures = \"0.1.29\"\nuse rusoto_core::{ByteStream, Region};  // rusoto_core = \"0.42.0\"\nuse rusoto_s3::{PutObjectOutput, PutObjectRequest, S3Client, S3};  // rusoto_s3 = \"0.42.0\"\nuse std::{error::Error, fs::File, path::Path};\nuse tokio_codec::{BytesCodec, FramedRead};  // tokio-codec = \"0.1.1\"\nuse tokio_io::io::AllowStdIo;  // tokio-io = \"0.1.12\"\n\nfn upload_file(file_path: &amp;Path) -&gt; Result&lt;PutObjectOutput, Box&lt;dyn Error&gt;&gt; {\n    let file = File::open(file_path)?;\n    let aio = AllowStdIo::new(file);\n    let stream = FramedRead::new(aio, BytesCodec::new()).map(|bs| bs.freeze());\n\n    let client = S3Client::new(Region::UsEast1);\n    let mut request = PutObjectRequest::default();\n    request.body = Some(ByteStream::new(stream));\n\n    Ok(client.put_object(request).sync()?)\n}\n</code></pre>\n"}], "owner": {"reputation": 6079, "user_id": 907186, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/409d9fd7356a2876a35dcd461713d749?s=128&d=identicon&r=PG", "display_name": "daltonclaybrook", "link": "https://stackoverflow.com/users/907186/daltonclaybrook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 0, "accepted_answer_id": 59428936, "answer_count": 1, "score": 4, "last_activity_date": 1580416281, "creation_date": 1576858052, "question_id": 59428223, "link": "https://stackoverflow.com/questions/59428223/is-it-possible-to-create-a-stream-from-a-file-rather-than-loading-the-file-conte", "title": "Is it possible to create a Stream from a File rather than loading the file contents into memory?", "body": "<p>I'm currently using the <code>rusoto_s3</code> lib to upload a file to S3. All the examples I have found do the same thing: Open a file, read the full contents of the file into memory (<code>Vec&lt;u8&gt;</code>), then convert the Vec into a <code>ByteStream</code> (which implements <code>From&lt;Vec&lt;u8&gt;&gt;</code>). Here is a code example:</p>\n\n<pre><code>fn upload_file(&amp;self, file_path: &amp;Path) -&gt; FileResult&lt;PutObjectOutput&gt; {\n    let mut file = File::open(file_path)?;\n    let mut file_data: Vec&lt;u8&gt; = vec![];\n    file.read_to_end(&amp;mut file_data)?;\n\n    let client = S3Client::new(Region::UsEast1);\n    let mut request = PutObjectRequest::default();\n    request.body = Some(file_data.into());\n\n    Ok(client.put_object(request).sync()?)\n}\n</code></pre>\n\n<p>This is probably acceptable for small files, but (I assume) this technique would break down as soon as you attempt to upload a file with a size greater than the available heap memory.</p>\n\n<p>Another way to create a <code>ByteStream</code> is by <a href=\"https://rusoto.github.io/rusoto/rusoto_core/struct.ByteStream.html#method.new\" rel=\"nofollow noreferrer\">using this initializer</a> which accepts an object implementing the <code>Stream</code> trait. I would assume that <code>File</code> would implement this trait, but this does not appear to be the case. </p>\n\n<h3>My question(s):</h3>\n\n<p>Is there some type which can be constructed from a <code>File</code> which implements <code>Stream</code>? Is the correct solution to make my own tuple struct which wraps <code>File</code> and implements <code>Stream</code> itself, and is this implementation trivial? Is there another solution I'm not seeing, or am I simply misunderstanding how memory is allocated in the code above?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1576857647, "post_id": 59428096, "comment_id": 105042246, "body": "<code>Sync</code> but not <code>Send</code> does not make sense. If an object can be synchronized between threads, it can also be sent from one thread to another, by definition."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1576903482, "post_id": 59428096, "comment_id": 105052575, "body": "Not exactly: <a href=\"https://users.rust-lang.org/t/sync-but-not-send/21551\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/sync-but-not-send/21551</a>"}], "answers": [{"comments": [{"owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "edited": false, "score": 0, "creation_date": 1576872909, "post_id": 59428741, "comment_id": 105047671, "body": "Thanks all. Subtle, but IIUC: If whole of Struct Foo { } can be moved, it is Send. If &amp;struct Foo can be shared, it is Sync. One contrived example of Sync but no Send: (assuming scoped threads for lifetime issues) - Struct Foo{} uses thread local storage to keep some state, and exposes thread safe get/set methods for that state.  Now the &amp;Foo can be passed around, but not Foo itself.  Does this sound right?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1576875835, "post_id": 59428741, "comment_id": 105048549, "body": "<a href=\"https://users.rust-lang.org/t/sync-but-not-send/21551?u=optimisticpeach\" rel=\"nofollow noreferrer\">This</a> URLO thread talks about it; mentioning both thread-local storage and weird ffi types. So yes, your <code>&amp;Foo</code> can be passed around but not the <code>Foo</code> itself.  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=089dfb9059dcf88728511d82cd05b608\" rel=\"nofollow noreferrer\">This</a> is a curious example; you can&#39;t pass around a <code>&amp;Mutex&lt;Foo&gt;</code> since <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#impl-Sync\" rel=\"nofollow noreferrer\"><code>Mutex&lt;T&gt;: Sync where T: Send</code></a>."}, {"owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "edited": false, "score": 0, "creation_date": 1576878704, "post_id": 59428741, "comment_id": 105049229, "body": "Also a bit surprising that Box&lt;T&gt; is both Sync/Send, as one would expect it to to be Send only, guaranteeing unique ownership. My reasoning being: it is like std::unique_ptr in C++, which is move only. Along the same lines, raw pointers could be Send only, as long as a single thread owns/uses the pointer. But I guess raw pointers fall in the unsafe/grey area"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 2, "creation_date": 1576883635, "post_id": 59428741, "comment_id": 105050261, "body": "<code>Box&lt;T&gt;</code> can be treated as essentially a <code>T</code>. It represents ownership of a <code>T</code>, and will also implement the <code>Send</code>/<code>Sync</code> traits if <code>T: Send</code>/<code>T: Sync</code>. The only thing that a <code>Box&lt;T&gt;</code> semantically does is move the object into the heap and give you a pointer to it. This pointer is special though, since the pointer (I&#39;ll call it box) now owns the object. You should treat a <code>Box&lt;T&gt;</code> the same as a <code>T</code> in most cases."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": false, "score": 7, "last_activity_date": 1576860782, "last_edit_date": 1576860782, "creation_date": 1576860463, "answer_id": 59428741, "question_id": 59428096, "link": "https://stackoverflow.com/questions/59428096/understanding-the-send-trait/59428741#59428741", "title": "Understanding the Send trait", "body": "<p><code>Send</code> means that a type is safe to <em>move</em> from one thread to another. If the same type also implements <code>Copy</code>, this also means that it is safe to <em>copy</em>  from one thread to another.</p>\n\n<p><code>Sync</code> means that a type is safe to reference from multiple threads at the same time. Specifically, that <code>&amp;T</code> is <code>Send</code> and can be moved/copied to another thread if <code>T</code> is <code>Sync</code>.</p>\n\n<p>So <code>Send</code> and <code>Sync</code> capture two different aspects of thread safety:</p>\n\n<ul>\n<li>Non-<code>Send</code> types can only ever be owned by a single thread, since they cannot be moved or copied to other threads.</li>\n<li>Non-<code>Sync</code> types can only be used by a single thread <em>at any single time</em>, since their references cannot be moved or copied to other threads. They can still be moved between threads if they implement <code>Send</code>.</li>\n</ul>\n\n<p>It rarely makes sense to have <code>Sync</code> without <code>Send</code>, as being able to use a type from different threads would usually mean that moving ownership between threads should also be possible. Although they are technically different, so it is conceivable that certain types can be <code>Sync</code> but not <code>Send</code>.</p>\n\n<p>Most types that own data will be <code>Send</code>, as there are few cases where data can't be moved from one thread to another (and not be accessed from the original thread afterwards).\nSome common exceptions:</p>\n\n<ul>\n<li>Raw pointers are never <code>Send</code> nor <code>Sync</code>.</li>\n<li>Types that share ownership of data without thread synchronization (for instance <code>Rc</code>).</li>\n<li>Types that borrow data that is not <code>Sync</code>.</li>\n<li>Types from external libraries or the operating system that are not thread safe.</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "edited": false, "score": 0, "creation_date": 1594997564, "post_id": 60109068, "comment_id": 111331589, "body": "Great Answer. Just a small point;  &quot;If the data is not <code>Sync</code> (e.g. a mutable type), it can be made <code>Sync</code> ...&quot;   -- A mutable type can be a mutable reference which is <code>Sync</code>.  eg. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=06f9be034bc557416db904b71aa1d9b7\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 385, "user_id": 2644842, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a1eec3f237533b0483635235b2efaea?s=128&d=identicon&r=PG", "display_name": "Jonathan Giddy", "link": "https://stackoverflow.com/users/2644842/jonathan-giddy"}, "is_accepted": false, "score": 26, "last_activity_date": 1609616518, "last_edit_date": 1609616518, "creation_date": 1581061399, "answer_id": 60109068, "question_id": 59428096, "link": "https://stackoverflow.com/questions/59428096/understanding-the-send-trait/60109068#60109068", "title": "Understanding the Send trait", "body": "<p><a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"noreferrer\"><code>Sync</code></a> allows an object to to be used by two threads A and B at the <em>same</em> time. This is trivial for non-mutable objects, but mutations need to be synchronized (performed in sequence with the same order being seen by all threads). This is often done using a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"noreferrer\"><code>RwLock</code></a> which allows one thread to proceed while others must wait. By enforcing a shared order of changes, these types can turn a non-<code>Sync</code> object into a <code>Sync</code> object. Another mechanism for making objects <code>Sync</code> is to use atomic types, which are essentially <code>Sync</code> primitives.</p>\n<p><a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"noreferrer\"><code>Send</code></a> allows an object to be used by two threads A and B at <em>different</em> times. Thread A can create and use an object, then send it to thread B, so thread B can use the object while thread A cannot. The Rust ownership model can be used to enforce this non-overlapping use. Hence the ownership model is an important part of Rust's <code>Send</code> thread safety, and may be the reason that <code>Send</code> is less intuitive than <code>Sync</code> when comparing with other languages.</p>\n<p>Using the above definitions, it should be apparent why there are few examples of types that are <code>Sync</code> but not <code>Send</code>. If an object can be used safely by two threads at the same time (<code>Sync</code>) then it can be used safely by two threads at different times (<code>Send</code>). Hence, <code>Sync</code> usually implies <code>Send</code>.</p>\n<p>Most objects can be used safely by different threads if the uses can be guaranteed to be at different times. Hence, most types are <code>Send</code>.</p>\n<p><a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\"><code>Rc</code></a> is an exception. It does not implement <code>Send</code>. <code>Rc</code> allows data to have multiple owners. If one owner in thread A could send the <code>Rc</code> to another thread, giving ownership to thread B, there could be other owners in thread A that can still use the object. Since the reference count is modified non-atomically, the value of the count on the two threads may get out of sync and one thread may drop the pointed-at value while there are owners in the other thread.</p>\n<p><a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc</code></a> is an <code>Rc</code> that uses an atomic type for the reference count. Hence it can be used by multiple threads without the count getting out of sync.  If the data that the <code>Arc</code> points to is <code>Sync</code>, the entire object is <code>Sync</code>.  If the data is not <code>Sync</code> (e.g. a mutable type), it can be made <code>Sync</code> using a <code>Mutex</code>. Hence the proliferation of <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> types in multithreaded Rust code.</p>\n"}], "owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4147, "favorite_count": 5, "answer_count": 2, "score": 19, "last_activity_date": 1609616518, "creation_date": 1576857485, "last_edit_date": 1585214658, "question_id": 59428096, "link": "https://stackoverflow.com/questions/59428096/understanding-the-send-trait", "title": "Understanding the Send trait", "body": "<p>I am trying to wrap my head around <code>Send + Sync</code> traits. I get the intuition behind <code>Sync</code> - this is the traditional thread safety(like in <code>C++</code>). The object does the necessary locking(interior mutability if needed), so threads can safely access it.</p>\n\n<p>But the <code>Send</code> part is bit unclear. I understand why things like <code>Rc</code> are <code>Send</code> only - the object can be given to a different thread, but non-atomic operations make it thread unsafe.</p>\n\n<ol>\n<li><p>What is the intuition behind <code>Send</code>? Does it mean the object can be copied/moved into another thread context, and continues to be valid after the copy/move?</p></li>\n<li><p>Any examples scenarios for \"<code>Sync</code> but no <code>Send</code>\" would really help. Please also point to any rust libraries for this case (I found several for the opposite though)</p></li>\n</ol>\n\n<p>For (2), I found some threads which use structs with pointers to data on stack/thread local storage as examples. But these are unsafe anyways(Sync or otherwise).</p>\n"}, {"tags": ["pointers", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1576856414, "post_id": 59427345, "comment_id": 105041667, "body": "It&#39;s interesting that the <code>slice_from_raw_parts</code> is safe -- the reason being it&#39;s nigh unusable, as functions take a reference, not pointer, and <code>unsafe</code> is required to go from pointer to reference."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1576968436, "post_id": 59427345, "comment_id": 105064411, "body": "What would be the problem with a null fat pointer? You write that &quot;there is no obvious choice for the [size]&quot;, but on the contrary, I would say that there is no <i>wrong</i> value for size, since the size does not matter for a null pointer..."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1576968596, "post_id": 59427345, "comment_id": 105064441, "body": "@matthieu-m agreed, <code>slice_from_raw_parts</code> may produce a &quot;wrong&quot; <code>*const [T]</code> from a &quot;good&quot; <code>*const T</code> if provided with the wrong size, so I think it should be marked unsafe..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 1, "creation_date": 1577016883, "post_id": 59427345, "comment_id": 105071133, "body": "@Pierre-Antoine: Actually, I was agreeing with NOT marking it <code>unsafe</code>. Yes, it can produce a wrong <code>*const [T]</code> from a good <code>*const T</code>... but you cannot use that <code>*const [T]</code> without <code>unsafe</code> to transmute it to a <code>&amp;[T]</code> or <code>&amp;mut [T]</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1578069994, "post_id": 59427345, "comment_id": 105330762, "body": "@Pierre-Antoine Since there is no wrong length, what length should <code>null</code> return? Zero? One? Something arbitrary? Providing metadata suggests some intent to dereference the pointer, which is obviously wrong, so I submit that a null slice pointer (or a null trait object pointer) is probably the consequence of a design error. You should probably have an <code>Option&lt;&amp;[T]&gt;</code> instead of a <code>*const [T]</code>, anyway."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1578254595, "post_id": 59427345, "comment_id": 105371339, "body": "@trentcl &amp;-references are not an option for me because I can&#39;t assign a lifetime to them (otherwise, I wouldn&#39;t be using pointers, obviously). However, Option&lt;NonNull&lt;[T]&gt;&gt; does the trick..."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 6, "last_activity_date": 1587515236, "last_edit_date": 1587515236, "creation_date": 1576854187, "answer_id": 59427345, "question_id": 59426821, "link": "https://stackoverflow.com/questions/59426821/why-is-stdptrnull-not-usable-with-unsized-types/59427345#59427345", "title": "Why is `std::ptr::null` not usable with unsized types?", "body": "<p>A pointer to an unsized type is a fat pointer with two components: the pointer and the type metadata (a length for slices, and a vtable pointer for trait objects; in the future, Rust may allow other kinds of metadata). <code>null</code> only implies a value for the pointer part; there's no obvious choice for the other value. (You might think 0 is obvious for the length of a null slice pointer, and I can see the argument, but if the pointer is null it hardly matters how many things are there; you can't dereference it anyway, so making the size 0 is not necessary to ensure safety.)</p>\n\n<p>There is no way to create a null pointer to a trait object, but as of Rust 1.42, you can use <a href=\"https://doc.rust-lang.org/core/ptr/fn.slice_from_raw_parts.html\" rel=\"nofollow noreferrer\"><code>ptr::slice_from_raw_parts</code></a> to create a null pointer to a slice. Let's suppose the length of the slice is 0:</p>\n\n<pre><code>use std::ptr;\nfn main() {\n    let p: *const [u32] = ptr::slice_from_raw_parts(ptr::null(), 0);\n    println!(\"{:?}\", p);\n}\n</code></pre>\n\n<p>There is no equivalent function for <code>str</code>, but you could make one by creating a null <code>*const [u8]</code> and casting it with <code>as</code>.</p>\n\n<p>This function (or the related <code>slice_from_raw_parts_mut</code>) is the only way to soundly create a null pointer to a slice. The usual way to get a raw pointer is by casting a reference, but references may never be null.</p>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1587515236, "creation_date": 1576851870, "question_id": 59426821, "link": "https://stackoverflow.com/questions/59426821/why-is-stdptrnull-not-usable-with-unsized-types", "title": "Why is `std::ptr::null` not usable with unsized types?", "body": "<p>As I understand, the standard (only?) way to make a null pointer in Rust is <code>std::ptr::null</code>.</p>\n\n<p>However, that function is declared as follows.</p>\n\n<pre><code>pub const fn null&lt;T&gt;() -&gt; *const T\n</code></pre>\n\n<p>In this declaration, <code>T</code> is implicitly assumed to have fixed size (otherwise, it would be <code>T: ?Sized</code>). As a consequence, it is impossible to use this function with <code>*const str</code> or <code>*const [u32]</code> for example. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=20969b6f4d8d1b2b6bdf7d96ac223b13\" rel=\"noreferrer\">test it in the playground</a></p>\n\n<p>Is there a good reason for excluding unsized types? What's wrong with wanting to create a null <code>*const str</code>?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 611, "user_id": 481767, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcf0d649f070b386c3c3a31d89f4a888?s=128&d=identicon&r=PG", "display_name": "Enrico", "link": "https://stackoverflow.com/users/481767/enrico"}, "edited": false, "score": 1, "creation_date": 1599608100, "post_id": 59426545, "comment_id": 112823920, "body": "Just encountered the same issue, did you resolve this?"}], "owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 133, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1576850742, "creation_date": 1576850742, "question_id": 59426545, "link": "https://stackoverflow.com/questions/59426545/rust-paniccatch-unwind-no-use-in-webassembly", "title": "Rust panic::catch_unwind no use in WebAssembly", "body": "<p>I try to use <code>panic::catch_unwind</code> to catch some errors, but it seems no use, and there is an example:</p>\n\n<p>rust:</p>\n\n<pre><code>use std::{sync::Mutex};\nuse wasm_bindgen::prelude::*;\nuse std::sync::PoisonError;\nuse std::panic;\n\npub struct CurrentStatus {\n  pub index: i32,\n}\n\n#[wasm_bindgen]\nextern {\n  pub fn alert(s: &amp;str);\n}\n\n\nimpl CurrentStatus {\n  fn new() -&gt; Self {\n    CurrentStatus {\n      index: 1,\n    }\n  }\n  fn get_index(&amp;mut self) -&gt; i32 {\n    self.index += 1;\n    self.index.clone()\n  }\n\n  fn add_index(&amp;mut self) {\n    self.index += 2;\n  }\n}\n\nlazy_static! {\n    pub static ref FOO: Mutex&lt;CurrentStatus&gt; = Mutex::new(CurrentStatus::new());\n}\n\nunsafe impl Send for CurrentStatus {}\n\n#[wasm_bindgen]\npub fn add_index() {\n  FOO.lock().unwrap_or_else(PoisonError::into_inner).add_index();\n}\n\n#[wasm_bindgen]\npub fn get_index() -&gt; i32 {\n  let mut foo = FOO.lock().unwrap_or_else(PoisonError::into_inner);\n  let result = panic::catch_unwind(|| {\n    panic!(\"error happen!\"); // original panic! code\n  });\n  if result.is_err() {\n    alert(\"panic!!!!!panic\");\n  }\n  return foo.get_index();\n}\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>const js = import(\"../pkg/hello_wasm.js\");\njs.then(js =&gt; {\n  window.js = js;\n  console.log(js.get_index());\n  js.add_index();\n});\n</code></pre>\n\n<p>I think it should catch the panic and I can call <code>add_index</code> then.</p>\n\n<p>But In fact I can call neither after the panic.</p>\n\n<p>I wish I can catch the panic from one function so when the users call other functions just all right..</p>\n\n<p>Thanks very much</p>\n"}, {"tags": ["types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576857394, "post_id": 59427741, "comment_id": 105042116, "body": "This solution imply that an human can&#39;t change of profession."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1576859524, "post_id": 59427741, "comment_id": 105043029, "body": "Wow, this is an amazing answer! The last approach totally made sense to me, also looked nice. That said, in order to solve my original problem which is really duplication of fields, I am more inclined to use the composition approach, which is putting the duplicated fields into a struct. Your answer showed to me what are the options, and let me choose."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1576855870, "creation_date": 1576855870, "answer_id": 59427741, "question_id": 59426358, "link": "https://stackoverflow.com/questions/59426358/how-to-make-a-struct-containing-an-enum-generic-over-the-enum-variant/59427741#59427741", "title": "How to make a struct containing an enum generic over the enum variant?", "body": "<p>Probably the easiest thing to do is to make <code>Profession</code> a trait rather than an <code>enum</code>, and make each <code>Profession</code> a unit struct:</p>\n\n<pre><code>struct Human&lt;P: ?Sized + Profession&gt; {\n  name: String,\n  profession: P,\n}\n\nstruct Doctor;\nstruct Teacher;\n\ntrait Profession {}\n\nimpl Profession for Doctor {}\nimpl Profession for Teacher {}\n\nstruct Family {\n  family_doctor: Human&lt;Doctor&gt;,\n}\n</code></pre>\n\n<p>Most functions that accept Humans can be expressed using generics or <code>impl Profession</code>:</p>\n\n<pre><code>fn into_name&lt;P: Profession&gt;(any_human: Human&lt;P&gt;) -&gt; String {\n    any_human.name\n}\n</code></pre>\n\n<p>Another way of writing functions that accept different kinds of Human is to use dynamic dispatch. If you do it this way, any access to a <code>Human</code> has to be done through a pointer, like <code>Box&lt;Human&lt;dyn Profession&gt;&gt;</code> or <code>&amp;Human&lt;dyn Profession&gt;</code> (note <a href=\"https://stackoverflow.com/q/28044231/3650362\">this works because of <code>P: ?Sized</code></a> in the definition of <code>Human</code>):</p>\n\n<pre><code>fn into_name_dyn(any_human: Box&lt;Human&lt;dyn Profession&gt;&gt;) -&gt; String {\n    any_human.name\n}\n</code></pre>\n\n<p>Yet another possibility is to implement <code>Profession</code> for <code>Box&lt;dyn Profession&gt;</code> and use that as the type parameter. This puts the pointer inside <code>Human</code> so only the <code>Profession</code> is behind it:</p>\n\n<pre><code>impl&lt;P: ?Sized + Profession&gt; Profession for Box&lt;P&gt; {}\n\nfn into_name_box(any_human: Human&lt;Box&lt;dyn Profession&gt;&gt;) -&gt; String {\n    any_human.name\n}\n</code></pre>\n\n<p>If you still want the <code>enum</code>, here's one suggestion: put the structs inside same-named variants. This way when you add behavior to the <code>Profession</code> trait, you can implement <code>Profession</code> for <code>SomeProfession</code> by deferring to the inner type's implementation. The <code>enum_derive</code> crate can make this process easier.</p>\n\n<pre><code>enum SomeProfession {\n    Doctor(Doctor),\n    Teacher(Teacher),\n}\n\nimpl Profession for SomeProfession {}\n\nfn into_name_enum(any_human: Human&lt;SomeProfession&gt;) -&gt; String {\n    any_human.name\n}\n</code></pre>\n\n<h1>See also</h1>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51661392/3650362\">How can I implement a trait in scope for an enum of existing types for which the trait is implemented?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49705007/3650362\">Is there a way to use existing structs as enum variants?</a></li>\n</ul>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 659, "favorite_count": 0, "accepted_answer_id": 59427741, "answer_count": 1, "score": 4, "last_activity_date": 1576855870, "creation_date": 1576849949, "last_edit_date": 1576851705, "question_id": 59426358, "link": "https://stackoverflow.com/questions/59426358/how-to-make-a-struct-containing-an-enum-generic-over-the-enum-variant", "title": "How to make a struct containing an enum generic over the enum variant?", "body": "<p>Please have a look at the code:</p>\n\n<pre><code>struct Human {\n  name: String,\n  profession: Profession,\n}\n\nenum Profession {\n  Doctor,\n  Teacher\n}\n\nstruct Family {\n  family_doctor: // How to express type that will mean Human (because name matters) of profession Doctor?\n}\n\n</code></pre>\n\n<p>Is it possible to do that, by making <code>Human</code> generic somehow, and pass variant <code>Doctor</code> as a type parameter for <code>profession</code> field? If not, then what is the closest workaround for such relationships you would suggest?</p>\n\n<p><em>Please note</em> that this question may seem as a duplicate of an older one. But firstly, Rust keeps evolving, secondly, I am asking for a workaround.</p>\n"}, {"tags": ["sockets", "rust", "ip", "icmp"], "owner": {"reputation": 31, "user_id": 6756364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4f90331eaf6c771a245ae9383d7c803?s=128&d=identicon&r=PG&f=1", "display_name": "Jordan Newman", "link": "https://stackoverflow.com/users/6756364/jordan-newman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 365, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1607408436, "creation_date": 1576842173, "last_edit_date": 1607408436, "question_id": 59424746, "link": "https://stackoverflow.com/questions/59424746/rust-oserror-22-invalid-argument-when-writing-valid-data-to-socket", "title": "Rust OSError 22, Invalid argument when writing valid data to socket", "body": "<p>I'm struggling to understand why I'm getting this error from a part of my program which sends ICMP echo requests on the network. The starnge thing about this is that I can get it to work by letting the socket handle the IP header, but when I set the IP_HDRINCL option and give it a valid IP header, it returns EINVAL error:</p>\n<pre><code>initialize\nusing interface en0 with ip 192.168.1.126 and mac a4:83:e7:43:40:81.\nInput start ip/scan range: 192.168.1.1\n[45, 0, 0, 1c, 20, 1, 40, 0, 40, 1, 97, 10, c0, a8, 1, 7e, c0, a8, 1, 1, 8, 0, 22, 2a, 97, 3e, 3e, 97]\n[69, 0, 0, 28, 32, 1, 64, 0, 64, 1, 151, 16, 192, 168, 1, 126, 192, 168, 1, 1, 8, 0, 34, 42, 151, 62, 62, 151]\nErr(Os { code: 22, kind: InvalidInput, message: &quot;Invalid argument&quot; })\n</code></pre>\n<p>To help visualise what's going on, I've put dumps of the data being sent in there when it sends it. the first dump is the data in hex format and the second is just the same but in decimal format.</p>\n<p>Here is the code which opens the socket and creates/sends/receives packets:</p>\n<p>( Apologies for the probably overwhelming amount of code, just though I should make sure I provide enough info:) )</p>\n<pre><code>    let response = net_tools::interface::Interface::detect();\n    if response.is_err() {\n        panic! {response};\n    }\n    let active_interface = response.unwrap();\n    println!(\n        &quot;using interface {} with ip {} and mac {}.&quot;,\n        active_interface.get_name(),\n        active_interface.get_ip_as_struct(),\n        active_interface.get_mac()\n    );\n    let scan_targets = net_tools::TaregtAddresses::retrieve_from_user();\n    let sock = net_tools::socket_tools::Socket::new_v4().expect(&quot;Failed to open socket&quot;);\n    let mut i = 0;\n    for ipv4addr in scan_targets {\n        if i == 1 {\n            break;\n        }\n        let mut d = packet_crafter::Packet::new(\n            active_interface.clone(),\n            vec![Protocols::IP, Protocols::ICMP],\n            // vec![Protocols::ICMP],\n        );\n        d.ip_header.set_next_protocol(Protocols::ICMP);\n        d.ip_header.set_dst_ip(Some(ipv4addr.octets()));\n        // d.ip_header.set_tos(0b11000100);\n        d.finalize_headers(); // calculates checksums etc\n        let data = d.build();\n        println!(&quot;{:x?}&quot;, data);\n        println!(&quot;{:?}&quot;, data);\n        let response = sock.sendto(data.as_slice(), SocketAddrV4::new(ipv4addr, 21));\n        println!(&quot;{:?}&quot;, response);\n        i += 1;\n    }\n    println!(&quot;All data sent, receiving response:&quot;);\n    let mut a = [0u8; 56];\n    let received_data = sock.recv(&amp;mut a);\n    println!(&quot;{:?}&quot;, received_data);\n    let v = a.to_vec();\n    println!(&quot;{:?}&quot;, v);\n</code></pre>\n<p>This is how I'm opening a socket, and sending data on it, notice that I call setsockopt and set IP_HDRINCL to 1 when opening it:</p>\n<pre><code>    pub fn new_v4() -&gt; crate::io::Result&lt;Self&gt; {\n        unsafe {\n            let fam = libc::AF_INET; // Set domain family to ipv4\n            if cfg!(target_os = &quot;linux&quot;) {\n                match cvt(libc::socket(fam, libc::SOCK_RAW | SOCK_CLOEXEC, 1)) {\n                    Ok(fd) =&gt; return Ok(Self(Fd::new(fd))),\n                    Err(ref e) if e.raw_os_error() == Some(libc::EINVAL) =&gt; {}\n                    Err(e) =&gt; return Err(e),\n                }\n            }\n\n            let _fd = cvt(libc::socket(fam, libc::SOCK_RAW, 1))?; // 1 = setting next protocol as ICMP\n            let _fd = Fd::new(_fd);\n            _fd.set_cloexec()?;\n            let socket = Self(_fd);\n            if cfg!(target_vendor = &quot;apple&quot;) {\n                let payload = &amp;1u32 as *const u32 as *const libc::c_void;\n                cvt(libc::setsockopt(\n                    *socket.as_inner(),\n                    libc::SOL_SOCKET,\n                    SO_NOSIGPIPE,\n                    payload,\n                    size_of::&lt;libc::c_int&gt;() as libc::socklen_t,\n                ))?;\n            }\n            let payload = &amp;1u32 as *const u32 as *const libc::c_void;\n            cvt(libc::setsockopt(\n                *socket.as_inner(),\n                libc::IPPROTO_IP,\n                libc::IP_HDRINCL,\n                payload,\n                size_of::&lt;libc::c_int&gt;() as libc::socklen_t,\n            ))?;\n            Ok(socket)\n        }\n    }\n\n    pub fn sendto(&amp;self, buf: &amp;[u8], addr: SocketAddrV4) -&gt; crate::io::Result&lt;usize&gt; {\n        unsafe {\n            let (sa, l) = sock_addr_into_raw(addr);\n            let n = cvt({\n                libc::sendto(\n                    *self.as_inner(),\n                    buf.as_ptr() as *const libc::c_void,\n                    cmp::min(buf.len(), super::max_len()),\n                    MSG_NOSIGNAL,\n                    &amp;sa as *const _,\n                    l,\n                )\n            })?;\n            Ok(n as usize)\n        }\n    }\n</code></pre>\n<p>This is the function to convert the type of the socketAddr:</p>\n<pre><code>pub fn sock_addr_into_raw(s: SocketAddrV4) -&gt; (libc::sockaddr, libc::socklen_t) {\n    unsafe {\n        let mut storage = mem::MaybeUninit::&lt;libc::sockaddr&gt;::uninit();\n        let len = mem::size_of::&lt;SocketAddrV4&gt;();\n        copy_nonoverlapping(\n            &amp;s as *const _ as *const libc::sockaddr as *const _ as *const u8,\n            &amp;mut storage as *mut _ as *mut u8,\n            len,\n        );\n        (storage.assume_init(), len as _)\n    }\n}\n</code></pre>\n<p>So back to my point, as you can see from the first segment of code, the IP header in the packet data that I dump is a valid IP header, followed by a valid ICMP header, as far as I'm aware, I have been changing things around to ensure it's valid so correct me if its not. But anyway, I know that all the other parameters being passed into <code>sendto</code> are valid because when I set the IP_HDRINCL socket option to 0 and only send ICMP data then it works...</p>\n<pre><code>initialize\nusing interface en0 with ip 192.168.1.126 and mac a4:83:e7:43:40:81.\nInput start ip/scan range: 192.168.1.1\n[8, 0, 8a, 92, 3f, 2e, 2e, 3f]\n[8, 0, 138, 146, 63, 46, 46, 63]\nOk(8)\nAll data sent, receiving response:\nOk(28)\n[69, 0, 8, 0, 224, 108, 0, 0, 254, 1, 88, 164, 192, 168, 1, 1, 192, 168, 1, 126, 0, 0, 146, 146, 63, 46, 46, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>\n<p>I've even tried things such as sending an ethernet II header in the packet when IP_HDRINCL is 1, but that still just gives the same OSError. Does anyone know why sending the IP header myself breaks it??</p>\n<p>(btw I'm running this on Mac OS Mojave 10.14.6)</p>\n"}, {"tags": ["compiler-errors", "rust", "mpi", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576824145, "post_id": 59420814, "comment_id": 105028390, "body": "the error message say you need to install &quot;autoreconf&quot;"}, {"owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576825782, "post_id": 59420814, "comment_id": 105028830, "body": "@Stargateur How should I do that? Using <code>apt-get</code>?"}, {"owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1576826118, "post_id": 59420814, "comment_id": 105028925, "body": "@Stargateur Thank you, that worked. I used <code>sudo apt-get install autoconf</code> then <code>cargo clean</code> and <code>cargo build</code> again."}], "owner": {"reputation": 1810, "user_id": 5500589, "user_type": "registered", "accept_rate": 35, "profile_image": "https://i.stack.imgur.com/IldVR.jpg?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/5500589/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2060, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1576823697, "creation_date": 1576823697, "question_id": 59420814, "link": "https://stackoverflow.com/questions/59420814/cargo-mpi-with-rust-wont-build-due-to-error-failed-to-run-custom-build-command", "title": "Cargo MPI with Rust won&#39;t build due to error: failed to run custom build command for `libffi-sys v0.6.0`", "body": "<p>I am having problems getting started with Rust and MPI! I can't get Cargo to build my project. This is the error that I'm getting:</p>\n\n<pre><code>konst@ub0:~/rust_proj/bobo$ cargo build\n   Compiling libc v0.2.66\n   Compiling lazy_static v1.4.0\n   Compiling memchr v2.2.1\n   Compiling log v0.4.8\n   Compiling glob v0.2.11\n   Compiling cfg-if v0.1.10\n   Compiling regex v0.2.11\n   Compiling ucd-util v0.1.5\n   Compiling libloading v0.4.3\n   Compiling bitflags v1.2.1\n   Compiling utf8-ranges v1.0.4\n   Compiling unicode-width v0.1.7\n   Compiling ansi_term v0.11.0\n   Compiling bindgen v0.31.3\n   Compiling strsim v0.8.0\n   Compiling vec_map v0.8.1\n   Compiling lazy_static v0.2.11\n   Compiling quote v0.3.15\n   Compiling peeking_take_while v0.1.2\n   Compiling pkg-config v0.3.17\n   Compiling semver-parser v0.7.0\n   Compiling make-cmd v0.1.0\n   Compiling gcc v0.3.55\n   Compiling custom_derive v0.1.7\n   Compiling abort_on_panic v1.0.0\n   Compiling thread_local v0.3.6\n   Compiling regex-syntax v0.5.6\n   Compiling textwrap v0.11.0\n   Compiling clang-sys v0.21.2\n   Compiling semver v0.9.0\n   Compiling build-probe-mpi v0.1.1\n   Compiling conv v0.3.3\n   Compiling rustc_version v0.2.3\n   Compiling log v0.3.9\n   Compiling aho-corasick v0.6.10\n   Compiling memchr v1.0.2\n   Compiling atty v0.2.13\n   Compiling which v1.0.5\n   Compiling nom v3.2.1\n   Compiling clap v2.33.0\n   Compiling mpi v0.5.4\n   Compiling cexpr v0.2.3\n   Compiling env_logger v0.4.3\n   Compiling libffi-sys v0.6.0\n   Compiling mpi-sys v0.1.2\nerror: failed to run custom build command for `libffi-sys v0.6.0`\n\nCaused by:\n  process didn't exit successfully: `/home/konst/rust_proj/bobo/target/debug/build/libffi-sys-4c70f12629a49359/build-script-build` (exit code: 101)\n--- stderr\n./autogen.sh: 2: exec: autoreconf: not found\nthread 'main' panicked at 'Generating configure', /home/konst/.cargo/registry/src/github.com-1ecc6299db9ec823/libffi-sys-0.6.0/build.rs:27:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre>\n\n<p>Not considering the target directory, this is what my current project directory looks like:</p>\n\n<pre><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.rs\n\n1 directory, 3 files\n</code></pre>\n\n<p>This is my <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nname = \"bobo\"\nversion = \"0.1.0\"\nauthors = [\"konst\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nmpi = \"0.5\"\n</code></pre>\n\n<p>This is my <code>main.rs</code> file. I just wanted to get a first example of MPI in Rust running.</p>\n\n<pre><code>extern crate mpi;\n\nuse mpi::traits::*;\n\nfn main() {\n    let universe = mpi::initialize().unwrap();\n    let world = universe.world();\n    let size = world.size();\n    let rank = world.rank();\n    let processor = mpi::environment::processor_name().unwrap();\n\n    println!(\n        \"Hello world from processor {}, rank {} out of {} processors\\n\",\n        processor, rank, size\n    );\n}\n</code></pre>\n\n<p>I want to run MPI with Rust in a program. It looks like I included <code>mpi = \"0.5\"</code> as a dependency in the <code>Cargo.toml</code> file. For some reason, the problem is not with the mpi package, but with <code>libffi-sys v0.6.0</code>. I do not know what that is. Googling some about that revealed no interesting information about it. I'm now stuck here. Please forgive me. I am new to Rust and Cargo, and installing packages in general. Please give as many details as possible to your steps when you describe your answer.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576821240, "post_id": 59420238, "comment_id": 105027695, "body": "do you think smart pointer are free to use ? there is a cost so we try to avoid it but in a safe way, so rust have a lot of rule that why there is the move semantic. But if you want you can use a reference counter in Rust too <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/rc/struct.Rc.html</a>."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1576821911, "post_id": 59420238, "comment_id": 105027851, "body": "You are free to create a reference by let v2 = &amp;v1 (no overhead). Or to create a Reference counted reference (some overhead). Or to use a copy type (some overhead with String data). Rust allows you to choose what you need (in opposite to languages like Java which almost always chooses the garbage collected reference)."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 12568877, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9RIAOXaw_Ko/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc1JjARakg0vGfA5g6lOZj1qzIDQA/photo.jpg?sz=128", "display_name": "sakana-boy", "link": "https://stackoverflow.com/users/12568877/sakana-boy"}, "edited": false, "score": 0, "creation_date": 1576831081, "post_id": 59422013, "comment_id": 105030684, "body": "Thank you for the response! Yeah, I guess it&#39;s easy to take such smart references forgranted when you aren&#39;t really trying to crunch out the last few cycles of performance..."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1576839023, "post_id": 59422013, "comment_id": 105034190, "body": "Oh, sorry, not sure how I missed that. And no, going into more detail here seems definitely out of scope."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1576830295, "creation_date": 1576830295, "answer_id": 59422013, "question_id": 59420238, "link": "https://stackoverflow.com/questions/59420238/why-is-the-default-behavior-in-rust-to-perform-a-move-on-assignment-rather-than/59422013#59422013", "title": "Why is the default behavior in Rust to perform a move on assignment rather than just create another &quot;reference&quot; to the value?", "body": "<blockquote>\n  <p>[...] what is the rationale for not making them \"smart references\"?</p>\n</blockquote>\n\n<p>Performance, mostly. Rust is all about \"zero cost abstractions\" (a term coined by C++). The language should not incur runtime-overhead if the programmer does not need it. Such \"smart references\" would be reference-counted pointers (like <code>Rc</code> or <code>Arc</code> in Rust, or <code>shared_ptr</code> in C++) <em>or</em> would require a garbage collector. Both of these solutions do have this overhead.</p>\n"}], "owner": {"reputation": 25, "user_id": 12568877, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9RIAOXaw_Ko/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc1JjARakg0vGfA5g6lOZj1qzIDQA/photo.jpg?sz=128", "display_name": "sakana-boy", "link": "https://stackoverflow.com/users/12568877/sakana-boy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 59422013, "answer_count": 1, "score": 1, "last_activity_date": 1576830357, "creation_date": 1576819528, "last_edit_date": 1576830357, "question_id": 59420238, "link": "https://stackoverflow.com/questions/59420238/why-is-the-default-behavior-in-rust-to-perform-a-move-on-assignment-rather-than", "title": "Why is the default behavior in Rust to perform a move on assignment rather than just create another &quot;reference&quot; to the value?", "body": "<p>In Rust if you do the following:</p>\n\n<pre><code>let v1 = String::from(\"hello\");\nlet v2 = v1;\nprintln!(\"{}\", v1);\n</code></pre>\n\n<p>You will get a compiler error because <code>=</code> in Rust performs a move, rather than a copy or a \"share\". </p>\n\n<p>I was reading <a href=\"https://www.apress.com/us/blog/all-blog-posts/assignment-semantics/15805464\" rel=\"nofollow noreferrer\">this article</a> where it discusses this in more detail:</p>\n\n<blockquote>\n  <p>But there is a bigger problem, regarding deallocation. If share semantics was used, both <code>v1</code> and <code>v2</code> would own the single data buffer, and so when they are deallocated, the same heap buffer would be deallocated twice. A buffer cannot be allocated twice, without causing memory corruption and consequently program malfunction. To solve this problem, the languages that use share semantics do not deallocate memory at the end of the scope of the variable using such memory, but resort to garbage collection. </p>\n</blockquote>\n\n<p>My question is, when <code>v1</code> and <code>v2</code> go out of scope, why would it be necessary to free the data buffer twice? Couldn't we just free the data buffer once in addition to \"destroying\" <code>v1</code> and <code>v2</code>? I understand that <code>v1</code> and <code>v2</code> are actually values and not references, but what is the rationale for not making them \"smart references\" that have the above behavior? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576820568, "post_id": 59420193, "comment_id": 105027515, "body": "Actually, why don&#39;t you do your remove inside the match ?"}, {"owner": {"reputation": 1, "user_id": 11582427, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y4aH6.jpg?s=128&g=1", "display_name": "SirZenith", "link": "https://stackoverflow.com/users/11582427/sirzenith"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576821503, "post_id": 59420193, "comment_id": 105027761, "body": "@Stargateur Well, I originally did, but I found out that I don&#39;t really understand what happen when I mess with all those ownership. To make it logically clearer for me, I take all cleaning work out of first match /cry. And for your code just now, all I was thinking was &quot;How did this work? What is it? What happened? Who am I?&quot;"}, {"owner": {"reputation": 1, "user_id": 11582427, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y4aH6.jpg?s=128&g=1", "display_name": "SirZenith", "link": "https://stackoverflow.com/users/11582427/sirzenith"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576822085, "post_id": 59420193, "comment_id": 105027891, "body": "I use <code>&amp;mut Option&lt; Box&lt;Node&lt;T&gt;&gt; &gt;</code> in my code, but not <code>Option&lt;&amp;mut Box&lt;Node&lt;T&gt;&gt;&gt;</code>, and this add difficulty to my toy program. Using wrong kind of indirection maybe."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576822685, "post_id": 59420193, "comment_id": 105028015, "body": "well no when I try to fix your compile error I didn&#39;t really look what you wanted to do, to remove a node you obviously need something like <code>&amp;mut Option</code> but like I said Rust is not the right language for linked list. You are using the wrong tool to implement a binary tree in Rust, I would advice to use something like a vector."}, {"owner": {"reputation": 1, "user_id": 11582427, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y4aH6.jpg?s=128&g=1", "display_name": "SirZenith", "link": "https://stackoverflow.com/users/11582427/sirzenith"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576823112, "post_id": 59420193, "comment_id": 105028123, "body": "Thanks a lot man, now I finally know the feeling to use a wrong tool for the right job."}], "owner": {"reputation": 1, "user_id": 11582427, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y4aH6.jpg?s=128&g=1", "display_name": "SirZenith", "link": "https://stackoverflow.com/users/11582427/sirzenith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1576819834, "creation_date": 1576819185, "last_edit_date": 1576819834, "question_id": 59420193, "link": "https://stackoverflow.com/questions/59420193/will-mutable-reference-extract-from-optiont-gone-after-while-let-scope-ended", "title": "Will mutable reference extract from Option&lt;T&gt; gone after &quot;while let&quot; scope ended?", "body": "<p>I am writing an binary searching tree in Rust, and when I come to removing element from tree, I got problem for multiple mutable references.</p>\n\n<p>Here is the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cmp;\nuse std::cmp::Ordering;\n\ntype Root&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\nstruct Node&lt;T: cmp::Ord&gt; {\n    data: T,\n    left: Root&lt;T&gt;,\n    right: Root&lt;T&gt;,\n}\n\npub struct BinTree&lt;T: cmp::Ord&gt; {\n    size: i32,\n    root: Root&lt;T&gt;,\n}\n\nimpl&lt;T: cmp::Ord&gt; BinTree&lt;T&gt; {\n    pub fn remove(&amp;mut self, data: T) {\n        let mut curr = &amp;mut self.root;\n\n        while let Some(ref mut node) = curr {\n            curr = match data.cmp(&amp;node.data) {\n                Ordering::Less =&gt; &amp;mut node.left,\n                Ordering::Greater =&gt; &amp;mut node.right,\n                Ordering::Equal =&gt; break,\n            };\n        }\n\n        if let Some(_) = curr {\n\n        }\n    }\n}\n</code></pre>\n\n<p>And I got erorr says</p>\n\n<pre><code>error[E0503]: cannot use `*curr` because it was mutably borrowed\n  --&gt; src/lib.rs:53:16\n   |\n45 |         while let Some(ref mut node) = curr {\n   |                        ------------ borrow of `curr.0` occurs here\n...\n53 |         if let Some(_) = curr {\n   |                ^^^^^^^\n   |                |\n   |                use of borrowed `curr.0`\n   |                borrow later used here\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>But that <code>ref mut node</code> should be local to <code>while let</code> scope right? Why would it be a problem to make more mutable reference after <code>while let</code> block ended?</p>\n\n<p>I just want to do something like bellow to remove a node from this binary tree</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Some(node) = curr {\n    match (node.left, node.right) {\n        (Some(_), Some(_)) =&gt; {\n            node.data = BinTree::pop_min_from(&amp;mut node.left);\n            // get minimum data from left most node\n            // and drop that node by taking ownership of it\n        },\n        (Some(left), None) =&gt; {\n            curr.replace(left);\n        },\n        (None, Some(right)) =&gt; {\n            curr.replace(right);\n        },\n        (None, None) =&gt; {\n            curr.take();\n        },\n    }\n    self.size -= 1;\n}\n</code></pre>\n\n<p>But I found it very complecated to get around with ownership in this case. My brain can't take it, I can't even make sure I do the right thing in <code>if let</code> to deal with target node.</p>\n"}, {"tags": ["generics", "rust", "architecture", "decoupling"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576790192, "post_id": 59416281, "comment_id": 105021266, "body": "&quot;Without specifing C the compiler complains that the trait bound A: C is not satisfied. To me this doesn&#39;t make sense. I don&#39;t need C methods. A may change with respect to C and that shouldn&#39;t affect me.&quot;, I didn&#39;t understand."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576793128, "post_id": 59416281, "comment_id": 105022244, "body": "Not directly an answer to your question, but I&#39;d personally remove the type bound form the struct <code>Limiter</code> itself. The definition of that struct doesn&#39;t need a type bound. If some of its methods need one, you can add the type bound there (i.e. to the surrounding impl block). This already reduces the number of times you need to repeat the type bound. You will still need the type bound on <code>invoke()</code>."}, {"owner": {"reputation": 55, "user_id": 2460955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wRJjj.png?s=128&g=1", "display_name": "davidrjonas", "link": "https://stackoverflow.com/users/2460955/davidrjonas"}, "edited": false, "score": 0, "creation_date": 1576793291, "post_id": 59416281, "comment_id": 105022304, "body": "I&#39;m having a hard time expressing it succinctly, that&#39;s probably why I can&#39;t find an answer with searching here or google. The idea is that I think should be able to add and remove constraints on a type parameter without having to change all the code that references the concrete type. Basically, how do i insulate myself from changes in <code>A</code>&#39;s type parameter constraints? - does that help at all?"}, {"owner": {"reputation": 55, "user_id": 2460955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wRJjj.png?s=128&g=1", "display_name": "davidrjonas", "link": "https://stackoverflow.com/users/2460955/davidrjonas"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576894555, "post_id": 59416281, "comment_id": 105051720, "body": "@SvenMarnach It took me a bit to understand what you meant by &quot;struct doesn&#39;t need a type bound.&quot;  But I got it and it did lead to more purposeful code. And the methods that require different bounds (or none) are now grouped together nicely. Thanks again."}], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 2460955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wRJjj.png?s=128&g=1", "display_name": "davidrjonas", "link": "https://stackoverflow.com/users/2460955/davidrjonas"}, "edited": false, "score": 0, "creation_date": 1576800578, "post_id": 59417533, "comment_id": 105024104, "body": "That RFC is very interesting, thanks! The &quot;Guide-Level Explanation&quot; seems to cover exactly my case. I think &quot;implied trait bound&quot; is the phrase/concept I was missing."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1576793654, "creation_date": 1576793654, "answer_id": 59417533, "question_id": 59416281, "link": "https://stackoverflow.com/questions/59416281/how-to-avoid-transitive-type-dependencies/59417533#59417533", "title": "How to avoid transitive type dependencies?", "body": "<p>You are not alone in thinking that it should be possible to omit the implied trait bound here. There is <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2089-implied-bounds.md\" rel=\"nofollow noreferrer\">an accepted RFC about implied trait bounds</a> that will allow you to omit the trait bounds in your example once implemented.</p>\n\n<p>Implied trait bounds are already implemented in <a href=\"https://github.com/rust-lang/chalk\" rel=\"nofollow noreferrer\">the experimental constraint solver \"chalk\"</a>, which is intended to be eventually integrated in the Rust compiler. According to the <a href=\"https://github.com/rust-lang/rust/issues/44491\" rel=\"nofollow noreferrer\">tracking issue for the mentioned RFC</a> we will have to wait for this to happen before we will see support for implied trait bounds in Rust.</p>\n"}], "owner": {"reputation": 55, "user_id": 2460955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wRJjj.png?s=128&g=1", "display_name": "davidrjonas", "link": "https://stackoverflow.com/users/2460955/davidrjonas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 59417533, "answer_count": 1, "score": 1, "last_activity_date": 1576793654, "creation_date": 1576785961, "question_id": 59416281, "link": "https://stackoverflow.com/questions/59416281/how-to-avoid-transitive-type-dependencies", "title": "How to avoid transitive type dependencies?", "body": "<p>I am trying to learn more about structuring software with type parameters and traits. I can make my program work, I am just trying to improve decoupling.</p>\n\n<p>When I depend on a type that has a type parameter, say <code>A&lt;T&gt;</code>, where the type parameter has a constraint it means that I also must depend on the constraint. For example,</p>\n\n<pre><code>fn x&lt;T: C&gt;(arg: A&lt;T&gt;)\n</code></pre>\n\n<p>Without specifing <code>C</code> the compiler complains that the trait bound <code>A: C</code> is not\nsatisfied. To me this doesn't make sense. I don't need <code>C</code> methods. <code>A</code>\nmay change with respect to <code>C</code> and that shouldn't affect me.</p>\n\n<p>How do I avoid having to depend on <code>C</code>?</p>\n\n<p>Here is a the relevant part from a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e760045350191a30b11b2e57af2c3011\" rel=\"nofollow noreferrer\">larger playground example</a> I used to explore possible solutions. Totally contrived, my real code has four type parameters with different constraints.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod auth {\n    pub trait Authz {\n        fn allowed(&amp;self) -&gt; bool;\n    }\n}\n\nmod limiter {\n    use super::auth;\n\n    pub struct Limiter&lt;T: auth::Authz&gt; {\n        pub m: T,\n        pub data: i32,\n    }\n\n    impl&lt;T: auth::Authz&gt; Limiter&lt;T&gt; {\n        pub fn limit(&amp;self) {\n            if ! self.m.allowed() { panic!(\"not allowed\"); }\n        }\n    }\n}\n\n// Works but is depedendent on Authz for every method. How do I avoid naming Authz within service?!\nmod service {\n    use super::limiter;\n\n    pub struct Service;\n\n    impl Service {\n        pub fn invoke&lt;T: super::auth::Authz&gt;(a: limiter::Limiter&lt;T&gt;) {\n            a.limit()\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e760045350191a30b11b2e57af2c3011\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<h3>What I've done to try to understand</h3>\n\n<ul>\n<li>I've read <code>rustc --explain E0207</code> which was excellent.</li>\n<li>I tried using <code>PhantomData</code> but that just moved the problem elsewhere.</li>\n<li>I tried using a trait for Limiter so that Service can depend on that alone. That is fine except I lose access to the fields of the concrete struct unless I make getters and add them to the trait. But I have a feeling this is the answer.</li>\n</ul>\n"}, {"tags": ["rust", "iterator", "cycle"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1576774636, "post_id": 59413614, "comment_id": 105015363, "body": "That would be a nice addition to <a href=\"https://docs.rs/itertools/\" rel=\"nofollow noreferrer\">itertools</a>."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1576839761, "post_id": 59413981, "comment_id": 105034467, "body": "Collecting into a slice first seems reasonable to me, given that we are going to need the elements multiple times. It&#39;s also the only solution that works when your iterator is not <code>Clone</code>, e.g. an iterator over the lines of a file."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576841920, "post_id": 59413981, "comment_id": 105035374, "body": "@SvenMarnach Yes, if I had to optimize the code in this situation, I would benchmark this."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1576777275, "last_edit_date": 1576777275, "creation_date": 1576774578, "answer_id": 59413981, "question_id": 59413614, "link": "https://stackoverflow.com/questions/59413614/cycle-a-rust-iterator-a-given-number-of-times/59413981#59413981", "title": "Cycle a Rust iterator a given number of times", "body": "<p>There is no such an iterator in the std lib.</p>\n\n<p>If you know the iterator size, you can <code>take</code> your number times the size of the iterator:</p>\n\n<pre><code>fn cycle_n_times&lt;T: Clone&gt;(slice: &amp;[T], count: usize) -&gt; impl Iterator&lt;Item = &amp;T&gt; {\n    slice.iter().cycle().take(slice.len() * count)\n}\n</code></pre>\n\n<p>Or you can write your own that is more general:</p>\n\n<pre><code>pub struct Ncycles&lt;I&gt; {\n    orig: I,\n    iter: I,\n    count: usize,\n}\n\nimpl&lt;I: Clone&gt; Ncycles&lt;I&gt; {\n    fn new(iter: I, count: usize) -&gt; Ncycles&lt;I&gt; {\n        Ncycles {\n            orig: iter.clone(),\n            iter,\n            count,\n        }\n    }\n}\n\nimpl&lt;I&gt; Iterator for Ncycles&lt;I&gt;\nwhere\n    I: Clone + Iterator,\n{\n    type Item = &lt;I as Iterator&gt;::Item;\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;&lt;I as Iterator&gt;::Item&gt; {\n        match self.iter.next() {\n            None if self.count == 0 =&gt; None,\n            None =&gt; {\n                self.iter = self.orig.clone();\n                self.count -= 1;\n                self.iter.next()\n            }\n            y =&gt; y,\n        }\n    }\n}\n\n#[test]\nfn it_work() {\n    Ncycles::new(vec![1, 2, 3].iter(), 4).eq(&amp;[1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1576776379, "post_id": 59414021, "comment_id": 105016156, "body": "@FrenchBoiethios <a href=\"https://godbolt.org/z/5So5hQ\" rel=\"nofollow noreferrer\">godbolt link</a>, can&#39;t tell if it is well optimized or not :D"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1576841388, "post_id": 59414021, "comment_id": 105035128, "body": "@edwardw Compared to a hand-rolled loop: <a href=\"https://godbolt.org/z/GRbTt7\" rel=\"nofollow noreferrer\">godbolt.org/z/GRbTt7</a>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1576854347, "post_id": 59414021, "comment_id": 105040786, "body": "@phimuemue several hundred lines of assembly are still too much for a mortal like me to decipher LOL. Did some micro-benchmark."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 9, "last_activity_date": 1576854695, "last_edit_date": 1576854695, "creation_date": 1576774756, "answer_id": 59414021, "question_id": 59413614, "link": "https://stackoverflow.com/questions/59413614/cycle-a-rust-iterator-a-given-number-of-times/59414021#59414021", "title": "Cycle a Rust iterator a given number of times", "body": "<p>One simple way is to repeat the iterator itself, take the first 4 and flatten:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let v = vec![1, 2, 3];\n    let res = std::iter::repeat(v.iter())\n        .take(4)\n        .flatten()\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    dbg!(res);\n}\n</code></pre>\n\n<hr>\n\n<p>Some micro-benchmark result using code in <a href=\"https://gist.github.com/edwardw/e42c50b6fa1c9112b6fff282835341ba\" rel=\"nofollow noreferrer\">this gist</a> comparing 3 different approaches:</p>\n\n<ul>\n<li>repeat-take-flatten in this answer</li>\n<li>hand-rolled loop</li>\n<li>a <code>cycle_n</code> implementation mimicking <code>Iterator::cycle</code>.</li>\n</ul>\n\n<p>Kudos to <code>rustc</code>, <code>cycle_n</code> consistently outperforms the other two when the input is reasonably large whereas repeat-take-flatten performs the best for small input.</p>\n\n<p><a href=\"https://i.stack.imgur.com/PJcGS.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/PJcGS.png\" alt=\"Micro-benchmark between repeat-take-flatten, hand-rolled loop and &lt;code&gt;cycle_n&lt;/code&gt;\"></a></p>\n"}, {"tags": [], "owner": {"reputation": 34352, "user_id": 119775, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/fK5bc.jpg?s=128&g=1", "display_name": "Jean-Fran&#231;ois Corbett", "link": "https://stackoverflow.com/users/119775/jean-fran%c3%a7ois-corbett"}, "is_accepted": false, "score": 0, "last_activity_date": 1579096285, "last_edit_date": 1579096285, "creation_date": 1579087804, "answer_id": 59750529, "question_id": 59413614, "link": "https://stackoverflow.com/questions/59413614/cycle-a-rust-iterator-a-given-number-of-times/59750529#59750529", "title": "Cycle a Rust iterator a given number of times", "body": "<p>One could leverage <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.repeat\" rel=\"nofollow noreferrer\"><code>slice::repeat</code></a>, but I can't imagine this is very efficient:</p>\n\n<pre><code>let v = vec![1, 2, 3];\nlet it = v.iter();\nprintln!(\"{:?}\", it.map(|x| *x).collect::&lt;Vec&lt;i32&gt;&gt;().repeat(4).iter());\n</code></pre>\n"}], "owner": {"reputation": 34352, "user_id": 119775, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/fK5bc.jpg?s=128&g=1", "display_name": "Jean-Fran&#231;ois Corbett", "link": "https://stackoverflow.com/users/119775/jean-fran%c3%a7ois-corbett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1009, "favorite_count": 1, "accepted_answer_id": 59414021, "answer_count": 3, "score": 8, "last_activity_date": 1579100342, "creation_date": 1576773060, "last_edit_date": 1579100342, "question_id": 59413614, "link": "https://stackoverflow.com/questions/59413614/cycle-a-rust-iterator-a-given-number-of-times", "title": "Cycle a Rust iterator a given number of times", "body": "<p>How do I cycle through an iterator a finite number of times?</p>\n\n<p>I would expect the output of something like this to be <code>1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3</code> and then stop:</p>\n\n<pre><code>vec![1, 2, 3].iter().cycle(4)\n//                         ^ but .cycle() doesn't take an argument...\n</code></pre>\n\n<p>I don't know the length of the iterator to begin with. </p>\n"}, {"tags": ["c++", "rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 41430, "user_id": 607407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5a061a72feb5b6580dadd5dcbc92d3b5?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Zato - Reinstate Monica", "link": "https://stackoverflow.com/users/607407/tom%c3%a1%c5%a1-zato-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1576771083, "post_id": 59412854, "comment_id": 105013540, "body": "I don&#39;t think you can call directly functions from one module to the other. For that to be possible a common interface would need to be defined, like when calling methods in a shared library. I am not aware of such interface, so you probably need to bridge the modules with javascript code."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 41430, "user_id": 607407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5a061a72feb5b6580dadd5dcbc92d3b5?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Zato - Reinstate Monica", "link": "https://stackoverflow.com/users/607407/tom%c3%a1%c5%a1-zato-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1576772130, "post_id": 59412854, "comment_id": 105014045, "body": "@Tom&#225;\u0161Zato-ReinstateMonica thank you. Bridging the two with JS is fine 99% of the time, until it becomes the bottleneck...."}], "answers": [{"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1576771909, "post_id": 59413292, "comment_id": 105013939, "body": "Thanks! Excellent answer. For a long time I didn&#39;t really understand what ABI is. You made it really simple for me: <code>How are types represented in memory?</code>. I did see the C bindings for Rust (just didn&#39;t write them myself), so I know they exist and are possible. So I think I should learn that area."}, {"owner": {"reputation": 41430, "user_id": 607407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5a061a72feb5b6580dadd5dcbc92d3b5?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Zato - Reinstate Monica", "link": "https://stackoverflow.com/users/607407/tom%c3%a1%c5%a1-zato-reinstate-monica"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1576775336, "post_id": 59413292, "comment_id": 105015704, "body": "@NurbolAlpysbayev By the way, if you make this work in some self-contained answer, it would be an awesome self-answered question to post here."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 7, "last_activity_date": 1576771649, "creation_date": 1576771649, "answer_id": 59413292, "question_id": 59412854, "link": "https://stackoverflow.com/questions/59412854/can-c-and-rust-programs-compiled-to-wasm-interoperate-somehow/59413292#59413292", "title": "Can C++ and Rust programs compiled to wasm interoperate somehow?", "body": "<p><strong>Yes, if they share the same ABI</strong>.</p>\n\n<p>When compiling to assembly, what matters is the ABI, or Application Binary Interface:</p>\n\n<ul>\n<li>How are types represented in memory?</li>\n<li>How are arguments passed to a function?</li>\n<li>...</li>\n</ul>\n\n<p>When you hear <em>C is the Lingua Franca of programming languages</em>, what it means is that any language that talks the C ABI<sup>1</sup> can communicate with any other language that talks the C ABI.</p>\n\n<p>Thus, whether targeting Windows on x64 or WebAssembly, what really matters is that both programs share the same convention (ABI) when talking to each other.</p>\n\n<p>In your case, both Rust and C++ can talk C, so by communicating over a C API they can communicate on x86, x64, various ARM, ... and of course WASM.</p>\n\n<p><sup>1</sup> <em>As a convention, the owner of a platform defines the C ABI for the platform, and all C compilers implement the defined ABI when targeting this platform. This means there are multiple, incompatible, C ABIs; however since an ABI only matters when interacting at the binary level, which only happens when executed on the same platform, in practice there's a single C ABI of relevance in any given situation.</em></p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 3, "accepted_answer_id": 59413292, "answer_count": 1, "score": 4, "last_activity_date": 1576771649, "creation_date": 1576769966, "question_id": 59412854, "link": "https://stackoverflow.com/questions/59412854/can-c-and-rust-programs-compiled-to-wasm-interoperate-somehow", "title": "Can C++ and Rust programs compiled to wasm interoperate somehow?", "body": "<p>Let's say I have one program written in Rust and another in C++. Given that they both are compiled to Wasm, can I somehow call a function in one program from the other?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-no-std"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1576759558, "post_id": 59410084, "comment_id": 105007161, "body": "Your link provided deals with some adobe software. It has <b>nothing</b> to do with rust or unix exit codes. So please don&#39;t pay attention to that ;)"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 6503030, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-uVQ2a-ryYFI/AAAAAAAAAAI/AAAAAAAAABY/cFxIP4Lou6M/photo.jpg?sz=128", "display_name": "xcepti0n", "link": "https://stackoverflow.com/users/6503030/xcepti0n"}, "edited": false, "score": 0, "creation_date": 1576824173, "post_id": 59410235, "comment_id": 105028392, "body": "After adding return 0 and i32 return type as you mentioned, it is not returning error. But is still not executing tests."}, {"owner": {"reputation": 21, "user_id": 6503030, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-uVQ2a-ryYFI/AAAAAAAAAAI/AAAAAAAAABY/cFxIP4Lou6M/photo.jpg?sz=128", "display_name": "xcepti0n", "link": "https://stackoverflow.com/users/6503030/xcepti0n"}, "edited": false, "score": 0, "creation_date": 1576824396, "post_id": 59410235, "comment_id": 105028452, "body": "&quot;Running <code>&#47;Users&#47;xcepti0n&#47;workplace&#47;GitTestRepos&#47;crazy_test&#47;target&#47;deb&zwnj;&#8203;ug&#47;deps&#47;crazy-&lt;hash_&zwnj;&#8203;code&gt;</code>&quot; after it exits without printing anything."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 1, "last_activity_date": 1576768613, "last_edit_date": 1576768613, "creation_date": 1576760110, "answer_id": 59410235, "question_id": 59410084, "link": "https://stackoverflow.com/questions/59410084/cargo-test-with-no-std-fails-with-error-code-176-160/59410235#59410235", "title": "cargo test with no_std fails with error code 176, 160", "body": "<p>The problem is your <code>main</code> function, which has an invalid signature for unix platforms. It must return an <code>i32</code> (or better <code>c_int</code>, but for simplicity we suppose they are idential).\nThe <code>176</code> is just some random value in the <code>rax</code> register when leaving the <code>main</code> function.</p>\n\n<p>So change your <code>main</code> signature to:</p>\n\n<pre><code>pub unsafe extern \"C\" fn main() -&gt; i32\n</code></pre>\n\n<p>and return a return code (e.g. <code>0</code> which means success)</p>\n\n<p>or </p>\n\n<pre><code>pub unsafe extern \"C\" fn main() -&gt; !\n</code></pre>\n\n<p>and use the <code>exit</code> syscall on linux (or an infinite loop on embedded systems).</p>\n"}], "owner": {"reputation": 21, "user_id": 6503030, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-uVQ2a-ryYFI/AAAAAAAAAAI/AAAAAAAAABY/cFxIP4Lou6M/photo.jpg?sz=128", "display_name": "xcepti0n", "link": "https://stackoverflow.com/users/6503030/xcepti0n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1576768613, "creation_date": 1576759499, "question_id": 59410084, "link": "https://stackoverflow.com/questions/59410084/cargo-test-with-no-std-fails-with-error-code-176-160", "title": "cargo test with no_std fails with error code 176, 160", "body": "<p>Using the below code in main.rs, when I run <code>cargo test</code> it returns error code 176, when I add a test or `any statement in main function. It starts returning error code 160.</p>\n\n<pre><code>#![no_std]\n#![no_main]\n\n#[cfg(test)]\n#[macro_use]\nextern crate std;\n#[cfg(not(test))]\nextern crate panic_halt;\n\n#[no_mangle]\npub unsafe extern \"C\" fn main() {\n\n}\n</code></pre>\n\n<p>From this <a href=\"https://community.adobe.com/t5/get-started/re-exit-code-176-not-installing-to-network-drive/td-p/9733238\" rel=\"nofollow noreferrer\">link</a> I found out, that </p>\n\n<blockquote>\n  <p>Exit code 176 means \"Unable to install on a network drive. Select\n  another install location in your preferences and retry installing.\"</p>\n</blockquote>\n\n<p>When I tried to find back trace through lldb it returned</p>\n\n<blockquote>\n  <p>error: invalid thread</p>\n</blockquote>\n\n<p>I couldn't find any thread which mentions similar error, so asking it here.\nAny help is appreciated.</p>\n\n<p>Using nightly (nightly-x86_64-apple-darwin) \nThanks.</p>\n"}, {"tags": ["rust", "deserialization", "serde"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1576753854, "post_id": 59408416, "comment_id": 105004436, "body": "Your question does not contain an actual question or state any problem."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1576759175, "post_id": 59408416, "comment_id": 105006946, "body": "<code>foo.vec.into_iter().filter_map(|b| Some(Baz { a: b.a, b: b.b? })).collect()</code>?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1576763267, "post_id": 59408416, "comment_id": 105009106, "body": "@hellow This does an extra allocation and I am looking to gather data while de-serializing"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1576763326, "post_id": 59408416, "comment_id": 105009142, "body": "If you are doing <code>collect</code>, yes."}], "answers": [{"comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1576837356, "post_id": 59411224, "comment_id": 105033437, "body": "This is an approach I won&#39;t personally use but it is an answer anyway =) Thank you"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1576763851, "creation_date": 1576763851, "answer_id": 59411224, "question_id": 59408416, "link": "https://stackoverflow.com/questions/59408416/how-to-ignore-partial-items-of-a-sequence/59411224#59411224", "title": "How to ignore partial items of a sequence", "body": "<p>Your code worked for the most part but invalid JSON literal in the <code>main</code>, which missed couple commas, tripped it over. The problem is that the <code>Err(_)</code> branch swallowed all errors indiscriminately; it should have only silenced missing field error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn visit_seq&lt;SA&gt;(self, mut seq: SA) -&gt; Result&lt;Self::Value, SA::Error&gt;\nwhere\n    SA: SeqAccess&lt;'de&gt;,\n{\n    let mut values = Vec::new();\n\n    loop {\n        match seq.next_element::&lt;Bar&gt;() {\n            Ok(Some(x)) =&gt; values.push(x),\n            Ok(None) =&gt; break,\n            Err(e) =&gt; {\n                if !e.to_string().starts_with(\"missing field\") {\n                    return Err(e);\n                }\n            }\n        }\n    }\n\n    Ok(VecOpt(values))\n}\n</code></pre>\n\n<p>TBH I really don't like this solution although it worked. <code>Option</code> is a perfect fit here for modelling the potentially missing fields.</p>\n"}], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 1, "accepted_answer_id": 59411224, "answer_count": 1, "score": 1, "last_activity_date": 1576763851, "creation_date": 1576753486, "last_edit_date": 1576754357, "question_id": 59408416, "link": "https://stackoverflow.com/questions/59408416/how-to-ignore-partial-items-of-a-sequence", "title": "How to ignore partial items of a sequence", "body": "<p>Instead of defining a field as optional and collect both <code>None</code>s and <code>Some</code>s like the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\nextern crate serde_json;\n\nuse serde::Deserialize;\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Bar {\n    a: u32,\n    b: Option&lt;u32&gt;,\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Foo {\n    vec: Vec&lt;Bar&gt;,\n}\n\nfn main() {\n    let data = r#\"{ \"vec\": [ { \"a\": 1 }, { \"a\": 2, \"b\": 3 } ] }\"#;\n    assert_eq!(\n        serde_json::from_str::&lt;Foo&gt;(data).unwrap(),\n        Foo {\n            vec: vec![Bar { a: 1, b: None }, Bar { a: 2, b: Some(3) }]\n        }\n    );\n}\n\n</code></pre>\n\n<p>It would be nice to only collect fully defined elements so the <code>Bar</code> struct could be defined as <code>struct Bar { a: u32, b: u32 }</code> and <code>serde_json::from_str</code> would simply return <code>Foo { vec: [ Bar { a: 2, b: 3 } ] }</code>.</p>\n\n<p>How to achieve such behavior? Here is my unsuccessful attempt to create a custom <code>Deserialize</code> implementation that tries to tackle this.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde;\nextern crate serde_json;\n\nuse core::fmt;\nuse serde::{\n    de::{SeqAccess, Visitor},\n    Deserialize, Deserializer,\n};\n\n#[derive(Debug, Deserialize)]\nstruct Bar {\n    a: i32,\n    b: i32,\n    c: i32,\n}\n\n#[derive(Debug)]\nstruct VecOpt(Vec&lt;Bar&gt;);\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for VecOpt {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        struct ArrayVecVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for ArrayVecVisitor {\n            type Value = VecOpt;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                write!(formatter, \"VecOpt\")\n            }\n\n            fn visit_seq&lt;SA&gt;(self, mut seq: SA) -&gt; Result&lt;Self::Value, SA::Error&gt;\n            where\n                SA: SeqAccess&lt;'de&gt;,\n            {\n                let mut values = Vec::new();\n\n                loop {\n                    match seq.next_element::&lt;Bar&gt;() {\n                        Ok(Some(x)) =&gt; values.push(x),\n                        Ok(None) =&gt; break,\n                        // If error, the input reader won't move to the next element of the sequence and the following `seq.next_element` will\n                        // simply try to read contents of the current element. In this case, `\"c\": 5 }, ... `\n                        Err(_) =&gt; {}\n                    }\n                }\n\n                Ok(VecOpt(values))\n            }\n        }\n\n        deserializer.deserialize_seq(ArrayVecVisitor)\n    }\n}\n\n#[derive(Debug, Deserialize)]\nstruct Foo {\n    vec: VecOpt,\n}\n\nfn main() {\n    let data = r#\"{ \"vec\": [ { \"a\": 1 \"b\": 2, \"c\": 3 }, { \"b\": 4, \"c\": 5 }, { \"a\": 6 \"b\": 7, \"c\": 8 } ] }\"#;\n    dbg!(serde_json::from_str::&lt;Foo&gt;(data).unwrap());\n}\n\n</code></pre>\n"}, {"tags": ["opengl", "rust", "headless", "egl", "glium"], "owner": {"reputation": 31, "user_id": 9786196, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "DWCarrot", "link": "https://stackoverflow.com/users/9786196/dwcarrot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 176, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1576745925, "creation_date": 1576745925, "last_edit_date": 1592644375, "question_id": 59406235, "link": "https://stackoverflow.com/questions/59406235/why-glium-headless-can-not-render-an-image-like-normal-window-context", "title": "Why glium `Headless` can not render an image like normal window context?", "body": "<p>I am working on an off-screen render program and I use crate <code>glium</code> to do this. I have followed the example of <a href=\"https://github.com/glium/glium/blob/master/examples/screenshot.rs\" rel=\"nofollow noreferrer\">screenshot.rs</a> and this example worked well.</p>\n<p>Then I made some change:</p>\n<p>The orignal code was</p>\n<pre><code>fn main() {\n    // building the display, ie. the main object\n    let event_loop = glutin::EventsLoop::new();\n    let wb = glutin::WindowBuilder::new().with_visible(true);\n    let cb = glutin::ContextBuilder::new();\n    let display = glium::Display::new(wb, cb, &amp;event_loop).unwrap();\n\n    // building the vertex buffer, which contains all the vertices that we will draw\n</code></pre>\n<p>I grouped these codes into a function:</p>\n<pre><code>fn main() {\n    // building the display, ie. the main object\n    let event_loop = glutin::EventsLoop::new();\n    let display = build_display((128,128), &amp;event_loop);\n\n    // building the vertex buffer, which contains all the vertices that we will draw\n</code></pre>\n<pre><code>pub fn build_display(size: (u32, u32), event_loop: &amp;glutin::EventsLoop) -&gt; glium::Display {\n    let version = parse_version(); //this will return `OpenGL 3.3`\n    let wb = glutin::WindowBuilder::new()\n        .with_visibility(false)\n        .with_dimensions(glutin::dpi::LogicalSize::from(size));\n    let cb = glutin::ContextBuilder::new()\n        .with_gl(version);\n    glium::Display::new(wb, cb, &amp;event_loop).unwrap()\n}\n</code></pre>\n<p>After this modification, the program still worked well. So I continued to add the headless-context:</p>\n<pre><code>fn main() {\n    // building the display, ie. the main object\n    let event_loop = glutin::EventsLoop::new();\n    let display = build_display_headless((128,128), &amp;event_loop);\n\n    // building the vertex buffer, which contains all the vertices that we will draw\n</code></pre>\n<pre><code>pub fn build_display_headless(size: (u32, u32), event_loop: &amp;glutin::EventsLoop) -&gt; glium::HeadlessRenderer {\n\n    let version = parse_version();  // this will return `OpenGL 3.3`\n    let ctx = glutin::ContextBuilder::new()\n        .with_gl(version)\n        .build_headless(&amp;event_loop, glutin::dpi::PhysicalSize::from(size))\n        .expect(&quot;1&quot;);\n    //let ctx = unsafe { ctx.make_current().expect(&quot;3&quot;) };\n    glium::HeadlessRenderer::new(ctx).expect(&quot;4&quot;)\n}\n</code></pre>\n<p>But this time, the program did not work. There was no panic during the running, but the output image was empty with black, and its size was not 128x128 but 800x600.</p>\n<p>I have tried to remove the <code>libEGL.dll</code> so that, due to the doc of crate <code>glutin</code>, the function <code>.build_headless</code> will build a window and hide it, just as my function <code>build_display</code> does. However, this failed too. So what can cause this?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 3691, "user_id": 1808989, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/3884a2f2ee43a4681967493905dcc20c?s=128&d=identicon&r=PG", "display_name": "Andrew Sun", "link": "https://stackoverflow.com/users/1808989/andrew-sun"}, "edited": false, "score": 3, "creation_date": 1576731565, "post_id": 59403489, "comment_id": 104995571, "body": "<code>thread::sleep</code> is a synchronous sleep, not an asynchronous one, so they run sequentially. <code>async</code> does not magically make your program concurrent."}, {"owner": {"reputation": 123, "user_id": 9750674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/664f8858b035ddbdaaa184c92a1fa662?s=128&d=identicon&r=PG&f=1", "display_name": "sge", "link": "https://stackoverflow.com/users/9750674/sge"}, "reply_to_user": {"reputation": 3691, "user_id": 1808989, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/3884a2f2ee43a4681967493905dcc20c?s=128&d=identicon&r=PG", "display_name": "Andrew Sun", "link": "https://stackoverflow.com/users/1808989/andrew-sun"}, "edited": false, "score": 0, "creation_date": 1576734285, "post_id": 59403489, "comment_id": 104996248, "body": "@AndrewSun: Then what&#39;s the point of having async functions at all if everything inside them must be asynchronous? What if the <code>thread::sleep</code> was a long SQL operation?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576736088, "post_id": 59403489, "comment_id": 104996758, "body": "@sge see the doc &quot;An implementation of poll should strive to return quickly, and should not block. Returning quickly prevents unnecessarily clogging up threads or event loops. If it is known ahead of time that a call to poll may end up taking awhile, the work should be offloaded to a thread pool (or something similar) to ensure that poll can return quickly.&quot; <a href=\"https://doc.rust-lang.org/std/future/trait.Future.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/future/trait.Future.html</a>. however a SQL operation will need to wait for socket resource so you will not need any thread just wait that the SQL server response and that what await do."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1576736855, "post_id": 59403489, "comment_id": 104996976, "body": "Executor needs to act differently if one of the task is blocking, tokio executor has a solution: annotating the task as <a href=\"https://docs.rs/tokio-threadpool/0.1.17/tokio_threadpool/fn.blocking.html\" rel=\"nofollow noreferrer\">blocking</a>. But it still has some restrictions, like if you use it with a combinator it blocks other tasks&#39; execution in the combinator or if you use it in single threaded executor it would block the entire executor, please see <code>tokio::io::stdin</code> case which is annotated as blocking : <a href=\"https://stackoverflow.com/a/57591250\">stackoverflow.com/a/57591250</a>"}, {"owner": {"reputation": 123, "user_id": 9750674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/664f8858b035ddbdaaa184c92a1fa662?s=128&d=identicon&r=PG&f=1", "display_name": "sge", "link": "https://stackoverflow.com/users/9750674/sge"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576783091, "post_id": 59403489, "comment_id": 105018787, "body": "@Stargateur: I tried the same code with an SQL query of <code>SELECT SLEEP(2)</code> instead of <code>thread::sleep(2)</code>. I still get the same result -- the program runs in 6 seconds and each element in the <code>futures</code> Vec is run sequentially, instead of concurrently. I&#39;m not quite sure I understand how Rust&#39;s concurrency works. Any help would be greatly appreciated."}], "owner": {"reputation": 123, "user_id": 9750674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/664f8858b035ddbdaaa184c92a1fa662?s=128&d=identicon&r=PG&f=1", "display_name": "sge", "link": "https://stackoverflow.com/users/9750674/sge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1576740832, "answer_count": 0, "score": 0, "last_activity_date": 1576731265, "creation_date": 1576731265, "question_id": 59403489, "link": "https://stackoverflow.com/questions/59403489/vector-of-futures-in-rust-doesnt-execute-concurrently", "closed_reason": "Duplicate", "title": "Vector of futures in Rust doesn&#39;t execute concurrently", "body": "<p>I would like to run an arbitrary number of futures concurrently in Rust. For this, I created a simple program that simulates real work by calling <code>thread::sleep</code>.</p>\n\n<p>The <code>calc()</code> function below <em>pretends</em> to do work by sleeping for 2 seconds, then the <code>batch()</code> function calls it 3 times, I'm assuming, asynchronously via <code>join_all</code>.</p>\n\n<p>The problem is that this program executes for 6 seconds, not for 2 as I would expect. </p>\n\n<p>What is the trick to make the futures in the <code>vec!</code> run asynchronously? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::join_all;\nuse futures::executor::block_on;\nuse std::thread;\nuse std::time::{Duration, SystemTime};\n\nasync fn calc(i: u32) -&gt; u32 { \n    let seconds = Duration::from_secs(2);\n    thread::sleep(seconds);\n    i \n}\n\nasync fn batch() -&gt; Vec&lt;u32&gt; {\n    let futures = vec![calc(1), calc(2), calc(3)];\n    join_all(futures).await\n}\n\nfn main() {\n    let now = SystemTime::now();\n    let result = block_on(batch());\n    println!(\"Result: {:?} took {:?} seconds\", result, now.elapsed().unwrap());\n}\n</code></pre>\n"}, {"tags": ["rust", "hashmap"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1576764805, "post_id": 59401720, "comment_id": 105009960, "body": "If you need lookups by both key and value, and the values are unique, you can also use a bijective map implementation, e.g. the one provided by the <a href=\"https://crates.io/crates/bimap\" rel=\"nofollow noreferrer\">bimap crate</a>."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1576719327, "post_id": 59401721, "comment_id": 104993383, "body": "&quot;and collect them into a Vec&quot; better to return an <code>impl Iterator&lt;Item=i32&gt; + &#39;a</code> and let the user collect if necessary. Also, funny I didn&#39;t know <code>find_map()</code> exist"}], "tags": [], "owner": {"reputation": 796, "user_id": 959847, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/40d3fdc131dbfeae3a893a354bcbcf67?s=128&d=identicon&r=PG", "display_name": "euclio", "link": "https://stackoverflow.com/users/959847/euclio"}, "is_accepted": true, "score": 5, "last_activity_date": 1576714890, "last_edit_date": 1576714890, "creation_date": 1576714485, "answer_id": 59401721, "question_id": 59401720, "link": "https://stackoverflow.com/questions/59401720/how-do-i-find-the-key-for-a-value-in-a-hashmap/59401721#59401721", "title": "How do I find the key for a value in a HashMap?", "body": "<p>Iterate over the entries of the <code>HashMap</code>, find the entry matching the value, and map to the key.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn find_key_for_value&lt;'a&gt;(map: &amp;'a HashMap&lt;i32, &amp;'static str&gt;, value: &amp;str) -&gt; Option&lt;&amp;'a i32&gt; {\n    map.iter()\n        .find_map(|(key, &amp;val)| if val == value { Some(key) } else { None })\n}\n\nfn main() {\n    let mut map = HashMap::new();\n    map.insert(1, \"a\");\n    map.insert(2, \"b\");\n    map.insert(3, \"c\");\n\n    assert_eq!(find_key_for_value(&amp;map, \"a\"), Some(&amp;1));\n    assert_eq!(find_key_for_value(&amp;map, \"z\"), None);\n}\n</code></pre>\n\n<p>Note that this will only find the first matching value, if you want to find <em>all</em> matching values, you can use <code>filter_map</code> and collect them into a <code>Vec</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nfn find_keys_for_value&lt;'a&gt;(map: &amp;'a HashMap&lt;i32, &amp;'static str&gt;, value: &amp;str) -&gt; Vec&lt;&amp;'a i32&gt; {\n    map.iter()\n        .filter_map(|(key, &amp;val)| if val == value { Some(key) } else { None })\n        .collect()\n}\n\nfn main() {\n    let mut map = HashMap::new();\n    map.insert(1, \"a\");\n    map.insert(2, \"b\");\n    map.insert(3, \"c\");\n    map.insert(4, \"a\");\n\n    let mut keys = find_keys_for_value(&amp;map, \"a\");\n    keys.sort();\n    assert_eq!(keys, vec![&amp;1, &amp;4]);\n}\n</code></pre>\n"}], "owner": {"reputation": 796, "user_id": 959847, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/40d3fdc131dbfeae3a893a354bcbcf67?s=128&d=identicon&r=PG", "display_name": "euclio", "link": "https://stackoverflow.com/users/959847/euclio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1745, "favorite_count": 2, "accepted_answer_id": 59401721, "answer_count": 1, "score": 5, "last_activity_date": 1576714890, "creation_date": 1576714485, "question_id": 59401720, "link": "https://stackoverflow.com/questions/59401720/how-do-i-find-the-key-for-a-value-in-a-hashmap", "title": "How do I find the key for a value in a HashMap?", "body": "<p>I have a <code>std::collections::HashMap</code> that contains some entries. I want to find the key that corresponds to a particular value that is already in the hash map.</p>\n"}]