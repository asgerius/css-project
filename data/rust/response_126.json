[{"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 9, "last_activity_date": 1496880455, "creation_date": 1496880455, "answer_id": 44424613, "question_id": 44424540, "link": "https://stackoverflow.com/questions/44424540/cannot-apply-unary-operator-to-type-usize/44424613#44424613", "title": "Cannot apply unary operator `-` to type `usize`", "body": "<p>The type of the pointee is irrelevant. When you cast an integer to a pointer, Rust infers that the integer must be a <code>usize</code>, because it's the only type (besides <code>isize</code>, though it's not used as often) that is guaranteed to have the same size as a pointer.</p>\n\n<p>Indeed, in Rust, the unary negation operator is no longer available for unsigned integer types. Instead, you should use the bitwise not operator (which is written <code>!</code>, not <code>~</code> as in C).</p>\n\n<p>In two's complement binary, there is a straightforward equivalence between these two operators: <code>!x == -(x + 1)</code>. Specifically, the equivalent of <code>-1</code> is <code>!0</code>. Thus, you can write:</p>\n\n<pre><code>const SOMETHING: *const c_char = !0 as *const c_char;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1496880604, "creation_date": 1496880604, "answer_id": 44424636, "question_id": 44424540, "link": "https://stackoverflow.com/questions/44424540/cannot-apply-unary-operator-to-type-usize/44424636#44424636", "title": "Cannot apply unary operator `-` to type `usize`", "body": "<p>If you truly want to set a pointer to <code>-1</code>, you can, you just need to be explicit that the integral value is a <code>isize</code>, not a <code>usize</code>:</p>\n\n<pre><code>const SOMETHING: *const c_char = -1_isize as *const c_char;\n</code></pre>\n\n<p>You can also say that it's the maximum <code>usize</code> value:</p>\n\n<pre><code>const SOMETHING: *const c_char = std::usize::MAX as *const c_char;\n</code></pre>\n\n<p>Both of these have the same result:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::c_char;\n\nconst SOMETHING1: *const c_char = -1_isize as *const c_char;\nconst SOMETHING2: *const c_char = std::usize::MAX as *const c_char;\n\nfn main() {\n    println!(\"{:p}\", SOMETHING1);\n    println!(\"{:p}\", SOMETHING2);\n}\n</code></pre>\n\n<p>Prints: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0xffffffffffffffff\n0xffffffffffffffff\n</code></pre>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1469, "favorite_count": 0, "accepted_answer_id": 44424636, "answer_count": 2, "score": 2, "last_activity_date": 1496880604, "creation_date": 1496879806, "last_edit_date": 1496880449, "question_id": 44424540, "link": "https://stackoverflow.com/questions/44424540/cannot-apply-unary-operator-to-type-usize", "title": "Cannot apply unary operator `-` to type `usize`", "body": "<p>I'm trying to get some older Rust code to compile, and on this bit of code:</p>\n\n<pre><code>const SOMETHING: *const c_char = -1 as *const c_char;\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot apply unary operator `-` to type `usize`\n  --&gt; src/lib.rs:32:34\n   |\n32 | const SOMETHING: *const c_char = -1 as *const c_char;\n   |         \n</code></pre>\n\n<p>I suspect this is because <code>c_char</code> is unsigned and unsigned can't be negative, but I don't know how to fix it. This code worked with some unknown older version of Rust. I tried changing <code>c_char</code> to <code>i8</code> just for fun and that didn't work.</p>\n"}, {"tags": ["rust", "gtk", "gtk-rs"], "comments": [{"owner": {"reputation": 10424, "user_id": 3408572, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0f3a08b145553b98749d3d0572d01265?s=128&d=identicon&r=PG&f=1", "display_name": "andlabs", "link": "https://stackoverflow.com/users/3408572/andlabs"}, "edited": false, "score": 0, "creation_date": 1496871378, "post_id": 44422439, "comment_id": 75844790, "body": "Try getting the value from the adjustment instead of from the spinbox. I think <code>get_value_as_int()</code> tries to reparse the text in the spinbox, though I&#39;m not sure why that would always give you 1..."}, {"owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "reply_to_user": {"reputation": 10424, "user_id": 3408572, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0f3a08b145553b98749d3d0572d01265?s=128&d=identicon&r=PG&f=1", "display_name": "andlabs", "link": "https://stackoverflow.com/users/3408572/andlabs"}, "edited": false, "score": 0, "creation_date": 1496949887, "post_id": 44422439, "comment_id": 75885583, "body": "I tried <code>self.spin_btn.get_adjustment().get_value()</code> with no luck, still returning 1"}], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": false, "score": 0, "last_activity_date": 1587165324, "creation_date": 1587165324, "answer_id": 61282206, "question_id": 44422439, "link": "https://stackoverflow.com/questions/44422439/gtkspinbutton-get-value-as-int-gives-step-increment-as-result/61282206#61282206", "title": "Gtk::SpinButton get_value_as_int gives step_increment as result", "body": "<p>It seems the <code>output</code> signal handler must not be asynchronous. That means you should not use relm message passing in this case.</p>\n\n<p>You should do something like:</p>\n\n<pre><code>fn init_view(&amp;mut self) {\n    let hours = self.model.num_hours();\n    let minutes = self.model.num_minutes();\n    self.spin_btn.connect_output(move |spin_btn| {\n        let minus = hours * 60;\n        spin_btn.set_text(&amp;format!(\"{:02}:{:02}\",\n                                    hours, minutes - minus));\n        Inhibit(false)\n    });\n}\n</code></pre>\n\n<p>and remove <code>output =&gt; (Msg::Display, Inhibit(false)),</code></p>\n"}], "owner": {"reputation": 5143, "user_id": 600351, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7a2a3b9fd62972fa271deb3d0e31256c?s=128&d=identicon&r=PG", "display_name": "Geob-o-matic", "link": "https://stackoverflow.com/users/600351/geob-o-matic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 113, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1587165324, "creation_date": 1496868276, "last_edit_date": 1496876096, "question_id": 44422439, "link": "https://stackoverflow.com/questions/44422439/gtkspinbutton-get-value-as-int-gives-step-increment-as-result", "title": "Gtk::SpinButton get_value_as_int gives step_increment as result", "body": "<p>I'm struggling with a SpinButton in Rust using Relm. (Disclaimer, I'm a noob with Rust <strong>and</strong> GTK)</p>\n\n<pre><code>#![feature(proc_macro)]\nextern crate gtk;\n\nuse chrono::{NaiveTime, Duration};\n\nuse gtk::prelude::*;\nuse gtk::{\n    WidgetExt,\n    ContainerExt,\n    EntryExt,\n    Adjustment\n};\n\nuse relm::Widget;\nuse relm_attributes::widget;\n\n#[derive(Msg, Debug)]\npub enum Msg {\n    Changed,\n    Display,\n}\n\n#[widget]\nimpl Widget for DurationSpin {\n    fn model(m: Duration) -&gt; Duration {\n        m\n    }\n\n    fn update(&amp;mut self, event: Msg) {\n        match event {\n            Msg::Display =&gt; self.format_display(),\n            Msg::Changed =&gt; {\n                println!(\"update, self.spin_btn.get_value_as_int() = {:?}\", self.spin_btn.get_value_as_int());\n                self.model = Duration::minutes(self.spin_btn.get_value_as_int() as i64)\n\n            },\n        };\n    }\n\n    fn format_display(&amp;mut self) {\n        println!(\"format_display, self.spin_btn.get_value_as_int() = {:?}\", self.spin_btn.get_value_as_int());\n        let minus = self.model.num_hours() * 60;\n        self.spin_btn.set_text(&amp;format!(\"{:02}:{:02}\",\n                                        self.model.num_hours(), self.model.num_minutes() - minus));\n    }\n\n    view! {\n        #[name=\"spin_btn\"]\n        gtk::SpinButton {\n            max_width_chars: 5,\n            width_chars: 5,\n            max_length: 5,\n            numeric: false,\n            output =&gt; (Msg::Display, Inhibit(false)),\n            value_changed =&gt; Msg::Changed,\n            adjustment: &amp;Adjustment::new(self.model.num_minutes() as f64, 0.0, 720.0, 1.0, 60.0, 0.0),\n        }\n    }\n}\n</code></pre>\n\n<p>(whole project here: <a href=\"https://github.com/Geobert/rusty_flexi\" rel=\"nofollow noreferrer\">https://github.com/Geobert/rusty_flexi</a>)</p>\n\n<p>My issue is that clicking on \"+\" makes <code>get_value_as_int</code> always returns '1'.</p>\n\n<p>It seems that my <code>output</code> signal is causing this as deactivating the connection solves the bug but I can't see what's wrong with it.</p>\n"}, {"tags": ["replace", "path", "formatting", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1496859237, "post_id": 44419968, "comment_id": 75838401, "body": "Dang! too fast :P"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1496859316, "post_id": 44419968, "comment_id": 75838442, "body": "@Centril Shepmaster always answer so fast, I just understand the question that Shepmaster answer ^^"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 1, "creation_date": 1496859511, "post_id": 44419968, "comment_id": 75838538, "body": "@Centril In this case, I had an unfair advantage. The question was actually asked first in the <a href=\"http://chat.stackoverflow.com/rooms/62927/rust\">SO Rust chatroom</a> so I already had an answer prepared before the question was posted here ^_^."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1496861108, "last_edit_date": 1496861108, "creation_date": 1496859146, "answer_id": 44419968, "question_id": 44419890, "link": "https://stackoverflow.com/questions/44419890/replacing-path-parts-in-rust/44419968#44419968", "title": "Replacing Path parts in Rust", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix\" rel=\"nofollow noreferrer\"><code>Path::strip_prefix</code></a> and <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.join\" rel=\"nofollow noreferrer\"><code>Path::join</code></a>:</p>\n\n<pre><code>use std::path::Path;\n\nfn main() {\n    let file = Path::new(\"/home/meurer/test/a/01/foo.txt\");\n    let src = Path::new(\"/home/meurer/test/a\");\n    let dst = Path::new(\"/home/meurer/test/b\");\n\n    let relative = file.strip_prefix(src).expect(\"Not a prefix\");\n    let result = dst.join(relative);\n\n    assert_eq!(result, Path::new(\"/home/meurer/test/b/01/foo.txt\"));\n}\n</code></pre>\n\n<p>As usual, you probably don't want to use <code>expect</code> in your production code, it's only for terseness of the answer.</p>\n"}], "owner": {"reputation": 1985, "user_id": 2080712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/NyaqQ.jpg?s=128&g=1", "display_name": "Bernardo Meurer", "link": "https://stackoverflow.com/users/2080712/bernardo-meurer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 529, "favorite_count": 0, "accepted_answer_id": 44419968, "answer_count": 1, "score": 3, "last_activity_date": 1496861108, "creation_date": 1496858910, "question_id": 44419890, "link": "https://stackoverflow.com/questions/44419890/replacing-path-parts-in-rust", "title": "Replacing Path parts in Rust", "body": "<p>Suppose I have the following three paths:</p>\n\n<pre><code>let file = path::Path::new(\"/home/meurer/test/a/01/foo.txt\");\nlet src = path::Path::new(\"/home/meurer/test/a\");\nlet dst = path::Path::new(\"/home/meurer/test/b\");\n</code></pre>\n\n<p>Now, I want to copy <code>file</code> into <code>dst</code>, but for that I need to correct the paths, so that I can have <code>new_file</code> with a path that resolves to <code>/home/meurer/test/b/01/foo.txt</code>. In other words, how do I remove <code>src</code> from <code>file</code> and then append the result to <code>dst</code>?</p>\n\n<p><code>/home/meurer/test/a/01/foo.txt</code> -> <code>/home/meurer/test/b/01/foo.txt</code></p>\n\n<p>Note that we can't assume that <code>src</code> will always be this similar to <code>dst</code>.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496851309, "post_id": 44417491, "comment_id": 75834032, "body": "Probably a dupe of <a href=\"https://stackoverflow.com/q/30243606/155423\">stackoverflow.com/q/30243606/155423</a>"}, {"owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496853477, "post_id": 44417491, "comment_id": 75835386, "body": "The problem is very similar, but different in that my if-block returns the unwrapped value (as <code>&amp;mut i32</code>), so the accepted workaround in the other post (which is in fact similar to my failing sample) does not apply here."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 3, "creation_date": 1496854772, "post_id": 44417491, "comment_id": 75836058, "body": "@rom1v, <a href=\"https://stackoverflow.com/q/38023871/2731452\">stackoverflow.com/q/38023871/2731452</a>"}, {"owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "edited": false, "score": 0, "creation_date": 1496867709, "post_id": 44417491, "comment_id": 75843125, "body": "Thank you for this link, which perfectly answers my question."}], "owner": {"reputation": 2322, "user_id": 1987178, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YS4r1.png?s=128&g=1", "display_name": "rom1v", "link": "https://stackoverflow.com/users/1987178/rom1v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 1, "closed_date": 1496857247, "answer_count": 0, "score": 0, "last_activity_date": 1496851219, "creation_date": 1496850822, "last_edit_date": 1496851219, "question_id": 44417491, "link": "https://stackoverflow.com/questions/44417491/non-lexical-lifetime-workaround-failure", "closed_reason": "Duplicate", "title": "Non-lexical lifetime workaround failure", "body": "<p><code>get()</code> returns a reference to a vector item, pushing the value beforehand if necessary:</p>\n\n<pre><code>struct Container {\n    vec: Vec&lt;i32&gt;,\n}\nimpl Container {\n    fn find(&amp;mut self, v: i32) -&gt; Option&lt;&amp;mut i32&gt; {\n        None // we don't care the implementation\n    }\n\n    fn get(&amp;mut self, v: i32) -&gt; &amp;mut i32 {\n        match self.find(v) {\n            Some(x) =&gt; x,\n            None =&gt; {\n                self.vec.push(v);\n                self.vec.last_mut().unwrap()\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut container = Container { vec: Vec::new() };\n    let x = container.get(42);\n}\n</code></pre>\n\n<p>It does not compile because <code>self</code> is still borrowed when we try to push the value (<code>self.vec.push(v)</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.vec` as mutable more than once at a time\n  --&gt; test.rs:13:17\n   |\n10 |         match self.find(v) {\n   |               ---- first mutable borrow occurs here\n...\n13 |                 self.vec.push(v);\n   |                 ^^^^^^^^ second mutable borrow occurs here\n...\n17 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>This is due to <a href=\"http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/#problem-case-2-conditional-control-flow\" rel=\"nofollow noreferrer\">non-lexical lifetime</a>.</p>\n\n<p>So as a workaround, I thought I could rewrite <code>get()</code> to limit the scope of <code>self.find()</code>:</p>\n\n<pre><code>fn get(&amp;mut self, v: i32) -&gt; &amp;mut i32 {\n    if let Some(x) = self.find(v) {\n        return x;\n    }\n    self.vec.push(v);\n    self.vec.last_mut().unwrap()\n}\n</code></pre>\n\n<p>Unfortunately, this does not work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.vec` as mutable more than once at a time\n  --&gt; test.rs:13:9\n   |\n10 |         if let Some(x) = self.find(v) {\n   |                          ---- first mutable borrow occurs here\n...\n13 |         self.vec.push(v);\n   |         ^^^^^^^^ second mutable borrow occurs here\n14 |         self.vec.last_mut().unwrap()\n15 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>I can't understand why.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": false, "score": 4, "last_activity_date": 1496843998, "creation_date": 1496843998, "answer_id": 44414814, "question_id": 44414539, "link": "https://stackoverflow.com/questions/44414539/why-does-a-call-to-fn-popmut-self-resultt-str-continue-to-borrow-my/44414814#44414814", "title": "Why does a call to `fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;str&gt;` continue to borrow my data structure?", "body": "<p>This happens because of <a href=\"https://doc.rust-lang.org/book/lifetimes.html\" rel=\"nofollow noreferrer\">lifetimes</a>. When you construct a method which takes a reference the compiler detects that and if no lifetimes are specified it \"generates\" them:</p>\n\n<pre><code>pub fn pop&lt;'a&gt;(&amp;'a mut self) -&gt; Result&lt;T, &amp;'a str&gt; {\n    let len: usize = self.data.len();\n\n    if len &gt; 0 {\n        let idx_to_rmv: usize = len - 1;\n        let last: T = self.data.remove(idx_to_rmv);\n        return Result::Ok(last);\n    } else {\n        return Result::Err(\"Empty stack\");\n    }\n}\n</code></pre>\n\n<p>This is what compiler sees actually. So, you want to return a static string, then you have to specify the lifetime for a <code>&amp;str</code> explicitly and let the lifetime for the reference to <code>mut self</code> be inferred automatically:</p>\n\n<pre><code>pub fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;'static str&gt; {\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 347, "user_id": 5092307, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a21129e41626083231e94e42c31b810d?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Yvon", "link": "https://stackoverflow.com/users/5092307/samuel-yvon"}, "edited": false, "score": 0, "creation_date": 1496850617, "post_id": 44414995, "comment_id": 75833568, "body": "Does adding return changes anything? I do it for personal preference, as well as typing the variables so I know for now if I understand properly the return types."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 347, "user_id": 5092307, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a21129e41626083231e94e42c31b810d?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Yvon", "link": "https://stackoverflow.com/users/5092307/samuel-yvon"}, "edited": false, "score": 0, "creation_date": 1496850752, "post_id": 44414995, "comment_id": 75833675, "body": "@SamuelYvon no, none of my suggestions change anything. You can do whatever you want, but it&#39;s always <b>strongly recommended</b> to adhere to the coding conventions of the language you are in. Write Rust code like other Rust code, JS code like other JS code, Go code like other Go code, Ruby code like other Ruby code, etc."}, {"owner": {"reputation": 347, "user_id": 5092307, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a21129e41626083231e94e42c31b810d?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Yvon", "link": "https://stackoverflow.com/users/5092307/samuel-yvon"}, "edited": false, "score": 0, "creation_date": 1496850960, "post_id": 44414995, "comment_id": 75833807, "body": "I totally agree!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1496847179, "last_edit_date": 1496847179, "creation_date": 1496844452, "answer_id": 44414995, "question_id": 44414539, "link": "https://stackoverflow.com/questions/44414539/why-does-a-call-to-fn-popmut-self-resultt-str-continue-to-borrow-my/44414995#44414995", "title": "Why does a call to `fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;str&gt;` continue to borrow my data structure?", "body": "<p>Your <code>pop</code> function is declared as:</p>\n\n<pre><code>pub fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;str&gt;\n</code></pre>\n\n<p>Due to <a href=\"https://doc.rust-lang.org/stable/book/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">lifetime elision</a>, this expands to </p>\n\n<pre><code>pub fn pop&lt;'a&gt;(&amp;'a mut self) -&gt; Result&lt;T, &amp;'a str&gt;\n</code></pre>\n\n<p>This says that the <code>Result::Err</code> variant is a string that lives as long as the stack you are calling it on. Since the input and output lifetimes are the same, the returned value might be pointing somewhere into the <code>Stack</code> data structure so the returned value must continue to hold the borrow.</p>\n\n<blockquote>\n  <p>If I add a <code>.expect()</code> after it, it is ok, it doesn't trigger that error. </p>\n</blockquote>\n\n<p>That's because <code>expect</code> consumes the <code>Result</code>, discarding the <code>Err</code> variant without ever putting it into a variable binding. Since that's never stored, the borrow cannot be saved anywhere and it is released.</p>\n\n<p>To solve the problem, you need to have distinct lifetimes between the input reference and output reference. Since you are using a string literal, the easiest solution is to denote that using the <code>'static</code> lifetime:</p>\n\n<pre><code>pub fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;'static str&gt;\n</code></pre>\n\n<hr>\n\n<p>Extra notes:</p>\n\n<ul>\n<li>Don't call <code>return</code> explicitly at the end of the block / method: <code>return Result::Ok(last)</code> => <code>Result::Ok(last)</code>.</li>\n<li><code>Result</code>, <code>Result::Ok</code>, and <code>Result::Err</code> are all imported via <a href=\"https://doc.rust-lang.org/std/prelude/index.html\" rel=\"nofollow noreferrer\">the prelude</a>, so you don't need to qualify them: <code>Result::Ok(last)</code> => <code>Ok(last)</code>.</li>\n<li>There's no need to specify types in many cases <code>let len: usize = self.data.len()</code> => <code>let len = self.data.len()</code>.</li>\n</ul>\n"}], "owner": {"reputation": 347, "user_id": 5092307, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a21129e41626083231e94e42c31b810d?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Yvon", "link": "https://stackoverflow.com/users/5092307/samuel-yvon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 44414995, "answer_count": 2, "score": 3, "last_activity_date": 1496847179, "creation_date": 1496843313, "last_edit_date": 1496843785, "question_id": 44414539, "link": "https://stackoverflow.com/questions/44414539/why-does-a-call-to-fn-popmut-self-resultt-str-continue-to-borrow-my", "title": "Why does a call to `fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;str&gt;` continue to borrow my data structure?", "body": "<p>I am developing some basic data structures to learn the syntax and Rust in general. Here is what I came up with for a stack:</p>\n\n<pre><code>#[allow(dead_code)]\nmod stack {\n    pub struct Stack&lt;T&gt; {\n        data: Vec&lt;T&gt;,\n    }\n\n    impl&lt;T&gt; Stack&lt;T&gt; {\n        pub fn new() -&gt; Stack&lt;T&gt; {\n            return Stack { data: Vec::new() };\n        }\n\n        pub fn pop(&amp;mut self) -&gt; Result&lt;T, &amp;str&gt; {\n            let len: usize = self.data.len();\n\n            if len &gt; 0 {\n                let idx_to_rmv: usize = len - 1;\n                let last: T = self.data.remove(idx_to_rmv);\n                return Result::Ok(last);\n            } else {\n                return Result::Err(\"Empty stack\");\n            }\n        }\n\n        pub fn push(&amp;mut self, elem: T) {\n            self.data.push(elem);\n        }\n\n        pub fn is_empty(&amp;self) -&gt; bool {\n            return self.data.len() == 0;\n        }\n    }\n}\n\nmod stack_tests {\n    use super::stack::Stack;\n\n    #[test]\n    fn basics() {\n        let mut s: Stack&lt;i16&gt; = Stack::new();\n\n        s.push(16);\n        s.push(27);\n\n        let pop_result = s.pop().expect(\"\");\n\n        assert_eq!(s.pop().expect(\"Empty stack\"), 27);\n        assert_eq!(s.pop().expect(\"Empty stack\"), 16);\n\n        let pop_empty_result = s.pop();\n\n        match pop_empty_result {\n            Ok(_) =&gt; panic!(\"Should have had no result\"),\n            Err(_) =&gt; {\n                println!(\"Empty stack\");\n            }\n        }\n\n        if s.is_empty() {\n            println!(\"O\");\n        }\n    }\n}\n</code></pre>\n\n<p>I get this interesting error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `s` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:58:12\n   |\n49 |         let pop_empty_result = s.pop();\n   |                                - mutable borrow occurs here\n...\n58 |         if s.is_empty() {\n   |            ^ immutable borrow occurs here\n...\n61 |     }\n   |     - mutable borrow ends here\n</code></pre>\n\n<p>Why can't I just call <code>pop</code> on my mutable struct? </p>\n\n<p>Why does <code>pop</code> borrow the value? If I add a <code>.expect()</code> after it, it is ok, it doesn't trigger that error. I know that <code>is_empty</code> takes an immutable reference, if I switch it to mutable I just get a second mutable borrow.</p>\n"}, {"tags": ["rust", "match", "getopts"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1496828938, "post_id": 44409016, "comment_id": 75817113, "body": "You don&#39;t use <a href=\"https://doc.rust-lang.org/getopts/getopts/index.html\" rel=\"nofollow noreferrer\">getopts</a> in your example. You want use it or not ?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 6, "creation_date": 1496829303, "post_id": 44409016, "comment_id": 75817389, "body": "Not an answer to your question, but an alternative library: <a href=\"https://github.com/kbknapp/clap-rs#quick-example\" rel=\"nofollow noreferrer\">Clap</a> is the most user-friendly command line parser I&#39;ve seen in Rust."}, {"owner": {"reputation": 129, "user_id": 7358704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c986b457fb04a5bb07374606f625493d?s=128&d=identicon&r=PG", "display_name": "user160995", "link": "https://stackoverflow.com/users/7358704/user160995"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1496901750, "post_id": 44409016, "comment_id": 75853456, "body": "@Stargateur oops you are right :) I wanted to use it, but sometimes I forgot."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1496838584, "post_id": 44412565, "comment_id": 75824261, "body": "The <a href=\"https://github.com/rust-lang/book/blob/master/README.md\" rel=\"nofollow noreferrer\">readme</a> on git repository of rust book say that &quot;We recommend starting with the <a href=\"http://rust-lang.github.io/book/second-edition\" rel=\"nofollow noreferrer\">second edition</a>.&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1496839827, "post_id": 44412565, "comment_id": 75825139, "body": "@Stargateur yep, it does. However, it&#39;s not fair to expect people to have read documentation that isn&#39;t linked from anywhere that they could reasonably have found it. After the release tomorrow, <a href=\"https://doc.rust-lang.org/beta/book/\" rel=\"nofollow noreferrer\">the official documentation resources will point to the second book</a>, and I will have to go through thousands of SO answers to update links."}, {"owner": {"reputation": 129, "user_id": 7358704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c986b457fb04a5bb07374606f625493d?s=128&d=identicon&r=PG", "display_name": "user160995", "link": "https://stackoverflow.com/users/7358704/user160995"}, "edited": false, "score": 0, "creation_date": 1496902137, "post_id": 44412565, "comment_id": 75853650, "body": "Yeah, I had other warnings in a code and I didn&#39;t notice that (I will probably look carefully at these now). What I tried and messed up that I tried to convert these variables at some point to String type instead of str, as compiler clearly gave me message that it &quot;^^^^^^^ expected struct <code>std::string::String</code>, found str&quot;"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1496838304, "creation_date": 1496838304, "answer_id": 44412565, "question_id": 44409016, "link": "https://stackoverflow.com/questions/44409016/why-does-a-match-never-use-the-second-match-arm/44412565#44412565", "title": "Why does a match never use the second match arm?", "body": "<p>You <em>really</em> need to read the compilers error and warning messages. This code has <strong>seven</strong> warnings. If you had addressed any of them you'd be a lot closer to fixing the problem yourself. If you'd fixed all of them, your problem would be gone.</p>\n\n<p>Here's a representative warning where the compiler tells you exactly what the problem is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable pattern\n  --&gt; src/main.rs:24:5\n   |\n24 |     _ =&gt; println!(\"=====ERROR=====\\nInvalid game, type in 'help me' to get some help.\")\n   |     ^ this is an unreachable pattern\n   |\n   = note: #[warn(unreachable_patterns)] on by default\nnote: this pattern matches any value\n  --&gt; src/main.rs:15:5\n   |\n15 |     help =&gt; {\n   |     ^^^^\n</code></pre>\n\n<p>When you use just <code>help</code>, that creates a new variable with the value you are matching on. In this case, it matches <em>everything</em>, so the subsequent arms can never match.</p>\n\n<p>Instead, you need to match against a string literal:</p>\n\n<pre><code>match game.as_str() {\n    \"help\" =&gt; {\n        match rom.as_str() {\n            \"list\" =&gt; /* ... */,\n            \"me\" =&gt; /* ... */,\n            _ =&gt; /* ... */,\n        }\n    },\n    _ =&gt; /* ... */,\n}\n</code></pre>\n\n<p>I'd <strong>strongly encourage you</strong> to go back and re-read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>. It's where a lot of the beginner documentation is kept. Specifically, you should read from the beginning and then up through <a href=\"https://doc.rust-lang.org/stable/book/match.html\" rel=\"noreferrer\">the chapter on <code>match</code></a> and <a href=\"https://doc.rust-lang.org/stable/book/patterns.html\" rel=\"noreferrer\">the chapter on patterns</a>.</p>\n"}], "owner": {"reputation": 129, "user_id": 7358704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c986b457fb04a5bb07374606f625493d?s=128&d=identicon&r=PG", "display_name": "user160995", "link": "https://stackoverflow.com/users/7358704/user160995"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1496838304, "creation_date": 1496828578, "last_edit_date": 1496837937, "question_id": 44409016, "link": "https://stackoverflow.com/questions/44409016/why-does-a-match-never-use-the-second-match-arm", "title": "Why does a match never use the second match arm?", "body": "<p>I am trying to make reimplementation of first 2 Final Fantasy games using original data from various platforms. I want to get 2 program arguments using the getopts crate and handle both of them by using <code>match</code> but it just executes the first match element. I think I screwed up something with types.</p>\n\n<p>Maybe there is another way to do it? I am lost using the official Rust docs and any tutorials on internet are not really noob-friendly.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>let args: Vec&lt;String&gt; = env::args().map(|x| x.to_string()).collect();\n\nif(args.len() &lt; 3) {\n    println!(\"=====ERROR=====\\nInvalid number of parameters\\nExpected: &lt;gamename&gt; &lt;gamerom&gt;\\nType in: 'help me' to get some help.\");\n    process::exit(1);\n}\n\nlet ref game = args[1];\nlet ref rom = args[2];\n\nmatch game {\n    help =&gt; {\n        println!(\"=====HELP======\");\n\n        match rom {\n            list =&gt; println!(\"Available games: ff1, ff2\\nAvailable roms: ff1_j_msx, ff1_j_nes, ff1_u, ff1and2, ff2_j, ff2_u_proto\"),\n            me =&gt; println!(\"Available help commands:\\nlist -&gt; List of available games and roms.\\nme -&gt; This help\"),\n            _ =&gt; println!(\"=====ERROR=====\\nInvalid help command.\")\n        }\n    },\n    _ =&gt; println!(\"=====ERROR=====\\nInvalid game, type in 'help me' to get some help.\") \n}\n</code></pre>\n"}, {"tags": ["c", "performance", "rust"], "comments": [{"owner": {"reputation": 52186, "user_id": 1553090, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Wj4s1.png?s=128&g=1", "display_name": "paddy", "link": "https://stackoverflow.com/users/1553090/paddy"}, "edited": false, "score": 2, "creation_date": 1496807858, "post_id": 44403154, "comment_id": 75805854, "body": "Have you tried comparing the assembly for your two versions of the C program?  Chances are that your loop is never executed, because it has no effect on your program&#39;s output."}, {"owner": {"reputation": 8204, "user_id": 2858773, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/5iGps.jpg?s=128&g=1", "display_name": "Ajay Brahmakshatriya", "link": "https://stackoverflow.com/users/2858773/ajay-brahmakshatriya"}, "reply_to_user": {"reputation": 52186, "user_id": 1553090, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Wj4s1.png?s=128&g=1", "display_name": "paddy", "link": "https://stackoverflow.com/users/1553090/paddy"}, "edited": false, "score": 0, "creation_date": 1496815187, "post_id": 44403154, "comment_id": 75808260, "body": "@paddy update to global variables are side effects. I am not sure any compiler would optimize that."}], "answers": [{"comments": [{"owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496813252, "post_id": 44403421, "comment_id": 75807483, "body": "&quot;<code>If you change the code to run the same loop before the measurement, the runtime goes down considerably. It&#39;s actually faster than the C version on my machine.</code>&quot;. Sorry, I can&#39;t catch your meaning. Could you explain it? Thx!"}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496813517, "post_id": 44403421, "comment_id": 75807564, "body": "@NanXiao added the example"}, {"owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496814021, "post_id": 44403421, "comment_id": 75807752, "body": "I compile the <code>C</code> program using <code>Clang</code>, and the performance is as good as <code>gcc</code> compiler."}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496814861, "post_id": 44403421, "comment_id": 75808104, "body": "@NanXiao Yeah, I should&#39;ve just removed it instead. There were a few bad assumptions there."}, {"owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496815442, "post_id": 44403421, "comment_id": 75808372, "body": "<code>Another thing I missed is that Rust puts the array in a data section, while C actually writes (memset with pattern) to the memory.</code>. I have little confused about this explanation. I think <code>C</code> also puts the global array in data section. Could you elaborate it? Thx!"}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496815590, "post_id": 44403421, "comment_id": 75808455, "body": "@NanXiao It doesn&#39;t. Compile with <code>gcc -O2 -S ...</code> and you&#39;ll see the initial values created via <code>_memset_pattern16</code> or similar. Rust just embeds the repeating values in the data section. <code>rustc --emit asm ...</code>"}, {"owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496816251, "post_id": 44403421, "comment_id": 75808777, "body": "Sorry I still can&#39;t get your point. Per my understanding, data section will also reside in memory. Right? So every operation will finally update the data in array which in memory."}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 2, "creation_date": 1496816481, "post_id": 44403421, "comment_id": 75808907, "body": "What rust does is put the actual values of the array one after another in the resulting binary it compiles. So when you start the binary, they may not even be completely read from the disk yet. When you read them for the first time, they may causes page faults that need to be handled. C instead initialises the whole array in a loop at the start, so by the time you get to your loop, the range is definitely allocated and written to. Compile both with the commands I showed before and see the end of the resulting file."}, {"owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "edited": false, "score": 0, "creation_date": 1496817950, "post_id": 44403421, "comment_id": 75809798, "body": "I get your point. <code>for (j = 0; j &lt; STREAM_ARRAY_SIZE; j++) { A[j] = 1.0; }</code> in <code>C</code> program will load array from disk to memory, so in the second calculation loop, the speed will definitely fast."}, {"owner": {"reputation": 623, "user_id": 1955971, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f1d7c2842d4d6be9c8f79e1384f284af?s=128&d=identicon&r=PG", "display_name": "Aleksander Fular", "link": "https://stackoverflow.com/users/1955971/aleksander-fular"}, "edited": false, "score": 5, "creation_date": 1496826213, "post_id": 44403421, "comment_id": 75815104, "body": "You could put in the first sentence of your answer something saying that rust is not at fault and the benchmark is incorrect :). So after first look at your answer one does not get the incorrect impression."}], "tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": true, "score": 9, "last_activity_date": 1496838838, "last_edit_date": 1496838838, "creation_date": 1496809188, "answer_id": 44403421, "question_id": 44403154, "link": "https://stackoverflow.com/questions/44403154/why-is-a-program-that-updates-a-large-static-floating-point-array-slower-in-rust/44403421#44403421", "title": "Why is a program that updates a large static floating point array slower in Rust than in C?", "body": "<p>Rust compiles the loop to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.LBB0_1:\n    movupd  xmm0, xmmword ptr [rcx + 8*rax - 48]\n    movupd  xmm1, xmmword ptr [rcx + 8*rax - 32]\n    addpd   xmm0, xmm0\n    addpd   xmm1, xmm1\n    movupd  xmmword ptr [rcx + 8*rax - 48], xmm0\n    movupd  xmmword ptr [rcx + 8*rax - 32], xmm1\n    movupd  xmm0, xmmword ptr [rcx + 8*rax - 16]\n    movupd  xmm1, xmmword ptr [rcx + 8*rax]\n    addpd   xmm0, xmm0\n    addpd   xmm1, xmm1\n    movupd  xmmword ptr [rcx + 8*rax - 16], xmm0\n    movupd  xmmword ptr [rcx + 8*rax], xmm1\n    add rax, 8\n    cmp rax, 100006\n    jne .LBB0_1\n</code></pre>\n\n<p>While GCC 7.1.0 compiles to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>L6:\n    movsd   (%rbx), %xmm0\n    addq    $8, %rbx\n    addsd   %xmm0, %xmm0\n    movsd   %xmm0, -8(%rbx)\n    cmpq    %rbp, %rbx\n    jne     L6\n</code></pre>\n\n<p>Rust puts the array in a data section, while C actually writes (<code>memset</code> with pattern) to the memory. This means that your OS running the app likely just maps the range and relies on virtual memory to do the right thing.</p>\n\n<p>If you change the code to run the same loop before the measurement, the runtime goes down considerably. It's actually faster than the C version on my machine. (possibly due to that loop unrolling)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe {\n    for i in 0..STREAM_ARRAY_SIZE {\n        A[i] = 2.0E0 * A[i];\n    }\n}\n\nlet now = Instant::now();\n\nunsafe {\n    for i in 0..STREAM_ARRAY_SIZE {\n        A[i] = 2.0E0 * A[i];\n    }\n}\n\nlet duration = now.elapsed();\n</code></pre>\n"}], "owner": {"reputation": 14308, "user_id": 2106207, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/960430ab7aba908bb9aa62d530618a75?s=128&d=identicon&r=PG", "display_name": "Nan Xiao", "link": "https://stackoverflow.com/users/2106207/nan-xiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "accepted_answer_id": 44403421, "answer_count": 1, "score": 7, "last_activity_date": 1496838838, "creation_date": 1496807330, "last_edit_date": 1496838762, "question_id": 44403154, "link": "https://stackoverflow.com/questions/44403154/why-is-a-program-that-updates-a-large-static-floating-point-array-slower-in-rust", "title": "Why is a program that updates a large static floating point array slower in Rust than in C?", "body": "<p>I wrote a simple program to compare Rust and C performance.  </p>\n\n<p>The Rust version:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Instant;\n\nconst STREAM_ARRAY_SIZE: usize = 10000000;\nstatic mut A: [f64; STREAM_ARRAY_SIZE] = [1.0; STREAM_ARRAY_SIZE];\n\nfn main() {\n    let now = Instant::now();\n\n    unsafe {\n        for i in 0..STREAM_ARRAY_SIZE {\n            A[i] = 2.0E0 * A[i];\n        }\n    }\n\n    let duration = now.elapsed();\n    println!(\"{}\", (duration.as_secs() * 1_000_000_000 + duration.subsec_nanos() as u64) / 1000);\n}\n</code></pre>\n\n<p>Run it in debug &amp; release mode:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./target/debug/calc\n472046 us.\n$ ./target/release/calc\n62860 us.\n</code></pre>\n\n<p>The release version has a drastic performance gain compared to debug.  </p>\n\n<p>The C version does the same thing and runs on the same server:  </p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;sys/time.h&gt;\n#include &lt;stdio.h&gt;\n\n#define STREAM_ARRAY_SIZE   10000000\n\nstatic double A[STREAM_ARRAY_SIZE];\nint mysecond(void)\n{\n        struct timeval tp;\n        struct timezone tzp;\n        int i;\n\n        i = gettimeofday(&amp;tp,&amp;tzp);\n        return (tp.tv_sec * 1000000 + tp.tv_usec);\n}\n\nint main(void)\n{\n    int j = 0;\n    for (j = 0; j &lt; STREAM_ARRAY_SIZE; j++)\n    {\n        A[j] = 1.0;\n    }\n\n    int t = mysecond();\n    for (j = 0; j &lt; STREAM_ARRAY_SIZE; j++)\n    {\n        A[j] = 2.0E0 * A[j];\n    }\n    printf(\"%d us.\\n\", mysecond() - t);\n    return 0;\n}\n</code></pre>\n\n<p>Compile and run it with <code>-O0</code> and <code>-O2</code>:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ gcc test.c\n$ ./a.out\n41626 us.\n$ gcc -O2 test.c\n$ ./a.out\n13499 us.\n</code></pre>\n\n<p>The Rust optimized version only compares to <code>gcc -O0</code>, and is very weak compared to <code>gcc -O2</code>. Is this reasonable? How can I improve the performance of the Rust version?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496753913, "post_id": 44390366, "comment_id": 75781072, "body": "This looks like a misconception of what closures do by default. Without <code>move</code>, the closure will always borrow the necessary external resources. It doesn&#39;t even matter if they implement <code>Copy</code>."}, {"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496753931, "post_id": 44390366, "comment_id": 75781086, "body": "@Shepmaster that format button looks neat. I have always overlooked it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496754082, "post_id": 44390366, "comment_id": 75781206, "body": "Alright; I&#39;ve changed it back to your original code, updated the playground link to match the code you wanted, and included the error. The error is the <b>important thing that was missing</b>, which is why I started down this path. I apologize for changing the meaning of your code, but please also take care to <i>include error messages</i> when asking about them!"}, {"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496754103, "post_id": 44390366, "comment_id": 75781230, "body": "@E_net4 I know by default it tries to borrow. But I think sometimes it does take ownership like in case <code>test2</code>"}, {"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496754424, "post_id": 44390366, "comment_id": 75781470, "body": "@Shepmaster In my original question, I commented inline briefly about the error (perhaps it easily gets neglected). I think next time I would post the whole error message in a new block like you did."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496754689, "post_id": 44390366, "comment_id": 75781687, "body": "@colinfang that would be ideal. When we are faced with a problem or error message we don&#39;t understand, that is not the best time to try to summarize it, as we, by definition, don&#39;t know enough to do so reliably ^_^. Posting the complete error message makes sure that everyone is able to reproduce the exact same issue you are seeing and reduces the potential for misplaced answers. The full text also has much more detail compared to the summarized version, which can be useful for us to help understand and explain the original problem."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496762055, "post_id": 44390366, "comment_id": 75787308, "body": "@E_net4, The Book has <a href=\"https://doc.rust-lang.org/book/closures.html#closures-and-their-environment\" rel=\"nofollow noreferrer\">an example</a> where non-move closure takes ownership of a variable: <code>let nums = vec![1, 2, 3]; let takes_nums = || nums;</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496764173, "post_id": 44390366, "comment_id": 75788779, "body": "Indeed, I stand corrected. Only realised that upon a second look at the book."}], "answers": [{"comments": [{"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 0, "creation_date": 1496754741, "post_id": 44390741, "comment_id": 75781726, "body": "Why would it borrow if the value is <code>Copy</code>? I had thought that the compiler would more likely to move because of <code>Copy</code>"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 0, "creation_date": 1496754908, "post_id": 44390741, "comment_id": 75781855, "body": "@colinfang: <code>Copy</code> means it can make a copy of the value whenever it pleases.  So it can just borrow it and copy when (and <i>if</i>) it needs a value.  With a non-<code>Copy</code> type, it <i>can&#39;t</i> make a copy to pass to <code>foo2</code>, so it <i>has</i> to move it.  Even if a type is <code>Copy</code>, it could still be huge."}, {"owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "edited": false, "score": 1, "creation_date": 1496755096, "post_id": 44390741, "comment_id": 75781987, "body": "I see, so in this case, it tries to borrow at the closure creation and to make a copy when <code>foo1</code> is called."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1496760289, "post_id": 44390741, "comment_id": 75785944, "body": "I find this discrepancy jarring, actually. I guess it doesn&#39;t have much choice (with no way to opt-out of move, it has to only be used when mandatory), but it is jarring nonetheless."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1496754109, "creation_date": 1496754109, "answer_id": 44390741, "question_id": 44390366, "link": "https://stackoverflow.com/questions/44390366/when-does-a-closure-take-ownership-of-its-environment-without-the-move-keyword/44390741#44390741", "title": "When does a closure take ownership of its environment without the move keyword?", "body": "<p>Because it doesn't <em>have</em> to take ownership.  Moving is more destructive than simply borrowing, so if the compiler thinks it can get away with not moving a captured value, it won't.  It moves the <code>String</code> because it has no other option.  It borrows the <code>i32</code> because it's <code>Copy</code>.</p>\n\n<blockquote>\n  <p>But it <em>can't</em> get away with not borrowing it!</p>\n</blockquote>\n\n<p>Aah, but the compiler <em>doesn't know that</em> until <em>after</em> it's decided if it's borrowing or moving a captured value.  The heuristic it uses is just that: not always correct.</p>\n\n<blockquote>\n  <p>Couldn't it just work it out properly?</p>\n</blockquote>\n\n<p>Probably, but no one's taught it how.</p>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 0, "accepted_answer_id": 44390741, "answer_count": 1, "score": 2, "last_activity_date": 1496754109, "creation_date": 1496753051, "last_edit_date": 1496753991, "question_id": 44390366, "link": "https://stackoverflow.com/questions/44390366/when-does-a-closure-take-ownership-of-its-environment-without-the-move-keyword", "title": "When does a closure take ownership of its environment without the move keyword?", "body": "<pre><code>use std::thread;\n\nfn test2() {\n    let x = \"abc\".to_string();\n    thread::spawn(|| {\n        foo2(x);\n    });\n}\n\nfn foo2(x: String) {}\n\nfn test1() {\n    let x = 1;\n    thread::spawn(|| { \n        foo1(x); \n    });\n}\n\nfn foo1(x: i32) {}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=93fb93d03a073d9cf3bb56e85f58fd87&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `x`, which is owned by the current function\n  --&gt; &lt;anon&gt;:12:19\n   |\n12 |     thread::spawn(|| { foo1(x); });\n   |                   ^^        - `x` is borrowed here\n   |                   |\n   |                   may outlive borrowed value `x`\n   |\nhelp: to force the closure to take ownership of `x` (and any other referenced variables), use the `move` keyword, as shown:\n   |     thread::spawn(move || { foo1(x); });\n</code></pre>\n\n<p>Why does the closure in <code>test1</code> not take ownership of <code>x</code>, which is specified by the signature (<code>x: i32</code>) of <code>foo1</code>? (I know I can add <code>move</code> to make it work.) I guess it is due to that <code>x</code> is copyable, but if it is copied into the closure then why do I still have the lifetime problem?</p>\n\n<p>However <code>test2</code> works.</p>\n"}, {"tags": ["ios", "rust", "sdl-2"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 4, "creation_date": 1496739468, "post_id": 44385573, "comment_id": 75770959, "body": "Hopefully someone will answer your question on here, but if they don&#39;t, make sure to check out the rust_gamedev Reddit and IRC - I know for a fact there&#39;s at least one person on there who has shipped an iOS game written in Rust and SDL."}], "owner": {"reputation": 1542, "user_id": 443136, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/96f1ca62e16935890751ea3b4d7d84c8?s=128&d=identicon&r=PG", "display_name": "Valerio Santinelli", "link": "https://stackoverflow.com/users/443136/valerio-santinelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 174, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1496751377, "creation_date": 1496739327, "last_edit_date": 1496751377, "question_id": 44385573, "link": "https://stackoverflow.com/questions/44385573/is-there-any-way-to-have-rust-add-the-sdl2-ios-libraries-to-my-own-library", "title": "Is there any way to have Rust add the SDL2 iOS libraries to my own library?", "body": "<p>I have a small project made with Rust that uses rust-sdl2 to manage windows, graphics, etc... It's pretty simple as it only displays a window and clears it.</p>\n\n<p>It works fine on macOS and I'm trying to make it work on iOS as well. I managed to compile the library for the simulator using <code>cargo build --no-default-features --target x86_64-apple-ios --lib</code> and I can see both the dylib and .a being generated.</p>\n\n<p>I created a new iOS project in Xcode and added the library to the project. I also made sure to mark the function that I want to call with <code>#[no_mangle]</code> and added the <code>extern \"C\"</code> prefix.</p>\n\n<p>I did something similar in the main view controller (I know it's the wrong place as I should actually replace the main.m file and let SDL2 manage the whole application lifecycle, but I'll get there later):</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern void run_loop();\n\n- (void)viewDidLoad {\n  [super viewDidLoad];\n  run_loop();\n}\n</code></pre>\n\n<p>I also added the path to the generated library to the project's libraries search path.</p>\n\n<p>When I compile it everything is fine, but the linker is complaining that it can't find the SDL2 libraries. That makes sense as I'm not including the iOS version of those libraries. The point is, is there any way to have Rust add the SDL2 iOS libraries inside my own library so that I do not need to carry around more dependencies or should I compile the iOS version of SDL2 by hand and add them to the project?</p>\n"}, {"tags": ["floating-point", "rust", "ieee-754"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1519827278, "last_edit_date": 1519827278, "creation_date": 1496696917, "answer_id": 44377739, "question_id": 44377657, "link": "https://stackoverflow.com/questions/44377657/how-to-convert-float-to-binary-without-using-unsafe-code/44377739#44377739", "title": "How to convert float to binary without using unsafe code?", "body": "<p>Rust 1.20 introduced <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.to_bits\" rel=\"noreferrer\"><code>f64::to_bits</code></a> and <a href=\"https://doc.rust-lang.org//std/primitive.f32.html#method.to_bits\" rel=\"noreferrer\"><code>f32::to_bits</code></a>:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", (4.2f64).to_bits())\n}\n</code></pre>\n\n<p>Before then, you need to use the unsafe function <code>transmute</code>. They produce the same result:</p>\n\n<pre><code>use std::mem;\n\nfn main() {\n    let float = 4.2f64;\n\n    let via_method = float.to_bits();\n    let via_transmute: u64 = unsafe { mem::transmute(float) };\n\n    assert_eq!(via_method, via_transmute);    \n}\n</code></pre>\n"}], "owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 675, "favorite_count": 0, "accepted_answer_id": 44377739, "answer_count": 1, "score": 4, "last_activity_date": 1519827278, "creation_date": 1496696590, "last_edit_date": 1496696726, "question_id": 44377657, "link": "https://stackoverflow.com/questions/44377657/how-to-convert-float-to-binary-without-using-unsafe-code", "title": "How to convert float to binary without using unsafe code?", "body": "<p>Is there a way to convert a floating point number (<code>f32</code> or <code>f64</code>) to a data type that I can access bitwise, like <code>u32</code>/<code>u64</code>? That is, something corresponding to:</p>\n\n<pre><code>fn as_bits(i: f64) -&gt; u64 {\n    unsafe { mem::transmute(i) }\n}\n</code></pre>\n\n<p>but without the <code>unsafe</code>. This code is safe per the <a href=\"https://doc.rust-lang.org/nomicon/meet-safe-and-unsafe.html\" rel=\"nofollow noreferrer\">rules</a>, even though it may not return the same values on all platforms, specifically for NaNs. The reverse safe interface would also be nice.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1496728458, "post_id": 44376351, "comment_id": 75764781, "body": "Not possible yet: <a href=\"https://github.com/rust-lang/rust/issues/41430\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/41430</a>"}, {"owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1496745492, "post_id": 44376351, "comment_id": 75775062, "body": "Thank you. If you make it an official answer, I&#39;ll be glad to accept it."}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 3, "last_activity_date": 1515806382, "creation_date": 1515806382, "answer_id": 48236089, "question_id": 44376351, "link": "https://stackoverflow.com/questions/44376351/how-to-pass-a-whole-crate-to-a-procedural-macro/48236089#48236089", "title": "How to pass a whole crate to a procedural macro?", "body": "<p>This is possible as of Rust 1.25.0-nightly as long as you enable <code>feature(extern_absolute_paths)</code> and use an absolute path for your attribute macro.</p>\n\n<pre><code>#![::my_crate::my_macro]\n#![feature(extern_absolute_paths, proc_macro)]\n</code></pre>\n\n<p>The issue of attribute macros invoked at the crate root is being tracked in <a href=\"https://github.com/rust-lang/rust/issues/41430\" rel=\"nofollow noreferrer\">rust-lang/rust#41430</a>. We expect to remove the limitation that the attribute must be specified with an absolute path as the implementation of <a href=\"https://github.com/rust-lang/rust/issues/44660\" rel=\"nofollow noreferrer\">RFC 2126</a> proceeds further. You may run into other limitations too, in particular attempting to inject functions into the crate from a crate-level procedural macro currently <a href=\"https://github.com/rust-lang/rust/issues/45458\" rel=\"nofollow noreferrer\">crashes the compiler</a>.</p>\n"}], "owner": {"reputation": 975, "user_id": 7687388, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xhm3T.png?s=128&g=1", "display_name": "CodeSandwich", "link": "https://stackoverflow.com/users/7687388/codesandwich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 308, "favorite_count": 0, "accepted_answer_id": 48236089, "answer_count": 1, "score": 3, "last_activity_date": 1515806382, "creation_date": 1496691132, "question_id": 44376351, "link": "https://stackoverflow.com/questions/44376351/how-to-pass-a-whole-crate-to-a-procedural-macro", "title": "How to pass a whole crate to a procedural macro?", "body": "<p>I'm trying to pass my whole crate to a procedural macro.</p>\n\n<p>I've tried putting this code on top of my <code>lib.rs</code>:</p>\n\n<pre><code>#![my_macro]\n#![feature(proc_macro)]\nextern crate my_macro;\nuse my_macro::{my_macro};\n</code></pre>\n\n<p>and failed: <code>error: cannot find attribute macro 'my_macro' in this scope</code></p>\n\n<p>I've tried also putting the macro invocation below the <code>use</code> clause:</p>\n\n<pre><code>#![feature(proc_macro)]\nextern crate my_macro;\nuse mock_macro::{my_macro};\n#![my_macro]\n</code></pre>\n\n<p>but failed as well: <code>error: an inner attribute is not permitted in this context</code></p>\n\n<p>Is it possible to do it? (I know <code>syn</code> has a function for parsing a whole crate)</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1496669356, "post_id": 44369360, "comment_id": 75741127, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit\">How to check in Rust if architecture is 32 or 64 bit?</a> - the question is slightly different, but the answer is the same."}, {"owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1496671270, "post_id": 44369360, "comment_id": 75742431, "body": "The answer to <a href=\"https://stackoverflow.com/questions/41896462/how-to-check-in-rust-if-architecture-is-32-or-64-bit\">How to check in Rust if architecture is 32 or 64 bit?</a> is not enough for my problem. Because I need two different version of macros. I know how to use target_arch to  define different version of functions but not macros."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1496674521, "post_id": 44369360, "comment_id": 75744594, "body": "<code>#[cfg]</code> works on macros just like it does on functions."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1496674749, "post_id": 44369360, "comment_id": 75744732, "body": "Be aware that Rust&#39;s macros aren&#39;t just simple text substitution like they are in C. They have to expand to a whole &#39;thing&#39; (an item, method, statement, expression, or pattern, to be precise). Your C example won&#39;t translate exactly into Rust."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1496674786, "post_id": 44369360, "comment_id": 75744750, "body": "Generally I have seen stuff like this done by having two versions of the function, both annotated with <code>target_arch</code> (or a similar attribute) to determine which ends up in the final build. If they share functionality, pull that out into a separate function and then call it from both."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1496704295, "post_id": 44369360, "comment_id": 75758920, "body": "IMO, a better approach would be to use generics instead of function pointers, which would let the compiler inline the function call, thus the calling convention becomes irrelevant."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498024033, "post_id": 44369360, "comment_id": 76320288, "body": "Please post your solution in an answer, here your previous source <a href=\"https://stackoverflow.com/revisions/44369360/4\">stackoverflow.com/revisions/44369360/4</a>."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498636732, "post_id": 44710341, "comment_id": 76573810, "body": "Can you put an example of how to use it?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498637056, "post_id": 44710341, "comment_id": 76574018, "body": "@Boiethios This is a wiki answer feel free to improve it, I just create it because OP had answer in the question. I have no idea about how this work or what is the purpose."}, {"owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "edited": false, "score": 1, "creation_date": 1501400671, "post_id": 44710341, "comment_id": 77755660, "body": "I used it in my own Forth to define primitive forth words. Please see <a href=\"https://github.com/chengchangwu/rtforth/blob/master/src/core.rs\" rel=\"nofollow noreferrer\">github.com/chengchangwu/rtforth/blob/master/src/core.rs</a> ."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1501484666, "last_edit_date": 1501484666, "creation_date": 1498170822, "answer_id": 44710341, "question_id": 44369360, "link": "https://stackoverflow.com/questions/44369360/how-do-i-define-a-function-with-different-calling-conventions-depending-on-the-a/44710341#44710341", "title": "How do I define a function with different calling conventions depending on the architecture using a macro?", "body": "<pre><code>#[cfg(target_arch = \"arm\")]\n#[macro_export]\nmacro_rules! primitive {\n    (fn $args:tt) =&gt; { fn $args };\n    (fn $f:ident $args:tt $body:tt) =&gt; { fn $f $args $body };\n    (fn $f:ident $args:tt -&gt; isize $body:tt) =&gt; { fn $f $args -&gt; isize $body };\n}\n\n#[cfg(target_arch = \"x86\")]\n#[macro_export]\nmacro_rules! primitive {\n    (fn $args:tt) =&gt; { extern \"fastcall\" fn $args };\n    (fn $f:ident $args:tt $body:tt) =&gt; { extern \"fastcall\" fn $f $args $body };\n    (fn $f:ident $args:tt -&gt; isize $body:tt) =&gt; { extern \"fastcall\" fn $f $args -&gt; isize $body };\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>pub struct Word&lt;Target&gt; {\n    symbol: Symbol,\n    is_immediate: bool,\n    is_compile_only: bool,\n    hidden: bool,\n    dfa: usize,\n    cfa: usize,\n    action: primitive!{ fn (&amp;mut Target) },\n    pub(crate) compilation_semantics: fn(&amp;mut Target, usize),\n}\n\nprimitive!{fn dup(&amp;mut self) {\n    let slen = self.s_stack().len.wrapping_add(1);\n    self.s_stack().len = slen;\n    self.s_stack()[slen.wrapping_sub(1)] = self.s_stack()[slen.wrapping_sub(2)];\n}}\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 425, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1501484666, "creation_date": 1496667064, "last_edit_date": 1498023991, "question_id": 44369360, "link": "https://stackoverflow.com/questions/44369360/how-do-i-define-a-function-with-different-calling-conventions-depending-on-the-a", "title": "How do I define a function with different calling conventions depending on the architecture using a macro?", "body": "<p>I'm developing a small language in Rust. To improve the performance, I'd like to use fastcall calling convention for x86. The <code>\"fastcall\"</code> ABI is not supported for ARM.</p>\n\n<p>For x86:</p>\n\n<pre><code>fn add_primitive(&amp;mut self, name: &amp;str, action: extern \"fastcall\" fn(&amp;mut Self)) {\n    ...\n}\n\nextern \"fastcall\" fn a_primitive(&amp;mut self) {}\n</code></pre>\n\n<p>For ARM:</p>\n\n<pre><code>fn add_primitive(&amp;mut self, name: &amp;str, action: fn(&amp;mut Self)) {\n    ...\n}\n\nfn a_primitive(&amp;mut self) {}\n</code></pre>\n\n<p>Using C I can define a macro</p>\n\n<pre><code>#ifdef x86\n#define PRIMITIVE extern \"fastcall\" fn\n#endif\n#ifdef arm\n#define PRIMITIVE fn\n#endif\n\nfn add_primitive(&amp;mut self, name: &amp;str, action: PRIMITIVE(&amp;mut Self)) {\n    ...\n}\n\nPRIMITIVE a_primitive(&amp;mut self) {}\n</code></pre>\n\n<p>I do not know how to solve this problem using Rust's macro system.</p>\n\n<p>EDIT:</p>\n\n<p>I need two different macros. I know how to use target_arch to define different versions of functions but not macros.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496666263, "post_id": 44368642, "comment_id": 75739168, "body": "Related information can be found in <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a struct reference from a boxed trait?</a>; <a href=\"https://stackoverflow.com/q/28632968/155423\">Why doesn&#39;t Rust support trait object upcasting?</a>"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496672115, "post_id": 44368642, "comment_id": 75743046, "body": "@Shepmaster I update my question to explains how it different from question you mentioned."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1496871844, "post_id": 44420449, "comment_id": 75844939, "body": "Thanks, looks like I made it not clear, but specific <code>Foo</code> for specific <code>Data</code> can only be converted to only <code>TypedFoo&lt;Data&gt;</code>, not for several <code>TypedFoo&lt;Data1&gt;</code>, <code>TypedFoo&lt;Data2&gt;</code>. Can compiler in theory compiler generate wrong code if function return pointer, but we call it as function that return reference?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1496891875, "post_id": 44420449, "comment_id": 75850307, "body": "@user1244932, If you want to return <code>TypedFoo&lt;T&gt;</code> for <code>Box&lt;Foo&gt;</code>, where <code>T</code> is the type behind trait <code>Foo</code> in this specific box, then it isn&#39;t possible, because type of return value cannot depend on the value of input parameter. Rust isn&#39;t dynamically typed language. The closest you can get is by defining enumeration of <code>&amp;TypedFoo</code> values with different types. If you need to make a clone of <code>Box&lt;Foo&gt;</code>, you can add function <code>fn clone_box(&amp;self) -&gt; Box&lt;Foo&gt;</code> to the trait <code>Foo</code>."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1496892440, "post_id": 44420449, "comment_id": 75850434, "body": "@user1244932, I suspect that converting function pointer into function pointer with different signature and calling it is undefined behavior. Note, that in the example I given, I convert <code>*const ()</code> into the function pointer of the same signature it was originally."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 3, "last_activity_date": 1496860871, "creation_date": 1496860871, "answer_id": 44420449, "question_id": 44368642, "link": "https://stackoverflow.com/questions/44368642/get-generic-trait-from-ordinal-one-without-self-type/44420449#44420449", "title": "Get generic trait from ordinal one without Self type?", "body": "<p>The signature of the function that you want is </p>\n\n<pre><code>fn convert&lt;T&gt;(x: &amp;Box&lt;Foo&gt;) -&gt; &amp;TypedFoo&lt;T&gt;\n</code></pre>\n\n<p>To type check this signature compiler must know that the type inside <code>Box</code> implements <code>TypedFoo&lt;T&gt;</code> for some <code>T</code>. But conversion into trait-object erases information about the real type. Which means that it is impossible to statically type check signature of this function.</p>\n\n<p>So we need to do it dynamically and if we want to use types a current crate doesn't know about, we'll need to resort to unsafe.</p>\n\n<p>One option is to limit a set of types, which can be used in <code>TypedFoo</code>, and provide conversion functions in the <code>Foo</code> trait. This allows to avoid unsafe.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0bf1e74da83f346cc3f0bfeb8cee3f93&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>Second option is to add to <code>trait Foo</code> a function, which returns a slice of pairs <code>(TypeId, *const ())</code>. The pointer is a type erased pointer to function, which does actual conversion. Conversion function searches required type identifier and executes corresponding function.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=026e7b71fc0e2f16bcde393052895a69&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>For the sake of demonstration I used <code>Vec</code> instead of slice in <code>conversion_registrar</code>. But it shouldn't be too hard to change return type to <code>&amp;'static [(TypeId, *const ())]</code>, using lazy_static crate.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 483, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1496860871, "creation_date": 1496664592, "last_edit_date": 1496672939, "question_id": 44368642, "link": "https://stackoverflow.com/questions/44368642/get-generic-trait-from-ordinal-one-without-self-type", "title": "Get generic trait from ordinal one without Self type?", "body": "<p>I have two traits, one ordinal (<code>Foo</code>), another generic (<code>TypedFoo&lt;T&gt;</code>). I have several structures, each of them have both traits implemented.</p>\n\n<p>Is it possible to convert from <code>Foo</code> to <code>TypedFoo&lt;T&gt;</code>, without converting to an intermediate structure?</p>\n\n<pre><code>trait Foo {\n    fn f(&amp;mut self);\n}\n\ntrait TypedFoo&lt;T&gt; {\n    fn get(&amp;self) -&gt; T;\n}\n\n#[derive(Clone)]\nstruct Data(i32);\n\nimpl Foo for Data {\n    fn f(&amp;mut self) {\n        self.0 += 1;\n    }\n}\n\nimpl TypedFoo&lt;Data&gt; for Data {\n    fn get(&amp;self) -&gt; Data {\n        self.clone()\n    }\n}\n\n//struct Data2(f64);\n//impl Foo for Data2...\n//impl TypedFoo&lt;Data2&gt; for Data2..\n\nfn main() {\n    let v: Vec&lt;Box&lt;Foo&gt;&gt; = vec![Box::new(Data(1))];    \n} \n</code></pre>\n\n<p>I can change <code>Foo</code> to this:</p>\n\n<pre><code>trait Foo {\n    fn f(&amp;mut self);\n    fn get_self(&amp;self) -&gt; &amp;Any;\n}\n</code></pre>\n\n<p>Then get <code>v[0].get_self()</code> <code>downcast_ref</code> to <code>Data</code>, and then <code>Data</code> to <code>&amp;TypedFoo&lt;Data&gt;</code>.</p>\n\n<p>But is it possible to get <code>&amp;TypedFoo&lt;Data&gt;</code> from <code>&amp;Foo</code> without knowing \"data type\", some analog of <code>Any</code> but for a trait.</p>\n\n<p>I imagine syntax like this:</p>\n\n<pre><code>let foo: &amp;Foo = ...;\nif let Some(typed_foo) = foo.cast::&lt;Data&gt;() {\n\n} \n</code></pre>\n\n<p>My question is different from <a href=\"https://stackoverflow.com/questions/34419561/can-i-cast-between-two-traits\">Can I cast between two traits?</a>\n because I have one generic and one ordinal trait. If I had two ordinal traits then the solution would be as simple as:</p>\n\n<pre><code>trait Foo {\n    fn f(&amp;mut self);\n    fn as_typed_foo(&amp;self) -&gt; &amp;TypedFoo;\n}\n</code></pre>\n\n<p>Since <code>TypedFoo</code> is generic, none of the answers in that question help me. One possible solution could be:</p>\n\n<pre><code>trait Foo {\n    fn f(&amp;mut self);\n    fn cast(&amp;mut self, type_id: ::std::any::TypeId) -&gt; Option&lt;*mut ::std::os::raw::c_void&gt;;\n}\n</code></pre>\n\n<p>I am not sure how safe it is to cast <code>*mut TypedFoo&lt;T&gt;</code> -> <code>*mut ::std::os::raw::c_void</code> and then back to <code>*mut TypedFoo&lt;T&gt;</code>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 321, "user_id": 7562670, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lyaYy.jpg?s=128&g=1", "display_name": "Seiichi Uchida", "link": "https://stackoverflow.com/users/7562670/seiichi-uchida"}, "is_accepted": true, "score": 4, "last_activity_date": 1496928316, "last_edit_date": 1496928316, "creation_date": 1496653558, "answer_id": 44365376, "question_id": 44364221, "link": "https://stackoverflow.com/questions/44364221/how-can-rustfmt-be-configured-to-not-emit-aligning-spaces-for-the-match-unsafe-b/44365376#44365376", "title": "How can rustfmt be configured to not emit aligning spaces for the match unsafe block pattern?", "body": "<p>This is a bug. I created a <a href=\"https://github.com/rust-lang-nursery/rustfmt/pull/1633\" rel=\"nofollow noreferrer\">PR</a> to fix this, so after it gets merged rustfmt will not emit spaces with your configuration.</p>\n"}], "owner": {"reputation": 103, "user_id": 8068176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d6264f5b21a54dcccc34c76406c3407?s=128&d=identicon&r=PG&f=1", "display_name": "Avi", "link": "https://stackoverflow.com/users/8068176/avi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 1, "accepted_answer_id": 44365376, "answer_count": 1, "score": 0, "last_activity_date": 1499348834, "creation_date": 1496649200, "last_edit_date": 1499348834, "question_id": 44364221, "link": "https://stackoverflow.com/questions/44364221/how-can-rustfmt-be-configured-to-not-emit-aligning-spaces-for-the-match-unsafe-b", "title": "How can rustfmt be configured to not emit aligning spaces for the match unsafe block pattern?", "body": "<p>My <code>rustfmt</code> config currently formats the following code to have aligning spaces as is shown bellow. I have replaced spaces with <code>.</code> and tabs with <code>---&gt;</code> in the following code.</p>\n\n<pre><code>fn main() {\n---&gt;match unsafe {\n---&gt;---&gt;......0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n---&gt;---&gt;.....} {\n---&gt;---&gt;0 =&gt; println!(\"0\"),\n---&gt;---&gt;_ =&gt; println!(\"not 0 or 1\"),\n---&gt;}\n}\n</code></pre>\n\n<p>My <code>rustfmt</code> config(<code>rustfmt.toml</code> file) that produced the above code example:</p>\n\n<pre><code>tab_spaces = 4\nhard_tabs = true\narray_layout = \"Block\"\nreorder_imports = true\nnewline_style = \"Unix\"\nspaces_within_angle_brackets = false\nspaces_within_parens = false\nspaces_within_square_brackets = false\nfn_args_layout = \"Block\"\nfn_call_style = \"Block\"\nfn_return_indent = \"WithArgs\"\nfn_brace_style = \"SameLineWhere\"\ngenerics_indent= \"Block\"\nitem_brace_style = \"PreferSameLine\"\ncontrol_style = \"Rfc\"\nmatch_style = \"Rfc\"\nunsafe_style = \"Rfc\"\nwhere_layout = \"Horizontal\"\nwhere_pred_indent = \"Block\"\nwhere_style = \"Rfc\"\n</code></pre>\n\n<p>How can <code>rustfmt</code> be configured to not emit the aligning spaces(marked by: <code>.</code>) for the prior code, so <code>rustfmt</code> only indents with tabs like the following code?</p>\n\n<pre><code>fn main() {\n---&gt;match unsafe {\n---&gt;---&gt;0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\n---&gt;---&gt;} {\n---&gt;---&gt;0 =&gt; println!(\"0\"),\n---&gt;---&gt;_ =&gt; println!(\"not 0 or 1\"),\n---&gt;}\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1496622309, "creation_date": 1496622309, "answer_id": 44360166, "question_id": 44360007, "link": "https://stackoverflow.com/questions/44360007/no-associated-item-named-wrap-under-create-rule-found-for-type-cgcontext-when-us/44360166#44360166", "title": "No associated item named wrap_under_create_rule found for type CGContext when using core-graphics", "body": "<p>Chances are good that you are dealing with two different versions of <code>TCFType</code>. Following your example, I saw the same error. I then ran <a href=\"https://crates.io/crates/cargo-tree\" rel=\"nofollow noreferrer\">cargo-tree</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo tree\ncg v0.1.0 (file:///private/tmp/cg)\n\u251c\u2500\u2500 core-foundation v0.4.0               &lt;---- here\n\u2502   \u251c\u2500\u2500 core-foundation-sys v0.4.0\n\u2502   \u2502   \u2514\u2500\u2500 libc v0.2.23\n\u2502   \u2514\u2500\u2500 libc v0.2.23 (*)\n\u251c\u2500\u2500 core-graphics v0.8.1\n\u2502   \u251c\u2500\u2500 bitflags v0.8.2\n\u2502   \u251c\u2500\u2500 core-foundation v0.3.0           &lt;---- here\n\u2502   \u2502   \u251c\u2500\u2500 core-foundation-sys v0.3.1\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 libc v0.2.23 (*)\n\u2502   \u2502   \u2514\u2500\u2500 libc v0.2.23 (*)\n\u2502   \u2514\u2500\u2500 libc v0.2.23 (*)\n\u2514\u2500\u2500 objc v0.2.2\n    \u2514\u2500\u2500 malloc_buf v0.0.6\n        \u2514\u2500\u2500 libc v0.2.23 (*)\n</code></pre>\n\n<p>From this, I can see that core-graphics is depending on core-foundation 0.3.0, but your crate depends on core-foundation 0.4.0.</p>\n\n<p>Types provided by two different versions of crates <strong>are not the same</strong>, and the compiler tells you so. It just doesn't tell you that the versions differ.</p>\n\n<p>To fix it, restrict your version of core-foundation to 0.3.0. Doing this caused this error to go away for me, but then there were some unrelated errors that were previously hidden.</p>\n"}], "owner": {"reputation": 375, "user_id": 3390450, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1da2539e8b87b2a24b231ee6177b02f7?s=128&d=identicon&r=PG&f=1", "display_name": "Znapi", "link": "https://stackoverflow.com/users/3390450/znapi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 44360166, "answer_count": 1, "score": 0, "last_activity_date": 1496622309, "creation_date": 1496620956, "last_edit_date": 1496621568, "question_id": 44360007, "link": "https://stackoverflow.com/questions/44360007/no-associated-item-named-wrap-under-create-rule-found-for-type-cgcontext-when-us", "title": "No associated item named wrap_under_create_rule found for type CGContext when using core-graphics", "body": "<p>I'm trying to use Quartz2D from Rust in a Mac app through the core-graphics crate, but I'm having trouble using core-graphics. I can obtain a <code>CGContextRef</code> to the current context with:</p>\n\n<pre><code>let cg_context_ref: CGContextRef = unsafe {\n    let ns_graphics_context: *mut Object = msg_send![Class::get(\"NSGraphicsContext\").unwrap(), currentContext];\n    msg_send![ns_graphics_context, CGContext]\n}\n</code></pre>\n\n<p>Then, I attempt to construct a <code>CGContext</code> from the <code>CGContextRef</code> using <a href=\"https://github.com/servo/core-graphics-rs/blob/master/src/context.rs#L76\" rel=\"nofollow noreferrer\"><code>wrap_under_create_rule</code></a>, which comes from <a href=\"https://github.com/servo/core-foundation-rs/blob/44e872a427120f2e35c4d6ca4e02ee33f0ca798a/core-foundation/src/base.rs#L52\" rel=\"nofollow noreferrer\"><code>pub trait TCFType</code> from core-foundation</a>:</p>\n\n<pre><code>let gc: CGContext = unsafe {\n    CGContext::wrap_under_create_rule(unsafe {\n        let ns_graphics_context: *mut Object = msg_send![Class::get(\"NSGraphicsContext\").unwrap(), currentContext];\n        msg_send![ns_graphics_context, CGContext]\n    })\n};\n</code></pre>\n\n<p>However, compiling gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no associated item named `wrap_under_create_rule` found for type `core_graphics::context::CGContext` in the current scope\n  --&gt; src/lib.rs:45:9\n   |\n45 |         CGContext::wrap_under_create_rule(unsafe {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\n   = help: candidate #1: `use core_foundation::base::TCFType;`\n</code></pre>\n\n<p>I already have <code>use core_foundation::base::TCFType;</code>, and in the same scope, though. It looks like this:</p>\n\n<pre><code>#[macro_use]\nextern crate objc;\nextern crate core_foundation;\nextern crate core_graphics;\n\nuse objc::runtime::{Object, Class};\nuse core_foundation::base::TCFType;\nuse core_graphics::context::CGContext;\n\nfn main() {\n    let gc: CGContext = unsafe {\n        CGContext::wrap_under_create_rule(unsafe {\n            let ns_graphics_context: *mut Object = msg_send![Class::get(\"NSGraphicsContext\").unwrap(), currentContext];\n            msg_send![ns_graphics_context, CGContext]\n        })\n    };\n}\n</code></pre>\n\n<p>I'm a bit of a Rust noob, so I got stuck here. Why won't this work, and how can I make it work? Modifying core-graphics is an option, since I'm going to have to do it later down the road anyways.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496587115, "post_id": 44354906, "comment_id": 75712393, "body": "<code>&quot;-C&quot;, &quot;link-arg=-Wl,--verbose&quot;</code> and <code>&quot;-Z&quot;, &quot;print-link-args&quot;</code> shows that <code>-Wl,--verbose</code> is being passed to my linker (<code>cc</code> on macOS 10.12). Unfortunately, my <code>ld</code> doesn&#39;t support that flag, but it is passed."}], "owner": {"reputation": 5007, "user_id": 23059, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/28d1534c68a23bb158022f3d5f0985ad?s=128&d=identicon&r=PG", "display_name": "Cameron Taggart", "link": "https://stackoverflow.com/users/23059/cameron-taggart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1016, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1496586827, "creation_date": 1496584866, "last_edit_date": 1496586827, "question_id": 44354906, "link": "https://stackoverflow.com/questions/44354906/how-to-you-get-verbose-output-from-ld-when-using-cargo", "title": "How to you get verbose output from ld when using Cargo?", "body": "<p>How do you get the ld linker to be verbose when you use Cargo? I've tried <a href=\"https://github.com/ctaggart/octh_examples/blob/e7848fa4a417ab5bfd8baae40c8f25f36d2e8c92/.cargo/config#L7-L24\" rel=\"nofollow noreferrer\">several things</a> in <code>.cargo/config</code>, but without luck. What would the right settings be? When using gcc directly, I can just do <code>-Wl,--verbose</code>.</p>\n\n<pre><code>[build]\nrustflags = [\n    \"-C\", \"prefer-dynamic\",\n    # \"-Z\", \"pre-link-arg=-pthread\",\n    \"-C\", \"link-arg=-pthread\",\n    \"-C\", \"link-arg=-fopenmp\",\n    # \"-C\", \"link-arg=-LC:/Octave/Octave-4.2.1/lib64/gcc/x86_64-w64-mingw32/4.9.4\",\n    # \"-C\", \"link-arg=--sysroot=C:/Octave/Octave-4.2.1\",\n    # \"-Z\", \"pre-link-args=-LC:/Octave/Octave-4.2.1/lib\",\n    # \"-Z\", \"pre-link-args=-LC:\\\\Octave\\\\Octave-4.2.1\\\\lib\",\n    # \"-C\", \"link-arg=--verbose\",\n    # \"-C\", \"link-arg=-v\",\n    # \"-C\", \"link-arg=-Wl,--verbose\",\n    # \"-Z\", \"print-link-args\",\n]\n\n[target.x86_64-pc-windows-gnu]\nlinker = \"C:/Octave/Octave-4.2.1/bin/gcc.exe\"\n# rustflags = [\n#     \"-C\", \"link-arg=-Wl,--verbose\",\n# ]\n\n# [term]\n# verbose = true\n</code></pre>\n\n<p>I'm <a href=\"https://github.com/ctaggart/octh/issues/18#issuecomment-306041225\" rel=\"nofollow noreferrer\">trying to build</a> a library for Octave with Rust.</p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 734, "user_id": 1624929, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1733d2b5fc3d0bb0ce5340004d2404c1?s=128&d=identicon&r=PG", "display_name": "meisterluk", "link": "https://stackoverflow.com/users/1624929/meisterluk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496585290, "post_id": 44354768, "comment_id": 75711805, "body": "Thank you @Shepmaster, this is a duplicate. Sorry for improper search for duplicates. It seems that iterating over a larger type and casting is the idiomatic way to go. <a href=\"https://stackoverflow.com/a/40421720/1624929\">stackoverflow.com/a/40421720/1624929</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1496585961, "post_id": 44354768, "comment_id": 75712003, "body": "No worries. Inclusive ranges are <a href=\"https://github.com/rust-lang/rust/issues/28237\" rel=\"nofollow noreferrer\">getting closer and closer, though</a>!"}], "owner": {"reputation": 734, "user_id": 1624929, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1733d2b5fc3d0bb0ce5340004d2404c1?s=128&d=identicon&r=PG", "display_name": "meisterluk", "link": "https://stackoverflow.com/users/1624929/meisterluk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1496584931, "answer_count": 0, "score": 0, "last_activity_date": 1496585056, "creation_date": 1496584178, "last_edit_date": 1496585056, "question_id": 44354768, "link": "https://stackoverflow.com/questions/44354768/idiomatic-rust-way-to-overcome-overflow-in-upper-exclusive-range", "closed_reason": "Duplicate", "title": "Idiomatic Rust way to overcome overflow in upper-exclusive Range", "body": "<p>Consider this example:</p>\n\n<pre><code>fn main() {\n    let mut t: [u8; 256] = [0; 256];\n    for i in 0..256u8 {\n        t[i as usize] = i;\n    }\n    println!(\"{}\", t[0]);\n    println!(\"{}\", t[1]);\n    println!(\"{}\", t[128]);\n    println!(\"{}\", t[254]);\n    println!(\"{}\", t[255]);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=45ebc8a599aa5970c3a3e882da29aef4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\" title=\"code sample\">code sample on play.rust-lang.org</a>)</p>\n\n<p>I want to initialize my array containing 256 values of unsigned integer of 8 bits. The initial value is defined by 0 for the first item and incremented for every successive element.</p>\n\n<p>This code does not work.</p>\n\n<p>The upper bound of the <a href=\"https://doc.rust-lang.org/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\" title=\"struct.Range\"><code>Range</code></a> is exclusive, so the for loop's first value is 0, the last value is 255. My array has a length of 256 with indices ranging from first index 0 to last index 255. Sounds fine, but the upper limit is defined as \"256u8\" (a <a href=\"https://doc.rust-lang.org/std/primitive.u8.html\" rel=\"nofollow noreferrer\" title=\"primitive u8 datatype\"><code>u8</code></a>), a value which is technically 0 (<code>256 % 256 == 0</code>). Therefore the compiler warns me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: literal out of range for u8\n --&gt; &lt;anon&gt;:3:17\n  |\n3 |     for i in 0..256u8 {\n  |                 ^^^^^\n  |\n  = note: #[warn(overflowing_literals)] on by default\n</code></pre>\n\n<p>What is the most <em>Rust-idiomatic</em> way to overcome this warning?</p>\n\n<p><strong>Disclaimer:</strong> This is not a problem. It is just a warning and can easily solved with casts or a single assignment after the loop. I am asking about an <em>idiom</em>.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1496575074, "creation_date": 1496575074, "answer_id": 44353478, "question_id": 44353117, "link": "https://stackoverflow.com/questions/44353117/the-trait-bound-str-frommytype-is-not-satisfied-even-though-i-implemented/44353478#44353478", "title": "The trait bound `&amp;str: From&lt;MyType&gt;` is not satisfied even though I implemented `From&lt;&amp;str&gt; for MyType`", "body": "<p>You've got it backwards.  <code>From&lt;&amp;str&gt; for RLE</code> cannot <em>possibly</em> be used to do an <code>RLE</code> \u2192 <code>&amp;str</code> conversion.  That's like using a recipie to bake a cake to deconstruct it back into its constituent ingredients.</p>\n\n<p><code>From&lt;&amp;str&gt; for RLE</code> implies the existence of <code>Into&lt;RLE&gt; for &amp;str</code>.  It means you can do <code>a_str.into()</code> rather than <code>RLE::from(a_str)</code>.  You can work this out by looking at <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"noreferrer\">the documentation for <code>Into</code></a>, which lists the following implementation:</p>\n\n<pre><code>impl&lt;T, U&gt; Into&lt;U&gt; for T where U: From&lt;T&gt;\n</code></pre>\n\n<p>If you substitute the types for your <code>From</code> implementation (with <code>U = RLE</code> and <code>T = &amp;str</code>), you get:</p>\n\n<pre><code>impl Into&lt;RLE&gt; for &amp;str where RLE: From&lt;&amp;str&gt;\n</code></pre>\n\n<p>What you're trying to do with <code>REL(s.to_string()).into()</code> would require <code>impl Into&lt;&amp;str&gt; for RLE</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1069, "user_id": 5923374, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd4f47d4ba513ba8ed316520a12f94a9?s=128&d=identicon&r=PG&f=1", "display_name": "Ford O.", "link": "https://stackoverflow.com/users/5923374/ford-o"}, "edited": false, "score": 0, "creation_date": 1496591097, "post_id": 44353515, "comment_id": 75713664, "body": "Eh, that sucks. I have thought that there might be some deriving magic (like Debug) that would implement the isomorphism automatically..."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 1069, "user_id": 5923374, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd4f47d4ba513ba8ed316520a12f94a9?s=128&d=identicon&r=PG&f=1", "display_name": "Ford O.", "link": "https://stackoverflow.com/users/5923374/ford-o"}, "edited": false, "score": 0, "creation_date": 1496648725, "post_id": 44353515, "comment_id": 75729508, "body": "derive(Debug) works on a relatively simple syntax tree of <i>fields</i>, it implements debug formatting <i>for simple types</i>, while the complex types have to implement it themselves. Deriving from the <i>code</i>, and that of a complex <i>library</i>, and <i>reversing its algorithm</i>... these are, like, <i>infinitely</i> more compex than what derive(Debug) does!"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 5, "last_activity_date": 1496575338, "creation_date": 1496575338, "answer_id": 44353515, "question_id": 44353117, "link": "https://stackoverflow.com/questions/44353117/the-trait-bound-str-frommytype-is-not-satisfied-even-though-i-implemented/44353515#44353515", "title": "The trait bound `&amp;str: From&lt;MyType&gt;` is not satisfied even though I implemented `From&lt;&amp;str&gt; for MyType`", "body": "<blockquote>\n  <p>The idea is I am going to implement only from and get into implementation for free...</p>\n</blockquote>\n\n<p>That works!</p>\n\n<p>You can use <code>From</code>, as in</p>\n\n<pre><code>pub fn decode(s: &amp;str) -&gt; String {\n    let RLE(string) = RLE::from(s);\n    string\n}\n</code></pre>\n\n<p>and you can use <code>Into</code>, as in</p>\n\n<pre><code>pub fn decode_using_into(s: &amp;str) -&gt; String {\n    let RLE(string) = s.into();\n    string\n}\n</code></pre>\n\n<blockquote>\n  <p>But I get following error</p>\n</blockquote>\n\n<p>Well, as DK. said, Rust won't implement one algorithm from another. You'll have to do it yourself.</p>\n"}], "owner": {"reputation": 1069, "user_id": 5923374, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bd4f47d4ba513ba8ed316520a12f94a9?s=128&d=identicon&r=PG&f=1", "display_name": "Ford O.", "link": "https://stackoverflow.com/users/5923374/ford-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 540, "favorite_count": 0, "accepted_answer_id": 44353478, "answer_count": 2, "score": 1, "last_activity_date": 1496586319, "creation_date": 1496572541, "last_edit_date": 1496586319, "question_id": 44353117, "link": "https://stackoverflow.com/questions/44353117/the-trait-bound-str-frommytype-is-not-satisfied-even-though-i-implemented", "title": "The trait bound `&amp;str: From&lt;MyType&gt;` is not satisfied even though I implemented `From&lt;&amp;str&gt; for MyType`", "body": "<p>I tried to implement run length encoding with the help of <code>From</code> and <code>Into</code>. The idea is I am going to implement only <code>from</code> and get <code>into</code> implementation for free.</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\n\nstruct RLE(pub String);\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for RLE {\n    fn from(s: &amp;str) -&gt; Self {\n        let reg = Regex::new(r\"(\\d*)([\\w\\s])\").unwrap();\n        let mut accum = String::new();\n        for c in reg.captures_iter(s) {\n            let n = c.get(1).unwrap().as_str().parse::&lt;usize&gt;().unwrap_or(1);\n            let c = c.get(2).unwrap().as_str();\n            accum.push_str(&amp;c.repeat(n));\n        }\n        RLE(accum)\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>decode(\"2ab3c\") => \"aabccc\"</p>\n</blockquote>\n\n<pre><code>pub fn decode(s: &amp;str) -&gt; String {\n    let RLE(string) = RLE::from(s);\n    string\n}\n</code></pre>\n\n<blockquote>\n  <p>encode(\"aabccc\") => \"2ab3c\"</p>\n</blockquote>\n\n<pre><code>pub fn encode(s: &amp;str) -&gt; String {\n    let string: &amp;'static str = RLE(s.to_string()).into();\n    string.to_string()\n}\n</code></pre>\n\n<p>But I get the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;str: std::convert::From&lt;RLE&gt;` is not satisfied\n  --&gt; src/main.rs:26:51\n   |\n26 |     let string: &amp;'static str = RLE(s.to_string()).into();\n   |                                                   ^^^^ the trait `std::convert::From&lt;RLE&gt;` is not implemented for `&amp;str`\n   |\n   = note: required because of the requirements on the impl of `std::convert::Into&lt;&amp;str&gt;` for `RLE`\n</code></pre>\n\n<p>What am I doing wrong? </p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": true, "score": 6, "last_activity_date": 1549891914, "last_edit_date": 1549891914, "creation_date": 1496572810, "answer_id": 44353151, "question_id": 44352289, "link": "https://stackoverflow.com/questions/44352289/unresolved-import-template-when-building-rocket-handlebars-example/44353151#44353151", "title": "Unresolved import Template when building Rocket handlebars example", "body": "<p>You are missing the <code>handlebars_templates</code> feature. You can <a href=\"https://github.com/SergioBenitez/Rocket/blob/3eeae77ed6a7be1c3304a41b7f59b38f6c33c2e6/examples/handlebars_templates/Cargo.toml#L16\" rel=\"nofollow noreferrer\">see this in the example's <code>Cargo.toml</code></a>:</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>[dependencies.rocket_contrib]\nversion = \"*\" # Not a good idea to use * as version\nfeatures = [\"handlebars_templates\"]\n</code></pre>\n"}], "owner": {"reputation": 585, "user_id": 3511704, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3a2961822e62824403c412e61cc8a4bc?s=128&d=identicon&r=PG&f=1", "display_name": "Kian", "link": "https://stackoverflow.com/users/3511704/kian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 873, "favorite_count": 0, "accepted_answer_id": 44353151, "answer_count": 1, "score": 4, "last_activity_date": 1549891914, "creation_date": 1496566085, "last_edit_date": 1506693807, "question_id": 44352289, "link": "https://stackoverflow.com/questions/44352289/unresolved-import-template-when-building-rocket-handlebars-example", "title": "Unresolved import Template when building Rocket handlebars example", "body": "<p>I am unable to get the Rocket <a href=\"https://github.com/SergioBenitez/Rocket/tree/master/examples/handlebars_templates\" rel=\"nofollow noreferrer\">handlebars example</a>\nto work. These are my Cargo.toml dependencies:</p>\n\n<pre><code>[dependencies]\nrocket = \"*\"\nrocket_codegen = \"*\"\nrocket_contrib = \"*\"\nserde = \"*\"\nserde_json = \"*\"\nserde_derive = \"*\"\n</code></pre>\n\n<p>The errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `rocket_contrib::Template`\n  --&gt; src\\main.rs:29:5\n   |\n29 | use rocket_contrib::Template;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^ no `Template` in the root\n\nerror[E0599]: no method named `attach` found for type `rocket::Rocket` in the current scope\n  --&gt; src\\main.rs:62:10\n   |\n62 |         .attach(Template::fairing())\n   |          ^^^^^^\n</code></pre>\n\n<p>The first error looks for <code>Template</code> and can't find it. In the <a href=\"https://github.com/SergioBenitez/Rocket/tree/master/contrib\" rel=\"nofollow noreferrer\">git repo</a> of the example, it doesn't exist. How is it possible that the example works? I am sure that the Rust code in my main.rs is ok, it's the same as in the example. I think it's only a dependency problem.</p>\n\n<p>I changed my Cargo.toml to:</p>\n\n<pre><code>[dependencies]\nrocket = \"*\"\nrocket_codegen = \"*\"\nserde = \"*\"\nserde_json = \"*\"\nserde_derive = \"*\"\n\n[dependencies.rocket_contrib]\nversion = \"*\"\nfeatures = [\"handlebars_templates\"]\n</code></pre>\n\n<p>Now I get these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `attach` found for type `rocket::Rocket` in the current scope\n  --&gt; src\\main.rs:62:10\n   |\n62 |         .attach(Template::fairing())\n   |          ^^^^^^\n\nerror[E0599]: no associated item named `fairing` found for type `rocket_contrib::Template` in the current scope\n  --&gt; src\\main.rs:62:17\n   |\n62 |         .attach(Template::fairing())\n   |                 ^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["arrays", "rust", "slice"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 6, "last_activity_date": 1496745037, "last_edit_date": 1496745037, "creation_date": 1496568017, "answer_id": 44352537, "question_id": 44351328, "link": "https://stackoverflow.com/questions/44351328/how-does-comparison-of-a-slice-with-an-array-work-in-rust/44352537#44352537", "title": "How does comparison of a slice with an array work in Rust?", "body": "<p>Right now, arrays in Rust are somewhat special because Rust lacks type-level integers. You can't write a function <code>fn f&lt;T, N&gt;(array: &amp;[T; N])</code>. Likewise, you can't implement a trait which is generic over <code>N</code>.</p>\n\n<p>The standard library provides some trait implementations for array lengths ranging from 0 to 32 to mitigate this issue, which is why <code>b == [1,1]</code> works. There's an implementation of the trait <code>PartialEq</code> for this case:</p>\n\n<pre><code>impl&lt;'a, 'b, A, B&gt; PartialEq&lt;[A; 2]&gt; for &amp;'b [B] \nwhere B: PartialEq&lt;A&gt;\n</code></pre>\n\n<p>However, the trait <code>PartialEq&lt;&amp;[A; 2]&gt;</code> is not implemented for <code>[B; 2]</code>. Thus you cannot compare <code>[1, 1]</code> and <code>&amp;[1, 1]</code>. <code>b == [1; 33]</code> will not work in your example too, as there's no implementations for arrays longer than 32 elements.</p>\n\n<p>But there's ongoing effort to bring type-level integers into Rust. <a href=\"https://github.com/rust-lang/rfcs/pull/2000\" rel=\"nofollow noreferrer\">RFC 2000</a> is the latest proposal.</p>\n\n<p>For the time being  you can rely on implicit conversion from reference to the array to reference to slice. Like this</p>\n\n<pre><code>fn f&lt;T&gt;(slice: &amp;[T]) {}\n\nf(&amp;[1, 2, 3, 4]);\n</code></pre>\n"}], "owner": {"reputation": 343, "user_id": 5737686, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh3.googleusercontent.com/-NxMDXN7k3Ks/AAAAAAAAAAI/AAAAAAAAAZA/GwCslJbriao/photo.jpg?sz=128", "display_name": "sa___", "link": "https://stackoverflow.com/users/5737686/sa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 965, "favorite_count": 0, "accepted_answer_id": 44352537, "answer_count": 1, "score": 2, "last_activity_date": 1496745037, "creation_date": 1496557478, "last_edit_date": 1496585416, "question_id": 44351328, "link": "https://stackoverflow.com/questions/44351328/how-does-comparison-of-a-slice-with-an-array-work-in-rust", "title": "How does comparison of a slice with an array work in Rust?", "body": "<p>Why would <code>[1,1] == &amp;[1,1]</code> not even compile (presumably because they're different types), yet the following snippet compiles and runs fine.</p>\n\n<pre><code>let a: [i32; 100] = [1; 100];\nlet b: &amp;[i32] = &amp;a[1..3];\nif b == [1, 1] { // comparison with &amp;[1, 1] works as well\n    println!(\"it works\"); // this does get printed\n}\n</code></pre>\n"}, {"tags": ["function", "compiler-errors", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1496537623, "creation_date": 1496537623, "answer_id": 44349842, "question_id": 44349422, "link": "https://stackoverflow.com/questions/44349422/missing-implementation-for-top-level-functions/44349842#44349842", "title": "Missing implementation for top level functions", "body": "<p>Every function in Rust has its own type.  As you can see, <code>foo</code> isn't a <code>fn()</code>, it's a <code>fn() {foo}</code>; sadly, this is not an actual type you can write in source, that's just a compiler message thing.  The distinction exists to make it easier for the compiler to let you pass around functions as values whilst still being able to inline the calls.</p>\n\n<p>The consequence is that named functions pointers cannot be turned into general function pointers without either a cast or a type hint.  For example, this works:</p>\n\n<pre><code>fn foo() {\n    println!(\"Hello, World!\")\n}\n\nfn bar(f: fn()) {\n    f()\n}\n\nfn main() {\n    bar(foo)\n}\n</code></pre>\n\n<p>However, I'm not aware of any way to leverage this to get the trait to work.</p>\n\n<p>The only way forward is to stop trying to implement the trait for <em>function pointers</em>, and instead implement it for everything callable:</p>\n\n<pre><code>trait FnTrait {\n    fn call(self);\n}\n\nimpl&lt;F&gt; FnTrait for F where F: FnOnce() {\n    fn call(self) {\n        self()\n    }\n}\n\nfn foo() {\n    println!(\"Hello, World!\")\n}\n\nfn main() {\n    foo.call();\n}\n</code></pre>\n\n<p>(Semi-relevant answer about <a href=\"https://stackoverflow.com/a/30232500/42353\">the difference between <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code></a>.)</p>\n\n<p>This will work for anything that's callable with that signature, including both functions and closures.  The downside is that you can only have <em>one</em> such implementation.  You can't implement this trait for any other signature.</p>\n\n<p>One generic implementation, or many specific implementations and lots of manual casting.  Pick your poison.</p>\n\n<hr>\n\n<p>As an aside: there's no such thing as a \"top level function\" in Rust, at least not as a thing distinct from other kinds of functions.  Functions are functions, no matter where they appear.  Instance functions <em>a.k.a.</em> methods are still regular functions, it's just that their first argument is called \"self\".</p>\n"}], "owner": {"reputation": 949, "user_id": 1219515, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/64ce0ac7d44d2076d23b21ac62214970?s=128&d=identicon&r=PG", "display_name": "Maciej Goszczycki", "link": "https://stackoverflow.com/users/1219515/maciej-goszczycki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 44349842, "answer_count": 1, "score": 0, "last_activity_date": 1496537808, "creation_date": 1496532386, "last_edit_date": 1496537808, "question_id": 44349422, "link": "https://stackoverflow.com/questions/44349422/missing-implementation-for-top-level-functions", "title": "Missing implementation for top level functions", "body": "<p>I am trying to make a trait usable on top-level functions in Rust.</p>\n\n<pre><code>trait FnTrait {\n    fn call(self);\n}\n\nimpl FnTrait for fn() {\n    fn call(self) {\n        self()\n    }\n}\n\nfn foo() {\n    println!(\"Hello, World!\")\n}\n\nfn main() {\n    FnTrait::call(foo)\n}\n</code></pre>\n\n<p>However the code below fails to compile with (<a href=\"https://play.rust-lang.org/?gist=3f38cf69fccac31c6030734dff9d51e1&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground Link</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `fn() {foo}: FnTrait` is not satisfied\n  --&gt; &lt;anon&gt;:16:5\n   |\n16 |     FnTrait::call(foo)\n   |     ^^^^^^^^^^^^^ the trait `FnTrait` is not implemented for `fn() {foo}`\n   |\n   = help: the following implementations were found:\n             &lt;fn() as FnTrait&gt;\n   = note: required by `FnTrait::call`\n</code></pre>\n\n<p>I found I can trick it into compiling by casting <code>foo</code> like so</p>\n\n<pre><code>FnTrait::call(foo as fn())\n</code></pre>\n\n<p>But it is annoying and some of the functions in my program are more complicated than <code>foo</code>. Any way to avoid the cast? Is my trait wrong somehow?</p>\n"}, {"tags": ["rust", "incremental-build", "incremental-compiler", "incremental-linking"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1496535746, "creation_date": 1496535746, "answer_id": 44349724, "question_id": 44348978, "link": "https://stackoverflow.com/questions/44348978/what-does-rusts-lack-of-incremental-compilation-mean-exactly/44349724#44349724", "title": "What does Rust&#39;s lack of incremental compilation mean, exactly?", "body": "<p>In C and C++, a compilation unit is usually a source file and all the header files it transitively includes. An application or library is usually comprised of multiple compilation units that are linked together. An application or library can additionally be linked with other libraries. This means that changing a source file requires recompiling that source file only and then relinking, changing an external library only requires relinking, but changing a header file (whether it's part of the project or external; the compiler can't tell the difference) requires recompiling all source files that use it and then relinking.</p>\n\n<p>In Rust, the crate is the compilation unit. (A crate can be an application or a library.) <strong>Rust doesn't use header files</strong>; instead, the equivalent information is stored as <strong>metadata in the compiled crates</strong> (which is faster to parse, and has the same effect as precompiled headers in C/C++). A crate can additionally be linked with other crates. This means that changing any of the source files for a crate requires recompiling the whole crate, and changing a crate requires recompiling all crates that depend on it (currently, this means recompiling from source, even if the API happens to not have changed).</p>\n\n<p>To answer your questions, no, Rust doesn't recompile all dependencies every time you recompile your project; quite the opposite in fact.</p>\n\n<p>Incremental compilation in Rust is about reusing the work done in previous compilations of a crate to speed up compilation times. For example, if you change a module and it doesn't affect the other modules, the compiler would be able to reuse the data that was generated when the other modules were compiled last time. The lack of incremental compilation is usually only a problem with large or complex crates (e.g. those who make heavy use of macros).</p>\n"}], "owner": {"reputation": 9601, "user_id": 1937197, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/cg7w6.jpg?s=128&g=1", "display_name": "bobcat", "link": "https://stackoverflow.com/users/1937197/bobcat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 874, "favorite_count": 0, "accepted_answer_id": 44349724, "answer_count": 1, "score": 4, "last_activity_date": 1611706858, "creation_date": 1496527790, "last_edit_date": 1611706858, "question_id": 44348978, "link": "https://stackoverflow.com/questions/44348978/what-does-rusts-lack-of-incremental-compilation-mean-exactly", "title": "What does Rust&#39;s lack of incremental compilation mean, exactly?", "body": "<blockquote>\n<p>This question was asked before Rust officially supported incremental compilation. <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1240-2018-02-15\" rel=\"nofollow noreferrer\">Rust 1.24.0</a> and later enable incremental compilation by default for development (debug) builds.</p>\n</blockquote>\n<p>I'm an outsider trying to see if Rust is appropriate for my projects.</p>\n<p>I've read that Rust lacks incremental compilation (beta features notwithstanding).</p>\n<ol>\n<li><p>Is this similar to having everything be implemented in the headers in C++ (like in much of <a href=\"https://en.wikipedia.org/wiki/Boost_(C%2B%2B_libraries)\" rel=\"nofollow noreferrer\">Boost</a>)?</p>\n</li>\n<li><p>If the above is correct, does this limit Rust to rather small projects with small dependencies? (If, say, <a href=\"https://en.wikipedia.org/wiki/Qt_(software)\" rel=\"nofollow noreferrer\">Qt</a> or <a href=\"https://en.wikipedia.org/wiki/KDE\" rel=\"nofollow noreferrer\">KDE</a> were header-only libraries, then programs using them would be extremely painful to develop, since you'd effectively recompile Qt/KDE every time you want to compile your own code.)</p>\n</li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1496515787, "post_id": 44346779, "comment_id": 75697496, "body": "This is similar to <a href=\"https://stackoverflow.com/questions/39397157/overflow-evaluating-the-requirement-but-that-kind-of-recursion-should-not-happ\" title=\"overflow evaluating the requirement but that kind of recursion should not happ\">stackoverflow.com/questions/39397157/&hellip;</a>."}], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 328, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1496537868, "creation_date": 1496511126, "last_edit_date": 1496537868, "question_id": 44346779, "link": "https://stackoverflow.com/questions/44346779/infinite-recursion-compilation-error-on-a-type-that-is-not-recursive", "title": "Infinite recursion compilation error on a type that is not recursive", "body": "<p>I have a generic trait <code>Trait&lt;E: Float&gt;</code>, a generic struct <code>Struct&lt;E: Float&gt;</code> for that trait, an implementation of <code>Mul</code> for the struct, and a generic function that takes a <code>Trait</code> with <code>Mul</code>.</p>\n\n<pre><code>extern crate num;\n\nuse std::ops::Mul;\nuse num::traits::Float;\n\ntrait Trait&lt;E: Float&gt; {}\n\nstruct Struct&lt;E: Float&gt; (E);\n\nimpl&lt;E: Float&gt; Trait&lt;E&gt; for Struct&lt;E&gt; {}\n\nimpl&lt;'a, 'b, E: Float&gt; Mul&lt;&amp;'b Struct&lt;E&gt;&gt; for &amp;'a Struct&lt;E&gt;\n    where &amp;'a E: Mul&lt;&amp;'b E, Output=E&gt;\n{\n    type Output = Struct&lt;E&gt;;\n    fn mul(self, rhs: &amp;'b Struct&lt;E&gt;) -&gt; Self::Output { unimplemented!() }\n}\n\nfn multiply&lt;'a, E: Float, T: Trait&lt;E&gt;&gt;(x: &amp;'a T) -&gt; T\n    where &amp;'a T: Mul&lt;&amp;'a T, Output=T&gt;\n{\n    unimplemented!()\n}\n\nfn main() {\n    let matrix = multiply(&amp;Struct(1.0));\n}\n</code></pre>\n\n<p>There is nothing in here that appears to be recursive. However, the compiler errors by bottoming out the recursion:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `&lt;&amp;_ as std::ops::Mul&lt;&amp;_&gt;&gt;::Output`\n  --&gt; src\\main.rs:29:18\n   |\n29 |     let matrix = multiply(&amp;Struct(1.0));\n   |                  ^^^^^^^^\n   |\n   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n   = note: required because of the requirements on the impl of `std::ops::Mul&lt;&amp;Struct&lt;_&gt;&gt;` for `&amp;Struct&lt;_&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Mul&lt;&amp;Struct&lt;Struct&lt;_&gt;&gt;&gt;` for `&amp;Struct&lt;Struct&lt;_&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Mul&lt;&amp;Struct&lt;Struct&lt;Struct&lt;_&gt;&gt;&gt;&gt;` for `&amp;Struct&lt;Struct&lt;Struct&lt;_&gt;&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Mul&lt;&amp;Struct&lt;Struct&lt;Struct&lt;Struct&lt;_&gt;&gt;&gt;&gt;&gt;` for `&amp;Struct&lt;Struct&lt;Struct&lt;Struct&lt;_&gt;&gt;&gt;&gt;`\n...\n</code></pre>\n\n<p>Here are some odd facts I have found while debugging and trying to minimize this example:</p>\n\n<ul>\n<li>If I add <code>E: Zero</code> to the type constraints of <code>Mul</code>, the stack trace becomes non-deterministic. Sometimes, it will refer to traits that aren't even imported, like <code>Complex</code> or <code>Ratio</code> where <code>_</code> appears.</li>\n<li>It doesn't matter what the constraints are for the the generic parameter <code>E</code>. I can create a new trait instead of using <code>Float</code> and it does the same thing.</li>\n<li>This only happens if the <code>Mul</code> is defined for references, not owned values.</li>\n</ul>\n\n<p>What do I need to do to not lead the compiler down absurd types like <code>&amp;Struct&lt;Struct&lt;_&gt;&gt;</code>, etc.?</p>\n"}, {"tags": ["optimization", "rust", "infinite-loop"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496519822, "post_id": 44346542, "comment_id": 75698510, "body": "Relevant question: <a href=\"https://stackoverflow.com/q/28892351/1233251\">stackoverflow.com/q/28892351/1233251</a>"}, {"owner": {"reputation": 343, "user_id": 5737686, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh3.googleusercontent.com/-NxMDXN7k3Ks/AAAAAAAAAAI/AAAAAAAAAZA/GwCslJbriao/photo.jpg?sz=128", "display_name": "sa___", "link": "https://stackoverflow.com/users/5737686/sa"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496521583, "post_id": 44346542, "comment_id": 75698948, "body": "Thanks. But, i thought my statement: <code>the fact that it can reason about uninitialized values set within the loop body</code> already hinted that i was interested in knowing what other ways could <code>loop</code> offer more avenues for compiler optimizations."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496521763, "post_id": 44346542, "comment_id": 75698989, "body": "Sure, I wouldn&#39;t call it a duplicate. But it does contain important information, including external resources."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496534421, "post_id": 44346679, "comment_id": 75701620, "body": "Can you prove this in any way?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496558561, "post_id": 44346679, "comment_id": 75705049, "body": "@Shepmaster you could compare MIR or ASM output if proof is required"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1496585366, "post_id": 44346679, "comment_id": 75711837, "body": "@the8472 that only proves that the assembly (and presumably relevant optimizations) is the same <i>for a single case</i>, which is a pretty low bar. I could imagine wildly different code samples that compile to the same assembly even though the path to get to get there is completely different (thus having different available optimizations)."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1496595957, "post_id": 44346679, "comment_id": 75715305, "body": "The question&#39;s title is <code>What optimizations does the Rust compiler make with loop versus while true?</code>"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496597894, "post_id": 44346679, "comment_id": 75715899, "body": "@Shepmaster I would think that <code>while(true) {}</code> vs. <code>loop{}</code> are sufficiently trivial and the differences localized enough that wildly different adjacent code will not be able to confuse the optimizers. Also, MIR happens before optimization AIUI"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1496598632, "post_id": 44346679, "comment_id": 75716158, "body": "@the8472 I <b>think</b> so as well, but I cannot <i>prove</i> something by just thinking it to be true. Concretely, <a href=\"https://play.integer32.com/?gist=193b0502f8172cf2ad7378813924ed1a&amp;version=stable\" rel=\"nofollow noreferrer\">the result type of <code>loop</code> differs from that of <code>while true</code></a>. Are there optimizations that can be made based on that piece of information? I don&#39;t know. Additionally, having two pieces of code that do the same thing in different ways often <i>doesn&#39;t</i> optimize the same way. Autovectorization is a prime example of such cases."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1496601599, "post_id": 44346679, "comment_id": 75717134, "body": "@the8472 <i>MIR happens before optimization</i> I&#39;m not completely sure the connection of that and this issue, but <a href=\"https://github.com/rust-lang/rust/blob/341f4534488a3f56b8b9e188c1f4f52ed7707389/src/librustc_driver/driver.rs#L916-L943\" rel=\"nofollow noreferrer\">there are passes in the compiler that seem to indicate that there are optimization passes <b>on</b> MIR</a>. Anecdotally, I&#39;ve also heard of people wanting to perform optimization at that level."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1496585177, "last_edit_date": 1496585177, "creation_date": 1496510535, "answer_id": 44346679, "question_id": 44346542, "link": "https://stackoverflow.com/questions/44346542/what-optimizations-does-the-rust-compiler-make-with-loop-versus-while-true/44346679#44346679", "title": "What optimizations does the Rust compiler make with `loop` versus `while true`?", "body": "<p>Other than you state your intention, there is no difference. All loops are the same once normalization has happened in the compiler.</p>\n\n<p>See an <a href=\"https://play.rust-lang.org/?code=%0Afn%20main()%20%7B%0A%20%20%20%20let%20mut%20x%20%3D%201000%3B%0A%20%20%20%20loop%20%7B%0A%20%20%20%20%20%20%20%20x%20-%3D%201%3B%0A%20%20%20%20%20%20%20%20if%20x%20%3D%3D%200%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20panic!(%22We%20ran%20out%20of%20money!%22)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!(%22We%20still%20have%20money%20left%22)%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">example of a <code>loop</code> in the Rust playground</a> and <a href=\"https://play.rust-lang.org/?code=%0Afn%20main()%20%7B%0A%20%20%20%20let%20mut%20x%20%3D%201000%3B%0A%20%20%20%20while%20true%20%7B%0A%20%20%20%20%20%20%20%20x%20-%3D%201%3B%0A%20%20%20%20%20%20%20%20if%20x%20%3D%3D%200%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20panic!(%22We%20ran%20out%20of%20money!%22)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20println!(%22We%20still%20have%20money%20left%22)%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">the same example with a <code>while true</code></a>. The assembly generated is exactly the same. The compiler gives a warning for the <code>while true</code>-example to use <code>loop</code> instead.</p>\n"}], "owner": {"reputation": 343, "user_id": 5737686, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh3.googleusercontent.com/-NxMDXN7k3Ks/AAAAAAAAAAI/AAAAAAAAAZA/GwCslJbriao/photo.jpg?sz=128", "display_name": "sa___", "link": "https://stackoverflow.com/users/5737686/sa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 44346679, "answer_count": 1, "score": 3, "last_activity_date": 1496585177, "creation_date": 1496509694, "last_edit_date": 1496534453, "question_id": 44346542, "link": "https://stackoverflow.com/questions/44346542/what-optimizations-does-the-rust-compiler-make-with-loop-versus-while-true", "title": "What optimizations does the Rust compiler make with `loop` versus `while true`?", "body": "<p>Aside from the fact that it can reason about uninitialized values set within the <code>loop</code> body, are there any other compelling reasons for <code>loop</code> to exist ?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1496540526, "post_id": 44347301, "comment_id": 75702436, "body": "and witthout the crate?"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "reply_to_user": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "edited": false, "score": 0, "creation_date": 1496572924, "post_id": 44347301, "comment_id": 75708307, "body": "without the crate u either need some bit level logic or unsafe memory operations such as transmute or copying. (depending on endianness)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496604228, "post_id": 44347301, "comment_id": 75717873, "body": "The <a href=\"https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#longValue()\" rel=\"nofollow noreferrer\">Javadoc for <code>longValue</code></a> indicates that the lower bits of the <i>arbitrary-precision number</i> are used. I believe that <code>read_i64</code> will panic if there are more than 8 bytes."}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1496662642, "post_id": 44347301, "comment_id": 75737078, "body": "afaik <code>read_foo</code> in the byteorder crate just reads as many values as it needs. so if there are more than 8 bytes it will just read 8 bytes and set the cursor to the new position."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496662739, "post_id": 44347301, "comment_id": 75737136, "body": "@Shepmaster &quot;I believe that <code>read_i64</code> will panic if there are more than 8 bytes.&quot; Why do you think so? At this point the array is actually a byte stream, which implements <code>Read</code>. <code>read_i64</code> will read 8 bytes and turn them into an <code>i64</code>. This does assume that the big integer is LE-encoded, the question does not specify this anyway."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496664385, "post_id": 44347301, "comment_id": 75738012, "body": "@belst Yes, I was mixing up <code>ByteOrder::read_i64</code> (panics on too many) and <code>ReadBytesExt::read_i64</code> (reads enough). However, my point about the arbitrary precision number still stands. If the input bytes were <code>[0,0,0,0,0,0,0,0,1]</code> (8x <code>0</code>, 1x <code>1</code>) then the result should not be 0 (I&#39;m not thinking through the big/little endian details, but I hope my example is clear)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496664398, "post_id": 44347301, "comment_id": 75738021, "body": "@E_net4 please see my clarification above."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496666573, "post_id": 44347301, "comment_id": 75739361, "body": "@Shepmaster &quot;If the input bytes were [...] (8x 0, 1x 1) then the result should not be 0&quot; Why not? That&#39;s exactly what <code>BigInteger#longValue()</code> would do. Yes, sudden magnitude changes can happen, including sign flips, but that&#39;s just how the method works. My main concern here still is the lack of detail in the question, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496667926, "post_id": 44347301, "comment_id": 75740213, "body": "@belst This <a href=\"https://gist.github.com/shepmaster/2fd5ae0bd64f7ce556ebc977ed1d6f37\" rel=\"nofollow noreferrer\">example Java code</a> prints out 1. The code presented will always print <code>1</code>. I&#39;m told that Java is always Big Endian, so using <code>NativeEndian</code> doesn&#39;t seem right; plus the non-use of all the bytes."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1496695993, "post_id": 44347301, "comment_id": 75755967, "body": "@Shepmaster &quot;Java is always big endian&quot; might be a bit of an overstatement, but the <code>BigInteger</code> constructor definitely <a href=\"https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#BigInteger(byte%5B%5D)\" rel=\"nofollow noreferrer\">interprets the given array as big-endian</a>. So the answer is technically wrong, although it is far from clear whether the OP wanted an <i>exact</i> equivalent of the Java snippet, or something that produces the same result in some reasonable subset of cases."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1496696072, "post_id": 44347301, "comment_id": 75756006, "body": "@user4815162342 that&#39;s why I qualified it with &quot;I&#39;m told that&quot; \u2014 I didn&#39;t do any verification of the truth of the statement myself ^_^."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1496696647, "post_id": 44347301, "comment_id": 75756234, "body": "@Shepmaster Interestingly, the <code>num_bigint</code> crate doesn&#39;t appear to offer a <code>BigInt</code> constructor equivalent to Java&#39;s <code>BigInteger(byte[])</code>, which interprets the provided byte array as a two&#39;s-complement binary representation of the number. With <code>num_bigint::BigInt</code>, <code>from_bytes_be</code> and <code>from_bytes_le</code> convert from a sign+magnitude representation."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1497634050, "post_id": 44347301, "comment_id": 76177602, "body": "@user4815162342 I made a pull request to address that issue. <a href=\"https://github.com/rust-num/num/pull/304\" rel=\"nofollow noreferrer\">github.com/rust-num/num/pull/304</a>"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1497634649, "post_id": 44347301, "comment_id": 76177931, "body": "@E_net4 Nice! I have to wonder, though, if there is an actual use case for such conversion, besides &quot;java BigInt implements them&quot;? The OP immediately discards anything other than the lowest four bytes by converting the number to <code>long</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1497635112, "post_id": 44347301, "comment_id": 76178166, "body": "@user4815162342 Admittedly, <code>bigint</code> is not very useful in this context. Still, it doesn&#39;t sound too farfetched to prefer having a single array in two&#39;s complement instead of an array and a sign value when saving the number. I&#39;ll leave the judgement of value to the owners of <code>num</code>. :)"}], "tags": [], "owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "is_accepted": false, "score": 0, "last_activity_date": 1496515144, "last_edit_date": 1496515144, "creation_date": 1496514798, "answer_id": 44347301, "question_id": 44345786, "link": "https://stackoverflow.com/questions/44345786/what-is-the-equivalent-of-javas-biginteger-longvalue-in-rust/44347301#44347301", "title": "What is the equivalent of Java&#39;s BigInteger(..).longValue() in Rust?", "body": "<p>There is a crate for exactly that purpose (reading integers from byte slices): <a href=\"https://crates.io/crates/byteorder\" rel=\"nofollow noreferrer\">byteorder</a></p>\n\n<p>Example usage:</p>\n\n<pre><code>extern crate byteorder;\n\nuse std::io::Cursor;\nuse byteorder::{NativeEndian, ReadBytesExt};\n\nfn main() {\n    let mut array_of_bytes = Cursor::new(b\"\\xDE\\xAD\\xBE\\xEF\\xCA\\xFE\\xBA\\xBE\"); // input\n\n    println!(\"{}\", array_of_bytes.read_i64::&lt;NativeEndian&gt;().unwrap());\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=0916bdb4bb23d83d6d39d1ff2972fffc&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 164, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1496666761, "creation_date": 1496505062, "last_edit_date": 1496666761, "question_id": 44345786, "link": "https://stackoverflow.com/questions/44345786/what-is-the-equivalent-of-javas-biginteger-longvalue-in-rust", "title": "What is the equivalent of Java&#39;s BigInteger(..).longValue() in Rust?", "body": "<p>In Java I can do this:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>new BigInteger(arrayOfBytes).longValue()\n</code></pre>\n\n<p>How can I do that same thing in Rust? That is, given an array of bytes, how can I convert it into what's in Java <code>longValue</code>?</p>\n"}, {"tags": ["rust", "benchmarking"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496499280, "post_id": 44344832, "comment_id": 75692522, "body": "This is a repost of another question that was here earlier but seems to have been deleted. I still want to know the answer though!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496501070, "post_id": 44344832, "comment_id": 75693019, "body": "@ljedrz the time taken inside the <code>iter</code> block is what is used for benchmarking. If I add the setup to that block, the time to perform the setup will be counted as part of the benchmark; I&#39;d no longer be timing just the relevant function (<code>clear</code>) but also unrelated code."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1496521288, "post_id": 44344832, "comment_id": 75698866, "body": "There appears to be a <a href=\"https://manishearth.github.io/rust-internals-docs/src/test/lib.rs.html#1588\" rel=\"nofollow noreferrer\"><code>bench::run_once</code></a> method which would allow to run a single iteration of the benchmark. I&#39;m not sure how to get a statistically representative sample with this however..."}, {"owner": {"reputation": 197, "user_id": 6573388, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-L0xo75Zs0t0/AAAAAAAAAAI/AAAAAAAAAPg/kY31JcfEbg8/photo.jpg?sz=128", "display_name": "Tom&#225;\u0161 Kr&#225;l", "link": "https://stackoverflow.com/users/6573388/tom%c3%a1%c5%a1-kr%c3%a1l"}, "edited": false, "score": 0, "creation_date": 1523213379, "post_id": 44344832, "comment_id": 86456124, "body": "Is there any better way than bench::run_once ?"}], "answers": [{"tags": [], "owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "is_accepted": false, "score": 0, "last_activity_date": 1523932044, "creation_date": 1523932044, "answer_id": 49868935, "question_id": 44344832, "link": "https://stackoverflow.com/questions/44344832/how-can-i-benchmark-code-that-mutates-the-setup-data/49868935#49868935", "title": "How can I benchmark code that mutates the setup data?", "body": "<p>Check out <a href=\"https://crates.io/crates/pew\" rel=\"nofollow noreferrer\">pew</a>, a recently published crate for benchmarking rust code. It allows you to do one time set up that is cloned into every benchmark, or manually run set up by pausing/resuming the benchmark.</p>\n\n<p>This library is in very early phases, but it might be what you're looking for. Contributions are always welcome.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 257, "favorite_count": 1, "answer_count": 1, "score": 6, "last_activity_date": 1523932044, "creation_date": 1496499238, "question_id": 44344832, "link": "https://stackoverflow.com/questions/44344832/how-can-i-benchmark-code-that-mutates-the-setup-data", "title": "How can I benchmark code that mutates the setup data?", "body": "<p>The current implementation of the built-in benchmarking tool appears to run  the code inside the <code>iter</code> call multiple times for each time the setup code outside the <code>iter</code> is run. When the code being benchmarked modifies the setup data, subsequent iterations of the benchmarked code are no longer benchmarking the same thing.</p>\n\n<p>As a concrete example, I am benchmarking how fast it takes to remove values from a <code>Vec</code>:</p>\n\n<pre><code>#![feature(test)]\n\nextern crate test;\n\nuse test::Bencher;\n\n#[bench]\nfn clearing_a_vector(b: &amp;mut Bencher) {\n    let mut things = vec![1];\n    b.iter(|| {\n        assert!(!things.is_empty());\n        things.clear();\n    });\n}\n</code></pre>\n\n<p>This will fail:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test clearing_a_vector ... thread 'main' panicked at 'assertion failed: !things.is_empty()', src/lib.rs:11\n</code></pre>\n\n<p>Performing a similar benchmark of <code>push</code>ing an element onto the vector shows that the <code>iter</code> closure was executed nearly 980 million times (depending on how fast the closure is). The results could be <em>very</em> misleading if there's a single run that does what I expect and millions more that don't.</p>\n\n<p>Tests were run with Rust nightly 1.19.0 (f89d8d184 2017-05-30)</p>\n"}, {"tags": ["reference", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 3, "creation_date": 1527076284, "post_id": 44344518, "comment_id": 87988040, "body": "Ok is there a good reason for this rule? In other words, what would we lose if the compiler automatically added +?Sized on all bounds used only in references?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1496500220, "last_edit_date": 1496500220, "creation_date": 1496496872, "answer_id": 44344518, "question_id": 44343818, "link": "https://stackoverflow.com/questions/44343818/why-does-a-reference-to-a-trait-in-a-generic-function-have-to-implement-sized/44344518#44344518", "title": "Why does a reference to a trait in a generic function have to implement `Sized`?", "body": "<p>By default, <strong>all</strong> generic types on functions implicitly have the <code>Sized</code> bound, regardless of how they are used. You need to explicitly opt-out of that requirement using <code>?Sized</code>:</p>\n\n<pre><code>fn take_trait_ref_generic&lt;T&gt;(generic_trait_ref: &amp;T)\nwhere \n    T: ?Sized + SomeTrait\n{}\n</code></pre>\n"}], "owner": {"reputation": 275, "user_id": 7762670, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/gRcks.png?s=128&g=1", "display_name": "Sogomn", "link": "https://stackoverflow.com/users/7762670/sogomn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 310, "favorite_count": 2, "accepted_answer_id": 44344518, "answer_count": 1, "score": 2, "last_activity_date": 1496500220, "creation_date": 1496492107, "last_edit_date": 1496496771, "question_id": 44343818, "link": "https://stackoverflow.com/questions/44343818/why-does-a-reference-to-a-trait-in-a-generic-function-have-to-implement-sized", "title": "Why does a reference to a trait in a generic function have to implement `Sized`?", "body": "<p>I have a function that returns a reference to a trait (<code>trait_ref()</code>) and another function that takes a reference to a generic trait implementation (<code>take_trait_ref_generic</code>).</p>\n\n<p>However, it's not possible to pass the reference I get from the first function to the second one. Rustc complains that \"the trait <code>std::marker::Sized</code> is not implemented for <code>SomeTrait</code>\".</p>\n\n<p>Even though that's true, why does it have to implement <code>Sized</code>? It's a reference anyway.</p>\n\n<pre><code>trait SomeTrait {}\n\nstruct TraitImpl;\n\nimpl SomeTrait for TraitImpl {}\n\nstruct Container {\n    trait_impl: TraitImpl,\n}\n\nimpl Container {\n    fn trait_ref(&amp;self) -&gt; &amp;SomeTrait {\n        &amp;self.trait_impl\n    }\n}\n\nfn take_trait_ref_generic&lt;T: SomeTrait&gt;(generic_trait_ref: &amp;T) {}\n\nfn main() {\n    let container = Container { trait_impl: TraitImpl };\n\n    /*Not possible*/\n    take_trait_ref_generic(container.trait_ref());\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "is_accepted": true, "score": 5, "last_activity_date": 1530205913, "last_edit_date": 1530205913, "creation_date": 1496487446, "answer_id": 44343167, "question_id": 44343166, "link": "https://stackoverflow.com/questions/44343166/how-do-i-write-the-lifetimes-for-references-in-a-type-constraint-when-one-of-the/44343167#44343167", "title": "How do I write the lifetimes for references in a type constraint when one of them is a local reference?", "body": "<p>You need higher-ranked trait bounds (HRTBs), which <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">are described in the advanced Rust book Rustonomicon</a> and well as <a href=\"https://stackoverflow.com/questions/35592750/how-does-for-syntax-differ-from-a-regular-lifetime-bound\">on Stack Overflow</a>. They allow a type constraint to say that trait must be implemented not just for references with a particular lifetime but for any lifetime. They use the <code>where for&lt;&gt;</code> syntax. Here is the function definition that says an implementation of <code>Mul</code> is needed for any two references to <code>T</code>:</p>\n\n<pre><code>fn semi_def&lt;'a, T: Matrix&gt;(x: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b, 'c&gt; &amp;'b T: Mul&lt;&amp;'c T, Output = T&gt;,\n{\n    &amp;(*x).clone().transpose() * x\n}\n</code></pre>\n\n<p>Because one of the references actually has the lifetime <code>'a</code>, not a local lifetime, this could be written with a slightly looser constraint:</p>\n\n<pre><code>fn semi_def&lt;'a, T: Matrix&gt;(x: &amp;'a T) -&gt; T\nwhere\n    for&lt;'b&gt; &amp;'b T: Mul&lt;&amp;'a T, Output = T&gt;,\n{\n    &amp;(*x).clone().transpose() * x\n}\n</code></pre>\n\n<p><sub>This Q&amp;A is based off <a href=\"https://users.rust-lang.org/t/lifetimes-for-type-constraint-where-one-reference-is-local/11087\" rel=\"nofollow noreferrer\">a question</a> I asked on the Rust users mailing, which I cleaned up and brought over here for future Rustaceans.</sub></p>\n"}], "owner": {"reputation": 5777, "user_id": 1485877, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tkdN8.jpg?s=128&g=1", "display_name": "drhagen", "link": "https://stackoverflow.com/users/1485877/drhagen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "accepted_answer_id": 44343167, "answer_count": 1, "score": 4, "last_activity_date": 1548880784, "creation_date": 1496487446, "last_edit_date": 1548880784, "question_id": 44343166, "link": "https://stackoverflow.com/questions/44343166/how-do-i-write-the-lifetimes-for-references-in-a-type-constraint-when-one-of-the", "title": "How do I write the lifetimes for references in a type constraint when one of them is a local reference?", "body": "<p>I have a trait <code>Matrix</code> and generic function <code>semi_def&lt;T: Matrix&gt;(x: &amp;T)</code> that I would like to operate on that trait. The function requires an operator trait, say <code>Mul</code>, be implemented on <code>T</code>. However, I can't seem to make the lifetimes happy if one of the references is to a local variable. How do I write the lifetimes for references in the type constraint when one of them is just a local temporary reference?</p>\n\n<pre><code>use std::ops::Mul;\n\ntrait Matrix: Clone {\n    fn transpose(self) -&gt; Self;\n}\n\n#[derive(Clone)]\nstruct DenseMatrix {\n    n_rows: usize,\n    n_columns: usize,\n    elements: Vec&lt;f64&gt;,\n}\n\nimpl Matrix for DenseMatrix {\n    fn transpose(self) -&gt; Self {\n        unimplemented!()\n    }\n}\n\nimpl&lt;'a, 'b&gt; Mul&lt;&amp;'b DenseMatrix&gt; for &amp;'a DenseMatrix {\n    type Output = DenseMatrix;\n    fn mul(self, _rhs: &amp;'b DenseMatrix) -&gt; Self::Output {\n        unimplemented!()\n    }\n}\n\nfn semi_def&lt;'a, T: Matrix&gt;(x: &amp;'a T) -&gt; T\nwhere\n    &amp;'a T: Mul&lt;&amp;'a T, Output = T&gt;,\n{\n    &amp;(*x).clone().transpose() * x\n}\n\nfn main() {}\n</code></pre>\n\n<p>which gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:31:6\n   |\n31 |     &amp;(*x).clone().transpose() * x\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n32 | }\n   | - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 27:1...\n  --&gt; src/main.rs:27:1\n   |\n27 | / fn semi_def&lt;'a, T: Matrix&gt;(x: &amp;'a T) -&gt; T\n28 | | where\n29 | |     &amp;'a T: Mul&lt;&amp;'a T, Output = T&gt;,\n30 | | {\n31 | |     &amp;(*x).clone().transpose() * x\n32 | | }\n   | |_^\n</code></pre>\n"}, {"tags": ["rust", "type-conversion", "traits"], "answers": [{"comments": [{"owner": {"reputation": 483, "user_id": 4280035, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e442215473aa322da127ee74c79c7477?s=128&d=identicon&r=PG&f=1", "display_name": "hellcatv", "link": "https://stackoverflow.com/users/4280035/hellcatv"}, "edited": false, "score": 0, "creation_date": 1496917106, "post_id": 44342393, "comment_id": 75863249, "body": "This looks like what I need! Thanks AsRef::&lt;[T]&gt;::as_ref"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1496481879, "creation_date": 1496481879, "answer_id": 44342393, "question_id": 44341916, "link": "https://stackoverflow.com/questions/44341916/how-to-idiomatically-require-a-trait-to-retrieve-a-slice/44342393#44342393", "title": "How to idiomatically require a trait to retrieve a slice", "body": "<p>The simplest way to answer this is to look at the documentation for existing types that more or less do what you want.  This sounds like something <code>Vec</code> would do, so why not look at the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">documentation for <code>Vec</code></a>?</p>\n\n<p>If you search through it looking for <code>-&gt; &amp;</code>, you'll find numerous methods that return borrowed slices:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_slice\" rel=\"nofollow noreferrer\"><code>Vec::as_slice</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html#tymethod.borrow\" rel=\"nofollow noreferrer\"><code>Borrow::borrow</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html#tymethod.index\" rel=\"nofollow noreferrer\"><code>Index::&lt;Range&lt;usize&gt;&gt;::index</code></a> (plus for <code>RangeTo&lt;usize&gt;</code>, <code>RangeFrom&lt;usize&gt;</code>, <code>RangeFull</code>, <code>RangeInclusive&lt;usize&gt;</code>, and <code>RangeToInclusive&lt;usize&gt;</code>)</li>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#tymethod.deref\" rel=\"nofollow noreferrer\"><code>Deref::deref</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html#tymethod.as_ref\" rel=\"nofollow noreferrer\"><code>AsRef::&lt;[T]&gt;::as_ref</code></a></li>\n</ul>\n\n<p>Which of these should you implement?  I don't know; which ones make sense?  Read the documentation on each method (and the associated trait) and see if what it describes is what you want to permit.  You say \"that can retrieve a slice\", but you don't really explain what that means.  A big part of traits is not just abstracting out common interfaces, but giving those interfaces meaning beyond what the code strictly allows.</p>\n\n<p>If the methods listed aren't right; if none of them <em>quite</em> convey the correct semantics, then make a new trait.  Don't feel compelled to implement a trait just because you technically <em>can</em>.</p>\n\n<p>As for <code>Into</code>, again, <em>read the documentation</em>:</p>\n\n<blockquote>\n  <p>A conversion that <strong>consumes <code>self</code></strong>, which may or may not be expensive.</p>\n</blockquote>\n\n<p>Emphasis mine.  Implementing <code>Into</code> in this context makes no sense: if you consume the value, you can't borrow from it.  Oh, also:</p>\n\n<blockquote>\n  <p>Library authors should not directly implement this trait, but should prefer implementing the <code>From</code> trait, which offers greater flexibility and provides an equivalent <code>Into</code> implementation for free, thanks to a blanket implementation in the standard library.</p>\n</blockquote>\n\n<p>So yeah, I wouldn't use <code>Into</code> for this.  Or <code>From</code>.</p>\n"}], "owner": {"reputation": 483, "user_id": 4280035, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e442215473aa322da127ee74c79c7477?s=128&d=identicon&r=PG&f=1", "display_name": "hellcatv", "link": "https://stackoverflow.com/users/4280035/hellcatv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 584, "favorite_count": 0, "accepted_answer_id": 44342393, "answer_count": 1, "score": 0, "last_activity_date": 1496496611, "creation_date": 1496477941, "last_edit_date": 1496496611, "question_id": 44341916, "link": "https://stackoverflow.com/questions/44341916/how-to-idiomatically-require-a-trait-to-retrieve-a-slice", "title": "How to idiomatically require a trait to retrieve a slice", "body": "<p>I'm working on <a href=\"https://github.com/dropbox/rust-alloc-no-stdlib/blob/master/src/allocated_memory/mod.rs\" rel=\"nofollow noreferrer\">a library that operates on <code>[T]</code> slices</a>. I would like the library user to specify a type that can retrieve a slice in a mutable or immutable way.</p>\n\n<p>My current lib defines 2 traits</p>\n\n<pre><code>pub trait SliceWrapper&lt;T&gt; {\n    fn slice(&amp;self) -&gt; &amp;[T];\n}\npub trait SliceWrapperMut&lt;T&gt; {\n    fn slice_mut (&amp;mut self) -&gt; &amp;mut [T];\n}\n</code></pre>\n\n<p>But the names <code>slice</code> and <code>slice_mut</code> seem arbitrary and not somewhere in the core Rust libs.</p>\n\n<p>Is there a trait I should be requiring instead, like <code>Into::&lt;&amp;mut [T]&gt;</code> ?</p>\n\n<p>I'm afraid that <code>Into</code> consumes the type rather than just referencing it, so I can't simply demand the caller type implements <code>core::convert::Into</code>, can I?</p>\n"}, {"tags": ["file", "io", "compiler-errors", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496496529, "post_id": 44340721, "comment_id": 75691800, "body": "In the future, I&#39;d encourage your to <i>search for your error message</i>. This <b>exact</b> issue was encountered and addressed by other people at least two years ago."}], "answers": [{"comments": [{"owner": {"reputation": 2103, "user_id": 1865694, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bP5UU.jpg?s=128&g=1", "display_name": "Alex Zywicki", "link": "https://stackoverflow.com/users/1865694/alex-zywicki"}, "reply_to_user": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 0, "creation_date": 1530683110, "post_id": 44340760, "comment_id": 89316091, "body": "You can replace the calls to \u201cexpect\u201d with a match expression or an \u201cif let Ok(varname)\u201d expression and manually handle the possible result variants. The code I have above is the quick and dirty way that punts all error handling my into a panic. It is not too hard to handle it manually though. You should be able to find an example of how to handle this Imari there here on stack overflow or in the rust \u201cbook\u201d."}, {"owner": {"reputation": 2103, "user_id": 1865694, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bP5UU.jpg?s=128&g=1", "display_name": "Alex Zywicki", "link": "https://stackoverflow.com/users/1865694/alex-zywicki"}, "reply_to_user": {"reputation": 1003, "user_id": 1103760, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OInfA.png?s=128&g=1", "display_name": "don bright", "link": "https://stackoverflow.com/users/1103760/don-bright"}, "edited": false, "score": 0, "creation_date": 1530683163, "post_id": 44340760, "comment_id": 89316118, "body": "Also consider looking at the question that your question was marked as a duplicate of."}], "tags": [], "owner": {"reputation": 2103, "user_id": 1865694, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bP5UU.jpg?s=128&g=1", "display_name": "Alex Zywicki", "link": "https://stackoverflow.com/users/1865694/alex-zywicki"}, "is_accepted": true, "score": 3, "last_activity_date": 1496468682, "creation_date": 1496468682, "answer_id": 44340760, "question_id": 44340721, "link": "https://stackoverflow.com/questions/44340721/rust-reading-a-file/44340760#44340760", "title": "Rust reading a file", "body": "<p>The issue is that <code>File::open()</code> returns a <code>std::result::Result&lt;std::fs::File, std::io::Error&gt;</code> which needs to be unwrapped in some way in order to access the file. The way I prefer to do this is to use <code>expect()</code> like this: </p>\n\n<pre><code>...\nfn main() {\n    ...\n    let mut file = File::open(&amp;path).expect(\"Error opening File\");\n    ...\n    file.read_to_string(&amp;mut contents).expect(\"Unable to read to string\");\n    ...\n}\n</code></pre>\n\n<p>This will either return the expected value or <code>panic</code> with the error message provided depending on if the operation was successful.</p>\n"}], "owner": {"reputation": 37, "user_id": 7021963, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/P6Wro.png?s=128&g=1", "display_name": "Vinayak G.", "link": "https://stackoverflow.com/users/7021963/vinayak-g"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1691, "favorite_count": 0, "closed_date": 1496496476, "accepted_answer_id": 44340760, "answer_count": 1, "score": 2, "last_activity_date": 1496497302, "creation_date": 1496468274, "last_edit_date": 1496497302, "question_id": 44340721, "link": "https://stackoverflow.com/questions/44340721/rust-reading-a-file", "closed_reason": "Duplicate", "title": "Rust reading a file", "body": "<p>I'm trying to read a file named <code>enable.txt</code> that's in the same dir as my <code>main.rs</code>, and my code looks like this:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\nuse std::error::Error;\nfn main() {\n    let path = Path::new(\"enable.txt\");\n    let display = path.display();\n    let mut file = File::open(&amp;path);\n    let mut contents = String::new();\n    file.read_to_string(&amp;mut contents);\n    println!(\"{}\", contents);\n}\n</code></pre>\n\n<p>When I compile it with either <code>cargo run</code> or <code>rustc src/main.rs</code>, I get this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `read_to_string` found for type `std::result::Result&lt;std::fs::File, std::io::Error&gt;` in the current scope\n  --&gt; src/main.rs:10:10\n   |\n10 |     file.read_to_string(&amp;mut contents);\n   |          ^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["hashmap", "rust", "benchmarking"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1496444031, "post_id": 44338311, "comment_id": 75680783, "body": "FWIW, I always return a value from the closure passed to <code>Bencher::iter</code>. I&#39;d try aggregating the values of <code>hash.get(&amp;k)</code> somehow (or even just a counter) and return that."}, {"owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1496444567, "post_id": 44338311, "comment_id": 75680887, "body": "That didn&#39;t work (see edit)"}], "answers": [{"comments": [{"owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 0, "creation_date": 1496545393, "post_id": 44342986, "comment_id": 75703082, "body": "I tried your suggestion of calling black_box on the result of hash.get and I still get 0ns as the running time. I also find it strange that the delete benchmark takes 1 ns because the delete should be modifying the hash table so it cannot be optimized out."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 2, "creation_date": 1496579926, "post_id": 44342986, "comment_id": 75710218, "body": "@user1413793: You are still using <code>keys.drain(..)</code>, and that&#39;s a trap. As mentioned in my answer, the closure you pass to <code>b.iter</code> is ran multiple times to get an accurate measurement. The problem is that <code>keys.drain(..)</code> will empty the vector of <code>keys</code> at the first iteration and all successive runs will be just a single branch &quot;empty =&gt; nothing to do&quot;, for which 1ns is a reasonable time."}, {"owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 0, "creation_date": 1496595365, "post_id": 44342986, "comment_id": 75715126, "body": "In that case, is it possible to set up a benchmark and only time one part of it and have the setup run on every iteration?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 0, "creation_date": 1496601779, "post_id": 44342986, "comment_id": 75717186, "body": "@user1413793: In this specific case, this is unnecessary (just iterate over <code>&amp;keys</code>), but... <a href=\"https://stackoverflow.com/questions/44344832/how-can-i-benchmark-code-that-mutates-the-setup-data\">everyone is actually wondering how to have one setup per iteration</a>, you&#39;re not alone."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 8, "last_activity_date": 1496497028, "last_edit_date": 1496497028, "creation_date": 1496486188, "answer_id": 44342986, "question_id": 44338311, "link": "https://stackoverflow.com/questions/44338311/rust-benchmark-optimized-out/44342986#44342986", "title": "Rust benchmark optimized out", "body": "<blockquote>\n  <p>How does a compiler optimizer work?</p>\n</blockquote>\n\n<p>An optimizer is nothing more than a pipeline of <a href=\"http://llvm.org/docs/Passes.html\" rel=\"noreferrer\">analyses and transformations</a>. Each individual analysis or transformation is relatively simple, and the optimal order to apply them is unknown and generally determined by heuristics.</p>\n\n<blockquote>\n  <p>How does this affect my benchmark?</p>\n</blockquote>\n\n<p>Benchmarks are complicated in that in general you wish to measure optimized code, but at the same time some analyses or transformations may remove the code you were interested in rendering the benchmark useless.</p>\n\n<p>It is therefore important to have a passing acquaintance with the analyses and transformation passes of the particular optimizer you are using so as to be able to understand:</p>\n\n<ul>\n<li>which ones are undesirable,</li>\n<li>how to foil them.</li>\n</ul>\n\n<p>As mentioned, most passes are relatively simple, and therefore foiling them is relatively simple as well. The difficulty lies in the fact that there is a hundred or more of them and you have to know which one is kicking in to be able to foil it.</p>\n\n<blockquote>\n  <p>What optimizations am I running afoul of?</p>\n</blockquote>\n\n<p>There are a few specific optimizations which very often play often with benchmarks:</p>\n\n<ul>\n<li><a href=\"http://llvm.org/docs/Passes.html#constprop-simple-constant-propagation\" rel=\"noreferrer\">Constant Propagation</a>: allows evaluating part of the code at compile-time,</li>\n<li><a href=\"http://llvm.org/docs/Passes.html#licm-loop-invariant-code-motion\" rel=\"noreferrer\">Loop Invariant Code Motion</a>: allows lifting the evaluation of some piece of code outside the loop,</li>\n<li><a href=\"http://llvm.org/docs/Passes.html#dce-dead-code-elimination\" rel=\"noreferrer\">Dead Code Elimination</a>: removes code that is not useful.</li>\n</ul>\n\n<blockquote>\n  <p>What? How dare the optimizer mangle my code so?</p>\n</blockquote>\n\n<p>The optimizer operates under the so-called <em>as-if</em> rule. This basic rule allows the optimizer to perform any transformation which does <em>not</em> change the output of the program. That is, it should not change the <em>observable behavior</em> of the program in general.</p>\n\n<p>On top of that, a few changes are generally explicitly allowed. The most obvious being that the run-time is expected to shrink, this in turn means that thread interleaving may differ, and some languages give even more wiggle room.</p>\n\n<blockquote>\n  <p>I used <code>black_box</code>!</p>\n</blockquote>\n\n<p>What is <code>black_box</code>? It's a function whose definition is specifically <em>opaque</em> to the optimizer. This has some implications on the optimizations the compiler is allowed to perform since it may have side-effects. This therefore mean:</p>\n\n<ul>\n<li>the transformed code must perform the very same number of calls to <code>black_box</code> than the original code,</li>\n<li>the transformed code must perform said calls in the same order with regard to the passed in arguments,</li>\n<li>no assumption can be made on the value returned by <code>black_box</code>.</li>\n</ul>\n\n<p>Thus, surgical use of <code>black_box</code> can foil certain optimizations. Blind use, however, may not foil the right ones.</p>\n\n<blockquote>\n  <p>What optimizations am I running afoul of?</p>\n</blockquote>\n\n<p>Let's start from the naive code:</p>\n\n<pre><code>#[bench]\nfn rust_get(b: &amp;mut Bencher) {\n    let (hash, mut keys): (HashMap&lt;String, usize&gt;, _) =\n        get_random_hash(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n\n    b.iter(|| {\n        for k in keys.drain(..) {\n            hash.get(&amp;k);\n        }\n    });\n}\n</code></pre>\n\n<p>The assumption is that the loop inside <code>b.iter()</code> will iterate over all keys and perform a <code>hash.get()</code> for each of them:</p>\n\n<ol>\n<li>The result of <code>hash.get()</code> is unused,</li>\n<li><code>hash.get()</code> is a <em>pure</em> function, meaning that is has no side-effect.</li>\n</ol>\n\n<p>Thus, this loop can be rewritten as:</p>\n\n<pre><code>b.iter(|| { for k in keys.drain(..) {} })\n</code></pre>\n\n<p>We are running afoul of <em>Dead Code Elimination</em> (or some variant): the code serves no purpose, thus it is eliminated.</p>\n\n<p>It may even be that the compiler is smart enough to realize that <code>for k in keys.drain(..) {}</code> can be optimized into <code>drop(keys)</code>.</p>\n\n<p>A surgical application of <code>black_box</code> can, however, foil DCE:</p>\n\n<pre><code>b.iter(|| {\n    for k in keys.drain(..) {\n        black_box(hash.get(&amp;k));\n    }\n});\n</code></pre>\n\n<p>As per the effects of <code>black_box</code> described above:</p>\n\n<ul>\n<li>the loop can no longer be optimized out, as it would change the number of calls to <code>black_box</code>,</li>\n<li>each call to <code>black_box</code> must be performed with the expected argument.</li>\n</ul>\n\n<p>There is still <em>one</em> possible hurdle: <em>Constant Propagation</em>. Specifically if the compiler realizes that all keys yield the same value, it could optimize out <code>hash.get(&amp;k)</code> and replace it by said value.</p>\n\n<p>This can be achieved by obfuscating the keys: <code>let mut keys = black_box(keys);</code>, as you did above, or the map. If you were to benchmark an empty map, the latter would be necessary, here they are equal.</p>\n\n<p>We thus get:</p>\n\n<pre><code>#[bench]\nfn rust_get(b: &amp;mut Bencher) {\n    let (hash, keys): (HashMap&lt;String, usize&gt;, _) =\n        get_random_hash(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n    let mut keys = test::black_box(keys);\n\n    b.iter(|| {\n        for k in keys.drain(..) {\n            test::black_box(hash.get(&amp;k));\n        }\n    });\n}\n</code></pre>\n\n<blockquote>\n  <p>A final tip.</p>\n</blockquote>\n\n<p>Benchmarks are complicated enough that you should be extra careful to only benchmark what you wish to benchmark.</p>\n\n<p>In this particular case, there are two method calls:</p>\n\n<ul>\n<li><code>keys.drain()</code>,</li>\n<li><code>hash.get()</code>.</li>\n</ul>\n\n<p>Since the benchmark name suggests, to me, that what you aim for is to measure the performance of <code>get</code>, I can only assume that the call to <code>keys.drain(..)</code> is a mistake.</p>\n\n<p>Thus, the benchmark really should be:</p>\n\n<pre><code>#[bench]\nfn rust_get(b: &amp;mut Bencher) {\n    let (hash, keys): (HashMap&lt;String, usize&gt;, _) =\n        get_random_hash(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n    let keys = test::black_box(keys);\n\n    b.iter(|| {\n        for k in &amp;keys {\n            test::black_box(hash.get(k));\n        }\n    });\n}\n</code></pre>\n\n<p>In this instance, this is even more critical in that the closure passed to <code>b.iter()</code> is expected to run multiple times: if you drain the keys the first time, what's left afterward? An empty <code>Vec</code>...</p>\n\n<p>... which may actually be all that is really happening here; since <code>b.iter()</code> runs the closure until its time stabilizes, it may just be draining the <code>Vec</code> in the first run and then time an empty loop.</p>\n"}], "owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1496497028, "creation_date": 1496442828, "last_edit_date": 1496445188, "question_id": 44338311, "link": "https://stackoverflow.com/questions/44338311/rust-benchmark-optimized-out", "title": "Rust benchmark optimized out", "body": "<p>I am trying to benchmark getting keys from a Rust hash map. I have the following benchmark:</p>\n\n<pre><code>#[bench]\nfn rust_get(b: &amp;mut Bencher) {\n    let (hash, keys) =\n        get_random_hash::&lt;HashMap&lt;String, usize&gt;&gt;(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n    let mut keys = test::black_box(keys);\n    b.iter(|| {\n        for k in keys.drain(..) {\n            hash.get(&amp;k);\n        }\n    });\n}\n</code></pre>\n\n<p>where <code>get_random_hash</code> is defined as:</p>\n\n<pre><code>fn get_random_hash&lt;T&gt;(\n    new: &amp;Fn(usize) -&gt; T,\n    insert: &amp;Fn(&amp;mut T, String, usize) -&gt; (),\n) -&gt; (T, Vec&lt;String&gt;) {\n    let mut keys = Vec::with_capacity(HASH_SIZE);\n    let mut hash = new(HASH_CAPACITY);\n    for i in 0..HASH_SIZE {\n        let k: String = format!(\"{}\", Uuid::new_v4());\n        keys.push(k.clone());\n        insert(&amp;mut hash, k, i);\n    }\n    return (hash, keys);\n}\n</code></pre>\n\n<p>and <code>rust_insert_fn</code> is:</p>\n\n<pre><code>fn rust_insert_fn(map: &amp;mut HashMap&lt;String, usize&gt;, key: String, value: usize) {\n    map.insert(key, value);\n}\n</code></pre>\n\n<p>However, when I run the benchmark, it is clearly optimized out:</p>\n\n<pre><code>test benchmarks::benchmarks::rust_get        ... bench:           1 ns/iter (+/- 0)\n</code></pre>\n\n<p>I thought <code>test::black_box would solve the problem but it doesn't look like it does. I have even tried wrapping the</code>hash.get(&amp;k<code>) in the for loop with</code>test::black_box` but that still optimizes the code. How should I correctly get the code to run without being optimized out?</p>\n\n<p>EDIT - Even the following does optimizes out the get operation:</p>\n\n<pre><code>#[bench]\nfn rust_get(b: &amp;mut Bencher) {\n  let (hash, keys) = get_random_hash::&lt;HashMap&lt;String, usize&gt;&gt;(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n  let mut keys = test::black_box(keys);\n  b.iter(|| {\n    let mut n = 0;\n    for k in keys.drain(..) {\n      hash.get(&amp;k);\n      n += 1;\n    };\n    return n;\n  });\n}\n</code></pre>\n\n<p>Interestingly, the following benchmarks work:</p>\n\n<pre><code>#[bench]\nfn rust_get_random(b: &amp;mut Bencher) {\n  let (hash, _) = get_random_hash::&lt;HashMap&lt;String, usize&gt;&gt;(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n  b.iter(|| {\n    for _ in 0..HASH_SIZE {\n      hash.get(&amp;format!(\"{}\", Uuid::new_v4()));\n    }\n  });\n}\n\n#[bench]\nfn rust_insert(b: &amp;mut Bencher) {\n  b.iter(|| {\n    let mut hash = HashMap::with_capacity(HASH_CAPACITY);\n    for i in 0..HASH_SIZE {\n      let k: String = format!(\"{}\", Uuid::new_v4());\n      hash.insert(k, i);\n    }\n  });\n}\n</code></pre>\n\n<p>but this also does not:</p>\n\n<pre><code>#[bench]\nfn rust_del(b: &amp;mut Bencher) {\n  let (mut hash, keys) = get_random_hash::&lt;HashMap&lt;String, usize&gt;&gt;(&amp;HashMap::with_capacity, &amp;rust_insert_fn);\n  let mut keys = test::black_box(keys);\n  b.iter(|| {\n    for k in keys.drain(..) {\n      hash.remove(&amp;k);\n    };\n  });\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/anonymous/d0dd3b9a1c2e8403e441820c62e6e3d7\" rel=\"nofollow noreferrer\">Here</a> is the full gist.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496427422, "post_id": 44334988, "comment_id": 75674131, "body": "<i>stored and updated on the stack</i> \u2014 is that the main issue? Do you already realize why not using something equivalent to a lock (be it a <code>Mutex</code>, <code>RwLock</code>, etc.) is <b>required</b> to ensure correctness? Asked another way, what level of experience do you have with multithreaded programming?"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1496437138, "post_id": 44334988, "comment_id": 75678605, "body": "Depending on what you&#39;re actually trying to do, the stuff in <code>std::sync::atomic</code> might be what you&#39;re looking for. Be careful though, lock-free multithreaded programming is very difficult to do correctly. Here&#39;s an intro to the topic: <a href=\"http://preshing.com/20120612/an-introduction-to-lock-free-programming/\" rel=\"nofollow noreferrer\">preshing.com/20120612/an-introduction-to-lock-free-programmi&zwnj;&#8203;ng</a>"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1496428466, "creation_date": 1496426757, "last_edit_date": 1496428466, "question_id": 44334988, "link": "https://stackoverflow.com/questions/44334988/implement-a-monitoring-thread-without-lock", "title": "Implement a monitoring thread without lock?", "body": "<p>I have a struct that sends messages to a channel as well as updating some of its own fields. How do I implement a monitoring thread that looks (read only) at its internal fields periodically?</p>\n\n<p>I can write it using a <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> wrapper, but I feel it is not that efficient as <code>A::x</code> could have been <code>i32</code> which is stored and updated on the stack. Is there any better way to do it without the locks?</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::sync::mpsc::{channel, Sender};\nuse std::{thread, time};\n\nstruct A {\n    x: Arc&lt;Mutex&lt;i32&gt;&gt;,\n    y: Sender&lt;i32&gt;,\n}\n\nimpl A {\n    fn do_some_loop(&amp;mut self) {\n        let sleep_time = time::Duration::from_millis(200);\n        // This is a long running thread.\n        for x in 1..1000000 {\n            *self.x.lock().unwrap() = x;\n            self.y.send(x);\n            thread::sleep(sleep_time);\n        }\n    }\n}\n\nfn test() {\n    let (sender, recever) = channel();\n    let x = Arc::new(Mutex::new(1));\n    let mut a = A { x: x.clone(), y: sender };\n\n    thread::spawn(move || {\n        // Monitor every 10 secs.\n        let sleep_time = time::Duration::from_millis(10000);\n        loop {\n            thread::sleep(sleep_time);\n            println!(\"{}\", *x.lock().unwrap());\n        }\n\n    });\n    a.do_some_loop();\n}\n</code></pre>\n"}, {"tags": ["regex", "rust"], "answers": [{"comments": [{"owner": {"reputation": 8153, "user_id": 3759, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/338f5f025d9cf34786df98ed506f5cc2?s=128&d=identicon&r=PG", "display_name": "Andy S", "link": "https://stackoverflow.com/users/3759/andy-s"}, "edited": false, "score": 0, "creation_date": 1496419306, "post_id": 44333063, "comment_id": 75669992, "body": "I can&#39;t believe I missed that. I must&#39;ve read that section 20 times. That works perfectly! Thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1496419173, "creation_date": 1496419173, "answer_id": 44333063, "question_id": 44332900, "link": "https://stackoverflow.com/questions/44332900/cannot-get-regexreplace-to-replace-a-numbered-capture-group/44333063#44333063", "title": "Cannot get `Regex::replace()` to replace a numbered capture group", "body": "<p>As mentioned in <a href=\"https://docs.rs/regex/0.2.2/regex/struct.Regex.html#method.replace\" rel=\"noreferrer\">the documentation</a>:</p>\n\n<blockquote>\n  <p>The longest possible name is used. e.g., <code>$1a</code> looks up the capture group named <code>1a</code> and not the capture group at index <code>1</code>. To exert more precise control over the name, use braces, e.g., <code>${1}a</code>.</p>\n</blockquote>\n\n<p>And</p>\n\n<blockquote>\n  <p>Sometimes the replacement string requires use of curly braces to\n  delineate a capture group replacement and surrounding literal text.\n  For example, if we wanted to join two words together with an\n  underscore:</p>\n\n<pre><code>let re = Regex::new(r\"(?P&lt;first&gt;\\w+)\\s+(?P&lt;second&gt;\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n</code></pre>\n  \n  <p>Without the curly braces, the capture group name <code>first_</code> would be used,\n  and since it doesn't exist, it would be replaced with the empty\n  string.</p>\n</blockquote>\n\n<p>You want <code>re.replace(\"mouse\", \"${1}ice\")</code></p>\n"}], "owner": {"reputation": 8153, "user_id": 3759, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/338f5f025d9cf34786df98ed506f5cc2?s=128&d=identicon&r=PG", "display_name": "Andy S", "link": "https://stackoverflow.com/users/3759/andy-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 884, "favorite_count": 1, "accepted_answer_id": 44333063, "answer_count": 1, "score": 6, "last_activity_date": 1496437733, "creation_date": 1496418606, "last_edit_date": 1496437733, "question_id": 44332900, "link": "https://stackoverflow.com/questions/44332900/cannot-get-regexreplace-to-replace-a-numbered-capture-group", "title": "Cannot get `Regex::replace()` to replace a numbered capture group", "body": "<p>I'm porting a pluralizer to Rust and I'm having some difficulty with regular expressions. I can't get the <code>Regex::replace()</code> method to replace a numbered capture group as I would expect. For example, the following displays an empty string:</p>\n\n<pre><code>let re = Regex::new(\"(m|l)ouse\").unwrap();\nprintln!(\"{}\", re.replace(\"mouse\", \"$1ice\"));\n</code></pre>\n\n<p>I would expect it to print \"mice\", as it does in JavaScript (or Swift, Python, C# or Go)</p>\n\n<pre><code>var re = RegExp(\"(m|l)ouse\")\nconsole.log(\"mouse\".replace(re, \"$1ice\"))\n</code></pre>\n\n<p>Is there some method I should be using instead of <code>Regex::replace()</code>? </p>\n\n<p>Examining the <a href=\"https://crates.io/crates/Inflector\" rel=\"nofollow noreferrer\">Inflector crate</a>, I see that it extracts the first capture group and then appends the suffix to the captured text: </p>\n\n<pre><code>if let Some(c) = rule.captures(&amp;non_plural_string) {\n    if let Some(c) = c.get(1) {\n        return format!(\"{}{}\", c.as_str(), replace);\n    }\n}\n</code></pre>\n\n<p>However, given that <code>replace</code> works in every other language I've used regular expressions in, I would expect it work in Rust as well. </p>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1535038668, "post_id": 44331646, "comment_id": 90928569, "body": "See also <a href=\"https://github.com/serde-rs/serde/issues/1042\" rel=\"nofollow noreferrer\">Support, or at least document the &quot;double option&quot; pattern</a>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 9, "last_activity_date": 1541546071, "last_edit_date": 1541546071, "creation_date": 1496414669, "answer_id": 44331646, "question_id": 44331037, "link": "https://stackoverflow.com/questions/44331037/how-can-i-distinguish-between-a-deserialized-field-that-is-missing-and-one-that/44331646#44331646", "title": "How can I distinguish between a deserialized field that is missing and one that is null?", "body": "<p>Quite likely, the only way to achieve that right now is with a custom deserialization function. Fortunately, it is not hard to implement, even to make it work for any kind of field:</p>\n\n<pre><code>fn deserialize_optional_field&lt;'de, T, D&gt;(deserializer: D) -&gt; Result&lt;Option&lt;Option&lt;T&gt;&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n    T: Deserialize&lt;'de&gt;,\n{\n    Ok(Some(Option::deserialize(deserializer)?))\n}\n</code></pre>\n\n<p>Then each field would be annotated as thus:</p>\n\n<pre><code>#[serde(deserialize_with = \"deserialize_optional_field\")]\na: Option&lt;Option&lt;i32&gt;&gt;,\n</code></pre>\n\n<p>You also need to annotate the struct with <code>#[serde(default)]</code>, so that empty fields are deserialized to an <em>\"unwrapped\"</em> <code>None</code>. The trick is to wrap present values around <code>Some</code>.</p>\n\n<p>Serialization relies on another trick: skipping serialization when the field is <code>None</code>:</p>\n\n<pre><code>#[serde(deserialize_with = \"deserialize_optional_field\")]\n#[serde(skip_serializing_if = \"Option::is_none\")]\na: Option&lt;Option&lt;i32&gt;&gt;,\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=62d611b5544077a2471ed6ad68b5ed67&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a> with the full example. The output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Original JSON: {\"a\": 42, \"b\": null}\n&gt; Resource { a: Some(Some(42)), b: Some(None), c: None }\n&lt; {\"a\":42,\"b\":null}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1496420146, "post_id": 44332837, "comment_id": 75670425, "body": "&quot;Ideally, the implementation of <code>Deserialize</code> for <code>Patch</code> would handle that completely&quot; My assumption so far is that this is impossible. From the moment that you attempt to deserialize a <code>Patch</code>, you expect the value to exist in its serialized form. On the contrary, <code>Patch::Missing</code> exists through its &quot;non-existence&quot; in our container (you cannot actually serialize <code>Patch::Missing</code> to JSON on its own). AFAIK a <code>Serialize</code> cannot choose not to be serialized, nor can it tell the container to skip that part of the process."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496420515, "post_id": 44332837, "comment_id": 75670603, "body": "Well, actually, my previous comment is more applicable to serialization, and not deserialization. Regardless, the logic is somewhat dual: <code>Deserialize</code> cannot tell the <code>Deserializer</code> to deserialize values that it just won&#39;t find. If we have an empty object <code>{}</code>, the implementations of <code>Deserialize</code> can do nothing about it, but the deserializer can, once it knows to fill in a default."}, {"owner": {"reputation": 3190, "user_id": 141881, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/7DLiX.png?s=128&g=1", "display_name": "pospi", "link": "https://stackoverflow.com/users/141881/pospi"}, "edited": false, "score": 0, "creation_date": 1560998542, "post_id": 44332837, "comment_id": 99923069, "body": "I prefer this approach to the &quot;double option&quot; pattern as it gives you a more explicit and understandable type than wrapped options do- thanks! Solves <a href=\"https://stackoverflow.com/q/56661241/141881\">stackoverflow.com/q/56661241/141881</a> for me :D"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 12, "last_activity_date": 1541546109, "last_edit_date": 1541546109, "creation_date": 1496418392, "answer_id": 44332837, "question_id": 44331037, "link": "https://stackoverflow.com/questions/44331037/how-can-i-distinguish-between-a-deserialized-field-that-is-missing-and-one-that/44332837#44332837", "title": "How can I distinguish between a deserialized field that is missing and one that is null?", "body": "<p>Building off of <a href=\"https://stackoverflow.com/a/44331646/155423\">E_net4's answer</a>, you can also create an enum for the three possibilities:</p>\n\n<pre><code>#[derive(Debug)]\nenum Patch&lt;T&gt; {\n    Missing,\n    Null,\n    Value(T),\n}\n\nimpl&lt;T&gt; Default for Patch&lt;T&gt; {\n    fn default() -&gt; Self {\n        Patch::Missing\n    }\n}\n\nimpl&lt;T&gt; From&lt;Option&lt;T&gt;&gt; for Patch&lt;T&gt; {\n    fn from(opt: Option&lt;T&gt;) -&gt; Patch&lt;T&gt; {\n        match opt {\n            Some(v) =&gt; Patch::Value(v),\n            None =&gt; Patch::Null,\n        }\n    }\n}\n\nimpl&lt;'de, T&gt; Deserialize&lt;'de&gt; for Patch&lt;T&gt;\nwhere\n    T: Deserialize&lt;'de&gt;,\n{\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        Option::deserialize(deserializer).map(Into::into)\n    }\n}\n</code></pre>\n\n<p>This can then be used as:    </p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct ResourcePatch {\n    #[serde(default)]\n    a: Patch&lt;i32&gt;,\n}\n</code></pre>\n\n<p>Unfortunately, you still have to annotate each field with <code>#[serde(default)]</code> (or apply it to the entire struct). Ideally, the implementation of <code>Deserialize</code> for <code>Patch</code> would handle that completely, but I haven't figured out how to do that yet.</p>\n"}, {"tags": [], "owner": {"reputation": 2681, "user_id": 686724, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/593a31b95d0e639cc60c16fead3fbc7c?s=128&d=identicon&r=PG", "display_name": "Jeremy Chone", "link": "https://stackoverflow.com/users/686724/jeremy-chone"}, "is_accepted": false, "score": 1, "last_activity_date": 1616210850, "last_edit_date": 1616210850, "creation_date": 1614665261, "answer_id": 66434149, "question_id": 44331037, "link": "https://stackoverflow.com/questions/44331037/how-can-i-distinguish-between-a-deserialized-field-that-is-missing-and-one-that/66434149#66434149", "title": "How can I distinguish between a deserialized field that is missing and one that is null?", "body": "<p>Building up on <a href=\"https://stackoverflow.com/a/44332837/155423\">Shepmaster's answer</a> and adding serialization.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::ser::Error;\nuse serde::{Deserialize, Deserializer};\nuse serde::{Serialize, Serializer};\n\n// #region ------ JSON Absent support\n// build up on top of https://stackoverflow.com/a/44332837\n\n/// serde Valueue that can be Absent, Null, or Valueue(T)\n#[derive(Debug)]\npub enum Maybe&lt;T&gt; {\n    Absent,\n    Null,\n    Value(T),\n}\n\n#[allow(dead_code)]\nimpl&lt;T&gt; Maybe&lt;T&gt; {\n    pub fn is_absent(&amp;self) -&gt; bool {\n        match &amp;self {\n            Maybe::Absent =&gt; true,\n            _ =&gt; false,\n        }\n    }\n}\n\nimpl&lt;T&gt; Default for Maybe&lt;T&gt; {\n    fn default() -&gt; Self {\n        Maybe::Absent\n    }\n}\n\nimpl&lt;T&gt; From&lt;Option&lt;T&gt;&gt; for Maybe&lt;T&gt; {\n    fn from(opt: Option&lt;T&gt;) -&gt; Maybe&lt;T&gt; {\n        match opt {\n            Some(v) =&gt; Maybe::Value(v),\n            None =&gt; Maybe::Null,\n        }\n    }\n}\n\nimpl&lt;'de, T&gt; Deserialize&lt;'de&gt; for Maybe&lt;T&gt;\nwhere\n    T: Deserialize&lt;'de&gt;,\n{\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        let d = Option::deserialize(deserializer).map(Into::into);\n        d\n    }\n}\n\nimpl&lt;T: Serialize&gt; Serialize for Maybe&lt;T&gt; {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        match self {\n            // this will be serialized as null\n            Maybe::Null =&gt; serializer.serialize_none(),\n            Maybe::Value(v) =&gt; v.serialize(serializer),\n            // should have been skipped\n            Maybe::Absent =&gt; Err(Error::custom(\n                r#&quot;Maybe fields need to be annotated with: \n  #[serde(default, skip_serializing_if = &quot;Maybe::is_Absent&quot;)]&quot;#,\n            )),\n        }\n    }\n}\n// #endregion --- JSON Absent support\n</code></pre>\n<p>And then you can use it this way:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Serialize, Deserialize, Debug)]\nstruct Rect {\n    #[serde(default, skip_serializing_if = &quot;Maybe::is_absent&quot;)]\n    stroke: Maybe&lt;i32&gt;,\n\n    w: i32,\n\n    #[serde(default, skip_serializing_if = &quot;Maybe::is_absent&quot;)]\n    h: Maybe&lt;i32&gt;,\n}\n\n\n// .... \n\n\nlet json = r#&quot;\n{\n  &quot;stroke&quot;: null,\n  &quot;w&quot;: 1\n}&quot;#;\n    \nlet deserialized: Rect = serde_json::from_str(json).unwrap();\nprintln!(&quot;deserialized = {:?}&quot;, deserialized);\n// will output: Rect { stroke: Null, w: 1, h: Absent }\n\nlet serialized = serde_json::to_string(&amp;deserialized).unwrap();\nprintln!(&quot;serialized back = {}&quot;, serialized);\n// will output: {&quot;stroke&quot;:null,&quot;w&quot;:1}\n</code></pre>\n<p>I wish Serde had a built-in way to handle JSON's <code>null</code> and <code>absent</code> states.</p>\n<p><strong>Update 2021-03-12</strong> - Updated to <code>Maybe::Absent</code> as it is more JSON and SQL DSL idiomatic.</p>\n<p>The catch with this approach is that we can express:</p>\n<ul>\n<li><code>type | null</code> with the default <code>Option&lt;type&gt;</code></li>\n<li><code>type | null | absent</code> with <code>Maybe&lt;type&gt;</code></li>\n</ul>\n<p>But we cannot express</p>\n<ul>\n<li><code>type | absent</code></li>\n</ul>\n<p>The solution would be to refactor <code>Maybe</code> to just have <code>::Present(value)</code> and <code>::Absent</code> and support <code>Maybe&lt;Option&lt;type&gt;&gt;</code> for the <code>type | null | absent</code>. So this will give us full coverage.</p>\n<ul>\n<li><code>type | null</code> with the default <code>Option&lt;type&gt;</code></li>\n<li><code>type | absent</code> with <code>Maybe&lt;type&gt;</code></li>\n<li><code>type | absent | null</code> with <code>Maybe&lt;Option&lt;type&gt;&gt;</code></li>\n</ul>\n<p>I am trying to implement this without adding a <code>#[serde(deserialize_with = &quot;deserialize_maybe_field&quot;)]</code> but not sure it is possible. I might be missing something obvious.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2373, "favorite_count": 3, "accepted_answer_id": 44331646, "answer_count": 3, "score": 14, "last_activity_date": 1616210850, "creation_date": 1496412749, "last_edit_date": 1541545914, "question_id": 44331037, "link": "https://stackoverflow.com/questions/44331037/how-can-i-distinguish-between-a-deserialized-field-that-is-missing-and-one-that", "title": "How can I distinguish between a deserialized field that is missing and one that is null?", "body": "<p>I'd like to use <a href=\"https://serde.rs/\" rel=\"noreferrer\">Serde</a> to parse some JSON as part of a HTTP PATCH request. Since PATCH requests don't pass the entire object, only the relevant data to update, I need the ability to tell between a value that was not passed, a value that was explicitly set to <code>null</code>, and a value that is present.</p>\n\n<p>I have a value object with multiple nullable fields:</p>\n\n<pre><code>struct Resource {\n    a: Option&lt;i32&gt;,\n    b: Option&lt;i32&gt;,\n    c: Option&lt;i32&gt;,\n}\n</code></pre>\n\n<p>If the client submits JSON like this:</p>\n\n<pre><code>{\"a\": 42, \"b\": null}\n</code></pre>\n\n<p>I'd like to change <code>a</code> to <code>Some(42)</code>, <code>b</code> to <code>None</code>, and leave <code>c</code> unchanged.</p>\n\n<p>I tried wrapping each field in one more level of <code>Option</code>:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct ResourcePatch {\n    a: Option&lt;Option&lt;i32&gt;&gt;,\n    b: Option&lt;Option&lt;i32&gt;&gt;,\n    c: Option&lt;Option&lt;i32&gt;&gt;,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=01d650373b308a5086860c699c648228\" rel=\"noreferrer\">playground</a></p>\n\n<p>This does not make a distinction between <code>b</code> and <code>c</code>; both are <code>None</code> but I'd have wanted <code>b</code> to be <code>Some(None)</code>.</p>\n\n<p>I'm not tied to this representation of nested <code>Option</code>s; any solution that can distinguish the 3 cases would be fine, such as one using a custom enum.</p>\n"}, {"tags": ["hashmap", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4489, "user_id": 1809463, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/CNui3.jpg?s=128&g=1", "display_name": "mike", "link": "https://stackoverflow.com/users/1809463/mike"}, "edited": false, "score": 0, "creation_date": 1496400701, "post_id": 44327099, "comment_id": 75658348, "body": "So what can I do, if I want to update my histogram with the bracket operator? Is it possible to implement <code>IndexMut</code> for <code>HashMap</code>?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1496400822, "post_id": 44327099, "comment_id": 75658432, "body": "<a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\">Entry API</a> provides a way to do it. The example solves your problem."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4489, "user_id": 1809463, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/CNui3.jpg?s=128&g=1", "display_name": "mike", "link": "https://stackoverflow.com/users/1809463/mike"}, "edited": false, "score": 0, "creation_date": 1496401265, "post_id": 44327099, "comment_id": 75658687, "body": "@mike you can&#39;t implement <code>IndexMut</code> for <code>HashMap</code>, because only traits defined in the current crate can be implemented for a type parameter (<a href=\"https://doc.rust-lang.org/error-index.html#E0210\" rel=\"nofollow noreferrer\">E0210</a>). I think it was not implemented in the std in favor of the entry API."}, {"owner": {"reputation": 4489, "user_id": 1809463, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/CNui3.jpg?s=128&g=1", "display_name": "mike", "link": "https://stackoverflow.com/users/1809463/mike"}, "edited": false, "score": 0, "creation_date": 1496401508, "post_id": 44327099, "comment_id": 75658816, "body": "It was removed &quot;[...] in order to future-proof the API against the eventual inclusion of an <code>IndexSet</code> trait.&quot; <a href=\"https://github.com/rust-lang/rust/pull/23559\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/23559</a> ...Why!? This succinct updating of maps like C++ is so beautiful!"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1496401122, "last_edit_date": 1496401122, "creation_date": 1496400536, "answer_id": 44327099, "question_id": 44326928, "link": "https://stackoverflow.com/questions/44326928/use-index-trait-with-hashmap-in-rust/44327099#44327099", "title": "Use Index trait with HashMap in Rust", "body": "<p><code>HashMap</code> only implements <code>Index</code> (and not <code>IndexMut</code>):</p>\n\n<pre><code>fn index(&amp;self, index: &amp;Q) -&gt; &amp;V\n</code></pre>\n\n<p>so you can't mutate <code>histogram[&amp;c]</code>, because the returned reference <code>&amp;V</code> is immutable.</p>\n\n<p>You should use the <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\">entry API</a> instead:</p>\n\n<pre><code>for c in chars {\n    let counter = histogram.entry(c).or_insert(0);\n    *counter += 1;\n}\n</code></pre>\n"}], "owner": {"reputation": 4489, "user_id": 1809463, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/CNui3.jpg?s=128&g=1", "display_name": "mike", "link": "https://stackoverflow.com/users/1809463/mike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1591, "favorite_count": 0, "closed_date": 1496410062, "accepted_answer_id": 44327099, "answer_count": 1, "score": 2, "last_activity_date": 1496401122, "creation_date": 1496399955, "last_edit_date": 1496400298, "question_id": 44326928, "link": "https://stackoverflow.com/questions/44326928/use-index-trait-with-hashmap-in-rust", "closed_reason": "Duplicate", "title": "Use Index trait with HashMap in Rust", "body": "<p>In order to test the <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> trait, I coded a histogram. </p>\n\n\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut histogram: HashMap&lt;char, u32&gt; = HashMap::new();\n    let chars: Vec&lt;_&gt; = \"Lorem ipsum dolor sit amet\"\n        .to_lowercase()\n        .chars()\n        .collect();\n\n    for c in chars {\n        histogram[c] += 1;\n    }\n\n    println!(\"{:?}\", histogram);\n}\n</code></pre>\n\n<p><sup>Test code <a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Acollections%3A%3AHashMap%3B%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20mut%20histogram%3A%20HashMap%3Cchar%2C%20u32%3E%20%3D%20HashMap%3A%3Anew()%3B%0A%20%20%20%20let%20chars%3A%20Vec%3C_%3E%20%3D%20%22Lorem%20ipsum%20dolor%20sit%20amet%22%0A%20%20%20%20%20%20%20%20.to_lowercase()%0A%20%20%20%20%20%20%20%20.chars()%0A%20%20%20%20%20%20%20%20.collect()%3B%0A%0A%20%20%20%20for%20c%20in%20chars%20%7B%0A%20%20%20%20%20%20%20%20histogram%5Bc%5D%20%2B%3D%201%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20histogram)%3B%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">here</a>.</sup></p>\n\n<p>But I get following type error <code>expected &amp;char, found char</code>. If I use <code>histogram[&amp;c] += 1;</code> instead, I get <code>cannot borrow as mutable</code>.</p>\n\n<p>What am I doing wrong? How can I fix this example?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1496396984, "post_id": 44325802, "comment_id": 75656052, "body": "That will naturally depend on your use case. Knowing they can go over <code>10^100</code> isn&#39;t enough. Would those be integers or real numbers? Is precision loss tolerable? Have you searched for a suitable &quot;big number&quot; type at crates.io? Overall, right now I cannot imagine a good answer that would not attempt to cover every possible approach. Please be more specific."}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1496405932, "post_id": 44327098, "comment_id": 75661640, "body": "How about <code>let x: BigInt = 10.to_bigint().unwrap()</code> for the first line?"}, {"owner": {"reputation": 939, "user_id": 6708322, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5409106a7928c47fc17e1f05ff204c7e?s=128&d=identicon&r=PG&f=1", "display_name": "Jake Conkerton-Darby", "link": "https://stackoverflow.com/users/6708322/jake-conkerton-darby"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1496406092, "post_id": 44327098, "comment_id": 75661753, "body": "That may well work or be better, I&#39;m not all that familiar with Rust TBH."}], "tags": [], "owner": {"reputation": 939, "user_id": 6708322, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5409106a7928c47fc17e1f05ff204c7e?s=128&d=identicon&r=PG&f=1", "display_name": "Jake Conkerton-Darby", "link": "https://stackoverflow.com/users/6708322/jake-conkerton-darby"}, "is_accepted": true, "score": 7, "last_activity_date": 1496410357, "last_edit_date": 1496410357, "creation_date": 1496400536, "answer_id": 44327098, "question_id": 44325802, "link": "https://stackoverflow.com/questions/44325802/how-to-deal-with-real-large-numbers-which-dont-fit-in-128-bits-in-rust-without/44327098#44327098", "title": "How to deal with real large numbers which don&#39;t fit in 128 bits in Rust without loss?", "body": "<p>If you're definitely only working with integers you can use either <code>BigInt</code> or <code>BigUint</code> from the <a href=\"http://rust-num.github.io/num/num_bigint/index.html\" rel=\"noreferrer\">big_int</a> crate. An example usage could be:</p>\n\n<pre><code>extern crate num_bigint;\nuse num_bigint::{BigInt, Sign};\n\nfn main() {\n    let x = BigInt::new(Sign::Plus, vec![1, 0]);\n    println!(num::pow(x, 100).to_str_radix(10));\n}\n</code></pre>\n"}], "owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1481, "favorite_count": 1, "accepted_answer_id": 44327098, "answer_count": 1, "score": 6, "last_activity_date": 1496410357, "creation_date": 1496396752, "last_edit_date": 1496410316, "question_id": 44325802, "link": "https://stackoverflow.com/questions/44325802/how-to-deal-with-real-large-numbers-which-dont-fit-in-128-bits-in-rust-without", "title": "How to deal with real large numbers which don&#39;t fit in 128 bits in Rust without loss?", "body": "<p>When I try to do 10 power 100, I get </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'attempt to multiply with overflow', shorter.rs:33\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>which is normal because 10^100 is greater than 2^64 (and even 2^128).</p>\n"}, {"tags": ["rust", "traits", "multiple-dispatch"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496341151, "post_id": 44314403, "comment_id": 75634612, "body": "I must be missing something about your question; <code>fn&lt;A: SaveSource, B: SaveDestination&gt;(a: A, b: B) { ... }</code> would appear to already do what you ask. Why would either of the traits themselves implement the function?"}, {"owner": {"reputation": 11, "user_id": 8099375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/624c0392c1e037901043ebdee2894dbb?s=128&d=identicon&r=PG&f=1", "display_name": "user8099375", "link": "https://stackoverflow.com/users/8099375/user8099375"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496341292, "post_id": 44314403, "comment_id": 75634681, "body": "@Shepmaster: I can&#39;t have a single function for all the types. The implementation will be different for all pairs of types."}, {"owner": {"reputation": 11, "user_id": 8099375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/624c0392c1e037901043ebdee2894dbb?s=128&d=identicon&r=PG&f=1", "display_name": "user8099375", "link": "https://stackoverflow.com/users/8099375/user8099375"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496341420, "post_id": 44314403, "comment_id": 75634745, "body": "For example, if I have three Sources, <code>S1</code>, <code>S2</code>, and <code>S3</code>, and two Destinations, <code>D1</code> and <code>D2</code>, i&#39;ll have 6 functions: <code>save(a: S1, b: D1)</code>, <code>save(a: S1, b: D2)</code>, <code>save(a: S2, b: D1)</code>, ..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1496341586, "post_id": 44314403, "comment_id": 75634828, "body": "Are you familiar with the <a href=\"https://en.wikipedia.org/wiki/Double_dispatch\" rel=\"nofollow noreferrer\">double dispatch pattern</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1496341621, "post_id": 44314403, "comment_id": 75634849, "body": "Why does it matter that <code>a</code> and <code>b</code> implement the <code>SaveSource</code> / <code>SaveDestination</code> traits if all the implementations have to be different anyway?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496341768, "post_id": 44314403, "comment_id": 75634918, "body": "<i>for all existing <code>SaveDestination</code>s or <code>SaveSource</code>s</i> \u2014 how would this be possible, considering that traits are open-ended and any consumer of your code can choose to implement that trait if it chooses? Do you want someone adding an additional implementation of one of those traits to &quot;break&quot; compilation of existing types?"}, {"owner": {"reputation": 1889, "user_id": 1036501, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/z8PwP.png?s=128&g=1", "display_name": "zstewart", "link": "https://stackoverflow.com/users/1036501/zstewart"}, "edited": false, "score": 2, "creation_date": 1496372831, "post_id": 44314403, "comment_id": 75645519, "body": "Design the traits so that the common functionality can be implemented using only the methods on the traits, and put the implementation specific details hidden behind the implementations."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1496456007, "creation_date": 1496456007, "answer_id": 44339592, "question_id": 44314403, "link": "https://stackoverflow.com/questions/44314403/define-two-traits-such-that-a-function-must-exist-for-the-cartesian-product-of-t/44339592#44339592", "title": "Define two traits such that a function must exist for the cartesian product of the two sets of types that implement it", "body": "<p>You cannot force the compiler to emit an error when some combination of <code>A</code> and <code>B</code> doesn't implement <code>save</code>. But you can have a generic function that requires that the combination of the specific <code>A</code> and <code>B</code> it receives implements <code>save</code>.</p>\n\n<p>To do that, we need to wrap <code>save</code> in a trait and implement it on some type that includes both <code>A</code> and <code>B</code>; the simplest option is a tuple. (Coherence may get in the way if the trait and the types are not all in the same crate, though.)</p>\n\n<pre><code>trait Save {\n    fn save(self);\n}\n\nstruct Foo; // sample save source\nstruct Bar; // sample save destination\n\n// save is defined for the combination of `Foo` and `Bar`\nimpl Save for (Foo, Bar) {\n    fn save(self) {\n        unimplemented!()\n    }\n}\n\n// in order to call this, the type `(A, B)` must implement `Save`    \nfn call_save&lt;A, B&gt;(a: A, b: B)\nwhere\n    (A, B): Save\n{\n    (a, b).save();\n}\n\nfn main() {\n    // this call compiles because `impl Save for (Foo, Bar)` is present\n    call_save(Foo, Bar);\n}\n</code></pre>\n\n<p>You can also do it for references:</p>\n\n<pre><code>trait Save {\n    fn save(self);\n}\n\nstruct Foo;\nstruct Bar;\n\nimpl&lt;'a, 'b&gt; Save for (&amp;'a Foo, &amp;'b Bar) {\n    fn save(self) {\n        unimplemented!()\n    }\n}\n\nfn call_save&lt;'a, 'b, A, B&gt;(a: &amp;'a A, b: &amp;'b B)\nwhere\n    (&amp;'a A, &amp;'b B): Save\n{\n    (a, b).save();\n}\n\nfn main() {\n    call_save(&amp;Foo, &amp;Bar);\n}\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 8099375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/624c0392c1e037901043ebdee2894dbb?s=128&d=identicon&r=PG&f=1", "display_name": "user8099375", "link": "https://stackoverflow.com/users/8099375/user8099375"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1496456007, "creation_date": 1496340721, "question_id": 44314403, "link": "https://stackoverflow.com/questions/44314403/define-two-traits-such-that-a-function-must-exist-for-the-cartesian-product-of-t", "title": "Define two traits such that a function must exist for the cartesian product of the two sets of types that implement it", "body": "<p>I would like to create two traits, <code>SaveSource</code> and <code>SaveDestination</code>, such that when some types implement these traits, the function:</p>\n\n<pre><code>fn save(a, b)\n</code></pre>\n\n<p>must be implemented for all <code>a : SaveSource</code> and <code>b : SaveDestination</code> (and when a new type is added to either <code>SaveSource</code> or <code>SaveDestination</code>, it must implement the <code>save</code> function for all existing <code>SaveDestination</code>s or <code>SaveSource</code>s.</p>\n\n<p>Is something like this even possible? If not, is there anything I can use instead to get the same result?</p>\n"}, {"tags": ["file", "asynchronous", "rust", "streaming", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496346290, "post_id": 44313906, "comment_id": 75637333, "body": "Generally, filesystems <i>don&#39;t</i> have async IO (or not reliably). Which platform are you on that does?"}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496349321, "post_id": 44313906, "comment_id": 75639037, "body": "OK, I wasn&#39;t aware of that. I&#39;m just targeting Linux. What&#39;s the best way of streaming lines from many files? Sounds like I should spawn a thread per file (usually no more than 100 files)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1496349667, "post_id": 44313906, "comment_id": 75639238, "body": "Here&#39;s a (relatively) recent <a href=\"https://lwn.net/Articles/671649/\" rel=\"nofollow noreferrer\">article on the support for async file IO in Linux</a>. The common solution is to have a threadpool and a queue. If you are using Tokio, something like <a href=\"https://crates.io/crates/futures-cpupool\" rel=\"nofollow noreferrer\">futures-cpupool</a> would be the first place I&#39;d turn."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1496349741, "post_id": 44313906, "comment_id": 75639281, "body": "FYI <code>let file : File = File</code> is redundant \u2014 we don&#39;t need to write old-school Java here. <code>let file = File</code> is sufficient."}, {"owner": {"reputation": 2030, "user_id": 1069278, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0507d3e2796540aab634041439f84be7?s=128&d=identicon&r=PG", "display_name": "Z&#243;lyomi Istv&#225;n", "link": "https://stackoverflow.com/users/1069278/z%c3%b3lyomi-istv%c3%a1n"}, "edited": false, "score": 2, "creation_date": 1528469959, "post_id": 44313906, "comment_id": 88534345, "body": "The new tokio release comes with a tokio_fs crate finally supporting async files, see <a href=\"https://tokio.rs/blog/2018-05-tokio-fs/\" rel=\"nofollow noreferrer\">tokio.rs/blog/2018-05-tokio-fs</a>"}], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1590, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1496339822, "creation_date": 1496338766, "last_edit_date": 1496339822, "question_id": 44313906, "link": "https://stackoverflow.com/questions/44313906/how-to-get-tokio-ios-async-read-for-a-file-handle", "title": "How to get tokio-io&#39;s async_read for a File handle", "body": "<p>I want to stream lines out of a file handle and I do not know how to satisfy the trait bound that a <code>File</code> has <code>async_read</code>:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{ BufReader, BufRead };\nuse tokio_core::reactor::Handle;\nuse tokio_io::io::lines;\nuse tokio_io::AsyncRead;\n\nstruct DockerLog {\n    path: String\n}\n\nimpl DockerLog {\n    pub fn new(path: String) -&gt; DockerLog {\n        DockerLog {\n            path: path\n        }\n    }\n    pub fn read_lines(&amp;self, handle: &amp;Handle) {\n        let file : File = File::open(&amp;self.path[..]).unwrap();\n        let l = lines(BufReader::new(file));\n\n    }\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::fs::File: tokio_io::AsyncRead` is not satisfied\n  --&gt; src/container/docker_logs.rs:20:17\n   |\n20 |         let l = lines(BufReader::new(file));\n   |                 ^^^^^ the trait `tokio_io::AsyncRead` is not implemented for `std::fs::File`\n   |\n   = note: required because of the requirements on the impl of `tokio_io::AsyncRead` for `std::io::BufReader&lt;std::fs::File&gt;`\n   = note: required by `tokio_io::io::lines`\n</code></pre>\n\n<p>Looking over the <a href=\"https://docs.rs/tokio-io/0.1.2/tokio_io/trait.AsyncRead.html\" rel=\"nofollow noreferrer\"><code>AsyncRead</code></a>, it seems like a <code>File</code> doesn't mark that it has non-blocking reads. Do I need to downgrade the <code>File</code> to a <code>raw_fd</code> and then do something there?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1498041583, "post_id": 44313287, "comment_id": 76331503, "body": "<code>let a_ref_to_foo = &amp;foo;</code> should read <code>let mut a_ref_to_foo = &amp;foo;</code>. Suggested edit was rejected."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1498047210, "post_id": 44313287, "comment_id": 76335519, "body": "@red75prime no. The second example is intended to mirror OPs case. Adding a <code>mut</code> would make the code compile, negating the whole point of the example. Presumably OP already knows how to fix it (the compiler error message says as much) and is asking what the difference is."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1498049135, "post_id": 44313287, "comment_id": 76337026, "body": "ah, I missed <code>&amp;mut a_ref_to_foo</code> in the question&#39;s title. The code in the question doesn&#39;t contain it, so I decided that you introduced it just to explain how temporary values work. I&#39;m sorry for false positive."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1496336436, "creation_date": 1496336436, "answer_id": 44313287, "question_id": 44312652, "link": "https://stackoverflow.com/questions/44312652/why-is-mut-foo-valid-but-mut-a-ref-to-foo-is-invalid/44313287#44313287", "title": "Why is `&amp;mut &amp;foo` valid but `&amp;mut a_ref_to_foo` is invalid?", "body": "<pre><code>&amp;mut &amp;foo\n</code></pre>\n\n<p>This does two things - it creates a temporary value of type <code>&amp;Foo</code>, then creates another temporary of type <code>&amp;mut &amp;Foo</code>.</p>\n\n<pre><code>let a_ref_to_foo = &amp;foo;\n&amp;mut a_ref_to_foo\n</code></pre>\n\n<p>This also creates a temporary of type <code>&amp;mut &amp;Foo</code>, but to something that is observable via the variable binding <code>a_ref_to_foo</code>, <strong>not</strong> another temporary.</p>\n\n<p>The problem is the same as this example:</p>\n\n<pre><code>// Works\nString::new().clear();\n\n// Doesn't work\nlet s = String::new();\ns.clear();\n</code></pre>\n\n<p>When you have a temporary value, you have ownership over it which includes treating it as mutable. Once it's been assigned to a binding, the <em>binding</em> has ownership and you must indicate that it's allowed to be mutated or not.</p>\n"}], "owner": {"reputation": 17717, "user_id": 691867, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/86cad22e6f9100c801c56c099872bbc2?s=128&d=identicon&r=PG", "display_name": "colinfang", "link": "https://stackoverflow.com/users/691867/colinfang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 44313287, "answer_count": 1, "score": 1, "last_activity_date": 1496336436, "creation_date": 1496334071, "last_edit_date": 1496335646, "question_id": 44312652, "link": "https://stackoverflow.com/questions/44312652/why-is-mut-foo-valid-but-mut-a-ref-to-foo-is-invalid", "title": "Why is `&amp;mut &amp;foo` valid but `&amp;mut a_ref_to_foo` is invalid?", "body": "<p>In the following example, <code>t1</code> compiles but <code>t2</code> does not. </p>\n\n<p>Is there anything special about <code>&amp;mut &amp;stream</code>? I don't think <code>Deref</code> kicks in.</p>\n\n<pre><code>use std::net::TcpStream;\n\nfn t1() {\n    let stream = TcpStream::connect(\"127.0.0.1\").unwrap();\n    let a = &amp;mut &amp;stream;\n}\n\nfn t2(stream: &amp;TcpStream) {\n    let a = &amp;mut stream;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0757b5f5810ff917b93a45924db9f00e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>9  | fn t2(stream: &amp;TcpStream) {\n   |       ------ use `mut stream` here to make mutable\n10 |     let a = &amp;mut stream;\n   |                  ^^^^^^ cannot borrow mutably\n</code></pre>\n"}, {"tags": ["function", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496323673, "post_id": 44308812, "comment_id": 75622986, "body": "<code>mod</code> stands for <a href=\"https://doc.rust-lang.org/book/crates-and-modules.html#defining-modules\" rel=\"nofollow noreferrer\">modules</a>."}, {"owner": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496323713, "post_id": 44308812, "comment_id": 75623013, "body": "Oh damni! I knew it. But is there no way for me to call the parameter mod then?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1496341240, "post_id": 44308812, "comment_id": 75634654, "body": "Opinion: you should just call it <code>modifier</code>. Variable and function names are part of your documentation; don&#39;t make up obscure abbreviations. Is <code>oct</code> short for <code>octal</code> or <code>octave</code>? When you come back to this code in 3 months, how long will you futilely search your source code for &quot;frequency&quot; before you remember that you abbreviated <code>get_frequency</code> to <code>getfreq</code>? Short names may save seconds (debatably), but descriptive names can save minutes or more in the long run."}], "answers": [{"comments": [{"owner": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "edited": false, "score": 0, "creation_date": 1496324262, "post_id": 44308939, "comment_id": 75623467, "body": "Still, it really seems stupid to define a module inside a functions arguments...Oh well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "edited": false, "score": 5, "creation_date": 1496324391, "post_id": 44308939, "comment_id": 75623569, "body": "@VikingPingvin you cannot define a module inside the arguments; it&#39;s just an artifact of how the compiler operates. I&#39;d encourage you to try writing a lexer/parser to understand why concepts like keywords make programming languages easier to handle for humans, compilers, editors, etc."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1496323837, "creation_date": 1496323837, "answer_id": 44308939, "question_id": 44308812, "link": "https://stackoverflow.com/questions/44308812/function-argument-reports-error-expected-pattern-found-keyword-mod/44308939#44308939", "title": "Function argument reports &quot;error expected pattern, found keyword `mod`&quot;", "body": "<blockquote>\n  <p>I just want to use it for abbreviating 'modifier'.</p>\n</blockquote>\n\n<p><code>mod</code> is already used by the Rust language to abbreviate <a href=\"https://doc.rust-lang.org/stable/book/crates-and-modules.html\" rel=\"noreferrer\">\"module\"</a>. As such, it is a <em>keyword</em> \u2014 a specific set of characters that <strong>cannot</strong> be used for anything else. You will need to pick another name.</p>\n\n<p>There are <a href=\"https://doc.rust-lang.org/grammar.html#keywords\" rel=\"noreferrer\">many keywords in Rust</a> and you must not use them except for their language-specific purpose.</p>\n"}], "owner": {"reputation": 232, "user_id": 3975781, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fba39b25f957ccd9c532590c859e706b?s=128&d=identicon&r=PG&f=1", "display_name": "VikingPingvin", "link": "https://stackoverflow.com/users/3975781/vikingpingvin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1046, "favorite_count": 0, "accepted_answer_id": 44308939, "answer_count": 1, "score": 1, "last_activity_date": 1496323861, "creation_date": 1496323535, "last_edit_date": 1496323861, "question_id": 44308812, "link": "https://stackoverflow.com/questions/44308812/function-argument-reports-error-expected-pattern-found-keyword-mod", "title": "Function argument reports &quot;error expected pattern, found keyword `mod`&quot;", "body": "<p>I have a barebones function in a class, this is the only function.</p>\n\n<pre><code>pub fn getfreq(note: char, mod: char, oct: i8) {}\n</code></pre>\n\n<p>And I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected pattern, found keyword `mod`\n --&gt; src/main.rs:1:28\n  |\n1 | pub fn getfreq(note: char, mod: char, oct: i8) {}\n  |                            ^^^\n</code></pre>\n\n<p>Is <code>mod</code> something Rust related? I just want to use it for abbreviating 'modifier'.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496321923, "post_id": 44307780, "comment_id": 75621636, "body": "Can you include more of the compiler&#39;s output? What lines have triggered the error?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496324110, "post_id": 44307780, "comment_id": 75623333, "body": "@E_net4 I updated my question, the error triggered by the sole line of code."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 1, "creation_date": 1496324347, "post_id": 44308236, "comment_id": 75623539, "body": "I do not want to use <code>&#39;static</code> here, because of I don&#39;t see why I  should do any restriction. If <code>Vec</code> can hold something, why should I not able to cast it to <code>Any</code>?"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 3, "creation_date": 1496331510, "post_id": 44308236, "comment_id": 75629312, "body": "@user1244932 Check <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/any/trait.Any.html</a>. The <code>&#39;static</code> requirement comes from the <code>Any</code> trait."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1496350719, "post_id": 44308236, "comment_id": 75639736, "body": "<i>it&#39;s a bit more complicated</i> \u2014 this is a bit of an understatement. It&#39;s simply not possible to use <code>Any</code> without static lifetimes at this point in time."}], "tags": [], "owner": {"reputation": 4874, "user_id": 595304, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/e4cc4011841c2a363c66e259c68a567f?s=128&d=identicon&r=PG", "display_name": "evotopid", "link": "https://stackoverflow.com/users/595304/evotopid"}, "is_accepted": true, "score": 1, "last_activity_date": 1496350580, "last_edit_date": 1496350580, "creation_date": 1496321983, "answer_id": 44308236, "question_id": 44307780, "link": "https://stackoverflow.com/questions/44307780/vect-reference-from-trait-and-t-lifetime/44308236#44308236", "title": "Vec&lt;T&gt; reference from trait and T lifetime", "body": "<p>The easiest way is to add the <code>'static</code> constraint to <code>T</code>, i.e.</p>\n\n<pre><code>impl&lt;T&gt; Column for Vec&lt;T&gt;\n    where T: Default + 'static\n{\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n}\n</code></pre>\n\n<p>This means that if <code>T</code> has any lifetime parameters they have to be <code>'static</code>. If you want to also make it work for types with lifetime parameters, it's a bit more complicated. (I'm not sure how that would work.)</p>\n\n<p>By the way, the Rust compiler sometimes provides suggestions like this so reading the error messages is really useful. You can also run <code>rustc --explain E0310</code> (or whatever error code it is) and maybe the explanation is enough to figure out the solution.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 44308236, "answer_count": 1, "score": 2, "last_activity_date": 1496350580, "creation_date": 1496320700, "last_edit_date": 1496350518, "question_id": 44307780, "link": "https://stackoverflow.com/questions/44307780/vect-reference-from-trait-and-t-lifetime", "title": "Vec&lt;T&gt; reference from trait and T lifetime", "body": "<p>I want to work with several <code>Vec</code> at once. These vectors can be specialized with different types. I created a trait:</p>\n\n<pre><code>trait Column {\n    //fn insert\n    //fn remove\n}\n\nimpl&lt;T&gt; Column for Vec&lt;T&gt; // ...\n</code></pre>\n\n<p>I can convert <code>Vec&lt;T1&gt;</code> and <code>Vec&lt;T2&gt;</code> to <code>Box&lt;Column&gt;</code>, but I also need to convert <code>Box&lt;Column&gt;</code> back to <code>Vec</code>. As suggested in <a href=\"https://stackoverflow.com/questions/33687447/how-to-get-a-struct-reference-from-a-boxed-trait\">How to get a struct reference from a boxed trait?</a>, I wrote:</p>\n\n<pre><code>use std::any::Any;\n\ntrait Column {\n    fn as_any(&amp;self) -&gt; &amp;Any;\n}\n\nimpl&lt;T&gt; Column for Vec&lt;T&gt;\n    where T: Default\n{\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self //ERROR!\n    }\n}\n</code></pre>\n\n<p>but this code generates an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n  --&gt; src/main.rs:11:9\n   |\n11 |         self //ERROR!\n   |         ^^^^\n   |\n   = help: consider adding an explicit lifetime bound `T: 'static`...\nnote: ...so that the type `std::vec::Vec&lt;T&gt;` will meet its required lifetime bounds\n  --&gt; src/main.rs:11:9\n   |\n11 |         self //ERROR!\n   |         ^^^^\n</code></pre>\n\n<p>How can I fix this issue?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1496324044, "post_id": 44308768, "comment_id": 75623284, "body": "Thanks for your answer @evotopid. If I remove the <code>Sized</code> constraint, I still can&#39;t get <code>GetType::test_type::&lt;TestTrait&gt;();</code> to compile (see my updated post for the compilation error message).  The only way to work around that is to call <code>GetType::test_type::&lt;Box&lt;TestTrait&gt;&gt;();</code> which is quite cumbersome (I could still parse the string to get what I want but the call is somewhat weird)  I want to get the trait name as a String to be then used in a map, not as a trait object. I read the warning about intrinsics but couldn&#39;t find another way to get that"}, {"owner": {"reputation": 4874, "user_id": 595304, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/e4cc4011841c2a363c66e259c68a567f?s=128&d=identicon&r=PG", "display_name": "evotopid", "link": "https://stackoverflow.com/users/595304/evotopid"}, "reply_to_user": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1496324156, "post_id": 44308768, "comment_id": 75623369, "body": "This seems to be working? <a href=\"https://play.rust-lang.org/?gist=8b8220dc22bfb9ffc070ac9c6748d38e&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "edited": false, "score": 0, "creation_date": 1496324641, "post_id": 44308768, "comment_id": 75623758, "body": "Indeed, I needed to add a <code>&lt;T: ?Sized&gt;</code> constraint to the <code>test_type()</code> function. Great catch, thanks (editing my original question for readers)"}], "tags": [], "owner": {"reputation": 4874, "user_id": 595304, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/e4cc4011841c2a363c66e259c68a567f?s=128&d=identicon&r=PG", "display_name": "evotopid", "link": "https://stackoverflow.com/users/595304/evotopid"}, "is_accepted": true, "score": 3, "last_activity_date": 1496324131, "last_edit_date": 1496324131, "creation_date": 1496323410, "answer_id": 44308768, "question_id": 44305216, "link": "https://stackoverflow.com/questions/44305216/is-there-a-way-to-get-the-type-name-of-a-trait/44308768#44308768", "title": "Is there a way to get the type name of a trait?", "body": "<p>This is actually <a href=\"https://doc.rust-lang.org/error-index.html#the-trait-cannot-require-self-sized\" rel=\"nofollow noreferrer\">explained in the docs</a> pretty well: </p>\n\n<blockquote>\n  <p>Generally, <code>Self : Sized</code> is used to indicate that the trait should not be used as a trait object. If the trait comes from your own crate, consider removing this restriction.</p>\n</blockquote>\n\n<p>If you want to use trait objects, which I guess you want, because otherwise it would not make sense to get the name of a trait, you have to remove the <code>Sized</code> constraint from your trait definition.</p>\n\n<p>That being said, are you sure you need intrinsics? Most likely there is a better way, which would also allow you to use stable Rust in the future.</p>\n"}], "owner": {"reputation": 651, "user_id": 5223795, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ef3abe0f20c34e1325db295fab0c1be9?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/5223795/boris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 968, "favorite_count": 0, "accepted_answer_id": 44308768, "answer_count": 1, "score": 2, "last_activity_date": 1496324823, "creation_date": 1496313294, "last_edit_date": 1496324823, "question_id": 44305216, "link": "https://stackoverflow.com/questions/44305216/is-there-a-way-to-get-the-type-name-of-a-trait", "title": "Is there a way to get the type name of a trait?", "body": "<p>I'm trying to use <code>std::intrinsics::type_name</code> to get the type name of a trait but can't compile it:</p>\n\n<pre><code>#![feature(core_intrinsics)]\n\nuse std::intrinsics::type_name;\n\ntrait TestTrait: Sized {\n    fn test(&amp;self);\n}\n\nstruct MyStruct {}\n\nstruct GetType {}\n\nimpl GetType {\n    fn test_type&lt;T: ?Sized&gt;() {\n        let test = unsafe { type_name::&lt;T&gt;() };\n        println!(\"{:?}\", test);\n    }\n}\n\nfn main() {\n    GetType::test_type::&lt;i32&gt;();\n    GetType::test_type::&lt;MyStruct&gt;();\n    GetType::test_type::&lt;TestTrait&gt;();\n}\n</code></pre>\n\n<p>Here is the error I get from the compiler</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `TestTrait` cannot be made into an object\n  --&gt; src/main.rs:23:30\n   |\n23 |         GetType::test_type::&lt;TestTrait&gt;();\n   |                              ^^^^^^^^^ the trait `TestTrait` cannot be made into an object\n   |\n   = note: the trait cannot require that `Self : Sized`\n</code></pre>\n\n<p>Here is the output of that test when I comment the line <code>GetType::test_type::&lt;TestTrait&gt;();</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"i32\"\n\"MyStruct\"\n</code></pre>\n\n<p>Is there a way to solve this or to get the type name of a trait?</p>\n\n<hr>\n\n<p>Working solution thanks to @evotopid</p>\n\n<pre><code>#![feature(core_intrinsics)]\n\nuse std::intrinsics::type_name;\n\ntrait TestTrait { // &lt;--- remove `: Sized` constraint from here \n    fn test(&amp;self);\n}\n\nstruct MyStruct {}\n\nstruct GetType {}\n\nimpl GetType {\n    fn test_type&lt;T: ?Sized&gt;() { // &lt;--- trick is in that bound\n        let test = unsafe { type_name::&lt;T&gt;() };\n        println!(\"{:?}\", test);\n    }\n}\n\nfn main() {\n    GetType::test_type::&lt;i32&gt;();\n    GetType::test_type::&lt;MyStruct&gt;();\n    GetType::test_type::&lt;TestTrait&gt;();\n}\n</code></pre>\n\n<p>Leading to the following output</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"i32\"\n\"MyStruct\"\n\"TestTrait\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496311250, "post_id": 44303915, "comment_id": 75614012, "body": "What do you get when running <code>rustup toolchain list</code>?"}, {"owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496311334, "post_id": 44303915, "comment_id": 75614082, "body": "@E_net4 I get : &quot;no installed toolchains&quot;"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496312054, "post_id": 44303915, "comment_id": 75614604, "body": "Well, you&#39;ve answered your own question. Install a toolchain (preferably default). The strange part of this is that it wasn&#39;t installed by default."}, {"owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1496312477, "post_id": 44303915, "comment_id": 75614903, "body": "Yeah, as you mentionne, rustup-init.exe isn&#39;t suppose to install a default toolchain ? I can&#39;t even uninstall with &quot;rustup self uninstall&quot; command, the same error appear..."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1496312605, "post_id": 44303915, "comment_id": 75614996, "body": "Can you update your question with everything that you have tried so far?"}], "answers": [{"comments": [{"owner": {"reputation": 1800, "user_id": 1885442, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/1aa1fb55aeb2c530e2d4f13b90abf2e1?s=128&d=identicon&r=PG", "display_name": "Szczepan Ho\u0142yszewski", "link": "https://stackoverflow.com/users/1885442/szczepan-ho%c5%82yszewski"}, "edited": false, "score": 3, "creation_date": 1503780289, "post_id": 44307253, "comment_id": 78758089, "body": "I am 99.9999999999999999999999999999999999999999999% certain that no proxies are even involved in my setup, and I still get the same errors."}, {"owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "reply_to_user": {"reputation": 1800, "user_id": 1885442, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/1aa1fb55aeb2c530e2d4f13b90abf2e1?s=128&d=identicon&r=PG", "display_name": "Szczepan Ho\u0142yszewski", "link": "https://stackoverflow.com/users/1885442/szczepan-ho%c5%82yszewski"}, "edited": false, "score": 0, "creation_date": 1503904206, "post_id": 44307253, "comment_id": 78785505, "body": "I didn&#39;t say that this is THE solution for the problem but it may be one."}, {"owner": {"reputation": 8190, "user_id": 268687, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4fc68d9846bc9e1529997944316bd2c7?s=128&d=identicon&r=PG", "display_name": "Cthutu", "link": "https://stackoverflow.com/users/268687/cthutu"}, "edited": false, "score": 0, "creation_date": 1526503876, "post_id": 44307253, "comment_id": 87775594, "body": "I use cntlm to get past my company&#39;s proxy."}], "tags": [], "owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "is_accepted": false, "score": 7, "last_activity_date": 1496323517, "last_edit_date": 1496323517, "creation_date": 1496319202, "answer_id": 44307253, "question_id": 44303915, "link": "https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup/44307253#44307253", "title": "No default toolchain configured after installing rustup", "body": "<p>The problem is due to my connection and my proxy which didn't allow rustc, cargo, and others to be downloaded.</p>\n\n<p>I thought that the all the executables were all-in-one but apparently not.</p>\n"}, {"comments": [{"owner": {"reputation": 101, "user_id": 698835, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66ea0903016a2c2c42ad67331d245b4f?s=128&d=identicon&r=PG", "display_name": "bgvaughan", "link": "https://stackoverflow.com/users/698835/bgvaughan"}, "edited": false, "score": 1, "creation_date": 1573360651, "post_id": 46864309, "comment_id": 103854414, "body": "I had a network error while installing rust -- my wi-fi connection dropped -- and had this same error message. Running these commands fixed it."}, {"owner": {"reputation": 755, "user_id": 4654175, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zHkjV.png?s=128&g=1", "display_name": "Shubham Sharma", "link": "https://stackoverflow.com/users/4654175/shubham-sharma"}, "edited": false, "score": 1, "creation_date": 1593401154, "post_id": 46864309, "comment_id": 110757713, "body": "I installed rustup using yay, and it didn&#39;t run these commands it seems!"}], "tags": [], "owner": {"reputation": 2299, "user_id": 5462167, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89b8c806be536127f6b868d08e801a2d?s=128&d=identicon&r=PG", "display_name": "BlackGlory", "link": "https://stackoverflow.com/users/5462167/blackglory"}, "is_accepted": true, "score": 187, "last_activity_date": 1508599579, "last_edit_date": 1508599579, "creation_date": 1508596152, "answer_id": 46864309, "question_id": 44303915, "link": "https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup/46864309#46864309", "title": "No default toolchain configured after installing rustup", "body": "<p>If it seems that rustup did not successfully install and configure the stable toolchain, you can do it manually:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup install stable\nrustup default stable\n</code></pre>\n\n<p>After testing, it seems like my incomplete installation may have been caused by a network error. You can also try to reinstall to solve the problem.</p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 1545872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/refDU.jpg?s=128&g=1", "display_name": "FroiD", "link": "https://stackoverflow.com/users/1545872/froid"}, "is_accepted": false, "score": 3, "last_activity_date": 1533644563, "last_edit_date": 1533644563, "creation_date": 1533643406, "answer_id": 51726351, "question_id": 44303915, "link": "https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup/51726351#51726351", "title": "No default toolchain configured after installing rustup", "body": "<p>In my case, I had multirust installed and the following worked for me:</p>\n\n<pre><code>multirust install stable\nmultirust default stable\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 186, "user_id": 8203686, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VlLm5.jpg?s=128&g=1", "display_name": "wangsir", "link": "https://stackoverflow.com/users/8203686/wangsir"}, "is_accepted": false, "score": 1, "last_activity_date": 1577417464, "creation_date": 1577417464, "answer_id": 59495674, "question_id": 44303915, "link": "https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup/59495674#59495674", "title": "No default toolchain configured after installing rustup", "body": "<p>I installed rust by root,but my IDEA works on user,then I installed rust on user,all worked well.</p>\n"}], "owner": {"reputation": 1763, "user_id": 7546477, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/YBxSb.jpg?s=128&g=1", "display_name": "Darkaird", "link": "https://stackoverflow.com/users/7546477/darkaird"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36517, "favorite_count": 16, "accepted_answer_id": 46864309, "answer_count": 4, "score": 94, "last_activity_date": 1614389360, "creation_date": 1496309881, "last_edit_date": 1614389360, "question_id": 44303915, "link": "https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup", "title": "No default toolchain configured after installing rustup", "body": "<p>I installed Rust using <a href=\"https://www.rust-lang.org/en-US/install.html\" rel=\"noreferrer\" title=\"rustup\">rustup</a>, but when I try to enter a Rust command like <code>cargo</code> or <code>rustc</code> in my console, the following error appears:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error: no default toolchain configured\n</code></pre>\n<p>Is this a known issue?</p>\n"}, {"tags": ["loops", "events", "rust"], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496311329, "post_id": 44304227, "comment_id": 75614079, "body": "Thanks a lot for your answer! However, the problem is that recv_event is the thing that takes time, but I need to use that concurrently."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496312285, "post_id": 44304227, "comment_id": 75614778, "body": "@LEGOlord208 I don&#39;t understand what you mean with that. The only safe way to call <code>&amp;mut self</code> methods concurrently is with synchronization mechanisms such as <code>Mutex</code>. Consider improving your question to fit additional requirements."}, {"owner": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496316996, "post_id": 44304227, "comment_id": 75617962, "body": "Ooooooooohhhhhhhhhhhhhhhhhhhh uhh I think you just solved it right there. Maybe it doesn&#39;t have to be mutable! Lemme check.    aww crap. If this is impossible I might as well make a pull request to discord-rs to make it not mutable if that&#39;s possible."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496317152, "post_id": 44304227, "comment_id": 75618078, "body": "You don&#39;t think you&#39;re understanding the problem. But neither can I help if you do not update your question. In the mean time, check out the book on &quot;interior mutability&quot; and &quot;concurrency&quot;."}, {"owner": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496317569, "post_id": 44304227, "comment_id": 75618363, "body": "Not understanding the problem? The problem is that recv_event blocks, and since it&#39;s a mutable reference, I have to lock it for that entire time, which means I can&#39;t do anything at the same time. Correct?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496317763, "post_id": 44304227, "comment_id": 75618475, "body": "Ah, so you wanted multiple threads to receive events at the same time! In that case no, you can&#39;t do that directly. :)"}, {"owner": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "edited": false, "score": 0, "creation_date": 1496318208, "post_id": 44304227, "comment_id": 75618782, "body": "Receive events at the same time as doing something else on the object, yeah.  Thanks a lot for your answer. While it turns out it&#39;s practically impossible, I&#39;ll still accept it since you helped a lot.  Thanks a lot, and cheers!  <a href=\"https://www.reddit.com/r/rust/comments/6e6nwu/accessing_event_loop_via_mutex/diba5c4/\" rel=\"nofollow noreferrer\">P.S. Wrote an update on the original reddit post</a>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 1, "last_activity_date": 1496310653, "creation_date": 1496310653, "answer_id": 44304227, "question_id": 44303258, "link": "https://stackoverflow.com/questions/44303258/accessing-event-loop-via-mutex/44304227#44304227", "title": "Accessing event loop via Mutex", "body": "<p>I would recommend you to read again on <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> and what a lock guard is (see also <a href=\"https://stackoverflow.com/q/32083065/1233251\">Borrow data out of a mutex &quot;borrowed value does not live long enough&quot;</a>, which has a similar problem). The problem is that <code>clone.lock().unwrap().gateway.recv_event()</code> creates a Mutex lock guard that is retained until the full <code>match</code> statement. For instance, let us redefine <code>Something</code>:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Something(i32);\n\nimpl Something {\n    pub fn get_some_event(&amp;self) -&gt; i32 {\n        thread::sleep(Duration::from_secs(1));\n        self.0\n    }\n}\n</code></pre>\n\n<p>This code works:</p>\n\n<pre><code>let variable = Mutex::new(Something(4));\nmatch variable.lock().unwrap().get_some_event() \n{\n    5 =&gt; {\n        variable.lock().unwrap();\n    }\n    _ =&gt; {\n        println!(\"{:?}\", variable); // Still locked\n    }\n}\nprintln!(\"{:?}\", variable); // no longer locked!\n</code></pre>\n\n<p>But this one leads to a deadlock (since the standard mutexes in Rust are not reentrant):</p>\n\n<pre><code>let variable = Mutex::new(Something(5));\nmatch variable.lock().unwrap().get_some_event() \n{\n    5 =&gt; {\n        variable.lock().unwrap(); // deadlock!\n    }\n    _ =&gt; {\n        println!(\"{:?}\", variable);\n    }\n}\nprintln!(\"{:?}\", variable);\n</code></pre>\n\n<p>The solution lies in the fact that you only need the lock while fetching the event (or while performing other actions). While not doing so, make sure that the respective lock is dropped.</p>\n\n<pre><code>let r =  clone.lock().unwrap().gateway.recv_event(); // get result + drop lock\nmatch event {\n    Ok(event) =&gt; {\n         clone.lock().unwrap().state.update(&amp;event) // also ok\n     },\n     ...\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 5069285, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-CHtYUT4yfcw/AAAAAAAAAAI/AAAAAAAAAxs/HLvGsKvwDvI/photo.jpg?sz=128", "display_name": "jD91mZM2", "link": "https://stackoverflow.com/users/5069285/jd91mzm2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 44304227, "answer_count": 1, "score": 0, "last_activity_date": 1496324851, "creation_date": 1496308309, "last_edit_date": 1496324851, "question_id": 44303258, "link": "https://stackoverflow.com/questions/44303258/accessing-event-loop-via-mutex", "title": "Accessing event loop via Mutex", "body": "<p>I'm using the <a href=\"https://crates.io/crates/discord\" rel=\"nofollow noreferrer\">discord</a> crate, which uses event loops. I need to check for events concurrently, while I am taking user input:</p>\n\n<pre><code>let clone = context.clone();\nthread::spawn(\n    move || loop {\n        match clone.lock().unwrap().gateway.recv_event() {\n            Ok(event) =&gt; {\n                // println!(\"Updating state: {:?}\", event);\n                clone.lock().unwrap().state.update(&amp;event)\n            },\n            Err(err) =&gt; {\n                stderr!(\"Error receiving: {}\", err);\n            },\n        }\n    }\n);\n</code></pre>\n\n<p>This doesn't work because it stays locked... So what about</p>\n\n<pre><code>println!(\"Locking\");\nlet mut gateway = {\n    &amp;mut clone.lock().unwrap().gateway\n};\nprintln!(\"Unlocked? {:?}\", clone);\nmatch gateway.recv_event() {\n    Ok(event) =&gt; {\n</code></pre>\n\n<p>This also doesn't seem to work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Locking\nUnlocked? Mutex { &lt;locked&gt; }\n</code></pre>\n\n<p>How would this be solved?</p>\n\n<p>It occurred to me it might just be best if there was a way to access to mutex's contents without locking.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=33133443d69e5ec5600a07c4add01cab&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Example in Playground</a>.</p>\n\n<p><a href=\"https://www.reddit.com/r/rust/comments/6e6nwu/accessing_event_loop_via_mutex/\" rel=\"nofollow noreferrer\">The original question is here on reddit.</a></p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1496312567, "post_id": 44302604, "comment_id": 75614973, "body": "Relevant issue: <a href=\"https://github.com/serde-rs/serde/issues/119\" rel=\"nofollow noreferrer\">serde#119</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1496326044, "creation_date": 1496326044, "answer_id": 44309805, "question_id": 44302604, "link": "https://stackoverflow.com/questions/44302604/how-to-deserialize-a-subfield-of-a-struct-from-the-original-structs-json-with-s/44309805#44309805", "title": "How to deserialize a subfield of a struct from the original struct&#39;s JSON with Serde?", "body": "<p>The <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">Serde documentation</a> has a chapter on how to <a href=\"https://serde.rs/deserialize-struct.html\" rel=\"nofollow noreferrer\">implement custom deserialization</a> when the autogenerated attributes don't fully do what you want. Starting from there, it's not too complicated, just tedious:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\nuse std::fmt;\n\nuse serde::de::{self, Deserialize, Deserializer, Visitor, MapAccess};\n\n#[derive(Debug)]\nstruct TeamSize {\n    pub min: i64,\n    pub max: i64,\n}\n\n#[derive(Debug)]\nstruct Test {\n    pub i: i64,\n    pub team_size: TeamSize,\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Test {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n        where D: Deserializer&lt;'de&gt;\n    {\n        struct TestVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for TestVisitor {\n            type Value = Test;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                formatter.write_str(\"struct Test\")\n            }\n\n            fn visit_map&lt;V&gt;(self, mut map: V) -&gt; Result&lt;Test, V::Error&gt;\n                where V: MapAccess&lt;'de&gt;\n            {\n                let mut min = None;\n                let mut max = None;\n                let mut i = None;\n\n                while let Some(key) = map.next_key()? {\n                    match key {\n                        \"min\" =&gt; {\n                            if min.is_some() {\n                                return Err(de::Error::duplicate_field(\"min\"));\n                            }\n                            min = Some(map.next_value()?);\n                        }\n                        \"max\" =&gt; {\n                            if max.is_some() {\n                                return Err(de::Error::duplicate_field(\"max\"));\n                            }\n                            max = Some(map.next_value()?);\n                        }\n                        \"i\" =&gt; {\n                            if i.is_some() {\n                                return Err(de::Error::duplicate_field(\"i\"));\n                            }\n                            i = Some(map.next_value()?);\n                        }\n                        _ =&gt; {\n                            /* Ignore extra fields */\n                        }\n                    }\n                }\n\n                let min = min.ok_or_else(|| de::Error::missing_field(\"min\"))?;\n                let max = max.ok_or_else(|| de::Error::missing_field(\"max\"))?;\n                let i = i.ok_or_else(|| de::Error::missing_field(\"i\"))?;\n\n                Ok(Test { i, team_size: TeamSize { min, max }})\n            }\n        }\n\n        const FIELDS: &amp;'static [&amp;'static str] = &amp;[\"min\", \"max\", \"i\"];\n        deserializer.deserialize_struct(\"Test\", FIELDS, TestVisitor)\n    }\n}\n\nfn main() {\n    let t: Test = serde_json::from_str(r#\"{\"i\": -2, \"min\": 2, \"max\": 5}\"#).unwrap();\n    assert_eq!(t.i, -2);\n    assert_eq!(t.team_size.min, 2);\n    assert_eq!(t.team_size.max, 5);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 5, "last_activity_date": 1521821496, "last_edit_date": 1521821496, "creation_date": 1496351885, "answer_id": 44317234, "question_id": 44302604, "link": "https://stackoverflow.com/questions/44302604/how-to-deserialize-a-subfield-of-a-struct-from-the-original-structs-json-with-s/44317234#44317234", "title": "How to deserialize a subfield of a struct from the original struct&#39;s JSON with Serde?", "body": "<p>As of Serde 1.0.34, you can now use <a href=\"https://serde.rs/attr-flatten.html\" rel=\"nofollow noreferrer\"><code>#[serde(flatten)]</code></a>:</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nstruct Test {\n    pub i: i64,\n    #[serde(flatten)]\n    pub team_size: TeamSize,\n}\n</code></pre>\n\n<hr>\n\n<p>Before this, the easiest workaround would be to deserialize into a private helper type and restructure it as needed:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_json;\n\nuse serde::{Serialize, Serializer, Deserialize, Deserializer};\n\n#[derive(Debug)]\npub struct TeamSize {\n    pub min: i64,\n    pub max: i64,\n}\n\n#[derive(Debug)]\npub struct Test {\n    pub i: i64,\n    pub team_size: TeamSize,\n}\n\n// Private helper\n#[derive(Serialize, Deserialize)]\nstruct Helper {\n    pub i: i64,\n    pub min: i64,\n    pub max: i64,\n}\n\nimpl Serialize for Test {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n        where S: Serializer\n    {\n        let helper = Helper {\n            i: self.i,\n            min: self.team_size.min,\n            max: self.team_size.max,\n        };\n        helper.serialize(serializer)\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Test {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n        where D: Deserializer&lt;'de&gt;\n    {\n        let helper = Helper::deserialize(deserializer)?;\n        Ok(Test {\n            i: helper.i,\n            team_size: TeamSize {\n                min: helper.min,\n                max: helper.max,\n            },\n        })\n    }\n}\n\nfn main() {\n    let j = r#\" { \"i\": -2, \"min\": 2, \"max\": 5 } \"#;\n\n    let de: Test = serde_json::from_str(j).unwrap();\n    println!(\"{:#?}\", de);\n\n    let ser = serde_json::to_string_pretty(&amp;de).unwrap();\n    println!(\"{}\", ser);\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1262, "favorite_count": 0, "accepted_answer_id": 44317234, "answer_count": 2, "score": 3, "last_activity_date": 1521821496, "creation_date": 1496306515, "last_edit_date": 1496324596, "question_id": 44302604, "link": "https://stackoverflow.com/questions/44302604/how-to-deserialize-a-subfield-of-a-struct-from-the-original-structs-json-with-s", "title": "How to deserialize a subfield of a struct from the original struct&#39;s JSON with Serde?", "body": "<p>I want to have the <code>Test::team_size</code> attribute be deserialized from the data of <code>Test</code> object itself:</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nstruct TeamSize {\n    pub min: i64,\n    pub max: i64,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Test {\n    pub i: i64,\n    pub team_size: TeamSize,\n}\n\nfn main() {\n    let t: Test = serde_json::from_str(r#\"{\"i\": -2, \"min\": 2, \"max\": 5}\"#).unwrap();\n    assert_eq!(t.i, -2);\n    assert_eq!(t.team_size.min, 2);\n    assert_eq!(t.team_size.max, 5);\n}\n</code></pre>\n\n<p>This code does not compile and I don't know how to make Serde do what I want. Is there a way to deserialize <code>team_size</code> in this example from the JSON of the original structure where it is a subfield?</p>\n\n<p>It seems that I want something <strong>like</strong> <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\"><code>#[serde(untagged)]</code></a> but for a struct and for a field and not the whole struct.</p>\n"}, {"tags": ["json", "serialization", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 34, "last_activity_date": 1544889309, "last_edit_date": 1544889309, "creation_date": 1496308857, "answer_id": 44303505, "question_id": 44301748, "link": "https://stackoverflow.com/questions/44301748/how-can-i-deserialize-an-optional-field-with-custom-functions-using-serde/44303505#44303505", "title": "How can I deserialize an optional field with custom functions using Serde?", "body": "<p>The default behaviour of struct deserialization is to assign fields with their respective default value when they are not present in their serialized form. Note that this is different from the <a href=\"https://serde.rs/container-attrs.html#default\" rel=\"noreferrer\">container <code>#[serde(default)]</code> attribute</a>, which fills in the fields with the struct's default value.</p>\n\n<pre><code>#[derive(Debug, PartialEq, Deserialize)]\npub struct Foo&lt;'a&gt; {\n    x: Option&lt;&amp;'a str&gt;,\n}\n\nlet foo: Foo = serde_json::from_str(\"{}\")?;\nassert_eq!(foo, Foo { x: None });\n</code></pre>\n\n<p>However, this rule changes when we use another deserializer function (<a href=\"https://serde.rs/variant-attrs.html#deserialize_with\" rel=\"noreferrer\"><code>#[serde(deserialize_with = \"path\")]</code></a>). A field of type <code>Option</code> here no longer tells the deserializer that the field may not exist. Rather, it suggests that there is a field with possible empty or null content (<code>none</code> in Serde terms). In <code>serde_json</code> for instance, <code>Option&lt;String&gt;</code> is the JavaScript equivalent to \"either <code>null</code> or <code>string</code>\" (<code>null | string</code> in TypeScript / Flow notation). This code below works fine with the given definition and date deserializer:</p>\n\n<pre><code>let test: Test = serde_json::from_str(r#\"{\"i\": 5, \"date\": null}\"#)?;\nassert_eq!(test.i, 5);\nassert_eq!(test.date, None);\n</code></pre>\n\n<p>Luckily, the deserialization process can become more permissive just by adding the <code>serde(default)</code> attribute (<code>Option::default</code> yields <code>None</code>):</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nstruct Test {\n    pub i: u64,\n\n    #[serde(default)]\n    #[serde(with = \"date_serde\")]\n    pub date: Option&lt;NaiveDate&gt;,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=78846a0948962085639621d5d6be1ec6\" rel=\"noreferrer\">Playground</a></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44205435/1233251Z\">How to deserialize a JSON file which contains null values using Serde?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44331037/1233251\">How can I distinguish between a deserialized field that is missing and one that is null?</a></li>\n</ul>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11795, "favorite_count": 7, "accepted_answer_id": 44303505, "answer_count": 1, "score": 28, "last_activity_date": 1544889309, "creation_date": 1496303825, "last_edit_date": 1496326298, "question_id": 44301748, "link": "https://stackoverflow.com/questions/44301748/how-can-i-deserialize-an-optional-field-with-custom-functions-using-serde", "title": "How can I deserialize an optional field with custom functions using Serde?", "body": "<p>I want to serialize and deserialize a <code>chrono::NaiveDate</code> with custom functions, but the Serde book does not cover this functionality and the code docs also do not help.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_json;\nextern crate chrono;\n\nuse chrono::NaiveDate;\n\n\nmod date_serde {\n    use chrono::NaiveDate;\n    use serde::{self, Deserialize, Serializer, Deserializer};\n\n    pub fn serialize&lt;S&gt;(date: &amp;Option&lt;NaiveDate&gt;, s: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where S: Serializer {\n        if let Some(ref d) = *date {\n            return s.serialize_str(&amp;d.format(\"%Y-%m-%d\").to_string())\n        }\n        s.serialize_none()\n    }\n\n    pub fn deserialize&lt;'de, D&gt;(deserializer: D)\n        -&gt; Result&lt;Option&lt;NaiveDate&gt;, D::Error&gt;\n        where D: Deserializer&lt;'de&gt; {\n        let s: Option&lt;String&gt; = Option::deserialize(deserializer)?;\n        if let Some(s) = s {\n            return Ok(Some(NaiveDate::parse_from_str(&amp;s, \"%Y-%m-%d\").map_err(serde::de::Error::custom)?))\n        }\n\n        Ok(None)\n    }\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Test {\n    pub i: u64,\n    #[serde(with = \"date_serde\")]\n    pub date: Option&lt;NaiveDate&gt;,\n}\n\nfn main() {\n    let mut test: Test = serde_json::from_str(r#\"{\"i\": 3, \"date\": \"2015-02-03\"}\"#).unwrap();\n    assert_eq!(test.i, 3);\n    assert_eq!(test.date, Some(NaiveDate::from_ymd(2015, 02, 03)));\n    test = serde_json::from_str(r#\"{\"i\": 5}\"#).unwrap();\n    assert_eq!(test.i, 5);\n    assert_eq!(test.date, None);\n}\n</code></pre>\n\n<p>I know that <code>Option&lt;chrono::NaiveDate&gt;</code> can be easily deserialized by Serde because Chrono has Serde support, <strong>but</strong> I'm trying to learn Serde so I want to implement it myself. When I run this code I have a error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ErrorImpl { code: Message(\"missing field `date`\"), line: 1, column: 8 }', /checkout/src/libcore/result.rs:859\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n"}, {"tags": ["unit-testing", "testing", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "edited": false, "score": 0, "creation_date": 1496291370, "post_id": 44298480, "comment_id": 75602693, "body": "Ah okay, that actually answers my question. All I really needed to do was run my subset of tests (I&#39;m trying to run valgrind to detect memory leaks). Passing hash::vec to the binary did exactly what I needed. Thanks!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1496290708, "creation_date": 1496290708, "answer_id": 44298480, "question_id": 44298242, "link": "https://stackoverflow.com/questions/44298242/compile-specific-tests-into-binary/44298480#44298480", "title": "Compile specific tests into binary", "body": "<p>You can't, at least not directly.</p>\n\n<p>In the case of <code>cargo test hash::vec</code>, the <code>hash::vec</code> is just a substring matched against the full path of each test function <em>when the test runner is executed</em>.  That is, it has absolutely no impact whatsoever on which tests get compiled, only on which tests run.  In fact, this parameter is passed to the test runner itself; Cargo doesn't even interpret it itself.</p>\n\n<p>In the case of <code>--test NAME</code>, <code>NAME</code> is the name of the test <em>source</em>.  As in, passing <code>--test blah</code> tells Cargo to build and run the tests in <code>tests/blah.rs</code>.  It's the same sort of argument as <code>--bin NAME</code> (for <code>src/bin/NAME.rs</code>) and <code>--example NAME</code> (for <code>examples/NAME.rs</code>).</p>\n\n<p>If you really want to only compile a particular subset of tests, the only way I can think of is to use conditional compilation via features.  You'd need a package feature for each subset of tests you want to be able to enable/disable.</p>\n"}], "owner": {"reputation": 7937, "user_id": 1413793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8c593877e04020316731318e597c80e4?s=128&d=identicon&r=PG&f=1", "display_name": "user1413793", "link": "https://stackoverflow.com/users/1413793/user1413793"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 44298480, "answer_count": 1, "score": 0, "last_activity_date": 1496324481, "creation_date": 1496289120, "last_edit_date": 1496324481, "question_id": 44298242, "link": "https://stackoverflow.com/questions/44298242/compile-specific-tests-into-binary", "title": "Compile specific tests into binary", "body": "<p>I would like to compile a binary which runs a certain subset of tests. When I run the following, it works:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ubuntu@ubuntu-xenial:/ox$ cargo test hash::vec\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11 secs\n     Running target/debug/deps/ox-824a031ff1732165\n\nrunning 9 tests\ntest hash::vec::test_hash_entry::test_get_offset_tombstone ... ok\ntest hash::vec::test_hash_entry::test_get_offset_value ... ok\ntest hash::vec::test_hash_table::test_delete ... ok\ntest hash::vec::test_hash_table::test_delete_and_set ... ok\ntest hash::vec::test_hash_table::test_get_from_hash ... ok\ntest hash::vec::test_hash_table::test_get_non_existant_from_hash ... ok\ntest hash::vec::test_hash_table::test_override ... ok\ntest hash::vec::test_hash_table::test_grow_hash ... ok\ntest hash::vec::test_hash_table::test_set_after_filled_with_tombstones ... ok\n\ntest result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 8 filtered out\n</code></pre>\n\n<p>When I try to run <code>target/debug/deps/ox-824a031ff1732165</code>, it runs all my tests, not just the 9 specified in <code>hash::vec</code>.</p>\n\n<p>I've tried to run <code>cargo rustc --test hash::vec</code> but I get\n<code>error: no test target named</code>hash::vec<code>.</code>cargo rustc -- --test<code>works, but creates a binary that runs all tests. If I try</code>cargo rustc -- --test hash::vec`, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling ox v0.1.0 (file:///ox)\nerror: multiple input filenames provided\n\nerror: Could not compile `ox`.\n</code></pre>\n\n<p><code>cargo rustc -h</code> says that you can pass NAME with the <code>--test</code> flag (<code>--test NAME              Build only the specified test target</code>), so I'm wondering what \"NAME\" is and how to pass it in so I get a binary that only runs the specified 9 tests in <code>hash::vec</code>.</p>\n"}]